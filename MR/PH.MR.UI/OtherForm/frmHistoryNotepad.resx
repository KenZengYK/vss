<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAA+
        DQAAAk1TRnQBSQFMAgEBBgEAAQkBAAEEAQABEAEAARABAAT/AQkBAAj/AUIBTQE2AQQGAAE2AQQCAAEo
        AwABQAMAASADAAEBAQABCAYAAQgYAAGAAgABgAMAAoABAAGAAwABgAEAAYABAAKAAgADwAEAAcAB3AHA
        AQAB8AHKAaYBAAEzBQABMwEAATMBAAEzAQACMwIAAxYBAAMcAQADIgEAAykBAANVAQADTQEAA0IBAAM5
        AQABgAF8Af8BAAJQAf8BAAGTAQAB1gEAAf8B7AHMAQABxgHWAe8BAAHWAucBAAGQAakBrQIAAf8BMwMA
        AWYDAAGZAwABzAIAATMDAAIzAgABMwFmAgABMwGZAgABMwHMAgABMwH/AgABZgMAAWYBMwIAAmYCAAFm
        AZkCAAFmAcwCAAFmAf8CAAGZAwABmQEzAgABmQFmAgACmQIAAZkBzAIAAZkB/wIAAcwDAAHMATMCAAHM
        AWYCAAHMAZkCAALMAgABzAH/AgAB/wFmAgAB/wGZAgAB/wHMAQABMwH/AgAB/wEAATMBAAEzAQABZgEA
        ATMBAAGZAQABMwEAAcwBAAEzAQAB/wEAAf8BMwIAAzMBAAIzAWYBAAIzAZkBAAIzAcwBAAIzAf8BAAEz
        AWYCAAEzAWYBMwEAATMCZgEAATMBZgGZAQABMwFmAcwBAAEzAWYB/wEAATMBmQIAATMBmQEzAQABMwGZ
        AWYBAAEzApkBAAEzAZkBzAEAATMBmQH/AQABMwHMAgABMwHMATMBAAEzAcwBZgEAATMBzAGZAQABMwLM
        AQABMwHMAf8BAAEzAf8BMwEAATMB/wFmAQABMwH/AZkBAAEzAf8BzAEAATMC/wEAAWYDAAFmAQABMwEA
        AWYBAAFmAQABZgEAAZkBAAFmAQABzAEAAWYBAAH/AQABZgEzAgABZgIzAQABZgEzAWYBAAFmATMBmQEA
        AWYBMwHMAQABZgEzAf8BAAJmAgACZgEzAQADZgEAAmYBmQEAAmYBzAEAAWYBmQIAAWYBmQEzAQABZgGZ
        AWYBAAFmApkBAAFmAZkBzAEAAWYBmQH/AQABZgHMAgABZgHMATMBAAFmAcwBmQEAAWYCzAEAAWYBzAH/
        AQABZgH/AgABZgH/ATMBAAFmAf8BmQEAAWYB/wHMAQABzAEAAf8BAAH/AQABzAEAApkCAAGZATMBmQEA
        AZkBAAGZAQABmQEAAcwBAAGZAwABmQIzAQABmQEAAWYBAAGZATMBzAEAAZkBAAH/AQABmQFmAgABmQFm
        ATMBAAGZATMBZgEAAZkBZgGZAQABmQFmAcwBAAGZATMB/wEAApkBMwEAApkBZgEAA5kBAAKZAcwBAAKZ
        Af8BAAGZAcwCAAGZAcwBMwEAAWYBzAFmAQABmQHMAZkBAAGZAswBAAGZAcwB/wEAAZkB/wIAAZkB/wEz
        AQABmQHMAWYBAAGZAf8BmQEAAZkB/wHMAQABmQL/AQABzAMAAZkBAAEzAQABzAEAAWYBAAHMAQABmQEA
        AcwBAAHMAQABmQEzAgABzAIzAQABzAEzAWYBAAHMATMBmQEAAcwBMwHMAQABzAEzAf8BAAHMAWYCAAHM
        AWYBMwEAAZkCZgEAAcwBZgGZAQABzAFmAcwBAAGZAWYB/wEAAcwBmQIAAcwBmQEzAQABzAGZAWYBAAHM
        ApkBAAHMAZkBzAEAAcwBmQH/AQACzAIAAswBMwEAAswBZgEAAswBmQEAA8wBAALMAf8BAAHMAf8CAAHM
        Af8BMwEAAZkB/wFmAQABzAH/AZkBAAHMAf8BzAEAAcwC/wEAAcwBAAEzAQAB/wEAAWYBAAH/AQABmQEA
        AcwBMwIAAf8CMwEAAf8BMwFmAQAB/wEzAZkBAAH/ATMBzAEAAf8BMwH/AQAB/wFmAgAB/wFmATMBAAHM
        AmYBAAH/AWYBmQEAAf8BZgHMAQABzAFmAf8BAAH/AZkCAAH/AZkBMwEAAf8BmQFmAQAB/wKZAQAB/wGZ
        AcwBAAH/AZkB/wEAAf8BzAIAAf8BzAEzAQAB/wHMAWYBAAH/AcwBmQEAAf8CzAEAAf8BzAH/AQAC/wEz
        AQABzAH/AWYBAAL/AZkBAAL/AcwBAAJmAf8BAAFmAf8BZgEAAWYC/wEAAf8CZgEAAf8BZgH/AQAC/wFm
        AQABIQEAAaUBAANfAQADdwEAA4YBAAOWAQADywEAA7IBAAPXAQAD3QEAA+MBAAPqAQAD8QEAA/gBAAHw
        AfsB/wEAAaQCoAEAA4ADAAH/AgAB/wMAAv8BAAH/AwAB/wEAAf8BAAL/AgAD/wMADmYxAAHPArUB6gHv
        BQABrgOGAWYDAAFQCkMjAAHPArUB6gEQARID/wHzAa4DhgFmAwABcgGXAVYCVQFPAS4DLQFDIwABzwK1
        AeoBDgERAf8B9AHzAQkBrgGLAoYBZgMAAXIBlwFJAv8BVQFJAv8BLQFDIwABzwEJAbUI6gGuAYsBhgFm
        AwABcgGXAUkBvAH/AVUBSQG8Af8BLQFDIwABzwMJBLUDzwKuAYsBZgMAAXIBeAFJArwBVgFJArwBLgFD
        IwABzwHdAwkEtQG0As8CrgFmAwABlwGYA0kBlwNJAU8BQyMAAc8C3QrPAa4BZgMAAZcBngGYAXgDlwFW
        AlUBQyMAAc8B3QHPAf8B9AHzAfIB8QLwAgkCzwFmAwABlwGfAZ4BmAF4A5cBVgFVAUMjAAHPAd0BzwL/
        AfQC8wLxAfABvALPAWYDAAGXAZ8BSQL/AXgBSQL/AVYBQyMAAc8B3QHPA/8B9ALzAvEB8AHPAbQBZgMA
        AZcBnwFJAbwB/wGYAUkBvAH/AZcBQyMAAc8B3QHPBP8B9ALzAvEBzwG1AWYDAAGXAZ8BSQK8AZ4BSQK8
        AZcBQyMAAc8B3QHPBf8B9ALzAfEBzwG1AWYDAAGXAZ8DSQGfA0kBlwFDIwABzwHdAc8G/wH0AvMBzwEO
        AWYDAAGXBp8BngGYAXgBQyMAAc8B3QHPB/8B9AHzAc8BtQFmAwAJlwJyIwAPzzAABLwB8Bu8EBsQ/wO8
        AvAC7wG8AfAJvALwAbwC8AK8AfACvALwArwCGwumAxsK/wGmBf8CvAHwAbwB7AETARQB7AG8AfAHvALw
        Ae8B7AH3AvEB8AG8AZIB7AEAAfIB8AG8ARsBtAncArQBpgIbCv8CpgT/AbwC8AHtAUMCZQERAewIvAHx
        AfcBFAEiARABkgHwAbwB6wERAQsBFAEAAfABvAy0AaYBtAGmARsD/wqmA/8BvAHwAZIBFQFlAs0BZQER
        Ae0B8Ae8ARQBHgEgAR4BDgHsAW0BDgEfASABCwESArwBtAH/CtwBtAKmARsK/wKmBP8B8gHvARUBZQGs
        Ac0CzgFlAREBkgHxBbwB9wEeAUYCRwEeAQABDgEfAvkBIAFEAfcBvAG0Af8E3AEzAS0B3AH5ASAB3AK0
        AaYBGwr/AaYF/wHxARQBZQHHAc0EzgFlARAB7wHxBbwBkwRHAQEBHwP5AUcBkwK8AbQL/wO0AaYQ/wHt
        AQoBxwLNBc4BDQEPAe8B8AW8AZQBFwdHAZQB8AK8AbQB/wrcA7QBpge0Av8BUgYqAbwBzwHOAc0BzgEJ
        Ad0B1APOAQ0BQwHvAfADvAHwAbwBbwVHAUYBkwHwAfECvAEbCrQC3AK0AaYBtAX/AbQC/wFSBaABKgK8
        AdUBzgEJAvABCQHVAc4B1AHOAUMBFAHvAfABvAHwAbwBbQEPAUYBFwNHAUUBDwGSAfEB8AG8AhsBtAj/
        AbQC3AG0AaYBtAX/AbQC/wFSBaABKgO8AQkB8AK8AfABCQHVAdQB1QGtAUMBEwK8AfEB7AEQAUUEFwJH
        AR4BEAH3AfABvAMbAbQB/wXyAf8DtAGmARsBtAX/AbQC/wFSBaABKgi8AfABCQPVAa0BFQHsAbwBAAEV
        AUUF4wMXASMBFAEAAbwDGwG0CP8BtAMbAbQF/wG0Av8BUgWgASoJvAHwAQkD1QHPAfcBvAHvAW4D4wEW
        Ab0BlAHjAxcBbgHvAbwEGwG0Af8F8gH/AbQDGwG0Av8EtAL/AVICoARSCrwB8AHdAtUBCQO8AQABlAIW
        Ab0B8AG8AZQC4wEWARoCvAQbAbQI/wG0AhsBtAL/AbQB8gG0A/8BUgKgAVIBwwEqAf8LvAHwAd0BCQHw
        A7wB8AEaAZQBGgHzAfECvAG3ARYBGgHwArwFGwm0AhsBtAL/ArQE/wFSAqABUgEqAv8gvBAbBLQF/wRS
        A/8BQgFNAT4HAAE+AwABKAMAAUADAAEgAwABAQEAAQEGAAEBFgAD/wEAAcABAAL/BAABgwLgAQMEAAGA
        AQAB4AEDBAABgAEAAeABAwQAAYABAAHgAQMEAAGAAQAB4AEDBAABgAEAAeABAwQAAYABAAHgAQMEAAGA
        AQAB4AEDBAABgAEAAeABAwQAAYABAAHgAQMEAAGAAQAB4AEDBAABgAEAAeABAwQAAYABAAHgAQMEAAGA
        AQAB4AEDBAABgAEAAv8XAAEIBwABBD4AAUABAg4AASAVAAs=
</value>
  </data>
</root>