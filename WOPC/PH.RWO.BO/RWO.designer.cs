#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.8806
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PH.RWO.BO
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.Runtime.Serialization;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="PH.RWO1")]
	public partial class RWOSOPCDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertWOSKURatio(WOSKURatio instance);
    partial void UpdateWOSKURatio(WOSKURatio instance);
    partial void DeleteWOSKURatio(WOSKURatio instance);
    partial void InsertCustomerCommission(CustomerCommission instance);
    partial void UpdateCustomerCommission(CustomerCommission instance);
    partial void DeleteCustomerCommission(CustomerCommission instance);
    partial void InsertRoundWorkOrderDetail(RoundWorkOrderDetail instance);
    partial void UpdateRoundWorkOrderDetail(RoundWorkOrderDetail instance);
    partial void DeleteRoundWorkOrderDetail(RoundWorkOrderDetail instance);
    partial void InsertRoundWorkOrderDetailII(RoundWorkOrderDetailII instance);
    partial void UpdateRoundWorkOrderDetailII(RoundWorkOrderDetailII instance);
    partial void DeleteRoundWorkOrderDetailII(RoundWorkOrderDetailII instance);
    partial void InsertRoundWorkOrderDetailTemp1(RoundWorkOrderDetailTemp1 instance);
    partial void UpdateRoundWorkOrderDetailTemp1(RoundWorkOrderDetailTemp1 instance);
    partial void DeleteRoundWorkOrderDetailTemp1(RoundWorkOrderDetailTemp1 instance);
    partial void InsertRwoOrder(RwoOrder instance);
    partial void UpdateRwoOrder(RwoOrder instance);
    partial void DeleteRwoOrder(RwoOrder instance);
    partial void InsertWorkOrderSKU(WorkOrderSKU instance);
    partial void UpdateWorkOrderSKU(WorkOrderSKU instance);
    partial void DeleteWorkOrderSKU(WorkOrderSKU instance);
    partial void InsertRWOIITimeRule(RWOIITimeRule instance);
    partial void UpdateRWOIITimeRule(RWOIITimeRule instance);
    partial void DeleteRWOIITimeRule(RWOIITimeRule instance);
    partial void InsertCycleTimeProcess(CycleTimeProcess instance);
    partial void UpdateCycleTimeProcess(CycleTimeProcess instance);
    partial void DeleteCycleTimeProcess(CycleTimeProcess instance);
    partial void InsertWorkOrderVersion(WorkOrderVersion instance);
    partial void UpdateWorkOrderVersion(WorkOrderVersion instance);
    partial void DeleteWorkOrderVersion(WorkOrderVersion instance);
    partial void InsertRight(Right instance);
    partial void UpdateRight(Right instance);
    partial void DeleteRight(Right instance);
    partial void InsertPackagingMaterial(PackagingMaterial instance);
    partial void UpdatePackagingMaterial(PackagingMaterial instance);
    partial void DeletePackagingMaterial(PackagingMaterial instance);
    partial void InsertCustomerBrandCategory(CustomerBrandCategory instance);
    partial void UpdateCustomerBrandCategory(CustomerBrandCategory instance);
    partial void DeleteCustomerBrandCategory(CustomerBrandCategory instance);
    partial void InsertCustomerCup(CustomerCup instance);
    partial void UpdateCustomerCup(CustomerCup instance);
    partial void DeleteCustomerCup(CustomerCup instance);
    partial void InsertCustomerLabeling(CustomerLabeling instance);
    partial void UpdateCustomerLabeling(CustomerLabeling instance);
    partial void DeleteCustomerLabeling(CustomerLabeling instance);
    partial void InsertCustomerPacking(CustomerPacking instance);
    partial void UpdateCustomerPacking(CustomerPacking instance);
    partial void DeleteCustomerPacking(CustomerPacking instance);
    partial void InsertWorkOrderCategoryCup(WorkOrderCategoryCup instance);
    partial void UpdateWorkOrderCategoryCup(WorkOrderCategoryCup instance);
    partial void DeleteWorkOrderCategoryCup(WorkOrderCategoryCup instance);
    partial void InsertWorkOrderCategoryLabeling(WorkOrderCategoryLabeling instance);
    partial void UpdateWorkOrderCategoryLabeling(WorkOrderCategoryLabeling instance);
    partial void DeleteWorkOrderCategoryLabeling(WorkOrderCategoryLabeling instance);
    partial void InsertWorkOrderCategoryPacking(WorkOrderCategoryPacking instance);
    partial void UpdateWorkOrderCategoryPacking(WorkOrderCategoryPacking instance);
    partial void DeleteWorkOrderCategoryPacking(WorkOrderCategoryPacking instance);
    partial void InsertWOChooseFW(WOChooseFW instance);
    partial void UpdateWOChooseFW(WOChooseFW instance);
    partial void DeleteWOChooseFW(WOChooseFW instance);
    partial void InsertRoundWorkOrderII(RoundWorkOrderII instance);
    partial void UpdateRoundWorkOrderII(RoundWorkOrderII instance);
    partial void DeleteRoundWorkOrderII(RoundWorkOrderII instance);
    partial void InsertWorkOrderColor(WorkOrderColor instance);
    partial void UpdateWorkOrderColor(WorkOrderColor instance);
    partial void DeleteWorkOrderColor(WorkOrderColor instance);
    partial void InsertRWOChooseFW(RWOChooseFW instance);
    partial void UpdateRWOChooseFW(RWOChooseFW instance);
    partial void DeleteRWOChooseFW(RWOChooseFW instance);
    partial void InsertProject(Project instance);
    partial void UpdateProject(Project instance);
    partial void DeleteProject(Project instance);
    partial void InsertAmendMaster(AmendMaster instance);
    partial void UpdateAmendMaster(AmendMaster instance);
    partial void DeleteAmendMaster(AmendMaster instance);
    partial void InsertAmendDetail(AmendDetail instance);
    partial void UpdateAmendDetail(AmendDetail instance);
    partial void DeleteAmendDetail(AmendDetail instance);
    partial void InsertRoundWorkOrder(RoundWorkOrder instance);
    partial void UpdateRoundWorkOrder(RoundWorkOrder instance);
    partial void DeleteRoundWorkOrder(RoundWorkOrder instance);
    partial void InsertLWPM_Calendar(LWPM_Calendar instance);
    partial void UpdateLWPM_Calendar(LWPM_Calendar instance);
    partial void DeleteLWPM_Calendar(LWPM_Calendar instance);
    partial void InsertShipmentSchedule(ShipmentSchedule instance);
    partial void UpdateShipmentSchedule(ShipmentSchedule instance);
    partial void DeleteShipmentSchedule(ShipmentSchedule instance);
    partial void InsertWorkOrderCategory(WorkOrderCategory instance);
    partial void UpdateWorkOrderCategory(WorkOrderCategory instance);
    partial void DeleteWorkOrderCategory(WorkOrderCategory instance);
    partial void InsertProjectDeleteLog(ProjectDeleteLog instance);
    partial void UpdateProjectDeleteLog(ProjectDeleteLog instance);
    partial void DeleteProjectDeleteLog(ProjectDeleteLog instance);
    partial void InsertStyle(Style instance);
    partial void UpdateStyle(Style instance);
    partial void DeleteStyle(Style instance);
    partial void InsertEmail(Email instance);
    partial void UpdateEmail(Email instance);
    partial void DeleteEmail(Email instance);
    partial void InsertCustomerCode(CustomerCode instance);
    partial void UpdateCustomerCode(CustomerCode instance);
    partial void DeleteCustomerCode(CustomerCode instance);
    partial void InsertWorkOrder(WorkOrder instance);
    partial void UpdateWorkOrder(WorkOrder instance);
    partial void DeleteWorkOrder(WorkOrder instance);
    partial void InsertWONotepadReason(WONotepadReason instance);
    partial void UpdateWONotepadReason(WONotepadReason instance);
    partial void DeleteWONotepadReason(WONotepadReason instance);
    partial void InsertWorkOrderSample(WorkOrderSample instance);
    partial void UpdateWorkOrderSample(WorkOrderSample instance);
    partial void DeleteWorkOrderSample(WorkOrderSample instance);
    partial void InsertPaymentTerm(PaymentTerm instance);
    partial void UpdatePaymentTerm(PaymentTerm instance);
    partial void DeletePaymentTerm(PaymentTerm instance);
    partial void InsertPaymentTermsDetail(PaymentTermsDetail instance);
    partial void UpdatePaymentTermsDetail(PaymentTermsDetail instance);
    partial void DeletePaymentTermsDetail(PaymentTermsDetail instance);
    partial void InsertLWPM_CustomerProfile(LWPM_CustomerProfile instance);
    partial void UpdateLWPM_CustomerProfile(LWPM_CustomerProfile instance);
    partial void DeleteLWPM_CustomerProfile(LWPM_CustomerProfile instance);
    #endregion
		
		public RWOSOPCDataContext() : 
				base(global::PH.RWO.BO.Properties.Settings.Default.PH_RWO1ConnectionString20, mappingSource)
		{
			OnCreated();
		}
		
		public RWOSOPCDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RWOSOPCDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RWOSOPCDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RWOSOPCDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<WOSKURatio> WOSKURatios
		{
			get
			{
				return this.GetTable<WOSKURatio>();
			}
		}
		
		public System.Data.Linq.Table<CustomerCommission> CustomerCommissions
		{
			get
			{
				return this.GetTable<CustomerCommission>();
			}
		}
		
		public System.Data.Linq.Table<RoundWorkOrderDetail> RoundWorkOrderDetails
		{
			get
			{
				return this.GetTable<RoundWorkOrderDetail>();
			}
		}
		
		public System.Data.Linq.Table<RoundWorkOrderDetailII> RoundWorkOrderDetailIIs
		{
			get
			{
				return this.GetTable<RoundWorkOrderDetailII>();
			}
		}
		
		public System.Data.Linq.Table<RoundWorkOrderDetailTemp1> RoundWorkOrderDetailTemp1s
		{
			get
			{
				return this.GetTable<RoundWorkOrderDetailTemp1>();
			}
		}
		
		public System.Data.Linq.Table<RwoOrder> RwoOrders
		{
			get
			{
				return this.GetTable<RwoOrder>();
			}
		}
		
		public System.Data.Linq.Table<WorkOrderSKU> WorkOrderSKUs
		{
			get
			{
				return this.GetTable<WorkOrderSKU>();
			}
		}
		
		public System.Data.Linq.Table<View_AS400RwoColorSize> View_AS400RwoColorSizes
		{
			get
			{
				return this.GetTable<View_AS400RwoColorSize>();
			}
		}
		
		public System.Data.Linq.Table<View_AS400RwoColorSizeQty> View_AS400RwoColorSizeQties
		{
			get
			{
				return this.GetTable<View_AS400RwoColorSizeQty>();
			}
		}
		
		public System.Data.Linq.Table<View_Calendar> View_Calendars
		{
			get
			{
				return this.GetTable<View_Calendar>();
			}
		}
		
		public System.Data.Linq.Table<view_CustomerProfile> view_CustomerProfiles
		{
			get
			{
				return this.GetTable<view_CustomerProfile>();
			}
		}
		
		public System.Data.Linq.Table<View_Export> View_Exports
		{
			get
			{
				return this.GetTable<View_Export>();
			}
		}
		
		public System.Data.Linq.Table<View_RwoColorSize> View_RwoColorSizes
		{
			get
			{
				return this.GetTable<View_RwoColorSize>();
			}
		}
		
		public System.Data.Linq.Table<View_RwoColorSizeQty> View_RwoColorSizeQties
		{
			get
			{
				return this.GetTable<View_RwoColorSizeQty>();
			}
		}
		
		public System.Data.Linq.Table<View_WeekOrder> View_WeekOrders
		{
			get
			{
				return this.GetTable<View_WeekOrder>();
			}
		}
		
		public System.Data.Linq.Table<View_WOc_RWO> View_WOc_RWOs
		{
			get
			{
				return this.GetTable<View_WOc_RWO>();
			}
		}
		
		public System.Data.Linq.Table<View_WOc_RWO_PPW> View_WOc_RWO_PPWs
		{
			get
			{
				return this.GetTable<View_WOc_RWO_PPW>();
			}
		}
		
		public System.Data.Linq.Table<View_WorkOrderCustomerProfile> View_WorkOrderCustomerProfiles
		{
			get
			{
				return this.GetTable<View_WorkOrderCustomerProfile>();
			}
		}
		
		public System.Data.Linq.Table<RWOIITimeRule> RWOIITimeRules
		{
			get
			{
				return this.GetTable<RWOIITimeRule>();
			}
		}
		
		public System.Data.Linq.Table<CycleTimeProcess> CycleTimeProcesses
		{
			get
			{
				return this.GetTable<CycleTimeProcess>();
			}
		}
		
		public System.Data.Linq.Table<WorkOrderVersion> WorkOrderVersions
		{
			get
			{
				return this.GetTable<WorkOrderVersion>();
			}
		}
		
		public System.Data.Linq.Table<Right> Rights
		{
			get
			{
				return this.GetTable<Right>();
			}
		}
		
		public System.Data.Linq.Table<View_ConfirmWorkFlow> View_ConfirmWorkFlows
		{
			get
			{
				return this.GetTable<View_ConfirmWorkFlow>();
			}
		}
		
		public System.Data.Linq.Table<View_ConfirmWorkFlow1> View_ConfirmWorkFlow1s
		{
			get
			{
				return this.GetTable<View_ConfirmWorkFlow1>();
			}
		}
		
		public System.Data.Linq.Table<PackagingMaterial> PackagingMaterials
		{
			get
			{
				return this.GetTable<PackagingMaterial>();
			}
		}
		
		public System.Data.Linq.Table<CustomerBrandCategory> CustomerBrandCategories
		{
			get
			{
				return this.GetTable<CustomerBrandCategory>();
			}
		}
		
		public System.Data.Linq.Table<CustomerCup> CustomerCups
		{
			get
			{
				return this.GetTable<CustomerCup>();
			}
		}
		
		public System.Data.Linq.Table<CustomerLabeling> CustomerLabelings
		{
			get
			{
				return this.GetTable<CustomerLabeling>();
			}
		}
		
		public System.Data.Linq.Table<CustomerPacking> CustomerPackings
		{
			get
			{
				return this.GetTable<CustomerPacking>();
			}
		}
		
		public System.Data.Linq.Table<WorkOrderCategoryCup> WorkOrderCategoryCups
		{
			get
			{
				return this.GetTable<WorkOrderCategoryCup>();
			}
		}
		
		public System.Data.Linq.Table<WorkOrderCategoryLabeling> WorkOrderCategoryLabelings
		{
			get
			{
				return this.GetTable<WorkOrderCategoryLabeling>();
			}
		}
		
		public System.Data.Linq.Table<WorkOrderCategoryPacking> WorkOrderCategoryPackings
		{
			get
			{
				return this.GetTable<WorkOrderCategoryPacking>();
			}
		}
		
		public System.Data.Linq.Table<WOChooseFW> WOChooseFWs
		{
			get
			{
				return this.GetTable<WOChooseFW>();
			}
		}
		
		public System.Data.Linq.Table<RoundWorkOrderII> RoundWorkOrderIIs
		{
			get
			{
				return this.GetTable<RoundWorkOrderII>();
			}
		}
		
		public System.Data.Linq.Table<WorkOrderColor> WorkOrderColors
		{
			get
			{
				return this.GetTable<WorkOrderColor>();
			}
		}
		
		public System.Data.Linq.Table<View_RejectWorkFlow> View_RejectWorkFlows
		{
			get
			{
				return this.GetTable<View_RejectWorkFlow>();
			}
		}
		
		public System.Data.Linq.Table<RWOChooseFW> RWOChooseFWs
		{
			get
			{
				return this.GetTable<RWOChooseFW>();
			}
		}
		
		public System.Data.Linq.Table<View_RWOIIConfirm> View_RWOIIConfirms
		{
			get
			{
				return this.GetTable<View_RWOIIConfirm>();
			}
		}
		
		public System.Data.Linq.Table<Project> Projects
		{
			get
			{
				return this.GetTable<Project>();
			}
		}
		
		public System.Data.Linq.Table<AmendMaster> AmendMasters
		{
			get
			{
				return this.GetTable<AmendMaster>();
			}
		}
		
		public System.Data.Linq.Table<AmendDetail> AmendDetails
		{
			get
			{
				return this.GetTable<AmendDetail>();
			}
		}
		
		public System.Data.Linq.Table<RoundWorkOrder> RoundWorkOrders
		{
			get
			{
				return this.GetTable<RoundWorkOrder>();
			}
		}
		
		public System.Data.Linq.Table<LWPM_Calendar> LWPM_Calendars
		{
			get
			{
				return this.GetTable<LWPM_Calendar>();
			}
		}
		
		public System.Data.Linq.Table<ShipmentSchedule> ShipmentSchedules
		{
			get
			{
				return this.GetTable<ShipmentSchedule>();
			}
		}
		
		public System.Data.Linq.Table<WorkOrderCategory> WorkOrderCategories
		{
			get
			{
				return this.GetTable<WorkOrderCategory>();
			}
		}
		
		public System.Data.Linq.Table<ProjectDeleteLog> ProjectDeleteLogs
		{
			get
			{
				return this.GetTable<ProjectDeleteLog>();
			}
		}
		
		public System.Data.Linq.Table<View_WOConfirm> View_WOConfirms
		{
			get
			{
				return this.GetTable<View_WOConfirm>();
			}
		}
		
		public System.Data.Linq.Table<View_RWOConfirm> View_RWOConfirms
		{
			get
			{
				return this.GetTable<View_RWOConfirm>();
			}
		}
		
		public System.Data.Linq.Table<Style> Styles
		{
			get
			{
				return this.GetTable<Style>();
			}
		}
		
		public System.Data.Linq.Table<Email> Emails
		{
			get
			{
				return this.GetTable<Email>();
			}
		}
		
		public System.Data.Linq.Table<CustomerCode> CustomerCodes
		{
			get
			{
				return this.GetTable<CustomerCode>();
			}
		}
		
		public System.Data.Linq.Table<WorkOrder> WorkOrders
		{
			get
			{
				return this.GetTable<WorkOrder>();
			}
		}
		
		public System.Data.Linq.Table<WONotepadReason> WONotepadReasons
		{
			get
			{
				return this.GetTable<WONotepadReason>();
			}
		}
		
		public System.Data.Linq.Table<WorkOrderSample> WorkOrderSamples
		{
			get
			{
				return this.GetTable<WorkOrderSample>();
			}
		}
		
		public System.Data.Linq.Table<PaymentTerm> PaymentTerms
		{
			get
			{
				return this.GetTable<PaymentTerm>();
			}
		}
		
		public System.Data.Linq.Table<PaymentTermsDetail> PaymentTermsDetails
		{
			get
			{
				return this.GetTable<PaymentTermsDetail>();
			}
		}
		
		public System.Data.Linq.Table<LWPM_CustomerProfile> LWPM_CustomerProfiles
		{
			get
			{
				return this.GetTable<LWPM_CustomerProfile>();
			}
		}
	}
	
	[Table(Name="dbo.WOSKURatio")]
	[DataContract()]
	public partial class WOSKURatio : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _RatioID;
		
		private string _SytleNo;
		
		private string _Cup;
		
		private string _Size;
		
		private System.Nullable<decimal> _Ratio;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRatioIDChanging(System.Guid value);
    partial void OnRatioIDChanged();
    partial void OnSytleNoChanging(string value);
    partial void OnSytleNoChanged();
    partial void OnCupChanging(string value);
    partial void OnCupChanged();
    partial void OnSizeChanging(string value);
    partial void OnSizeChanged();
    partial void OnRatioChanging(System.Nullable<decimal> value);
    partial void OnRatioChanged();
    #endregion
		
		public WOSKURatio()
		{
			this.Initialize();
		}
		
		[Column(Storage="_RatioID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[DataMember(Order=1)]
		public System.Guid RatioID
		{
			get
			{
				return this._RatioID;
			}
			set
			{
				if ((this._RatioID != value))
				{
					this.OnRatioIDChanging(value);
					this.SendPropertyChanging();
					this._RatioID = value;
					this.SendPropertyChanged("RatioID");
					this.OnRatioIDChanged();
				}
			}
		}
		
		[Column(Storage="_SytleNo", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=2)]
		public string SytleNo
		{
			get
			{
				return this._SytleNo;
			}
			set
			{
				if ((this._SytleNo != value))
				{
					this.OnSytleNoChanging(value);
					this.SendPropertyChanging();
					this._SytleNo = value;
					this.SendPropertyChanged("SytleNo");
					this.OnSytleNoChanged();
				}
			}
		}
		
		[Column(Storage="_Cup", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=3)]
		public string Cup
		{
			get
			{
				return this._Cup;
			}
			set
			{
				if ((this._Cup != value))
				{
					this.OnCupChanging(value);
					this.SendPropertyChanging();
					this._Cup = value;
					this.SendPropertyChanged("Cup");
					this.OnCupChanged();
				}
			}
		}
		
		[Column(Storage="_Size", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=4)]
		public string Size
		{
			get
			{
				return this._Size;
			}
			set
			{
				if ((this._Size != value))
				{
					this.OnSizeChanging(value);
					this.SendPropertyChanging();
					this._Size = value;
					this.SendPropertyChanged("Size");
					this.OnSizeChanged();
				}
			}
		}
		
		[Column(Storage="_Ratio", DbType="Decimal(5,2)")]
		[DataMember(Order=5)]
		public System.Nullable<decimal> Ratio
		{
			get
			{
				return this._Ratio;
			}
			set
			{
				if ((this._Ratio != value))
				{
					this.OnRatioChanging(value);
					this.SendPropertyChanging();
					this._Ratio = value;
					this.SendPropertyChanged("Ratio");
					this.OnRatioChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[Table(Name="dbo.CustomerCommission")]
	[DataContract()]
	public partial class CustomerCommission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Customer;
		
		private string _CustomerCodeF;
		
		private string _Category;
		
		private System.Nullable<double> _Commission;
		
		private string _Remark;
		
		private EntityRef<CustomerCode> _CustomerCode;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomerChanging(string value);
    partial void OnCustomerChanged();
    partial void OnCustomerCodeFChanging(string value);
    partial void OnCustomerCodeFChanged();
    partial void OnCategoryChanging(string value);
    partial void OnCategoryChanged();
    partial void OnCommissionChanging(System.Nullable<double> value);
    partial void OnCommissionChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public CustomerCommission()
		{
			this.Initialize();
		}
		
		[Column(Storage="_Customer", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=1)]
		public string Customer
		{
			get
			{
				return this._Customer;
			}
			set
			{
				if ((this._Customer != value))
				{
					if (this._CustomerCode.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerChanging(value);
					this.SendPropertyChanging();
					this._Customer = value;
					this.SendPropertyChanged("Customer");
					this.OnCustomerChanged();
				}
			}
		}
		
		[Column(Storage="_CustomerCodeF", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=2)]
		public string CustomerCodeF
		{
			get
			{
				return this._CustomerCodeF;
			}
			set
			{
				if ((this._CustomerCodeF != value))
				{
					if (this._CustomerCode.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerCodeFChanging(value);
					this.SendPropertyChanging();
					this._CustomerCodeF = value;
					this.SendPropertyChanged("CustomerCodeF");
					this.OnCustomerCodeFChanged();
				}
			}
		}
		
		[Column(Storage="_Category", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=3)]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		[Column(Storage="_Commission", DbType="Float")]
		[DataMember(Order=4)]
		public System.Nullable<double> Commission
		{
			get
			{
				return this._Commission;
			}
			set
			{
				if ((this._Commission != value))
				{
					this.OnCommissionChanging(value);
					this.SendPropertyChanging();
					this._Commission = value;
					this.SendPropertyChanged("Commission");
					this.OnCommissionChanged();
				}
			}
		}
		
		[Column(Storage="_Remark", DbType="NVarChar(1000)")]
		[DataMember(Order=5)]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[Association(Name="CustomerCode_CustomerCommission", Storage="_CustomerCode", ThisKey="Customer,CustomerCodeF", OtherKey="Customer,CustomerCode1", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public CustomerCode CustomerCode
		{
			get
			{
				return this._CustomerCode.Entity;
			}
			set
			{
				CustomerCode previousValue = this._CustomerCode.Entity;
				if (((previousValue != value) 
							|| (this._CustomerCode.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerCode.Entity = null;
						previousValue.CustomerCommissions.Remove(this);
					}
					this._CustomerCode.Entity = value;
					if ((value != null))
					{
						value.CustomerCommissions.Add(this);
						this._Customer = value.Customer;
						this._CustomerCodeF = value.CustomerCode1;
					}
					else
					{
						this._Customer = default(string);
						this._CustomerCodeF = default(string);
					}
					this.SendPropertyChanged("CustomerCode");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._CustomerCode = default(EntityRef<CustomerCode>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[Table(Name="dbo.RoundWorkOrderDetail")]
	[DataContract()]
	public partial class RoundWorkOrderDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Company;
		
		private string _SalesOrderNo;
		
		private int _SalesOrderLine;
		
		private string _WorkOrderNo;
		
		private string _ColorCode;
		
		private int _RoundNo;
		
		private string _Cup;
		
		private string _Size;
		
		private System.Nullable<int> _BulkQty;
		
		private System.Nullable<int> _SampleQty;
		
		private System.Nullable<decimal> _Ratio;
		
		private string _CustSize;
		
		private EntityRef<RoundWorkOrder> _RoundWorkOrder;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnSalesOrderNoChanging(string value);
    partial void OnSalesOrderNoChanged();
    partial void OnSalesOrderLineChanging(int value);
    partial void OnSalesOrderLineChanged();
    partial void OnWorkOrderNoChanging(string value);
    partial void OnWorkOrderNoChanged();
    partial void OnColorCodeChanging(string value);
    partial void OnColorCodeChanged();
    partial void OnRoundNoChanging(int value);
    partial void OnRoundNoChanged();
    partial void OnCupChanging(string value);
    partial void OnCupChanged();
    partial void OnSizeChanging(string value);
    partial void OnSizeChanged();
    partial void OnBulkQtyChanging(System.Nullable<int> value);
    partial void OnBulkQtyChanged();
    partial void OnSampleQtyChanging(System.Nullable<int> value);
    partial void OnSampleQtyChanged();
    partial void OnRatioChanging(System.Nullable<decimal> value);
    partial void OnRatioChanged();
    partial void OnCustSizeChanging(string value);
    partial void OnCustSizeChanged();
    #endregion
		
		public RoundWorkOrderDetail()
		{
			this.Initialize();
		}
		
		[Column(Storage="_Company", DbType="VarChar(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=1)]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					if (this._RoundWorkOrder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[Column(Storage="_SalesOrderNo", DbType="VarChar(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=2)]
		public string SalesOrderNo
		{
			get
			{
				return this._SalesOrderNo;
			}
			set
			{
				if ((this._SalesOrderNo != value))
				{
					if (this._RoundWorkOrder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSalesOrderNoChanging(value);
					this.SendPropertyChanging();
					this._SalesOrderNo = value;
					this.SendPropertyChanged("SalesOrderNo");
					this.OnSalesOrderNoChanged();
				}
			}
		}
		
		[Column(Storage="_SalesOrderLine", DbType="Int NOT NULL")]
		[DataMember(Order=3)]
		public int SalesOrderLine
		{
			get
			{
				return this._SalesOrderLine;
			}
			set
			{
				if ((this._SalesOrderLine != value))
				{
					this.OnSalesOrderLineChanging(value);
					this.SendPropertyChanging();
					this._SalesOrderLine = value;
					this.SendPropertyChanged("SalesOrderLine");
					this.OnSalesOrderLineChanged();
				}
			}
		}
		
		[Column(Storage="_WorkOrderNo", DbType="VarChar(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=4)]
		public string WorkOrderNo
		{
			get
			{
				return this._WorkOrderNo;
			}
			set
			{
				if ((this._WorkOrderNo != value))
				{
					if (this._RoundWorkOrder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkOrderNoChanging(value);
					this.SendPropertyChanging();
					this._WorkOrderNo = value;
					this.SendPropertyChanged("WorkOrderNo");
					this.OnWorkOrderNoChanged();
				}
			}
		}
		
		[Column(Storage="_ColorCode", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=5)]
		public string ColorCode
		{
			get
			{
				return this._ColorCode;
			}
			set
			{
				if ((this._ColorCode != value))
				{
					if (this._RoundWorkOrder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnColorCodeChanging(value);
					this.SendPropertyChanging();
					this._ColorCode = value;
					this.SendPropertyChanged("ColorCode");
					this.OnColorCodeChanged();
				}
			}
		}
		
		[Column(Storage="_RoundNo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[DataMember(Order=6)]
		public int RoundNo
		{
			get
			{
				return this._RoundNo;
			}
			set
			{
				if ((this._RoundNo != value))
				{
					if (this._RoundWorkOrder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoundNoChanging(value);
					this.SendPropertyChanging();
					this._RoundNo = value;
					this.SendPropertyChanged("RoundNo");
					this.OnRoundNoChanged();
				}
			}
		}
		
		[Column(Storage="_Cup", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=7)]
		public string Cup
		{
			get
			{
				return this._Cup;
			}
			set
			{
				if ((this._Cup != value))
				{
					this.OnCupChanging(value);
					this.SendPropertyChanging();
					this._Cup = value;
					this.SendPropertyChanged("Cup");
					this.OnCupChanged();
				}
			}
		}
		
		[Column(Storage="_Size", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=8)]
		public string Size
		{
			get
			{
				return this._Size;
			}
			set
			{
				if ((this._Size != value))
				{
					this.OnSizeChanging(value);
					this.SendPropertyChanging();
					this._Size = value;
					this.SendPropertyChanged("Size");
					this.OnSizeChanged();
				}
			}
		}
		
		[Column(Storage="_BulkQty", DbType="Int")]
		[DataMember(Order=9)]
		public System.Nullable<int> BulkQty
		{
			get
			{
				return this._BulkQty;
			}
			set
			{
				if ((this._BulkQty != value))
				{
					this.OnBulkQtyChanging(value);
					this.SendPropertyChanging();
					this._BulkQty = value;
					this.SendPropertyChanged("BulkQty");
					this.OnBulkQtyChanged();
				}
			}
		}
		
		[Column(Storage="_SampleQty", DbType="Int")]
		[DataMember(Order=10)]
		public System.Nullable<int> SampleQty
		{
			get
			{
				return this._SampleQty;
			}
			set
			{
				if ((this._SampleQty != value))
				{
					this.OnSampleQtyChanging(value);
					this.SendPropertyChanging();
					this._SampleQty = value;
					this.SendPropertyChanged("SampleQty");
					this.OnSampleQtyChanged();
				}
			}
		}
		
		[Column(Storage="_Ratio", DbType="Decimal(5,2)")]
		[DataMember(Order=11)]
		public System.Nullable<decimal> Ratio
		{
			get
			{
				return this._Ratio;
			}
			set
			{
				if ((this._Ratio != value))
				{
					this.OnRatioChanging(value);
					this.SendPropertyChanging();
					this._Ratio = value;
					this.SendPropertyChanged("Ratio");
					this.OnRatioChanged();
				}
			}
		}
		
		[Column(Storage="_CustSize", DbType="NVarChar(10)")]
		[DataMember(Order=12)]
		public string CustSize
		{
			get
			{
				return this._CustSize;
			}
			set
			{
				if ((this._CustSize != value))
				{
					this.OnCustSizeChanging(value);
					this.SendPropertyChanging();
					this._CustSize = value;
					this.SendPropertyChanged("CustSize");
					this.OnCustSizeChanged();
				}
			}
		}
		
		[Association(Name="RoundWorkOrder_RoundWorkOrderDetail", Storage="_RoundWorkOrder", ThisKey="Company,SalesOrderNo,WorkOrderNo,ColorCode,RoundNo", OtherKey="Company,SalesOrderNo,WorkOrderNo,ColorCode,RoundNo", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public RoundWorkOrder RoundWorkOrder
		{
			get
			{
				return this._RoundWorkOrder.Entity;
			}
			set
			{
				RoundWorkOrder previousValue = this._RoundWorkOrder.Entity;
				if (((previousValue != value) 
							|| (this._RoundWorkOrder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RoundWorkOrder.Entity = null;
						previousValue.RoundWorkOrderDetails.Remove(this);
					}
					this._RoundWorkOrder.Entity = value;
					if ((value != null))
					{
						value.RoundWorkOrderDetails.Add(this);
						this._Company = value.Company;
						this._SalesOrderNo = value.SalesOrderNo;
						this._WorkOrderNo = value.WorkOrderNo;
						this._ColorCode = value.ColorCode;
						this._RoundNo = value.RoundNo;
					}
					else
					{
						this._Company = default(string);
						this._SalesOrderNo = default(string);
						this._WorkOrderNo = default(string);
						this._ColorCode = default(string);
						this._RoundNo = default(int);
					}
					this.SendPropertyChanged("RoundWorkOrder");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._RoundWorkOrder = default(EntityRef<RoundWorkOrder>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[Table(Name="dbo.RoundWorkOrderDetailII")]
	[DataContract()]
	public partial class RoundWorkOrderDetailII : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Company;
		
		private string _SalesOrderNo;
		
		private string _WorkOrderNo;
		
		private string _ColorCode;
		
		private int _RoundNo;
		
		private string _SubFactory;
		
		private string _Cup;
		
		private string _Size;
		
		private System.Nullable<int> _SalesOrderLine;
		
		private System.Nullable<int> _BulkQty;
		
		private System.Nullable<int> _SampleQty;
		
		private System.Nullable<decimal> _Ratio;
		
		private string _CustSize;
		
		private EntityRef<RoundWorkOrderII> _RoundWorkOrderII;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnSalesOrderNoChanging(string value);
    partial void OnSalesOrderNoChanged();
    partial void OnWorkOrderNoChanging(string value);
    partial void OnWorkOrderNoChanged();
    partial void OnColorCodeChanging(string value);
    partial void OnColorCodeChanged();
    partial void OnRoundNoChanging(int value);
    partial void OnRoundNoChanged();
    partial void OnSubFactoryChanging(string value);
    partial void OnSubFactoryChanged();
    partial void OnCupChanging(string value);
    partial void OnCupChanged();
    partial void OnSizeChanging(string value);
    partial void OnSizeChanged();
    partial void OnSalesOrderLineChanging(System.Nullable<int> value);
    partial void OnSalesOrderLineChanged();
    partial void OnBulkQtyChanging(System.Nullable<int> value);
    partial void OnBulkQtyChanged();
    partial void OnSampleQtyChanging(System.Nullable<int> value);
    partial void OnSampleQtyChanged();
    partial void OnRatioChanging(System.Nullable<decimal> value);
    partial void OnRatioChanged();
    partial void OnCustSizeChanging(string value);
    partial void OnCustSizeChanged();
    #endregion
		
		public RoundWorkOrderDetailII()
		{
			this.Initialize();
		}
		
		[Column(Storage="_Company", DbType="VarChar(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=1)]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					if (this._RoundWorkOrderII.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[Column(Storage="_SalesOrderNo", DbType="VarChar(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=2)]
		public string SalesOrderNo
		{
			get
			{
				return this._SalesOrderNo;
			}
			set
			{
				if ((this._SalesOrderNo != value))
				{
					if (this._RoundWorkOrderII.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSalesOrderNoChanging(value);
					this.SendPropertyChanging();
					this._SalesOrderNo = value;
					this.SendPropertyChanged("SalesOrderNo");
					this.OnSalesOrderNoChanged();
				}
			}
		}
		
		[Column(Storage="_WorkOrderNo", DbType="VarChar(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=3)]
		public string WorkOrderNo
		{
			get
			{
				return this._WorkOrderNo;
			}
			set
			{
				if ((this._WorkOrderNo != value))
				{
					if (this._RoundWorkOrderII.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkOrderNoChanging(value);
					this.SendPropertyChanging();
					this._WorkOrderNo = value;
					this.SendPropertyChanged("WorkOrderNo");
					this.OnWorkOrderNoChanged();
				}
			}
		}
		
		[Column(Storage="_ColorCode", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=4)]
		public string ColorCode
		{
			get
			{
				return this._ColorCode;
			}
			set
			{
				if ((this._ColorCode != value))
				{
					if (this._RoundWorkOrderII.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnColorCodeChanging(value);
					this.SendPropertyChanging();
					this._ColorCode = value;
					this.SendPropertyChanged("ColorCode");
					this.OnColorCodeChanged();
				}
			}
		}
		
		[Column(Storage="_RoundNo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[DataMember(Order=5)]
		public int RoundNo
		{
			get
			{
				return this._RoundNo;
			}
			set
			{
				if ((this._RoundNo != value))
				{
					if (this._RoundWorkOrderII.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoundNoChanging(value);
					this.SendPropertyChanging();
					this._RoundNo = value;
					this.SendPropertyChanged("RoundNo");
					this.OnRoundNoChanged();
				}
			}
		}
		
		[Column(Storage="_SubFactory", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=6)]
		public string SubFactory
		{
			get
			{
				return this._SubFactory;
			}
			set
			{
				if ((this._SubFactory != value))
				{
					if (this._RoundWorkOrderII.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubFactoryChanging(value);
					this.SendPropertyChanging();
					this._SubFactory = value;
					this.SendPropertyChanged("SubFactory");
					this.OnSubFactoryChanged();
				}
			}
		}
		
		[Column(Storage="_Cup", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=7)]
		public string Cup
		{
			get
			{
				return this._Cup;
			}
			set
			{
				if ((this._Cup != value))
				{
					this.OnCupChanging(value);
					this.SendPropertyChanging();
					this._Cup = value;
					this.SendPropertyChanged("Cup");
					this.OnCupChanged();
				}
			}
		}
		
		[Column(Storage="_Size", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=8)]
		public string Size
		{
			get
			{
				return this._Size;
			}
			set
			{
				if ((this._Size != value))
				{
					this.OnSizeChanging(value);
					this.SendPropertyChanging();
					this._Size = value;
					this.SendPropertyChanged("Size");
					this.OnSizeChanged();
				}
			}
		}
		
		[Column(Storage="_SalesOrderLine", DbType="Int")]
		[DataMember(Order=9)]
		public System.Nullable<int> SalesOrderLine
		{
			get
			{
				return this._SalesOrderLine;
			}
			set
			{
				if ((this._SalesOrderLine != value))
				{
					this.OnSalesOrderLineChanging(value);
					this.SendPropertyChanging();
					this._SalesOrderLine = value;
					this.SendPropertyChanged("SalesOrderLine");
					this.OnSalesOrderLineChanged();
				}
			}
		}
		
		[Column(Storage="_BulkQty", DbType="Int")]
		[DataMember(Order=10)]
		public System.Nullable<int> BulkQty
		{
			get
			{
				return this._BulkQty;
			}
			set
			{
				if ((this._BulkQty != value))
				{
					this.OnBulkQtyChanging(value);
					this.SendPropertyChanging();
					this._BulkQty = value;
					this.SendPropertyChanged("BulkQty");
					this.OnBulkQtyChanged();
				}
			}
		}
		
		[Column(Storage="_SampleQty", DbType="Int")]
		[DataMember(Order=11)]
		public System.Nullable<int> SampleQty
		{
			get
			{
				return this._SampleQty;
			}
			set
			{
				if ((this._SampleQty != value))
				{
					this.OnSampleQtyChanging(value);
					this.SendPropertyChanging();
					this._SampleQty = value;
					this.SendPropertyChanged("SampleQty");
					this.OnSampleQtyChanged();
				}
			}
		}
		
		[Column(Storage="_Ratio", DbType="Decimal(5,2)")]
		[DataMember(Order=12)]
		public System.Nullable<decimal> Ratio
		{
			get
			{
				return this._Ratio;
			}
			set
			{
				if ((this._Ratio != value))
				{
					this.OnRatioChanging(value);
					this.SendPropertyChanging();
					this._Ratio = value;
					this.SendPropertyChanged("Ratio");
					this.OnRatioChanged();
				}
			}
		}
		
		[Column(Storage="_CustSize", DbType="NVarChar(10)")]
		[DataMember(Order=13)]
		public string CustSize
		{
			get
			{
				return this._CustSize;
			}
			set
			{
				if ((this._CustSize != value))
				{
					this.OnCustSizeChanging(value);
					this.SendPropertyChanging();
					this._CustSize = value;
					this.SendPropertyChanged("CustSize");
					this.OnCustSizeChanged();
				}
			}
		}
		
		[Association(Name="RoundWorkOrderII_RoundWorkOrderDetailII", Storage="_RoundWorkOrderII", ThisKey="Company,SalesOrderNo,WorkOrderNo,ColorCode,RoundNo,SubFactory", OtherKey="Company,SalesOrderNo,WorkOrderNo,ColorCode,RoundNo,SubFactory", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public RoundWorkOrderII RoundWorkOrderII
		{
			get
			{
				return this._RoundWorkOrderII.Entity;
			}
			set
			{
				RoundWorkOrderII previousValue = this._RoundWorkOrderII.Entity;
				if (((previousValue != value) 
							|| (this._RoundWorkOrderII.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RoundWorkOrderII.Entity = null;
						previousValue.RoundWorkOrderDetailIIs.Remove(this);
					}
					this._RoundWorkOrderII.Entity = value;
					if ((value != null))
					{
						value.RoundWorkOrderDetailIIs.Add(this);
						this._Company = value.Company;
						this._SalesOrderNo = value.SalesOrderNo;
						this._WorkOrderNo = value.WorkOrderNo;
						this._ColorCode = value.ColorCode;
						this._RoundNo = value.RoundNo;
						this._SubFactory = value.SubFactory;
					}
					else
					{
						this._Company = default(string);
						this._SalesOrderNo = default(string);
						this._WorkOrderNo = default(string);
						this._ColorCode = default(string);
						this._RoundNo = default(int);
						this._SubFactory = default(string);
					}
					this.SendPropertyChanged("RoundWorkOrderII");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._RoundWorkOrderII = default(EntityRef<RoundWorkOrderII>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[Table(Name="dbo.RoundWorkOrderDetailTemp1")]
	[DataContract()]
	public partial class RoundWorkOrderDetailTemp1 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Company;
		
		private string _SalesOrderNo;
		
		private int _SalesOrderLine;
		
		private string _WorkOrderNo;
		
		private int _RoundNo;
		
		private string _ColorCode;
		
		private string _Cup;
		
		private string _Size;
		
		private System.Nullable<int> _BulkQty;
		
		private System.Nullable<int> _SampleQty;
		
		private System.Nullable<decimal> _Ratio;
		
		private string _CustSize;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnSalesOrderNoChanging(string value);
    partial void OnSalesOrderNoChanged();
    partial void OnSalesOrderLineChanging(int value);
    partial void OnSalesOrderLineChanged();
    partial void OnWorkOrderNoChanging(string value);
    partial void OnWorkOrderNoChanged();
    partial void OnRoundNoChanging(int value);
    partial void OnRoundNoChanged();
    partial void OnColorCodeChanging(string value);
    partial void OnColorCodeChanged();
    partial void OnCupChanging(string value);
    partial void OnCupChanged();
    partial void OnSizeChanging(string value);
    partial void OnSizeChanged();
    partial void OnBulkQtyChanging(System.Nullable<int> value);
    partial void OnBulkQtyChanged();
    partial void OnSampleQtyChanging(System.Nullable<int> value);
    partial void OnSampleQtyChanged();
    partial void OnRatioChanging(System.Nullable<decimal> value);
    partial void OnRatioChanged();
    partial void OnCustSizeChanging(string value);
    partial void OnCustSizeChanged();
    #endregion
		
		public RoundWorkOrderDetailTemp1()
		{
			this.Initialize();
		}
		
		[Column(Storage="_Company", DbType="VarChar(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=1)]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[Column(Storage="_SalesOrderNo", DbType="VarChar(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=2)]
		public string SalesOrderNo
		{
			get
			{
				return this._SalesOrderNo;
			}
			set
			{
				if ((this._SalesOrderNo != value))
				{
					this.OnSalesOrderNoChanging(value);
					this.SendPropertyChanging();
					this._SalesOrderNo = value;
					this.SendPropertyChanged("SalesOrderNo");
					this.OnSalesOrderNoChanged();
				}
			}
		}
		
		[Column(Storage="_SalesOrderLine", DbType="Int NOT NULL")]
		[DataMember(Order=3)]
		public int SalesOrderLine
		{
			get
			{
				return this._SalesOrderLine;
			}
			set
			{
				if ((this._SalesOrderLine != value))
				{
					this.OnSalesOrderLineChanging(value);
					this.SendPropertyChanging();
					this._SalesOrderLine = value;
					this.SendPropertyChanged("SalesOrderLine");
					this.OnSalesOrderLineChanged();
				}
			}
		}
		
		[Column(Storage="_WorkOrderNo", DbType="VarChar(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=4)]
		public string WorkOrderNo
		{
			get
			{
				return this._WorkOrderNo;
			}
			set
			{
				if ((this._WorkOrderNo != value))
				{
					this.OnWorkOrderNoChanging(value);
					this.SendPropertyChanging();
					this._WorkOrderNo = value;
					this.SendPropertyChanged("WorkOrderNo");
					this.OnWorkOrderNoChanged();
				}
			}
		}
		
		[Column(Storage="_RoundNo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[DataMember(Order=5)]
		public int RoundNo
		{
			get
			{
				return this._RoundNo;
			}
			set
			{
				if ((this._RoundNo != value))
				{
					this.OnRoundNoChanging(value);
					this.SendPropertyChanging();
					this._RoundNo = value;
					this.SendPropertyChanged("RoundNo");
					this.OnRoundNoChanged();
				}
			}
		}
		
		[Column(Storage="_ColorCode", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=6)]
		public string ColorCode
		{
			get
			{
				return this._ColorCode;
			}
			set
			{
				if ((this._ColorCode != value))
				{
					this.OnColorCodeChanging(value);
					this.SendPropertyChanging();
					this._ColorCode = value;
					this.SendPropertyChanged("ColorCode");
					this.OnColorCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Cup", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=7)]
		public string Cup
		{
			get
			{
				return this._Cup;
			}
			set
			{
				if ((this._Cup != value))
				{
					this.OnCupChanging(value);
					this.SendPropertyChanging();
					this._Cup = value;
					this.SendPropertyChanged("Cup");
					this.OnCupChanged();
				}
			}
		}
		
		[Column(Storage="_Size", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=8)]
		public string Size
		{
			get
			{
				return this._Size;
			}
			set
			{
				if ((this._Size != value))
				{
					this.OnSizeChanging(value);
					this.SendPropertyChanging();
					this._Size = value;
					this.SendPropertyChanged("Size");
					this.OnSizeChanged();
				}
			}
		}
		
		[Column(Storage="_BulkQty", DbType="Int")]
		[DataMember(Order=9)]
		public System.Nullable<int> BulkQty
		{
			get
			{
				return this._BulkQty;
			}
			set
			{
				if ((this._BulkQty != value))
				{
					this.OnBulkQtyChanging(value);
					this.SendPropertyChanging();
					this._BulkQty = value;
					this.SendPropertyChanged("BulkQty");
					this.OnBulkQtyChanged();
				}
			}
		}
		
		[Column(Storage="_SampleQty", DbType="Int")]
		[DataMember(Order=10)]
		public System.Nullable<int> SampleQty
		{
			get
			{
				return this._SampleQty;
			}
			set
			{
				if ((this._SampleQty != value))
				{
					this.OnSampleQtyChanging(value);
					this.SendPropertyChanging();
					this._SampleQty = value;
					this.SendPropertyChanged("SampleQty");
					this.OnSampleQtyChanged();
				}
			}
		}
		
		[Column(Storage="_Ratio", DbType="Decimal(5,2)")]
		[DataMember(Order=11)]
		public System.Nullable<decimal> Ratio
		{
			get
			{
				return this._Ratio;
			}
			set
			{
				if ((this._Ratio != value))
				{
					this.OnRatioChanging(value);
					this.SendPropertyChanging();
					this._Ratio = value;
					this.SendPropertyChanged("Ratio");
					this.OnRatioChanged();
				}
			}
		}
		
		[Column(Storage="_CustSize", DbType="NVarChar(10)")]
		[DataMember(Order=12)]
		public string CustSize
		{
			get
			{
				return this._CustSize;
			}
			set
			{
				if ((this._CustSize != value))
				{
					this.OnCustSizeChanging(value);
					this.SendPropertyChanging();
					this._CustSize = value;
					this.SendPropertyChanged("CustSize");
					this.OnCustSizeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[Table(Name="dbo.RwoOrders")]
	[DataContract()]
	public partial class RwoOrder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _OrderId;
		
		private string _Type;
		
		private string _Value;
		
		private System.Nullable<int> _Orders;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderIdChanging(string value);
    partial void OnOrderIdChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnOrdersChanging(System.Nullable<int> value);
    partial void OnOrdersChanged();
    #endregion
		
		public RwoOrder()
		{
			this.Initialize();
		}
		
		[Column(Storage="_OrderId", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=1)]
		public string OrderId
		{
			get
			{
				return this._OrderId;
			}
			set
			{
				if ((this._OrderId != value))
				{
					this.OnOrderIdChanging(value);
					this.SendPropertyChanging();
					this._OrderId = value;
					this.SendPropertyChanged("OrderId");
					this.OnOrderIdChanged();
				}
			}
		}
		
		[Column(Storage="_Type", DbType="NVarChar(20)")]
		[DataMember(Order=2)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[Column(Storage="_Value", DbType="NVarChar(100)")]
		[DataMember(Order=3)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[Column(Storage="_Orders", DbType="Int")]
		[DataMember(Order=4)]
		public System.Nullable<int> Orders
		{
			get
			{
				return this._Orders;
			}
			set
			{
				if ((this._Orders != value))
				{
					this.OnOrdersChanging(value);
					this.SendPropertyChanging();
					this._Orders = value;
					this.SendPropertyChanged("Orders");
					this.OnOrdersChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[Table(Name="dbo.WorkOrderSKU")]
	[DataContract()]
	public partial class WorkOrderSKU : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Company;
		
		private string _SalesOrderNo;
		
		private string _WorkOrderNo;
		
		private string _ColorCode;
		
		private string _Cup;
		
		private string _Size;
		
		private int _SalesOrderLine;
		
		private string _CustSize;
		
		private string _CustCup;
		
		private System.Nullable<int> _DespatchQty;
		
		private EntitySet<WorkOrderSample> _WorkOrderSamples;
		
		private EntityRef<WorkOrderColor> _WorkOrderColor;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnSalesOrderNoChanging(string value);
    partial void OnSalesOrderNoChanged();
    partial void OnWorkOrderNoChanging(string value);
    partial void OnWorkOrderNoChanged();
    partial void OnColorCodeChanging(string value);
    partial void OnColorCodeChanged();
    partial void OnCupChanging(string value);
    partial void OnCupChanged();
    partial void OnSizeChanging(string value);
    partial void OnSizeChanged();
    partial void OnSalesOrderLineChanging(int value);
    partial void OnSalesOrderLineChanged();
    partial void OnCustSizeChanging(string value);
    partial void OnCustSizeChanged();
    partial void OnCustCupChanging(string value);
    partial void OnCustCupChanged();
    partial void OnDespatchQtyChanging(System.Nullable<int> value);
    partial void OnDespatchQtyChanged();
    #endregion
		
		public WorkOrderSKU()
		{
			this.Initialize();
		}
		
		[Column(Storage="_Company", DbType="VarChar(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=1)]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					if (this._WorkOrderColor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[Column(Storage="_SalesOrderNo", DbType="VarChar(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=2)]
		public string SalesOrderNo
		{
			get
			{
				return this._SalesOrderNo;
			}
			set
			{
				if ((this._SalesOrderNo != value))
				{
					if (this._WorkOrderColor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSalesOrderNoChanging(value);
					this.SendPropertyChanging();
					this._SalesOrderNo = value;
					this.SendPropertyChanged("SalesOrderNo");
					this.OnSalesOrderNoChanged();
				}
			}
		}
		
		[Column(Storage="_WorkOrderNo", DbType="VarChar(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=3)]
		public string WorkOrderNo
		{
			get
			{
				return this._WorkOrderNo;
			}
			set
			{
				if ((this._WorkOrderNo != value))
				{
					if (this._WorkOrderColor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkOrderNoChanging(value);
					this.SendPropertyChanging();
					this._WorkOrderNo = value;
					this.SendPropertyChanged("WorkOrderNo");
					this.OnWorkOrderNoChanged();
				}
			}
		}
		
		[Column(Storage="_ColorCode", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=4)]
		public string ColorCode
		{
			get
			{
				return this._ColorCode;
			}
			set
			{
				if ((this._ColorCode != value))
				{
					if (this._WorkOrderColor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnColorCodeChanging(value);
					this.SendPropertyChanging();
					this._ColorCode = value;
					this.SendPropertyChanged("ColorCode");
					this.OnColorCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Cup", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=5)]
		public string Cup
		{
			get
			{
				return this._Cup;
			}
			set
			{
				if ((this._Cup != value))
				{
					this.OnCupChanging(value);
					this.SendPropertyChanging();
					this._Cup = value;
					this.SendPropertyChanged("Cup");
					this.OnCupChanged();
				}
			}
		}
		
		[Column(Storage="_Size", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=6)]
		public string Size
		{
			get
			{
				return this._Size;
			}
			set
			{
				if ((this._Size != value))
				{
					this.OnSizeChanging(value);
					this.SendPropertyChanging();
					this._Size = value;
					this.SendPropertyChanged("Size");
					this.OnSizeChanged();
				}
			}
		}
		
		[Column(Storage="_SalesOrderLine", DbType="Int NOT NULL")]
		[DataMember(Order=7)]
		public int SalesOrderLine
		{
			get
			{
				return this._SalesOrderLine;
			}
			set
			{
				if ((this._SalesOrderLine != value))
				{
					this.OnSalesOrderLineChanging(value);
					this.SendPropertyChanging();
					this._SalesOrderLine = value;
					this.SendPropertyChanged("SalesOrderLine");
					this.OnSalesOrderLineChanged();
				}
			}
		}
		
		[Column(Storage="_CustSize", DbType="NVarChar(20)")]
		[DataMember(Order=8)]
		public string CustSize
		{
			get
			{
				return this._CustSize;
			}
			set
			{
				if ((this._CustSize != value))
				{
					this.OnCustSizeChanging(value);
					this.SendPropertyChanging();
					this._CustSize = value;
					this.SendPropertyChanged("CustSize");
					this.OnCustSizeChanged();
				}
			}
		}
		
		[Column(Storage="_CustCup", DbType="NVarChar(10)")]
		[DataMember(Order=9)]
		public string CustCup
		{
			get
			{
				return this._CustCup;
			}
			set
			{
				if ((this._CustCup != value))
				{
					this.OnCustCupChanging(value);
					this.SendPropertyChanging();
					this._CustCup = value;
					this.SendPropertyChanged("CustCup");
					this.OnCustCupChanged();
				}
			}
		}
		
		[Column(Storage="_DespatchQty", DbType="Int")]
		[DataMember(Order=10)]
		public System.Nullable<int> DespatchQty
		{
			get
			{
				return this._DespatchQty;
			}
			set
			{
				if ((this._DespatchQty != value))
				{
					this.OnDespatchQtyChanging(value);
					this.SendPropertyChanging();
					this._DespatchQty = value;
					this.SendPropertyChanged("DespatchQty");
					this.OnDespatchQtyChanged();
				}
			}
		}
		
		[Association(Name="WorkOrderSKU_WorkOrderSample", Storage="_WorkOrderSamples", ThisKey="Company,SalesOrderNo,WorkOrderNo,ColorCode,Cup,Size", OtherKey="Company,SalesOrderNo,WorkOrderNo,ColorCode,Cup,Size")]
		[DataMember(Order=11, EmitDefaultValue=false)]
		public EntitySet<WorkOrderSample> WorkOrderSamples
		{
			get
			{
				if ((this.serializing 
							&& (this._WorkOrderSamples.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._WorkOrderSamples;
			}
			set
			{
				this._WorkOrderSamples.Assign(value);
			}
		}
		
		[Association(Name="WorkOrderColor_WorkOrderSKU", Storage="_WorkOrderColor", ThisKey="Company,SalesOrderNo,WorkOrderNo,ColorCode", OtherKey="Company,SalesOrderNo,WorkOrderNo,ColorCode", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public WorkOrderColor WorkOrderColor
		{
			get
			{
				return this._WorkOrderColor.Entity;
			}
			set
			{
				WorkOrderColor previousValue = this._WorkOrderColor.Entity;
				if (((previousValue != value) 
							|| (this._WorkOrderColor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WorkOrderColor.Entity = null;
						previousValue.WorkOrderSKUs.Remove(this);
					}
					this._WorkOrderColor.Entity = value;
					if ((value != null))
					{
						value.WorkOrderSKUs.Add(this);
						this._Company = value.Company;
						this._SalesOrderNo = value.SalesOrderNo;
						this._WorkOrderNo = value.WorkOrderNo;
						this._ColorCode = value.ColorCode;
					}
					else
					{
						this._Company = default(string);
						this._SalesOrderNo = default(string);
						this._WorkOrderNo = default(string);
						this._ColorCode = default(string);
					}
					this.SendPropertyChanged("WorkOrderColor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_WorkOrderSamples(WorkOrderSample entity)
		{
			this.SendPropertyChanging();
			entity.WorkOrderSKU = this;
		}
		
		private void detach_WorkOrderSamples(WorkOrderSample entity)
		{
			this.SendPropertyChanging();
			entity.WorkOrderSKU = null;
		}
		
		private void Initialize()
		{
			this._WorkOrderSamples = new EntitySet<WorkOrderSample>(new Action<WorkOrderSample>(this.attach_WorkOrderSamples), new Action<WorkOrderSample>(this.detach_WorkOrderSamples));
			this._WorkOrderColor = default(EntityRef<WorkOrderColor>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[OnSerializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[OnSerialized()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[Table(Name="dbo.View_AS400RwoColorSize")]
	[DataContract()]
	public partial class View_AS400RwoColorSize
	{
		
		private int _DT;
		
		private string _TM;
		
		private string _CustSIZE;
		
		private string _CustCup;
		
		private string _SIZE;
		
		private string _Cup;
		
		private decimal _DespatchQty;
		
		private string _Company;
		
		private string _SalesOrderNo;
		
		private string _WorkOrderNo;
		
		private int _RoundNo;
		
		private System.Nullable<int> _RoundTotal;
		
		private string _ColorCode;
		
		private int _SalesOrderLine;
		
		public View_AS400RwoColorSize()
		{
		}
		
		[Column(Storage="_DT", DbType="Int NOT NULL")]
		[DataMember(Order=1)]
		public int DT
		{
			get
			{
				return this._DT;
			}
			set
			{
				if ((this._DT != value))
				{
					this._DT = value;
				}
			}
		}
		
		[Column(Storage="_TM", DbType="VarChar(9) NOT NULL", CanBeNull=false)]
		[DataMember(Order=2)]
		public string TM
		{
			get
			{
				return this._TM;
			}
			set
			{
				if ((this._TM != value))
				{
					this._TM = value;
				}
			}
		}
		
		[Column(Storage="_CustSIZE", DbType="NVarChar(50)")]
		[DataMember(Order=3)]
		public string CustSIZE
		{
			get
			{
				return this._CustSIZE;
			}
			set
			{
				if ((this._CustSIZE != value))
				{
					this._CustSIZE = value;
				}
			}
		}
		
		[Column(Storage="_CustCup", DbType="NVarChar(50)")]
		[DataMember(Order=4)]
		public string CustCup
		{
			get
			{
				return this._CustCup;
			}
			set
			{
				if ((this._CustCup != value))
				{
					this._CustCup = value;
				}
			}
		}
		
		[Column(Storage="_SIZE", DbType="NChar(3)")]
		[DataMember(Order=5)]
		public string SIZE
		{
			get
			{
				return this._SIZE;
			}
			set
			{
				if ((this._SIZE != value))
				{
					this._SIZE = value;
				}
			}
		}
		
		[Column(Storage="_Cup", DbType="NChar(3)")]
		[DataMember(Order=6)]
		public string Cup
		{
			get
			{
				return this._Cup;
			}
			set
			{
				if ((this._Cup != value))
				{
					this._Cup = value;
				}
			}
		}
		
		[Column(Storage="_DespatchQty", DbType="Decimal(11,3) NOT NULL")]
		[DataMember(Order=7)]
		public decimal DespatchQty
		{
			get
			{
				return this._DespatchQty;
			}
			set
			{
				if ((this._DespatchQty != value))
				{
					this._DespatchQty = value;
				}
			}
		}
		
		[Column(Storage="_Company", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		[DataMember(Order=8)]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this._Company = value;
				}
			}
		}
		
		[Column(Storage="_SalesOrderNo", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		[DataMember(Order=9)]
		public string SalesOrderNo
		{
			get
			{
				return this._SalesOrderNo;
			}
			set
			{
				if ((this._SalesOrderNo != value))
				{
					this._SalesOrderNo = value;
				}
			}
		}
		
		[Column(Storage="_WorkOrderNo", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		[DataMember(Order=10)]
		public string WorkOrderNo
		{
			get
			{
				return this._WorkOrderNo;
			}
			set
			{
				if ((this._WorkOrderNo != value))
				{
					this._WorkOrderNo = value;
				}
			}
		}
		
		[Column(Storage="_RoundNo", DbType="Int NOT NULL")]
		[DataMember(Order=11)]
		public int RoundNo
		{
			get
			{
				return this._RoundNo;
			}
			set
			{
				if ((this._RoundNo != value))
				{
					this._RoundNo = value;
				}
			}
		}
		
		[Column(Storage="_RoundTotal", DbType="Int")]
		[DataMember(Order=12)]
		public System.Nullable<int> RoundTotal
		{
			get
			{
				return this._RoundTotal;
			}
			set
			{
				if ((this._RoundTotal != value))
				{
					this._RoundTotal = value;
				}
			}
		}
		
		[Column(Storage="_ColorCode", DbType="VarChar(3) NOT NULL", CanBeNull=false)]
		[DataMember(Order=13)]
		public string ColorCode
		{
			get
			{
				return this._ColorCode;
			}
			set
			{
				if ((this._ColorCode != value))
				{
					this._ColorCode = value;
				}
			}
		}
		
		[Column(Storage="_SalesOrderLine", DbType="Int NOT NULL")]
		[DataMember(Order=14)]
		public int SalesOrderLine
		{
			get
			{
				return this._SalesOrderLine;
			}
			set
			{
				if ((this._SalesOrderLine != value))
				{
					this._SalesOrderLine = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.View_AS400RwoColorSizeQty")]
	[DataContract()]
	public partial class View_AS400RwoColorSizeQty
	{
		
		private int _DT;
		
		private string _TM;
		
		private string _CustSize;
		
		private string _CustCup;
		
		private string _SIZE;
		
		private string _Cup;
		
		private decimal _DespatchQty;
		
		private decimal _BulkQty;
		
		private string _Company;
		
		private string _SalesOrderNo;
		
		private string _WorkOrderNo;
		
		private int _RoundNo;
		
		private System.Nullable<int> _RoundTotal;
		
		private string _ColorCode;
		
		private int _SampleQty;
		
		private int _SalesOrderLine;
		
		public View_AS400RwoColorSizeQty()
		{
		}
		
		[Column(Storage="_DT", DbType="Int NOT NULL")]
		[DataMember(Order=1)]
		public int DT
		{
			get
			{
				return this._DT;
			}
			set
			{
				if ((this._DT != value))
				{
					this._DT = value;
				}
			}
		}
		
		[Column(Storage="_TM", DbType="VarChar(9) NOT NULL", CanBeNull=false)]
		[DataMember(Order=2)]
		public string TM
		{
			get
			{
				return this._TM;
			}
			set
			{
				if ((this._TM != value))
				{
					this._TM = value;
				}
			}
		}
		
		[Column(Storage="_CustSize", DbType="NVarChar(50)")]
		[DataMember(Order=3)]
		public string CustSize
		{
			get
			{
				return this._CustSize;
			}
			set
			{
				if ((this._CustSize != value))
				{
					this._CustSize = value;
				}
			}
		}
		
		[Column(Storage="_CustCup", DbType="NVarChar(50)")]
		[DataMember(Order=4)]
		public string CustCup
		{
			get
			{
				return this._CustCup;
			}
			set
			{
				if ((this._CustCup != value))
				{
					this._CustCup = value;
				}
			}
		}
		
		[Column(Storage="_SIZE", DbType="NChar(3)")]
		[DataMember(Order=5)]
		public string SIZE
		{
			get
			{
				return this._SIZE;
			}
			set
			{
				if ((this._SIZE != value))
				{
					this._SIZE = value;
				}
			}
		}
		
		[Column(Storage="_Cup", DbType="NChar(3)")]
		[DataMember(Order=6)]
		public string Cup
		{
			get
			{
				return this._Cup;
			}
			set
			{
				if ((this._Cup != value))
				{
					this._Cup = value;
				}
			}
		}
		
		[Column(Storage="_DespatchQty", DbType="Decimal(11,3) NOT NULL")]
		[DataMember(Order=7)]
		public decimal DespatchQty
		{
			get
			{
				return this._DespatchQty;
			}
			set
			{
				if ((this._DespatchQty != value))
				{
					this._DespatchQty = value;
				}
			}
		}
		
		[Column(Storage="_BulkQty", DbType="Decimal(11,3) NOT NULL")]
		[DataMember(Order=8)]
		public decimal BulkQty
		{
			get
			{
				return this._BulkQty;
			}
			set
			{
				if ((this._BulkQty != value))
				{
					this._BulkQty = value;
				}
			}
		}
		
		[Column(Storage="_Company", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		[DataMember(Order=9)]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this._Company = value;
				}
			}
		}
		
		[Column(Storage="_SalesOrderNo", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		[DataMember(Order=10)]
		public string SalesOrderNo
		{
			get
			{
				return this._SalesOrderNo;
			}
			set
			{
				if ((this._SalesOrderNo != value))
				{
					this._SalesOrderNo = value;
				}
			}
		}
		
		[Column(Storage="_WorkOrderNo", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		[DataMember(Order=11)]
		public string WorkOrderNo
		{
			get
			{
				return this._WorkOrderNo;
			}
			set
			{
				if ((this._WorkOrderNo != value))
				{
					this._WorkOrderNo = value;
				}
			}
		}
		
		[Column(Storage="_RoundNo", DbType="Int NOT NULL")]
		[DataMember(Order=12)]
		public int RoundNo
		{
			get
			{
				return this._RoundNo;
			}
			set
			{
				if ((this._RoundNo != value))
				{
					this._RoundNo = value;
				}
			}
		}
		
		[Column(Storage="_RoundTotal", DbType="Int")]
		[DataMember(Order=13)]
		public System.Nullable<int> RoundTotal
		{
			get
			{
				return this._RoundTotal;
			}
			set
			{
				if ((this._RoundTotal != value))
				{
					this._RoundTotal = value;
				}
			}
		}
		
		[Column(Storage="_ColorCode", DbType="VarChar(3) NOT NULL", CanBeNull=false)]
		[DataMember(Order=14)]
		public string ColorCode
		{
			get
			{
				return this._ColorCode;
			}
			set
			{
				if ((this._ColorCode != value))
				{
					this._ColorCode = value;
				}
			}
		}
		
		[Column(Storage="_SampleQty", DbType="Int NOT NULL")]
		[DataMember(Order=15)]
		public int SampleQty
		{
			get
			{
				return this._SampleQty;
			}
			set
			{
				if ((this._SampleQty != value))
				{
					this._SampleQty = value;
				}
			}
		}
		
		[Column(Storage="_SalesOrderLine", DbType="Int NOT NULL")]
		[DataMember(Order=16)]
		public int SalesOrderLine
		{
			get
			{
				return this._SalesOrderLine;
			}
			set
			{
				if ((this._SalesOrderLine != value))
				{
					this._SalesOrderLine = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.View_Calendar")]
	[DataContract()]
	public partial class View_Calendar
	{
		
		private string _TPLANT;
		
		private System.DateTime _DATE1;
		
		private int _WKNO;
		
		private System.Nullable<int> _SECTO;
		
		private System.Nullable<int> _SECTT;
		
		private System.Nullable<int> _SECTC;
		
		private string _WDAY;
		
		private System.Nullable<int> _SECTT1;
		
		private System.Nullable<int> _OSECT;
		
		private string _WeekDay;
		
		private System.Nullable<int> _WeekOrder;
		
		public View_Calendar()
		{
		}
		
		[Column(Storage="_TPLANT", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		[DataMember(Order=1)]
		public string TPLANT
		{
			get
			{
				return this._TPLANT;
			}
			set
			{
				if ((this._TPLANT != value))
				{
					this._TPLANT = value;
				}
			}
		}
		
		[Column(Storage="_DATE1", DbType="DateTime NOT NULL")]
		[DataMember(Order=2)]
		public System.DateTime DATE1
		{
			get
			{
				return this._DATE1;
			}
			set
			{
				if ((this._DATE1 != value))
				{
					this._DATE1 = value;
				}
			}
		}
		
		[Column(Storage="_WKNO", DbType="Int NOT NULL")]
		[DataMember(Order=3)]
		public int WKNO
		{
			get
			{
				return this._WKNO;
			}
			set
			{
				if ((this._WKNO != value))
				{
					this._WKNO = value;
				}
			}
		}
		
		[Column(Storage="_SECTO", DbType="Int")]
		[DataMember(Order=4)]
		public System.Nullable<int> SECTO
		{
			get
			{
				return this._SECTO;
			}
			set
			{
				if ((this._SECTO != value))
				{
					this._SECTO = value;
				}
			}
		}
		
		[Column(Storage="_SECTT", DbType="Int")]
		[DataMember(Order=5)]
		public System.Nullable<int> SECTT
		{
			get
			{
				return this._SECTT;
			}
			set
			{
				if ((this._SECTT != value))
				{
					this._SECTT = value;
				}
			}
		}
		
		[Column(Storage="_SECTC", DbType="Int")]
		[DataMember(Order=6)]
		public System.Nullable<int> SECTC
		{
			get
			{
				return this._SECTC;
			}
			set
			{
				if ((this._SECTC != value))
				{
					this._SECTC = value;
				}
			}
		}
		
		[Column(Storage="_WDAY", DbType="VarChar(3)")]
		[DataMember(Order=7)]
		public string WDAY
		{
			get
			{
				return this._WDAY;
			}
			set
			{
				if ((this._WDAY != value))
				{
					this._WDAY = value;
				}
			}
		}
		
		[Column(Storage="_SECTT1", DbType="Int")]
		[DataMember(Order=8)]
		public System.Nullable<int> SECTT1
		{
			get
			{
				return this._SECTT1;
			}
			set
			{
				if ((this._SECTT1 != value))
				{
					this._SECTT1 = value;
				}
			}
		}
		
		[Column(Storage="_OSECT", DbType="Int")]
		[DataMember(Order=9)]
		public System.Nullable<int> OSECT
		{
			get
			{
				return this._OSECT;
			}
			set
			{
				if ((this._OSECT != value))
				{
					this._OSECT = value;
				}
			}
		}
		
		[Column(Storage="_WeekDay", DbType="NVarChar(30)")]
		[DataMember(Order=10)]
		public string WeekDay
		{
			get
			{
				return this._WeekDay;
			}
			set
			{
				if ((this._WeekDay != value))
				{
					this._WeekDay = value;
				}
			}
		}
		
		[Column(Storage="_WeekOrder", DbType="Int")]
		[DataMember(Order=11)]
		public System.Nullable<int> WeekOrder
		{
			get
			{
				return this._WeekOrder;
			}
			set
			{
				if ((this._WeekOrder != value))
				{
					this._WeekOrder = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.view_CustomerProfile")]
	[DataContract()]
	public partial class view_CustomerProfile
	{
		
		private string _CUST;
		
		private string _LST2;
		
		private string _LST2D;
		
		private int _SEQ;
		
		private string _TPLANT;
		
		private System.Nullable<float> _FRST;
		
		private string _EXFWK;
		
		private string _EXFTM;
		
		private System.Nullable<float> _EXFDAY;
		
		private System.Nullable<float> _LSTR;
		
		private System.Nullable<float> _BZJS;
		
		private string _PMTH;
		
		private string _CJSWK;
		
		private string _CJSSJ;
		
		private string _REMK;
		
		private string _AEXFWK;
		
		private string _AEXFTM;
		
		private string _ACJSWK;
		
		private string _ACJSSJ;
		
		private string _LPORT;
		
		private string _ALPORT;
		
		private string _FCUST;
		
		private string _PGRP;
		
		private string _AGT;
		
		private string _ADDR;
		
		private string _PORTL;
		
		private string _LMTH;
		
		private string _SDUE;
		
		private string _IRATIO;
		
		private System.Nullable<float> _TTIME;
		
		private System.Nullable<float> _ITIME;
		
		private System.Nullable<float> _ATTIME;
		
		private string _ETD;
		
		private string _AETD;
		
		private string _GRP;
		
		private System.Nullable<float> _YSZQ;
		
		private System.Nullable<int> _RQTY;
		
		private System.Nullable<float> _BZNY;
		
		private bool _ACT;
		
		private int _RLINE;
		
		private System.Nullable<int> _RQTY1;
		
		private string _CGRP;
		
		private System.Nullable<float> _YSZQ1;
		
		private System.Nullable<float> _ORDDAY;
		
		private System.Nullable<float> _PSP1;
		
		private System.Nullable<float> _PSP2;
		
		private System.Nullable<float> _MPUR1;
		
		private System.Nullable<float> _MPUR2;
		
		private System.Nullable<float> _YSZQ01;
		
		private System.Nullable<float> _YSZQ0;
		
		private System.Nullable<float> _SP1;
		
		private System.Nullable<float> _TCT1;
		
		private System.Nullable<float> _TCT2;
		
		private System.Nullable<bool> _AB2;
		
		private System.Nullable<bool> _AB3;
		
		private System.Nullable<float> _ORDDAY_R;
		
		private System.Nullable<float> _PSP1_R;
		
		private System.Nullable<float> _PSP2_R;
		
		private System.Nullable<float> _MPUR1_R;
		
		private System.Nullable<float> _MPUR2_R;
		
		private System.Nullable<float> _FRST_R;
		
		private System.Nullable<float> _LSTR_R;
		
		private System.Nullable<float> _YSZQ_R;
		
		private System.Nullable<float> _YSZQ1_R;
		
		private System.Nullable<float> _YSZQ0_R;
		
		private System.Nullable<float> _YSZQ01_R;
		
		private System.Nullable<float> _SP1_R;
		
		private System.Nullable<float> _TCT1_R;
		
		private System.Nullable<float> _TCT2_R;
		
		private string _LPORT1;
		
		private string _EXFWK1;
		
		private string _EXFTM1;
		
		private string _CJSWK1;
		
		private string _CJSSJ1;
		
		private string _ETD1;
		
		private System.Nullable<float> _TTIME1;
		
		private string _ALPORT1;
		
		private string _AEXFWK1;
		
		private string _AEXFTM1;
		
		private string _ACJSWK1;
		
		private string _ACJSSJ1;
		
		private string _AETD1;
		
		private System.Nullable<float> _ATTIME1;
		
		public view_CustomerProfile()
		{
		}
		
		[Column(Storage="_CUST", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		[DataMember(Order=1)]
		public string CUST
		{
			get
			{
				return this._CUST;
			}
			set
			{
				if ((this._CUST != value))
				{
					this._CUST = value;
				}
			}
		}
		
		[Column(Storage="_LST2", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		[DataMember(Order=2)]
		public string LST2
		{
			get
			{
				return this._LST2;
			}
			set
			{
				if ((this._LST2 != value))
				{
					this._LST2 = value;
				}
			}
		}
		
		[Column(Storage="_LST2D", DbType="VarChar(30)")]
		[DataMember(Order=3)]
		public string LST2D
		{
			get
			{
				return this._LST2D;
			}
			set
			{
				if ((this._LST2D != value))
				{
					this._LST2D = value;
				}
			}
		}
		
		[Column(Storage="_SEQ", DbType="Int NOT NULL")]
		[DataMember(Order=4)]
		public int SEQ
		{
			get
			{
				return this._SEQ;
			}
			set
			{
				if ((this._SEQ != value))
				{
					this._SEQ = value;
				}
			}
		}
		
		[Column(Storage="_TPLANT", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		[DataMember(Order=5)]
		public string TPLANT
		{
			get
			{
				return this._TPLANT;
			}
			set
			{
				if ((this._TPLANT != value))
				{
					this._TPLANT = value;
				}
			}
		}
		
		[Column(Storage="_FRST", DbType="Real")]
		[DataMember(Order=6)]
		public System.Nullable<float> FRST
		{
			get
			{
				return this._FRST;
			}
			set
			{
				if ((this._FRST != value))
				{
					this._FRST = value;
				}
			}
		}
		
		[Column(Storage="_EXFWK", DbType="VarChar(10)")]
		[DataMember(Order=7)]
		public string EXFWK
		{
			get
			{
				return this._EXFWK;
			}
			set
			{
				if ((this._EXFWK != value))
				{
					this._EXFWK = value;
				}
			}
		}
		
		[Column(Storage="_EXFTM", DbType="VarChar(20)")]
		[DataMember(Order=8)]
		public string EXFTM
		{
			get
			{
				return this._EXFTM;
			}
			set
			{
				if ((this._EXFTM != value))
				{
					this._EXFTM = value;
				}
			}
		}
		
		[Column(Storage="_EXFDAY", DbType="Real")]
		[DataMember(Order=9)]
		public System.Nullable<float> EXFDAY
		{
			get
			{
				return this._EXFDAY;
			}
			set
			{
				if ((this._EXFDAY != value))
				{
					this._EXFDAY = value;
				}
			}
		}
		
		[Column(Storage="_LSTR", DbType="Real")]
		[DataMember(Order=10)]
		public System.Nullable<float> LSTR
		{
			get
			{
				return this._LSTR;
			}
			set
			{
				if ((this._LSTR != value))
				{
					this._LSTR = value;
				}
			}
		}
		
		[Column(Storage="_BZJS", DbType="Real")]
		[DataMember(Order=11)]
		public System.Nullable<float> BZJS
		{
			get
			{
				return this._BZJS;
			}
			set
			{
				if ((this._BZJS != value))
				{
					this._BZJS = value;
				}
			}
		}
		
		[Column(Storage="_PMTH", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		[DataMember(Order=12)]
		public string PMTH
		{
			get
			{
				return this._PMTH;
			}
			set
			{
				if ((this._PMTH != value))
				{
					this._PMTH = value;
				}
			}
		}
		
		[Column(Storage="_CJSWK", DbType="VarChar(10)")]
		[DataMember(Order=13)]
		public string CJSWK
		{
			get
			{
				return this._CJSWK;
			}
			set
			{
				if ((this._CJSWK != value))
				{
					this._CJSWK = value;
				}
			}
		}
		
		[Column(Storage="_CJSSJ", DbType="VarChar(20)")]
		[DataMember(Order=14)]
		public string CJSSJ
		{
			get
			{
				return this._CJSSJ;
			}
			set
			{
				if ((this._CJSSJ != value))
				{
					this._CJSSJ = value;
				}
			}
		}
		
		[Column(Storage="_REMK", DbType="VarChar(10)")]
		[DataMember(Order=15)]
		public string REMK
		{
			get
			{
				return this._REMK;
			}
			set
			{
				if ((this._REMK != value))
				{
					this._REMK = value;
				}
			}
		}
		
		[Column(Storage="_AEXFWK", DbType="VarChar(10)")]
		[DataMember(Order=16)]
		public string AEXFWK
		{
			get
			{
				return this._AEXFWK;
			}
			set
			{
				if ((this._AEXFWK != value))
				{
					this._AEXFWK = value;
				}
			}
		}
		
		[Column(Storage="_AEXFTM", DbType="VarChar(20)")]
		[DataMember(Order=17)]
		public string AEXFTM
		{
			get
			{
				return this._AEXFTM;
			}
			set
			{
				if ((this._AEXFTM != value))
				{
					this._AEXFTM = value;
				}
			}
		}
		
		[Column(Storage="_ACJSWK", DbType="VarChar(10)")]
		[DataMember(Order=18)]
		public string ACJSWK
		{
			get
			{
				return this._ACJSWK;
			}
			set
			{
				if ((this._ACJSWK != value))
				{
					this._ACJSWK = value;
				}
			}
		}
		
		[Column(Storage="_ACJSSJ", DbType="VarChar(20)")]
		[DataMember(Order=19)]
		public string ACJSSJ
		{
			get
			{
				return this._ACJSSJ;
			}
			set
			{
				if ((this._ACJSSJ != value))
				{
					this._ACJSSJ = value;
				}
			}
		}
		
		[Column(Storage="_LPORT", DbType="VarChar(20)")]
		[DataMember(Order=20)]
		public string LPORT
		{
			get
			{
				return this._LPORT;
			}
			set
			{
				if ((this._LPORT != value))
				{
					this._LPORT = value;
				}
			}
		}
		
		[Column(Storage="_ALPORT", DbType="VarChar(20)")]
		[DataMember(Order=21)]
		public string ALPORT
		{
			get
			{
				return this._ALPORT;
			}
			set
			{
				if ((this._ALPORT != value))
				{
					this._ALPORT = value;
				}
			}
		}
		
		[Column(Storage="_FCUST", DbType="VarChar(20)")]
		[DataMember(Order=22)]
		public string FCUST
		{
			get
			{
				return this._FCUST;
			}
			set
			{
				if ((this._FCUST != value))
				{
					this._FCUST = value;
				}
			}
		}
		
		[Column(Storage="_PGRP", DbType="VarChar(10)")]
		[DataMember(Order=23)]
		public string PGRP
		{
			get
			{
				return this._PGRP;
			}
			set
			{
				if ((this._PGRP != value))
				{
					this._PGRP = value;
				}
			}
		}
		
		[Column(Storage="_AGT", DbType="VarChar(20)")]
		[DataMember(Order=24)]
		public string AGT
		{
			get
			{
				return this._AGT;
			}
			set
			{
				if ((this._AGT != value))
				{
					this._AGT = value;
				}
			}
		}
		
		[Column(Storage="_ADDR", DbType="VarChar(20)")]
		[DataMember(Order=25)]
		public string ADDR
		{
			get
			{
				return this._ADDR;
			}
			set
			{
				if ((this._ADDR != value))
				{
					this._ADDR = value;
				}
			}
		}
		
		[Column(Storage="_PORTL", DbType="VarChar(10)")]
		[DataMember(Order=26)]
		public string PORTL
		{
			get
			{
				return this._PORTL;
			}
			set
			{
				if ((this._PORTL != value))
				{
					this._PORTL = value;
				}
			}
		}
		
		[Column(Storage="_LMTH", DbType="VarChar(10)")]
		[DataMember(Order=27)]
		public string LMTH
		{
			get
			{
				return this._LMTH;
			}
			set
			{
				if ((this._LMTH != value))
				{
					this._LMTH = value;
				}
			}
		}
		
		[Column(Storage="_SDUE", DbType="VarChar(20)")]
		[DataMember(Order=28)]
		public string SDUE
		{
			get
			{
				return this._SDUE;
			}
			set
			{
				if ((this._SDUE != value))
				{
					this._SDUE = value;
				}
			}
		}
		
		[Column(Storage="_IRATIO", DbType="VarChar(10)")]
		[DataMember(Order=29)]
		public string IRATIO
		{
			get
			{
				return this._IRATIO;
			}
			set
			{
				if ((this._IRATIO != value))
				{
					this._IRATIO = value;
				}
			}
		}
		
		[Column(Storage="_TTIME", DbType="Real")]
		[DataMember(Order=30)]
		public System.Nullable<float> TTIME
		{
			get
			{
				return this._TTIME;
			}
			set
			{
				if ((this._TTIME != value))
				{
					this._TTIME = value;
				}
			}
		}
		
		[Column(Storage="_ITIME", DbType="Real")]
		[DataMember(Order=31)]
		public System.Nullable<float> ITIME
		{
			get
			{
				return this._ITIME;
			}
			set
			{
				if ((this._ITIME != value))
				{
					this._ITIME = value;
				}
			}
		}
		
		[Column(Storage="_ATTIME", DbType="Real")]
		[DataMember(Order=32)]
		public System.Nullable<float> ATTIME
		{
			get
			{
				return this._ATTIME;
			}
			set
			{
				if ((this._ATTIME != value))
				{
					this._ATTIME = value;
				}
			}
		}
		
		[Column(Storage="_ETD", DbType="VarChar(10)")]
		[DataMember(Order=33)]
		public string ETD
		{
			get
			{
				return this._ETD;
			}
			set
			{
				if ((this._ETD != value))
				{
					this._ETD = value;
				}
			}
		}
		
		[Column(Storage="_AETD", DbType="VarChar(10)")]
		[DataMember(Order=34)]
		public string AETD
		{
			get
			{
				return this._AETD;
			}
			set
			{
				if ((this._AETD != value))
				{
					this._AETD = value;
				}
			}
		}
		
		[Column(Storage="_GRP", DbType="VarChar(5)")]
		[DataMember(Order=35)]
		public string GRP
		{
			get
			{
				return this._GRP;
			}
			set
			{
				if ((this._GRP != value))
				{
					this._GRP = value;
				}
			}
		}
		
		[Column(Storage="_YSZQ", DbType="Real")]
		[DataMember(Order=36)]
		public System.Nullable<float> YSZQ
		{
			get
			{
				return this._YSZQ;
			}
			set
			{
				if ((this._YSZQ != value))
				{
					this._YSZQ = value;
				}
			}
		}
		
		[Column(Storage="_RQTY", DbType="Int")]
		[DataMember(Order=37)]
		public System.Nullable<int> RQTY
		{
			get
			{
				return this._RQTY;
			}
			set
			{
				if ((this._RQTY != value))
				{
					this._RQTY = value;
				}
			}
		}
		
		[Column(Storage="_BZNY", DbType="Real")]
		[DataMember(Order=38)]
		public System.Nullable<float> BZNY
		{
			get
			{
				return this._BZNY;
			}
			set
			{
				if ((this._BZNY != value))
				{
					this._BZNY = value;
				}
			}
		}
		
		[Column(Storage="_ACT", DbType="Bit NOT NULL")]
		[DataMember(Order=39)]
		public bool ACT
		{
			get
			{
				return this._ACT;
			}
			set
			{
				if ((this._ACT != value))
				{
					this._ACT = value;
				}
			}
		}
		
		[Column(Storage="_RLINE", DbType="Int NOT NULL")]
		[DataMember(Order=40)]
		public int RLINE
		{
			get
			{
				return this._RLINE;
			}
			set
			{
				if ((this._RLINE != value))
				{
					this._RLINE = value;
				}
			}
		}
		
		[Column(Storage="_RQTY1", DbType="Int")]
		[DataMember(Order=41)]
		public System.Nullable<int> RQTY1
		{
			get
			{
				return this._RQTY1;
			}
			set
			{
				if ((this._RQTY1 != value))
				{
					this._RQTY1 = value;
				}
			}
		}
		
		[Column(Storage="_CGRP", DbType="VarChar(20)")]
		[DataMember(Order=42)]
		public string CGRP
		{
			get
			{
				return this._CGRP;
			}
			set
			{
				if ((this._CGRP != value))
				{
					this._CGRP = value;
				}
			}
		}
		
		[Column(Storage="_YSZQ1", DbType="Real")]
		[DataMember(Order=43)]
		public System.Nullable<float> YSZQ1
		{
			get
			{
				return this._YSZQ1;
			}
			set
			{
				if ((this._YSZQ1 != value))
				{
					this._YSZQ1 = value;
				}
			}
		}
		
		[Column(Storage="_ORDDAY", DbType="Real")]
		[DataMember(Order=44)]
		public System.Nullable<float> ORDDAY
		{
			get
			{
				return this._ORDDAY;
			}
			set
			{
				if ((this._ORDDAY != value))
				{
					this._ORDDAY = value;
				}
			}
		}
		
		[Column(Storage="_PSP1", DbType="Real")]
		[DataMember(Order=45)]
		public System.Nullable<float> PSP1
		{
			get
			{
				return this._PSP1;
			}
			set
			{
				if ((this._PSP1 != value))
				{
					this._PSP1 = value;
				}
			}
		}
		
		[Column(Storage="_PSP2", DbType="Real")]
		[DataMember(Order=46)]
		public System.Nullable<float> PSP2
		{
			get
			{
				return this._PSP2;
			}
			set
			{
				if ((this._PSP2 != value))
				{
					this._PSP2 = value;
				}
			}
		}
		
		[Column(Storage="_MPUR1", DbType="Real")]
		[DataMember(Order=47)]
		public System.Nullable<float> MPUR1
		{
			get
			{
				return this._MPUR1;
			}
			set
			{
				if ((this._MPUR1 != value))
				{
					this._MPUR1 = value;
				}
			}
		}
		
		[Column(Storage="_MPUR2", DbType="Real")]
		[DataMember(Order=48)]
		public System.Nullable<float> MPUR2
		{
			get
			{
				return this._MPUR2;
			}
			set
			{
				if ((this._MPUR2 != value))
				{
					this._MPUR2 = value;
				}
			}
		}
		
		[Column(Storage="_YSZQ01", DbType="Real")]
		[DataMember(Order=49)]
		public System.Nullable<float> YSZQ01
		{
			get
			{
				return this._YSZQ01;
			}
			set
			{
				if ((this._YSZQ01 != value))
				{
					this._YSZQ01 = value;
				}
			}
		}
		
		[Column(Storage="_YSZQ0", DbType="Real")]
		[DataMember(Order=50)]
		public System.Nullable<float> YSZQ0
		{
			get
			{
				return this._YSZQ0;
			}
			set
			{
				if ((this._YSZQ0 != value))
				{
					this._YSZQ0 = value;
				}
			}
		}
		
		[Column(Storage="_SP1", DbType="Real")]
		[DataMember(Order=51)]
		public System.Nullable<float> SP1
		{
			get
			{
				return this._SP1;
			}
			set
			{
				if ((this._SP1 != value))
				{
					this._SP1 = value;
				}
			}
		}
		
		[Column(Storage="_TCT1", DbType="Real")]
		[DataMember(Order=52)]
		public System.Nullable<float> TCT1
		{
			get
			{
				return this._TCT1;
			}
			set
			{
				if ((this._TCT1 != value))
				{
					this._TCT1 = value;
				}
			}
		}
		
		[Column(Storage="_TCT2", DbType="Real")]
		[DataMember(Order=53)]
		public System.Nullable<float> TCT2
		{
			get
			{
				return this._TCT2;
			}
			set
			{
				if ((this._TCT2 != value))
				{
					this._TCT2 = value;
				}
			}
		}
		
		[Column(Storage="_AB2", DbType="Bit")]
		[DataMember(Order=54)]
		public System.Nullable<bool> AB2
		{
			get
			{
				return this._AB2;
			}
			set
			{
				if ((this._AB2 != value))
				{
					this._AB2 = value;
				}
			}
		}
		
		[Column(Storage="_AB3", DbType="Bit")]
		[DataMember(Order=55)]
		public System.Nullable<bool> AB3
		{
			get
			{
				return this._AB3;
			}
			set
			{
				if ((this._AB3 != value))
				{
					this._AB3 = value;
				}
			}
		}
		
		[Column(Storage="_ORDDAY_R", DbType="Real")]
		[DataMember(Order=56)]
		public System.Nullable<float> ORDDAY_R
		{
			get
			{
				return this._ORDDAY_R;
			}
			set
			{
				if ((this._ORDDAY_R != value))
				{
					this._ORDDAY_R = value;
				}
			}
		}
		
		[Column(Storage="_PSP1_R", DbType="Real")]
		[DataMember(Order=57)]
		public System.Nullable<float> PSP1_R
		{
			get
			{
				return this._PSP1_R;
			}
			set
			{
				if ((this._PSP1_R != value))
				{
					this._PSP1_R = value;
				}
			}
		}
		
		[Column(Storage="_PSP2_R", DbType="Real")]
		[DataMember(Order=58)]
		public System.Nullable<float> PSP2_R
		{
			get
			{
				return this._PSP2_R;
			}
			set
			{
				if ((this._PSP2_R != value))
				{
					this._PSP2_R = value;
				}
			}
		}
		
		[Column(Storage="_MPUR1_R", DbType="Real")]
		[DataMember(Order=59)]
		public System.Nullable<float> MPUR1_R
		{
			get
			{
				return this._MPUR1_R;
			}
			set
			{
				if ((this._MPUR1_R != value))
				{
					this._MPUR1_R = value;
				}
			}
		}
		
		[Column(Storage="_MPUR2_R", DbType="Real")]
		[DataMember(Order=60)]
		public System.Nullable<float> MPUR2_R
		{
			get
			{
				return this._MPUR2_R;
			}
			set
			{
				if ((this._MPUR2_R != value))
				{
					this._MPUR2_R = value;
				}
			}
		}
		
		[Column(Storage="_FRST_R", DbType="Real")]
		[DataMember(Order=61)]
		public System.Nullable<float> FRST_R
		{
			get
			{
				return this._FRST_R;
			}
			set
			{
				if ((this._FRST_R != value))
				{
					this._FRST_R = value;
				}
			}
		}
		
		[Column(Storage="_LSTR_R", DbType="Real")]
		[DataMember(Order=62)]
		public System.Nullable<float> LSTR_R
		{
			get
			{
				return this._LSTR_R;
			}
			set
			{
				if ((this._LSTR_R != value))
				{
					this._LSTR_R = value;
				}
			}
		}
		
		[Column(Storage="_YSZQ_R", DbType="Real")]
		[DataMember(Order=63)]
		public System.Nullable<float> YSZQ_R
		{
			get
			{
				return this._YSZQ_R;
			}
			set
			{
				if ((this._YSZQ_R != value))
				{
					this._YSZQ_R = value;
				}
			}
		}
		
		[Column(Storage="_YSZQ1_R", DbType="Real")]
		[DataMember(Order=64)]
		public System.Nullable<float> YSZQ1_R
		{
			get
			{
				return this._YSZQ1_R;
			}
			set
			{
				if ((this._YSZQ1_R != value))
				{
					this._YSZQ1_R = value;
				}
			}
		}
		
		[Column(Storage="_YSZQ0_R", DbType="Real")]
		[DataMember(Order=65)]
		public System.Nullable<float> YSZQ0_R
		{
			get
			{
				return this._YSZQ0_R;
			}
			set
			{
				if ((this._YSZQ0_R != value))
				{
					this._YSZQ0_R = value;
				}
			}
		}
		
		[Column(Storage="_YSZQ01_R", DbType="Real")]
		[DataMember(Order=66)]
		public System.Nullable<float> YSZQ01_R
		{
			get
			{
				return this._YSZQ01_R;
			}
			set
			{
				if ((this._YSZQ01_R != value))
				{
					this._YSZQ01_R = value;
				}
			}
		}
		
		[Column(Storage="_SP1_R", DbType="Real")]
		[DataMember(Order=67)]
		public System.Nullable<float> SP1_R
		{
			get
			{
				return this._SP1_R;
			}
			set
			{
				if ((this._SP1_R != value))
				{
					this._SP1_R = value;
				}
			}
		}
		
		[Column(Storage="_TCT1_R", DbType="Real")]
		[DataMember(Order=68)]
		public System.Nullable<float> TCT1_R
		{
			get
			{
				return this._TCT1_R;
			}
			set
			{
				if ((this._TCT1_R != value))
				{
					this._TCT1_R = value;
				}
			}
		}
		
		[Column(Storage="_TCT2_R", DbType="Real")]
		[DataMember(Order=69)]
		public System.Nullable<float> TCT2_R
		{
			get
			{
				return this._TCT2_R;
			}
			set
			{
				if ((this._TCT2_R != value))
				{
					this._TCT2_R = value;
				}
			}
		}
		
		[Column(Storage="_LPORT1", DbType="VarChar(20)")]
		[DataMember(Order=70)]
		public string LPORT1
		{
			get
			{
				return this._LPORT1;
			}
			set
			{
				if ((this._LPORT1 != value))
				{
					this._LPORT1 = value;
				}
			}
		}
		
		[Column(Storage="_EXFWK1", DbType="VarChar(10)")]
		[DataMember(Order=71)]
		public string EXFWK1
		{
			get
			{
				return this._EXFWK1;
			}
			set
			{
				if ((this._EXFWK1 != value))
				{
					this._EXFWK1 = value;
				}
			}
		}
		
		[Column(Storage="_EXFTM1", DbType="VarChar(20)")]
		[DataMember(Order=72)]
		public string EXFTM1
		{
			get
			{
				return this._EXFTM1;
			}
			set
			{
				if ((this._EXFTM1 != value))
				{
					this._EXFTM1 = value;
				}
			}
		}
		
		[Column(Storage="_CJSWK1", DbType="VarChar(10)")]
		[DataMember(Order=73)]
		public string CJSWK1
		{
			get
			{
				return this._CJSWK1;
			}
			set
			{
				if ((this._CJSWK1 != value))
				{
					this._CJSWK1 = value;
				}
			}
		}
		
		[Column(Storage="_CJSSJ1", DbType="VarChar(20)")]
		[DataMember(Order=74)]
		public string CJSSJ1
		{
			get
			{
				return this._CJSSJ1;
			}
			set
			{
				if ((this._CJSSJ1 != value))
				{
					this._CJSSJ1 = value;
				}
			}
		}
		
		[Column(Storage="_ETD1", DbType="VarChar(10)")]
		[DataMember(Order=75)]
		public string ETD1
		{
			get
			{
				return this._ETD1;
			}
			set
			{
				if ((this._ETD1 != value))
				{
					this._ETD1 = value;
				}
			}
		}
		
		[Column(Storage="_TTIME1", DbType="Real")]
		[DataMember(Order=76)]
		public System.Nullable<float> TTIME1
		{
			get
			{
				return this._TTIME1;
			}
			set
			{
				if ((this._TTIME1 != value))
				{
					this._TTIME1 = value;
				}
			}
		}
		
		[Column(Storage="_ALPORT1", DbType="VarChar(20)")]
		[DataMember(Order=77)]
		public string ALPORT1
		{
			get
			{
				return this._ALPORT1;
			}
			set
			{
				if ((this._ALPORT1 != value))
				{
					this._ALPORT1 = value;
				}
			}
		}
		
		[Column(Storage="_AEXFWK1", DbType="VarChar(10)")]
		[DataMember(Order=78)]
		public string AEXFWK1
		{
			get
			{
				return this._AEXFWK1;
			}
			set
			{
				if ((this._AEXFWK1 != value))
				{
					this._AEXFWK1 = value;
				}
			}
		}
		
		[Column(Storage="_AEXFTM1", DbType="VarChar(20)")]
		[DataMember(Order=79)]
		public string AEXFTM1
		{
			get
			{
				return this._AEXFTM1;
			}
			set
			{
				if ((this._AEXFTM1 != value))
				{
					this._AEXFTM1 = value;
				}
			}
		}
		
		[Column(Storage="_ACJSWK1", DbType="VarChar(10)")]
		[DataMember(Order=80)]
		public string ACJSWK1
		{
			get
			{
				return this._ACJSWK1;
			}
			set
			{
				if ((this._ACJSWK1 != value))
				{
					this._ACJSWK1 = value;
				}
			}
		}
		
		[Column(Storage="_ACJSSJ1", DbType="VarChar(20)")]
		[DataMember(Order=81)]
		public string ACJSSJ1
		{
			get
			{
				return this._ACJSSJ1;
			}
			set
			{
				if ((this._ACJSSJ1 != value))
				{
					this._ACJSSJ1 = value;
				}
			}
		}
		
		[Column(Storage="_AETD1", DbType="VarChar(10)")]
		[DataMember(Order=82)]
		public string AETD1
		{
			get
			{
				return this._AETD1;
			}
			set
			{
				if ((this._AETD1 != value))
				{
					this._AETD1 = value;
				}
			}
		}
		
		[Column(Storage="_ATTIME1", DbType="Real")]
		[DataMember(Order=83)]
		public System.Nullable<float> ATTIME1
		{
			get
			{
				return this._ATTIME1;
			}
			set
			{
				if ((this._ATTIME1 != value))
				{
					this._ATTIME1 = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.View_Export")]
	[DataContract()]
	public partial class View_Export
	{
		
		private string _ProjectNo;
		
		private string _WorkOrderNo;
		
		private string _WOStatus;
		
		private string _WOc;
		
		private System.Nullable<System.DateTime> _ExFtyDate;
		
		private System.Nullable<System.DateTime> _DeliveryDate;
		
		private string _ManufactureCode;
		
		private string _ColorCode;
		
		private string _Cup;
		
		private string _Size;
		
		private string _CustomerStyleNo;
		
		private string _Customer;
		
		private string _CustomerCode;
		
		private string _Unit;
		
		private System.Nullable<int> _BulkQty;
		
		public View_Export()
		{
		}
		
		[Column(Storage="_ProjectNo", DbType="NVarChar(50)")]
		[DataMember(Order=1)]
		public string ProjectNo
		{
			get
			{
				return this._ProjectNo;
			}
			set
			{
				if ((this._ProjectNo != value))
				{
					this._ProjectNo = value;
				}
			}
		}
		
		[Column(Storage="_WorkOrderNo", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		[DataMember(Order=2)]
		public string WorkOrderNo
		{
			get
			{
				return this._WorkOrderNo;
			}
			set
			{
				if ((this._WorkOrderNo != value))
				{
					this._WorkOrderNo = value;
				}
			}
		}
		
		[Column(Storage="_WOStatus", DbType="VarChar(2)")]
		[DataMember(Order=3)]
		public string WOStatus
		{
			get
			{
				return this._WOStatus;
			}
			set
			{
				if ((this._WOStatus != value))
				{
					this._WOStatus = value;
				}
			}
		}
		
		[Column(Storage="_WOc", DbType="VarChar(5)")]
		[DataMember(Order=4)]
		public string WOc
		{
			get
			{
				return this._WOc;
			}
			set
			{
				if ((this._WOc != value))
				{
					this._WOc = value;
				}
			}
		}
		
		[Column(Storage="_ExFtyDate", DbType="DateTime")]
		[DataMember(Order=5)]
		public System.Nullable<System.DateTime> ExFtyDate
		{
			get
			{
				return this._ExFtyDate;
			}
			set
			{
				if ((this._ExFtyDate != value))
				{
					this._ExFtyDate = value;
				}
			}
		}
		
		[Column(Storage="_DeliveryDate", DbType="DateTime")]
		[DataMember(Order=6)]
		public System.Nullable<System.DateTime> DeliveryDate
		{
			get
			{
				return this._DeliveryDate;
			}
			set
			{
				if ((this._DeliveryDate != value))
				{
					this._DeliveryDate = value;
				}
			}
		}
		
		[Column(Storage="_ManufactureCode", DbType="VarChar(4) NOT NULL", CanBeNull=false)]
		[DataMember(Order=7)]
		public string ManufactureCode
		{
			get
			{
				return this._ManufactureCode;
			}
			set
			{
				if ((this._ManufactureCode != value))
				{
					this._ManufactureCode = value;
				}
			}
		}
		
		[Column(Storage="_ColorCode", DbType="VarChar(3) NOT NULL", CanBeNull=false)]
		[DataMember(Order=8)]
		public string ColorCode
		{
			get
			{
				return this._ColorCode;
			}
			set
			{
				if ((this._ColorCode != value))
				{
					this._ColorCode = value;
				}
			}
		}
		
		[Column(Storage="_Cup", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		[DataMember(Order=9)]
		public string Cup
		{
			get
			{
				return this._Cup;
			}
			set
			{
				if ((this._Cup != value))
				{
					this._Cup = value;
				}
			}
		}
		
		[Column(Storage="_Size", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		[DataMember(Order=10)]
		public string Size
		{
			get
			{
				return this._Size;
			}
			set
			{
				if ((this._Size != value))
				{
					this._Size = value;
				}
			}
		}
		
		[Column(Storage="_CustomerStyleNo", DbType="NVarChar(50)")]
		[DataMember(Order=11)]
		public string CustomerStyleNo
		{
			get
			{
				return this._CustomerStyleNo;
			}
			set
			{
				if ((this._CustomerStyleNo != value))
				{
					this._CustomerStyleNo = value;
				}
			}
		}
		
		[Column(Storage="_Customer", DbType="NVarChar(50)")]
		[DataMember(Order=12)]
		public string Customer
		{
			get
			{
				return this._Customer;
			}
			set
			{
				if ((this._Customer != value))
				{
					this._Customer = value;
				}
			}
		}
		
		[Column(Storage="_CustomerCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[DataMember(Order=13)]
		public string CustomerCode
		{
			get
			{
				return this._CustomerCode;
			}
			set
			{
				if ((this._CustomerCode != value))
				{
					this._CustomerCode = value;
				}
			}
		}
		
		[Column(Storage="_Unit", DbType="VarChar(3) NOT NULL", CanBeNull=false)]
		[DataMember(Order=14)]
		public string Unit
		{
			get
			{
				return this._Unit;
			}
			set
			{
				if ((this._Unit != value))
				{
					this._Unit = value;
				}
			}
		}
		
		[Column(Storage="_BulkQty", DbType="Int")]
		[DataMember(Order=15)]
		public System.Nullable<int> BulkQty
		{
			get
			{
				return this._BulkQty;
			}
			set
			{
				if ((this._BulkQty != value))
				{
					this._BulkQty = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.View_RwoColorSize")]
	[DataContract()]
	public partial class View_RwoColorSize
	{
		
		private string _CustSIZE;
		
		private string _CustCup;
		
		private string _SIZE;
		
		private string _Cup;
		
		private decimal _DespatchQty;
		
		private string _Company;
		
		private string _SalesOrderNo;
		
		private string _WorkOrderNo;
		
		private int _RoundNo;
		
		private System.Nullable<int> _RoundTotal;
		
		private string _ColorCode;
		
		private int _SalesOrderLine;
		
		public View_RwoColorSize()
		{
		}
		
		[Column(Storage="_CustSIZE", DbType="NVarChar(50)")]
		[DataMember(Order=1)]
		public string CustSIZE
		{
			get
			{
				return this._CustSIZE;
			}
			set
			{
				if ((this._CustSIZE != value))
				{
					this._CustSIZE = value;
				}
			}
		}
		
		[Column(Storage="_CustCup", DbType="NVarChar(50)")]
		[DataMember(Order=2)]
		public string CustCup
		{
			get
			{
				return this._CustCup;
			}
			set
			{
				if ((this._CustCup != value))
				{
					this._CustCup = value;
				}
			}
		}
		
		[Column(Storage="_SIZE", DbType="NChar(3)")]
		[DataMember(Order=3)]
		public string SIZE
		{
			get
			{
				return this._SIZE;
			}
			set
			{
				if ((this._SIZE != value))
				{
					this._SIZE = value;
				}
			}
		}
		
		[Column(Storage="_Cup", DbType="NChar(3)")]
		[DataMember(Order=4)]
		public string Cup
		{
			get
			{
				return this._Cup;
			}
			set
			{
				if ((this._Cup != value))
				{
					this._Cup = value;
				}
			}
		}
		
		[Column(Storage="_DespatchQty", DbType="Decimal(11,3) NOT NULL")]
		[DataMember(Order=5)]
		public decimal DespatchQty
		{
			get
			{
				return this._DespatchQty;
			}
			set
			{
				if ((this._DespatchQty != value))
				{
					this._DespatchQty = value;
				}
			}
		}
		
		[Column(Storage="_Company", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		[DataMember(Order=6)]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this._Company = value;
				}
			}
		}
		
		[Column(Storage="_SalesOrderNo", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		[DataMember(Order=7)]
		public string SalesOrderNo
		{
			get
			{
				return this._SalesOrderNo;
			}
			set
			{
				if ((this._SalesOrderNo != value))
				{
					this._SalesOrderNo = value;
				}
			}
		}
		
		[Column(Storage="_WorkOrderNo", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		[DataMember(Order=8)]
		public string WorkOrderNo
		{
			get
			{
				return this._WorkOrderNo;
			}
			set
			{
				if ((this._WorkOrderNo != value))
				{
					this._WorkOrderNo = value;
				}
			}
		}
		
		[Column(Storage="_RoundNo", DbType="Int NOT NULL")]
		[DataMember(Order=9)]
		public int RoundNo
		{
			get
			{
				return this._RoundNo;
			}
			set
			{
				if ((this._RoundNo != value))
				{
					this._RoundNo = value;
				}
			}
		}
		
		[Column(Storage="_RoundTotal", DbType="Int")]
		[DataMember(Order=10)]
		public System.Nullable<int> RoundTotal
		{
			get
			{
				return this._RoundTotal;
			}
			set
			{
				if ((this._RoundTotal != value))
				{
					this._RoundTotal = value;
				}
			}
		}
		
		[Column(Storage="_ColorCode", DbType="VarChar(3) NOT NULL", CanBeNull=false)]
		[DataMember(Order=11)]
		public string ColorCode
		{
			get
			{
				return this._ColorCode;
			}
			set
			{
				if ((this._ColorCode != value))
				{
					this._ColorCode = value;
				}
			}
		}
		
		[Column(Storage="_SalesOrderLine", DbType="Int NOT NULL")]
		[DataMember(Order=12)]
		public int SalesOrderLine
		{
			get
			{
				return this._SalesOrderLine;
			}
			set
			{
				if ((this._SalesOrderLine != value))
				{
					this._SalesOrderLine = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.View_RwoColorSizeQty")]
	[DataContract()]
	public partial class View_RwoColorSizeQty
	{
		
		private string _CustSize;
		
		private string _CustCup;
		
		private string _SIZE;
		
		private string _Cup;
		
		private decimal _DespatchQty;
		
		private decimal _BulkQty;
		
		private string _Company;
		
		private string _SalesOrderNo;
		
		private string _WorkOrderNo;
		
		private int _RoundNo;
		
		private System.Nullable<int> _RoundTotal;
		
		private string _ColorCode;
		
		private int _SampleQty;
		
		private int _SalesOrderLine;
		
		public View_RwoColorSizeQty()
		{
		}
		
		[Column(Storage="_CustSize", DbType="NVarChar(50)")]
		[DataMember(Order=1)]
		public string CustSize
		{
			get
			{
				return this._CustSize;
			}
			set
			{
				if ((this._CustSize != value))
				{
					this._CustSize = value;
				}
			}
		}
		
		[Column(Storage="_CustCup", DbType="NVarChar(50)")]
		[DataMember(Order=2)]
		public string CustCup
		{
			get
			{
				return this._CustCup;
			}
			set
			{
				if ((this._CustCup != value))
				{
					this._CustCup = value;
				}
			}
		}
		
		[Column(Storage="_SIZE", DbType="NChar(3)")]
		[DataMember(Order=3)]
		public string SIZE
		{
			get
			{
				return this._SIZE;
			}
			set
			{
				if ((this._SIZE != value))
				{
					this._SIZE = value;
				}
			}
		}
		
		[Column(Storage="_Cup", DbType="NChar(3)")]
		[DataMember(Order=4)]
		public string Cup
		{
			get
			{
				return this._Cup;
			}
			set
			{
				if ((this._Cup != value))
				{
					this._Cup = value;
				}
			}
		}
		
		[Column(Storage="_DespatchQty", DbType="Decimal(11,3) NOT NULL")]
		[DataMember(Order=5)]
		public decimal DespatchQty
		{
			get
			{
				return this._DespatchQty;
			}
			set
			{
				if ((this._DespatchQty != value))
				{
					this._DespatchQty = value;
				}
			}
		}
		
		[Column(Storage="_BulkQty", DbType="Decimal(11,3) NOT NULL")]
		[DataMember(Order=6)]
		public decimal BulkQty
		{
			get
			{
				return this._BulkQty;
			}
			set
			{
				if ((this._BulkQty != value))
				{
					this._BulkQty = value;
				}
			}
		}
		
		[Column(Storage="_Company", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		[DataMember(Order=7)]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this._Company = value;
				}
			}
		}
		
		[Column(Storage="_SalesOrderNo", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		[DataMember(Order=8)]
		public string SalesOrderNo
		{
			get
			{
				return this._SalesOrderNo;
			}
			set
			{
				if ((this._SalesOrderNo != value))
				{
					this._SalesOrderNo = value;
				}
			}
		}
		
		[Column(Storage="_WorkOrderNo", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		[DataMember(Order=9)]
		public string WorkOrderNo
		{
			get
			{
				return this._WorkOrderNo;
			}
			set
			{
				if ((this._WorkOrderNo != value))
				{
					this._WorkOrderNo = value;
				}
			}
		}
		
		[Column(Storage="_RoundNo", DbType="Int NOT NULL")]
		[DataMember(Order=10)]
		public int RoundNo
		{
			get
			{
				return this._RoundNo;
			}
			set
			{
				if ((this._RoundNo != value))
				{
					this._RoundNo = value;
				}
			}
		}
		
		[Column(Storage="_RoundTotal", DbType="Int")]
		[DataMember(Order=11)]
		public System.Nullable<int> RoundTotal
		{
			get
			{
				return this._RoundTotal;
			}
			set
			{
				if ((this._RoundTotal != value))
				{
					this._RoundTotal = value;
				}
			}
		}
		
		[Column(Storage="_ColorCode", DbType="VarChar(3) NOT NULL", CanBeNull=false)]
		[DataMember(Order=12)]
		public string ColorCode
		{
			get
			{
				return this._ColorCode;
			}
			set
			{
				if ((this._ColorCode != value))
				{
					this._ColorCode = value;
				}
			}
		}
		
		[Column(Storage="_SampleQty", DbType="Int NOT NULL")]
		[DataMember(Order=13)]
		public int SampleQty
		{
			get
			{
				return this._SampleQty;
			}
			set
			{
				if ((this._SampleQty != value))
				{
					this._SampleQty = value;
				}
			}
		}
		
		[Column(Storage="_SalesOrderLine", DbType="Int NOT NULL")]
		[DataMember(Order=14)]
		public int SalesOrderLine
		{
			get
			{
				return this._SalesOrderLine;
			}
			set
			{
				if ((this._SalesOrderLine != value))
				{
					this._SalesOrderLine = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.View_WeekOrder")]
	[DataContract()]
	public partial class View_WeekOrder
	{
		
		private string _WeekDay;
		
		private System.Nullable<int> _WeekOrder;
		
		public View_WeekOrder()
		{
		}
		
		[Column(Storage="_WeekDay", DbType="NVarChar(30)")]
		[DataMember(Order=1)]
		public string WeekDay
		{
			get
			{
				return this._WeekDay;
			}
			set
			{
				if ((this._WeekDay != value))
				{
					this._WeekDay = value;
				}
			}
		}
		
		[Column(Storage="_WeekOrder", DbType="Int")]
		[DataMember(Order=2)]
		public System.Nullable<int> WeekOrder
		{
			get
			{
				return this._WeekOrder;
			}
			set
			{
				if ((this._WeekOrder != value))
				{
					this._WeekOrder = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.View_WOc_RWO")]
	[DataContract()]
	public partial class View_WOc_RWO
	{
		
		private string _ProjectNo;
		
		private string _Customer;
		
		private string _Factory;
		
		private string _Company;
		
		private string _SalesOrderNo;
		
		private string _WorkOrderNo;
		
		private string _StyleNo;
		
		private string _CustomerStyleNo;
		
		private string _ColorCode;
		
		private string _WOc;
		
		private string _RWO;
		
		private System.Nullable<System.DateTime> _AmendDate;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private System.Nullable<int> _Version;
		
		private System.Nullable<System.DateTime> _AjustT3Date;
		
		private System.Nullable<System.DateTime> _T3Date;
		
		private System.Nullable<System.DateTime> _LCLExFtyDate;
		
		private System.Nullable<System.DateTime> _FCLExFtyDate;
		
		private System.Nullable<System.DateTime> _DeliveryDate;
		
		private System.Nullable<System.DateTime> _FirstStationStartDate;
		
		private System.Nullable<System.DateTime> _FactoryWorkStartDate;
		
		private System.Nullable<System.DateTime> _WOReviseDate;
		
		private string _OAConfirm;
		
		private System.Nullable<System.DateTime> _OAConfirmDate;
		
		private string _Size;
		
		private System.Nullable<int> _BulkQty;
		
		private string _Cup;
		
		private System.Nullable<int> _OriginalSampleQty;
		
		private int _SampleQty;
		
		private string _CustSize;
		
		private string _CustCup;
		
		private System.Nullable<int> _SizeOrder;
		
		private System.Nullable<int> _CupOrder;
		
		public View_WOc_RWO()
		{
		}
		
		[Column(Storage="_ProjectNo", DbType="NVarChar(50)")]
		[DataMember(Order=1)]
		public string ProjectNo
		{
			get
			{
				return this._ProjectNo;
			}
			set
			{
				if ((this._ProjectNo != value))
				{
					this._ProjectNo = value;
				}
			}
		}
		
		[Column(Storage="_Customer", DbType="NVarChar(50)")]
		[DataMember(Order=2)]
		public string Customer
		{
			get
			{
				return this._Customer;
			}
			set
			{
				if ((this._Customer != value))
				{
					this._Customer = value;
				}
			}
		}
		
		[Column(Storage="_Factory", DbType="NVarChar(50)")]
		[DataMember(Order=3)]
		public string Factory
		{
			get
			{
				return this._Factory;
			}
			set
			{
				if ((this._Factory != value))
				{
					this._Factory = value;
				}
			}
		}
		
		[Column(Storage="_Company", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		[DataMember(Order=4)]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this._Company = value;
				}
			}
		}
		
		[Column(Storage="_SalesOrderNo", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		[DataMember(Order=5)]
		public string SalesOrderNo
		{
			get
			{
				return this._SalesOrderNo;
			}
			set
			{
				if ((this._SalesOrderNo != value))
				{
					this._SalesOrderNo = value;
				}
			}
		}
		
		[Column(Storage="_WorkOrderNo", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		[DataMember(Order=6)]
		public string WorkOrderNo
		{
			get
			{
				return this._WorkOrderNo;
			}
			set
			{
				if ((this._WorkOrderNo != value))
				{
					this._WorkOrderNo = value;
				}
			}
		}
		
		[Column(Storage="_StyleNo", DbType="VarChar(9)")]
		[DataMember(Order=7)]
		public string StyleNo
		{
			get
			{
				return this._StyleNo;
			}
			set
			{
				if ((this._StyleNo != value))
				{
					this._StyleNo = value;
				}
			}
		}
		
		[Column(Storage="_CustomerStyleNo", DbType="NVarChar(50)")]
		[DataMember(Order=8)]
		public string CustomerStyleNo
		{
			get
			{
				return this._CustomerStyleNo;
			}
			set
			{
				if ((this._CustomerStyleNo != value))
				{
					this._CustomerStyleNo = value;
				}
			}
		}
		
		[Column(Storage="_ColorCode", DbType="VarChar(3) NOT NULL", CanBeNull=false)]
		[DataMember(Order=9)]
		public string ColorCode
		{
			get
			{
				return this._ColorCode;
			}
			set
			{
				if ((this._ColorCode != value))
				{
					this._ColorCode = value;
				}
			}
		}
		
		[Column(Storage="_WOc", DbType="VarChar(5)")]
		[DataMember(Order=10)]
		public string WOc
		{
			get
			{
				return this._WOc;
			}
			set
			{
				if ((this._WOc != value))
				{
					this._WOc = value;
				}
			}
		}
		
		[Column(Storage="_RWO", DbType="VarChar(5)")]
		[DataMember(Order=11)]
		public string RWO
		{
			get
			{
				return this._RWO;
			}
			set
			{
				if ((this._RWO != value))
				{
					this._RWO = value;
				}
			}
		}
		
		[Column(Storage="_AmendDate", DbType="DateTime")]
		[DataMember(Order=12)]
		public System.Nullable<System.DateTime> AmendDate
		{
			get
			{
				return this._AmendDate;
			}
			set
			{
				if ((this._AmendDate != value))
				{
					this._AmendDate = value;
				}
			}
		}
		
		[Column(Storage="_UpdateDate", DbType="DateTime")]
		[DataMember(Order=13)]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this._UpdateDate = value;
				}
			}
		}
		
		[Column(Storage="_Version", DbType="Int")]
		[DataMember(Order=14)]
		public System.Nullable<int> Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this._Version = value;
				}
			}
		}
		
		[Column(Storage="_AjustT3Date", DbType="DateTime")]
		[DataMember(Order=15)]
		public System.Nullable<System.DateTime> AjustT3Date
		{
			get
			{
				return this._AjustT3Date;
			}
			set
			{
				if ((this._AjustT3Date != value))
				{
					this._AjustT3Date = value;
				}
			}
		}
		
		[Column(Storage="_T3Date", DbType="DateTime")]
		[DataMember(Order=16)]
		public System.Nullable<System.DateTime> T3Date
		{
			get
			{
				return this._T3Date;
			}
			set
			{
				if ((this._T3Date != value))
				{
					this._T3Date = value;
				}
			}
		}
		
		[Column(Storage="_LCLExFtyDate", DbType="DateTime")]
		[DataMember(Order=17)]
		public System.Nullable<System.DateTime> LCLExFtyDate
		{
			get
			{
				return this._LCLExFtyDate;
			}
			set
			{
				if ((this._LCLExFtyDate != value))
				{
					this._LCLExFtyDate = value;
				}
			}
		}
		
		[Column(Storage="_FCLExFtyDate", DbType="DateTime")]
		[DataMember(Order=18)]
		public System.Nullable<System.DateTime> FCLExFtyDate
		{
			get
			{
				return this._FCLExFtyDate;
			}
			set
			{
				if ((this._FCLExFtyDate != value))
				{
					this._FCLExFtyDate = value;
				}
			}
		}
		
		[Column(Storage="_DeliveryDate", DbType="DateTime")]
		[DataMember(Order=19)]
		public System.Nullable<System.DateTime> DeliveryDate
		{
			get
			{
				return this._DeliveryDate;
			}
			set
			{
				if ((this._DeliveryDate != value))
				{
					this._DeliveryDate = value;
				}
			}
		}
		
		[Column(Storage="_FirstStationStartDate", DbType="DateTime")]
		[DataMember(Order=20)]
		public System.Nullable<System.DateTime> FirstStationStartDate
		{
			get
			{
				return this._FirstStationStartDate;
			}
			set
			{
				if ((this._FirstStationStartDate != value))
				{
					this._FirstStationStartDate = value;
				}
			}
		}
		
		[Column(Storage="_FactoryWorkStartDate", DbType="DateTime")]
		[DataMember(Order=21)]
		public System.Nullable<System.DateTime> FactoryWorkStartDate
		{
			get
			{
				return this._FactoryWorkStartDate;
			}
			set
			{
				if ((this._FactoryWorkStartDate != value))
				{
					this._FactoryWorkStartDate = value;
				}
			}
		}
		
		[Column(Storage="_WOReviseDate", DbType="DateTime")]
		[DataMember(Order=22)]
		public System.Nullable<System.DateTime> WOReviseDate
		{
			get
			{
				return this._WOReviseDate;
			}
			set
			{
				if ((this._WOReviseDate != value))
				{
					this._WOReviseDate = value;
				}
			}
		}
		
		[Column(Storage="_OAConfirm", DbType="NVarChar(40)")]
		[DataMember(Order=23)]
		public string OAConfirm
		{
			get
			{
				return this._OAConfirm;
			}
			set
			{
				if ((this._OAConfirm != value))
				{
					this._OAConfirm = value;
				}
			}
		}
		
		[Column(Storage="_OAConfirmDate", DbType="DateTime")]
		[DataMember(Order=24)]
		public System.Nullable<System.DateTime> OAConfirmDate
		{
			get
			{
				return this._OAConfirmDate;
			}
			set
			{
				if ((this._OAConfirmDate != value))
				{
					this._OAConfirmDate = value;
				}
			}
		}
		
		[Column(Storage="_Size", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		[DataMember(Order=25)]
		public string Size
		{
			get
			{
				return this._Size;
			}
			set
			{
				if ((this._Size != value))
				{
					this._Size = value;
				}
			}
		}
		
		[Column(Storage="_BulkQty", DbType="Int")]
		[DataMember(Order=26)]
		public System.Nullable<int> BulkQty
		{
			get
			{
				return this._BulkQty;
			}
			set
			{
				if ((this._BulkQty != value))
				{
					this._BulkQty = value;
				}
			}
		}
		
		[Column(Storage="_Cup", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		[DataMember(Order=27)]
		public string Cup
		{
			get
			{
				return this._Cup;
			}
			set
			{
				if ((this._Cup != value))
				{
					this._Cup = value;
				}
			}
		}
		
		[Column(Storage="_OriginalSampleQty", DbType="Int")]
		[DataMember(Order=28)]
		public System.Nullable<int> OriginalSampleQty
		{
			get
			{
				return this._OriginalSampleQty;
			}
			set
			{
				if ((this._OriginalSampleQty != value))
				{
					this._OriginalSampleQty = value;
				}
			}
		}
		
		[Column(Storage="_SampleQty", DbType="Int NOT NULL")]
		[DataMember(Order=29)]
		public int SampleQty
		{
			get
			{
				return this._SampleQty;
			}
			set
			{
				if ((this._SampleQty != value))
				{
					this._SampleQty = value;
				}
			}
		}
		
		[Column(Storage="_CustSize", DbType="NVarChar(20)")]
		[DataMember(Order=30)]
		public string CustSize
		{
			get
			{
				return this._CustSize;
			}
			set
			{
				if ((this._CustSize != value))
				{
					this._CustSize = value;
				}
			}
		}
		
		[Column(Storage="_CustCup", DbType="NVarChar(10)")]
		[DataMember(Order=31)]
		public string CustCup
		{
			get
			{
				return this._CustCup;
			}
			set
			{
				if ((this._CustCup != value))
				{
					this._CustCup = value;
				}
			}
		}
		
		[Column(Storage="_SizeOrder", DbType="Int")]
		[DataMember(Order=32)]
		public System.Nullable<int> SizeOrder
		{
			get
			{
				return this._SizeOrder;
			}
			set
			{
				if ((this._SizeOrder != value))
				{
					this._SizeOrder = value;
				}
			}
		}
		
		[Column(Storage="_CupOrder", DbType="Int")]
		[DataMember(Order=33)]
		public System.Nullable<int> CupOrder
		{
			get
			{
				return this._CupOrder;
			}
			set
			{
				if ((this._CupOrder != value))
				{
					this._CupOrder = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.View_WOc_RWO_PPWs")]
	[DataContract()]
	public partial class View_WOc_RWO_PPW
	{
		
		private string _ProjectNo;
		
		private string _Customer;
		
		private string _Factory;
		
		private string _Company;
		
		private string _SalesOrderNo;
		
		private string _WorkOrderNo;
		
		private string _StyleNo;
		
		private string _CustomerStyleNo;
		
		private string _ColorCode;
		
		private string _WOc;
		
		private string _RWO;
		
		private System.Nullable<System.DateTime> _AmendDate;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private System.Nullable<int> _Version;
		
		private System.Nullable<System.DateTime> _AjustT3Date;
		
		private System.Nullable<System.DateTime> _T3Date;
		
		private System.Nullable<System.DateTime> _LCLExFtyDate;
		
		private System.Nullable<System.DateTime> _FCLExFtyDate;
		
		private System.Nullable<System.DateTime> _DeliveryDate;
		
		private System.Nullable<System.DateTime> _FirstStationStartDate;
		
		private System.Nullable<System.DateTime> _FactoryWorkStartDate;
		
		private System.Nullable<System.DateTime> _WOReviseDate;
		
		private string _OAConfirm;
		
		private System.Nullable<System.DateTime> _OAConfirmDate;
		
		private string _Size;
		
		private System.Nullable<int> _BulkQty;
		
		private string _Cup;
		
		private System.Nullable<int> _SampleQty;
		
		private string _CustSize;
		
		private string _CustCup;
		
		private System.Nullable<int> _SizeOrder;
		
		private System.Nullable<int> _CupOrder;
		
		public View_WOc_RWO_PPW()
		{
		}
		
		[Column(Storage="_ProjectNo", DbType="NVarChar(50)")]
		[DataMember(Order=1)]
		public string ProjectNo
		{
			get
			{
				return this._ProjectNo;
			}
			set
			{
				if ((this._ProjectNo != value))
				{
					this._ProjectNo = value;
				}
			}
		}
		
		[Column(Storage="_Customer", DbType="NVarChar(50)")]
		[DataMember(Order=2)]
		public string Customer
		{
			get
			{
				return this._Customer;
			}
			set
			{
				if ((this._Customer != value))
				{
					this._Customer = value;
				}
			}
		}
		
		[Column(Storage="_Factory", DbType="NVarChar(50)")]
		[DataMember(Order=3)]
		public string Factory
		{
			get
			{
				return this._Factory;
			}
			set
			{
				if ((this._Factory != value))
				{
					this._Factory = value;
				}
			}
		}
		
		[Column(Storage="_Company", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		[DataMember(Order=4)]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this._Company = value;
				}
			}
		}
		
		[Column(Storage="_SalesOrderNo", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		[DataMember(Order=5)]
		public string SalesOrderNo
		{
			get
			{
				return this._SalesOrderNo;
			}
			set
			{
				if ((this._SalesOrderNo != value))
				{
					this._SalesOrderNo = value;
				}
			}
		}
		
		[Column(Storage="_WorkOrderNo", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		[DataMember(Order=6)]
		public string WorkOrderNo
		{
			get
			{
				return this._WorkOrderNo;
			}
			set
			{
				if ((this._WorkOrderNo != value))
				{
					this._WorkOrderNo = value;
				}
			}
		}
		
		[Column(Storage="_StyleNo", DbType="VarChar(9)")]
		[DataMember(Order=7)]
		public string StyleNo
		{
			get
			{
				return this._StyleNo;
			}
			set
			{
				if ((this._StyleNo != value))
				{
					this._StyleNo = value;
				}
			}
		}
		
		[Column(Storage="_CustomerStyleNo", DbType="NVarChar(50)")]
		[DataMember(Order=8)]
		public string CustomerStyleNo
		{
			get
			{
				return this._CustomerStyleNo;
			}
			set
			{
				if ((this._CustomerStyleNo != value))
				{
					this._CustomerStyleNo = value;
				}
			}
		}
		
		[Column(Storage="_ColorCode", DbType="VarChar(3) NOT NULL", CanBeNull=false)]
		[DataMember(Order=9)]
		public string ColorCode
		{
			get
			{
				return this._ColorCode;
			}
			set
			{
				if ((this._ColorCode != value))
				{
					this._ColorCode = value;
				}
			}
		}
		
		[Column(Storage="_WOc", DbType="VarChar(5)")]
		[DataMember(Order=10)]
		public string WOc
		{
			get
			{
				return this._WOc;
			}
			set
			{
				if ((this._WOc != value))
				{
					this._WOc = value;
				}
			}
		}
		
		[Column(Storage="_RWO", DbType="VarChar(5)")]
		[DataMember(Order=11)]
		public string RWO
		{
			get
			{
				return this._RWO;
			}
			set
			{
				if ((this._RWO != value))
				{
					this._RWO = value;
				}
			}
		}
		
		[Column(Storage="_AmendDate", DbType="DateTime")]
		[DataMember(Order=12)]
		public System.Nullable<System.DateTime> AmendDate
		{
			get
			{
				return this._AmendDate;
			}
			set
			{
				if ((this._AmendDate != value))
				{
					this._AmendDate = value;
				}
			}
		}
		
		[Column(Storage="_UpdateDate", DbType="DateTime")]
		[DataMember(Order=13)]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this._UpdateDate = value;
				}
			}
		}
		
		[Column(Storage="_Version", DbType="Int")]
		[DataMember(Order=14)]
		public System.Nullable<int> Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this._Version = value;
				}
			}
		}
		
		[Column(Storage="_AjustT3Date", DbType="DateTime")]
		[DataMember(Order=15)]
		public System.Nullable<System.DateTime> AjustT3Date
		{
			get
			{
				return this._AjustT3Date;
			}
			set
			{
				if ((this._AjustT3Date != value))
				{
					this._AjustT3Date = value;
				}
			}
		}
		
		[Column(Storage="_T3Date", DbType="DateTime")]
		[DataMember(Order=16)]
		public System.Nullable<System.DateTime> T3Date
		{
			get
			{
				return this._T3Date;
			}
			set
			{
				if ((this._T3Date != value))
				{
					this._T3Date = value;
				}
			}
		}
		
		[Column(Storage="_LCLExFtyDate", DbType="DateTime")]
		[DataMember(Order=17)]
		public System.Nullable<System.DateTime> LCLExFtyDate
		{
			get
			{
				return this._LCLExFtyDate;
			}
			set
			{
				if ((this._LCLExFtyDate != value))
				{
					this._LCLExFtyDate = value;
				}
			}
		}
		
		[Column(Storage="_FCLExFtyDate", DbType="DateTime")]
		[DataMember(Order=18)]
		public System.Nullable<System.DateTime> FCLExFtyDate
		{
			get
			{
				return this._FCLExFtyDate;
			}
			set
			{
				if ((this._FCLExFtyDate != value))
				{
					this._FCLExFtyDate = value;
				}
			}
		}
		
		[Column(Storage="_DeliveryDate", DbType="DateTime")]
		[DataMember(Order=19)]
		public System.Nullable<System.DateTime> DeliveryDate
		{
			get
			{
				return this._DeliveryDate;
			}
			set
			{
				if ((this._DeliveryDate != value))
				{
					this._DeliveryDate = value;
				}
			}
		}
		
		[Column(Storage="_FirstStationStartDate", DbType="DateTime")]
		[DataMember(Order=20)]
		public System.Nullable<System.DateTime> FirstStationStartDate
		{
			get
			{
				return this._FirstStationStartDate;
			}
			set
			{
				if ((this._FirstStationStartDate != value))
				{
					this._FirstStationStartDate = value;
				}
			}
		}
		
		[Column(Storage="_FactoryWorkStartDate", DbType="DateTime")]
		[DataMember(Order=21)]
		public System.Nullable<System.DateTime> FactoryWorkStartDate
		{
			get
			{
				return this._FactoryWorkStartDate;
			}
			set
			{
				if ((this._FactoryWorkStartDate != value))
				{
					this._FactoryWorkStartDate = value;
				}
			}
		}
		
		[Column(Storage="_WOReviseDate", DbType="DateTime")]
		[DataMember(Order=22)]
		public System.Nullable<System.DateTime> WOReviseDate
		{
			get
			{
				return this._WOReviseDate;
			}
			set
			{
				if ((this._WOReviseDate != value))
				{
					this._WOReviseDate = value;
				}
			}
		}
		
		[Column(Storage="_OAConfirm", DbType="NVarChar(40)")]
		[DataMember(Order=23)]
		public string OAConfirm
		{
			get
			{
				return this._OAConfirm;
			}
			set
			{
				if ((this._OAConfirm != value))
				{
					this._OAConfirm = value;
				}
			}
		}
		
		[Column(Storage="_OAConfirmDate", DbType="DateTime")]
		[DataMember(Order=24)]
		public System.Nullable<System.DateTime> OAConfirmDate
		{
			get
			{
				return this._OAConfirmDate;
			}
			set
			{
				if ((this._OAConfirmDate != value))
				{
					this._OAConfirmDate = value;
				}
			}
		}
		
		[Column(Storage="_Size", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		[DataMember(Order=25)]
		public string Size
		{
			get
			{
				return this._Size;
			}
			set
			{
				if ((this._Size != value))
				{
					this._Size = value;
				}
			}
		}
		
		[Column(Storage="_BulkQty", DbType="Int")]
		[DataMember(Order=26)]
		public System.Nullable<int> BulkQty
		{
			get
			{
				return this._BulkQty;
			}
			set
			{
				if ((this._BulkQty != value))
				{
					this._BulkQty = value;
				}
			}
		}
		
		[Column(Storage="_Cup", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		[DataMember(Order=27)]
		public string Cup
		{
			get
			{
				return this._Cup;
			}
			set
			{
				if ((this._Cup != value))
				{
					this._Cup = value;
				}
			}
		}
		
		[Column(Storage="_SampleQty", DbType="Int")]
		[DataMember(Order=28)]
		public System.Nullable<int> SampleQty
		{
			get
			{
				return this._SampleQty;
			}
			set
			{
				if ((this._SampleQty != value))
				{
					this._SampleQty = value;
				}
			}
		}
		
		[Column(Storage="_CustSize", DbType="NVarChar(20)")]
		[DataMember(Order=29)]
		public string CustSize
		{
			get
			{
				return this._CustSize;
			}
			set
			{
				if ((this._CustSize != value))
				{
					this._CustSize = value;
				}
			}
		}
		
		[Column(Storage="_CustCup", DbType="NVarChar(10)")]
		[DataMember(Order=30)]
		public string CustCup
		{
			get
			{
				return this._CustCup;
			}
			set
			{
				if ((this._CustCup != value))
				{
					this._CustCup = value;
				}
			}
		}
		
		[Column(Storage="_SizeOrder", DbType="Int")]
		[DataMember(Order=31)]
		public System.Nullable<int> SizeOrder
		{
			get
			{
				return this._SizeOrder;
			}
			set
			{
				if ((this._SizeOrder != value))
				{
					this._SizeOrder = value;
				}
			}
		}
		
		[Column(Storage="_CupOrder", DbType="Int")]
		[DataMember(Order=32)]
		public System.Nullable<int> CupOrder
		{
			get
			{
				return this._CupOrder;
			}
			set
			{
				if ((this._CupOrder != value))
				{
					this._CupOrder = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.View_WorkOrderCustomerProfile")]
	[DataContract()]
	public partial class View_WorkOrderCustomerProfile
	{
		
		private string _WorkOrderNo;
		
		private string _ProjectNo;
		
		private string _Customer;
		
		private string _Cust;
		
		private System.Nullable<float> _YSZQ;
		
		private System.Nullable<float> _YSZQ1;
		
		private string _ShipMode;
		
		private string _FTY;
		
		private string _SalesOrderNo;
		
		private string _Factory;
		
		private string _EXFWK;
		
		private string _EXFTM;
		
		private System.Nullable<float> _EXFDAY;
		
		private string _CJSWK;
		
		private string _CJSSJ;
		
		private System.Nullable<float> _LSTR;
		
		private string _AEXFWK;
		
		private string _AEXFTM;
		
		private string _ACJSWK;
		
		private string _ACJSSJ;
		
		private string _EXFWK1;
		
		private string _EXFTM1;
		
		private string _CJSWK1;
		
		private string _CJSSJ1;
		
		private string _AEXFWK1;
		
		private string _AEXFTM1;
		
		private string _ACJSWK1;
		
		private string _ACJSSJ1;
		
		public View_WorkOrderCustomerProfile()
		{
		}
		
		[Column(Storage="_WorkOrderNo", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		[DataMember(Order=1)]
		public string WorkOrderNo
		{
			get
			{
				return this._WorkOrderNo;
			}
			set
			{
				if ((this._WorkOrderNo != value))
				{
					this._WorkOrderNo = value;
				}
			}
		}
		
		[Column(Storage="_ProjectNo", DbType="NVarChar(50)")]
		[DataMember(Order=2)]
		public string ProjectNo
		{
			get
			{
				return this._ProjectNo;
			}
			set
			{
				if ((this._ProjectNo != value))
				{
					this._ProjectNo = value;
				}
			}
		}
		
		[Column(Storage="_Customer", DbType="NVarChar(50)")]
		[DataMember(Order=3)]
		public string Customer
		{
			get
			{
				return this._Customer;
			}
			set
			{
				if ((this._Customer != value))
				{
					this._Customer = value;
				}
			}
		}
		
		[Column(Storage="_Cust", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[DataMember(Order=4)]
		public string Cust
		{
			get
			{
				return this._Cust;
			}
			set
			{
				if ((this._Cust != value))
				{
					this._Cust = value;
				}
			}
		}
		
		[Column(Storage="_YSZQ", DbType="Real")]
		[DataMember(Order=5)]
		public System.Nullable<float> YSZQ
		{
			get
			{
				return this._YSZQ;
			}
			set
			{
				if ((this._YSZQ != value))
				{
					this._YSZQ = value;
				}
			}
		}
		
		[Column(Storage="_YSZQ1", DbType="Real")]
		[DataMember(Order=6)]
		public System.Nullable<float> YSZQ1
		{
			get
			{
				return this._YSZQ1;
			}
			set
			{
				if ((this._YSZQ1 != value))
				{
					this._YSZQ1 = value;
				}
			}
		}
		
		[Column(Storage="_ShipMode", DbType="NVarChar(50)")]
		[DataMember(Order=7)]
		public string ShipMode
		{
			get
			{
				return this._ShipMode;
			}
			set
			{
				if ((this._ShipMode != value))
				{
					this._ShipMode = value;
				}
			}
		}
		
		[Column(Storage="_FTY", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		[DataMember(Order=8)]
		public string FTY
		{
			get
			{
				return this._FTY;
			}
			set
			{
				if ((this._FTY != value))
				{
					this._FTY = value;
				}
			}
		}
		
		[Column(Storage="_SalesOrderNo", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		[DataMember(Order=9)]
		public string SalesOrderNo
		{
			get
			{
				return this._SalesOrderNo;
			}
			set
			{
				if ((this._SalesOrderNo != value))
				{
					this._SalesOrderNo = value;
				}
			}
		}
		
		[Column(Storage="_Factory", DbType="NVarChar(50)")]
		[DataMember(Order=10)]
		public string Factory
		{
			get
			{
				return this._Factory;
			}
			set
			{
				if ((this._Factory != value))
				{
					this._Factory = value;
				}
			}
		}
		
		[Column(Storage="_EXFWK", DbType="VarChar(10)")]
		[DataMember(Order=11)]
		public string EXFWK
		{
			get
			{
				return this._EXFWK;
			}
			set
			{
				if ((this._EXFWK != value))
				{
					this._EXFWK = value;
				}
			}
		}
		
		[Column(Storage="_EXFTM", DbType="VarChar(20)")]
		[DataMember(Order=12)]
		public string EXFTM
		{
			get
			{
				return this._EXFTM;
			}
			set
			{
				if ((this._EXFTM != value))
				{
					this._EXFTM = value;
				}
			}
		}
		
		[Column(Storage="_EXFDAY", DbType="Real")]
		[DataMember(Order=13)]
		public System.Nullable<float> EXFDAY
		{
			get
			{
				return this._EXFDAY;
			}
			set
			{
				if ((this._EXFDAY != value))
				{
					this._EXFDAY = value;
				}
			}
		}
		
		[Column(Storage="_CJSWK", DbType="VarChar(10)")]
		[DataMember(Order=14)]
		public string CJSWK
		{
			get
			{
				return this._CJSWK;
			}
			set
			{
				if ((this._CJSWK != value))
				{
					this._CJSWK = value;
				}
			}
		}
		
		[Column(Storage="_CJSSJ", DbType="VarChar(20)")]
		[DataMember(Order=15)]
		public string CJSSJ
		{
			get
			{
				return this._CJSSJ;
			}
			set
			{
				if ((this._CJSSJ != value))
				{
					this._CJSSJ = value;
				}
			}
		}
		
		[Column(Storage="_LSTR", DbType="Real")]
		[DataMember(Order=16)]
		public System.Nullable<float> LSTR
		{
			get
			{
				return this._LSTR;
			}
			set
			{
				if ((this._LSTR != value))
				{
					this._LSTR = value;
				}
			}
		}
		
		[Column(Storage="_AEXFWK", DbType="VarChar(10)")]
		[DataMember(Order=17)]
		public string AEXFWK
		{
			get
			{
				return this._AEXFWK;
			}
			set
			{
				if ((this._AEXFWK != value))
				{
					this._AEXFWK = value;
				}
			}
		}
		
		[Column(Storage="_AEXFTM", DbType="VarChar(20)")]
		[DataMember(Order=18)]
		public string AEXFTM
		{
			get
			{
				return this._AEXFTM;
			}
			set
			{
				if ((this._AEXFTM != value))
				{
					this._AEXFTM = value;
				}
			}
		}
		
		[Column(Storage="_ACJSWK", DbType="VarChar(10)")]
		[DataMember(Order=19)]
		public string ACJSWK
		{
			get
			{
				return this._ACJSWK;
			}
			set
			{
				if ((this._ACJSWK != value))
				{
					this._ACJSWK = value;
				}
			}
		}
		
		[Column(Storage="_ACJSSJ", DbType="VarChar(20)")]
		[DataMember(Order=20)]
		public string ACJSSJ
		{
			get
			{
				return this._ACJSSJ;
			}
			set
			{
				if ((this._ACJSSJ != value))
				{
					this._ACJSSJ = value;
				}
			}
		}
		
		[Column(Storage="_EXFWK1", DbType="VarChar(10)")]
		[DataMember(Order=21)]
		public string EXFWK1
		{
			get
			{
				return this._EXFWK1;
			}
			set
			{
				if ((this._EXFWK1 != value))
				{
					this._EXFWK1 = value;
				}
			}
		}
		
		[Column(Storage="_EXFTM1", DbType="VarChar(20)")]
		[DataMember(Order=22)]
		public string EXFTM1
		{
			get
			{
				return this._EXFTM1;
			}
			set
			{
				if ((this._EXFTM1 != value))
				{
					this._EXFTM1 = value;
				}
			}
		}
		
		[Column(Storage="_CJSWK1", DbType="VarChar(10)")]
		[DataMember(Order=23)]
		public string CJSWK1
		{
			get
			{
				return this._CJSWK1;
			}
			set
			{
				if ((this._CJSWK1 != value))
				{
					this._CJSWK1 = value;
				}
			}
		}
		
		[Column(Storage="_CJSSJ1", DbType="VarChar(20)")]
		[DataMember(Order=24)]
		public string CJSSJ1
		{
			get
			{
				return this._CJSSJ1;
			}
			set
			{
				if ((this._CJSSJ1 != value))
				{
					this._CJSSJ1 = value;
				}
			}
		}
		
		[Column(Storage="_AEXFWK1", DbType="VarChar(10)")]
		[DataMember(Order=25)]
		public string AEXFWK1
		{
			get
			{
				return this._AEXFWK1;
			}
			set
			{
				if ((this._AEXFWK1 != value))
				{
					this._AEXFWK1 = value;
				}
			}
		}
		
		[Column(Storage="_AEXFTM1", DbType="VarChar(20)")]
		[DataMember(Order=26)]
		public string AEXFTM1
		{
			get
			{
				return this._AEXFTM1;
			}
			set
			{
				if ((this._AEXFTM1 != value))
				{
					this._AEXFTM1 = value;
				}
			}
		}
		
		[Column(Storage="_ACJSWK1", DbType="VarChar(10)")]
		[DataMember(Order=27)]
		public string ACJSWK1
		{
			get
			{
				return this._ACJSWK1;
			}
			set
			{
				if ((this._ACJSWK1 != value))
				{
					this._ACJSWK1 = value;
				}
			}
		}
		
		[Column(Storage="_ACJSSJ1", DbType="VarChar(20)")]
		[DataMember(Order=28)]
		public string ACJSSJ1
		{
			get
			{
				return this._ACJSSJ1;
			}
			set
			{
				if ((this._ACJSSJ1 != value))
				{
					this._ACJSSJ1 = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.RWOIITimeRule")]
	[DataContract()]
	public partial class RWOIITimeRule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Code;
		
		private string _Operation;
		
		private string _CalcDateType;
		
		private string _StartFactory;
		
		private string _EndFactory;
		
		private System.Nullable<int> _Days;
		
		private string _Remark;
		
		private System.Nullable<int> _Seq;
		
		private EntitySet<CycleTimeProcess> _CycleTimeProcesses;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(int value);
    partial void OnCodeChanged();
    partial void OnOperationChanging(string value);
    partial void OnOperationChanged();
    partial void OnCalcDateTypeChanging(string value);
    partial void OnCalcDateTypeChanged();
    partial void OnStartFactoryChanging(string value);
    partial void OnStartFactoryChanged();
    partial void OnEndFactoryChanging(string value);
    partial void OnEndFactoryChanged();
    partial void OnDaysChanging(System.Nullable<int> value);
    partial void OnDaysChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnSeqChanging(System.Nullable<int> value);
    partial void OnSeqChanged();
    #endregion
		
		public RWOIITimeRule()
		{
			this.Initialize();
		}
		
		[Column(Storage="_Code", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[DataMember(Order=1)]
		public int Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Operation", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		[DataMember(Order=2)]
		public string Operation
		{
			get
			{
				return this._Operation;
			}
			set
			{
				if ((this._Operation != value))
				{
					this.OnOperationChanging(value);
					this.SendPropertyChanging();
					this._Operation = value;
					this.SendPropertyChanged("Operation");
					this.OnOperationChanged();
				}
			}
		}
		
		[Column(Storage="_CalcDateType", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=3)]
		public string CalcDateType
		{
			get
			{
				return this._CalcDateType;
			}
			set
			{
				if ((this._CalcDateType != value))
				{
					this.OnCalcDateTypeChanging(value);
					this.SendPropertyChanging();
					this._CalcDateType = value;
					this.SendPropertyChanged("CalcDateType");
					this.OnCalcDateTypeChanged();
				}
			}
		}
		
		[Column(Storage="_StartFactory", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=4)]
		public string StartFactory
		{
			get
			{
				return this._StartFactory;
			}
			set
			{
				if ((this._StartFactory != value))
				{
					this.OnStartFactoryChanging(value);
					this.SendPropertyChanging();
					this._StartFactory = value;
					this.SendPropertyChanged("StartFactory");
					this.OnStartFactoryChanged();
				}
			}
		}
		
		[Column(Storage="_EndFactory", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=5)]
		public string EndFactory
		{
			get
			{
				return this._EndFactory;
			}
			set
			{
				if ((this._EndFactory != value))
				{
					this.OnEndFactoryChanging(value);
					this.SendPropertyChanging();
					this._EndFactory = value;
					this.SendPropertyChanged("EndFactory");
					this.OnEndFactoryChanged();
				}
			}
		}
		
		[Column(Storage="_Days", DbType="Int")]
		[DataMember(Order=6)]
		public System.Nullable<int> Days
		{
			get
			{
				return this._Days;
			}
			set
			{
				if ((this._Days != value))
				{
					this.OnDaysChanging(value);
					this.SendPropertyChanging();
					this._Days = value;
					this.SendPropertyChanged("Days");
					this.OnDaysChanged();
				}
			}
		}
		
		[Column(Storage="_Remark", DbType="NVarChar(200)")]
		[DataMember(Order=7)]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[Column(Storage="_Seq", DbType="Int")]
		[DataMember(Order=8)]
		public System.Nullable<int> Seq
		{
			get
			{
				return this._Seq;
			}
			set
			{
				if ((this._Seq != value))
				{
					this.OnSeqChanging(value);
					this.SendPropertyChanging();
					this._Seq = value;
					this.SendPropertyChanged("Seq");
					this.OnSeqChanged();
				}
			}
		}
		
		[Association(Name="RWOIITimeRule_CycleTimeProcess", Storage="_CycleTimeProcesses", ThisKey="Code,CalcDateType,StartFactory,EndFactory", OtherKey="Code,CalcDateType,StartFactory,EndFactory")]
		[DataMember(Order=9, EmitDefaultValue=false)]
		public EntitySet<CycleTimeProcess> CycleTimeProcesses
		{
			get
			{
				if ((this.serializing 
							&& (this._CycleTimeProcesses.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CycleTimeProcesses;
			}
			set
			{
				this._CycleTimeProcesses.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CycleTimeProcesses(CycleTimeProcess entity)
		{
			this.SendPropertyChanging();
			entity.RWOIITimeRule = this;
		}
		
		private void detach_CycleTimeProcesses(CycleTimeProcess entity)
		{
			this.SendPropertyChanging();
			entity.RWOIITimeRule = null;
		}
		
		private void Initialize()
		{
			this._CycleTimeProcesses = new EntitySet<CycleTimeProcess>(new Action<CycleTimeProcess>(this.attach_CycleTimeProcesses), new Action<CycleTimeProcess>(this.detach_CycleTimeProcesses));
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[OnSerializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[OnSerialized()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[Table(Name="dbo.CycleTimeProcess")]
	[DataContract()]
	public partial class CycleTimeProcess : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Code;
		
		private string _CalcDateType;
		
		private string _StartFactory;
		
		private string _EndFactory;
		
		private string _Process;
		
		private System.Nullable<bool> _IsFront;
		
		private System.Nullable<int> _Direct;
		
		private System.Nullable<int> _Days;
		
		private System.Nullable<bool> _IsWorkingDay;
		
		private System.Nullable<int> _Seq;
		
		private string _Remark;
		
		private EntityRef<RWOIITimeRule> _RWOIITimeRule;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(int value);
    partial void OnCodeChanged();
    partial void OnCalcDateTypeChanging(string value);
    partial void OnCalcDateTypeChanged();
    partial void OnStartFactoryChanging(string value);
    partial void OnStartFactoryChanged();
    partial void OnEndFactoryChanging(string value);
    partial void OnEndFactoryChanged();
    partial void OnProcessChanging(string value);
    partial void OnProcessChanged();
    partial void OnIsFrontChanging(System.Nullable<bool> value);
    partial void OnIsFrontChanged();
    partial void OnDirectChanging(System.Nullable<int> value);
    partial void OnDirectChanged();
    partial void OnDaysChanging(System.Nullable<int> value);
    partial void OnDaysChanged();
    partial void OnIsWorkingDayChanging(System.Nullable<bool> value);
    partial void OnIsWorkingDayChanged();
    partial void OnSeqChanging(System.Nullable<int> value);
    partial void OnSeqChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public CycleTimeProcess()
		{
			this.Initialize();
		}
		
		[Column(Storage="_Code", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[DataMember(Order=1)]
		public int Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					if (this._RWOIITimeRule.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[Column(Storage="_CalcDateType", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=2)]
		public string CalcDateType
		{
			get
			{
				return this._CalcDateType;
			}
			set
			{
				if ((this._CalcDateType != value))
				{
					if (this._RWOIITimeRule.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCalcDateTypeChanging(value);
					this.SendPropertyChanging();
					this._CalcDateType = value;
					this.SendPropertyChanged("CalcDateType");
					this.OnCalcDateTypeChanged();
				}
			}
		}
		
		[Column(Storage="_StartFactory", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=3)]
		public string StartFactory
		{
			get
			{
				return this._StartFactory;
			}
			set
			{
				if ((this._StartFactory != value))
				{
					if (this._RWOIITimeRule.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStartFactoryChanging(value);
					this.SendPropertyChanging();
					this._StartFactory = value;
					this.SendPropertyChanged("StartFactory");
					this.OnStartFactoryChanged();
				}
			}
		}
		
		[Column(Storage="_EndFactory", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=4)]
		public string EndFactory
		{
			get
			{
				return this._EndFactory;
			}
			set
			{
				if ((this._EndFactory != value))
				{
					if (this._RWOIITimeRule.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEndFactoryChanging(value);
					this.SendPropertyChanging();
					this._EndFactory = value;
					this.SendPropertyChanged("EndFactory");
					this.OnEndFactoryChanged();
				}
			}
		}
		
		[Column(Storage="_Process", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=5)]
		public string Process
		{
			get
			{
				return this._Process;
			}
			set
			{
				if ((this._Process != value))
				{
					this.OnProcessChanging(value);
					this.SendPropertyChanging();
					this._Process = value;
					this.SendPropertyChanged("Process");
					this.OnProcessChanged();
				}
			}
		}
		
		[Column(Storage="_IsFront", DbType="Bit")]
		[DataMember(Order=6)]
		public System.Nullable<bool> IsFront
		{
			get
			{
				return this._IsFront;
			}
			set
			{
				if ((this._IsFront != value))
				{
					this.OnIsFrontChanging(value);
					this.SendPropertyChanging();
					this._IsFront = value;
					this.SendPropertyChanged("IsFront");
					this.OnIsFrontChanged();
				}
			}
		}
		
		[Column(Storage="_Direct", DbType="Int")]
		[DataMember(Order=7)]
		public System.Nullable<int> Direct
		{
			get
			{
				return this._Direct;
			}
			set
			{
				if ((this._Direct != value))
				{
					this.OnDirectChanging(value);
					this.SendPropertyChanging();
					this._Direct = value;
					this.SendPropertyChanged("Direct");
					this.OnDirectChanged();
				}
			}
		}
		
		[Column(Storage="_Days", DbType="Int")]
		[DataMember(Order=8)]
		public System.Nullable<int> Days
		{
			get
			{
				return this._Days;
			}
			set
			{
				if ((this._Days != value))
				{
					this.OnDaysChanging(value);
					this.SendPropertyChanging();
					this._Days = value;
					this.SendPropertyChanged("Days");
					this.OnDaysChanged();
				}
			}
		}
		
		[Column(Storage="_IsWorkingDay", DbType="Bit")]
		[DataMember(Order=9)]
		public System.Nullable<bool> IsWorkingDay
		{
			get
			{
				return this._IsWorkingDay;
			}
			set
			{
				if ((this._IsWorkingDay != value))
				{
					this.OnIsWorkingDayChanging(value);
					this.SendPropertyChanging();
					this._IsWorkingDay = value;
					this.SendPropertyChanged("IsWorkingDay");
					this.OnIsWorkingDayChanged();
				}
			}
		}
		
		[Column(Storage="_Seq", DbType="Int")]
		[DataMember(Order=10)]
		public System.Nullable<int> Seq
		{
			get
			{
				return this._Seq;
			}
			set
			{
				if ((this._Seq != value))
				{
					this.OnSeqChanging(value);
					this.SendPropertyChanging();
					this._Seq = value;
					this.SendPropertyChanged("Seq");
					this.OnSeqChanged();
				}
			}
		}
		
		[Column(Storage="_Remark", DbType="NVarChar(200)")]
		[DataMember(Order=11)]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[Association(Name="RWOIITimeRule_CycleTimeProcess", Storage="_RWOIITimeRule", ThisKey="Code,CalcDateType,StartFactory,EndFactory", OtherKey="Code,CalcDateType,StartFactory,EndFactory", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public RWOIITimeRule RWOIITimeRule
		{
			get
			{
				return this._RWOIITimeRule.Entity;
			}
			set
			{
				RWOIITimeRule previousValue = this._RWOIITimeRule.Entity;
				if (((previousValue != value) 
							|| (this._RWOIITimeRule.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RWOIITimeRule.Entity = null;
						previousValue.CycleTimeProcesses.Remove(this);
					}
					this._RWOIITimeRule.Entity = value;
					if ((value != null))
					{
						value.CycleTimeProcesses.Add(this);
						this._Code = value.Code;
						this._CalcDateType = value.CalcDateType;
						this._StartFactory = value.StartFactory;
						this._EndFactory = value.EndFactory;
					}
					else
					{
						this._Code = default(int);
						this._CalcDateType = default(string);
						this._StartFactory = default(string);
						this._EndFactory = default(string);
					}
					this.SendPropertyChanged("RWOIITimeRule");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._RWOIITimeRule = default(EntityRef<RWOIITimeRule>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[Table(Name="dbo.WorkOrderVersion")]
	[DataContract()]
	public partial class WorkOrderVersion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Company;
		
		private string _SalesOrderNo;
		
		private string _WorkOrderNo;
		
		private int _Version;
		
		private System.Nullable<int> _SalesOrderLine;
		
		private string _ChangedCause;
		
		private string _Remark;
		
		private EntityRef<WorkOrder> _WorkOrder;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnSalesOrderNoChanging(string value);
    partial void OnSalesOrderNoChanged();
    partial void OnWorkOrderNoChanging(string value);
    partial void OnWorkOrderNoChanged();
    partial void OnVersionChanging(int value);
    partial void OnVersionChanged();
    partial void OnSalesOrderLineChanging(System.Nullable<int> value);
    partial void OnSalesOrderLineChanged();
    partial void OnChangedCauseChanging(string value);
    partial void OnChangedCauseChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public WorkOrderVersion()
		{
			this.Initialize();
		}
		
		[Column(Storage="_Company", DbType="VarChar(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=1)]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					if (this._WorkOrder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[Column(Storage="_SalesOrderNo", DbType="VarChar(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=2)]
		public string SalesOrderNo
		{
			get
			{
				return this._SalesOrderNo;
			}
			set
			{
				if ((this._SalesOrderNo != value))
				{
					if (this._WorkOrder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSalesOrderNoChanging(value);
					this.SendPropertyChanging();
					this._SalesOrderNo = value;
					this.SendPropertyChanged("SalesOrderNo");
					this.OnSalesOrderNoChanged();
				}
			}
		}
		
		[Column(Storage="_WorkOrderNo", DbType="VarChar(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=3)]
		public string WorkOrderNo
		{
			get
			{
				return this._WorkOrderNo;
			}
			set
			{
				if ((this._WorkOrderNo != value))
				{
					if (this._WorkOrder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkOrderNoChanging(value);
					this.SendPropertyChanging();
					this._WorkOrderNo = value;
					this.SendPropertyChanged("WorkOrderNo");
					this.OnWorkOrderNoChanged();
				}
			}
		}
		
		[Column(Storage="_Version", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[DataMember(Order=4)]
		public int Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[Column(Storage="_SalesOrderLine", DbType="Int")]
		[DataMember(Order=5)]
		public System.Nullable<int> SalesOrderLine
		{
			get
			{
				return this._SalesOrderLine;
			}
			set
			{
				if ((this._SalesOrderLine != value))
				{
					this.OnSalesOrderLineChanging(value);
					this.SendPropertyChanging();
					this._SalesOrderLine = value;
					this.SendPropertyChanged("SalesOrderLine");
					this.OnSalesOrderLineChanged();
				}
			}
		}
		
		[Column(Storage="_ChangedCause", DbType="NVarChar(100)")]
		[DataMember(Order=6)]
		public string ChangedCause
		{
			get
			{
				return this._ChangedCause;
			}
			set
			{
				if ((this._ChangedCause != value))
				{
					this.OnChangedCauseChanging(value);
					this.SendPropertyChanging();
					this._ChangedCause = value;
					this.SendPropertyChanged("ChangedCause");
					this.OnChangedCauseChanged();
				}
			}
		}
		
		[Column(Storage="_Remark", DbType="NVarChar(100)")]
		[DataMember(Order=7)]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[Association(Name="WorkOrder_WorkOrderVersion", Storage="_WorkOrder", ThisKey="Company,SalesOrderNo,WorkOrderNo", OtherKey="Company,SalesOrderNo,WorkOrderNo", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public WorkOrder WorkOrder
		{
			get
			{
				return this._WorkOrder.Entity;
			}
			set
			{
				WorkOrder previousValue = this._WorkOrder.Entity;
				if (((previousValue != value) 
							|| (this._WorkOrder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WorkOrder.Entity = null;
						previousValue.WorkOrderVersions.Remove(this);
					}
					this._WorkOrder.Entity = value;
					if ((value != null))
					{
						value.WorkOrderVersions.Add(this);
						this._Company = value.Company;
						this._SalesOrderNo = value.SalesOrderNo;
						this._WorkOrderNo = value.WorkOrderNo;
					}
					else
					{
						this._Company = default(string);
						this._SalesOrderNo = default(string);
						this._WorkOrderNo = default(string);
					}
					this.SendPropertyChanged("WorkOrder");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._WorkOrder = default(EntityRef<WorkOrder>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[Table(Name="dbo.[Right]")]
	[DataContract()]
	public partial class Right : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CustomerCode;
		
		private string _Customers;
		
		private string _Factory;
		
		private string _Item;
		
		private string _Users;
		
		private string _Team;
		
		private System.Nullable<int> _Next;
		
		private System.Nullable<int> _Current;
		
		private int _Phase;
		
		private bool _IsRWO;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomerCodeChanging(string value);
    partial void OnCustomerCodeChanged();
    partial void OnCustomersChanging(string value);
    partial void OnCustomersChanged();
    partial void OnFactoryChanging(string value);
    partial void OnFactoryChanged();
    partial void OnItemChanging(string value);
    partial void OnItemChanged();
    partial void OnUsersChanging(string value);
    partial void OnUsersChanged();
    partial void OnTeamChanging(string value);
    partial void OnTeamChanged();
    partial void OnNextChanging(System.Nullable<int> value);
    partial void OnNextChanged();
    partial void OnCurrentChanging(System.Nullable<int> value);
    partial void OnCurrentChanged();
    partial void OnPhaseChanging(int value);
    partial void OnPhaseChanged();
    partial void OnIsRWOChanging(bool value);
    partial void OnIsRWOChanged();
    #endregion
		
		public Right()
		{
			this.Initialize();
		}
		
		[Column(Storage="_CustomerCode", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=1)]
		public string CustomerCode
		{
			get
			{
				return this._CustomerCode;
			}
			set
			{
				if ((this._CustomerCode != value))
				{
					this.OnCustomerCodeChanging(value);
					this.SendPropertyChanging();
					this._CustomerCode = value;
					this.SendPropertyChanged("CustomerCode");
					this.OnCustomerCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Customers", DbType="NVarChar(500)")]
		[DataMember(Order=2)]
		public string Customers
		{
			get
			{
				return this._Customers;
			}
			set
			{
				if ((this._Customers != value))
				{
					this.OnCustomersChanging(value);
					this.SendPropertyChanging();
					this._Customers = value;
					this.SendPropertyChanged("Customers");
					this.OnCustomersChanged();
				}
			}
		}
		
		[Column(Storage="_Factory", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=3)]
		public string Factory
		{
			get
			{
				return this._Factory;
			}
			set
			{
				if ((this._Factory != value))
				{
					this.OnFactoryChanging(value);
					this.SendPropertyChanging();
					this._Factory = value;
					this.SendPropertyChanged("Factory");
					this.OnFactoryChanged();
				}
			}
		}
		
		[Column(Storage="_Item", DbType="VarChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=4)]
		public string Item
		{
			get
			{
				return this._Item;
			}
			set
			{
				if ((this._Item != value))
				{
					this.OnItemChanging(value);
					this.SendPropertyChanging();
					this._Item = value;
					this.SendPropertyChanged("Item");
					this.OnItemChanged();
				}
			}
		}
		
		[Column(Storage="_Users", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		[DataMember(Order=5)]
		public string Users
		{
			get
			{
				return this._Users;
			}
			set
			{
				if ((this._Users != value))
				{
					this.OnUsersChanging(value);
					this.SendPropertyChanging();
					this._Users = value;
					this.SendPropertyChanged("Users");
					this.OnUsersChanged();
				}
			}
		}
		
		[Column(Storage="_Team", DbType="NVarChar(4)")]
		[DataMember(Order=6)]
		public string Team
		{
			get
			{
				return this._Team;
			}
			set
			{
				if ((this._Team != value))
				{
					this.OnTeamChanging(value);
					this.SendPropertyChanging();
					this._Team = value;
					this.SendPropertyChanged("Team");
					this.OnTeamChanged();
				}
			}
		}
		
		[Column(Storage="_Next", DbType="Int")]
		[DataMember(Order=7)]
		public System.Nullable<int> Next
		{
			get
			{
				return this._Next;
			}
			set
			{
				if ((this._Next != value))
				{
					this.OnNextChanging(value);
					this.SendPropertyChanging();
					this._Next = value;
					this.SendPropertyChanged("Next");
					this.OnNextChanged();
				}
			}
		}
		
		[Column(Name="[Current]", Storage="_Current", DbType="Int")]
		[DataMember(Order=8)]
		public System.Nullable<int> Current
		{
			get
			{
				return this._Current;
			}
			set
			{
				if ((this._Current != value))
				{
					this.OnCurrentChanging(value);
					this.SendPropertyChanging();
					this._Current = value;
					this.SendPropertyChanged("Current");
					this.OnCurrentChanged();
				}
			}
		}
		
		[Column(Storage="_Phase", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[DataMember(Order=9)]
		public int Phase
		{
			get
			{
				return this._Phase;
			}
			set
			{
				if ((this._Phase != value))
				{
					this.OnPhaseChanging(value);
					this.SendPropertyChanging();
					this._Phase = value;
					this.SendPropertyChanged("Phase");
					this.OnPhaseChanged();
				}
			}
		}
		
		[Column(Storage="_IsRWO", DbType="Bit NOT NULL", IsPrimaryKey=true)]
		[DataMember(Order=10)]
		public bool IsRWO
		{
			get
			{
				return this._IsRWO;
			}
			set
			{
				if ((this._IsRWO != value))
				{
					this.OnIsRWOChanging(value);
					this.SendPropertyChanging();
					this._IsRWO = value;
					this.SendPropertyChanged("IsRWO");
					this.OnIsRWOChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[Table(Name="dbo.View_ConfirmWorkFlow")]
	[DataContract()]
	public partial class View_ConfirmWorkFlow
	{
		
		private string _CustomerCode;
		
		private string _Customers;
		
		private string _Factory;
		
		private string _Item;
		
		private string _Users;
		
		private string _Team;
		
		private System.Nullable<int> _Next;
		
		private System.Nullable<int> _Current;
		
		private int _Phase;
		
		private string _UsersEmail;
		
		private string _SendTo;
		
		private string _CC;
		
		private bool _IsRWO;
		
		public View_ConfirmWorkFlow()
		{
		}
		
		[Column(Storage="_CustomerCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[DataMember(Order=1)]
		public string CustomerCode
		{
			get
			{
				return this._CustomerCode;
			}
			set
			{
				if ((this._CustomerCode != value))
				{
					this._CustomerCode = value;
				}
			}
		}
		
		[Column(Storage="_Customers", DbType="NVarChar(500)")]
		[DataMember(Order=2)]
		public string Customers
		{
			get
			{
				return this._Customers;
			}
			set
			{
				if ((this._Customers != value))
				{
					this._Customers = value;
				}
			}
		}
		
		[Column(Storage="_Factory", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		[DataMember(Order=3)]
		public string Factory
		{
			get
			{
				return this._Factory;
			}
			set
			{
				if ((this._Factory != value))
				{
					this._Factory = value;
				}
			}
		}
		
		[Column(Storage="_Item", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		[DataMember(Order=4)]
		public string Item
		{
			get
			{
				return this._Item;
			}
			set
			{
				if ((this._Item != value))
				{
					this._Item = value;
				}
			}
		}
		
		[Column(Storage="_Users", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		[DataMember(Order=5)]
		public string Users
		{
			get
			{
				return this._Users;
			}
			set
			{
				if ((this._Users != value))
				{
					this._Users = value;
				}
			}
		}
		
		[Column(Storage="_Team", DbType="NVarChar(4)")]
		[DataMember(Order=6)]
		public string Team
		{
			get
			{
				return this._Team;
			}
			set
			{
				if ((this._Team != value))
				{
					this._Team = value;
				}
			}
		}
		
		[Column(Storage="_Next", DbType="Int")]
		[DataMember(Order=7)]
		public System.Nullable<int> Next
		{
			get
			{
				return this._Next;
			}
			set
			{
				if ((this._Next != value))
				{
					this._Next = value;
				}
			}
		}
		
		[Column(Name="[Current]", Storage="_Current", DbType="Int")]
		[DataMember(Order=8)]
		public System.Nullable<int> Current
		{
			get
			{
				return this._Current;
			}
			set
			{
				if ((this._Current != value))
				{
					this._Current = value;
				}
			}
		}
		
		[Column(Storage="_Phase", DbType="Int NOT NULL")]
		[DataMember(Order=9)]
		public int Phase
		{
			get
			{
				return this._Phase;
			}
			set
			{
				if ((this._Phase != value))
				{
					this._Phase = value;
				}
			}
		}
		
		[Column(Storage="_UsersEmail", DbType="VarChar(1000)")]
		[DataMember(Order=10)]
		public string UsersEmail
		{
			get
			{
				return this._UsersEmail;
			}
			set
			{
				if ((this._UsersEmail != value))
				{
					this._UsersEmail = value;
				}
			}
		}
		
		[Column(Storage="_SendTo", DbType="VarChar(1000)")]
		[DataMember(Order=11)]
		public string SendTo
		{
			get
			{
				return this._SendTo;
			}
			set
			{
				if ((this._SendTo != value))
				{
					this._SendTo = value;
				}
			}
		}
		
		[Column(Storage="_CC", DbType="VarChar(1000)")]
		[DataMember(Order=12)]
		public string CC
		{
			get
			{
				return this._CC;
			}
			set
			{
				if ((this._CC != value))
				{
					this._CC = value;
				}
			}
		}
		
		[Column(Storage="_IsRWO", DbType="Bit NOT NULL")]
		[DataMember(Order=13)]
		public bool IsRWO
		{
			get
			{
				return this._IsRWO;
			}
			set
			{
				if ((this._IsRWO != value))
				{
					this._IsRWO = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.View_ConfirmWorkFlow")]
	[DataContract()]
	public partial class View_ConfirmWorkFlow1
	{
		
		private string _CustomerCode;
		
		private string _Customers;
		
		private string _Factory;
		
		private string _Item;
		
		private string _Users;
		
		private string _Team;
		
		private System.Nullable<int> _Next;
		
		private System.Nullable<int> _Current;
		
		private int _Phase;
		
		private string _UsersEmail;
		
		private string _SendTo;
		
		private string _CC;
		
		private bool _IsRWO;
		
		public View_ConfirmWorkFlow1()
		{
		}
		
		[Column(Storage="_CustomerCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[DataMember(Order=1)]
		public string CustomerCode
		{
			get
			{
				return this._CustomerCode;
			}
			set
			{
				if ((this._CustomerCode != value))
				{
					this._CustomerCode = value;
				}
			}
		}
		
		[Column(Storage="_Customers", DbType="NVarChar(500)")]
		[DataMember(Order=2)]
		public string Customers
		{
			get
			{
				return this._Customers;
			}
			set
			{
				if ((this._Customers != value))
				{
					this._Customers = value;
				}
			}
		}
		
		[Column(Storage="_Factory", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		[DataMember(Order=3)]
		public string Factory
		{
			get
			{
				return this._Factory;
			}
			set
			{
				if ((this._Factory != value))
				{
					this._Factory = value;
				}
			}
		}
		
		[Column(Storage="_Item", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		[DataMember(Order=4)]
		public string Item
		{
			get
			{
				return this._Item;
			}
			set
			{
				if ((this._Item != value))
				{
					this._Item = value;
				}
			}
		}
		
		[Column(Storage="_Users", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		[DataMember(Order=5)]
		public string Users
		{
			get
			{
				return this._Users;
			}
			set
			{
				if ((this._Users != value))
				{
					this._Users = value;
				}
			}
		}
		
		[Column(Storage="_Team", DbType="NVarChar(4)")]
		[DataMember(Order=6)]
		public string Team
		{
			get
			{
				return this._Team;
			}
			set
			{
				if ((this._Team != value))
				{
					this._Team = value;
				}
			}
		}
		
		[Column(Storage="_Next", DbType="Int")]
		[DataMember(Order=7)]
		public System.Nullable<int> Next
		{
			get
			{
				return this._Next;
			}
			set
			{
				if ((this._Next != value))
				{
					this._Next = value;
				}
			}
		}
		
		[Column(Name="[Current]", Storage="_Current", DbType="Int")]
		[DataMember(Order=8)]
		public System.Nullable<int> Current
		{
			get
			{
				return this._Current;
			}
			set
			{
				if ((this._Current != value))
				{
					this._Current = value;
				}
			}
		}
		
		[Column(Storage="_Phase", DbType="Int NOT NULL")]
		[DataMember(Order=9)]
		public int Phase
		{
			get
			{
				return this._Phase;
			}
			set
			{
				if ((this._Phase != value))
				{
					this._Phase = value;
				}
			}
		}
		
		[Column(Storage="_UsersEmail", DbType="VarChar(1000)")]
		[DataMember(Order=10)]
		public string UsersEmail
		{
			get
			{
				return this._UsersEmail;
			}
			set
			{
				if ((this._UsersEmail != value))
				{
					this._UsersEmail = value;
				}
			}
		}
		
		[Column(Storage="_SendTo", DbType="VarChar(1000)")]
		[DataMember(Order=11)]
		public string SendTo
		{
			get
			{
				return this._SendTo;
			}
			set
			{
				if ((this._SendTo != value))
				{
					this._SendTo = value;
				}
			}
		}
		
		[Column(Storage="_CC", DbType="VarChar(1000)")]
		[DataMember(Order=12)]
		public string CC
		{
			get
			{
				return this._CC;
			}
			set
			{
				if ((this._CC != value))
				{
					this._CC = value;
				}
			}
		}
		
		[Column(Storage="_IsRWO", DbType="Bit NOT NULL")]
		[DataMember(Order=13)]
		public bool IsRWO
		{
			get
			{
				return this._IsRWO;
			}
			set
			{
				if ((this._IsRWO != value))
				{
					this._IsRWO = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.PackagingMaterial")]
	[DataContract()]
	public partial class PackagingMaterial : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Company;
		
		private string _StyleNo;
		
		private string _PHMaterial;
		
		private string _MRGroup;
		
		private string _MRCode;
		
		private string _SuppRef;
		
		private string _Specifications;
		
		private System.Nullable<decimal> _QtyPer;
		
		private string _PHUnit;
		
		private System.Nullable<decimal> _WastageOnCAC;
		
		private string _Supplier;
		
		private string _Currency;
		
		private System.Nullable<decimal> _UnitPrice;
		
		private string _UOM;
		
		private System.Nullable<decimal> _ExRate;
		
		private System.Nullable<decimal> _AllInPrice;
		
		private string _MinOrder;
		
		private string _ColorRange;
		
		private string _SizeRange;
		
		private string _CupRange;
		
		private EntityRef<Style> _Style;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnStyleNoChanging(string value);
    partial void OnStyleNoChanged();
    partial void OnPHMaterialChanging(string value);
    partial void OnPHMaterialChanged();
    partial void OnMRGroupChanging(string value);
    partial void OnMRGroupChanged();
    partial void OnMRCodeChanging(string value);
    partial void OnMRCodeChanged();
    partial void OnSuppRefChanging(string value);
    partial void OnSuppRefChanged();
    partial void OnSpecificationsChanging(string value);
    partial void OnSpecificationsChanged();
    partial void OnQtyPerChanging(System.Nullable<decimal> value);
    partial void OnQtyPerChanged();
    partial void OnPHUnitChanging(string value);
    partial void OnPHUnitChanged();
    partial void OnWastageOnCACChanging(System.Nullable<decimal> value);
    partial void OnWastageOnCACChanged();
    partial void OnSupplierChanging(string value);
    partial void OnSupplierChanged();
    partial void OnCurrencyChanging(string value);
    partial void OnCurrencyChanged();
    partial void OnUnitPriceChanging(System.Nullable<decimal> value);
    partial void OnUnitPriceChanged();
    partial void OnUOMChanging(string value);
    partial void OnUOMChanged();
    partial void OnExRateChanging(System.Nullable<decimal> value);
    partial void OnExRateChanged();
    partial void OnAllInPriceChanging(System.Nullable<decimal> value);
    partial void OnAllInPriceChanged();
    partial void OnMinOrderChanging(string value);
    partial void OnMinOrderChanged();
    partial void OnColorRangeChanging(string value);
    partial void OnColorRangeChanged();
    partial void OnSizeRangeChanging(string value);
    partial void OnSizeRangeChanged();
    partial void OnCupRangeChanging(string value);
    partial void OnCupRangeChanged();
    #endregion
		
		public PackagingMaterial()
		{
			this.Initialize();
		}
		
		[Column(Storage="_Company", DbType="VarChar(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=1)]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					if (this._Style.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[Column(Storage="_StyleNo", DbType="VarChar(9) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=2)]
		public string StyleNo
		{
			get
			{
				return this._StyleNo;
			}
			set
			{
				if ((this._StyleNo != value))
				{
					if (this._Style.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStyleNoChanging(value);
					this.SendPropertyChanging();
					this._StyleNo = value;
					this.SendPropertyChanged("StyleNo");
					this.OnStyleNoChanged();
				}
			}
		}
		
		[Column(Storage="_PHMaterial", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=3)]
		public string PHMaterial
		{
			get
			{
				return this._PHMaterial;
			}
			set
			{
				if ((this._PHMaterial != value))
				{
					this.OnPHMaterialChanging(value);
					this.SendPropertyChanging();
					this._PHMaterial = value;
					this.SendPropertyChanged("PHMaterial");
					this.OnPHMaterialChanged();
				}
			}
		}
		
		[Column(Storage="_MRGroup", DbType="NVarChar(20)")]
		[DataMember(Order=4)]
		public string MRGroup
		{
			get
			{
				return this._MRGroup;
			}
			set
			{
				if ((this._MRGroup != value))
				{
					this.OnMRGroupChanging(value);
					this.SendPropertyChanging();
					this._MRGroup = value;
					this.SendPropertyChanged("MRGroup");
					this.OnMRGroupChanged();
				}
			}
		}
		
		[Column(Storage="_MRCode", DbType="NVarChar(30)")]
		[DataMember(Order=5)]
		public string MRCode
		{
			get
			{
				return this._MRCode;
			}
			set
			{
				if ((this._MRCode != value))
				{
					this.OnMRCodeChanging(value);
					this.SendPropertyChanging();
					this._MRCode = value;
					this.SendPropertyChanged("MRCode");
					this.OnMRCodeChanged();
				}
			}
		}
		
		[Column(Storage="_SuppRef", DbType="NVarChar(30)")]
		[DataMember(Order=6)]
		public string SuppRef
		{
			get
			{
				return this._SuppRef;
			}
			set
			{
				if ((this._SuppRef != value))
				{
					this.OnSuppRefChanging(value);
					this.SendPropertyChanging();
					this._SuppRef = value;
					this.SendPropertyChanged("SuppRef");
					this.OnSuppRefChanged();
				}
			}
		}
		
		[Column(Storage="_Specifications", DbType="NVarChar(100)")]
		[DataMember(Order=7)]
		public string Specifications
		{
			get
			{
				return this._Specifications;
			}
			set
			{
				if ((this._Specifications != value))
				{
					this.OnSpecificationsChanging(value);
					this.SendPropertyChanging();
					this._Specifications = value;
					this.SendPropertyChanged("Specifications");
					this.OnSpecificationsChanged();
				}
			}
		}
		
		[Column(Storage="_QtyPer", DbType="Decimal(15,4)")]
		[DataMember(Order=8)]
		public System.Nullable<decimal> QtyPer
		{
			get
			{
				return this._QtyPer;
			}
			set
			{
				if ((this._QtyPer != value))
				{
					this.OnQtyPerChanging(value);
					this.SendPropertyChanging();
					this._QtyPer = value;
					this.SendPropertyChanged("QtyPer");
					this.OnQtyPerChanged();
				}
			}
		}
		
		[Column(Storage="_PHUnit", DbType="NVarChar(5)")]
		[DataMember(Order=9)]
		public string PHUnit
		{
			get
			{
				return this._PHUnit;
			}
			set
			{
				if ((this._PHUnit != value))
				{
					this.OnPHUnitChanging(value);
					this.SendPropertyChanging();
					this._PHUnit = value;
					this.SendPropertyChanged("PHUnit");
					this.OnPHUnitChanged();
				}
			}
		}
		
		[Column(Storage="_WastageOnCAC", DbType="Decimal(15,4)")]
		[DataMember(Order=10)]
		public System.Nullable<decimal> WastageOnCAC
		{
			get
			{
				return this._WastageOnCAC;
			}
			set
			{
				if ((this._WastageOnCAC != value))
				{
					this.OnWastageOnCACChanging(value);
					this.SendPropertyChanging();
					this._WastageOnCAC = value;
					this.SendPropertyChanged("WastageOnCAC");
					this.OnWastageOnCACChanged();
				}
			}
		}
		
		[Column(Storage="_Supplier", DbType="NVarChar(30)")]
		[DataMember(Order=11)]
		public string Supplier
		{
			get
			{
				return this._Supplier;
			}
			set
			{
				if ((this._Supplier != value))
				{
					this.OnSupplierChanging(value);
					this.SendPropertyChanging();
					this._Supplier = value;
					this.SendPropertyChanged("Supplier");
					this.OnSupplierChanged();
				}
			}
		}
		
		[Column(Storage="_Currency", DbType="NVarChar(10)")]
		[DataMember(Order=12)]
		public string Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[Column(Storage="_UnitPrice", DbType="Decimal(15,4)")]
		[DataMember(Order=13)]
		public System.Nullable<decimal> UnitPrice
		{
			get
			{
				return this._UnitPrice;
			}
			set
			{
				if ((this._UnitPrice != value))
				{
					this.OnUnitPriceChanging(value);
					this.SendPropertyChanging();
					this._UnitPrice = value;
					this.SendPropertyChanged("UnitPrice");
					this.OnUnitPriceChanged();
				}
			}
		}
		
		[Column(Storage="_UOM", DbType="NVarChar(5)")]
		[DataMember(Order=14)]
		public string UOM
		{
			get
			{
				return this._UOM;
			}
			set
			{
				if ((this._UOM != value))
				{
					this.OnUOMChanging(value);
					this.SendPropertyChanging();
					this._UOM = value;
					this.SendPropertyChanged("UOM");
					this.OnUOMChanged();
				}
			}
		}
		
		[Column(Storage="_ExRate", DbType="Decimal(15,5)")]
		[DataMember(Order=15)]
		public System.Nullable<decimal> ExRate
		{
			get
			{
				return this._ExRate;
			}
			set
			{
				if ((this._ExRate != value))
				{
					this.OnExRateChanging(value);
					this.SendPropertyChanging();
					this._ExRate = value;
					this.SendPropertyChanged("ExRate");
					this.OnExRateChanged();
				}
			}
		}
		
		[Column(Storage="_AllInPrice", DbType="Decimal(15,4)")]
		[DataMember(Order=16)]
		public System.Nullable<decimal> AllInPrice
		{
			get
			{
				return this._AllInPrice;
			}
			set
			{
				if ((this._AllInPrice != value))
				{
					this.OnAllInPriceChanging(value);
					this.SendPropertyChanging();
					this._AllInPrice = value;
					this.SendPropertyChanged("AllInPrice");
					this.OnAllInPriceChanged();
				}
			}
		}
		
		[Column(Storage="_MinOrder", DbType="NVarChar(30)")]
		[DataMember(Order=17)]
		public string MinOrder
		{
			get
			{
				return this._MinOrder;
			}
			set
			{
				if ((this._MinOrder != value))
				{
					this.OnMinOrderChanging(value);
					this.SendPropertyChanging();
					this._MinOrder = value;
					this.SendPropertyChanged("MinOrder");
					this.OnMinOrderChanged();
				}
			}
		}
		
		[Column(Storage="_ColorRange", DbType="NVarChar(100)")]
		[DataMember(Order=18)]
		public string ColorRange
		{
			get
			{
				return this._ColorRange;
			}
			set
			{
				if ((this._ColorRange != value))
				{
					this.OnColorRangeChanging(value);
					this.SendPropertyChanging();
					this._ColorRange = value;
					this.SendPropertyChanged("ColorRange");
					this.OnColorRangeChanged();
				}
			}
		}
		
		[Column(Storage="_SizeRange", DbType="NVarChar(100)")]
		[DataMember(Order=19)]
		public string SizeRange
		{
			get
			{
				return this._SizeRange;
			}
			set
			{
				if ((this._SizeRange != value))
				{
					this.OnSizeRangeChanging(value);
					this.SendPropertyChanging();
					this._SizeRange = value;
					this.SendPropertyChanged("SizeRange");
					this.OnSizeRangeChanged();
				}
			}
		}
		
		[Column(Storage="_CupRange", DbType="NVarChar(100)")]
		[DataMember(Order=20)]
		public string CupRange
		{
			get
			{
				return this._CupRange;
			}
			set
			{
				if ((this._CupRange != value))
				{
					this.OnCupRangeChanging(value);
					this.SendPropertyChanging();
					this._CupRange = value;
					this.SendPropertyChanged("CupRange");
					this.OnCupRangeChanged();
				}
			}
		}
		
		[Association(Name="Style_PackagingMaterial", Storage="_Style", ThisKey="Company,StyleNo", OtherKey="Company,StyleNo", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Style Style
		{
			get
			{
				return this._Style.Entity;
			}
			set
			{
				Style previousValue = this._Style.Entity;
				if (((previousValue != value) 
							|| (this._Style.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Style.Entity = null;
						previousValue.PackagingMaterials.Remove(this);
					}
					this._Style.Entity = value;
					if ((value != null))
					{
						value.PackagingMaterials.Add(this);
						this._Company = value.Company;
						this._StyleNo = value.StyleNo;
					}
					else
					{
						this._Company = default(string);
						this._StyleNo = default(string);
					}
					this.SendPropertyChanged("Style");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Style = default(EntityRef<Style>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[Table(Name="dbo.CustomerBrandCategory")]
	[DataContract()]
	public partial class CustomerBrandCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Customer;
		
		private string _CustCode;
		
		private System.Guid _GID;
		
		private string _Brand;
		
		private string _Category;
		
		private string _StyleNo;
		
		private string _StyleDesc;
		
		private System.Nullable<bool> _Active;
		
		private System.Nullable<int> _FlatOrHalfFold;
		
		private System.Nullable<int> _Hookandeye;
		
		private string _ShoulderStrapAdjustment;
		
		private string _SizeDispatching;
		
		private System.Nullable<bool> _BasicRequisition1;
		
		private System.Nullable<bool> _BasicRequisition2;
		
		private System.Nullable<bool> _BasicRequisition3;
		
		private string _ProwBoard;
		
		private string _ExportCtnMeasurement;
		
		private System.Nullable<bool> _CartonBeltRequisition;
		
		private string _InnerBoxMeasurement;
		
		private System.Nullable<bool> _Sky_SingleDouble;
		
		private string _Sky_Desc;
		
		private System.Nullable<bool> _Boat_SingleDouble;
		
		private string _Boat_Desc;
		
		private System.Nullable<bool> _SideMark_SingleDouble;
		
		private string _SideMark_Desc;
		
		private System.Nullable<bool> _SideMarkPaper_SingleDouble;
		
		private string _SideMarkPaper_Desc;
		
		private System.Nullable<bool> _InnerBoxMark_SingleDouble;
		
		private string _InnerBoxMark_Desc;
		
		private string _MarkerA;
		
		private string _MarkerB;
		
		private string _MarkerC;
		
		private string _MarkerD;
		
		private string _MarkerE;
		
		private string _BrandA;
		
		private string _BrandB;
		
		private string _BrandC;
		
		private string _BrandD;
		
		private string _CustomDecalsA;
		
		private string _CustomDecalsB;
		
		private string _CustomDecalsC;
		
		private string _CustomDecalsD;
		
		private string _CustomDecalsE;
		
		private string _CustomDecalsF;
		
		private string _PlasticBags_Material;
		
		private string _PlasticBags_Depth;
		
		private string _PlasticNeedleStyle;
		
		private string _PlasticNeedleLength;
		
		private string _ClothesHorseStyle;
		
		private string _PackReference;
		
		private string _LabelReference;
		
		private string _PackMethod;
		
		private string _Img;
		
		private EntitySet<CustomerCup> _CustomerCups;
		
		private EntitySet<CustomerLabeling> _CustomerLabelings;
		
		private EntitySet<CustomerPacking> _CustomerPackings;
		
		private EntityRef<CustomerCode> _CustomerCode;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomerChanging(string value);
    partial void OnCustomerChanged();
    partial void OnCustCodeChanging(string value);
    partial void OnCustCodeChanged();
    partial void OnGIDChanging(System.Guid value);
    partial void OnGIDChanged();
    partial void OnBrandChanging(string value);
    partial void OnBrandChanged();
    partial void OnCategoryChanging(string value);
    partial void OnCategoryChanged();
    partial void OnStyleNoChanging(string value);
    partial void OnStyleNoChanged();
    partial void OnStyleDescChanging(string value);
    partial void OnStyleDescChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnFlatOrHalfFoldChanging(System.Nullable<int> value);
    partial void OnFlatOrHalfFoldChanged();
    partial void OnHookandeyeChanging(System.Nullable<int> value);
    partial void OnHookandeyeChanged();
    partial void OnShoulderStrapAdjustmentChanging(string value);
    partial void OnShoulderStrapAdjustmentChanged();
    partial void OnSizeDispatchingChanging(string value);
    partial void OnSizeDispatchingChanged();
    partial void OnBasicRequisition1Changing(System.Nullable<bool> value);
    partial void OnBasicRequisition1Changed();
    partial void OnBasicRequisition2Changing(System.Nullable<bool> value);
    partial void OnBasicRequisition2Changed();
    partial void OnBasicRequisition3Changing(System.Nullable<bool> value);
    partial void OnBasicRequisition3Changed();
    partial void OnProwBoardChanging(string value);
    partial void OnProwBoardChanged();
    partial void OnExportCtnMeasurementChanging(string value);
    partial void OnExportCtnMeasurementChanged();
    partial void OnCartonBeltRequisitionChanging(System.Nullable<bool> value);
    partial void OnCartonBeltRequisitionChanged();
    partial void OnInnerBoxMeasurementChanging(string value);
    partial void OnInnerBoxMeasurementChanged();
    partial void OnSky_SingleDoubleChanging(System.Nullable<bool> value);
    partial void OnSky_SingleDoubleChanged();
    partial void OnSky_DescChanging(string value);
    partial void OnSky_DescChanged();
    partial void OnBoat_SingleDoubleChanging(System.Nullable<bool> value);
    partial void OnBoat_SingleDoubleChanged();
    partial void OnBoat_DescChanging(string value);
    partial void OnBoat_DescChanged();
    partial void OnSideMark_SingleDoubleChanging(System.Nullable<bool> value);
    partial void OnSideMark_SingleDoubleChanged();
    partial void OnSideMark_DescChanging(string value);
    partial void OnSideMark_DescChanged();
    partial void OnSideMarkPaper_SingleDoubleChanging(System.Nullable<bool> value);
    partial void OnSideMarkPaper_SingleDoubleChanged();
    partial void OnSideMarkPaper_DescChanging(string value);
    partial void OnSideMarkPaper_DescChanged();
    partial void OnInnerBoxMark_SingleDoubleChanging(System.Nullable<bool> value);
    partial void OnInnerBoxMark_SingleDoubleChanged();
    partial void OnInnerBoxMark_DescChanging(string value);
    partial void OnInnerBoxMark_DescChanged();
    partial void OnMarkerAChanging(string value);
    partial void OnMarkerAChanged();
    partial void OnMarkerBChanging(string value);
    partial void OnMarkerBChanged();
    partial void OnMarkerCChanging(string value);
    partial void OnMarkerCChanged();
    partial void OnMarkerDChanging(string value);
    partial void OnMarkerDChanged();
    partial void OnMarkerEChanging(string value);
    partial void OnMarkerEChanged();
    partial void OnBrandAChanging(string value);
    partial void OnBrandAChanged();
    partial void OnBrandBChanging(string value);
    partial void OnBrandBChanged();
    partial void OnBrandCChanging(string value);
    partial void OnBrandCChanged();
    partial void OnBrandDChanging(string value);
    partial void OnBrandDChanged();
    partial void OnCustomDecalsAChanging(string value);
    partial void OnCustomDecalsAChanged();
    partial void OnCustomDecalsBChanging(string value);
    partial void OnCustomDecalsBChanged();
    partial void OnCustomDecalsCChanging(string value);
    partial void OnCustomDecalsCChanged();
    partial void OnCustomDecalsDChanging(string value);
    partial void OnCustomDecalsDChanged();
    partial void OnCustomDecalsEChanging(string value);
    partial void OnCustomDecalsEChanged();
    partial void OnCustomDecalsFChanging(string value);
    partial void OnCustomDecalsFChanged();
    partial void OnPlasticBags_MaterialChanging(string value);
    partial void OnPlasticBags_MaterialChanged();
    partial void OnPlasticBags_DepthChanging(string value);
    partial void OnPlasticBags_DepthChanged();
    partial void OnPlasticNeedleStyleChanging(string value);
    partial void OnPlasticNeedleStyleChanged();
    partial void OnPlasticNeedleLengthChanging(string value);
    partial void OnPlasticNeedleLengthChanged();
    partial void OnClothesHorseStyleChanging(string value);
    partial void OnClothesHorseStyleChanged();
    partial void OnPackReferenceChanging(string value);
    partial void OnPackReferenceChanged();
    partial void OnLabelReferenceChanging(string value);
    partial void OnLabelReferenceChanged();
    partial void OnPackMethodChanging(string value);
    partial void OnPackMethodChanged();
    partial void OnImgChanging(string value);
    partial void OnImgChanged();
    #endregion
		
		public CustomerBrandCategory()
		{
			this.Initialize();
		}
		
		[Column(Storage="_Customer", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=1)]
		public string Customer
		{
			get
			{
				return this._Customer;
			}
			set
			{
				if ((this._Customer != value))
				{
					if (this._CustomerCode.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerChanging(value);
					this.SendPropertyChanging();
					this._Customer = value;
					this.SendPropertyChanged("Customer");
					this.OnCustomerChanged();
				}
			}
		}
		
		[Column(Storage="_CustCode", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=2)]
		public string CustCode
		{
			get
			{
				return this._CustCode;
			}
			set
			{
				if ((this._CustCode != value))
				{
					if (this._CustomerCode.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustCodeChanging(value);
					this.SendPropertyChanging();
					this._CustCode = value;
					this.SendPropertyChanged("CustCode");
					this.OnCustCodeChanged();
				}
			}
		}
		
		[Column(Storage="_GID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[DataMember(Order=3)]
		public System.Guid GID
		{
			get
			{
				return this._GID;
			}
			set
			{
				if ((this._GID != value))
				{
					this.OnGIDChanging(value);
					this.SendPropertyChanging();
					this._GID = value;
					this.SendPropertyChanged("GID");
					this.OnGIDChanged();
				}
			}
		}
		
		[Column(Storage="_Brand", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		[DataMember(Order=4)]
		public string Brand
		{
			get
			{
				return this._Brand;
			}
			set
			{
				if ((this._Brand != value))
				{
					this.OnBrandChanging(value);
					this.SendPropertyChanging();
					this._Brand = value;
					this.SendPropertyChanged("Brand");
					this.OnBrandChanged();
				}
			}
		}
		
		[Column(Storage="_Category", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		[DataMember(Order=5)]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		[Column(Storage="_StyleNo", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[DataMember(Order=6)]
		public string StyleNo
		{
			get
			{
				return this._StyleNo;
			}
			set
			{
				if ((this._StyleNo != value))
				{
					this.OnStyleNoChanging(value);
					this.SendPropertyChanging();
					this._StyleNo = value;
					this.SendPropertyChanged("StyleNo");
					this.OnStyleNoChanged();
				}
			}
		}
		
		[Column(Storage="_StyleDesc", DbType="NVarChar(500)")]
		[DataMember(Order=7)]
		public string StyleDesc
		{
			get
			{
				return this._StyleDesc;
			}
			set
			{
				if ((this._StyleDesc != value))
				{
					this.OnStyleDescChanging(value);
					this.SendPropertyChanging();
					this._StyleDesc = value;
					this.SendPropertyChanged("StyleDesc");
					this.OnStyleDescChanged();
				}
			}
		}
		
		[Column(Storage="_Active", DbType="Bit")]
		[DataMember(Order=8)]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[Column(Storage="_FlatOrHalfFold", DbType="Int")]
		[DataMember(Order=9)]
		public System.Nullable<int> FlatOrHalfFold
		{
			get
			{
				return this._FlatOrHalfFold;
			}
			set
			{
				if ((this._FlatOrHalfFold != value))
				{
					this.OnFlatOrHalfFoldChanging(value);
					this.SendPropertyChanging();
					this._FlatOrHalfFold = value;
					this.SendPropertyChanged("FlatOrHalfFold");
					this.OnFlatOrHalfFoldChanged();
				}
			}
		}
		
		[Column(Storage="_Hookandeye", DbType="Int")]
		[DataMember(Order=10)]
		public System.Nullable<int> Hookandeye
		{
			get
			{
				return this._Hookandeye;
			}
			set
			{
				if ((this._Hookandeye != value))
				{
					this.OnHookandeyeChanging(value);
					this.SendPropertyChanging();
					this._Hookandeye = value;
					this.SendPropertyChanged("Hookandeye");
					this.OnHookandeyeChanged();
				}
			}
		}
		
		[Column(Storage="_ShoulderStrapAdjustment", DbType="NVarChar(200)")]
		[DataMember(Order=11)]
		public string ShoulderStrapAdjustment
		{
			get
			{
				return this._ShoulderStrapAdjustment;
			}
			set
			{
				if ((this._ShoulderStrapAdjustment != value))
				{
					this.OnShoulderStrapAdjustmentChanging(value);
					this.SendPropertyChanging();
					this._ShoulderStrapAdjustment = value;
					this.SendPropertyChanged("ShoulderStrapAdjustment");
					this.OnShoulderStrapAdjustmentChanged();
				}
			}
		}
		
		[Column(Storage="_SizeDispatching", DbType="NVarChar(2000)")]
		[DataMember(Order=12)]
		public string SizeDispatching
		{
			get
			{
				return this._SizeDispatching;
			}
			set
			{
				if ((this._SizeDispatching != value))
				{
					this.OnSizeDispatchingChanging(value);
					this.SendPropertyChanging();
					this._SizeDispatching = value;
					this.SendPropertyChanged("SizeDispatching");
					this.OnSizeDispatchingChanged();
				}
			}
		}
		
		[Column(Storage="_BasicRequisition1", DbType="Bit")]
		[DataMember(Order=13)]
		public System.Nullable<bool> BasicRequisition1
		{
			get
			{
				return this._BasicRequisition1;
			}
			set
			{
				if ((this._BasicRequisition1 != value))
				{
					this.OnBasicRequisition1Changing(value);
					this.SendPropertyChanging();
					this._BasicRequisition1 = value;
					this.SendPropertyChanged("BasicRequisition1");
					this.OnBasicRequisition1Changed();
				}
			}
		}
		
		[Column(Storage="_BasicRequisition2", DbType="Bit")]
		[DataMember(Order=14)]
		public System.Nullable<bool> BasicRequisition2
		{
			get
			{
				return this._BasicRequisition2;
			}
			set
			{
				if ((this._BasicRequisition2 != value))
				{
					this.OnBasicRequisition2Changing(value);
					this.SendPropertyChanging();
					this._BasicRequisition2 = value;
					this.SendPropertyChanged("BasicRequisition2");
					this.OnBasicRequisition2Changed();
				}
			}
		}
		
		[Column(Storage="_BasicRequisition3", DbType="Bit")]
		[DataMember(Order=15)]
		public System.Nullable<bool> BasicRequisition3
		{
			get
			{
				return this._BasicRequisition3;
			}
			set
			{
				if ((this._BasicRequisition3 != value))
				{
					this.OnBasicRequisition3Changing(value);
					this.SendPropertyChanging();
					this._BasicRequisition3 = value;
					this.SendPropertyChanged("BasicRequisition3");
					this.OnBasicRequisition3Changed();
				}
			}
		}
		
		[Column(Storage="_ProwBoard", DbType="NVarChar(200)")]
		[DataMember(Order=16)]
		public string ProwBoard
		{
			get
			{
				return this._ProwBoard;
			}
			set
			{
				if ((this._ProwBoard != value))
				{
					this.OnProwBoardChanging(value);
					this.SendPropertyChanging();
					this._ProwBoard = value;
					this.SendPropertyChanged("ProwBoard");
					this.OnProwBoardChanged();
				}
			}
		}
		
		[Column(Storage="_ExportCtnMeasurement", DbType="NVarChar(250)")]
		[DataMember(Order=17)]
		public string ExportCtnMeasurement
		{
			get
			{
				return this._ExportCtnMeasurement;
			}
			set
			{
				if ((this._ExportCtnMeasurement != value))
				{
					this.OnExportCtnMeasurementChanging(value);
					this.SendPropertyChanging();
					this._ExportCtnMeasurement = value;
					this.SendPropertyChanged("ExportCtnMeasurement");
					this.OnExportCtnMeasurementChanged();
				}
			}
		}
		
		[Column(Storage="_CartonBeltRequisition", DbType="Bit")]
		[DataMember(Order=18)]
		public System.Nullable<bool> CartonBeltRequisition
		{
			get
			{
				return this._CartonBeltRequisition;
			}
			set
			{
				if ((this._CartonBeltRequisition != value))
				{
					this.OnCartonBeltRequisitionChanging(value);
					this.SendPropertyChanging();
					this._CartonBeltRequisition = value;
					this.SendPropertyChanged("CartonBeltRequisition");
					this.OnCartonBeltRequisitionChanged();
				}
			}
		}
		
		[Column(Storage="_InnerBoxMeasurement", DbType="NVarChar(250)")]
		[DataMember(Order=19)]
		public string InnerBoxMeasurement
		{
			get
			{
				return this._InnerBoxMeasurement;
			}
			set
			{
				if ((this._InnerBoxMeasurement != value))
				{
					this.OnInnerBoxMeasurementChanging(value);
					this.SendPropertyChanging();
					this._InnerBoxMeasurement = value;
					this.SendPropertyChanged("InnerBoxMeasurement");
					this.OnInnerBoxMeasurementChanged();
				}
			}
		}
		
		[Column(Storage="_Sky_SingleDouble", DbType="Bit")]
		[DataMember(Order=20)]
		public System.Nullable<bool> Sky_SingleDouble
		{
			get
			{
				return this._Sky_SingleDouble;
			}
			set
			{
				if ((this._Sky_SingleDouble != value))
				{
					this.OnSky_SingleDoubleChanging(value);
					this.SendPropertyChanging();
					this._Sky_SingleDouble = value;
					this.SendPropertyChanged("Sky_SingleDouble");
					this.OnSky_SingleDoubleChanged();
				}
			}
		}
		
		[Column(Storage="_Sky_Desc", DbType="NVarChar(800)")]
		[DataMember(Order=21)]
		public string Sky_Desc
		{
			get
			{
				return this._Sky_Desc;
			}
			set
			{
				if ((this._Sky_Desc != value))
				{
					this.OnSky_DescChanging(value);
					this.SendPropertyChanging();
					this._Sky_Desc = value;
					this.SendPropertyChanged("Sky_Desc");
					this.OnSky_DescChanged();
				}
			}
		}
		
		[Column(Storage="_Boat_SingleDouble", DbType="Bit")]
		[DataMember(Order=22)]
		public System.Nullable<bool> Boat_SingleDouble
		{
			get
			{
				return this._Boat_SingleDouble;
			}
			set
			{
				if ((this._Boat_SingleDouble != value))
				{
					this.OnBoat_SingleDoubleChanging(value);
					this.SendPropertyChanging();
					this._Boat_SingleDouble = value;
					this.SendPropertyChanged("Boat_SingleDouble");
					this.OnBoat_SingleDoubleChanged();
				}
			}
		}
		
		[Column(Storage="_Boat_Desc", DbType="NVarChar(800)")]
		[DataMember(Order=23)]
		public string Boat_Desc
		{
			get
			{
				return this._Boat_Desc;
			}
			set
			{
				if ((this._Boat_Desc != value))
				{
					this.OnBoat_DescChanging(value);
					this.SendPropertyChanging();
					this._Boat_Desc = value;
					this.SendPropertyChanged("Boat_Desc");
					this.OnBoat_DescChanged();
				}
			}
		}
		
		[Column(Storage="_SideMark_SingleDouble", DbType="Bit")]
		[DataMember(Order=24)]
		public System.Nullable<bool> SideMark_SingleDouble
		{
			get
			{
				return this._SideMark_SingleDouble;
			}
			set
			{
				if ((this._SideMark_SingleDouble != value))
				{
					this.OnSideMark_SingleDoubleChanging(value);
					this.SendPropertyChanging();
					this._SideMark_SingleDouble = value;
					this.SendPropertyChanged("SideMark_SingleDouble");
					this.OnSideMark_SingleDoubleChanged();
				}
			}
		}
		
		[Column(Storage="_SideMark_Desc", DbType="NVarChar(800)")]
		[DataMember(Order=25)]
		public string SideMark_Desc
		{
			get
			{
				return this._SideMark_Desc;
			}
			set
			{
				if ((this._SideMark_Desc != value))
				{
					this.OnSideMark_DescChanging(value);
					this.SendPropertyChanging();
					this._SideMark_Desc = value;
					this.SendPropertyChanged("SideMark_Desc");
					this.OnSideMark_DescChanged();
				}
			}
		}
		
		[Column(Storage="_SideMarkPaper_SingleDouble", DbType="Bit")]
		[DataMember(Order=26)]
		public System.Nullable<bool> SideMarkPaper_SingleDouble
		{
			get
			{
				return this._SideMarkPaper_SingleDouble;
			}
			set
			{
				if ((this._SideMarkPaper_SingleDouble != value))
				{
					this.OnSideMarkPaper_SingleDoubleChanging(value);
					this.SendPropertyChanging();
					this._SideMarkPaper_SingleDouble = value;
					this.SendPropertyChanged("SideMarkPaper_SingleDouble");
					this.OnSideMarkPaper_SingleDoubleChanged();
				}
			}
		}
		
		[Column(Storage="_SideMarkPaper_Desc", DbType="NVarChar(800)")]
		[DataMember(Order=27)]
		public string SideMarkPaper_Desc
		{
			get
			{
				return this._SideMarkPaper_Desc;
			}
			set
			{
				if ((this._SideMarkPaper_Desc != value))
				{
					this.OnSideMarkPaper_DescChanging(value);
					this.SendPropertyChanging();
					this._SideMarkPaper_Desc = value;
					this.SendPropertyChanged("SideMarkPaper_Desc");
					this.OnSideMarkPaper_DescChanged();
				}
			}
		}
		
		[Column(Storage="_InnerBoxMark_SingleDouble", DbType="Bit")]
		[DataMember(Order=28)]
		public System.Nullable<bool> InnerBoxMark_SingleDouble
		{
			get
			{
				return this._InnerBoxMark_SingleDouble;
			}
			set
			{
				if ((this._InnerBoxMark_SingleDouble != value))
				{
					this.OnInnerBoxMark_SingleDoubleChanging(value);
					this.SendPropertyChanging();
					this._InnerBoxMark_SingleDouble = value;
					this.SendPropertyChanged("InnerBoxMark_SingleDouble");
					this.OnInnerBoxMark_SingleDoubleChanged();
				}
			}
		}
		
		[Column(Storage="_InnerBoxMark_Desc", DbType="NVarChar(800)")]
		[DataMember(Order=29)]
		public string InnerBoxMark_Desc
		{
			get
			{
				return this._InnerBoxMark_Desc;
			}
			set
			{
				if ((this._InnerBoxMark_Desc != value))
				{
					this.OnInnerBoxMark_DescChanging(value);
					this.SendPropertyChanging();
					this._InnerBoxMark_Desc = value;
					this.SendPropertyChanged("InnerBoxMark_Desc");
					this.OnInnerBoxMark_DescChanged();
				}
			}
		}
		
		[Column(Storage="_MarkerA", DbType="NVarChar(200)")]
		[DataMember(Order=30)]
		public string MarkerA
		{
			get
			{
				return this._MarkerA;
			}
			set
			{
				if ((this._MarkerA != value))
				{
					this.OnMarkerAChanging(value);
					this.SendPropertyChanging();
					this._MarkerA = value;
					this.SendPropertyChanged("MarkerA");
					this.OnMarkerAChanged();
				}
			}
		}
		
		[Column(Storage="_MarkerB", DbType="NVarChar(200)")]
		[DataMember(Order=31)]
		public string MarkerB
		{
			get
			{
				return this._MarkerB;
			}
			set
			{
				if ((this._MarkerB != value))
				{
					this.OnMarkerBChanging(value);
					this.SendPropertyChanging();
					this._MarkerB = value;
					this.SendPropertyChanged("MarkerB");
					this.OnMarkerBChanged();
				}
			}
		}
		
		[Column(Storage="_MarkerC", DbType="NVarChar(200)")]
		[DataMember(Order=32)]
		public string MarkerC
		{
			get
			{
				return this._MarkerC;
			}
			set
			{
				if ((this._MarkerC != value))
				{
					this.OnMarkerCChanging(value);
					this.SendPropertyChanging();
					this._MarkerC = value;
					this.SendPropertyChanged("MarkerC");
					this.OnMarkerCChanged();
				}
			}
		}
		
		[Column(Storage="_MarkerD", DbType="NVarChar(200)")]
		[DataMember(Order=33)]
		public string MarkerD
		{
			get
			{
				return this._MarkerD;
			}
			set
			{
				if ((this._MarkerD != value))
				{
					this.OnMarkerDChanging(value);
					this.SendPropertyChanging();
					this._MarkerD = value;
					this.SendPropertyChanged("MarkerD");
					this.OnMarkerDChanged();
				}
			}
		}
		
		[Column(Storage="_MarkerE", DbType="NVarChar(200)")]
		[DataMember(Order=34)]
		public string MarkerE
		{
			get
			{
				return this._MarkerE;
			}
			set
			{
				if ((this._MarkerE != value))
				{
					this.OnMarkerEChanging(value);
					this.SendPropertyChanging();
					this._MarkerE = value;
					this.SendPropertyChanged("MarkerE");
					this.OnMarkerEChanged();
				}
			}
		}
		
		[Column(Storage="_BrandA", DbType="NVarChar(200)")]
		[DataMember(Order=35)]
		public string BrandA
		{
			get
			{
				return this._BrandA;
			}
			set
			{
				if ((this._BrandA != value))
				{
					this.OnBrandAChanging(value);
					this.SendPropertyChanging();
					this._BrandA = value;
					this.SendPropertyChanged("BrandA");
					this.OnBrandAChanged();
				}
			}
		}
		
		[Column(Storage="_BrandB", DbType="NVarChar(200)")]
		[DataMember(Order=36)]
		public string BrandB
		{
			get
			{
				return this._BrandB;
			}
			set
			{
				if ((this._BrandB != value))
				{
					this.OnBrandBChanging(value);
					this.SendPropertyChanging();
					this._BrandB = value;
					this.SendPropertyChanged("BrandB");
					this.OnBrandBChanged();
				}
			}
		}
		
		[Column(Storage="_BrandC", DbType="NVarChar(200)")]
		[DataMember(Order=37)]
		public string BrandC
		{
			get
			{
				return this._BrandC;
			}
			set
			{
				if ((this._BrandC != value))
				{
					this.OnBrandCChanging(value);
					this.SendPropertyChanging();
					this._BrandC = value;
					this.SendPropertyChanged("BrandC");
					this.OnBrandCChanged();
				}
			}
		}
		
		[Column(Storage="_BrandD", DbType="NVarChar(200)")]
		[DataMember(Order=38)]
		public string BrandD
		{
			get
			{
				return this._BrandD;
			}
			set
			{
				if ((this._BrandD != value))
				{
					this.OnBrandDChanging(value);
					this.SendPropertyChanging();
					this._BrandD = value;
					this.SendPropertyChanged("BrandD");
					this.OnBrandDChanged();
				}
			}
		}
		
		[Column(Storage="_CustomDecalsA", DbType="NVarChar(200)")]
		[DataMember(Order=39)]
		public string CustomDecalsA
		{
			get
			{
				return this._CustomDecalsA;
			}
			set
			{
				if ((this._CustomDecalsA != value))
				{
					this.OnCustomDecalsAChanging(value);
					this.SendPropertyChanging();
					this._CustomDecalsA = value;
					this.SendPropertyChanged("CustomDecalsA");
					this.OnCustomDecalsAChanged();
				}
			}
		}
		
		[Column(Storage="_CustomDecalsB", DbType="NVarChar(200)")]
		[DataMember(Order=40)]
		public string CustomDecalsB
		{
			get
			{
				return this._CustomDecalsB;
			}
			set
			{
				if ((this._CustomDecalsB != value))
				{
					this.OnCustomDecalsBChanging(value);
					this.SendPropertyChanging();
					this._CustomDecalsB = value;
					this.SendPropertyChanged("CustomDecalsB");
					this.OnCustomDecalsBChanged();
				}
			}
		}
		
		[Column(Storage="_CustomDecalsC", DbType="NVarChar(200)")]
		[DataMember(Order=41)]
		public string CustomDecalsC
		{
			get
			{
				return this._CustomDecalsC;
			}
			set
			{
				if ((this._CustomDecalsC != value))
				{
					this.OnCustomDecalsCChanging(value);
					this.SendPropertyChanging();
					this._CustomDecalsC = value;
					this.SendPropertyChanged("CustomDecalsC");
					this.OnCustomDecalsCChanged();
				}
			}
		}
		
		[Column(Storage="_CustomDecalsD", DbType="NVarChar(200)")]
		[DataMember(Order=42)]
		public string CustomDecalsD
		{
			get
			{
				return this._CustomDecalsD;
			}
			set
			{
				if ((this._CustomDecalsD != value))
				{
					this.OnCustomDecalsDChanging(value);
					this.SendPropertyChanging();
					this._CustomDecalsD = value;
					this.SendPropertyChanged("CustomDecalsD");
					this.OnCustomDecalsDChanged();
				}
			}
		}
		
		[Column(Storage="_CustomDecalsE", DbType="NVarChar(200)")]
		[DataMember(Order=43)]
		public string CustomDecalsE
		{
			get
			{
				return this._CustomDecalsE;
			}
			set
			{
				if ((this._CustomDecalsE != value))
				{
					this.OnCustomDecalsEChanging(value);
					this.SendPropertyChanging();
					this._CustomDecalsE = value;
					this.SendPropertyChanged("CustomDecalsE");
					this.OnCustomDecalsEChanged();
				}
			}
		}
		
		[Column(Storage="_CustomDecalsF", DbType="NVarChar(200)")]
		[DataMember(Order=44)]
		public string CustomDecalsF
		{
			get
			{
				return this._CustomDecalsF;
			}
			set
			{
				if ((this._CustomDecalsF != value))
				{
					this.OnCustomDecalsFChanging(value);
					this.SendPropertyChanging();
					this._CustomDecalsF = value;
					this.SendPropertyChanged("CustomDecalsF");
					this.OnCustomDecalsFChanged();
				}
			}
		}
		
		[Column(Storage="_PlasticBags_Material", DbType="NVarChar(200)")]
		[DataMember(Order=45)]
		public string PlasticBags_Material
		{
			get
			{
				return this._PlasticBags_Material;
			}
			set
			{
				if ((this._PlasticBags_Material != value))
				{
					this.OnPlasticBags_MaterialChanging(value);
					this.SendPropertyChanging();
					this._PlasticBags_Material = value;
					this.SendPropertyChanged("PlasticBags_Material");
					this.OnPlasticBags_MaterialChanged();
				}
			}
		}
		
		[Column(Storage="_PlasticBags_Depth", DbType="NVarChar(200)")]
		[DataMember(Order=46)]
		public string PlasticBags_Depth
		{
			get
			{
				return this._PlasticBags_Depth;
			}
			set
			{
				if ((this._PlasticBags_Depth != value))
				{
					this.OnPlasticBags_DepthChanging(value);
					this.SendPropertyChanging();
					this._PlasticBags_Depth = value;
					this.SendPropertyChanged("PlasticBags_Depth");
					this.OnPlasticBags_DepthChanged();
				}
			}
		}
		
		[Column(Storage="_PlasticNeedleStyle", DbType="NVarChar(200)")]
		[DataMember(Order=47)]
		public string PlasticNeedleStyle
		{
			get
			{
				return this._PlasticNeedleStyle;
			}
			set
			{
				if ((this._PlasticNeedleStyle != value))
				{
					this.OnPlasticNeedleStyleChanging(value);
					this.SendPropertyChanging();
					this._PlasticNeedleStyle = value;
					this.SendPropertyChanged("PlasticNeedleStyle");
					this.OnPlasticNeedleStyleChanged();
				}
			}
		}
		
		[Column(Storage="_PlasticNeedleLength", DbType="NVarChar(200)")]
		[DataMember(Order=48)]
		public string PlasticNeedleLength
		{
			get
			{
				return this._PlasticNeedleLength;
			}
			set
			{
				if ((this._PlasticNeedleLength != value))
				{
					this.OnPlasticNeedleLengthChanging(value);
					this.SendPropertyChanging();
					this._PlasticNeedleLength = value;
					this.SendPropertyChanged("PlasticNeedleLength");
					this.OnPlasticNeedleLengthChanged();
				}
			}
		}
		
		[Column(Storage="_ClothesHorseStyle", DbType="NVarChar(200)")]
		[DataMember(Order=49)]
		public string ClothesHorseStyle
		{
			get
			{
				return this._ClothesHorseStyle;
			}
			set
			{
				if ((this._ClothesHorseStyle != value))
				{
					this.OnClothesHorseStyleChanging(value);
					this.SendPropertyChanging();
					this._ClothesHorseStyle = value;
					this.SendPropertyChanged("ClothesHorseStyle");
					this.OnClothesHorseStyleChanged();
				}
			}
		}
		
		[Column(Storage="_PackReference", DbType="NVarChar(50)")]
		[DataMember(Order=50)]
		public string PackReference
		{
			get
			{
				return this._PackReference;
			}
			set
			{
				if ((this._PackReference != value))
				{
					this.OnPackReferenceChanging(value);
					this.SendPropertyChanging();
					this._PackReference = value;
					this.SendPropertyChanged("PackReference");
					this.OnPackReferenceChanged();
				}
			}
		}
		
		[Column(Storage="_LabelReference", DbType="NVarChar(50)")]
		[DataMember(Order=51)]
		public string LabelReference
		{
			get
			{
				return this._LabelReference;
			}
			set
			{
				if ((this._LabelReference != value))
				{
					this.OnLabelReferenceChanging(value);
					this.SendPropertyChanging();
					this._LabelReference = value;
					this.SendPropertyChanged("LabelReference");
					this.OnLabelReferenceChanged();
				}
			}
		}
		
		[Column(Storage="_PackMethod", DbType="NVarChar(50)")]
		[DataMember(Order=52)]
		public string PackMethod
		{
			get
			{
				return this._PackMethod;
			}
			set
			{
				if ((this._PackMethod != value))
				{
					this.OnPackMethodChanging(value);
					this.SendPropertyChanging();
					this._PackMethod = value;
					this.SendPropertyChanged("PackMethod");
					this.OnPackMethodChanged();
				}
			}
		}
		
		[Column(Storage="_Img", DbType="NVarChar(500)")]
		[DataMember(Order=53)]
		public string Img
		{
			get
			{
				return this._Img;
			}
			set
			{
				if ((this._Img != value))
				{
					this.OnImgChanging(value);
					this.SendPropertyChanging();
					this._Img = value;
					this.SendPropertyChanged("Img");
					this.OnImgChanged();
				}
			}
		}
		
		[Association(Name="CustomerBrandCategory_CustomerCup", Storage="_CustomerCups", ThisKey="Customer,CustCode,GID", OtherKey="Customer,CustCode,GID")]
		[DataMember(Order=54, EmitDefaultValue=false)]
		public EntitySet<CustomerCup> CustomerCups
		{
			get
			{
				if ((this.serializing 
							&& (this._CustomerCups.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CustomerCups;
			}
			set
			{
				this._CustomerCups.Assign(value);
			}
		}
		
		[Association(Name="CustomerBrandCategory_CustomerLabeling", Storage="_CustomerLabelings", ThisKey="Customer,CustCode,GID", OtherKey="Customer,CustCode,GID")]
		[DataMember(Order=55, EmitDefaultValue=false)]
		public EntitySet<CustomerLabeling> CustomerLabelings
		{
			get
			{
				if ((this.serializing 
							&& (this._CustomerLabelings.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CustomerLabelings;
			}
			set
			{
				this._CustomerLabelings.Assign(value);
			}
		}
		
		[Association(Name="CustomerBrandCategory_CustomerPacking", Storage="_CustomerPackings", ThisKey="Customer,CustCode,GID", OtherKey="Customer,CustCode,GID")]
		[DataMember(Order=56, EmitDefaultValue=false)]
		public EntitySet<CustomerPacking> CustomerPackings
		{
			get
			{
				if ((this.serializing 
							&& (this._CustomerPackings.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CustomerPackings;
			}
			set
			{
				this._CustomerPackings.Assign(value);
			}
		}
		
		[Association(Name="CustomerCode_CustomerBrandCategory", Storage="_CustomerCode", ThisKey="Customer,CustCode", OtherKey="Customer,CustomerCode1", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public CustomerCode CustomerCode
		{
			get
			{
				return this._CustomerCode.Entity;
			}
			set
			{
				CustomerCode previousValue = this._CustomerCode.Entity;
				if (((previousValue != value) 
							|| (this._CustomerCode.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerCode.Entity = null;
						previousValue.CustomerBrandCategories.Remove(this);
					}
					this._CustomerCode.Entity = value;
					if ((value != null))
					{
						value.CustomerBrandCategories.Add(this);
						this._Customer = value.Customer;
						this._CustCode = value.CustomerCode1;
					}
					else
					{
						this._Customer = default(string);
						this._CustCode = default(string);
					}
					this.SendPropertyChanged("CustomerCode");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CustomerCups(CustomerCup entity)
		{
			this.SendPropertyChanging();
			entity.CustomerBrandCategory = this;
		}
		
		private void detach_CustomerCups(CustomerCup entity)
		{
			this.SendPropertyChanging();
			entity.CustomerBrandCategory = null;
		}
		
		private void attach_CustomerLabelings(CustomerLabeling entity)
		{
			this.SendPropertyChanging();
			entity.CustomerBrandCategory = this;
		}
		
		private void detach_CustomerLabelings(CustomerLabeling entity)
		{
			this.SendPropertyChanging();
			entity.CustomerBrandCategory = null;
		}
		
		private void attach_CustomerPackings(CustomerPacking entity)
		{
			this.SendPropertyChanging();
			entity.CustomerBrandCategory = this;
		}
		
		private void detach_CustomerPackings(CustomerPacking entity)
		{
			this.SendPropertyChanging();
			entity.CustomerBrandCategory = null;
		}
		
		private void Initialize()
		{
			this._CustomerCups = new EntitySet<CustomerCup>(new Action<CustomerCup>(this.attach_CustomerCups), new Action<CustomerCup>(this.detach_CustomerCups));
			this._CustomerLabelings = new EntitySet<CustomerLabeling>(new Action<CustomerLabeling>(this.attach_CustomerLabelings), new Action<CustomerLabeling>(this.detach_CustomerLabelings));
			this._CustomerPackings = new EntitySet<CustomerPacking>(new Action<CustomerPacking>(this.attach_CustomerPackings), new Action<CustomerPacking>(this.detach_CustomerPackings));
			this._CustomerCode = default(EntityRef<CustomerCode>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[OnSerializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[OnSerialized()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[Table(Name="dbo.CustomerCup")]
	[DataContract()]
	public partial class CustomerCup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Customer;
		
		private string _CustCode;
		
		private System.Guid _GID;
		
		private string _ClrCode;
		
		private string _Cups;
		
		private string _Size;
		
		private System.Nullable<decimal> _Qty;
		
		private EntityRef<CustomerBrandCategory> _CustomerBrandCategory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomerChanging(string value);
    partial void OnCustomerChanged();
    partial void OnCustCodeChanging(string value);
    partial void OnCustCodeChanged();
    partial void OnGIDChanging(System.Guid value);
    partial void OnGIDChanged();
    partial void OnClrCodeChanging(string value);
    partial void OnClrCodeChanged();
    partial void OnCupsChanging(string value);
    partial void OnCupsChanged();
    partial void OnSizeChanging(string value);
    partial void OnSizeChanged();
    partial void OnQtyChanging(System.Nullable<decimal> value);
    partial void OnQtyChanged();
    #endregion
		
		public CustomerCup()
		{
			this.Initialize();
		}
		
		[Column(Storage="_Customer", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=1)]
		public string Customer
		{
			get
			{
				return this._Customer;
			}
			set
			{
				if ((this._Customer != value))
				{
					if (this._CustomerBrandCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerChanging(value);
					this.SendPropertyChanging();
					this._Customer = value;
					this.SendPropertyChanged("Customer");
					this.OnCustomerChanged();
				}
			}
		}
		
		[Column(Storage="_CustCode", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=2)]
		public string CustCode
		{
			get
			{
				return this._CustCode;
			}
			set
			{
				if ((this._CustCode != value))
				{
					if (this._CustomerBrandCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustCodeChanging(value);
					this.SendPropertyChanging();
					this._CustCode = value;
					this.SendPropertyChanged("CustCode");
					this.OnCustCodeChanged();
				}
			}
		}
		
		[Column(Storage="_GID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[DataMember(Order=3)]
		public System.Guid GID
		{
			get
			{
				return this._GID;
			}
			set
			{
				if ((this._GID != value))
				{
					if (this._CustomerBrandCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGIDChanging(value);
					this.SendPropertyChanging();
					this._GID = value;
					this.SendPropertyChanged("GID");
					this.OnGIDChanged();
				}
			}
		}
		
		[Column(Storage="_ClrCode", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=4)]
		public string ClrCode
		{
			get
			{
				return this._ClrCode;
			}
			set
			{
				if ((this._ClrCode != value))
				{
					this.OnClrCodeChanging(value);
					this.SendPropertyChanging();
					this._ClrCode = value;
					this.SendPropertyChanged("ClrCode");
					this.OnClrCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Cups", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=5)]
		public string Cups
		{
			get
			{
				return this._Cups;
			}
			set
			{
				if ((this._Cups != value))
				{
					this.OnCupsChanging(value);
					this.SendPropertyChanging();
					this._Cups = value;
					this.SendPropertyChanged("Cups");
					this.OnCupsChanged();
				}
			}
		}
		
		[Column(Storage="_Size", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=6)]
		public string Size
		{
			get
			{
				return this._Size;
			}
			set
			{
				if ((this._Size != value))
				{
					this.OnSizeChanging(value);
					this.SendPropertyChanging();
					this._Size = value;
					this.SendPropertyChanged("Size");
					this.OnSizeChanged();
				}
			}
		}
		
		[Column(Storage="_Qty", DbType="Decimal(15,0)")]
		[DataMember(Order=7)]
		public System.Nullable<decimal> Qty
		{
			get
			{
				return this._Qty;
			}
			set
			{
				if ((this._Qty != value))
				{
					this.OnQtyChanging(value);
					this.SendPropertyChanging();
					this._Qty = value;
					this.SendPropertyChanged("Qty");
					this.OnQtyChanged();
				}
			}
		}
		
		[Association(Name="CustomerBrandCategory_CustomerCup", Storage="_CustomerBrandCategory", ThisKey="Customer,CustCode,GID", OtherKey="Customer,CustCode,GID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public CustomerBrandCategory CustomerBrandCategory
		{
			get
			{
				return this._CustomerBrandCategory.Entity;
			}
			set
			{
				CustomerBrandCategory previousValue = this._CustomerBrandCategory.Entity;
				if (((previousValue != value) 
							|| (this._CustomerBrandCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerBrandCategory.Entity = null;
						previousValue.CustomerCups.Remove(this);
					}
					this._CustomerBrandCategory.Entity = value;
					if ((value != null))
					{
						value.CustomerCups.Add(this);
						this._Customer = value.Customer;
						this._CustCode = value.CustCode;
						this._GID = value.GID;
					}
					else
					{
						this._Customer = default(string);
						this._CustCode = default(string);
						this._GID = default(System.Guid);
					}
					this.SendPropertyChanged("CustomerBrandCategory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._CustomerBrandCategory = default(EntityRef<CustomerBrandCategory>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[Table(Name="dbo.CustomerLabeling")]
	[DataContract()]
	public partial class CustomerLabeling : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Customer;
		
		private string _CustCode;
		
		private System.Guid _GID;
		
		private int _ID;
		
		private string _LabelDescEN;
		
		private string _LabelDescCH;
		
		private string _LabelDescTH;
		
		private EntityRef<CustomerBrandCategory> _CustomerBrandCategory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomerChanging(string value);
    partial void OnCustomerChanged();
    partial void OnCustCodeChanging(string value);
    partial void OnCustCodeChanged();
    partial void OnGIDChanging(System.Guid value);
    partial void OnGIDChanged();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnLabelDescENChanging(string value);
    partial void OnLabelDescENChanged();
    partial void OnLabelDescCHChanging(string value);
    partial void OnLabelDescCHChanged();
    partial void OnLabelDescTHChanging(string value);
    partial void OnLabelDescTHChanged();
    #endregion
		
		public CustomerLabeling()
		{
			this.Initialize();
		}
		
		[Column(Storage="_Customer", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=1)]
		public string Customer
		{
			get
			{
				return this._Customer;
			}
			set
			{
				if ((this._Customer != value))
				{
					if (this._CustomerBrandCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerChanging(value);
					this.SendPropertyChanging();
					this._Customer = value;
					this.SendPropertyChanged("Customer");
					this.OnCustomerChanged();
				}
			}
		}
		
		[Column(Storage="_CustCode", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=2)]
		public string CustCode
		{
			get
			{
				return this._CustCode;
			}
			set
			{
				if ((this._CustCode != value))
				{
					if (this._CustomerBrandCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustCodeChanging(value);
					this.SendPropertyChanging();
					this._CustCode = value;
					this.SendPropertyChanged("CustCode");
					this.OnCustCodeChanged();
				}
			}
		}
		
		[Column(Storage="_GID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[DataMember(Order=3)]
		public System.Guid GID
		{
			get
			{
				return this._GID;
			}
			set
			{
				if ((this._GID != value))
				{
					if (this._CustomerBrandCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGIDChanging(value);
					this.SendPropertyChanging();
					this._GID = value;
					this.SendPropertyChanged("GID");
					this.OnGIDChanged();
				}
			}
		}
		
		[Column(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[DataMember(Order=4)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_LabelDescEN", DbType="NVarChar(4000)")]
		[DataMember(Order=5)]
		public string LabelDescEN
		{
			get
			{
				return this._LabelDescEN;
			}
			set
			{
				if ((this._LabelDescEN != value))
				{
					this.OnLabelDescENChanging(value);
					this.SendPropertyChanging();
					this._LabelDescEN = value;
					this.SendPropertyChanged("LabelDescEN");
					this.OnLabelDescENChanged();
				}
			}
		}
		
		[Column(Storage="_LabelDescCH", DbType="NVarChar(4000)")]
		[DataMember(Order=6)]
		public string LabelDescCH
		{
			get
			{
				return this._LabelDescCH;
			}
			set
			{
				if ((this._LabelDescCH != value))
				{
					this.OnLabelDescCHChanging(value);
					this.SendPropertyChanging();
					this._LabelDescCH = value;
					this.SendPropertyChanged("LabelDescCH");
					this.OnLabelDescCHChanged();
				}
			}
		}
		
		[Column(Storage="_LabelDescTH", DbType="NVarChar(4000)")]
		[DataMember(Order=7)]
		public string LabelDescTH
		{
			get
			{
				return this._LabelDescTH;
			}
			set
			{
				if ((this._LabelDescTH != value))
				{
					this.OnLabelDescTHChanging(value);
					this.SendPropertyChanging();
					this._LabelDescTH = value;
					this.SendPropertyChanged("LabelDescTH");
					this.OnLabelDescTHChanged();
				}
			}
		}
		
		[Association(Name="CustomerBrandCategory_CustomerLabeling", Storage="_CustomerBrandCategory", ThisKey="Customer,CustCode,GID", OtherKey="Customer,CustCode,GID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public CustomerBrandCategory CustomerBrandCategory
		{
			get
			{
				return this._CustomerBrandCategory.Entity;
			}
			set
			{
				CustomerBrandCategory previousValue = this._CustomerBrandCategory.Entity;
				if (((previousValue != value) 
							|| (this._CustomerBrandCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerBrandCategory.Entity = null;
						previousValue.CustomerLabelings.Remove(this);
					}
					this._CustomerBrandCategory.Entity = value;
					if ((value != null))
					{
						value.CustomerLabelings.Add(this);
						this._Customer = value.Customer;
						this._CustCode = value.CustCode;
						this._GID = value.GID;
					}
					else
					{
						this._Customer = default(string);
						this._CustCode = default(string);
						this._GID = default(System.Guid);
					}
					this.SendPropertyChanged("CustomerBrandCategory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._CustomerBrandCategory = default(EntityRef<CustomerBrandCategory>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[Table(Name="dbo.CustomerPacking")]
	[DataContract()]
	public partial class CustomerPacking : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Customer;
		
		private string _CustCode;
		
		private System.Guid _GID;
		
		private int _ID;
		
		private string _PackDescEN;
		
		private string _PackDescCH;
		
		private string _PackDescTH;
		
		private EntityRef<CustomerBrandCategory> _CustomerBrandCategory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomerChanging(string value);
    partial void OnCustomerChanged();
    partial void OnCustCodeChanging(string value);
    partial void OnCustCodeChanged();
    partial void OnGIDChanging(System.Guid value);
    partial void OnGIDChanged();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPackDescENChanging(string value);
    partial void OnPackDescENChanged();
    partial void OnPackDescCHChanging(string value);
    partial void OnPackDescCHChanged();
    partial void OnPackDescTHChanging(string value);
    partial void OnPackDescTHChanged();
    #endregion
		
		public CustomerPacking()
		{
			this.Initialize();
		}
		
		[Column(Storage="_Customer", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=1)]
		public string Customer
		{
			get
			{
				return this._Customer;
			}
			set
			{
				if ((this._Customer != value))
				{
					if (this._CustomerBrandCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerChanging(value);
					this.SendPropertyChanging();
					this._Customer = value;
					this.SendPropertyChanged("Customer");
					this.OnCustomerChanged();
				}
			}
		}
		
		[Column(Storage="_CustCode", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=2)]
		public string CustCode
		{
			get
			{
				return this._CustCode;
			}
			set
			{
				if ((this._CustCode != value))
				{
					if (this._CustomerBrandCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustCodeChanging(value);
					this.SendPropertyChanging();
					this._CustCode = value;
					this.SendPropertyChanged("CustCode");
					this.OnCustCodeChanged();
				}
			}
		}
		
		[Column(Storage="_GID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[DataMember(Order=3)]
		public System.Guid GID
		{
			get
			{
				return this._GID;
			}
			set
			{
				if ((this._GID != value))
				{
					if (this._CustomerBrandCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGIDChanging(value);
					this.SendPropertyChanging();
					this._GID = value;
					this.SendPropertyChanged("GID");
					this.OnGIDChanged();
				}
			}
		}
		
		[Column(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[DataMember(Order=4)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_PackDescEN", DbType="NVarChar(4000)")]
		[DataMember(Order=5)]
		public string PackDescEN
		{
			get
			{
				return this._PackDescEN;
			}
			set
			{
				if ((this._PackDescEN != value))
				{
					this.OnPackDescENChanging(value);
					this.SendPropertyChanging();
					this._PackDescEN = value;
					this.SendPropertyChanged("PackDescEN");
					this.OnPackDescENChanged();
				}
			}
		}
		
		[Column(Storage="_PackDescCH", DbType="NVarChar(4000)")]
		[DataMember(Order=6)]
		public string PackDescCH
		{
			get
			{
				return this._PackDescCH;
			}
			set
			{
				if ((this._PackDescCH != value))
				{
					this.OnPackDescCHChanging(value);
					this.SendPropertyChanging();
					this._PackDescCH = value;
					this.SendPropertyChanged("PackDescCH");
					this.OnPackDescCHChanged();
				}
			}
		}
		
		[Column(Storage="_PackDescTH", DbType="NVarChar(4000)")]
		[DataMember(Order=7)]
		public string PackDescTH
		{
			get
			{
				return this._PackDescTH;
			}
			set
			{
				if ((this._PackDescTH != value))
				{
					this.OnPackDescTHChanging(value);
					this.SendPropertyChanging();
					this._PackDescTH = value;
					this.SendPropertyChanged("PackDescTH");
					this.OnPackDescTHChanged();
				}
			}
		}
		
		[Association(Name="CustomerBrandCategory_CustomerPacking", Storage="_CustomerBrandCategory", ThisKey="Customer,CustCode,GID", OtherKey="Customer,CustCode,GID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public CustomerBrandCategory CustomerBrandCategory
		{
			get
			{
				return this._CustomerBrandCategory.Entity;
			}
			set
			{
				CustomerBrandCategory previousValue = this._CustomerBrandCategory.Entity;
				if (((previousValue != value) 
							|| (this._CustomerBrandCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerBrandCategory.Entity = null;
						previousValue.CustomerPackings.Remove(this);
					}
					this._CustomerBrandCategory.Entity = value;
					if ((value != null))
					{
						value.CustomerPackings.Add(this);
						this._Customer = value.Customer;
						this._CustCode = value.CustCode;
						this._GID = value.GID;
					}
					else
					{
						this._Customer = default(string);
						this._CustCode = default(string);
						this._GID = default(System.Guid);
					}
					this.SendPropertyChanged("CustomerBrandCategory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._CustomerBrandCategory = default(EntityRef<CustomerBrandCategory>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[Table(Name="dbo.WorkOrderCategoryCup")]
	[DataContract()]
	public partial class WorkOrderCategoryCup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Company;
		
		private string _SalesOrderNo;
		
		private string _WorkOrderNo;
		
		private string _ProductCategory;
		
		private string _ClrCode;
		
		private string _Cups;
		
		private string _Size;
		
		private System.Nullable<decimal> _Qty;
		
		private EntityRef<WorkOrderCategory> _WorkOrderCategory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnSalesOrderNoChanging(string value);
    partial void OnSalesOrderNoChanged();
    partial void OnWorkOrderNoChanging(string value);
    partial void OnWorkOrderNoChanged();
    partial void OnProductCategoryChanging(string value);
    partial void OnProductCategoryChanged();
    partial void OnClrCodeChanging(string value);
    partial void OnClrCodeChanged();
    partial void OnCupsChanging(string value);
    partial void OnCupsChanged();
    partial void OnSizeChanging(string value);
    partial void OnSizeChanged();
    partial void OnQtyChanging(System.Nullable<decimal> value);
    partial void OnQtyChanged();
    #endregion
		
		public WorkOrderCategoryCup()
		{
			this.Initialize();
		}
		
		[Column(Storage="_Company", DbType="VarChar(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=1)]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					if (this._WorkOrderCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[Column(Storage="_SalesOrderNo", DbType="VarChar(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=2)]
		public string SalesOrderNo
		{
			get
			{
				return this._SalesOrderNo;
			}
			set
			{
				if ((this._SalesOrderNo != value))
				{
					if (this._WorkOrderCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSalesOrderNoChanging(value);
					this.SendPropertyChanging();
					this._SalesOrderNo = value;
					this.SendPropertyChanged("SalesOrderNo");
					this.OnSalesOrderNoChanged();
				}
			}
		}
		
		[Column(Storage="_WorkOrderNo", DbType="VarChar(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=3)]
		public string WorkOrderNo
		{
			get
			{
				return this._WorkOrderNo;
			}
			set
			{
				if ((this._WorkOrderNo != value))
				{
					if (this._WorkOrderCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkOrderNoChanging(value);
					this.SendPropertyChanging();
					this._WorkOrderNo = value;
					this.SendPropertyChanged("WorkOrderNo");
					this.OnWorkOrderNoChanged();
				}
			}
		}
		
		[Column(Storage="_ProductCategory", DbType="VarChar(4) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=4)]
		public string ProductCategory
		{
			get
			{
				return this._ProductCategory;
			}
			set
			{
				if ((this._ProductCategory != value))
				{
					if (this._WorkOrderCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductCategoryChanging(value);
					this.SendPropertyChanging();
					this._ProductCategory = value;
					this.SendPropertyChanged("ProductCategory");
					this.OnProductCategoryChanged();
				}
			}
		}
		
		[Column(Storage="_ClrCode", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=5)]
		public string ClrCode
		{
			get
			{
				return this._ClrCode;
			}
			set
			{
				if ((this._ClrCode != value))
				{
					this.OnClrCodeChanging(value);
					this.SendPropertyChanging();
					this._ClrCode = value;
					this.SendPropertyChanged("ClrCode");
					this.OnClrCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Cups", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=6)]
		public string Cups
		{
			get
			{
				return this._Cups;
			}
			set
			{
				if ((this._Cups != value))
				{
					this.OnCupsChanging(value);
					this.SendPropertyChanging();
					this._Cups = value;
					this.SendPropertyChanged("Cups");
					this.OnCupsChanged();
				}
			}
		}
		
		[Column(Storage="_Size", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=7)]
		public string Size
		{
			get
			{
				return this._Size;
			}
			set
			{
				if ((this._Size != value))
				{
					this.OnSizeChanging(value);
					this.SendPropertyChanging();
					this._Size = value;
					this.SendPropertyChanged("Size");
					this.OnSizeChanged();
				}
			}
		}
		
		[Column(Storage="_Qty", DbType="Decimal(15,0)")]
		[DataMember(Order=8)]
		public System.Nullable<decimal> Qty
		{
			get
			{
				return this._Qty;
			}
			set
			{
				if ((this._Qty != value))
				{
					this.OnQtyChanging(value);
					this.SendPropertyChanging();
					this._Qty = value;
					this.SendPropertyChanged("Qty");
					this.OnQtyChanged();
				}
			}
		}
		
		[Association(Name="WorkOrderCategory_WorkOrderCategoryCup", Storage="_WorkOrderCategory", ThisKey="Company,SalesOrderNo,WorkOrderNo,ProductCategory", OtherKey="Company,SalesOrderNo,WorkOrderNo,ProductCategory", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public WorkOrderCategory WorkOrderCategory
		{
			get
			{
				return this._WorkOrderCategory.Entity;
			}
			set
			{
				WorkOrderCategory previousValue = this._WorkOrderCategory.Entity;
				if (((previousValue != value) 
							|| (this._WorkOrderCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WorkOrderCategory.Entity = null;
						previousValue.WorkOrderCategoryCups.Remove(this);
					}
					this._WorkOrderCategory.Entity = value;
					if ((value != null))
					{
						value.WorkOrderCategoryCups.Add(this);
						this._Company = value.Company;
						this._SalesOrderNo = value.SalesOrderNo;
						this._WorkOrderNo = value.WorkOrderNo;
						this._ProductCategory = value.ProductCategory;
					}
					else
					{
						this._Company = default(string);
						this._SalesOrderNo = default(string);
						this._WorkOrderNo = default(string);
						this._ProductCategory = default(string);
					}
					this.SendPropertyChanged("WorkOrderCategory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._WorkOrderCategory = default(EntityRef<WorkOrderCategory>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[Table(Name="dbo.WorkOrderCategoryLabeling")]
	[DataContract()]
	public partial class WorkOrderCategoryLabeling : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Company;
		
		private string _SalesOrderNo;
		
		private string _WorkOrderNo;
		
		private string _ProductCategory;
		
		private int _ID;
		
		private string _LabelDescEN;
		
		private string _LabelDescCH;
		
		private string _LabelDescTH;
		
		private EntityRef<WorkOrderCategory> _WorkOrderCategory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnSalesOrderNoChanging(string value);
    partial void OnSalesOrderNoChanged();
    partial void OnWorkOrderNoChanging(string value);
    partial void OnWorkOrderNoChanged();
    partial void OnProductCategoryChanging(string value);
    partial void OnProductCategoryChanged();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnLabelDescENChanging(string value);
    partial void OnLabelDescENChanged();
    partial void OnLabelDescCHChanging(string value);
    partial void OnLabelDescCHChanged();
    partial void OnLabelDescTHChanging(string value);
    partial void OnLabelDescTHChanged();
    #endregion
		
		public WorkOrderCategoryLabeling()
		{
			this.Initialize();
		}
		
		[Column(Storage="_Company", DbType="VarChar(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=1)]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					if (this._WorkOrderCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[Column(Storage="_SalesOrderNo", DbType="VarChar(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=2)]
		public string SalesOrderNo
		{
			get
			{
				return this._SalesOrderNo;
			}
			set
			{
				if ((this._SalesOrderNo != value))
				{
					if (this._WorkOrderCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSalesOrderNoChanging(value);
					this.SendPropertyChanging();
					this._SalesOrderNo = value;
					this.SendPropertyChanged("SalesOrderNo");
					this.OnSalesOrderNoChanged();
				}
			}
		}
		
		[Column(Storage="_WorkOrderNo", DbType="VarChar(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=3)]
		public string WorkOrderNo
		{
			get
			{
				return this._WorkOrderNo;
			}
			set
			{
				if ((this._WorkOrderNo != value))
				{
					if (this._WorkOrderCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkOrderNoChanging(value);
					this.SendPropertyChanging();
					this._WorkOrderNo = value;
					this.SendPropertyChanged("WorkOrderNo");
					this.OnWorkOrderNoChanged();
				}
			}
		}
		
		[Column(Storage="_ProductCategory", DbType="VarChar(4) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=4)]
		public string ProductCategory
		{
			get
			{
				return this._ProductCategory;
			}
			set
			{
				if ((this._ProductCategory != value))
				{
					if (this._WorkOrderCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductCategoryChanging(value);
					this.SendPropertyChanging();
					this._ProductCategory = value;
					this.SendPropertyChanged("ProductCategory");
					this.OnProductCategoryChanged();
				}
			}
		}
		
		[Column(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[DataMember(Order=5)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_LabelDescEN", DbType="NVarChar(4000)")]
		[DataMember(Order=6)]
		public string LabelDescEN
		{
			get
			{
				return this._LabelDescEN;
			}
			set
			{
				if ((this._LabelDescEN != value))
				{
					this.OnLabelDescENChanging(value);
					this.SendPropertyChanging();
					this._LabelDescEN = value;
					this.SendPropertyChanged("LabelDescEN");
					this.OnLabelDescENChanged();
				}
			}
		}
		
		[Column(Storage="_LabelDescCH", DbType="NVarChar(4000)")]
		[DataMember(Order=7)]
		public string LabelDescCH
		{
			get
			{
				return this._LabelDescCH;
			}
			set
			{
				if ((this._LabelDescCH != value))
				{
					this.OnLabelDescCHChanging(value);
					this.SendPropertyChanging();
					this._LabelDescCH = value;
					this.SendPropertyChanged("LabelDescCH");
					this.OnLabelDescCHChanged();
				}
			}
		}
		
		[Column(Storage="_LabelDescTH", DbType="NVarChar(4000)")]
		[DataMember(Order=8)]
		public string LabelDescTH
		{
			get
			{
				return this._LabelDescTH;
			}
			set
			{
				if ((this._LabelDescTH != value))
				{
					this.OnLabelDescTHChanging(value);
					this.SendPropertyChanging();
					this._LabelDescTH = value;
					this.SendPropertyChanged("LabelDescTH");
					this.OnLabelDescTHChanged();
				}
			}
		}
		
		[Association(Name="WorkOrderCategory_WorkOrderCategoryLabeling", Storage="_WorkOrderCategory", ThisKey="Company,SalesOrderNo,WorkOrderNo,ProductCategory", OtherKey="Company,SalesOrderNo,WorkOrderNo,ProductCategory", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public WorkOrderCategory WorkOrderCategory
		{
			get
			{
				return this._WorkOrderCategory.Entity;
			}
			set
			{
				WorkOrderCategory previousValue = this._WorkOrderCategory.Entity;
				if (((previousValue != value) 
							|| (this._WorkOrderCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WorkOrderCategory.Entity = null;
						previousValue.WorkOrderCategoryLabelings.Remove(this);
					}
					this._WorkOrderCategory.Entity = value;
					if ((value != null))
					{
						value.WorkOrderCategoryLabelings.Add(this);
						this._Company = value.Company;
						this._SalesOrderNo = value.SalesOrderNo;
						this._WorkOrderNo = value.WorkOrderNo;
						this._ProductCategory = value.ProductCategory;
					}
					else
					{
						this._Company = default(string);
						this._SalesOrderNo = default(string);
						this._WorkOrderNo = default(string);
						this._ProductCategory = default(string);
					}
					this.SendPropertyChanged("WorkOrderCategory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._WorkOrderCategory = default(EntityRef<WorkOrderCategory>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[Table(Name="dbo.WorkOrderCategoryPacking")]
	[DataContract()]
	public partial class WorkOrderCategoryPacking : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Company;
		
		private string _SalesOrderNo;
		
		private string _WorkOrderNo;
		
		private string _ProductCategory;
		
		private int _ID;
		
		private string _PackDescEN;
		
		private string _PackDescCH;
		
		private string _PackDescTH;
		
		private EntityRef<WorkOrderCategory> _WorkOrderCategory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnSalesOrderNoChanging(string value);
    partial void OnSalesOrderNoChanged();
    partial void OnWorkOrderNoChanging(string value);
    partial void OnWorkOrderNoChanged();
    partial void OnProductCategoryChanging(string value);
    partial void OnProductCategoryChanged();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPackDescENChanging(string value);
    partial void OnPackDescENChanged();
    partial void OnPackDescCHChanging(string value);
    partial void OnPackDescCHChanged();
    partial void OnPackDescTHChanging(string value);
    partial void OnPackDescTHChanged();
    #endregion
		
		public WorkOrderCategoryPacking()
		{
			this.Initialize();
		}
		
		[Column(Storage="_Company", DbType="VarChar(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=1)]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					if (this._WorkOrderCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[Column(Storage="_SalesOrderNo", DbType="VarChar(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=2)]
		public string SalesOrderNo
		{
			get
			{
				return this._SalesOrderNo;
			}
			set
			{
				if ((this._SalesOrderNo != value))
				{
					if (this._WorkOrderCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSalesOrderNoChanging(value);
					this.SendPropertyChanging();
					this._SalesOrderNo = value;
					this.SendPropertyChanged("SalesOrderNo");
					this.OnSalesOrderNoChanged();
				}
			}
		}
		
		[Column(Storage="_WorkOrderNo", DbType="VarChar(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=3)]
		public string WorkOrderNo
		{
			get
			{
				return this._WorkOrderNo;
			}
			set
			{
				if ((this._WorkOrderNo != value))
				{
					if (this._WorkOrderCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkOrderNoChanging(value);
					this.SendPropertyChanging();
					this._WorkOrderNo = value;
					this.SendPropertyChanged("WorkOrderNo");
					this.OnWorkOrderNoChanged();
				}
			}
		}
		
		[Column(Storage="_ProductCategory", DbType="VarChar(4) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=4)]
		public string ProductCategory
		{
			get
			{
				return this._ProductCategory;
			}
			set
			{
				if ((this._ProductCategory != value))
				{
					if (this._WorkOrderCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductCategoryChanging(value);
					this.SendPropertyChanging();
					this._ProductCategory = value;
					this.SendPropertyChanged("ProductCategory");
					this.OnProductCategoryChanged();
				}
			}
		}
		
		[Column(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[DataMember(Order=5)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_PackDescEN", DbType="NVarChar(4000)")]
		[DataMember(Order=6)]
		public string PackDescEN
		{
			get
			{
				return this._PackDescEN;
			}
			set
			{
				if ((this._PackDescEN != value))
				{
					this.OnPackDescENChanging(value);
					this.SendPropertyChanging();
					this._PackDescEN = value;
					this.SendPropertyChanged("PackDescEN");
					this.OnPackDescENChanged();
				}
			}
		}
		
		[Column(Storage="_PackDescCH", DbType="NVarChar(4000)")]
		[DataMember(Order=7)]
		public string PackDescCH
		{
			get
			{
				return this._PackDescCH;
			}
			set
			{
				if ((this._PackDescCH != value))
				{
					this.OnPackDescCHChanging(value);
					this.SendPropertyChanging();
					this._PackDescCH = value;
					this.SendPropertyChanged("PackDescCH");
					this.OnPackDescCHChanged();
				}
			}
		}
		
		[Column(Storage="_PackDescTH", DbType="NVarChar(4000)")]
		[DataMember(Order=8)]
		public string PackDescTH
		{
			get
			{
				return this._PackDescTH;
			}
			set
			{
				if ((this._PackDescTH != value))
				{
					this.OnPackDescTHChanging(value);
					this.SendPropertyChanging();
					this._PackDescTH = value;
					this.SendPropertyChanged("PackDescTH");
					this.OnPackDescTHChanged();
				}
			}
		}
		
		[Association(Name="WorkOrderCategory_WorkOrderCategoryPacking", Storage="_WorkOrderCategory", ThisKey="Company,SalesOrderNo,WorkOrderNo,ProductCategory", OtherKey="Company,SalesOrderNo,WorkOrderNo,ProductCategory", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public WorkOrderCategory WorkOrderCategory
		{
			get
			{
				return this._WorkOrderCategory.Entity;
			}
			set
			{
				WorkOrderCategory previousValue = this._WorkOrderCategory.Entity;
				if (((previousValue != value) 
							|| (this._WorkOrderCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WorkOrderCategory.Entity = null;
						previousValue.WorkOrderCategoryPackings.Remove(this);
					}
					this._WorkOrderCategory.Entity = value;
					if ((value != null))
					{
						value.WorkOrderCategoryPackings.Add(this);
						this._Company = value.Company;
						this._SalesOrderNo = value.SalesOrderNo;
						this._WorkOrderNo = value.WorkOrderNo;
						this._ProductCategory = value.ProductCategory;
					}
					else
					{
						this._Company = default(string);
						this._SalesOrderNo = default(string);
						this._WorkOrderNo = default(string);
						this._ProductCategory = default(string);
					}
					this.SendPropertyChanged("WorkOrderCategory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._WorkOrderCategory = default(EntityRef<WorkOrderCategory>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[Table(Name="dbo.WOChooseFW")]
	[DataContract()]
	public partial class WOChooseFW : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Company;
		
		private string _SalesOrderNo;
		
		private string _WorkOrderNo;
		
		private int _Seq;
		
		private System.Nullable<System.DateTime> _FirstStation;
		
		private System.Nullable<System.DateTime> _FactoryWork;
		
		private System.Nullable<System.DateTime> _LineWork;
		
		private System.Nullable<bool> _Chosen;
		
		private string _ChosenPerson;
		
		private System.Nullable<System.DateTime> _ChosenDate;
		
		private string _AgreedFWPerson;
		
		private System.Nullable<System.DateTime> _AgreedFWDate;
		
		private EntityRef<WorkOrder> _WorkOrder;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnSalesOrderNoChanging(string value);
    partial void OnSalesOrderNoChanged();
    partial void OnWorkOrderNoChanging(string value);
    partial void OnWorkOrderNoChanged();
    partial void OnSeqChanging(int value);
    partial void OnSeqChanged();
    partial void OnFirstStationChanging(System.Nullable<System.DateTime> value);
    partial void OnFirstStationChanged();
    partial void OnFactoryWorkChanging(System.Nullable<System.DateTime> value);
    partial void OnFactoryWorkChanged();
    partial void OnLineWorkChanging(System.Nullable<System.DateTime> value);
    partial void OnLineWorkChanged();
    partial void OnChosenChanging(System.Nullable<bool> value);
    partial void OnChosenChanged();
    partial void OnChosenPersonChanging(string value);
    partial void OnChosenPersonChanged();
    partial void OnChosenDateChanging(System.Nullable<System.DateTime> value);
    partial void OnChosenDateChanged();
    partial void OnAgreedFWPersonChanging(string value);
    partial void OnAgreedFWPersonChanged();
    partial void OnAgreedFWDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAgreedFWDateChanged();
    #endregion
		
		public WOChooseFW()
		{
			this.Initialize();
		}
		
		[Column(Storage="_Company", DbType="VarChar(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=1)]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					if (this._WorkOrder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[Column(Storage="_SalesOrderNo", DbType="VarChar(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=2)]
		public string SalesOrderNo
		{
			get
			{
				return this._SalesOrderNo;
			}
			set
			{
				if ((this._SalesOrderNo != value))
				{
					if (this._WorkOrder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSalesOrderNoChanging(value);
					this.SendPropertyChanging();
					this._SalesOrderNo = value;
					this.SendPropertyChanged("SalesOrderNo");
					this.OnSalesOrderNoChanged();
				}
			}
		}
		
		[Column(Storage="_WorkOrderNo", DbType="VarChar(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=3)]
		public string WorkOrderNo
		{
			get
			{
				return this._WorkOrderNo;
			}
			set
			{
				if ((this._WorkOrderNo != value))
				{
					if (this._WorkOrder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkOrderNoChanging(value);
					this.SendPropertyChanging();
					this._WorkOrderNo = value;
					this.SendPropertyChanged("WorkOrderNo");
					this.OnWorkOrderNoChanged();
				}
			}
		}
		
		[Column(Storage="_Seq", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[DataMember(Order=4)]
		public int Seq
		{
			get
			{
				return this._Seq;
			}
			set
			{
				if ((this._Seq != value))
				{
					this.OnSeqChanging(value);
					this.SendPropertyChanging();
					this._Seq = value;
					this.SendPropertyChanged("Seq");
					this.OnSeqChanged();
				}
			}
		}
		
		[Column(Storage="_FirstStation", DbType="DateTime")]
		[DataMember(Order=5)]
		public System.Nullable<System.DateTime> FirstStation
		{
			get
			{
				return this._FirstStation;
			}
			set
			{
				if ((this._FirstStation != value))
				{
					this.OnFirstStationChanging(value);
					this.SendPropertyChanging();
					this._FirstStation = value;
					this.SendPropertyChanged("FirstStation");
					this.OnFirstStationChanged();
				}
			}
		}
		
		[Column(Storage="_FactoryWork", DbType="DateTime")]
		[DataMember(Order=6)]
		public System.Nullable<System.DateTime> FactoryWork
		{
			get
			{
				return this._FactoryWork;
			}
			set
			{
				if ((this._FactoryWork != value))
				{
					this.OnFactoryWorkChanging(value);
					this.SendPropertyChanging();
					this._FactoryWork = value;
					this.SendPropertyChanged("FactoryWork");
					this.OnFactoryWorkChanged();
				}
			}
		}
		
		[Column(Storage="_LineWork", DbType="DateTime")]
		[DataMember(Order=7)]
		public System.Nullable<System.DateTime> LineWork
		{
			get
			{
				return this._LineWork;
			}
			set
			{
				if ((this._LineWork != value))
				{
					this.OnLineWorkChanging(value);
					this.SendPropertyChanging();
					this._LineWork = value;
					this.SendPropertyChanged("LineWork");
					this.OnLineWorkChanged();
				}
			}
		}
		
		[Column(Storage="_Chosen", DbType="Bit")]
		[DataMember(Order=8)]
		public System.Nullable<bool> Chosen
		{
			get
			{
				return this._Chosen;
			}
			set
			{
				if ((this._Chosen != value))
				{
					this.OnChosenChanging(value);
					this.SendPropertyChanging();
					this._Chosen = value;
					this.SendPropertyChanged("Chosen");
					this.OnChosenChanged();
				}
			}
		}
		
		[Column(Storage="_ChosenPerson", DbType="NVarChar(20)")]
		[DataMember(Order=9)]
		public string ChosenPerson
		{
			get
			{
				return this._ChosenPerson;
			}
			set
			{
				if ((this._ChosenPerson != value))
				{
					this.OnChosenPersonChanging(value);
					this.SendPropertyChanging();
					this._ChosenPerson = value;
					this.SendPropertyChanged("ChosenPerson");
					this.OnChosenPersonChanged();
				}
			}
		}
		
		[Column(Storage="_ChosenDate", DbType="DateTime")]
		[DataMember(Order=10)]
		public System.Nullable<System.DateTime> ChosenDate
		{
			get
			{
				return this._ChosenDate;
			}
			set
			{
				if ((this._ChosenDate != value))
				{
					this.OnChosenDateChanging(value);
					this.SendPropertyChanging();
					this._ChosenDate = value;
					this.SendPropertyChanged("ChosenDate");
					this.OnChosenDateChanged();
				}
			}
		}
		
		[Column(Storage="_AgreedFWPerson", DbType="NVarChar(20)")]
		[DataMember(Order=11)]
		public string AgreedFWPerson
		{
			get
			{
				return this._AgreedFWPerson;
			}
			set
			{
				if ((this._AgreedFWPerson != value))
				{
					this.OnAgreedFWPersonChanging(value);
					this.SendPropertyChanging();
					this._AgreedFWPerson = value;
					this.SendPropertyChanged("AgreedFWPerson");
					this.OnAgreedFWPersonChanged();
				}
			}
		}
		
		[Column(Storage="_AgreedFWDate", DbType="DateTime")]
		[DataMember(Order=12)]
		public System.Nullable<System.DateTime> AgreedFWDate
		{
			get
			{
				return this._AgreedFWDate;
			}
			set
			{
				if ((this._AgreedFWDate != value))
				{
					this.OnAgreedFWDateChanging(value);
					this.SendPropertyChanging();
					this._AgreedFWDate = value;
					this.SendPropertyChanged("AgreedFWDate");
					this.OnAgreedFWDateChanged();
				}
			}
		}
		
		[Association(Name="WorkOrder_WOChooseFW", Storage="_WorkOrder", ThisKey="Company,SalesOrderNo,WorkOrderNo", OtherKey="Company,SalesOrderNo,WorkOrderNo", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public WorkOrder WorkOrder
		{
			get
			{
				return this._WorkOrder.Entity;
			}
			set
			{
				WorkOrder previousValue = this._WorkOrder.Entity;
				if (((previousValue != value) 
							|| (this._WorkOrder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WorkOrder.Entity = null;
						previousValue.WOChooseFWs.Remove(this);
					}
					this._WorkOrder.Entity = value;
					if ((value != null))
					{
						value.WOChooseFWs.Add(this);
						this._Company = value.Company;
						this._SalesOrderNo = value.SalesOrderNo;
						this._WorkOrderNo = value.WorkOrderNo;
					}
					else
					{
						this._Company = default(string);
						this._SalesOrderNo = default(string);
						this._WorkOrderNo = default(string);
					}
					this.SendPropertyChanged("WorkOrder");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._WorkOrder = default(EntityRef<WorkOrder>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[Table(Name="dbo.RoundWorkOrderII")]
	[DataContract()]
	public partial class RoundWorkOrderII : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Company;
		
		private string _SalesOrderNo;
		
		private string _WorkOrderNo;
		
		private string _ColorCode;
		
		private int _RoundNo;
		
		private string _SubFactory;
		
		private System.Nullable<int> _SalesOrderLine;
		
		private System.Nullable<int> _RoundTotal;
		
		private System.Nullable<System.DateTime> _RWOCreateDate;
		
		private System.Nullable<System.DateTime> _WOReviseDate;
		
		private System.Nullable<System.DateTime> _AmendDate;
		
		private System.Nullable<int> _Version;
		
		private System.Nullable<System.DateTime> _FactoryWorkStartDate;
		
		private System.Nullable<System.DateTime> _LineWorkStartDate;
		
		private System.Nullable<System.DateTime> _T3Date;
		
		private System.Nullable<System.DateTime> _AjustT3Date;
		
		private string _AjustT3DateConfirm;
		
		private System.Nullable<System.DateTime> _RoundWorkOrderExFtyDate;
		
		private System.Nullable<System.DateTime> _FCLExFtyDate;
		
		private System.Nullable<System.DateTime> _LCLExFtyDate;
		
		private System.Nullable<System.DateTime> _FirstStationStartDate;
		
		private System.Nullable<System.DateTime> _FirstQNStartDate;
		
		private System.Nullable<System.DateTime> _DeliveryDate;
		
		private System.Nullable<System.DateTime> _LastQNExFtyDate;
		
		private System.Nullable<int> _CycleTime;
		
		private string _OAConfirm;
		
		private System.Nullable<System.DateTime> _OAConfirmDate;
		
		private string _HeaderConfirm;
		
		private System.Nullable<System.DateTime> _HeaderConfirmDate;
		
		private string _TopConfirm;
		
		private System.Nullable<System.DateTime> _TopConfirmDate;
		
		private string _PPCConfirm;
		
		private System.Nullable<System.DateTime> _PPCConfirmDate;
		
		private System.Nullable<int> _DirectOperation;
		
		private System.Nullable<int> _RWOVersion;
		
		private System.Nullable<int> _ActionStatus;
		
		private System.Nullable<System.DateTime> _ActionStatusDate;
		
		private System.Nullable<System.DateTime> _FirstStation;
		
		private EntitySet<RoundWorkOrderDetailII> _RoundWorkOrderDetailIIs;
		
		private EntityRef<RoundWorkOrder> _RoundWorkOrder;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnSalesOrderNoChanging(string value);
    partial void OnSalesOrderNoChanged();
    partial void OnWorkOrderNoChanging(string value);
    partial void OnWorkOrderNoChanged();
    partial void OnColorCodeChanging(string value);
    partial void OnColorCodeChanged();
    partial void OnRoundNoChanging(int value);
    partial void OnRoundNoChanged();
    partial void OnSubFactoryChanging(string value);
    partial void OnSubFactoryChanged();
    partial void OnSalesOrderLineChanging(System.Nullable<int> value);
    partial void OnSalesOrderLineChanged();
    partial void OnRoundTotalChanging(System.Nullable<int> value);
    partial void OnRoundTotalChanged();
    partial void OnRWOCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRWOCreateDateChanged();
    partial void OnWOReviseDateChanging(System.Nullable<System.DateTime> value);
    partial void OnWOReviseDateChanged();
    partial void OnAmendDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAmendDateChanged();
    partial void OnVersionChanging(System.Nullable<int> value);
    partial void OnVersionChanged();
    partial void OnFactoryWorkStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFactoryWorkStartDateChanged();
    partial void OnLineWorkStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLineWorkStartDateChanged();
    partial void OnT3DateChanging(System.Nullable<System.DateTime> value);
    partial void OnT3DateChanged();
    partial void OnAjustT3DateChanging(System.Nullable<System.DateTime> value);
    partial void OnAjustT3DateChanged();
    partial void OnAjustT3DateConfirmChanging(string value);
    partial void OnAjustT3DateConfirmChanged();
    partial void OnRoundWorkOrderExFtyDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRoundWorkOrderExFtyDateChanged();
    partial void OnFCLExFtyDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFCLExFtyDateChanged();
    partial void OnLCLExFtyDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLCLExFtyDateChanged();
    partial void OnFirstStationStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFirstStationStartDateChanged();
    partial void OnFirstQNStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFirstQNStartDateChanged();
    partial void OnDeliveryDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeliveryDateChanged();
    partial void OnLastQNExFtyDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastQNExFtyDateChanged();
    partial void OnCycleTimeChanging(System.Nullable<int> value);
    partial void OnCycleTimeChanged();
    partial void OnOAConfirmChanging(string value);
    partial void OnOAConfirmChanged();
    partial void OnOAConfirmDateChanging(System.Nullable<System.DateTime> value);
    partial void OnOAConfirmDateChanged();
    partial void OnHeaderConfirmChanging(string value);
    partial void OnHeaderConfirmChanged();
    partial void OnHeaderConfirmDateChanging(System.Nullable<System.DateTime> value);
    partial void OnHeaderConfirmDateChanged();
    partial void OnTopConfirmChanging(string value);
    partial void OnTopConfirmChanged();
    partial void OnTopConfirmDateChanging(System.Nullable<System.DateTime> value);
    partial void OnTopConfirmDateChanged();
    partial void OnPPCConfirmChanging(string value);
    partial void OnPPCConfirmChanged();
    partial void OnPPCConfirmDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPPCConfirmDateChanged();
    partial void OnDirectOperationChanging(System.Nullable<int> value);
    partial void OnDirectOperationChanged();
    partial void OnRWOVersionChanging(System.Nullable<int> value);
    partial void OnRWOVersionChanged();
    partial void OnActionStatusChanging(System.Nullable<int> value);
    partial void OnActionStatusChanged();
    partial void OnActionStatusDateChanging(System.Nullable<System.DateTime> value);
    partial void OnActionStatusDateChanged();
    partial void OnFirstStationChanging(System.Nullable<System.DateTime> value);
    partial void OnFirstStationChanged();
    #endregion
		
		public RoundWorkOrderII()
		{
			this.Initialize();
		}
		
		[Column(Storage="_Company", DbType="VarChar(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=1)]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					if (this._RoundWorkOrder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[Column(Storage="_SalesOrderNo", DbType="VarChar(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=2)]
		public string SalesOrderNo
		{
			get
			{
				return this._SalesOrderNo;
			}
			set
			{
				if ((this._SalesOrderNo != value))
				{
					if (this._RoundWorkOrder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSalesOrderNoChanging(value);
					this.SendPropertyChanging();
					this._SalesOrderNo = value;
					this.SendPropertyChanged("SalesOrderNo");
					this.OnSalesOrderNoChanged();
				}
			}
		}
		
		[Column(Storage="_WorkOrderNo", DbType="VarChar(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=3)]
		public string WorkOrderNo
		{
			get
			{
				return this._WorkOrderNo;
			}
			set
			{
				if ((this._WorkOrderNo != value))
				{
					if (this._RoundWorkOrder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkOrderNoChanging(value);
					this.SendPropertyChanging();
					this._WorkOrderNo = value;
					this.SendPropertyChanged("WorkOrderNo");
					this.OnWorkOrderNoChanged();
				}
			}
		}
		
		[Column(Storage="_ColorCode", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=4)]
		public string ColorCode
		{
			get
			{
				return this._ColorCode;
			}
			set
			{
				if ((this._ColorCode != value))
				{
					if (this._RoundWorkOrder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnColorCodeChanging(value);
					this.SendPropertyChanging();
					this._ColorCode = value;
					this.SendPropertyChanged("ColorCode");
					this.OnColorCodeChanged();
				}
			}
		}
		
		[Column(Storage="_RoundNo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[DataMember(Order=5)]
		public int RoundNo
		{
			get
			{
				return this._RoundNo;
			}
			set
			{
				if ((this._RoundNo != value))
				{
					if (this._RoundWorkOrder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoundNoChanging(value);
					this.SendPropertyChanging();
					this._RoundNo = value;
					this.SendPropertyChanged("RoundNo");
					this.OnRoundNoChanged();
				}
			}
		}
		
		[Column(Storage="_SubFactory", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=6)]
		public string SubFactory
		{
			get
			{
				return this._SubFactory;
			}
			set
			{
				if ((this._SubFactory != value))
				{
					this.OnSubFactoryChanging(value);
					this.SendPropertyChanging();
					this._SubFactory = value;
					this.SendPropertyChanged("SubFactory");
					this.OnSubFactoryChanged();
				}
			}
		}
		
		[Column(Storage="_SalesOrderLine", DbType="Int")]
		[DataMember(Order=7)]
		public System.Nullable<int> SalesOrderLine
		{
			get
			{
				return this._SalesOrderLine;
			}
			set
			{
				if ((this._SalesOrderLine != value))
				{
					this.OnSalesOrderLineChanging(value);
					this.SendPropertyChanging();
					this._SalesOrderLine = value;
					this.SendPropertyChanged("SalesOrderLine");
					this.OnSalesOrderLineChanged();
				}
			}
		}
		
		[Column(Storage="_RoundTotal", DbType="Int")]
		[DataMember(Order=8)]
		public System.Nullable<int> RoundTotal
		{
			get
			{
				return this._RoundTotal;
			}
			set
			{
				if ((this._RoundTotal != value))
				{
					this.OnRoundTotalChanging(value);
					this.SendPropertyChanging();
					this._RoundTotal = value;
					this.SendPropertyChanged("RoundTotal");
					this.OnRoundTotalChanged();
				}
			}
		}
		
		[Column(Storage="_RWOCreateDate", DbType="DateTime")]
		[DataMember(Order=9)]
		public System.Nullable<System.DateTime> RWOCreateDate
		{
			get
			{
				return this._RWOCreateDate;
			}
			set
			{
				if ((this._RWOCreateDate != value))
				{
					this.OnRWOCreateDateChanging(value);
					this.SendPropertyChanging();
					this._RWOCreateDate = value;
					this.SendPropertyChanged("RWOCreateDate");
					this.OnRWOCreateDateChanged();
				}
			}
		}
		
		[Column(Storage="_WOReviseDate", DbType="DateTime")]
		[DataMember(Order=10)]
		public System.Nullable<System.DateTime> WOReviseDate
		{
			get
			{
				return this._WOReviseDate;
			}
			set
			{
				if ((this._WOReviseDate != value))
				{
					this.OnWOReviseDateChanging(value);
					this.SendPropertyChanging();
					this._WOReviseDate = value;
					this.SendPropertyChanged("WOReviseDate");
					this.OnWOReviseDateChanged();
				}
			}
		}
		
		[Column(Storage="_AmendDate", DbType="DateTime")]
		[DataMember(Order=11)]
		public System.Nullable<System.DateTime> AmendDate
		{
			get
			{
				return this._AmendDate;
			}
			set
			{
				if ((this._AmendDate != value))
				{
					this.OnAmendDateChanging(value);
					this.SendPropertyChanging();
					this._AmendDate = value;
					this.SendPropertyChanged("AmendDate");
					this.OnAmendDateChanged();
				}
			}
		}
		
		[Column(Storage="_Version", DbType="Int")]
		[DataMember(Order=12)]
		public System.Nullable<int> Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[Column(Storage="_FactoryWorkStartDate", DbType="DateTime")]
		[DataMember(Order=13)]
		public System.Nullable<System.DateTime> FactoryWorkStartDate
		{
			get
			{
				return this._FactoryWorkStartDate;
			}
			set
			{
				if ((this._FactoryWorkStartDate != value))
				{
					this.OnFactoryWorkStartDateChanging(value);
					this.SendPropertyChanging();
					this._FactoryWorkStartDate = value;
					this.SendPropertyChanged("FactoryWorkStartDate");
					this.OnFactoryWorkStartDateChanged();
				}
			}
		}
		
		[Column(Storage="_LineWorkStartDate", DbType="DateTime")]
		[DataMember(Order=14)]
		public System.Nullable<System.DateTime> LineWorkStartDate
		{
			get
			{
				return this._LineWorkStartDate;
			}
			set
			{
				if ((this._LineWorkStartDate != value))
				{
					this.OnLineWorkStartDateChanging(value);
					this.SendPropertyChanging();
					this._LineWorkStartDate = value;
					this.SendPropertyChanged("LineWorkStartDate");
					this.OnLineWorkStartDateChanged();
				}
			}
		}
		
		[Column(Storage="_T3Date", DbType="DateTime")]
		[DataMember(Order=15)]
		public System.Nullable<System.DateTime> T3Date
		{
			get
			{
				return this._T3Date;
			}
			set
			{
				if ((this._T3Date != value))
				{
					this.OnT3DateChanging(value);
					this.SendPropertyChanging();
					this._T3Date = value;
					this.SendPropertyChanged("T3Date");
					this.OnT3DateChanged();
				}
			}
		}
		
		[Column(Storage="_AjustT3Date", DbType="DateTime")]
		[DataMember(Order=16)]
		public System.Nullable<System.DateTime> AjustT3Date
		{
			get
			{
				return this._AjustT3Date;
			}
			set
			{
				if ((this._AjustT3Date != value))
				{
					this.OnAjustT3DateChanging(value);
					this.SendPropertyChanging();
					this._AjustT3Date = value;
					this.SendPropertyChanged("AjustT3Date");
					this.OnAjustT3DateChanged();
				}
			}
		}
		
		[Column(Storage="_AjustT3DateConfirm", DbType="NVarChar(40)")]
		[DataMember(Order=17)]
		public string AjustT3DateConfirm
		{
			get
			{
				return this._AjustT3DateConfirm;
			}
			set
			{
				if ((this._AjustT3DateConfirm != value))
				{
					this.OnAjustT3DateConfirmChanging(value);
					this.SendPropertyChanging();
					this._AjustT3DateConfirm = value;
					this.SendPropertyChanged("AjustT3DateConfirm");
					this.OnAjustT3DateConfirmChanged();
				}
			}
		}
		
		[Column(Storage="_RoundWorkOrderExFtyDate", DbType="DateTime")]
		[DataMember(Order=18)]
		public System.Nullable<System.DateTime> RoundWorkOrderExFtyDate
		{
			get
			{
				return this._RoundWorkOrderExFtyDate;
			}
			set
			{
				if ((this._RoundWorkOrderExFtyDate != value))
				{
					this.OnRoundWorkOrderExFtyDateChanging(value);
					this.SendPropertyChanging();
					this._RoundWorkOrderExFtyDate = value;
					this.SendPropertyChanged("RoundWorkOrderExFtyDate");
					this.OnRoundWorkOrderExFtyDateChanged();
				}
			}
		}
		
		[Column(Storage="_FCLExFtyDate", DbType="DateTime")]
		[DataMember(Order=19)]
		public System.Nullable<System.DateTime> FCLExFtyDate
		{
			get
			{
				return this._FCLExFtyDate;
			}
			set
			{
				if ((this._FCLExFtyDate != value))
				{
					this.OnFCLExFtyDateChanging(value);
					this.SendPropertyChanging();
					this._FCLExFtyDate = value;
					this.SendPropertyChanged("FCLExFtyDate");
					this.OnFCLExFtyDateChanged();
				}
			}
		}
		
		[Column(Storage="_LCLExFtyDate", DbType="DateTime")]
		[DataMember(Order=20)]
		public System.Nullable<System.DateTime> LCLExFtyDate
		{
			get
			{
				return this._LCLExFtyDate;
			}
			set
			{
				if ((this._LCLExFtyDate != value))
				{
					this.OnLCLExFtyDateChanging(value);
					this.SendPropertyChanging();
					this._LCLExFtyDate = value;
					this.SendPropertyChanged("LCLExFtyDate");
					this.OnLCLExFtyDateChanged();
				}
			}
		}
		
		[Column(Storage="_FirstStationStartDate", DbType="DateTime")]
		[DataMember(Order=21)]
		public System.Nullable<System.DateTime> FirstStationStartDate
		{
			get
			{
				return this._FirstStationStartDate;
			}
			set
			{
				if ((this._FirstStationStartDate != value))
				{
					this.OnFirstStationStartDateChanging(value);
					this.SendPropertyChanging();
					this._FirstStationStartDate = value;
					this.SendPropertyChanged("FirstStationStartDate");
					this.OnFirstStationStartDateChanged();
				}
			}
		}
		
		[Column(Storage="_FirstQNStartDate", DbType="DateTime")]
		[DataMember(Order=22)]
		public System.Nullable<System.DateTime> FirstQNStartDate
		{
			get
			{
				return this._FirstQNStartDate;
			}
			set
			{
				if ((this._FirstQNStartDate != value))
				{
					this.OnFirstQNStartDateChanging(value);
					this.SendPropertyChanging();
					this._FirstQNStartDate = value;
					this.SendPropertyChanged("FirstQNStartDate");
					this.OnFirstQNStartDateChanged();
				}
			}
		}
		
		[Column(Storage="_DeliveryDate", DbType="DateTime")]
		[DataMember(Order=23)]
		public System.Nullable<System.DateTime> DeliveryDate
		{
			get
			{
				return this._DeliveryDate;
			}
			set
			{
				if ((this._DeliveryDate != value))
				{
					this.OnDeliveryDateChanging(value);
					this.SendPropertyChanging();
					this._DeliveryDate = value;
					this.SendPropertyChanged("DeliveryDate");
					this.OnDeliveryDateChanged();
				}
			}
		}
		
		[Column(Storage="_LastQNExFtyDate", DbType="DateTime")]
		[DataMember(Order=24)]
		public System.Nullable<System.DateTime> LastQNExFtyDate
		{
			get
			{
				return this._LastQNExFtyDate;
			}
			set
			{
				if ((this._LastQNExFtyDate != value))
				{
					this.OnLastQNExFtyDateChanging(value);
					this.SendPropertyChanging();
					this._LastQNExFtyDate = value;
					this.SendPropertyChanged("LastQNExFtyDate");
					this.OnLastQNExFtyDateChanged();
				}
			}
		}
		
		[Column(Storage="_CycleTime", DbType="Int")]
		[DataMember(Order=25)]
		public System.Nullable<int> CycleTime
		{
			get
			{
				return this._CycleTime;
			}
			set
			{
				if ((this._CycleTime != value))
				{
					this.OnCycleTimeChanging(value);
					this.SendPropertyChanging();
					this._CycleTime = value;
					this.SendPropertyChanged("CycleTime");
					this.OnCycleTimeChanged();
				}
			}
		}
		
		[Column(Storage="_OAConfirm", DbType="NVarChar(40)")]
		[DataMember(Order=26)]
		public string OAConfirm
		{
			get
			{
				return this._OAConfirm;
			}
			set
			{
				if ((this._OAConfirm != value))
				{
					this.OnOAConfirmChanging(value);
					this.SendPropertyChanging();
					this._OAConfirm = value;
					this.SendPropertyChanged("OAConfirm");
					this.OnOAConfirmChanged();
				}
			}
		}
		
		[Column(Storage="_OAConfirmDate", DbType="DateTime")]
		[DataMember(Order=27)]
		public System.Nullable<System.DateTime> OAConfirmDate
		{
			get
			{
				return this._OAConfirmDate;
			}
			set
			{
				if ((this._OAConfirmDate != value))
				{
					this.OnOAConfirmDateChanging(value);
					this.SendPropertyChanging();
					this._OAConfirmDate = value;
					this.SendPropertyChanged("OAConfirmDate");
					this.OnOAConfirmDateChanged();
				}
			}
		}
		
		[Column(Storage="_HeaderConfirm", DbType="NVarChar(40)")]
		[DataMember(Order=28)]
		public string HeaderConfirm
		{
			get
			{
				return this._HeaderConfirm;
			}
			set
			{
				if ((this._HeaderConfirm != value))
				{
					this.OnHeaderConfirmChanging(value);
					this.SendPropertyChanging();
					this._HeaderConfirm = value;
					this.SendPropertyChanged("HeaderConfirm");
					this.OnHeaderConfirmChanged();
				}
			}
		}
		
		[Column(Storage="_HeaderConfirmDate", DbType="DateTime")]
		[DataMember(Order=29)]
		public System.Nullable<System.DateTime> HeaderConfirmDate
		{
			get
			{
				return this._HeaderConfirmDate;
			}
			set
			{
				if ((this._HeaderConfirmDate != value))
				{
					this.OnHeaderConfirmDateChanging(value);
					this.SendPropertyChanging();
					this._HeaderConfirmDate = value;
					this.SendPropertyChanged("HeaderConfirmDate");
					this.OnHeaderConfirmDateChanged();
				}
			}
		}
		
		[Column(Storage="_TopConfirm", DbType="NVarChar(40)")]
		[DataMember(Order=30)]
		public string TopConfirm
		{
			get
			{
				return this._TopConfirm;
			}
			set
			{
				if ((this._TopConfirm != value))
				{
					this.OnTopConfirmChanging(value);
					this.SendPropertyChanging();
					this._TopConfirm = value;
					this.SendPropertyChanged("TopConfirm");
					this.OnTopConfirmChanged();
				}
			}
		}
		
		[Column(Storage="_TopConfirmDate", DbType="DateTime")]
		[DataMember(Order=31)]
		public System.Nullable<System.DateTime> TopConfirmDate
		{
			get
			{
				return this._TopConfirmDate;
			}
			set
			{
				if ((this._TopConfirmDate != value))
				{
					this.OnTopConfirmDateChanging(value);
					this.SendPropertyChanging();
					this._TopConfirmDate = value;
					this.SendPropertyChanged("TopConfirmDate");
					this.OnTopConfirmDateChanged();
				}
			}
		}
		
		[Column(Storage="_PPCConfirm", DbType="NVarChar(40)")]
		[DataMember(Order=32)]
		public string PPCConfirm
		{
			get
			{
				return this._PPCConfirm;
			}
			set
			{
				if ((this._PPCConfirm != value))
				{
					this.OnPPCConfirmChanging(value);
					this.SendPropertyChanging();
					this._PPCConfirm = value;
					this.SendPropertyChanged("PPCConfirm");
					this.OnPPCConfirmChanged();
				}
			}
		}
		
		[Column(Storage="_PPCConfirmDate", DbType="DateTime")]
		[DataMember(Order=33)]
		public System.Nullable<System.DateTime> PPCConfirmDate
		{
			get
			{
				return this._PPCConfirmDate;
			}
			set
			{
				if ((this._PPCConfirmDate != value))
				{
					this.OnPPCConfirmDateChanging(value);
					this.SendPropertyChanging();
					this._PPCConfirmDate = value;
					this.SendPropertyChanged("PPCConfirmDate");
					this.OnPPCConfirmDateChanged();
				}
			}
		}
		
		[Column(Storage="_DirectOperation", DbType="Int")]
		[DataMember(Order=34)]
		public System.Nullable<int> DirectOperation
		{
			get
			{
				return this._DirectOperation;
			}
			set
			{
				if ((this._DirectOperation != value))
				{
					this.OnDirectOperationChanging(value);
					this.SendPropertyChanging();
					this._DirectOperation = value;
					this.SendPropertyChanged("DirectOperation");
					this.OnDirectOperationChanged();
				}
			}
		}
		
		[Column(Storage="_RWOVersion", DbType="Int")]
		[DataMember(Order=35)]
		public System.Nullable<int> RWOVersion
		{
			get
			{
				return this._RWOVersion;
			}
			set
			{
				if ((this._RWOVersion != value))
				{
					this.OnRWOVersionChanging(value);
					this.SendPropertyChanging();
					this._RWOVersion = value;
					this.SendPropertyChanged("RWOVersion");
					this.OnRWOVersionChanged();
				}
			}
		}
		
		[Column(Storage="_ActionStatus", DbType="Int")]
		[DataMember(Order=36)]
		public System.Nullable<int> ActionStatus
		{
			get
			{
				return this._ActionStatus;
			}
			set
			{
				if ((this._ActionStatus != value))
				{
					this.OnActionStatusChanging(value);
					this.SendPropertyChanging();
					this._ActionStatus = value;
					this.SendPropertyChanged("ActionStatus");
					this.OnActionStatusChanged();
				}
			}
		}
		
		[Column(Storage="_ActionStatusDate", DbType="DateTime")]
		[DataMember(Order=37)]
		public System.Nullable<System.DateTime> ActionStatusDate
		{
			get
			{
				return this._ActionStatusDate;
			}
			set
			{
				if ((this._ActionStatusDate != value))
				{
					this.OnActionStatusDateChanging(value);
					this.SendPropertyChanging();
					this._ActionStatusDate = value;
					this.SendPropertyChanged("ActionStatusDate");
					this.OnActionStatusDateChanged();
				}
			}
		}
		
		[Column(Storage="_FirstStation", DbType="DateTime")]
		[DataMember(Order=38)]
		public System.Nullable<System.DateTime> FirstStation
		{
			get
			{
				return this._FirstStation;
			}
			set
			{
				if ((this._FirstStation != value))
				{
					this.OnFirstStationChanging(value);
					this.SendPropertyChanging();
					this._FirstStation = value;
					this.SendPropertyChanged("FirstStation");
					this.OnFirstStationChanged();
				}
			}
		}
		
		[Association(Name="RoundWorkOrderII_RoundWorkOrderDetailII", Storage="_RoundWorkOrderDetailIIs", ThisKey="Company,SalesOrderNo,WorkOrderNo,ColorCode,RoundNo,SubFactory", OtherKey="Company,SalesOrderNo,WorkOrderNo,ColorCode,RoundNo,SubFactory")]
		[DataMember(Order=39, EmitDefaultValue=false)]
		public EntitySet<RoundWorkOrderDetailII> RoundWorkOrderDetailIIs
		{
			get
			{
				if ((this.serializing 
							&& (this._RoundWorkOrderDetailIIs.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._RoundWorkOrderDetailIIs;
			}
			set
			{
				this._RoundWorkOrderDetailIIs.Assign(value);
			}
		}
		
		[Association(Name="RoundWorkOrder_RoundWorkOrderII", Storage="_RoundWorkOrder", ThisKey="Company,SalesOrderNo,WorkOrderNo,ColorCode,RoundNo", OtherKey="Company,SalesOrderNo,WorkOrderNo,ColorCode,RoundNo", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public RoundWorkOrder RoundWorkOrder
		{
			get
			{
				return this._RoundWorkOrder.Entity;
			}
			set
			{
				RoundWorkOrder previousValue = this._RoundWorkOrder.Entity;
				if (((previousValue != value) 
							|| (this._RoundWorkOrder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RoundWorkOrder.Entity = null;
						previousValue.RoundWorkOrderIIs.Remove(this);
					}
					this._RoundWorkOrder.Entity = value;
					if ((value != null))
					{
						value.RoundWorkOrderIIs.Add(this);
						this._Company = value.Company;
						this._SalesOrderNo = value.SalesOrderNo;
						this._WorkOrderNo = value.WorkOrderNo;
						this._ColorCode = value.ColorCode;
						this._RoundNo = value.RoundNo;
					}
					else
					{
						this._Company = default(string);
						this._SalesOrderNo = default(string);
						this._WorkOrderNo = default(string);
						this._ColorCode = default(string);
						this._RoundNo = default(int);
					}
					this.SendPropertyChanged("RoundWorkOrder");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RoundWorkOrderDetailIIs(RoundWorkOrderDetailII entity)
		{
			this.SendPropertyChanging();
			entity.RoundWorkOrderII = this;
		}
		
		private void detach_RoundWorkOrderDetailIIs(RoundWorkOrderDetailII entity)
		{
			this.SendPropertyChanging();
			entity.RoundWorkOrderII = null;
		}
		
		private void Initialize()
		{
			this._RoundWorkOrderDetailIIs = new EntitySet<RoundWorkOrderDetailII>(new Action<RoundWorkOrderDetailII>(this.attach_RoundWorkOrderDetailIIs), new Action<RoundWorkOrderDetailII>(this.detach_RoundWorkOrderDetailIIs));
			this._RoundWorkOrder = default(EntityRef<RoundWorkOrder>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[OnSerializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[OnSerialized()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[Table(Name="dbo.WorkOrderColor")]
	[DataContract()]
	public partial class WorkOrderColor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Company;
		
		private string _SalesOrderNo;
		
		private string _WorkOrderNo;
		
		private string _ColorCode;
		
		private System.Nullable<int> _SalesOrderLine;
		
		private System.Nullable<int> _RoundNo;
		
		private System.Nullable<int> _RoundTotal;
		
		private System.Nullable<System.DateTime> _FWOpt2;
		
		private System.Nullable<System.DateTime> _FWOpt4;
		
		private EntitySet<WorkOrderSKU> _WorkOrderSKUs;
		
		private EntitySet<RoundWorkOrder> _RoundWorkOrders;
		
		private EntityRef<WorkOrder> _WorkOrder;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnSalesOrderNoChanging(string value);
    partial void OnSalesOrderNoChanged();
    partial void OnWorkOrderNoChanging(string value);
    partial void OnWorkOrderNoChanged();
    partial void OnColorCodeChanging(string value);
    partial void OnColorCodeChanged();
    partial void OnSalesOrderLineChanging(System.Nullable<int> value);
    partial void OnSalesOrderLineChanged();
    partial void OnRoundNoChanging(System.Nullable<int> value);
    partial void OnRoundNoChanged();
    partial void OnRoundTotalChanging(System.Nullable<int> value);
    partial void OnRoundTotalChanged();
    partial void OnFWOpt2Changing(System.Nullable<System.DateTime> value);
    partial void OnFWOpt2Changed();
    partial void OnFWOpt4Changing(System.Nullable<System.DateTime> value);
    partial void OnFWOpt4Changed();
    #endregion
		
		public WorkOrderColor()
		{
			this.Initialize();
		}
		
		[Column(Storage="_Company", DbType="VarChar(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=1)]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					if (this._WorkOrder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[Column(Storage="_SalesOrderNo", DbType="VarChar(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=2)]
		public string SalesOrderNo
		{
			get
			{
				return this._SalesOrderNo;
			}
			set
			{
				if ((this._SalesOrderNo != value))
				{
					if (this._WorkOrder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSalesOrderNoChanging(value);
					this.SendPropertyChanging();
					this._SalesOrderNo = value;
					this.SendPropertyChanged("SalesOrderNo");
					this.OnSalesOrderNoChanged();
				}
			}
		}
		
		[Column(Storage="_WorkOrderNo", DbType="VarChar(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=3)]
		public string WorkOrderNo
		{
			get
			{
				return this._WorkOrderNo;
			}
			set
			{
				if ((this._WorkOrderNo != value))
				{
					if (this._WorkOrder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkOrderNoChanging(value);
					this.SendPropertyChanging();
					this._WorkOrderNo = value;
					this.SendPropertyChanged("WorkOrderNo");
					this.OnWorkOrderNoChanged();
				}
			}
		}
		
		[Column(Storage="_ColorCode", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=4)]
		public string ColorCode
		{
			get
			{
				return this._ColorCode;
			}
			set
			{
				if ((this._ColorCode != value))
				{
					this.OnColorCodeChanging(value);
					this.SendPropertyChanging();
					this._ColorCode = value;
					this.SendPropertyChanged("ColorCode");
					this.OnColorCodeChanged();
				}
			}
		}
		
		[Column(Storage="_SalesOrderLine", DbType="Int")]
		[DataMember(Order=5)]
		public System.Nullable<int> SalesOrderLine
		{
			get
			{
				return this._SalesOrderLine;
			}
			set
			{
				if ((this._SalesOrderLine != value))
				{
					this.OnSalesOrderLineChanging(value);
					this.SendPropertyChanging();
					this._SalesOrderLine = value;
					this.SendPropertyChanged("SalesOrderLine");
					this.OnSalesOrderLineChanged();
				}
			}
		}
		
		[Column(Storage="_RoundNo", DbType="Int")]
		[DataMember(Order=6)]
		public System.Nullable<int> RoundNo
		{
			get
			{
				return this._RoundNo;
			}
			set
			{
				if ((this._RoundNo != value))
				{
					this.OnRoundNoChanging(value);
					this.SendPropertyChanging();
					this._RoundNo = value;
					this.SendPropertyChanged("RoundNo");
					this.OnRoundNoChanged();
				}
			}
		}
		
		[Column(Storage="_RoundTotal", DbType="Int")]
		[DataMember(Order=7)]
		public System.Nullable<int> RoundTotal
		{
			get
			{
				return this._RoundTotal;
			}
			set
			{
				if ((this._RoundTotal != value))
				{
					this.OnRoundTotalChanging(value);
					this.SendPropertyChanging();
					this._RoundTotal = value;
					this.SendPropertyChanged("RoundTotal");
					this.OnRoundTotalChanged();
				}
			}
		}
		
		[Column(Storage="_FWOpt2", DbType="DateTime")]
		[DataMember(Order=8)]
		public System.Nullable<System.DateTime> FWOpt2
		{
			get
			{
				return this._FWOpt2;
			}
			set
			{
				if ((this._FWOpt2 != value))
				{
					this.OnFWOpt2Changing(value);
					this.SendPropertyChanging();
					this._FWOpt2 = value;
					this.SendPropertyChanged("FWOpt2");
					this.OnFWOpt2Changed();
				}
			}
		}
		
		[Column(Storage="_FWOpt4", DbType="DateTime")]
		[DataMember(Order=9)]
		public System.Nullable<System.DateTime> FWOpt4
		{
			get
			{
				return this._FWOpt4;
			}
			set
			{
				if ((this._FWOpt4 != value))
				{
					this.OnFWOpt4Changing(value);
					this.SendPropertyChanging();
					this._FWOpt4 = value;
					this.SendPropertyChanged("FWOpt4");
					this.OnFWOpt4Changed();
				}
			}
		}
		
		[Association(Name="WorkOrderColor_WorkOrderSKU", Storage="_WorkOrderSKUs", ThisKey="Company,SalesOrderNo,WorkOrderNo,ColorCode", OtherKey="Company,SalesOrderNo,WorkOrderNo,ColorCode")]
		[DataMember(Order=10, EmitDefaultValue=false)]
		public EntitySet<WorkOrderSKU> WorkOrderSKUs
		{
			get
			{
				if ((this.serializing 
							&& (this._WorkOrderSKUs.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._WorkOrderSKUs;
			}
			set
			{
				this._WorkOrderSKUs.Assign(value);
			}
		}
		
		[Association(Name="WorkOrderColor_RoundWorkOrder", Storage="_RoundWorkOrders", ThisKey="Company,SalesOrderNo,WorkOrderNo,ColorCode", OtherKey="Company,SalesOrderNo,WorkOrderNo,ColorCode")]
		[DataMember(Order=11, EmitDefaultValue=false)]
		public EntitySet<RoundWorkOrder> RoundWorkOrders
		{
			get
			{
				if ((this.serializing 
							&& (this._RoundWorkOrders.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._RoundWorkOrders;
			}
			set
			{
				this._RoundWorkOrders.Assign(value);
			}
		}
		
		[Association(Name="WorkOrder_WorkOrderColor", Storage="_WorkOrder", ThisKey="Company,SalesOrderNo,WorkOrderNo", OtherKey="Company,SalesOrderNo,WorkOrderNo", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public WorkOrder WorkOrder
		{
			get
			{
				return this._WorkOrder.Entity;
			}
			set
			{
				WorkOrder previousValue = this._WorkOrder.Entity;
				if (((previousValue != value) 
							|| (this._WorkOrder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WorkOrder.Entity = null;
						previousValue.WorkOrderColors.Remove(this);
					}
					this._WorkOrder.Entity = value;
					if ((value != null))
					{
						value.WorkOrderColors.Add(this);
						this._Company = value.Company;
						this._SalesOrderNo = value.SalesOrderNo;
						this._WorkOrderNo = value.WorkOrderNo;
					}
					else
					{
						this._Company = default(string);
						this._SalesOrderNo = default(string);
						this._WorkOrderNo = default(string);
					}
					this.SendPropertyChanged("WorkOrder");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_WorkOrderSKUs(WorkOrderSKU entity)
		{
			this.SendPropertyChanging();
			entity.WorkOrderColor = this;
		}
		
		private void detach_WorkOrderSKUs(WorkOrderSKU entity)
		{
			this.SendPropertyChanging();
			entity.WorkOrderColor = null;
		}
		
		private void attach_RoundWorkOrders(RoundWorkOrder entity)
		{
			this.SendPropertyChanging();
			entity.WorkOrderColor = this;
		}
		
		private void detach_RoundWorkOrders(RoundWorkOrder entity)
		{
			this.SendPropertyChanging();
			entity.WorkOrderColor = null;
		}
		
		private void Initialize()
		{
			this._WorkOrderSKUs = new EntitySet<WorkOrderSKU>(new Action<WorkOrderSKU>(this.attach_WorkOrderSKUs), new Action<WorkOrderSKU>(this.detach_WorkOrderSKUs));
			this._RoundWorkOrders = new EntitySet<RoundWorkOrder>(new Action<RoundWorkOrder>(this.attach_RoundWorkOrders), new Action<RoundWorkOrder>(this.detach_RoundWorkOrders));
			this._WorkOrder = default(EntityRef<WorkOrder>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[OnSerializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[OnSerialized()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[Table(Name="dbo.View_RejectWorkFlow")]
	[DataContract()]
	public partial class View_RejectWorkFlow
	{
		
		private string _CustomerCode;
		
		private string _Customers;
		
		private string _Factory;
		
		private string _Item;
		
		private string _Users;
		
		private string _Team;
		
		private System.Nullable<int> _Next;
		
		private System.Nullable<int> _Current;
		
		private int _Phase;
		
		private string _UsersEmail;
		
		private System.Nullable<int> _ParentCurrent;
		
		private string _SendTo;
		
		private string _CC;
		
		private bool _IsRWO;
		
		public View_RejectWorkFlow()
		{
		}
		
		[Column(Storage="_CustomerCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[DataMember(Order=1)]
		public string CustomerCode
		{
			get
			{
				return this._CustomerCode;
			}
			set
			{
				if ((this._CustomerCode != value))
				{
					this._CustomerCode = value;
				}
			}
		}
		
		[Column(Storage="_Customers", DbType="NVarChar(500)")]
		[DataMember(Order=2)]
		public string Customers
		{
			get
			{
				return this._Customers;
			}
			set
			{
				if ((this._Customers != value))
				{
					this._Customers = value;
				}
			}
		}
		
		[Column(Storage="_Factory", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		[DataMember(Order=3)]
		public string Factory
		{
			get
			{
				return this._Factory;
			}
			set
			{
				if ((this._Factory != value))
				{
					this._Factory = value;
				}
			}
		}
		
		[Column(Storage="_Item", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		[DataMember(Order=4)]
		public string Item
		{
			get
			{
				return this._Item;
			}
			set
			{
				if ((this._Item != value))
				{
					this._Item = value;
				}
			}
		}
		
		[Column(Storage="_Users", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		[DataMember(Order=5)]
		public string Users
		{
			get
			{
				return this._Users;
			}
			set
			{
				if ((this._Users != value))
				{
					this._Users = value;
				}
			}
		}
		
		[Column(Storage="_Team", DbType="NVarChar(4)")]
		[DataMember(Order=6)]
		public string Team
		{
			get
			{
				return this._Team;
			}
			set
			{
				if ((this._Team != value))
				{
					this._Team = value;
				}
			}
		}
		
		[Column(Storage="_Next", DbType="Int")]
		[DataMember(Order=7)]
		public System.Nullable<int> Next
		{
			get
			{
				return this._Next;
			}
			set
			{
				if ((this._Next != value))
				{
					this._Next = value;
				}
			}
		}
		
		[Column(Name="[Current]", Storage="_Current", DbType="Int")]
		[DataMember(Order=8)]
		public System.Nullable<int> Current
		{
			get
			{
				return this._Current;
			}
			set
			{
				if ((this._Current != value))
				{
					this._Current = value;
				}
			}
		}
		
		[Column(Storage="_Phase", DbType="Int NOT NULL")]
		[DataMember(Order=9)]
		public int Phase
		{
			get
			{
				return this._Phase;
			}
			set
			{
				if ((this._Phase != value))
				{
					this._Phase = value;
				}
			}
		}
		
		[Column(Storage="_UsersEmail", DbType="VarChar(1000)")]
		[DataMember(Order=10)]
		public string UsersEmail
		{
			get
			{
				return this._UsersEmail;
			}
			set
			{
				if ((this._UsersEmail != value))
				{
					this._UsersEmail = value;
				}
			}
		}
		
		[Column(Storage="_ParentCurrent", DbType="Int")]
		[DataMember(Order=11)]
		public System.Nullable<int> ParentCurrent
		{
			get
			{
				return this._ParentCurrent;
			}
			set
			{
				if ((this._ParentCurrent != value))
				{
					this._ParentCurrent = value;
				}
			}
		}
		
		[Column(Storage="_SendTo", DbType="VarChar(1000)")]
		[DataMember(Order=12)]
		public string SendTo
		{
			get
			{
				return this._SendTo;
			}
			set
			{
				if ((this._SendTo != value))
				{
					this._SendTo = value;
				}
			}
		}
		
		[Column(Storage="_CC", DbType="VarChar(1000)")]
		[DataMember(Order=13)]
		public string CC
		{
			get
			{
				return this._CC;
			}
			set
			{
				if ((this._CC != value))
				{
					this._CC = value;
				}
			}
		}
		
		[Column(Storage="_IsRWO", DbType="Bit NOT NULL")]
		[DataMember(Order=14)]
		public bool IsRWO
		{
			get
			{
				return this._IsRWO;
			}
			set
			{
				if ((this._IsRWO != value))
				{
					this._IsRWO = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.RWOChooseFW")]
	[DataContract()]
	public partial class RWOChooseFW : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Company;
		
		private string _SalesOrderNo;
		
		private string _WorkOrderNo;
		
		private string _ColorCode;
		
		private int _RoundNo;
		
		private int _Seq;
		
		private System.Nullable<System.DateTime> _FirstStation;
		
		private System.Nullable<System.DateTime> _FactoryWork;
		
		private System.Nullable<System.DateTime> _LineWork;
		
		private System.Nullable<bool> _Chosen;
		
		private string _ChosenPerson;
		
		private System.Nullable<System.DateTime> _ChosenDate;
		
		private string _AgreedFWPerson;
		
		private System.Nullable<System.DateTime> _AgreedFWDate;
		
		private EntityRef<RoundWorkOrder> _RoundWorkOrder;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnSalesOrderNoChanging(string value);
    partial void OnSalesOrderNoChanged();
    partial void OnWorkOrderNoChanging(string value);
    partial void OnWorkOrderNoChanged();
    partial void OnColorCodeChanging(string value);
    partial void OnColorCodeChanged();
    partial void OnRoundNoChanging(int value);
    partial void OnRoundNoChanged();
    partial void OnSeqChanging(int value);
    partial void OnSeqChanged();
    partial void OnFirstStationChanging(System.Nullable<System.DateTime> value);
    partial void OnFirstStationChanged();
    partial void OnFactoryWorkChanging(System.Nullable<System.DateTime> value);
    partial void OnFactoryWorkChanged();
    partial void OnLineWorkChanging(System.Nullable<System.DateTime> value);
    partial void OnLineWorkChanged();
    partial void OnChosenChanging(System.Nullable<bool> value);
    partial void OnChosenChanged();
    partial void OnChosenPersonChanging(string value);
    partial void OnChosenPersonChanged();
    partial void OnChosenDateChanging(System.Nullable<System.DateTime> value);
    partial void OnChosenDateChanged();
    partial void OnAgreedFWPersonChanging(string value);
    partial void OnAgreedFWPersonChanged();
    partial void OnAgreedFWDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAgreedFWDateChanged();
    #endregion
		
		public RWOChooseFW()
		{
			this.Initialize();
		}
		
		[Column(Storage="_Company", DbType="VarChar(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=1)]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					if (this._RoundWorkOrder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[Column(Storage="_SalesOrderNo", DbType="VarChar(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=2)]
		public string SalesOrderNo
		{
			get
			{
				return this._SalesOrderNo;
			}
			set
			{
				if ((this._SalesOrderNo != value))
				{
					if (this._RoundWorkOrder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSalesOrderNoChanging(value);
					this.SendPropertyChanging();
					this._SalesOrderNo = value;
					this.SendPropertyChanged("SalesOrderNo");
					this.OnSalesOrderNoChanged();
				}
			}
		}
		
		[Column(Storage="_WorkOrderNo", DbType="VarChar(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=3)]
		public string WorkOrderNo
		{
			get
			{
				return this._WorkOrderNo;
			}
			set
			{
				if ((this._WorkOrderNo != value))
				{
					if (this._RoundWorkOrder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkOrderNoChanging(value);
					this.SendPropertyChanging();
					this._WorkOrderNo = value;
					this.SendPropertyChanged("WorkOrderNo");
					this.OnWorkOrderNoChanged();
				}
			}
		}
		
		[Column(Storage="_ColorCode", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=4)]
		public string ColorCode
		{
			get
			{
				return this._ColorCode;
			}
			set
			{
				if ((this._ColorCode != value))
				{
					if (this._RoundWorkOrder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnColorCodeChanging(value);
					this.SendPropertyChanging();
					this._ColorCode = value;
					this.SendPropertyChanged("ColorCode");
					this.OnColorCodeChanged();
				}
			}
		}
		
		[Column(Storage="_RoundNo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[DataMember(Order=5)]
		public int RoundNo
		{
			get
			{
				return this._RoundNo;
			}
			set
			{
				if ((this._RoundNo != value))
				{
					if (this._RoundWorkOrder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoundNoChanging(value);
					this.SendPropertyChanging();
					this._RoundNo = value;
					this.SendPropertyChanged("RoundNo");
					this.OnRoundNoChanged();
				}
			}
		}
		
		[Column(Storage="_Seq", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[DataMember(Order=6)]
		public int Seq
		{
			get
			{
				return this._Seq;
			}
			set
			{
				if ((this._Seq != value))
				{
					this.OnSeqChanging(value);
					this.SendPropertyChanging();
					this._Seq = value;
					this.SendPropertyChanged("Seq");
					this.OnSeqChanged();
				}
			}
		}
		
		[Column(Storage="_FirstStation", DbType="DateTime")]
		[DataMember(Order=7)]
		public System.Nullable<System.DateTime> FirstStation
		{
			get
			{
				return this._FirstStation;
			}
			set
			{
				if ((this._FirstStation != value))
				{
					this.OnFirstStationChanging(value);
					this.SendPropertyChanging();
					this._FirstStation = value;
					this.SendPropertyChanged("FirstStation");
					this.OnFirstStationChanged();
				}
			}
		}
		
		[Column(Storage="_FactoryWork", DbType="DateTime")]
		[DataMember(Order=8)]
		public System.Nullable<System.DateTime> FactoryWork
		{
			get
			{
				return this._FactoryWork;
			}
			set
			{
				if ((this._FactoryWork != value))
				{
					this.OnFactoryWorkChanging(value);
					this.SendPropertyChanging();
					this._FactoryWork = value;
					this.SendPropertyChanged("FactoryWork");
					this.OnFactoryWorkChanged();
				}
			}
		}
		
		[Column(Storage="_LineWork", DbType="DateTime")]
		[DataMember(Order=9)]
		public System.Nullable<System.DateTime> LineWork
		{
			get
			{
				return this._LineWork;
			}
			set
			{
				if ((this._LineWork != value))
				{
					this.OnLineWorkChanging(value);
					this.SendPropertyChanging();
					this._LineWork = value;
					this.SendPropertyChanged("LineWork");
					this.OnLineWorkChanged();
				}
			}
		}
		
		[Column(Storage="_Chosen", DbType="Bit")]
		[DataMember(Order=10)]
		public System.Nullable<bool> Chosen
		{
			get
			{
				return this._Chosen;
			}
			set
			{
				if ((this._Chosen != value))
				{
					this.OnChosenChanging(value);
					this.SendPropertyChanging();
					this._Chosen = value;
					this.SendPropertyChanged("Chosen");
					this.OnChosenChanged();
				}
			}
		}
		
		[Column(Storage="_ChosenPerson", DbType="NVarChar(20)")]
		[DataMember(Order=11)]
		public string ChosenPerson
		{
			get
			{
				return this._ChosenPerson;
			}
			set
			{
				if ((this._ChosenPerson != value))
				{
					this.OnChosenPersonChanging(value);
					this.SendPropertyChanging();
					this._ChosenPerson = value;
					this.SendPropertyChanged("ChosenPerson");
					this.OnChosenPersonChanged();
				}
			}
		}
		
		[Column(Storage="_ChosenDate", DbType="DateTime")]
		[DataMember(Order=12)]
		public System.Nullable<System.DateTime> ChosenDate
		{
			get
			{
				return this._ChosenDate;
			}
			set
			{
				if ((this._ChosenDate != value))
				{
					this.OnChosenDateChanging(value);
					this.SendPropertyChanging();
					this._ChosenDate = value;
					this.SendPropertyChanged("ChosenDate");
					this.OnChosenDateChanged();
				}
			}
		}
		
		[Column(Storage="_AgreedFWPerson", DbType="NVarChar(20)")]
		[DataMember(Order=13)]
		public string AgreedFWPerson
		{
			get
			{
				return this._AgreedFWPerson;
			}
			set
			{
				if ((this._AgreedFWPerson != value))
				{
					this.OnAgreedFWPersonChanging(value);
					this.SendPropertyChanging();
					this._AgreedFWPerson = value;
					this.SendPropertyChanged("AgreedFWPerson");
					this.OnAgreedFWPersonChanged();
				}
			}
		}
		
		[Column(Storage="_AgreedFWDate", DbType="DateTime")]
		[DataMember(Order=14)]
		public System.Nullable<System.DateTime> AgreedFWDate
		{
			get
			{
				return this._AgreedFWDate;
			}
			set
			{
				if ((this._AgreedFWDate != value))
				{
					this.OnAgreedFWDateChanging(value);
					this.SendPropertyChanging();
					this._AgreedFWDate = value;
					this.SendPropertyChanged("AgreedFWDate");
					this.OnAgreedFWDateChanged();
				}
			}
		}
		
		[Association(Name="RoundWorkOrder_RWOChooseFW", Storage="_RoundWorkOrder", ThisKey="Company,SalesOrderNo,WorkOrderNo,ColorCode,RoundNo", OtherKey="Company,SalesOrderNo,WorkOrderNo,ColorCode,RoundNo", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public RoundWorkOrder RoundWorkOrder
		{
			get
			{
				return this._RoundWorkOrder.Entity;
			}
			set
			{
				RoundWorkOrder previousValue = this._RoundWorkOrder.Entity;
				if (((previousValue != value) 
							|| (this._RoundWorkOrder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RoundWorkOrder.Entity = null;
						previousValue.RWOChooseFWs.Remove(this);
					}
					this._RoundWorkOrder.Entity = value;
					if ((value != null))
					{
						value.RWOChooseFWs.Add(this);
						this._Company = value.Company;
						this._SalesOrderNo = value.SalesOrderNo;
						this._WorkOrderNo = value.WorkOrderNo;
						this._ColorCode = value.ColorCode;
						this._RoundNo = value.RoundNo;
					}
					else
					{
						this._Company = default(string);
						this._SalesOrderNo = default(string);
						this._WorkOrderNo = default(string);
						this._ColorCode = default(string);
						this._RoundNo = default(int);
					}
					this.SendPropertyChanged("RoundWorkOrder");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._RoundWorkOrder = default(EntityRef<RoundWorkOrder>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[Table(Name="dbo.View_RWOIIConfirm")]
	[DataContract()]
	public partial class View_RWOIIConfirm
	{
		
		private string _Company;
		
		private string _ProjectNo;
		
		private string _SalesOrderNo;
		
		private string _CustomerCode;
		
		private string _Customer;
		
		private string _Factory;
		
		private string _SubFactory;
		
		private string _WorkOrderNo;
		
		private string _StyleNo;
		
		private string _Category;
		
		private string _CustomerStyleNo;
		
		private int _SalesOrderLine;
		
		private System.Nullable<System.DateTime> _RWOCreateDate;
		
		private System.Nullable<System.DateTime> _AmendDate;
		
		private System.Nullable<System.DateTime> _WOReviseDate;
		
		private System.Nullable<int> _Version;
		
		private System.Nullable<System.DateTime> _FactoryWorkStartDate;
		
		private System.Nullable<int> _CurrRWOVersion;
		
		private System.Nullable<int> _RWOVersion;
		
		private System.Nullable<System.DateTime> _LineWorkStartDate;
		
		private System.Nullable<System.DateTime> _T3Date;
		
		private System.Nullable<System.DateTime> _AjustT3Date;
		
		private string _AjustT3DateConfirm;
		
		private System.Nullable<System.DateTime> _FCLExFtyDate;
		
		private System.Nullable<System.DateTime> _LCLExFtyDate;
		
		private string _OAConfirm;
		
		private System.Nullable<System.DateTime> _OAConfirmDate;
		
		private string _HeaderConfirm;
		
		private System.Nullable<System.DateTime> _HeaderConfirmDate;
		
		private string _TopConfirm;
		
		private System.Nullable<bool> _AppliedToALL;
		
		private System.Nullable<bool> _AppliedToPhaseII;
		
		private System.Nullable<System.DateTime> _TopConfirmDate;
		
		private string _PPCConfirm;
		
		private System.Nullable<System.DateTime> _PPCConfirmDate;
		
		private string _Users;
		
		private System.Nullable<int> _Next;
		
		private System.Nullable<int> _Current;
		
		private string _ColorCode;
		
		private int _RoundNo;
		
		private System.Nullable<int> _RoundTotal;
		
		private System.Nullable<int> _ActionStatus;
		
		private System.Nullable<int> _WCRoundNo;
		
		private System.Nullable<int> _WCRoundTotal;
		
		private System.Nullable<int> _BulkQty;
		
		private System.Nullable<int> _SampleQty;
		
		public View_RWOIIConfirm()
		{
		}
		
		[Column(Storage="_Company", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		[DataMember(Order=1)]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this._Company = value;
				}
			}
		}
		
		[Column(Storage="_ProjectNo", DbType="NVarChar(50)")]
		[DataMember(Order=2)]
		public string ProjectNo
		{
			get
			{
				return this._ProjectNo;
			}
			set
			{
				if ((this._ProjectNo != value))
				{
					this._ProjectNo = value;
				}
			}
		}
		
		[Column(Storage="_SalesOrderNo", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		[DataMember(Order=3)]
		public string SalesOrderNo
		{
			get
			{
				return this._SalesOrderNo;
			}
			set
			{
				if ((this._SalesOrderNo != value))
				{
					this._SalesOrderNo = value;
				}
			}
		}
		
		[Column(Storage="_CustomerCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[DataMember(Order=4)]
		public string CustomerCode
		{
			get
			{
				return this._CustomerCode;
			}
			set
			{
				if ((this._CustomerCode != value))
				{
					this._CustomerCode = value;
				}
			}
		}
		
		[Column(Storage="_Customer", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[DataMember(Order=5)]
		public string Customer
		{
			get
			{
				return this._Customer;
			}
			set
			{
				if ((this._Customer != value))
				{
					this._Customer = value;
				}
			}
		}
		
		[Column(Storage="_Factory", DbType="NVarChar(50)")]
		[DataMember(Order=6)]
		public string Factory
		{
			get
			{
				return this._Factory;
			}
			set
			{
				if ((this._Factory != value))
				{
					this._Factory = value;
				}
			}
		}
		
		[Column(Storage="_SubFactory", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		[DataMember(Order=7)]
		public string SubFactory
		{
			get
			{
				return this._SubFactory;
			}
			set
			{
				if ((this._SubFactory != value))
				{
					this._SubFactory = value;
				}
			}
		}
		
		[Column(Storage="_WorkOrderNo", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		[DataMember(Order=8)]
		public string WorkOrderNo
		{
			get
			{
				return this._WorkOrderNo;
			}
			set
			{
				if ((this._WorkOrderNo != value))
				{
					this._WorkOrderNo = value;
				}
			}
		}
		
		[Column(Storage="_StyleNo", DbType="VarChar(9)")]
		[DataMember(Order=9)]
		public string StyleNo
		{
			get
			{
				return this._StyleNo;
			}
			set
			{
				if ((this._StyleNo != value))
				{
					this._StyleNo = value;
				}
			}
		}
		
		[Column(Storage="_Category", DbType="NVarChar(4)")]
		[DataMember(Order=10)]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this._Category = value;
				}
			}
		}
		
		[Column(Storage="_CustomerStyleNo", DbType="NVarChar(50)")]
		[DataMember(Order=11)]
		public string CustomerStyleNo
		{
			get
			{
				return this._CustomerStyleNo;
			}
			set
			{
				if ((this._CustomerStyleNo != value))
				{
					this._CustomerStyleNo = value;
				}
			}
		}
		
		[Column(Storage="_SalesOrderLine", DbType="Int NOT NULL")]
		[DataMember(Order=12)]
		public int SalesOrderLine
		{
			get
			{
				return this._SalesOrderLine;
			}
			set
			{
				if ((this._SalesOrderLine != value))
				{
					this._SalesOrderLine = value;
				}
			}
		}
		
		[Column(Storage="_RWOCreateDate", DbType="DateTime")]
		[DataMember(Order=13)]
		public System.Nullable<System.DateTime> RWOCreateDate
		{
			get
			{
				return this._RWOCreateDate;
			}
			set
			{
				if ((this._RWOCreateDate != value))
				{
					this._RWOCreateDate = value;
				}
			}
		}
		
		[Column(Storage="_AmendDate", DbType="DateTime")]
		[DataMember(Order=14)]
		public System.Nullable<System.DateTime> AmendDate
		{
			get
			{
				return this._AmendDate;
			}
			set
			{
				if ((this._AmendDate != value))
				{
					this._AmendDate = value;
				}
			}
		}
		
		[Column(Storage="_WOReviseDate", DbType="DateTime")]
		[DataMember(Order=15)]
		public System.Nullable<System.DateTime> WOReviseDate
		{
			get
			{
				return this._WOReviseDate;
			}
			set
			{
				if ((this._WOReviseDate != value))
				{
					this._WOReviseDate = value;
				}
			}
		}
		
		[Column(Storage="_Version", DbType="Int")]
		[DataMember(Order=16)]
		public System.Nullable<int> Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this._Version = value;
				}
			}
		}
		
		[Column(Storage="_FactoryWorkStartDate", DbType="DateTime")]
		[DataMember(Order=17)]
		public System.Nullable<System.DateTime> FactoryWorkStartDate
		{
			get
			{
				return this._FactoryWorkStartDate;
			}
			set
			{
				if ((this._FactoryWorkStartDate != value))
				{
					this._FactoryWorkStartDate = value;
				}
			}
		}
		
		[Column(Storage="_CurrRWOVersion", DbType="Int")]
		[DataMember(Order=18)]
		public System.Nullable<int> CurrRWOVersion
		{
			get
			{
				return this._CurrRWOVersion;
			}
			set
			{
				if ((this._CurrRWOVersion != value))
				{
					this._CurrRWOVersion = value;
				}
			}
		}
		
		[Column(Storage="_RWOVersion", DbType="Int")]
		[DataMember(Order=19)]
		public System.Nullable<int> RWOVersion
		{
			get
			{
				return this._RWOVersion;
			}
			set
			{
				if ((this._RWOVersion != value))
				{
					this._RWOVersion = value;
				}
			}
		}
		
		[Column(Storage="_LineWorkStartDate", DbType="DateTime")]
		[DataMember(Order=20)]
		public System.Nullable<System.DateTime> LineWorkStartDate
		{
			get
			{
				return this._LineWorkStartDate;
			}
			set
			{
				if ((this._LineWorkStartDate != value))
				{
					this._LineWorkStartDate = value;
				}
			}
		}
		
		[Column(Storage="_T3Date", DbType="DateTime")]
		[DataMember(Order=21)]
		public System.Nullable<System.DateTime> T3Date
		{
			get
			{
				return this._T3Date;
			}
			set
			{
				if ((this._T3Date != value))
				{
					this._T3Date = value;
				}
			}
		}
		
		[Column(Storage="_AjustT3Date", DbType="DateTime")]
		[DataMember(Order=22)]
		public System.Nullable<System.DateTime> AjustT3Date
		{
			get
			{
				return this._AjustT3Date;
			}
			set
			{
				if ((this._AjustT3Date != value))
				{
					this._AjustT3Date = value;
				}
			}
		}
		
		[Column(Storage="_AjustT3DateConfirm", DbType="NVarChar(40)")]
		[DataMember(Order=23)]
		public string AjustT3DateConfirm
		{
			get
			{
				return this._AjustT3DateConfirm;
			}
			set
			{
				if ((this._AjustT3DateConfirm != value))
				{
					this._AjustT3DateConfirm = value;
				}
			}
		}
		
		[Column(Storage="_FCLExFtyDate", DbType="DateTime")]
		[DataMember(Order=24)]
		public System.Nullable<System.DateTime> FCLExFtyDate
		{
			get
			{
				return this._FCLExFtyDate;
			}
			set
			{
				if ((this._FCLExFtyDate != value))
				{
					this._FCLExFtyDate = value;
				}
			}
		}
		
		[Column(Storage="_LCLExFtyDate", DbType="DateTime")]
		[DataMember(Order=25)]
		public System.Nullable<System.DateTime> LCLExFtyDate
		{
			get
			{
				return this._LCLExFtyDate;
			}
			set
			{
				if ((this._LCLExFtyDate != value))
				{
					this._LCLExFtyDate = value;
				}
			}
		}
		
		[Column(Storage="_OAConfirm", DbType="NVarChar(40)")]
		[DataMember(Order=26)]
		public string OAConfirm
		{
			get
			{
				return this._OAConfirm;
			}
			set
			{
				if ((this._OAConfirm != value))
				{
					this._OAConfirm = value;
				}
			}
		}
		
		[Column(Storage="_OAConfirmDate", DbType="DateTime")]
		[DataMember(Order=27)]
		public System.Nullable<System.DateTime> OAConfirmDate
		{
			get
			{
				return this._OAConfirmDate;
			}
			set
			{
				if ((this._OAConfirmDate != value))
				{
					this._OAConfirmDate = value;
				}
			}
		}
		
		[Column(Storage="_HeaderConfirm", DbType="NVarChar(40)")]
		[DataMember(Order=28)]
		public string HeaderConfirm
		{
			get
			{
				return this._HeaderConfirm;
			}
			set
			{
				if ((this._HeaderConfirm != value))
				{
					this._HeaderConfirm = value;
				}
			}
		}
		
		[Column(Storage="_HeaderConfirmDate", DbType="DateTime")]
		[DataMember(Order=29)]
		public System.Nullable<System.DateTime> HeaderConfirmDate
		{
			get
			{
				return this._HeaderConfirmDate;
			}
			set
			{
				if ((this._HeaderConfirmDate != value))
				{
					this._HeaderConfirmDate = value;
				}
			}
		}
		
		[Column(Storage="_TopConfirm", DbType="NVarChar(40)")]
		[DataMember(Order=30)]
		public string TopConfirm
		{
			get
			{
				return this._TopConfirm;
			}
			set
			{
				if ((this._TopConfirm != value))
				{
					this._TopConfirm = value;
				}
			}
		}
		
		[Column(Storage="_AppliedToALL", DbType="Bit")]
		[DataMember(Order=31)]
		public System.Nullable<bool> AppliedToALL
		{
			get
			{
				return this._AppliedToALL;
			}
			set
			{
				if ((this._AppliedToALL != value))
				{
					this._AppliedToALL = value;
				}
			}
		}
		
		[Column(Storage="_AppliedToPhaseII", DbType="Bit")]
		[DataMember(Order=32)]
		public System.Nullable<bool> AppliedToPhaseII
		{
			get
			{
				return this._AppliedToPhaseII;
			}
			set
			{
				if ((this._AppliedToPhaseII != value))
				{
					this._AppliedToPhaseII = value;
				}
			}
		}
		
		[Column(Storage="_TopConfirmDate", DbType="DateTime")]
		[DataMember(Order=33)]
		public System.Nullable<System.DateTime> TopConfirmDate
		{
			get
			{
				return this._TopConfirmDate;
			}
			set
			{
				if ((this._TopConfirmDate != value))
				{
					this._TopConfirmDate = value;
				}
			}
		}
		
		[Column(Storage="_PPCConfirm", DbType="NVarChar(40)")]
		[DataMember(Order=34)]
		public string PPCConfirm
		{
			get
			{
				return this._PPCConfirm;
			}
			set
			{
				if ((this._PPCConfirm != value))
				{
					this._PPCConfirm = value;
				}
			}
		}
		
		[Column(Storage="_PPCConfirmDate", DbType="DateTime")]
		[DataMember(Order=35)]
		public System.Nullable<System.DateTime> PPCConfirmDate
		{
			get
			{
				return this._PPCConfirmDate;
			}
			set
			{
				if ((this._PPCConfirmDate != value))
				{
					this._PPCConfirmDate = value;
				}
			}
		}
		
		[Column(Storage="_Users", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		[DataMember(Order=36)]
		public string Users
		{
			get
			{
				return this._Users;
			}
			set
			{
				if ((this._Users != value))
				{
					this._Users = value;
				}
			}
		}
		
		[Column(Storage="_Next", DbType="Int")]
		[DataMember(Order=37)]
		public System.Nullable<int> Next
		{
			get
			{
				return this._Next;
			}
			set
			{
				if ((this._Next != value))
				{
					this._Next = value;
				}
			}
		}
		
		[Column(Name="[Current]", Storage="_Current", DbType="Int")]
		[DataMember(Order=38)]
		public System.Nullable<int> Current
		{
			get
			{
				return this._Current;
			}
			set
			{
				if ((this._Current != value))
				{
					this._Current = value;
				}
			}
		}
		
		[Column(Storage="_ColorCode", DbType="VarChar(3) NOT NULL", CanBeNull=false)]
		[DataMember(Order=39)]
		public string ColorCode
		{
			get
			{
				return this._ColorCode;
			}
			set
			{
				if ((this._ColorCode != value))
				{
					this._ColorCode = value;
				}
			}
		}
		
		[Column(Storage="_RoundNo", DbType="Int NOT NULL")]
		[DataMember(Order=40)]
		public int RoundNo
		{
			get
			{
				return this._RoundNo;
			}
			set
			{
				if ((this._RoundNo != value))
				{
					this._RoundNo = value;
				}
			}
		}
		
		[Column(Storage="_RoundTotal", DbType="Int")]
		[DataMember(Order=41)]
		public System.Nullable<int> RoundTotal
		{
			get
			{
				return this._RoundTotal;
			}
			set
			{
				if ((this._RoundTotal != value))
				{
					this._RoundTotal = value;
				}
			}
		}
		
		[Column(Storage="_ActionStatus", DbType="Int")]
		[DataMember(Order=42)]
		public System.Nullable<int> ActionStatus
		{
			get
			{
				return this._ActionStatus;
			}
			set
			{
				if ((this._ActionStatus != value))
				{
					this._ActionStatus = value;
				}
			}
		}
		
		[Column(Storage="_WCRoundNo", DbType="Int")]
		[DataMember(Order=43)]
		public System.Nullable<int> WCRoundNo
		{
			get
			{
				return this._WCRoundNo;
			}
			set
			{
				if ((this._WCRoundNo != value))
				{
					this._WCRoundNo = value;
				}
			}
		}
		
		[Column(Storage="_WCRoundTotal", DbType="Int")]
		[DataMember(Order=44)]
		public System.Nullable<int> WCRoundTotal
		{
			get
			{
				return this._WCRoundTotal;
			}
			set
			{
				if ((this._WCRoundTotal != value))
				{
					this._WCRoundTotal = value;
				}
			}
		}
		
		[Column(Storage="_BulkQty", DbType="Int")]
		[DataMember(Order=45)]
		public System.Nullable<int> BulkQty
		{
			get
			{
				return this._BulkQty;
			}
			set
			{
				if ((this._BulkQty != value))
				{
					this._BulkQty = value;
				}
			}
		}
		
		[Column(Storage="_SampleQty", DbType="Int")]
		[DataMember(Order=46)]
		public System.Nullable<int> SampleQty
		{
			get
			{
				return this._SampleQty;
			}
			set
			{
				if ((this._SampleQty != value))
				{
					this._SampleQty = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.Project")]
	[DataContract()]
	public partial class Project : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Company;
		
		private string _SalesOrderNo;
		
		private string _ProjectNo;
		
		private string _Customer;
		
		private string _Factory;
		
		private System.Nullable<System.DateTime> _SoIssueDate;
		
		private string _Season;
		
		private string _Curr;
		
		private string _PaymentTerm;
		
		private string _DeliveryTerm;
		
		private System.Nullable<decimal> _ExRate;
		
		private string _Status;
		
		private string _Suspension;
		
		private string _SalesMan;
		
		private System.Nullable<System.DateTime> _CompletedDate;
		
		private System.Nullable<System.DateTime> _PDNDate;
		
		private string _DeliveryAddress;
		
		private string _DSEQ;
		
		private EntitySet<WorkOrder> _WorkOrders;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnSalesOrderNoChanging(string value);
    partial void OnSalesOrderNoChanged();
    partial void OnProjectNoChanging(string value);
    partial void OnProjectNoChanged();
    partial void OnCustomerChanging(string value);
    partial void OnCustomerChanged();
    partial void OnFactoryChanging(string value);
    partial void OnFactoryChanged();
    partial void OnSoIssueDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSoIssueDateChanged();
    partial void OnSeasonChanging(string value);
    partial void OnSeasonChanged();
    partial void OnCurrChanging(string value);
    partial void OnCurrChanged();
    partial void OnPaymentTermChanging(string value);
    partial void OnPaymentTermChanged();
    partial void OnDeliveryTermChanging(string value);
    partial void OnDeliveryTermChanged();
    partial void OnExRateChanging(System.Nullable<decimal> value);
    partial void OnExRateChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnSuspensionChanging(string value);
    partial void OnSuspensionChanged();
    partial void OnSalesManChanging(string value);
    partial void OnSalesManChanged();
    partial void OnCompletedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCompletedDateChanged();
    partial void OnPDNDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPDNDateChanged();
    partial void OnDeliveryAddressChanging(string value);
    partial void OnDeliveryAddressChanged();
    partial void OnDSEQChanging(string value);
    partial void OnDSEQChanged();
    #endregion
		
		public Project()
		{
			this.Initialize();
		}
		
		[Column(Storage="_Company", DbType="VarChar(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=1)]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[Column(Storage="_SalesOrderNo", DbType="VarChar(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=2)]
		public string SalesOrderNo
		{
			get
			{
				return this._SalesOrderNo;
			}
			set
			{
				if ((this._SalesOrderNo != value))
				{
					this.OnSalesOrderNoChanging(value);
					this.SendPropertyChanging();
					this._SalesOrderNo = value;
					this.SendPropertyChanged("SalesOrderNo");
					this.OnSalesOrderNoChanged();
				}
			}
		}
		
		[Column(Storage="_ProjectNo", DbType="NVarChar(50)")]
		[DataMember(Order=3)]
		public string ProjectNo
		{
			get
			{
				return this._ProjectNo;
			}
			set
			{
				if ((this._ProjectNo != value))
				{
					this.OnProjectNoChanging(value);
					this.SendPropertyChanging();
					this._ProjectNo = value;
					this.SendPropertyChanged("ProjectNo");
					this.OnProjectNoChanged();
				}
			}
		}
		
		[Column(Storage="_Customer", DbType="NVarChar(50)")]
		[DataMember(Order=4)]
		public string Customer
		{
			get
			{
				return this._Customer;
			}
			set
			{
				if ((this._Customer != value))
				{
					this.OnCustomerChanging(value);
					this.SendPropertyChanging();
					this._Customer = value;
					this.SendPropertyChanged("Customer");
					this.OnCustomerChanged();
				}
			}
		}
		
		[Column(Storage="_Factory", DbType="NVarChar(50)")]
		[DataMember(Order=5)]
		public string Factory
		{
			get
			{
				return this._Factory;
			}
			set
			{
				if ((this._Factory != value))
				{
					this.OnFactoryChanging(value);
					this.SendPropertyChanging();
					this._Factory = value;
					this.SendPropertyChanged("Factory");
					this.OnFactoryChanged();
				}
			}
		}
		
		[Column(Storage="_SoIssueDate", DbType="DateTime")]
		[DataMember(Order=6)]
		public System.Nullable<System.DateTime> SoIssueDate
		{
			get
			{
				return this._SoIssueDate;
			}
			set
			{
				if ((this._SoIssueDate != value))
				{
					this.OnSoIssueDateChanging(value);
					this.SendPropertyChanging();
					this._SoIssueDate = value;
					this.SendPropertyChanged("SoIssueDate");
					this.OnSoIssueDateChanged();
				}
			}
		}
		
		[Column(Storage="_Season", DbType="NVarChar(50)")]
		[DataMember(Order=7)]
		public string Season
		{
			get
			{
				return this._Season;
			}
			set
			{
				if ((this._Season != value))
				{
					this.OnSeasonChanging(value);
					this.SendPropertyChanging();
					this._Season = value;
					this.SendPropertyChanged("Season");
					this.OnSeasonChanged();
				}
			}
		}
		
		[Column(Storage="_Curr", DbType="NVarChar(6)")]
		[DataMember(Order=8)]
		public string Curr
		{
			get
			{
				return this._Curr;
			}
			set
			{
				if ((this._Curr != value))
				{
					this.OnCurrChanging(value);
					this.SendPropertyChanging();
					this._Curr = value;
					this.SendPropertyChanged("Curr");
					this.OnCurrChanged();
				}
			}
		}
		
		[Column(Storage="_PaymentTerm", DbType="NVarChar(72)")]
		[DataMember(Order=9)]
		public string PaymentTerm
		{
			get
			{
				return this._PaymentTerm;
			}
			set
			{
				if ((this._PaymentTerm != value))
				{
					this.OnPaymentTermChanging(value);
					this.SendPropertyChanging();
					this._PaymentTerm = value;
					this.SendPropertyChanged("PaymentTerm");
					this.OnPaymentTermChanged();
				}
			}
		}
		
		[Column(Storage="_DeliveryTerm", DbType="NVarChar(72)")]
		[DataMember(Order=10)]
		public string DeliveryTerm
		{
			get
			{
				return this._DeliveryTerm;
			}
			set
			{
				if ((this._DeliveryTerm != value))
				{
					this.OnDeliveryTermChanging(value);
					this.SendPropertyChanging();
					this._DeliveryTerm = value;
					this.SendPropertyChanged("DeliveryTerm");
					this.OnDeliveryTermChanged();
				}
			}
		}
		
		[Column(Storage="_ExRate", DbType="Decimal(15,5)")]
		[DataMember(Order=11)]
		public System.Nullable<decimal> ExRate
		{
			get
			{
				return this._ExRate;
			}
			set
			{
				if ((this._ExRate != value))
				{
					this.OnExRateChanging(value);
					this.SendPropertyChanging();
					this._ExRate = value;
					this.SendPropertyChanged("ExRate");
					this.OnExRateChanged();
				}
			}
		}
		
		[Column(Storage="_Status", DbType="NVarChar(2)")]
		[DataMember(Order=12)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[Column(Storage="_Suspension", DbType="NVarChar(10)")]
		[DataMember(Order=13)]
		public string Suspension
		{
			get
			{
				return this._Suspension;
			}
			set
			{
				if ((this._Suspension != value))
				{
					this.OnSuspensionChanging(value);
					this.SendPropertyChanging();
					this._Suspension = value;
					this.SendPropertyChanged("Suspension");
					this.OnSuspensionChanged();
				}
			}
		}
		
		[Column(Storage="_SalesMan", DbType="NVarChar(50)")]
		[DataMember(Order=14)]
		public string SalesMan
		{
			get
			{
				return this._SalesMan;
			}
			set
			{
				if ((this._SalesMan != value))
				{
					this.OnSalesManChanging(value);
					this.SendPropertyChanging();
					this._SalesMan = value;
					this.SendPropertyChanged("SalesMan");
					this.OnSalesManChanged();
				}
			}
		}
		
		[Column(Storage="_CompletedDate", DbType="DateTime")]
		[DataMember(Order=15)]
		public System.Nullable<System.DateTime> CompletedDate
		{
			get
			{
				return this._CompletedDate;
			}
			set
			{
				if ((this._CompletedDate != value))
				{
					this.OnCompletedDateChanging(value);
					this.SendPropertyChanging();
					this._CompletedDate = value;
					this.SendPropertyChanged("CompletedDate");
					this.OnCompletedDateChanged();
				}
			}
		}
		
		[Column(Storage="_PDNDate", DbType="DateTime")]
		[DataMember(Order=16)]
		public System.Nullable<System.DateTime> PDNDate
		{
			get
			{
				return this._PDNDate;
			}
			set
			{
				if ((this._PDNDate != value))
				{
					this.OnPDNDateChanging(value);
					this.SendPropertyChanging();
					this._PDNDate = value;
					this.SendPropertyChanged("PDNDate");
					this.OnPDNDateChanged();
				}
			}
		}
		
		[Column(Storage="_DeliveryAddress", DbType="NVarChar(100)")]
		[DataMember(Order=17)]
		public string DeliveryAddress
		{
			get
			{
				return this._DeliveryAddress;
			}
			set
			{
				if ((this._DeliveryAddress != value))
				{
					this.OnDeliveryAddressChanging(value);
					this.SendPropertyChanging();
					this._DeliveryAddress = value;
					this.SendPropertyChanged("DeliveryAddress");
					this.OnDeliveryAddressChanged();
				}
			}
		}
		
		[Column(Storage="_DSEQ", DbType="NVarChar(10)")]
		[DataMember(Order=18)]
		public string DSEQ
		{
			get
			{
				return this._DSEQ;
			}
			set
			{
				if ((this._DSEQ != value))
				{
					this.OnDSEQChanging(value);
					this.SendPropertyChanging();
					this._DSEQ = value;
					this.SendPropertyChanged("DSEQ");
					this.OnDSEQChanged();
				}
			}
		}
		
		[Association(Name="Project_WorkOrder", Storage="_WorkOrders", ThisKey="Company,SalesOrderNo", OtherKey="Company,SalesOrderNo")]
		[DataMember(Order=19, EmitDefaultValue=false)]
		public EntitySet<WorkOrder> WorkOrders
		{
			get
			{
				if ((this.serializing 
							&& (this._WorkOrders.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._WorkOrders;
			}
			set
			{
				this._WorkOrders.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_WorkOrders(WorkOrder entity)
		{
			this.SendPropertyChanging();
			entity.Project = this;
		}
		
		private void detach_WorkOrders(WorkOrder entity)
		{
			this.SendPropertyChanging();
			entity.Project = null;
		}
		
		private void Initialize()
		{
			this._WorkOrders = new EntitySet<WorkOrder>(new Action<WorkOrder>(this.attach_WorkOrders), new Action<WorkOrder>(this.detach_WorkOrders));
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[OnSerializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[OnSerialized()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[Table(Name="dbo.AmendMaster")]
	[DataContract()]
	public partial class AmendMaster : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _AmendNo;
		
		private int _VerId;
		
		private string _AmenddReason;
		
		private string _AmendContent;
		
		private string _Remark;
		
		private string _Confirm_OA;
		
		private System.Nullable<System.DateTime> _DT_OA;
		
		private string _Confirm_Manager;
		
		private System.Nullable<System.DateTime> _DT_Manager;
		
		private string _Confirm_PPC;
		
		private System.Nullable<System.DateTime> _DT_PPC;
		
		private string _Confirm_CAD;
		
		private System.Nullable<System.DateTime> _DT_CAD;
		
		private string _Confirm_Packing;
		
		private System.Nullable<System.DateTime> _DT_Packing;
		
		private string _CreateBy;
		
		private System.Nullable<System.DateTime> _CreateTime;
		
		private string _UpdateBy;
		
		private System.Nullable<System.DateTime> _UpdateTime;
		
		private string _Confirm_Sewing;
		
		private System.Nullable<System.DateTime> _DT_Sewing;
		
		private EntitySet<AmendDetail> _AmendDetails;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAmendNoChanging(string value);
    partial void OnAmendNoChanged();
    partial void OnVerIdChanging(int value);
    partial void OnVerIdChanged();
    partial void OnAmenddReasonChanging(string value);
    partial void OnAmenddReasonChanged();
    partial void OnAmendContentChanging(string value);
    partial void OnAmendContentChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnConfirm_OAChanging(string value);
    partial void OnConfirm_OAChanged();
    partial void OnDT_OAChanging(System.Nullable<System.DateTime> value);
    partial void OnDT_OAChanged();
    partial void OnConfirm_ManagerChanging(string value);
    partial void OnConfirm_ManagerChanged();
    partial void OnDT_ManagerChanging(System.Nullable<System.DateTime> value);
    partial void OnDT_ManagerChanged();
    partial void OnConfirm_PPCChanging(string value);
    partial void OnConfirm_PPCChanged();
    partial void OnDT_PPCChanging(System.Nullable<System.DateTime> value);
    partial void OnDT_PPCChanged();
    partial void OnConfirm_CADChanging(string value);
    partial void OnConfirm_CADChanged();
    partial void OnDT_CADChanging(System.Nullable<System.DateTime> value);
    partial void OnDT_CADChanged();
    partial void OnConfirm_PackingChanging(string value);
    partial void OnConfirm_PackingChanged();
    partial void OnDT_PackingChanging(System.Nullable<System.DateTime> value);
    partial void OnDT_PackingChanged();
    partial void OnCreateByChanging(string value);
    partial void OnCreateByChanged();
    partial void OnCreateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateTimeChanged();
    partial void OnUpdateByChanging(string value);
    partial void OnUpdateByChanged();
    partial void OnUpdateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateTimeChanged();
    partial void OnConfirm_SewingChanging(string value);
    partial void OnConfirm_SewingChanged();
    partial void OnDT_SewingChanging(System.Nullable<System.DateTime> value);
    partial void OnDT_SewingChanged();
    #endregion
		
		public AmendMaster()
		{
			this.Initialize();
		}
		
		[Column(Storage="_AmendNo", DbType="VarChar(8) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=1)]
		public string AmendNo
		{
			get
			{
				return this._AmendNo;
			}
			set
			{
				if ((this._AmendNo != value))
				{
					this.OnAmendNoChanging(value);
					this.SendPropertyChanging();
					this._AmendNo = value;
					this.SendPropertyChanged("AmendNo");
					this.OnAmendNoChanged();
				}
			}
		}
		
		[Column(Storage="_VerId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[DataMember(Order=2)]
		public int VerId
		{
			get
			{
				return this._VerId;
			}
			set
			{
				if ((this._VerId != value))
				{
					this.OnVerIdChanging(value);
					this.SendPropertyChanging();
					this._VerId = value;
					this.SendPropertyChanged("VerId");
					this.OnVerIdChanged();
				}
			}
		}
		
		[Column(Storage="_AmenddReason", DbType="VarChar(20)")]
		[DataMember(Order=3)]
		public string AmenddReason
		{
			get
			{
				return this._AmenddReason;
			}
			set
			{
				if ((this._AmenddReason != value))
				{
					this.OnAmenddReasonChanging(value);
					this.SendPropertyChanging();
					this._AmenddReason = value;
					this.SendPropertyChanged("AmenddReason");
					this.OnAmenddReasonChanged();
				}
			}
		}
		
		[Column(Storage="_AmendContent", DbType="VarChar(80)")]
		[DataMember(Order=4)]
		public string AmendContent
		{
			get
			{
				return this._AmendContent;
			}
			set
			{
				if ((this._AmendContent != value))
				{
					this.OnAmendContentChanging(value);
					this.SendPropertyChanging();
					this._AmendContent = value;
					this.SendPropertyChanged("AmendContent");
					this.OnAmendContentChanged();
				}
			}
		}
		
		[Column(Storage="_Remark", DbType="NVarChar(500)")]
		[DataMember(Order=5)]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[Column(Storage="_Confirm_OA", DbType="VarChar(15)")]
		[DataMember(Order=6)]
		public string Confirm_OA
		{
			get
			{
				return this._Confirm_OA;
			}
			set
			{
				if ((this._Confirm_OA != value))
				{
					this.OnConfirm_OAChanging(value);
					this.SendPropertyChanging();
					this._Confirm_OA = value;
					this.SendPropertyChanged("Confirm_OA");
					this.OnConfirm_OAChanged();
				}
			}
		}
		
		[Column(Storage="_DT_OA", DbType="DateTime")]
		[DataMember(Order=7)]
		public System.Nullable<System.DateTime> DT_OA
		{
			get
			{
				return this._DT_OA;
			}
			set
			{
				if ((this._DT_OA != value))
				{
					this.OnDT_OAChanging(value);
					this.SendPropertyChanging();
					this._DT_OA = value;
					this.SendPropertyChanged("DT_OA");
					this.OnDT_OAChanged();
				}
			}
		}
		
		[Column(Storage="_Confirm_Manager", DbType="VarChar(15)")]
		[DataMember(Order=8)]
		public string Confirm_Manager
		{
			get
			{
				return this._Confirm_Manager;
			}
			set
			{
				if ((this._Confirm_Manager != value))
				{
					this.OnConfirm_ManagerChanging(value);
					this.SendPropertyChanging();
					this._Confirm_Manager = value;
					this.SendPropertyChanged("Confirm_Manager");
					this.OnConfirm_ManagerChanged();
				}
			}
		}
		
		[Column(Storage="_DT_Manager", DbType="DateTime")]
		[DataMember(Order=9)]
		public System.Nullable<System.DateTime> DT_Manager
		{
			get
			{
				return this._DT_Manager;
			}
			set
			{
				if ((this._DT_Manager != value))
				{
					this.OnDT_ManagerChanging(value);
					this.SendPropertyChanging();
					this._DT_Manager = value;
					this.SendPropertyChanged("DT_Manager");
					this.OnDT_ManagerChanged();
				}
			}
		}
		
		[Column(Storage="_Confirm_PPC", DbType="VarChar(15)")]
		[DataMember(Order=10)]
		public string Confirm_PPC
		{
			get
			{
				return this._Confirm_PPC;
			}
			set
			{
				if ((this._Confirm_PPC != value))
				{
					this.OnConfirm_PPCChanging(value);
					this.SendPropertyChanging();
					this._Confirm_PPC = value;
					this.SendPropertyChanged("Confirm_PPC");
					this.OnConfirm_PPCChanged();
				}
			}
		}
		
		[Column(Storage="_DT_PPC", DbType="DateTime")]
		[DataMember(Order=11)]
		public System.Nullable<System.DateTime> DT_PPC
		{
			get
			{
				return this._DT_PPC;
			}
			set
			{
				if ((this._DT_PPC != value))
				{
					this.OnDT_PPCChanging(value);
					this.SendPropertyChanging();
					this._DT_PPC = value;
					this.SendPropertyChanged("DT_PPC");
					this.OnDT_PPCChanged();
				}
			}
		}
		
		[Column(Storage="_Confirm_CAD", DbType="VarChar(15)")]
		[DataMember(Order=12)]
		public string Confirm_CAD
		{
			get
			{
				return this._Confirm_CAD;
			}
			set
			{
				if ((this._Confirm_CAD != value))
				{
					this.OnConfirm_CADChanging(value);
					this.SendPropertyChanging();
					this._Confirm_CAD = value;
					this.SendPropertyChanged("Confirm_CAD");
					this.OnConfirm_CADChanged();
				}
			}
		}
		
		[Column(Storage="_DT_CAD", DbType="DateTime")]
		[DataMember(Order=13)]
		public System.Nullable<System.DateTime> DT_CAD
		{
			get
			{
				return this._DT_CAD;
			}
			set
			{
				if ((this._DT_CAD != value))
				{
					this.OnDT_CADChanging(value);
					this.SendPropertyChanging();
					this._DT_CAD = value;
					this.SendPropertyChanged("DT_CAD");
					this.OnDT_CADChanged();
				}
			}
		}
		
		[Column(Storage="_Confirm_Packing", DbType="VarChar(15)")]
		[DataMember(Order=14)]
		public string Confirm_Packing
		{
			get
			{
				return this._Confirm_Packing;
			}
			set
			{
				if ((this._Confirm_Packing != value))
				{
					this.OnConfirm_PackingChanging(value);
					this.SendPropertyChanging();
					this._Confirm_Packing = value;
					this.SendPropertyChanged("Confirm_Packing");
					this.OnConfirm_PackingChanged();
				}
			}
		}
		
		[Column(Storage="_DT_Packing", DbType="DateTime")]
		[DataMember(Order=15)]
		public System.Nullable<System.DateTime> DT_Packing
		{
			get
			{
				return this._DT_Packing;
			}
			set
			{
				if ((this._DT_Packing != value))
				{
					this.OnDT_PackingChanging(value);
					this.SendPropertyChanging();
					this._DT_Packing = value;
					this.SendPropertyChanged("DT_Packing");
					this.OnDT_PackingChanged();
				}
			}
		}
		
		[Column(Storage="_CreateBy", DbType="VarChar(15)")]
		[DataMember(Order=16)]
		public string CreateBy
		{
			get
			{
				return this._CreateBy;
			}
			set
			{
				if ((this._CreateBy != value))
				{
					this.OnCreateByChanging(value);
					this.SendPropertyChanging();
					this._CreateBy = value;
					this.SendPropertyChanged("CreateBy");
					this.OnCreateByChanged();
				}
			}
		}
		
		[Column(Storage="_CreateTime", DbType="DateTime")]
		[DataMember(Order=17)]
		public System.Nullable<System.DateTime> CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[Column(Storage="_UpdateBy", DbType="VarChar(15)")]
		[DataMember(Order=18)]
		public string UpdateBy
		{
			get
			{
				return this._UpdateBy;
			}
			set
			{
				if ((this._UpdateBy != value))
				{
					this.OnUpdateByChanging(value);
					this.SendPropertyChanging();
					this._UpdateBy = value;
					this.SendPropertyChanged("UpdateBy");
					this.OnUpdateByChanged();
				}
			}
		}
		
		[Column(Storage="_UpdateTime", DbType="DateTime")]
		[DataMember(Order=19)]
		public System.Nullable<System.DateTime> UpdateTime
		{
			get
			{
				return this._UpdateTime;
			}
			set
			{
				if ((this._UpdateTime != value))
				{
					this.OnUpdateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdateTime = value;
					this.SendPropertyChanged("UpdateTime");
					this.OnUpdateTimeChanged();
				}
			}
		}
		
		[Column(Storage="_Confirm_Sewing", DbType="VarChar(15)")]
		[DataMember(Order=20)]
		public string Confirm_Sewing
		{
			get
			{
				return this._Confirm_Sewing;
			}
			set
			{
				if ((this._Confirm_Sewing != value))
				{
					this.OnConfirm_SewingChanging(value);
					this.SendPropertyChanging();
					this._Confirm_Sewing = value;
					this.SendPropertyChanged("Confirm_Sewing");
					this.OnConfirm_SewingChanged();
				}
			}
		}
		
		[Column(Storage="_DT_Sewing", DbType="DateTime")]
		[DataMember(Order=21)]
		public System.Nullable<System.DateTime> DT_Sewing
		{
			get
			{
				return this._DT_Sewing;
			}
			set
			{
				if ((this._DT_Sewing != value))
				{
					this.OnDT_SewingChanging(value);
					this.SendPropertyChanging();
					this._DT_Sewing = value;
					this.SendPropertyChanged("DT_Sewing");
					this.OnDT_SewingChanged();
				}
			}
		}
		
		[Association(Name="AmendMaster_AmendDetail", Storage="_AmendDetails", ThisKey="AmendNo,VerId", OtherKey="AmendNo,VerId")]
		[DataMember(Order=22, EmitDefaultValue=false)]
		public EntitySet<AmendDetail> AmendDetails
		{
			get
			{
				if ((this.serializing 
							&& (this._AmendDetails.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._AmendDetails;
			}
			set
			{
				this._AmendDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AmendDetails(AmendDetail entity)
		{
			this.SendPropertyChanging();
			entity.AmendMaster = this;
		}
		
		private void detach_AmendDetails(AmendDetail entity)
		{
			this.SendPropertyChanging();
			entity.AmendMaster = null;
		}
		
		private void Initialize()
		{
			this._AmendDetails = new EntitySet<AmendDetail>(new Action<AmendDetail>(this.attach_AmendDetails), new Action<AmendDetail>(this.detach_AmendDetails));
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[OnSerializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[OnSerialized()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[Table(Name="dbo.AmendDetail")]
	[DataContract()]
	public partial class AmendDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _AmendNo;
		
		private int _VerId;
		
		private string _WorkOrderNo;
		
		private EntityRef<AmendMaster> _AmendMaster;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAmendNoChanging(string value);
    partial void OnAmendNoChanged();
    partial void OnVerIdChanging(int value);
    partial void OnVerIdChanged();
    partial void OnWorkOrderNoChanging(string value);
    partial void OnWorkOrderNoChanged();
    #endregion
		
		public AmendDetail()
		{
			this.Initialize();
		}
		
		[Column(Storage="_AmendNo", DbType="VarChar(8) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=1)]
		public string AmendNo
		{
			get
			{
				return this._AmendNo;
			}
			set
			{
				if ((this._AmendNo != value))
				{
					if (this._AmendMaster.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAmendNoChanging(value);
					this.SendPropertyChanging();
					this._AmendNo = value;
					this.SendPropertyChanged("AmendNo");
					this.OnAmendNoChanged();
				}
			}
		}
		
		[Column(Storage="_VerId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[DataMember(Order=2)]
		public int VerId
		{
			get
			{
				return this._VerId;
			}
			set
			{
				if ((this._VerId != value))
				{
					if (this._AmendMaster.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVerIdChanging(value);
					this.SendPropertyChanging();
					this._VerId = value;
					this.SendPropertyChanged("VerId");
					this.OnVerIdChanged();
				}
			}
		}
		
		[Column(Storage="_WorkOrderNo", DbType="VarChar(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=3)]
		public string WorkOrderNo
		{
			get
			{
				return this._WorkOrderNo;
			}
			set
			{
				if ((this._WorkOrderNo != value))
				{
					this.OnWorkOrderNoChanging(value);
					this.SendPropertyChanging();
					this._WorkOrderNo = value;
					this.SendPropertyChanged("WorkOrderNo");
					this.OnWorkOrderNoChanged();
				}
			}
		}
		
		[Association(Name="AmendMaster_AmendDetail", Storage="_AmendMaster", ThisKey="AmendNo,VerId", OtherKey="AmendNo,VerId", IsForeignKey=true)]
		public AmendMaster AmendMaster
		{
			get
			{
				return this._AmendMaster.Entity;
			}
			set
			{
				AmendMaster previousValue = this._AmendMaster.Entity;
				if (((previousValue != value) 
							|| (this._AmendMaster.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AmendMaster.Entity = null;
						previousValue.AmendDetails.Remove(this);
					}
					this._AmendMaster.Entity = value;
					if ((value != null))
					{
						value.AmendDetails.Add(this);
						this._AmendNo = value.AmendNo;
						this._VerId = value.VerId;
					}
					else
					{
						this._AmendNo = default(string);
						this._VerId = default(int);
					}
					this.SendPropertyChanged("AmendMaster");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._AmendMaster = default(EntityRef<AmendMaster>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[Table(Name="dbo.RoundWorkOrder")]
	[DataContract()]
	public partial class RoundWorkOrder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Company;
		
		private string _SalesOrderNo;
		
		private string _WorkOrderNo;
		
		private string _ColorCode;
		
		private int _RoundNo;
		
		private int _SalesOrderLine;
		
		private System.Nullable<int> _RoundTotal;
		
		private System.Nullable<System.DateTime> _RWOCreateDate;
		
		private System.Nullable<System.DateTime> _WOReviseDate;
		
		private System.Nullable<System.DateTime> _AmendDate;
		
		private System.Nullable<int> _Version;
		
		private System.Nullable<System.DateTime> _FactoryWorkStartDate;
		
		private System.Nullable<System.DateTime> _LineWorkStartDate;
		
		private System.Nullable<System.DateTime> _T3Date;
		
		private System.Nullable<System.DateTime> _AjustT3Date;
		
		private string _AjustT3DateConfirm;
		
		private System.Nullable<System.DateTime> _RoundWorkOrderExFtyDate;
		
		private System.Nullable<System.DateTime> _FCLExFtyDate;
		
		private System.Nullable<System.DateTime> _LCLExFtyDate;
		
		private System.Nullable<System.DateTime> _FirstStationStartDate;
		
		private System.Nullable<System.DateTime> _FirstQNStartDate;
		
		private System.Nullable<System.DateTime> _DeliveryDate;
		
		private System.Nullable<System.DateTime> _LastQNExFtyDate;
		
		private System.Nullable<int> _CycleTime;
		
		private string _OAConfirm;
		
		private System.Nullable<System.DateTime> _OAConfirmDate;
		
		private string _HeaderConfirm;
		
		private System.Nullable<System.DateTime> _HeaderConfirmDate;
		
		private string _TopConfirm;
		
		private System.Nullable<System.DateTime> _TopConfirmDate;
		
		private string _PPCConfirm;
		
		private System.Nullable<System.DateTime> _PPCConfirmDate;
		
		private System.Nullable<bool> _AppliedToPhaseII;
		
		private System.Nullable<bool> _AppliedToALL;
		
		private string _AppliedUser;
		
		private System.Nullable<System.DateTime> _AppliedDate;
		
		private System.Nullable<int> _WOVersion;
		
		private System.Nullable<int> _ActionStatus;
		
		private System.Nullable<System.DateTime> _ActionStatusDate;
		
		private System.Nullable<System.DateTime> _FirstStation;
		
		private System.Nullable<double> _NumberOfLine;
		
		private System.Nullable<System.DateTime> _ActualDeliveryDate;
		
		private System.Nullable<System.DateTime> _TransitDate;
		
		private System.Nullable<System.DateTime> _TransitDateB;
		
		private System.Nullable<System.DateTime> _TransitDateHK;
		
		private System.Nullable<System.DateTime> _TransitDateNZ;
		
		private System.Nullable<System.DateTime> _TransitDateUK;
		
		private System.Nullable<System.DateTime> _TransitDateUSA;
		
		private System.Nullable<int> _PlannedShptQtyB;
		
		private System.Nullable<int> _PlannedShptQtyHK;
		
		private System.Nullable<int> _PlannedShptQtyNZ;
		
		private System.Nullable<int> _PlannedShptQtyUK;
		
		private System.Nullable<int> _PlannedShptQtyUSA;
		
		private System.Nullable<int> _ActualShptQtyB;
		
		private System.Nullable<int> _ActualShptQtyHK;
		
		private System.Nullable<int> _ActualShptQtyNZ;
		
		private System.Nullable<int> _ActualShptQtyUK;
		
		private System.Nullable<int> _ActualShptQtyUSA;
		
		private string _SpecialFactory;
		
		private string _NeedAdjustT3Date;
		
		private string _aT3DateAccept;
		
		private EntitySet<RoundWorkOrderDetail> _RoundWorkOrderDetails;
		
		private EntitySet<RoundWorkOrderII> _RoundWorkOrderIIs;
		
		private EntitySet<RWOChooseFW> _RWOChooseFWs;
		
		private EntityRef<WorkOrderColor> _WorkOrderColor;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnSalesOrderNoChanging(string value);
    partial void OnSalesOrderNoChanged();
    partial void OnWorkOrderNoChanging(string value);
    partial void OnWorkOrderNoChanged();
    partial void OnColorCodeChanging(string value);
    partial void OnColorCodeChanged();
    partial void OnRoundNoChanging(int value);
    partial void OnRoundNoChanged();
    partial void OnSalesOrderLineChanging(int value);
    partial void OnSalesOrderLineChanged();
    partial void OnRoundTotalChanging(System.Nullable<int> value);
    partial void OnRoundTotalChanged();
    partial void OnRWOCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRWOCreateDateChanged();
    partial void OnWOReviseDateChanging(System.Nullable<System.DateTime> value);
    partial void OnWOReviseDateChanged();
    partial void OnAmendDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAmendDateChanged();
    partial void OnVersionChanging(System.Nullable<int> value);
    partial void OnVersionChanged();
    partial void OnFactoryWorkStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFactoryWorkStartDateChanged();
    partial void OnLineWorkStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLineWorkStartDateChanged();
    partial void OnT3DateChanging(System.Nullable<System.DateTime> value);
    partial void OnT3DateChanged();
    partial void OnAjustT3DateChanging(System.Nullable<System.DateTime> value);
    partial void OnAjustT3DateChanged();
    partial void OnAjustT3DateConfirmChanging(string value);
    partial void OnAjustT3DateConfirmChanged();
    partial void OnRoundWorkOrderExFtyDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRoundWorkOrderExFtyDateChanged();
    partial void OnFCLExFtyDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFCLExFtyDateChanged();
    partial void OnLCLExFtyDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLCLExFtyDateChanged();
    partial void OnFirstStationStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFirstStationStartDateChanged();
    partial void OnFirstQNStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFirstQNStartDateChanged();
    partial void OnDeliveryDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeliveryDateChanged();
    partial void OnLastQNExFtyDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastQNExFtyDateChanged();
    partial void OnCycleTimeChanging(System.Nullable<int> value);
    partial void OnCycleTimeChanged();
    partial void OnOAConfirmChanging(string value);
    partial void OnOAConfirmChanged();
    partial void OnOAConfirmDateChanging(System.Nullable<System.DateTime> value);
    partial void OnOAConfirmDateChanged();
    partial void OnHeaderConfirmChanging(string value);
    partial void OnHeaderConfirmChanged();
    partial void OnHeaderConfirmDateChanging(System.Nullable<System.DateTime> value);
    partial void OnHeaderConfirmDateChanged();
    partial void OnTopConfirmChanging(string value);
    partial void OnTopConfirmChanged();
    partial void OnTopConfirmDateChanging(System.Nullable<System.DateTime> value);
    partial void OnTopConfirmDateChanged();
    partial void OnPPCConfirmChanging(string value);
    partial void OnPPCConfirmChanged();
    partial void OnPPCConfirmDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPPCConfirmDateChanged();
    partial void OnAppliedToPhaseIIChanging(System.Nullable<bool> value);
    partial void OnAppliedToPhaseIIChanged();
    partial void OnAppliedToALLChanging(System.Nullable<bool> value);
    partial void OnAppliedToALLChanged();
    partial void OnAppliedUserChanging(string value);
    partial void OnAppliedUserChanged();
    partial void OnAppliedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAppliedDateChanged();
    partial void OnWOVersionChanging(System.Nullable<int> value);
    partial void OnWOVersionChanged();
    partial void OnActionStatusChanging(System.Nullable<int> value);
    partial void OnActionStatusChanged();
    partial void OnActionStatusDateChanging(System.Nullable<System.DateTime> value);
    partial void OnActionStatusDateChanged();
    partial void OnFirstStationChanging(System.Nullable<System.DateTime> value);
    partial void OnFirstStationChanged();
    partial void OnNumberOfLineChanging(System.Nullable<double> value);
    partial void OnNumberOfLineChanged();
    partial void OnActualDeliveryDateChanging(System.Nullable<System.DateTime> value);
    partial void OnActualDeliveryDateChanged();
    partial void OnTransitDateChanging(System.Nullable<System.DateTime> value);
    partial void OnTransitDateChanged();
    partial void OnTransitDateBChanging(System.Nullable<System.DateTime> value);
    partial void OnTransitDateBChanged();
    partial void OnTransitDateHKChanging(System.Nullable<System.DateTime> value);
    partial void OnTransitDateHKChanged();
    partial void OnTransitDateNZChanging(System.Nullable<System.DateTime> value);
    partial void OnTransitDateNZChanged();
    partial void OnTransitDateUKChanging(System.Nullable<System.DateTime> value);
    partial void OnTransitDateUKChanged();
    partial void OnTransitDateUSAChanging(System.Nullable<System.DateTime> value);
    partial void OnTransitDateUSAChanged();
    partial void OnPlannedShptQtyBChanging(System.Nullable<int> value);
    partial void OnPlannedShptQtyBChanged();
    partial void OnPlannedShptQtyHKChanging(System.Nullable<int> value);
    partial void OnPlannedShptQtyHKChanged();
    partial void OnPlannedShptQtyNZChanging(System.Nullable<int> value);
    partial void OnPlannedShptQtyNZChanged();
    partial void OnPlannedShptQtyUKChanging(System.Nullable<int> value);
    partial void OnPlannedShptQtyUKChanged();
    partial void OnPlannedShptQtyUSAChanging(System.Nullable<int> value);
    partial void OnPlannedShptQtyUSAChanged();
    partial void OnActualShptQtyBChanging(System.Nullable<int> value);
    partial void OnActualShptQtyBChanged();
    partial void OnActualShptQtyHKChanging(System.Nullable<int> value);
    partial void OnActualShptQtyHKChanged();
    partial void OnActualShptQtyNZChanging(System.Nullable<int> value);
    partial void OnActualShptQtyNZChanged();
    partial void OnActualShptQtyUKChanging(System.Nullable<int> value);
    partial void OnActualShptQtyUKChanged();
    partial void OnActualShptQtyUSAChanging(System.Nullable<int> value);
    partial void OnActualShptQtyUSAChanged();
    partial void OnSpecialFactoryChanging(string value);
    partial void OnSpecialFactoryChanged();
    partial void OnNeedAdjustT3DateChanging(string value);
    partial void OnNeedAdjustT3DateChanged();
    partial void OnaT3DateAcceptChanging(string value);
    partial void OnaT3DateAcceptChanged();
    #endregion
		
		public RoundWorkOrder()
		{
			this.Initialize();
		}
		
		[Column(Storage="_Company", DbType="VarChar(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=1)]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					if (this._WorkOrderColor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[Column(Storage="_SalesOrderNo", DbType="VarChar(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=2)]
		public string SalesOrderNo
		{
			get
			{
				return this._SalesOrderNo;
			}
			set
			{
				if ((this._SalesOrderNo != value))
				{
					if (this._WorkOrderColor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSalesOrderNoChanging(value);
					this.SendPropertyChanging();
					this._SalesOrderNo = value;
					this.SendPropertyChanged("SalesOrderNo");
					this.OnSalesOrderNoChanged();
				}
			}
		}
		
		[Column(Storage="_WorkOrderNo", DbType="VarChar(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=3)]
		public string WorkOrderNo
		{
			get
			{
				return this._WorkOrderNo;
			}
			set
			{
				if ((this._WorkOrderNo != value))
				{
					if (this._WorkOrderColor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkOrderNoChanging(value);
					this.SendPropertyChanging();
					this._WorkOrderNo = value;
					this.SendPropertyChanged("WorkOrderNo");
					this.OnWorkOrderNoChanged();
				}
			}
		}
		
		[Column(Storage="_ColorCode", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=4)]
		public string ColorCode
		{
			get
			{
				return this._ColorCode;
			}
			set
			{
				if ((this._ColorCode != value))
				{
					if (this._WorkOrderColor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnColorCodeChanging(value);
					this.SendPropertyChanging();
					this._ColorCode = value;
					this.SendPropertyChanged("ColorCode");
					this.OnColorCodeChanged();
				}
			}
		}
		
		[Column(Storage="_RoundNo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[DataMember(Order=5)]
		public int RoundNo
		{
			get
			{
				return this._RoundNo;
			}
			set
			{
				if ((this._RoundNo != value))
				{
					this.OnRoundNoChanging(value);
					this.SendPropertyChanging();
					this._RoundNo = value;
					this.SendPropertyChanged("RoundNo");
					this.OnRoundNoChanged();
				}
			}
		}
		
		[Column(Storage="_SalesOrderLine", DbType="Int NOT NULL")]
		[DataMember(Order=6)]
		public int SalesOrderLine
		{
			get
			{
				return this._SalesOrderLine;
			}
			set
			{
				if ((this._SalesOrderLine != value))
				{
					this.OnSalesOrderLineChanging(value);
					this.SendPropertyChanging();
					this._SalesOrderLine = value;
					this.SendPropertyChanged("SalesOrderLine");
					this.OnSalesOrderLineChanged();
				}
			}
		}
		
		[Column(Storage="_RoundTotal", DbType="Int")]
		[DataMember(Order=7)]
		public System.Nullable<int> RoundTotal
		{
			get
			{
				return this._RoundTotal;
			}
			set
			{
				if ((this._RoundTotal != value))
				{
					this.OnRoundTotalChanging(value);
					this.SendPropertyChanging();
					this._RoundTotal = value;
					this.SendPropertyChanged("RoundTotal");
					this.OnRoundTotalChanged();
				}
			}
		}
		
		[Column(Storage="_RWOCreateDate", DbType="DateTime")]
		[DataMember(Order=8)]
		public System.Nullable<System.DateTime> RWOCreateDate
		{
			get
			{
				return this._RWOCreateDate;
			}
			set
			{
				if ((this._RWOCreateDate != value))
				{
					this.OnRWOCreateDateChanging(value);
					this.SendPropertyChanging();
					this._RWOCreateDate = value;
					this.SendPropertyChanged("RWOCreateDate");
					this.OnRWOCreateDateChanged();
				}
			}
		}
		
		[Column(Storage="_WOReviseDate", DbType="DateTime")]
		[DataMember(Order=9)]
		public System.Nullable<System.DateTime> WOReviseDate
		{
			get
			{
				return this._WOReviseDate;
			}
			set
			{
				if ((this._WOReviseDate != value))
				{
					this.OnWOReviseDateChanging(value);
					this.SendPropertyChanging();
					this._WOReviseDate = value;
					this.SendPropertyChanged("WOReviseDate");
					this.OnWOReviseDateChanged();
				}
			}
		}
		
		[Column(Storage="_AmendDate", DbType="DateTime")]
		[DataMember(Order=10)]
		public System.Nullable<System.DateTime> AmendDate
		{
			get
			{
				return this._AmendDate;
			}
			set
			{
				if ((this._AmendDate != value))
				{
					this.OnAmendDateChanging(value);
					this.SendPropertyChanging();
					this._AmendDate = value;
					this.SendPropertyChanged("AmendDate");
					this.OnAmendDateChanged();
				}
			}
		}
		
		[Column(Storage="_Version", DbType="Int")]
		[DataMember(Order=11)]
		public System.Nullable<int> Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[Column(Storage="_FactoryWorkStartDate", DbType="DateTime")]
		[DataMember(Order=12)]
		public System.Nullable<System.DateTime> FactoryWorkStartDate
		{
			get
			{
				return this._FactoryWorkStartDate;
			}
			set
			{
				if ((this._FactoryWorkStartDate != value))
				{
					this.OnFactoryWorkStartDateChanging(value);
					this.SendPropertyChanging();
					this._FactoryWorkStartDate = value;
					this.SendPropertyChanged("FactoryWorkStartDate");
					this.OnFactoryWorkStartDateChanged();
				}
			}
		}
		
		[Column(Storage="_LineWorkStartDate", DbType="DateTime")]
		[DataMember(Order=13)]
		public System.Nullable<System.DateTime> LineWorkStartDate
		{
			get
			{
				return this._LineWorkStartDate;
			}
			set
			{
				if ((this._LineWorkStartDate != value))
				{
					this.OnLineWorkStartDateChanging(value);
					this.SendPropertyChanging();
					this._LineWorkStartDate = value;
					this.SendPropertyChanged("LineWorkStartDate");
					this.OnLineWorkStartDateChanged();
				}
			}
		}
		
		[Column(Storage="_T3Date", DbType="DateTime")]
		[DataMember(Order=14)]
		public System.Nullable<System.DateTime> T3Date
		{
			get
			{
				return this._T3Date;
			}
			set
			{
				if ((this._T3Date != value))
				{
					this.OnT3DateChanging(value);
					this.SendPropertyChanging();
					this._T3Date = value;
					this.SendPropertyChanged("T3Date");
					this.OnT3DateChanged();
				}
			}
		}
		
		[Column(Storage="_AjustT3Date", DbType="DateTime")]
		[DataMember(Order=15)]
		public System.Nullable<System.DateTime> AjustT3Date
		{
			get
			{
				return this._AjustT3Date;
			}
			set
			{
				if ((this._AjustT3Date != value))
				{
					this.OnAjustT3DateChanging(value);
					this.SendPropertyChanging();
					this._AjustT3Date = value;
					this.SendPropertyChanged("AjustT3Date");
					this.OnAjustT3DateChanged();
				}
			}
		}
		
		[Column(Storage="_AjustT3DateConfirm", DbType="NVarChar(40)")]
		[DataMember(Order=16)]
		public string AjustT3DateConfirm
		{
			get
			{
				return this._AjustT3DateConfirm;
			}
			set
			{
				if ((this._AjustT3DateConfirm != value))
				{
					this.OnAjustT3DateConfirmChanging(value);
					this.SendPropertyChanging();
					this._AjustT3DateConfirm = value;
					this.SendPropertyChanged("AjustT3DateConfirm");
					this.OnAjustT3DateConfirmChanged();
				}
			}
		}
		
		[Column(Storage="_RoundWorkOrderExFtyDate", DbType="DateTime")]
		[DataMember(Order=17)]
		public System.Nullable<System.DateTime> RoundWorkOrderExFtyDate
		{
			get
			{
				return this._RoundWorkOrderExFtyDate;
			}
			set
			{
				if ((this._RoundWorkOrderExFtyDate != value))
				{
					this.OnRoundWorkOrderExFtyDateChanging(value);
					this.SendPropertyChanging();
					this._RoundWorkOrderExFtyDate = value;
					this.SendPropertyChanged("RoundWorkOrderExFtyDate");
					this.OnRoundWorkOrderExFtyDateChanged();
				}
			}
		}
		
		[Column(Storage="_FCLExFtyDate", DbType="DateTime")]
		[DataMember(Order=18)]
		public System.Nullable<System.DateTime> FCLExFtyDate
		{
			get
			{
				return this._FCLExFtyDate;
			}
			set
			{
				if ((this._FCLExFtyDate != value))
				{
					this.OnFCLExFtyDateChanging(value);
					this.SendPropertyChanging();
					this._FCLExFtyDate = value;
					this.SendPropertyChanged("FCLExFtyDate");
					this.OnFCLExFtyDateChanged();
				}
			}
		}
		
		[Column(Storage="_LCLExFtyDate", DbType="DateTime")]
		[DataMember(Order=19)]
		public System.Nullable<System.DateTime> LCLExFtyDate
		{
			get
			{
				return this._LCLExFtyDate;
			}
			set
			{
				if ((this._LCLExFtyDate != value))
				{
					this.OnLCLExFtyDateChanging(value);
					this.SendPropertyChanging();
					this._LCLExFtyDate = value;
					this.SendPropertyChanged("LCLExFtyDate");
					this.OnLCLExFtyDateChanged();
				}
			}
		}
		
		[Column(Storage="_FirstStationStartDate", DbType="DateTime")]
		[DataMember(Order=20)]
		public System.Nullable<System.DateTime> FirstStationStartDate
		{
			get
			{
				return this._FirstStationStartDate;
			}
			set
			{
				if ((this._FirstStationStartDate != value))
				{
					this.OnFirstStationStartDateChanging(value);
					this.SendPropertyChanging();
					this._FirstStationStartDate = value;
					this.SendPropertyChanged("FirstStationStartDate");
					this.OnFirstStationStartDateChanged();
				}
			}
		}
		
		[Column(Storage="_FirstQNStartDate", DbType="DateTime")]
		[DataMember(Order=21)]
		public System.Nullable<System.DateTime> FirstQNStartDate
		{
			get
			{
				return this._FirstQNStartDate;
			}
			set
			{
				if ((this._FirstQNStartDate != value))
				{
					this.OnFirstQNStartDateChanging(value);
					this.SendPropertyChanging();
					this._FirstQNStartDate = value;
					this.SendPropertyChanged("FirstQNStartDate");
					this.OnFirstQNStartDateChanged();
				}
			}
		}
		
		[Column(Storage="_DeliveryDate", DbType="DateTime")]
		[DataMember(Order=22)]
		public System.Nullable<System.DateTime> DeliveryDate
		{
			get
			{
				return this._DeliveryDate;
			}
			set
			{
				if ((this._DeliveryDate != value))
				{
					this.OnDeliveryDateChanging(value);
					this.SendPropertyChanging();
					this._DeliveryDate = value;
					this.SendPropertyChanged("DeliveryDate");
					this.OnDeliveryDateChanged();
				}
			}
		}
		
		[Column(Storage="_LastQNExFtyDate", DbType="DateTime")]
		[DataMember(Order=23)]
		public System.Nullable<System.DateTime> LastQNExFtyDate
		{
			get
			{
				return this._LastQNExFtyDate;
			}
			set
			{
				if ((this._LastQNExFtyDate != value))
				{
					this.OnLastQNExFtyDateChanging(value);
					this.SendPropertyChanging();
					this._LastQNExFtyDate = value;
					this.SendPropertyChanged("LastQNExFtyDate");
					this.OnLastQNExFtyDateChanged();
				}
			}
		}
		
		[Column(Storage="_CycleTime", DbType="Int")]
		[DataMember(Order=24)]
		public System.Nullable<int> CycleTime
		{
			get
			{
				return this._CycleTime;
			}
			set
			{
				if ((this._CycleTime != value))
				{
					this.OnCycleTimeChanging(value);
					this.SendPropertyChanging();
					this._CycleTime = value;
					this.SendPropertyChanged("CycleTime");
					this.OnCycleTimeChanged();
				}
			}
		}
		
		[Column(Storage="_OAConfirm", DbType="NVarChar(40)")]
		[DataMember(Order=25)]
		public string OAConfirm
		{
			get
			{
				return this._OAConfirm;
			}
			set
			{
				if ((this._OAConfirm != value))
				{
					this.OnOAConfirmChanging(value);
					this.SendPropertyChanging();
					this._OAConfirm = value;
					this.SendPropertyChanged("OAConfirm");
					this.OnOAConfirmChanged();
				}
			}
		}
		
		[Column(Storage="_OAConfirmDate", DbType="DateTime")]
		[DataMember(Order=26)]
		public System.Nullable<System.DateTime> OAConfirmDate
		{
			get
			{
				return this._OAConfirmDate;
			}
			set
			{
				if ((this._OAConfirmDate != value))
				{
					this.OnOAConfirmDateChanging(value);
					this.SendPropertyChanging();
					this._OAConfirmDate = value;
					this.SendPropertyChanged("OAConfirmDate");
					this.OnOAConfirmDateChanged();
				}
			}
		}
		
		[Column(Storage="_HeaderConfirm", DbType="NVarChar(40)")]
		[DataMember(Order=27)]
		public string HeaderConfirm
		{
			get
			{
				return this._HeaderConfirm;
			}
			set
			{
				if ((this._HeaderConfirm != value))
				{
					this.OnHeaderConfirmChanging(value);
					this.SendPropertyChanging();
					this._HeaderConfirm = value;
					this.SendPropertyChanged("HeaderConfirm");
					this.OnHeaderConfirmChanged();
				}
			}
		}
		
		[Column(Storage="_HeaderConfirmDate", DbType="DateTime")]
		[DataMember(Order=28)]
		public System.Nullable<System.DateTime> HeaderConfirmDate
		{
			get
			{
				return this._HeaderConfirmDate;
			}
			set
			{
				if ((this._HeaderConfirmDate != value))
				{
					this.OnHeaderConfirmDateChanging(value);
					this.SendPropertyChanging();
					this._HeaderConfirmDate = value;
					this.SendPropertyChanged("HeaderConfirmDate");
					this.OnHeaderConfirmDateChanged();
				}
			}
		}
		
		[Column(Storage="_TopConfirm", DbType="NVarChar(40)")]
		[DataMember(Order=29)]
		public string TopConfirm
		{
			get
			{
				return this._TopConfirm;
			}
			set
			{
				if ((this._TopConfirm != value))
				{
					this.OnTopConfirmChanging(value);
					this.SendPropertyChanging();
					this._TopConfirm = value;
					this.SendPropertyChanged("TopConfirm");
					this.OnTopConfirmChanged();
				}
			}
		}
		
		[Column(Storage="_TopConfirmDate", DbType="DateTime")]
		[DataMember(Order=30)]
		public System.Nullable<System.DateTime> TopConfirmDate
		{
			get
			{
				return this._TopConfirmDate;
			}
			set
			{
				if ((this._TopConfirmDate != value))
				{
					this.OnTopConfirmDateChanging(value);
					this.SendPropertyChanging();
					this._TopConfirmDate = value;
					this.SendPropertyChanged("TopConfirmDate");
					this.OnTopConfirmDateChanged();
				}
			}
		}
		
		[Column(Storage="_PPCConfirm", DbType="NVarChar(40)")]
		[DataMember(Order=31)]
		public string PPCConfirm
		{
			get
			{
				return this._PPCConfirm;
			}
			set
			{
				if ((this._PPCConfirm != value))
				{
					this.OnPPCConfirmChanging(value);
					this.SendPropertyChanging();
					this._PPCConfirm = value;
					this.SendPropertyChanged("PPCConfirm");
					this.OnPPCConfirmChanged();
				}
			}
		}
		
		[Column(Storage="_PPCConfirmDate", DbType="DateTime")]
		[DataMember(Order=32)]
		public System.Nullable<System.DateTime> PPCConfirmDate
		{
			get
			{
				return this._PPCConfirmDate;
			}
			set
			{
				if ((this._PPCConfirmDate != value))
				{
					this.OnPPCConfirmDateChanging(value);
					this.SendPropertyChanging();
					this._PPCConfirmDate = value;
					this.SendPropertyChanged("PPCConfirmDate");
					this.OnPPCConfirmDateChanged();
				}
			}
		}
		
		[Column(Storage="_AppliedToPhaseII", DbType="Bit")]
		[DataMember(Order=33)]
		public System.Nullable<bool> AppliedToPhaseII
		{
			get
			{
				return this._AppliedToPhaseII;
			}
			set
			{
				if ((this._AppliedToPhaseII != value))
				{
					this.OnAppliedToPhaseIIChanging(value);
					this.SendPropertyChanging();
					this._AppliedToPhaseII = value;
					this.SendPropertyChanged("AppliedToPhaseII");
					this.OnAppliedToPhaseIIChanged();
				}
			}
		}
		
		[Column(Storage="_AppliedToALL", DbType="Bit")]
		[DataMember(Order=34)]
		public System.Nullable<bool> AppliedToALL
		{
			get
			{
				return this._AppliedToALL;
			}
			set
			{
				if ((this._AppliedToALL != value))
				{
					this.OnAppliedToALLChanging(value);
					this.SendPropertyChanging();
					this._AppliedToALL = value;
					this.SendPropertyChanged("AppliedToALL");
					this.OnAppliedToALLChanged();
				}
			}
		}
		
		[Column(Storage="_AppliedUser", DbType="NVarChar(20)")]
		[DataMember(Order=35)]
		public string AppliedUser
		{
			get
			{
				return this._AppliedUser;
			}
			set
			{
				if ((this._AppliedUser != value))
				{
					this.OnAppliedUserChanging(value);
					this.SendPropertyChanging();
					this._AppliedUser = value;
					this.SendPropertyChanged("AppliedUser");
					this.OnAppliedUserChanged();
				}
			}
		}
		
		[Column(Storage="_AppliedDate", DbType="DateTime")]
		[DataMember(Order=36)]
		public System.Nullable<System.DateTime> AppliedDate
		{
			get
			{
				return this._AppliedDate;
			}
			set
			{
				if ((this._AppliedDate != value))
				{
					this.OnAppliedDateChanging(value);
					this.SendPropertyChanging();
					this._AppliedDate = value;
					this.SendPropertyChanged("AppliedDate");
					this.OnAppliedDateChanged();
				}
			}
		}
		
		[Column(Storage="_WOVersion", DbType="Int")]
		[DataMember(Order=37)]
		public System.Nullable<int> WOVersion
		{
			get
			{
				return this._WOVersion;
			}
			set
			{
				if ((this._WOVersion != value))
				{
					this.OnWOVersionChanging(value);
					this.SendPropertyChanging();
					this._WOVersion = value;
					this.SendPropertyChanged("WOVersion");
					this.OnWOVersionChanged();
				}
			}
		}
		
		[Column(Storage="_ActionStatus", DbType="Int")]
		[DataMember(Order=38)]
		public System.Nullable<int> ActionStatus
		{
			get
			{
				return this._ActionStatus;
			}
			set
			{
				if ((this._ActionStatus != value))
				{
					this.OnActionStatusChanging(value);
					this.SendPropertyChanging();
					this._ActionStatus = value;
					this.SendPropertyChanged("ActionStatus");
					this.OnActionStatusChanged();
				}
			}
		}
		
		[Column(Storage="_ActionStatusDate", DbType="DateTime")]
		[DataMember(Order=39)]
		public System.Nullable<System.DateTime> ActionStatusDate
		{
			get
			{
				return this._ActionStatusDate;
			}
			set
			{
				if ((this._ActionStatusDate != value))
				{
					this.OnActionStatusDateChanging(value);
					this.SendPropertyChanging();
					this._ActionStatusDate = value;
					this.SendPropertyChanged("ActionStatusDate");
					this.OnActionStatusDateChanged();
				}
			}
		}
		
		[Column(Storage="_FirstStation", DbType="DateTime")]
		[DataMember(Order=40)]
		public System.Nullable<System.DateTime> FirstStation
		{
			get
			{
				return this._FirstStation;
			}
			set
			{
				if ((this._FirstStation != value))
				{
					this.OnFirstStationChanging(value);
					this.SendPropertyChanging();
					this._FirstStation = value;
					this.SendPropertyChanged("FirstStation");
					this.OnFirstStationChanged();
				}
			}
		}
		
		[Column(Storage="_NumberOfLine", DbType="Float")]
		[DataMember(Order=41)]
		public System.Nullable<double> NumberOfLine
		{
			get
			{
				return this._NumberOfLine;
			}
			set
			{
				if ((this._NumberOfLine != value))
				{
					this.OnNumberOfLineChanging(value);
					this.SendPropertyChanging();
					this._NumberOfLine = value;
					this.SendPropertyChanged("NumberOfLine");
					this.OnNumberOfLineChanged();
				}
			}
		}
		
		[Column(Storage="_ActualDeliveryDate", DbType="DateTime")]
		[DataMember(Order=42)]
		public System.Nullable<System.DateTime> ActualDeliveryDate
		{
			get
			{
				return this._ActualDeliveryDate;
			}
			set
			{
				if ((this._ActualDeliveryDate != value))
				{
					this.OnActualDeliveryDateChanging(value);
					this.SendPropertyChanging();
					this._ActualDeliveryDate = value;
					this.SendPropertyChanged("ActualDeliveryDate");
					this.OnActualDeliveryDateChanged();
				}
			}
		}
		
		[Column(Storage="_TransitDate", DbType="DateTime")]
		[DataMember(Order=43)]
		public System.Nullable<System.DateTime> TransitDate
		{
			get
			{
				return this._TransitDate;
			}
			set
			{
				if ((this._TransitDate != value))
				{
					this.OnTransitDateChanging(value);
					this.SendPropertyChanging();
					this._TransitDate = value;
					this.SendPropertyChanged("TransitDate");
					this.OnTransitDateChanged();
				}
			}
		}
		
		[Column(Storage="_TransitDateB", DbType="DateTime")]
		[DataMember(Order=44)]
		public System.Nullable<System.DateTime> TransitDateB
		{
			get
			{
				return this._TransitDateB;
			}
			set
			{
				if ((this._TransitDateB != value))
				{
					this.OnTransitDateBChanging(value);
					this.SendPropertyChanging();
					this._TransitDateB = value;
					this.SendPropertyChanged("TransitDateB");
					this.OnTransitDateBChanged();
				}
			}
		}
		
		[Column(Storage="_TransitDateHK", DbType="DateTime")]
		[DataMember(Order=45)]
		public System.Nullable<System.DateTime> TransitDateHK
		{
			get
			{
				return this._TransitDateHK;
			}
			set
			{
				if ((this._TransitDateHK != value))
				{
					this.OnTransitDateHKChanging(value);
					this.SendPropertyChanging();
					this._TransitDateHK = value;
					this.SendPropertyChanged("TransitDateHK");
					this.OnTransitDateHKChanged();
				}
			}
		}
		
		[Column(Storage="_TransitDateNZ", DbType="DateTime")]
		[DataMember(Order=46)]
		public System.Nullable<System.DateTime> TransitDateNZ
		{
			get
			{
				return this._TransitDateNZ;
			}
			set
			{
				if ((this._TransitDateNZ != value))
				{
					this.OnTransitDateNZChanging(value);
					this.SendPropertyChanging();
					this._TransitDateNZ = value;
					this.SendPropertyChanged("TransitDateNZ");
					this.OnTransitDateNZChanged();
				}
			}
		}
		
		[Column(Storage="_TransitDateUK", DbType="DateTime")]
		[DataMember(Order=47)]
		public System.Nullable<System.DateTime> TransitDateUK
		{
			get
			{
				return this._TransitDateUK;
			}
			set
			{
				if ((this._TransitDateUK != value))
				{
					this.OnTransitDateUKChanging(value);
					this.SendPropertyChanging();
					this._TransitDateUK = value;
					this.SendPropertyChanged("TransitDateUK");
					this.OnTransitDateUKChanged();
				}
			}
		}
		
		[Column(Storage="_TransitDateUSA", DbType="DateTime")]
		[DataMember(Order=48)]
		public System.Nullable<System.DateTime> TransitDateUSA
		{
			get
			{
				return this._TransitDateUSA;
			}
			set
			{
				if ((this._TransitDateUSA != value))
				{
					this.OnTransitDateUSAChanging(value);
					this.SendPropertyChanging();
					this._TransitDateUSA = value;
					this.SendPropertyChanged("TransitDateUSA");
					this.OnTransitDateUSAChanged();
				}
			}
		}
		
		[Column(Storage="_PlannedShptQtyB", DbType="Int")]
		[DataMember(Order=49)]
		public System.Nullable<int> PlannedShptQtyB
		{
			get
			{
				return this._PlannedShptQtyB;
			}
			set
			{
				if ((this._PlannedShptQtyB != value))
				{
					this.OnPlannedShptQtyBChanging(value);
					this.SendPropertyChanging();
					this._PlannedShptQtyB = value;
					this.SendPropertyChanged("PlannedShptQtyB");
					this.OnPlannedShptQtyBChanged();
				}
			}
		}
		
		[Column(Storage="_PlannedShptQtyHK", DbType="Int")]
		[DataMember(Order=50)]
		public System.Nullable<int> PlannedShptQtyHK
		{
			get
			{
				return this._PlannedShptQtyHK;
			}
			set
			{
				if ((this._PlannedShptQtyHK != value))
				{
					this.OnPlannedShptQtyHKChanging(value);
					this.SendPropertyChanging();
					this._PlannedShptQtyHK = value;
					this.SendPropertyChanged("PlannedShptQtyHK");
					this.OnPlannedShptQtyHKChanged();
				}
			}
		}
		
		[Column(Storage="_PlannedShptQtyNZ", DbType="Int")]
		[DataMember(Order=51)]
		public System.Nullable<int> PlannedShptQtyNZ
		{
			get
			{
				return this._PlannedShptQtyNZ;
			}
			set
			{
				if ((this._PlannedShptQtyNZ != value))
				{
					this.OnPlannedShptQtyNZChanging(value);
					this.SendPropertyChanging();
					this._PlannedShptQtyNZ = value;
					this.SendPropertyChanged("PlannedShptQtyNZ");
					this.OnPlannedShptQtyNZChanged();
				}
			}
		}
		
		[Column(Storage="_PlannedShptQtyUK", DbType="Int")]
		[DataMember(Order=52)]
		public System.Nullable<int> PlannedShptQtyUK
		{
			get
			{
				return this._PlannedShptQtyUK;
			}
			set
			{
				if ((this._PlannedShptQtyUK != value))
				{
					this.OnPlannedShptQtyUKChanging(value);
					this.SendPropertyChanging();
					this._PlannedShptQtyUK = value;
					this.SendPropertyChanged("PlannedShptQtyUK");
					this.OnPlannedShptQtyUKChanged();
				}
			}
		}
		
		[Column(Storage="_PlannedShptQtyUSA", DbType="Int")]
		[DataMember(Order=53)]
		public System.Nullable<int> PlannedShptQtyUSA
		{
			get
			{
				return this._PlannedShptQtyUSA;
			}
			set
			{
				if ((this._PlannedShptQtyUSA != value))
				{
					this.OnPlannedShptQtyUSAChanging(value);
					this.SendPropertyChanging();
					this._PlannedShptQtyUSA = value;
					this.SendPropertyChanged("PlannedShptQtyUSA");
					this.OnPlannedShptQtyUSAChanged();
				}
			}
		}
		
		[Column(Storage="_ActualShptQtyB", DbType="Int")]
		[DataMember(Order=54)]
		public System.Nullable<int> ActualShptQtyB
		{
			get
			{
				return this._ActualShptQtyB;
			}
			set
			{
				if ((this._ActualShptQtyB != value))
				{
					this.OnActualShptQtyBChanging(value);
					this.SendPropertyChanging();
					this._ActualShptQtyB = value;
					this.SendPropertyChanged("ActualShptQtyB");
					this.OnActualShptQtyBChanged();
				}
			}
		}
		
		[Column(Storage="_ActualShptQtyHK", DbType="Int")]
		[DataMember(Order=55)]
		public System.Nullable<int> ActualShptQtyHK
		{
			get
			{
				return this._ActualShptQtyHK;
			}
			set
			{
				if ((this._ActualShptQtyHK != value))
				{
					this.OnActualShptQtyHKChanging(value);
					this.SendPropertyChanging();
					this._ActualShptQtyHK = value;
					this.SendPropertyChanged("ActualShptQtyHK");
					this.OnActualShptQtyHKChanged();
				}
			}
		}
		
		[Column(Storage="_ActualShptQtyNZ", DbType="Int")]
		[DataMember(Order=56)]
		public System.Nullable<int> ActualShptQtyNZ
		{
			get
			{
				return this._ActualShptQtyNZ;
			}
			set
			{
				if ((this._ActualShptQtyNZ != value))
				{
					this.OnActualShptQtyNZChanging(value);
					this.SendPropertyChanging();
					this._ActualShptQtyNZ = value;
					this.SendPropertyChanged("ActualShptQtyNZ");
					this.OnActualShptQtyNZChanged();
				}
			}
		}
		
		[Column(Storage="_ActualShptQtyUK", DbType="Int")]
		[DataMember(Order=57)]
		public System.Nullable<int> ActualShptQtyUK
		{
			get
			{
				return this._ActualShptQtyUK;
			}
			set
			{
				if ((this._ActualShptQtyUK != value))
				{
					this.OnActualShptQtyUKChanging(value);
					this.SendPropertyChanging();
					this._ActualShptQtyUK = value;
					this.SendPropertyChanged("ActualShptQtyUK");
					this.OnActualShptQtyUKChanged();
				}
			}
		}
		
		[Column(Storage="_ActualShptQtyUSA", DbType="Int")]
		[DataMember(Order=58)]
		public System.Nullable<int> ActualShptQtyUSA
		{
			get
			{
				return this._ActualShptQtyUSA;
			}
			set
			{
				if ((this._ActualShptQtyUSA != value))
				{
					this.OnActualShptQtyUSAChanging(value);
					this.SendPropertyChanging();
					this._ActualShptQtyUSA = value;
					this.SendPropertyChanged("ActualShptQtyUSA");
					this.OnActualShptQtyUSAChanged();
				}
			}
		}
		
		[Column(Storage="_SpecialFactory", DbType="NVarChar(50)")]
		[DataMember(Order=59)]
		public string SpecialFactory
		{
			get
			{
				return this._SpecialFactory;
			}
			set
			{
				if ((this._SpecialFactory != value))
				{
					this.OnSpecialFactoryChanging(value);
					this.SendPropertyChanging();
					this._SpecialFactory = value;
					this.SendPropertyChanged("SpecialFactory");
					this.OnSpecialFactoryChanged();
				}
			}
		}
		
		[Column(Storage="_NeedAdjustT3Date", DbType="VarChar(10)")]
		[DataMember(Order=60)]
		public string NeedAdjustT3Date
		{
			get
			{
				return this._NeedAdjustT3Date;
			}
			set
			{
				if ((this._NeedAdjustT3Date != value))
				{
					this.OnNeedAdjustT3DateChanging(value);
					this.SendPropertyChanging();
					this._NeedAdjustT3Date = value;
					this.SendPropertyChanged("NeedAdjustT3Date");
					this.OnNeedAdjustT3DateChanged();
				}
			}
		}
		
		[Column(Storage="_aT3DateAccept", DbType="VarChar(10)")]
		[DataMember(Order=61)]
		public string aT3DateAccept
		{
			get
			{
				return this._aT3DateAccept;
			}
			set
			{
				if ((this._aT3DateAccept != value))
				{
					this.OnaT3DateAcceptChanging(value);
					this.SendPropertyChanging();
					this._aT3DateAccept = value;
					this.SendPropertyChanged("aT3DateAccept");
					this.OnaT3DateAcceptChanged();
				}
			}
		}
		
		[Association(Name="RoundWorkOrder_RoundWorkOrderDetail", Storage="_RoundWorkOrderDetails", ThisKey="Company,SalesOrderNo,WorkOrderNo,ColorCode,RoundNo", OtherKey="Company,SalesOrderNo,WorkOrderNo,ColorCode,RoundNo")]
		[DataMember(Order=62, EmitDefaultValue=false)]
		public EntitySet<RoundWorkOrderDetail> RoundWorkOrderDetails
		{
			get
			{
				if ((this.serializing 
							&& (this._RoundWorkOrderDetails.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._RoundWorkOrderDetails;
			}
			set
			{
				this._RoundWorkOrderDetails.Assign(value);
			}
		}
		
		[Association(Name="RoundWorkOrder_RoundWorkOrderII", Storage="_RoundWorkOrderIIs", ThisKey="Company,SalesOrderNo,WorkOrderNo,ColorCode,RoundNo", OtherKey="Company,SalesOrderNo,WorkOrderNo,ColorCode,RoundNo")]
		[DataMember(Order=63, EmitDefaultValue=false)]
		public EntitySet<RoundWorkOrderII> RoundWorkOrderIIs
		{
			get
			{
				if ((this.serializing 
							&& (this._RoundWorkOrderIIs.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._RoundWorkOrderIIs;
			}
			set
			{
				this._RoundWorkOrderIIs.Assign(value);
			}
		}
		
		[Association(Name="RoundWorkOrder_RWOChooseFW", Storage="_RWOChooseFWs", ThisKey="Company,SalesOrderNo,WorkOrderNo,ColorCode,RoundNo", OtherKey="Company,SalesOrderNo,WorkOrderNo,ColorCode,RoundNo")]
		[DataMember(Order=64, EmitDefaultValue=false)]
		public EntitySet<RWOChooseFW> RWOChooseFWs
		{
			get
			{
				if ((this.serializing 
							&& (this._RWOChooseFWs.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._RWOChooseFWs;
			}
			set
			{
				this._RWOChooseFWs.Assign(value);
			}
		}
		
		[Association(Name="WorkOrderColor_RoundWorkOrder", Storage="_WorkOrderColor", ThisKey="Company,SalesOrderNo,WorkOrderNo,ColorCode", OtherKey="Company,SalesOrderNo,WorkOrderNo,ColorCode", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public WorkOrderColor WorkOrderColor
		{
			get
			{
				return this._WorkOrderColor.Entity;
			}
			set
			{
				WorkOrderColor previousValue = this._WorkOrderColor.Entity;
				if (((previousValue != value) 
							|| (this._WorkOrderColor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WorkOrderColor.Entity = null;
						previousValue.RoundWorkOrders.Remove(this);
					}
					this._WorkOrderColor.Entity = value;
					if ((value != null))
					{
						value.RoundWorkOrders.Add(this);
						this._Company = value.Company;
						this._SalesOrderNo = value.SalesOrderNo;
						this._WorkOrderNo = value.WorkOrderNo;
						this._ColorCode = value.ColorCode;
					}
					else
					{
						this._Company = default(string);
						this._SalesOrderNo = default(string);
						this._WorkOrderNo = default(string);
						this._ColorCode = default(string);
					}
					this.SendPropertyChanged("WorkOrderColor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RoundWorkOrderDetails(RoundWorkOrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.RoundWorkOrder = this;
		}
		
		private void detach_RoundWorkOrderDetails(RoundWorkOrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.RoundWorkOrder = null;
		}
		
		private void attach_RoundWorkOrderIIs(RoundWorkOrderII entity)
		{
			this.SendPropertyChanging();
			entity.RoundWorkOrder = this;
		}
		
		private void detach_RoundWorkOrderIIs(RoundWorkOrderII entity)
		{
			this.SendPropertyChanging();
			entity.RoundWorkOrder = null;
		}
		
		private void attach_RWOChooseFWs(RWOChooseFW entity)
		{
			this.SendPropertyChanging();
			entity.RoundWorkOrder = this;
		}
		
		private void detach_RWOChooseFWs(RWOChooseFW entity)
		{
			this.SendPropertyChanging();
			entity.RoundWorkOrder = null;
		}
		
		private void Initialize()
		{
			this._RoundWorkOrderDetails = new EntitySet<RoundWorkOrderDetail>(new Action<RoundWorkOrderDetail>(this.attach_RoundWorkOrderDetails), new Action<RoundWorkOrderDetail>(this.detach_RoundWorkOrderDetails));
			this._RoundWorkOrderIIs = new EntitySet<RoundWorkOrderII>(new Action<RoundWorkOrderII>(this.attach_RoundWorkOrderIIs), new Action<RoundWorkOrderII>(this.detach_RoundWorkOrderIIs));
			this._RWOChooseFWs = new EntitySet<RWOChooseFW>(new Action<RWOChooseFW>(this.attach_RWOChooseFWs), new Action<RWOChooseFW>(this.detach_RWOChooseFWs));
			this._WorkOrderColor = default(EntityRef<WorkOrderColor>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[OnSerializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[OnSerialized()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[Table(Name="dbo.LWPM_Calendar")]
	[DataContract()]
	public partial class LWPM_Calendar : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TPLANT;
		
		private System.DateTime _DATE1;
		
		private int _WKNO;
		
		private System.Nullable<int> _SECTO;
		
		private System.Nullable<int> _SECTT;
		
		private System.Nullable<int> _SECTC;
		
		private string _WDAY;
		
		private System.Nullable<int> _SECTT1;
		
		private System.Nullable<int> _OSECT;
		
		private string _WeekDay;
		
		private System.Nullable<int> _WeekOrder;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTPLANTChanging(string value);
    partial void OnTPLANTChanged();
    partial void OnDATE1Changing(System.DateTime value);
    partial void OnDATE1Changed();
    partial void OnWKNOChanging(int value);
    partial void OnWKNOChanged();
    partial void OnSECTOChanging(System.Nullable<int> value);
    partial void OnSECTOChanged();
    partial void OnSECTTChanging(System.Nullable<int> value);
    partial void OnSECTTChanged();
    partial void OnSECTCChanging(System.Nullable<int> value);
    partial void OnSECTCChanged();
    partial void OnWDAYChanging(string value);
    partial void OnWDAYChanged();
    partial void OnSECTT1Changing(System.Nullable<int> value);
    partial void OnSECTT1Changed();
    partial void OnOSECTChanging(System.Nullable<int> value);
    partial void OnOSECTChanged();
    partial void OnWeekDayChanging(string value);
    partial void OnWeekDayChanged();
    partial void OnWeekOrderChanging(System.Nullable<int> value);
    partial void OnWeekOrderChanged();
    #endregion
		
		public LWPM_Calendar()
		{
			this.Initialize();
		}
		
		[Column(Storage="_TPLANT", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=1)]
		public string TPLANT
		{
			get
			{
				return this._TPLANT;
			}
			set
			{
				if ((this._TPLANT != value))
				{
					this.OnTPLANTChanging(value);
					this.SendPropertyChanging();
					this._TPLANT = value;
					this.SendPropertyChanged("TPLANT");
					this.OnTPLANTChanged();
				}
			}
		}
		
		[Column(Storage="_DATE1", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		[DataMember(Order=2)]
		public System.DateTime DATE1
		{
			get
			{
				return this._DATE1;
			}
			set
			{
				if ((this._DATE1 != value))
				{
					this.OnDATE1Changing(value);
					this.SendPropertyChanging();
					this._DATE1 = value;
					this.SendPropertyChanged("DATE1");
					this.OnDATE1Changed();
				}
			}
		}
		
		[Column(Storage="_WKNO", DbType="Int NOT NULL")]
		[DataMember(Order=3)]
		public int WKNO
		{
			get
			{
				return this._WKNO;
			}
			set
			{
				if ((this._WKNO != value))
				{
					this.OnWKNOChanging(value);
					this.SendPropertyChanging();
					this._WKNO = value;
					this.SendPropertyChanged("WKNO");
					this.OnWKNOChanged();
				}
			}
		}
		
		[Column(Storage="_SECTO", DbType="Int")]
		[DataMember(Order=4)]
		public System.Nullable<int> SECTO
		{
			get
			{
				return this._SECTO;
			}
			set
			{
				if ((this._SECTO != value))
				{
					this.OnSECTOChanging(value);
					this.SendPropertyChanging();
					this._SECTO = value;
					this.SendPropertyChanged("SECTO");
					this.OnSECTOChanged();
				}
			}
		}
		
		[Column(Storage="_SECTT", DbType="Int")]
		[DataMember(Order=5)]
		public System.Nullable<int> SECTT
		{
			get
			{
				return this._SECTT;
			}
			set
			{
				if ((this._SECTT != value))
				{
					this.OnSECTTChanging(value);
					this.SendPropertyChanging();
					this._SECTT = value;
					this.SendPropertyChanged("SECTT");
					this.OnSECTTChanged();
				}
			}
		}
		
		[Column(Storage="_SECTC", DbType="Int")]
		[DataMember(Order=6)]
		public System.Nullable<int> SECTC
		{
			get
			{
				return this._SECTC;
			}
			set
			{
				if ((this._SECTC != value))
				{
					this.OnSECTCChanging(value);
					this.SendPropertyChanging();
					this._SECTC = value;
					this.SendPropertyChanged("SECTC");
					this.OnSECTCChanged();
				}
			}
		}
		
		[Column(Storage="_WDAY", DbType="VarChar(3)")]
		[DataMember(Order=7)]
		public string WDAY
		{
			get
			{
				return this._WDAY;
			}
			set
			{
				if ((this._WDAY != value))
				{
					this.OnWDAYChanging(value);
					this.SendPropertyChanging();
					this._WDAY = value;
					this.SendPropertyChanged("WDAY");
					this.OnWDAYChanged();
				}
			}
		}
		
		[Column(Storage="_SECTT1", DbType="Int")]
		[DataMember(Order=8)]
		public System.Nullable<int> SECTT1
		{
			get
			{
				return this._SECTT1;
			}
			set
			{
				if ((this._SECTT1 != value))
				{
					this.OnSECTT1Changing(value);
					this.SendPropertyChanging();
					this._SECTT1 = value;
					this.SendPropertyChanged("SECTT1");
					this.OnSECTT1Changed();
				}
			}
		}
		
		[Column(Storage="_OSECT", DbType="Int")]
		[DataMember(Order=9)]
		public System.Nullable<int> OSECT
		{
			get
			{
				return this._OSECT;
			}
			set
			{
				if ((this._OSECT != value))
				{
					this.OnOSECTChanging(value);
					this.SendPropertyChanging();
					this._OSECT = value;
					this.SendPropertyChanged("OSECT");
					this.OnOSECTChanged();
				}
			}
		}
		
		[Column(Storage="_WeekDay", DbType="NVarChar(30)")]
		[DataMember(Order=10)]
		public string WeekDay
		{
			get
			{
				return this._WeekDay;
			}
			set
			{
				if ((this._WeekDay != value))
				{
					this.OnWeekDayChanging(value);
					this.SendPropertyChanging();
					this._WeekDay = value;
					this.SendPropertyChanged("WeekDay");
					this.OnWeekDayChanged();
				}
			}
		}
		
		[Column(Storage="_WeekOrder", DbType="Int")]
		[DataMember(Order=11)]
		public System.Nullable<int> WeekOrder
		{
			get
			{
				return this._WeekOrder;
			}
			set
			{
				if ((this._WeekOrder != value))
				{
					this.OnWeekOrderChanging(value);
					this.SendPropertyChanging();
					this._WeekOrder = value;
					this.SendPropertyChanged("WeekOrder");
					this.OnWeekOrderChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[Table(Name="dbo.ShipmentSchedule")]
	[DataContract()]
	public partial class ShipmentSchedule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Item;
		
		private System.Nullable<int> _ItemNo;
		
		private string _Style;
		
		private string _Product;
		
		private string _ProjectNo;
		
		private string _CustomerPO;
		
		private string _Client;
		
		private string _Curr;
		
		private System.Nullable<System.DateTime> _ETD;
		
		private System.Nullable<int> _Quantity;
		
		private System.Nullable<decimal> _ClientPrice;
		
		private string _Status;
		
		private System.Nullable<decimal> _CMTPrice;
		
		private System.Nullable<decimal> _MaterialPrice;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemChanging(int value);
    partial void OnItemChanged();
    partial void OnItemNoChanging(System.Nullable<int> value);
    partial void OnItemNoChanged();
    partial void OnStyleChanging(string value);
    partial void OnStyleChanged();
    partial void OnProductChanging(string value);
    partial void OnProductChanged();
    partial void OnProjectNoChanging(string value);
    partial void OnProjectNoChanged();
    partial void OnCustomerPOChanging(string value);
    partial void OnCustomerPOChanged();
    partial void OnClientChanging(string value);
    partial void OnClientChanged();
    partial void OnCurrChanging(string value);
    partial void OnCurrChanged();
    partial void OnETDChanging(System.Nullable<System.DateTime> value);
    partial void OnETDChanged();
    partial void OnQuantityChanging(System.Nullable<int> value);
    partial void OnQuantityChanged();
    partial void OnClientPriceChanging(System.Nullable<decimal> value);
    partial void OnClientPriceChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnCMTPriceChanging(System.Nullable<decimal> value);
    partial void OnCMTPriceChanged();
    partial void OnMaterialPriceChanging(System.Nullable<decimal> value);
    partial void OnMaterialPriceChanged();
    #endregion
		
		public ShipmentSchedule()
		{
			this.Initialize();
		}
		
		[Column(Storage="_Item", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=1)]
		public int Item
		{
			get
			{
				return this._Item;
			}
			set
			{
				if ((this._Item != value))
				{
					this.OnItemChanging(value);
					this.SendPropertyChanging();
					this._Item = value;
					this.SendPropertyChanged("Item");
					this.OnItemChanged();
				}
			}
		}
		
		[Column(Storage="_ItemNo", DbType="Int")]
		[DataMember(Order=2)]
		public System.Nullable<int> ItemNo
		{
			get
			{
				return this._ItemNo;
			}
			set
			{
				if ((this._ItemNo != value))
				{
					this.OnItemNoChanging(value);
					this.SendPropertyChanging();
					this._ItemNo = value;
					this.SendPropertyChanged("ItemNo");
					this.OnItemNoChanged();
				}
			}
		}
		
		[Column(Storage="_Style", DbType="NVarChar(20)")]
		[DataMember(Order=3)]
		public string Style
		{
			get
			{
				return this._Style;
			}
			set
			{
				if ((this._Style != value))
				{
					this.OnStyleChanging(value);
					this.SendPropertyChanging();
					this._Style = value;
					this.SendPropertyChanged("Style");
					this.OnStyleChanged();
				}
			}
		}
		
		[Column(Storage="_Product", DbType="NVarChar(20)")]
		[DataMember(Order=4)]
		public string Product
		{
			get
			{
				return this._Product;
			}
			set
			{
				if ((this._Product != value))
				{
					this.OnProductChanging(value);
					this.SendPropertyChanging();
					this._Product = value;
					this.SendPropertyChanged("Product");
					this.OnProductChanged();
				}
			}
		}
		
		[Column(Storage="_ProjectNo", DbType="NVarChar(50)")]
		[DataMember(Order=5)]
		public string ProjectNo
		{
			get
			{
				return this._ProjectNo;
			}
			set
			{
				if ((this._ProjectNo != value))
				{
					this.OnProjectNoChanging(value);
					this.SendPropertyChanging();
					this._ProjectNo = value;
					this.SendPropertyChanged("ProjectNo");
					this.OnProjectNoChanged();
				}
			}
		}
		
		[Column(Storage="_CustomerPO", DbType="NVarChar(20)")]
		[DataMember(Order=6)]
		public string CustomerPO
		{
			get
			{
				return this._CustomerPO;
			}
			set
			{
				if ((this._CustomerPO != value))
				{
					this.OnCustomerPOChanging(value);
					this.SendPropertyChanging();
					this._CustomerPO = value;
					this.SendPropertyChanged("CustomerPO");
					this.OnCustomerPOChanged();
				}
			}
		}
		
		[Column(Storage="_Client", DbType="NVarChar(20)")]
		[DataMember(Order=7)]
		public string Client
		{
			get
			{
				return this._Client;
			}
			set
			{
				if ((this._Client != value))
				{
					this.OnClientChanging(value);
					this.SendPropertyChanging();
					this._Client = value;
					this.SendPropertyChanged("Client");
					this.OnClientChanged();
				}
			}
		}
		
		[Column(Storage="_Curr", DbType="NVarChar(20)")]
		[DataMember(Order=8)]
		public string Curr
		{
			get
			{
				return this._Curr;
			}
			set
			{
				if ((this._Curr != value))
				{
					this.OnCurrChanging(value);
					this.SendPropertyChanging();
					this._Curr = value;
					this.SendPropertyChanged("Curr");
					this.OnCurrChanged();
				}
			}
		}
		
		[Column(Storage="_ETD", DbType="DateTime")]
		[DataMember(Order=9)]
		public System.Nullable<System.DateTime> ETD
		{
			get
			{
				return this._ETD;
			}
			set
			{
				if ((this._ETD != value))
				{
					this.OnETDChanging(value);
					this.SendPropertyChanging();
					this._ETD = value;
					this.SendPropertyChanged("ETD");
					this.OnETDChanged();
				}
			}
		}
		
		[Column(Storage="_Quantity", DbType="Int")]
		[DataMember(Order=10)]
		public System.Nullable<int> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[Column(Storage="_ClientPrice", DbType="Decimal(10,4)")]
		[DataMember(Order=11)]
		public System.Nullable<decimal> ClientPrice
		{
			get
			{
				return this._ClientPrice;
			}
			set
			{
				if ((this._ClientPrice != value))
				{
					this.OnClientPriceChanging(value);
					this.SendPropertyChanging();
					this._ClientPrice = value;
					this.SendPropertyChanged("ClientPrice");
					this.OnClientPriceChanged();
				}
			}
		}
		
		[Column(Storage="_Status", DbType="NVarChar(20)")]
		[DataMember(Order=12)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[Column(Storage="_CMTPrice", DbType="Decimal(10,4)")]
		[DataMember(Order=13)]
		public System.Nullable<decimal> CMTPrice
		{
			get
			{
				return this._CMTPrice;
			}
			set
			{
				if ((this._CMTPrice != value))
				{
					this.OnCMTPriceChanging(value);
					this.SendPropertyChanging();
					this._CMTPrice = value;
					this.SendPropertyChanged("CMTPrice");
					this.OnCMTPriceChanged();
				}
			}
		}
		
		[Column(Storage="_MaterialPrice", DbType="Decimal(10,4)")]
		[DataMember(Order=14)]
		public System.Nullable<decimal> MaterialPrice
		{
			get
			{
				return this._MaterialPrice;
			}
			set
			{
				if ((this._MaterialPrice != value))
				{
					this.OnMaterialPriceChanging(value);
					this.SendPropertyChanging();
					this._MaterialPrice = value;
					this.SendPropertyChanged("MaterialPrice");
					this.OnMaterialPriceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[Table(Name="dbo.WorkOrderCategory")]
	[DataContract()]
	public partial class WorkOrderCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Company;
		
		private string _SalesOrderNo;
		
		private string _WorkOrderNo;
		
		private string _ProductCategory;
		
		private string _Brand;
		
		private string _Category;
		
		private System.Nullable<int> _FlatOrHalfFold;
		
		private System.Nullable<int> _Hookandeye;
		
		private string _ShoulderStrapAdjustment;
		
		private string _SizeDispatching;
		
		private System.Nullable<bool> _BasicRequisition1;
		
		private System.Nullable<bool> _BasicRequisition2;
		
		private System.Nullable<bool> _BasicRequisition3;
		
		private string _ProwBoard;
		
		private string _ExportCtnMeasurement;
		
		private System.Nullable<bool> _CartonBeltRequisition;
		
		private string _InnerBoxMeasurement;
		
		private System.Nullable<bool> _Sky_SingleDouble;
		
		private string _Sky_Desc;
		
		private System.Nullable<bool> _Boat_SingleDouble;
		
		private string _Boat_Desc;
		
		private System.Nullable<bool> _SideMark_SingleDouble;
		
		private string _SideMark_Desc;
		
		private System.Nullable<bool> _SideMarkPaper_SingleDouble;
		
		private string _SideMarkPaper_Desc;
		
		private System.Nullable<bool> _InnerBoxMark_SingleDouble;
		
		private string _InnerBoxMark_Desc;
		
		private string _MarkerA;
		
		private string _MarkerB;
		
		private string _MarkerC;
		
		private string _MarkerD;
		
		private string _MarkerE;
		
		private string _BrandA;
		
		private string _BrandB;
		
		private string _BrandC;
		
		private string _BrandD;
		
		private string _CustomDecalsA;
		
		private string _CustomDecalsB;
		
		private string _CustomDecalsC;
		
		private string _CustomDecalsD;
		
		private string _CustomDecalsE;
		
		private string _CustomDecalsF;
		
		private string _PlasticBags_Material;
		
		private string _PlasticBags_Depth;
		
		private string _PlasticNeedleStyle;
		
		private string _PlasticNeedleLength;
		
		private string _ClothesHorseStyle;
		
		private string _PackReference;
		
		private string _LabelReference;
		
		private string _PackMethod;
		
		private string _Img;
		
		private string _StyleNo;
		
		private string _StyleDesc;
		
		private string _CasingMethod;
		
		private EntitySet<WorkOrderCategoryCup> _WorkOrderCategoryCups;
		
		private EntitySet<WorkOrderCategoryLabeling> _WorkOrderCategoryLabelings;
		
		private EntitySet<WorkOrderCategoryPacking> _WorkOrderCategoryPackings;
		
		private EntityRef<WorkOrder> _WorkOrder;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnSalesOrderNoChanging(string value);
    partial void OnSalesOrderNoChanged();
    partial void OnWorkOrderNoChanging(string value);
    partial void OnWorkOrderNoChanged();
    partial void OnProductCategoryChanging(string value);
    partial void OnProductCategoryChanged();
    partial void OnBrandChanging(string value);
    partial void OnBrandChanged();
    partial void OnCategoryChanging(string value);
    partial void OnCategoryChanged();
    partial void OnFlatOrHalfFoldChanging(System.Nullable<int> value);
    partial void OnFlatOrHalfFoldChanged();
    partial void OnHookandeyeChanging(System.Nullable<int> value);
    partial void OnHookandeyeChanged();
    partial void OnShoulderStrapAdjustmentChanging(string value);
    partial void OnShoulderStrapAdjustmentChanged();
    partial void OnSizeDispatchingChanging(string value);
    partial void OnSizeDispatchingChanged();
    partial void OnBasicRequisition1Changing(System.Nullable<bool> value);
    partial void OnBasicRequisition1Changed();
    partial void OnBasicRequisition2Changing(System.Nullable<bool> value);
    partial void OnBasicRequisition2Changed();
    partial void OnBasicRequisition3Changing(System.Nullable<bool> value);
    partial void OnBasicRequisition3Changed();
    partial void OnProwBoardChanging(string value);
    partial void OnProwBoardChanged();
    partial void OnExportCtnMeasurementChanging(string value);
    partial void OnExportCtnMeasurementChanged();
    partial void OnCartonBeltRequisitionChanging(System.Nullable<bool> value);
    partial void OnCartonBeltRequisitionChanged();
    partial void OnInnerBoxMeasurementChanging(string value);
    partial void OnInnerBoxMeasurementChanged();
    partial void OnSky_SingleDoubleChanging(System.Nullable<bool> value);
    partial void OnSky_SingleDoubleChanged();
    partial void OnSky_DescChanging(string value);
    partial void OnSky_DescChanged();
    partial void OnBoat_SingleDoubleChanging(System.Nullable<bool> value);
    partial void OnBoat_SingleDoubleChanged();
    partial void OnBoat_DescChanging(string value);
    partial void OnBoat_DescChanged();
    partial void OnSideMark_SingleDoubleChanging(System.Nullable<bool> value);
    partial void OnSideMark_SingleDoubleChanged();
    partial void OnSideMark_DescChanging(string value);
    partial void OnSideMark_DescChanged();
    partial void OnSideMarkPaper_SingleDoubleChanging(System.Nullable<bool> value);
    partial void OnSideMarkPaper_SingleDoubleChanged();
    partial void OnSideMarkPaper_DescChanging(string value);
    partial void OnSideMarkPaper_DescChanged();
    partial void OnInnerBoxMark_SingleDoubleChanging(System.Nullable<bool> value);
    partial void OnInnerBoxMark_SingleDoubleChanged();
    partial void OnInnerBoxMark_DescChanging(string value);
    partial void OnInnerBoxMark_DescChanged();
    partial void OnMarkerAChanging(string value);
    partial void OnMarkerAChanged();
    partial void OnMarkerBChanging(string value);
    partial void OnMarkerBChanged();
    partial void OnMarkerCChanging(string value);
    partial void OnMarkerCChanged();
    partial void OnMarkerDChanging(string value);
    partial void OnMarkerDChanged();
    partial void OnMarkerEChanging(string value);
    partial void OnMarkerEChanged();
    partial void OnBrandAChanging(string value);
    partial void OnBrandAChanged();
    partial void OnBrandBChanging(string value);
    partial void OnBrandBChanged();
    partial void OnBrandCChanging(string value);
    partial void OnBrandCChanged();
    partial void OnBrandDChanging(string value);
    partial void OnBrandDChanged();
    partial void OnCustomDecalsAChanging(string value);
    partial void OnCustomDecalsAChanged();
    partial void OnCustomDecalsBChanging(string value);
    partial void OnCustomDecalsBChanged();
    partial void OnCustomDecalsCChanging(string value);
    partial void OnCustomDecalsCChanged();
    partial void OnCustomDecalsDChanging(string value);
    partial void OnCustomDecalsDChanged();
    partial void OnCustomDecalsEChanging(string value);
    partial void OnCustomDecalsEChanged();
    partial void OnCustomDecalsFChanging(string value);
    partial void OnCustomDecalsFChanged();
    partial void OnPlasticBags_MaterialChanging(string value);
    partial void OnPlasticBags_MaterialChanged();
    partial void OnPlasticBags_DepthChanging(string value);
    partial void OnPlasticBags_DepthChanged();
    partial void OnPlasticNeedleStyleChanging(string value);
    partial void OnPlasticNeedleStyleChanged();
    partial void OnPlasticNeedleLengthChanging(string value);
    partial void OnPlasticNeedleLengthChanged();
    partial void OnClothesHorseStyleChanging(string value);
    partial void OnClothesHorseStyleChanged();
    partial void OnPackReferenceChanging(string value);
    partial void OnPackReferenceChanged();
    partial void OnLabelReferenceChanging(string value);
    partial void OnLabelReferenceChanged();
    partial void OnPackMethodChanging(string value);
    partial void OnPackMethodChanged();
    partial void OnImgChanging(string value);
    partial void OnImgChanged();
    partial void OnStyleNoChanging(string value);
    partial void OnStyleNoChanged();
    partial void OnStyleDescChanging(string value);
    partial void OnStyleDescChanged();
    partial void OnCasingMethodChanging(string value);
    partial void OnCasingMethodChanged();
    #endregion
		
		public WorkOrderCategory()
		{
			this.Initialize();
		}
		
		[Column(Storage="_Company", DbType="VarChar(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=1)]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					if (this._WorkOrder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[Column(Storage="_SalesOrderNo", DbType="VarChar(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=2)]
		public string SalesOrderNo
		{
			get
			{
				return this._SalesOrderNo;
			}
			set
			{
				if ((this._SalesOrderNo != value))
				{
					if (this._WorkOrder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSalesOrderNoChanging(value);
					this.SendPropertyChanging();
					this._SalesOrderNo = value;
					this.SendPropertyChanged("SalesOrderNo");
					this.OnSalesOrderNoChanged();
				}
			}
		}
		
		[Column(Storage="_WorkOrderNo", DbType="VarChar(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=3)]
		public string WorkOrderNo
		{
			get
			{
				return this._WorkOrderNo;
			}
			set
			{
				if ((this._WorkOrderNo != value))
				{
					if (this._WorkOrder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkOrderNoChanging(value);
					this.SendPropertyChanging();
					this._WorkOrderNo = value;
					this.SendPropertyChanged("WorkOrderNo");
					this.OnWorkOrderNoChanged();
				}
			}
		}
		
		[Column(Storage="_ProductCategory", DbType="VarChar(4) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=4)]
		public string ProductCategory
		{
			get
			{
				return this._ProductCategory;
			}
			set
			{
				if ((this._ProductCategory != value))
				{
					this.OnProductCategoryChanging(value);
					this.SendPropertyChanging();
					this._ProductCategory = value;
					this.SendPropertyChanged("ProductCategory");
					this.OnProductCategoryChanged();
				}
			}
		}
		
		[Column(Storage="_Brand", DbType="NVarChar(100)")]
		[DataMember(Order=5)]
		public string Brand
		{
			get
			{
				return this._Brand;
			}
			set
			{
				if ((this._Brand != value))
				{
					this.OnBrandChanging(value);
					this.SendPropertyChanging();
					this._Brand = value;
					this.SendPropertyChanged("Brand");
					this.OnBrandChanged();
				}
			}
		}
		
		[Column(Storage="_Category", DbType="NVarChar(50)")]
		[DataMember(Order=6)]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		[Column(Storage="_FlatOrHalfFold", DbType="Int")]
		[DataMember(Order=7)]
		public System.Nullable<int> FlatOrHalfFold
		{
			get
			{
				return this._FlatOrHalfFold;
			}
			set
			{
				if ((this._FlatOrHalfFold != value))
				{
					this.OnFlatOrHalfFoldChanging(value);
					this.SendPropertyChanging();
					this._FlatOrHalfFold = value;
					this.SendPropertyChanged("FlatOrHalfFold");
					this.OnFlatOrHalfFoldChanged();
				}
			}
		}
		
		[Column(Storage="_Hookandeye", DbType="Int")]
		[DataMember(Order=8)]
		public System.Nullable<int> Hookandeye
		{
			get
			{
				return this._Hookandeye;
			}
			set
			{
				if ((this._Hookandeye != value))
				{
					this.OnHookandeyeChanging(value);
					this.SendPropertyChanging();
					this._Hookandeye = value;
					this.SendPropertyChanged("Hookandeye");
					this.OnHookandeyeChanged();
				}
			}
		}
		
		[Column(Storage="_ShoulderStrapAdjustment", DbType="NVarChar(200)")]
		[DataMember(Order=9)]
		public string ShoulderStrapAdjustment
		{
			get
			{
				return this._ShoulderStrapAdjustment;
			}
			set
			{
				if ((this._ShoulderStrapAdjustment != value))
				{
					this.OnShoulderStrapAdjustmentChanging(value);
					this.SendPropertyChanging();
					this._ShoulderStrapAdjustment = value;
					this.SendPropertyChanged("ShoulderStrapAdjustment");
					this.OnShoulderStrapAdjustmentChanged();
				}
			}
		}
		
		[Column(Storage="_SizeDispatching", DbType="NVarChar(2000)")]
		[DataMember(Order=10)]
		public string SizeDispatching
		{
			get
			{
				return this._SizeDispatching;
			}
			set
			{
				if ((this._SizeDispatching != value))
				{
					this.OnSizeDispatchingChanging(value);
					this.SendPropertyChanging();
					this._SizeDispatching = value;
					this.SendPropertyChanged("SizeDispatching");
					this.OnSizeDispatchingChanged();
				}
			}
		}
		
		[Column(Storage="_BasicRequisition1", DbType="Bit")]
		[DataMember(Order=11)]
		public System.Nullable<bool> BasicRequisition1
		{
			get
			{
				return this._BasicRequisition1;
			}
			set
			{
				if ((this._BasicRequisition1 != value))
				{
					this.OnBasicRequisition1Changing(value);
					this.SendPropertyChanging();
					this._BasicRequisition1 = value;
					this.SendPropertyChanged("BasicRequisition1");
					this.OnBasicRequisition1Changed();
				}
			}
		}
		
		[Column(Storage="_BasicRequisition2", DbType="Bit")]
		[DataMember(Order=12)]
		public System.Nullable<bool> BasicRequisition2
		{
			get
			{
				return this._BasicRequisition2;
			}
			set
			{
				if ((this._BasicRequisition2 != value))
				{
					this.OnBasicRequisition2Changing(value);
					this.SendPropertyChanging();
					this._BasicRequisition2 = value;
					this.SendPropertyChanged("BasicRequisition2");
					this.OnBasicRequisition2Changed();
				}
			}
		}
		
		[Column(Storage="_BasicRequisition3", DbType="Bit")]
		[DataMember(Order=13)]
		public System.Nullable<bool> BasicRequisition3
		{
			get
			{
				return this._BasicRequisition3;
			}
			set
			{
				if ((this._BasicRequisition3 != value))
				{
					this.OnBasicRequisition3Changing(value);
					this.SendPropertyChanging();
					this._BasicRequisition3 = value;
					this.SendPropertyChanged("BasicRequisition3");
					this.OnBasicRequisition3Changed();
				}
			}
		}
		
		[Column(Storage="_ProwBoard", DbType="NVarChar(200)")]
		[DataMember(Order=14)]
		public string ProwBoard
		{
			get
			{
				return this._ProwBoard;
			}
			set
			{
				if ((this._ProwBoard != value))
				{
					this.OnProwBoardChanging(value);
					this.SendPropertyChanging();
					this._ProwBoard = value;
					this.SendPropertyChanged("ProwBoard");
					this.OnProwBoardChanged();
				}
			}
		}
		
		[Column(Storage="_ExportCtnMeasurement", DbType="NVarChar(250)")]
		[DataMember(Order=15)]
		public string ExportCtnMeasurement
		{
			get
			{
				return this._ExportCtnMeasurement;
			}
			set
			{
				if ((this._ExportCtnMeasurement != value))
				{
					this.OnExportCtnMeasurementChanging(value);
					this.SendPropertyChanging();
					this._ExportCtnMeasurement = value;
					this.SendPropertyChanged("ExportCtnMeasurement");
					this.OnExportCtnMeasurementChanged();
				}
			}
		}
		
		[Column(Storage="_CartonBeltRequisition", DbType="Bit")]
		[DataMember(Order=16)]
		public System.Nullable<bool> CartonBeltRequisition
		{
			get
			{
				return this._CartonBeltRequisition;
			}
			set
			{
				if ((this._CartonBeltRequisition != value))
				{
					this.OnCartonBeltRequisitionChanging(value);
					this.SendPropertyChanging();
					this._CartonBeltRequisition = value;
					this.SendPropertyChanged("CartonBeltRequisition");
					this.OnCartonBeltRequisitionChanged();
				}
			}
		}
		
		[Column(Storage="_InnerBoxMeasurement", DbType="NVarChar(250)")]
		[DataMember(Order=17)]
		public string InnerBoxMeasurement
		{
			get
			{
				return this._InnerBoxMeasurement;
			}
			set
			{
				if ((this._InnerBoxMeasurement != value))
				{
					this.OnInnerBoxMeasurementChanging(value);
					this.SendPropertyChanging();
					this._InnerBoxMeasurement = value;
					this.SendPropertyChanged("InnerBoxMeasurement");
					this.OnInnerBoxMeasurementChanged();
				}
			}
		}
		
		[Column(Storage="_Sky_SingleDouble", DbType="Bit")]
		[DataMember(Order=18)]
		public System.Nullable<bool> Sky_SingleDouble
		{
			get
			{
				return this._Sky_SingleDouble;
			}
			set
			{
				if ((this._Sky_SingleDouble != value))
				{
					this.OnSky_SingleDoubleChanging(value);
					this.SendPropertyChanging();
					this._Sky_SingleDouble = value;
					this.SendPropertyChanged("Sky_SingleDouble");
					this.OnSky_SingleDoubleChanged();
				}
			}
		}
		
		[Column(Storage="_Sky_Desc", DbType="NVarChar(800)")]
		[DataMember(Order=19)]
		public string Sky_Desc
		{
			get
			{
				return this._Sky_Desc;
			}
			set
			{
				if ((this._Sky_Desc != value))
				{
					this.OnSky_DescChanging(value);
					this.SendPropertyChanging();
					this._Sky_Desc = value;
					this.SendPropertyChanged("Sky_Desc");
					this.OnSky_DescChanged();
				}
			}
		}
		
		[Column(Storage="_Boat_SingleDouble", DbType="Bit")]
		[DataMember(Order=20)]
		public System.Nullable<bool> Boat_SingleDouble
		{
			get
			{
				return this._Boat_SingleDouble;
			}
			set
			{
				if ((this._Boat_SingleDouble != value))
				{
					this.OnBoat_SingleDoubleChanging(value);
					this.SendPropertyChanging();
					this._Boat_SingleDouble = value;
					this.SendPropertyChanged("Boat_SingleDouble");
					this.OnBoat_SingleDoubleChanged();
				}
			}
		}
		
		[Column(Storage="_Boat_Desc", DbType="NVarChar(800)")]
		[DataMember(Order=21)]
		public string Boat_Desc
		{
			get
			{
				return this._Boat_Desc;
			}
			set
			{
				if ((this._Boat_Desc != value))
				{
					this.OnBoat_DescChanging(value);
					this.SendPropertyChanging();
					this._Boat_Desc = value;
					this.SendPropertyChanged("Boat_Desc");
					this.OnBoat_DescChanged();
				}
			}
		}
		
		[Column(Storage="_SideMark_SingleDouble", DbType="Bit")]
		[DataMember(Order=22)]
		public System.Nullable<bool> SideMark_SingleDouble
		{
			get
			{
				return this._SideMark_SingleDouble;
			}
			set
			{
				if ((this._SideMark_SingleDouble != value))
				{
					this.OnSideMark_SingleDoubleChanging(value);
					this.SendPropertyChanging();
					this._SideMark_SingleDouble = value;
					this.SendPropertyChanged("SideMark_SingleDouble");
					this.OnSideMark_SingleDoubleChanged();
				}
			}
		}
		
		[Column(Storage="_SideMark_Desc", DbType="NVarChar(800)")]
		[DataMember(Order=23)]
		public string SideMark_Desc
		{
			get
			{
				return this._SideMark_Desc;
			}
			set
			{
				if ((this._SideMark_Desc != value))
				{
					this.OnSideMark_DescChanging(value);
					this.SendPropertyChanging();
					this._SideMark_Desc = value;
					this.SendPropertyChanged("SideMark_Desc");
					this.OnSideMark_DescChanged();
				}
			}
		}
		
		[Column(Storage="_SideMarkPaper_SingleDouble", DbType="Bit")]
		[DataMember(Order=24)]
		public System.Nullable<bool> SideMarkPaper_SingleDouble
		{
			get
			{
				return this._SideMarkPaper_SingleDouble;
			}
			set
			{
				if ((this._SideMarkPaper_SingleDouble != value))
				{
					this.OnSideMarkPaper_SingleDoubleChanging(value);
					this.SendPropertyChanging();
					this._SideMarkPaper_SingleDouble = value;
					this.SendPropertyChanged("SideMarkPaper_SingleDouble");
					this.OnSideMarkPaper_SingleDoubleChanged();
				}
			}
		}
		
		[Column(Storage="_SideMarkPaper_Desc", DbType="NVarChar(800)")]
		[DataMember(Order=25)]
		public string SideMarkPaper_Desc
		{
			get
			{
				return this._SideMarkPaper_Desc;
			}
			set
			{
				if ((this._SideMarkPaper_Desc != value))
				{
					this.OnSideMarkPaper_DescChanging(value);
					this.SendPropertyChanging();
					this._SideMarkPaper_Desc = value;
					this.SendPropertyChanged("SideMarkPaper_Desc");
					this.OnSideMarkPaper_DescChanged();
				}
			}
		}
		
		[Column(Storage="_InnerBoxMark_SingleDouble", DbType="Bit")]
		[DataMember(Order=26)]
		public System.Nullable<bool> InnerBoxMark_SingleDouble
		{
			get
			{
				return this._InnerBoxMark_SingleDouble;
			}
			set
			{
				if ((this._InnerBoxMark_SingleDouble != value))
				{
					this.OnInnerBoxMark_SingleDoubleChanging(value);
					this.SendPropertyChanging();
					this._InnerBoxMark_SingleDouble = value;
					this.SendPropertyChanged("InnerBoxMark_SingleDouble");
					this.OnInnerBoxMark_SingleDoubleChanged();
				}
			}
		}
		
		[Column(Storage="_InnerBoxMark_Desc", DbType="NVarChar(800)")]
		[DataMember(Order=27)]
		public string InnerBoxMark_Desc
		{
			get
			{
				return this._InnerBoxMark_Desc;
			}
			set
			{
				if ((this._InnerBoxMark_Desc != value))
				{
					this.OnInnerBoxMark_DescChanging(value);
					this.SendPropertyChanging();
					this._InnerBoxMark_Desc = value;
					this.SendPropertyChanged("InnerBoxMark_Desc");
					this.OnInnerBoxMark_DescChanged();
				}
			}
		}
		
		[Column(Storage="_MarkerA", DbType="NVarChar(200)")]
		[DataMember(Order=28)]
		public string MarkerA
		{
			get
			{
				return this._MarkerA;
			}
			set
			{
				if ((this._MarkerA != value))
				{
					this.OnMarkerAChanging(value);
					this.SendPropertyChanging();
					this._MarkerA = value;
					this.SendPropertyChanged("MarkerA");
					this.OnMarkerAChanged();
				}
			}
		}
		
		[Column(Storage="_MarkerB", DbType="NVarChar(200)")]
		[DataMember(Order=29)]
		public string MarkerB
		{
			get
			{
				return this._MarkerB;
			}
			set
			{
				if ((this._MarkerB != value))
				{
					this.OnMarkerBChanging(value);
					this.SendPropertyChanging();
					this._MarkerB = value;
					this.SendPropertyChanged("MarkerB");
					this.OnMarkerBChanged();
				}
			}
		}
		
		[Column(Storage="_MarkerC", DbType="NVarChar(200)")]
		[DataMember(Order=30)]
		public string MarkerC
		{
			get
			{
				return this._MarkerC;
			}
			set
			{
				if ((this._MarkerC != value))
				{
					this.OnMarkerCChanging(value);
					this.SendPropertyChanging();
					this._MarkerC = value;
					this.SendPropertyChanged("MarkerC");
					this.OnMarkerCChanged();
				}
			}
		}
		
		[Column(Storage="_MarkerD", DbType="NVarChar(200)")]
		[DataMember(Order=31)]
		public string MarkerD
		{
			get
			{
				return this._MarkerD;
			}
			set
			{
				if ((this._MarkerD != value))
				{
					this.OnMarkerDChanging(value);
					this.SendPropertyChanging();
					this._MarkerD = value;
					this.SendPropertyChanged("MarkerD");
					this.OnMarkerDChanged();
				}
			}
		}
		
		[Column(Storage="_MarkerE", DbType="NVarChar(200)")]
		[DataMember(Order=32)]
		public string MarkerE
		{
			get
			{
				return this._MarkerE;
			}
			set
			{
				if ((this._MarkerE != value))
				{
					this.OnMarkerEChanging(value);
					this.SendPropertyChanging();
					this._MarkerE = value;
					this.SendPropertyChanged("MarkerE");
					this.OnMarkerEChanged();
				}
			}
		}
		
		[Column(Storage="_BrandA", DbType="NVarChar(200)")]
		[DataMember(Order=33)]
		public string BrandA
		{
			get
			{
				return this._BrandA;
			}
			set
			{
				if ((this._BrandA != value))
				{
					this.OnBrandAChanging(value);
					this.SendPropertyChanging();
					this._BrandA = value;
					this.SendPropertyChanged("BrandA");
					this.OnBrandAChanged();
				}
			}
		}
		
		[Column(Storage="_BrandB", DbType="NVarChar(200)")]
		[DataMember(Order=34)]
		public string BrandB
		{
			get
			{
				return this._BrandB;
			}
			set
			{
				if ((this._BrandB != value))
				{
					this.OnBrandBChanging(value);
					this.SendPropertyChanging();
					this._BrandB = value;
					this.SendPropertyChanged("BrandB");
					this.OnBrandBChanged();
				}
			}
		}
		
		[Column(Storage="_BrandC", DbType="NVarChar(200)")]
		[DataMember(Order=35)]
		public string BrandC
		{
			get
			{
				return this._BrandC;
			}
			set
			{
				if ((this._BrandC != value))
				{
					this.OnBrandCChanging(value);
					this.SendPropertyChanging();
					this._BrandC = value;
					this.SendPropertyChanged("BrandC");
					this.OnBrandCChanged();
				}
			}
		}
		
		[Column(Storage="_BrandD", DbType="NVarChar(200)")]
		[DataMember(Order=36)]
		public string BrandD
		{
			get
			{
				return this._BrandD;
			}
			set
			{
				if ((this._BrandD != value))
				{
					this.OnBrandDChanging(value);
					this.SendPropertyChanging();
					this._BrandD = value;
					this.SendPropertyChanged("BrandD");
					this.OnBrandDChanged();
				}
			}
		}
		
		[Column(Storage="_CustomDecalsA", DbType="NVarChar(200)")]
		[DataMember(Order=37)]
		public string CustomDecalsA
		{
			get
			{
				return this._CustomDecalsA;
			}
			set
			{
				if ((this._CustomDecalsA != value))
				{
					this.OnCustomDecalsAChanging(value);
					this.SendPropertyChanging();
					this._CustomDecalsA = value;
					this.SendPropertyChanged("CustomDecalsA");
					this.OnCustomDecalsAChanged();
				}
			}
		}
		
		[Column(Storage="_CustomDecalsB", DbType="NVarChar(200)")]
		[DataMember(Order=38)]
		public string CustomDecalsB
		{
			get
			{
				return this._CustomDecalsB;
			}
			set
			{
				if ((this._CustomDecalsB != value))
				{
					this.OnCustomDecalsBChanging(value);
					this.SendPropertyChanging();
					this._CustomDecalsB = value;
					this.SendPropertyChanged("CustomDecalsB");
					this.OnCustomDecalsBChanged();
				}
			}
		}
		
		[Column(Storage="_CustomDecalsC", DbType="NVarChar(200)")]
		[DataMember(Order=39)]
		public string CustomDecalsC
		{
			get
			{
				return this._CustomDecalsC;
			}
			set
			{
				if ((this._CustomDecalsC != value))
				{
					this.OnCustomDecalsCChanging(value);
					this.SendPropertyChanging();
					this._CustomDecalsC = value;
					this.SendPropertyChanged("CustomDecalsC");
					this.OnCustomDecalsCChanged();
				}
			}
		}
		
		[Column(Storage="_CustomDecalsD", DbType="NVarChar(200)")]
		[DataMember(Order=40)]
		public string CustomDecalsD
		{
			get
			{
				return this._CustomDecalsD;
			}
			set
			{
				if ((this._CustomDecalsD != value))
				{
					this.OnCustomDecalsDChanging(value);
					this.SendPropertyChanging();
					this._CustomDecalsD = value;
					this.SendPropertyChanged("CustomDecalsD");
					this.OnCustomDecalsDChanged();
				}
			}
		}
		
		[Column(Storage="_CustomDecalsE", DbType="NVarChar(200)")]
		[DataMember(Order=41)]
		public string CustomDecalsE
		{
			get
			{
				return this._CustomDecalsE;
			}
			set
			{
				if ((this._CustomDecalsE != value))
				{
					this.OnCustomDecalsEChanging(value);
					this.SendPropertyChanging();
					this._CustomDecalsE = value;
					this.SendPropertyChanged("CustomDecalsE");
					this.OnCustomDecalsEChanged();
				}
			}
		}
		
		[Column(Storage="_CustomDecalsF", DbType="NVarChar(200)")]
		[DataMember(Order=42)]
		public string CustomDecalsF
		{
			get
			{
				return this._CustomDecalsF;
			}
			set
			{
				if ((this._CustomDecalsF != value))
				{
					this.OnCustomDecalsFChanging(value);
					this.SendPropertyChanging();
					this._CustomDecalsF = value;
					this.SendPropertyChanged("CustomDecalsF");
					this.OnCustomDecalsFChanged();
				}
			}
		}
		
		[Column(Storage="_PlasticBags_Material", DbType="NVarChar(200)")]
		[DataMember(Order=43)]
		public string PlasticBags_Material
		{
			get
			{
				return this._PlasticBags_Material;
			}
			set
			{
				if ((this._PlasticBags_Material != value))
				{
					this.OnPlasticBags_MaterialChanging(value);
					this.SendPropertyChanging();
					this._PlasticBags_Material = value;
					this.SendPropertyChanged("PlasticBags_Material");
					this.OnPlasticBags_MaterialChanged();
				}
			}
		}
		
		[Column(Storage="_PlasticBags_Depth", DbType="NVarChar(200)")]
		[DataMember(Order=44)]
		public string PlasticBags_Depth
		{
			get
			{
				return this._PlasticBags_Depth;
			}
			set
			{
				if ((this._PlasticBags_Depth != value))
				{
					this.OnPlasticBags_DepthChanging(value);
					this.SendPropertyChanging();
					this._PlasticBags_Depth = value;
					this.SendPropertyChanged("PlasticBags_Depth");
					this.OnPlasticBags_DepthChanged();
				}
			}
		}
		
		[Column(Storage="_PlasticNeedleStyle", DbType="NVarChar(200)")]
		[DataMember(Order=45)]
		public string PlasticNeedleStyle
		{
			get
			{
				return this._PlasticNeedleStyle;
			}
			set
			{
				if ((this._PlasticNeedleStyle != value))
				{
					this.OnPlasticNeedleStyleChanging(value);
					this.SendPropertyChanging();
					this._PlasticNeedleStyle = value;
					this.SendPropertyChanged("PlasticNeedleStyle");
					this.OnPlasticNeedleStyleChanged();
				}
			}
		}
		
		[Column(Storage="_PlasticNeedleLength", DbType="NVarChar(200)")]
		[DataMember(Order=46)]
		public string PlasticNeedleLength
		{
			get
			{
				return this._PlasticNeedleLength;
			}
			set
			{
				if ((this._PlasticNeedleLength != value))
				{
					this.OnPlasticNeedleLengthChanging(value);
					this.SendPropertyChanging();
					this._PlasticNeedleLength = value;
					this.SendPropertyChanged("PlasticNeedleLength");
					this.OnPlasticNeedleLengthChanged();
				}
			}
		}
		
		[Column(Storage="_ClothesHorseStyle", DbType="NVarChar(200)")]
		[DataMember(Order=47)]
		public string ClothesHorseStyle
		{
			get
			{
				return this._ClothesHorseStyle;
			}
			set
			{
				if ((this._ClothesHorseStyle != value))
				{
					this.OnClothesHorseStyleChanging(value);
					this.SendPropertyChanging();
					this._ClothesHorseStyle = value;
					this.SendPropertyChanged("ClothesHorseStyle");
					this.OnClothesHorseStyleChanged();
				}
			}
		}
		
		[Column(Storage="_PackReference", DbType="NVarChar(50)")]
		[DataMember(Order=48)]
		public string PackReference
		{
			get
			{
				return this._PackReference;
			}
			set
			{
				if ((this._PackReference != value))
				{
					this.OnPackReferenceChanging(value);
					this.SendPropertyChanging();
					this._PackReference = value;
					this.SendPropertyChanged("PackReference");
					this.OnPackReferenceChanged();
				}
			}
		}
		
		[Column(Storage="_LabelReference", DbType="NVarChar(50)")]
		[DataMember(Order=49)]
		public string LabelReference
		{
			get
			{
				return this._LabelReference;
			}
			set
			{
				if ((this._LabelReference != value))
				{
					this.OnLabelReferenceChanging(value);
					this.SendPropertyChanging();
					this._LabelReference = value;
					this.SendPropertyChanged("LabelReference");
					this.OnLabelReferenceChanged();
				}
			}
		}
		
		[Column(Storage="_PackMethod", DbType="NVarChar(50)")]
		[DataMember(Order=50)]
		public string PackMethod
		{
			get
			{
				return this._PackMethod;
			}
			set
			{
				if ((this._PackMethod != value))
				{
					this.OnPackMethodChanging(value);
					this.SendPropertyChanging();
					this._PackMethod = value;
					this.SendPropertyChanged("PackMethod");
					this.OnPackMethodChanged();
				}
			}
		}
		
		[Column(Storage="_Img", DbType="NVarChar(500)")]
		[DataMember(Order=51)]
		public string Img
		{
			get
			{
				return this._Img;
			}
			set
			{
				if ((this._Img != value))
				{
					this.OnImgChanging(value);
					this.SendPropertyChanging();
					this._Img = value;
					this.SendPropertyChanged("Img");
					this.OnImgChanged();
				}
			}
		}
		
		[Column(Storage="_StyleNo", DbType="NVarChar(100)")]
		[DataMember(Order=52)]
		public string StyleNo
		{
			get
			{
				return this._StyleNo;
			}
			set
			{
				if ((this._StyleNo != value))
				{
					this.OnStyleNoChanging(value);
					this.SendPropertyChanging();
					this._StyleNo = value;
					this.SendPropertyChanged("StyleNo");
					this.OnStyleNoChanged();
				}
			}
		}
		
		[Column(Storage="_StyleDesc", DbType="NVarChar(50)")]
		[DataMember(Order=53)]
		public string StyleDesc
		{
			get
			{
				return this._StyleDesc;
			}
			set
			{
				if ((this._StyleDesc != value))
				{
					this.OnStyleDescChanging(value);
					this.SendPropertyChanging();
					this._StyleDesc = value;
					this.SendPropertyChanged("StyleDesc");
					this.OnStyleDescChanged();
				}
			}
		}
		
		[Column(Storage="_CasingMethod", DbType="NVarChar(100)")]
		[DataMember(Order=54)]
		public string CasingMethod
		{
			get
			{
				return this._CasingMethod;
			}
			set
			{
				if ((this._CasingMethod != value))
				{
					this.OnCasingMethodChanging(value);
					this.SendPropertyChanging();
					this._CasingMethod = value;
					this.SendPropertyChanged("CasingMethod");
					this.OnCasingMethodChanged();
				}
			}
		}
		
		[Association(Name="WorkOrderCategory_WorkOrderCategoryCup", Storage="_WorkOrderCategoryCups", ThisKey="Company,SalesOrderNo,WorkOrderNo,ProductCategory", OtherKey="Company,SalesOrderNo,WorkOrderNo,ProductCategory")]
		[DataMember(Order=55, EmitDefaultValue=false)]
		public EntitySet<WorkOrderCategoryCup> WorkOrderCategoryCups
		{
			get
			{
				if ((this.serializing 
							&& (this._WorkOrderCategoryCups.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._WorkOrderCategoryCups;
			}
			set
			{
				this._WorkOrderCategoryCups.Assign(value);
			}
		}
		
		[Association(Name="WorkOrderCategory_WorkOrderCategoryLabeling", Storage="_WorkOrderCategoryLabelings", ThisKey="Company,SalesOrderNo,WorkOrderNo,ProductCategory", OtherKey="Company,SalesOrderNo,WorkOrderNo,ProductCategory")]
		[DataMember(Order=56, EmitDefaultValue=false)]
		public EntitySet<WorkOrderCategoryLabeling> WorkOrderCategoryLabelings
		{
			get
			{
				if ((this.serializing 
							&& (this._WorkOrderCategoryLabelings.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._WorkOrderCategoryLabelings;
			}
			set
			{
				this._WorkOrderCategoryLabelings.Assign(value);
			}
		}
		
		[Association(Name="WorkOrderCategory_WorkOrderCategoryPacking", Storage="_WorkOrderCategoryPackings", ThisKey="Company,SalesOrderNo,WorkOrderNo,ProductCategory", OtherKey="Company,SalesOrderNo,WorkOrderNo,ProductCategory")]
		[DataMember(Order=57, EmitDefaultValue=false)]
		public EntitySet<WorkOrderCategoryPacking> WorkOrderCategoryPackings
		{
			get
			{
				if ((this.serializing 
							&& (this._WorkOrderCategoryPackings.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._WorkOrderCategoryPackings;
			}
			set
			{
				this._WorkOrderCategoryPackings.Assign(value);
			}
		}
		
		[Association(Name="WorkOrder_WorkOrderCategory", Storage="_WorkOrder", ThisKey="Company,SalesOrderNo,WorkOrderNo", OtherKey="Company,SalesOrderNo,WorkOrderNo", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public WorkOrder WorkOrder
		{
			get
			{
				return this._WorkOrder.Entity;
			}
			set
			{
				WorkOrder previousValue = this._WorkOrder.Entity;
				if (((previousValue != value) 
							|| (this._WorkOrder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WorkOrder.Entity = null;
						previousValue.WorkOrderCategories.Remove(this);
					}
					this._WorkOrder.Entity = value;
					if ((value != null))
					{
						value.WorkOrderCategories.Add(this);
						this._Company = value.Company;
						this._SalesOrderNo = value.SalesOrderNo;
						this._WorkOrderNo = value.WorkOrderNo;
					}
					else
					{
						this._Company = default(string);
						this._SalesOrderNo = default(string);
						this._WorkOrderNo = default(string);
					}
					this.SendPropertyChanged("WorkOrder");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_WorkOrderCategoryCups(WorkOrderCategoryCup entity)
		{
			this.SendPropertyChanging();
			entity.WorkOrderCategory = this;
		}
		
		private void detach_WorkOrderCategoryCups(WorkOrderCategoryCup entity)
		{
			this.SendPropertyChanging();
			entity.WorkOrderCategory = null;
		}
		
		private void attach_WorkOrderCategoryLabelings(WorkOrderCategoryLabeling entity)
		{
			this.SendPropertyChanging();
			entity.WorkOrderCategory = this;
		}
		
		private void detach_WorkOrderCategoryLabelings(WorkOrderCategoryLabeling entity)
		{
			this.SendPropertyChanging();
			entity.WorkOrderCategory = null;
		}
		
		private void attach_WorkOrderCategoryPackings(WorkOrderCategoryPacking entity)
		{
			this.SendPropertyChanging();
			entity.WorkOrderCategory = this;
		}
		
		private void detach_WorkOrderCategoryPackings(WorkOrderCategoryPacking entity)
		{
			this.SendPropertyChanging();
			entity.WorkOrderCategory = null;
		}
		
		private void Initialize()
		{
			this._WorkOrderCategoryCups = new EntitySet<WorkOrderCategoryCup>(new Action<WorkOrderCategoryCup>(this.attach_WorkOrderCategoryCups), new Action<WorkOrderCategoryCup>(this.detach_WorkOrderCategoryCups));
			this._WorkOrderCategoryLabelings = new EntitySet<WorkOrderCategoryLabeling>(new Action<WorkOrderCategoryLabeling>(this.attach_WorkOrderCategoryLabelings), new Action<WorkOrderCategoryLabeling>(this.detach_WorkOrderCategoryLabelings));
			this._WorkOrderCategoryPackings = new EntitySet<WorkOrderCategoryPacking>(new Action<WorkOrderCategoryPacking>(this.attach_WorkOrderCategoryPackings), new Action<WorkOrderCategoryPacking>(this.detach_WorkOrderCategoryPackings));
			this._WorkOrder = default(EntityRef<WorkOrder>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[OnSerializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[OnSerialized()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[Table(Name="dbo.ProjectDeleteLog")]
	[DataContract()]
	public partial class ProjectDeleteLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _OID;
		
		private string _Company;
		
		private string _SalesOrderNo;
		
		private string _ProjectNo;
		
		private string _DeleteMan;
		
		private System.Nullable<System.DateTime> _DeleteDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOIDChanging(long value);
    partial void OnOIDChanged();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnSalesOrderNoChanging(string value);
    partial void OnSalesOrderNoChanged();
    partial void OnProjectNoChanging(string value);
    partial void OnProjectNoChanged();
    partial void OnDeleteManChanging(string value);
    partial void OnDeleteManChanged();
    partial void OnDeleteDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeleteDateChanged();
    #endregion
		
		public ProjectDeleteLog()
		{
			this.Initialize();
		}
		
		[Column(Storage="_OID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=1)]
		public long OID
		{
			get
			{
				return this._OID;
			}
			set
			{
				if ((this._OID != value))
				{
					this.OnOIDChanging(value);
					this.SendPropertyChanging();
					this._OID = value;
					this.SendPropertyChanged("OID");
					this.OnOIDChanged();
				}
			}
		}
		
		[Column(Storage="_Company", DbType="VarChar(10)")]
		[DataMember(Order=2)]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[Column(Storage="_SalesOrderNo", DbType="VarChar(20)")]
		[DataMember(Order=3)]
		public string SalesOrderNo
		{
			get
			{
				return this._SalesOrderNo;
			}
			set
			{
				if ((this._SalesOrderNo != value))
				{
					this.OnSalesOrderNoChanging(value);
					this.SendPropertyChanging();
					this._SalesOrderNo = value;
					this.SendPropertyChanged("SalesOrderNo");
					this.OnSalesOrderNoChanged();
				}
			}
		}
		
		[Column(Storage="_ProjectNo", DbType="NVarChar(50)")]
		[DataMember(Order=4)]
		public string ProjectNo
		{
			get
			{
				return this._ProjectNo;
			}
			set
			{
				if ((this._ProjectNo != value))
				{
					this.OnProjectNoChanging(value);
					this.SendPropertyChanging();
					this._ProjectNo = value;
					this.SendPropertyChanged("ProjectNo");
					this.OnProjectNoChanged();
				}
			}
		}
		
		[Column(Storage="_DeleteMan", DbType="VarChar(50)")]
		[DataMember(Order=5)]
		public string DeleteMan
		{
			get
			{
				return this._DeleteMan;
			}
			set
			{
				if ((this._DeleteMan != value))
				{
					this.OnDeleteManChanging(value);
					this.SendPropertyChanging();
					this._DeleteMan = value;
					this.SendPropertyChanged("DeleteMan");
					this.OnDeleteManChanged();
				}
			}
		}
		
		[Column(Storage="_DeleteDate", DbType="DateTime")]
		[DataMember(Order=6)]
		public System.Nullable<System.DateTime> DeleteDate
		{
			get
			{
				return this._DeleteDate;
			}
			set
			{
				if ((this._DeleteDate != value))
				{
					this.OnDeleteDateChanging(value);
					this.SendPropertyChanging();
					this._DeleteDate = value;
					this.SendPropertyChanged("DeleteDate");
					this.OnDeleteDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[Table(Name="dbo.View_WOConfirm")]
	[DataContract()]
	public partial class View_WOConfirm
	{
		
		private string _Company;
		
		private string _ProjectNo;
		
		private string _SalesOrderNo;
		
		private int _SalesOrderLine;
		
		private string _Factory;
		
		private string _WorkOrderNo;
		
		private string _CustomerCode;
		
		private string _Customer;
		
		private string _Item;
		
		private string _Users;
		
		private System.Nullable<int> _Next;
		
		private System.Nullable<int> _Current;
		
		private bool _IsRWO;
		
		private System.Nullable<int> _ActionStatus;
		
		private string _StyleNo;
		
		private string _CustomerStyleNo;
		
		private System.Nullable<int> _Version;
		
		private System.Nullable<int> _AmendmentNo;
		
		private string _ShipMode;
		
		private string _PackingMethod;
		
		private System.Nullable<System.DateTime> _WOCreateDate;
		
		private System.Nullable<System.DateTime> _WOReviseDate;
		
		private System.Nullable<System.DateTime> _T3ShipCompleted;
		
		private System.Nullable<System.DateTime> _T3Adjust;
		
		private string _AjustT3DateConfirm;
		
		private System.Nullable<System.DateTime> _DeliveryShipCompleted;
		
		private System.Nullable<System.DateTime> _LCLExFtyShipCompleted;
		
		private System.Nullable<System.DateTime> _FCLExFtyShipCompleted;
		
		private System.Nullable<System.DateTime> _LineWorkStartShip;
		
		private System.Nullable<System.DateTime> _LineWorkShipCompleted;
		
		private System.Nullable<System.DateTime> _FactoryWorkShipCompleted;
		
		private string _OAConfirm;
		
		private System.Nullable<System.DateTime> _OAConfirmDate;
		
		private string _HeaderConfirm;
		
		private System.Nullable<System.DateTime> _HeaderConfirmDate;
		
		private string _TopConfirm;
		
		private System.Nullable<System.DateTime> _TopConfirmDate;
		
		private string _PPCConfirm;
		
		private System.Nullable<System.DateTime> _PPCConfirmDate;
		
		private string _Category;
		
		private System.Nullable<int> _BulkQty;
		
		private System.Nullable<int> _SampleQty;
		
		private System.Nullable<System.DateTime> _LineWorkStartShip_SpecialFactory;
		
		private System.Nullable<System.DateTime> _LineWorkShipCompleted_SpecialFactory;
		
		private System.Nullable<int> _ChosenOption;
		
		public View_WOConfirm()
		{
		}
		
		[Column(Storage="_Company", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		[DataMember(Order=1)]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this._Company = value;
				}
			}
		}
		
		[Column(Storage="_ProjectNo", DbType="NVarChar(50)")]
		[DataMember(Order=2)]
		public string ProjectNo
		{
			get
			{
				return this._ProjectNo;
			}
			set
			{
				if ((this._ProjectNo != value))
				{
					this._ProjectNo = value;
				}
			}
		}
		
		[Column(Storage="_SalesOrderNo", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		[DataMember(Order=3)]
		public string SalesOrderNo
		{
			get
			{
				return this._SalesOrderNo;
			}
			set
			{
				if ((this._SalesOrderNo != value))
				{
					this._SalesOrderNo = value;
				}
			}
		}
		
		[Column(Storage="_SalesOrderLine", DbType="Int NOT NULL")]
		[DataMember(Order=4)]
		public int SalesOrderLine
		{
			get
			{
				return this._SalesOrderLine;
			}
			set
			{
				if ((this._SalesOrderLine != value))
				{
					this._SalesOrderLine = value;
				}
			}
		}
		
		[Column(Storage="_Factory", DbType="NVarChar(50)")]
		[DataMember(Order=5)]
		public string Factory
		{
			get
			{
				return this._Factory;
			}
			set
			{
				if ((this._Factory != value))
				{
					this._Factory = value;
				}
			}
		}
		
		[Column(Storage="_WorkOrderNo", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		[DataMember(Order=6)]
		public string WorkOrderNo
		{
			get
			{
				return this._WorkOrderNo;
			}
			set
			{
				if ((this._WorkOrderNo != value))
				{
					this._WorkOrderNo = value;
				}
			}
		}
		
		[Column(Storage="_CustomerCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[DataMember(Order=7)]
		public string CustomerCode
		{
			get
			{
				return this._CustomerCode;
			}
			set
			{
				if ((this._CustomerCode != value))
				{
					this._CustomerCode = value;
				}
			}
		}
		
		[Column(Storage="_Customer", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[DataMember(Order=8)]
		public string Customer
		{
			get
			{
				return this._Customer;
			}
			set
			{
				if ((this._Customer != value))
				{
					this._Customer = value;
				}
			}
		}
		
		[Column(Storage="_Item", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		[DataMember(Order=9)]
		public string Item
		{
			get
			{
				return this._Item;
			}
			set
			{
				if ((this._Item != value))
				{
					this._Item = value;
				}
			}
		}
		
		[Column(Storage="_Users", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		[DataMember(Order=10)]
		public string Users
		{
			get
			{
				return this._Users;
			}
			set
			{
				if ((this._Users != value))
				{
					this._Users = value;
				}
			}
		}
		
		[Column(Storage="_Next", DbType="Int")]
		[DataMember(Order=11)]
		public System.Nullable<int> Next
		{
			get
			{
				return this._Next;
			}
			set
			{
				if ((this._Next != value))
				{
					this._Next = value;
				}
			}
		}
		
		[Column(Name="[Current]", Storage="_Current", DbType="Int")]
		[DataMember(Order=12)]
		public System.Nullable<int> Current
		{
			get
			{
				return this._Current;
			}
			set
			{
				if ((this._Current != value))
				{
					this._Current = value;
				}
			}
		}
		
		[Column(Storage="_IsRWO", DbType="Bit NOT NULL")]
		[DataMember(Order=13)]
		public bool IsRWO
		{
			get
			{
				return this._IsRWO;
			}
			set
			{
				if ((this._IsRWO != value))
				{
					this._IsRWO = value;
				}
			}
		}
		
		[Column(Storage="_ActionStatus", DbType="Int")]
		[DataMember(Order=14)]
		public System.Nullable<int> ActionStatus
		{
			get
			{
				return this._ActionStatus;
			}
			set
			{
				if ((this._ActionStatus != value))
				{
					this._ActionStatus = value;
				}
			}
		}
		
		[Column(Storage="_StyleNo", DbType="VarChar(9)")]
		[DataMember(Order=15)]
		public string StyleNo
		{
			get
			{
				return this._StyleNo;
			}
			set
			{
				if ((this._StyleNo != value))
				{
					this._StyleNo = value;
				}
			}
		}
		
		[Column(Storage="_CustomerStyleNo", DbType="NVarChar(50)")]
		[DataMember(Order=16)]
		public string CustomerStyleNo
		{
			get
			{
				return this._CustomerStyleNo;
			}
			set
			{
				if ((this._CustomerStyleNo != value))
				{
					this._CustomerStyleNo = value;
				}
			}
		}
		
		[Column(Storage="_Version", DbType="Int")]
		[DataMember(Order=17)]
		public System.Nullable<int> Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this._Version = value;
				}
			}
		}
		
		[Column(Storage="_AmendmentNo", DbType="Int")]
		[DataMember(Order=18)]
		public System.Nullable<int> AmendmentNo
		{
			get
			{
				return this._AmendmentNo;
			}
			set
			{
				if ((this._AmendmentNo != value))
				{
					this._AmendmentNo = value;
				}
			}
		}
		
		[Column(Storage="_ShipMode", DbType="NVarChar(50)")]
		[DataMember(Order=19)]
		public string ShipMode
		{
			get
			{
				return this._ShipMode;
			}
			set
			{
				if ((this._ShipMode != value))
				{
					this._ShipMode = value;
				}
			}
		}
		
		[Column(Storage="_PackingMethod", DbType="NVarChar(72)")]
		[DataMember(Order=20)]
		public string PackingMethod
		{
			get
			{
				return this._PackingMethod;
			}
			set
			{
				if ((this._PackingMethod != value))
				{
					this._PackingMethod = value;
				}
			}
		}
		
		[Column(Storage="_WOCreateDate", DbType="DateTime")]
		[DataMember(Order=21)]
		public System.Nullable<System.DateTime> WOCreateDate
		{
			get
			{
				return this._WOCreateDate;
			}
			set
			{
				if ((this._WOCreateDate != value))
				{
					this._WOCreateDate = value;
				}
			}
		}
		
		[Column(Storage="_WOReviseDate", DbType="DateTime")]
		[DataMember(Order=22)]
		public System.Nullable<System.DateTime> WOReviseDate
		{
			get
			{
				return this._WOReviseDate;
			}
			set
			{
				if ((this._WOReviseDate != value))
				{
					this._WOReviseDate = value;
				}
			}
		}
		
		[Column(Storage="_T3ShipCompleted", DbType="DateTime")]
		[DataMember(Order=23)]
		public System.Nullable<System.DateTime> T3ShipCompleted
		{
			get
			{
				return this._T3ShipCompleted;
			}
			set
			{
				if ((this._T3ShipCompleted != value))
				{
					this._T3ShipCompleted = value;
				}
			}
		}
		
		[Column(Storage="_T3Adjust", DbType="DateTime")]
		[DataMember(Order=24)]
		public System.Nullable<System.DateTime> T3Adjust
		{
			get
			{
				return this._T3Adjust;
			}
			set
			{
				if ((this._T3Adjust != value))
				{
					this._T3Adjust = value;
				}
			}
		}
		
		[Column(Storage="_AjustT3DateConfirm", DbType="NVarChar(60)")]
		[DataMember(Order=25)]
		public string AjustT3DateConfirm
		{
			get
			{
				return this._AjustT3DateConfirm;
			}
			set
			{
				if ((this._AjustT3DateConfirm != value))
				{
					this._AjustT3DateConfirm = value;
				}
			}
		}
		
		[Column(Storage="_DeliveryShipCompleted", DbType="DateTime")]
		[DataMember(Order=26)]
		public System.Nullable<System.DateTime> DeliveryShipCompleted
		{
			get
			{
				return this._DeliveryShipCompleted;
			}
			set
			{
				if ((this._DeliveryShipCompleted != value))
				{
					this._DeliveryShipCompleted = value;
				}
			}
		}
		
		[Column(Storage="_LCLExFtyShipCompleted", DbType="DateTime")]
		[DataMember(Order=27)]
		public System.Nullable<System.DateTime> LCLExFtyShipCompleted
		{
			get
			{
				return this._LCLExFtyShipCompleted;
			}
			set
			{
				if ((this._LCLExFtyShipCompleted != value))
				{
					this._LCLExFtyShipCompleted = value;
				}
			}
		}
		
		[Column(Storage="_FCLExFtyShipCompleted", DbType="DateTime")]
		[DataMember(Order=28)]
		public System.Nullable<System.DateTime> FCLExFtyShipCompleted
		{
			get
			{
				return this._FCLExFtyShipCompleted;
			}
			set
			{
				if ((this._FCLExFtyShipCompleted != value))
				{
					this._FCLExFtyShipCompleted = value;
				}
			}
		}
		
		[Column(Storage="_LineWorkStartShip", DbType="DateTime")]
		[DataMember(Order=29)]
		public System.Nullable<System.DateTime> LineWorkStartShip
		{
			get
			{
				return this._LineWorkStartShip;
			}
			set
			{
				if ((this._LineWorkStartShip != value))
				{
					this._LineWorkStartShip = value;
				}
			}
		}
		
		[Column(Storage="_LineWorkShipCompleted", DbType="DateTime")]
		[DataMember(Order=30)]
		public System.Nullable<System.DateTime> LineWorkShipCompleted
		{
			get
			{
				return this._LineWorkShipCompleted;
			}
			set
			{
				if ((this._LineWorkShipCompleted != value))
				{
					this._LineWorkShipCompleted = value;
				}
			}
		}
		
		[Column(Storage="_FactoryWorkShipCompleted", DbType="DateTime")]
		[DataMember(Order=31)]
		public System.Nullable<System.DateTime> FactoryWorkShipCompleted
		{
			get
			{
				return this._FactoryWorkShipCompleted;
			}
			set
			{
				if ((this._FactoryWorkShipCompleted != value))
				{
					this._FactoryWorkShipCompleted = value;
				}
			}
		}
		
		[Column(Storage="_OAConfirm", DbType="NVarChar(40)")]
		[DataMember(Order=32)]
		public string OAConfirm
		{
			get
			{
				return this._OAConfirm;
			}
			set
			{
				if ((this._OAConfirm != value))
				{
					this._OAConfirm = value;
				}
			}
		}
		
		[Column(Storage="_OAConfirmDate", DbType="DateTime")]
		[DataMember(Order=33)]
		public System.Nullable<System.DateTime> OAConfirmDate
		{
			get
			{
				return this._OAConfirmDate;
			}
			set
			{
				if ((this._OAConfirmDate != value))
				{
					this._OAConfirmDate = value;
				}
			}
		}
		
		[Column(Storage="_HeaderConfirm", DbType="NVarChar(40)")]
		[DataMember(Order=34)]
		public string HeaderConfirm
		{
			get
			{
				return this._HeaderConfirm;
			}
			set
			{
				if ((this._HeaderConfirm != value))
				{
					this._HeaderConfirm = value;
				}
			}
		}
		
		[Column(Storage="_HeaderConfirmDate", DbType="DateTime")]
		[DataMember(Order=35)]
		public System.Nullable<System.DateTime> HeaderConfirmDate
		{
			get
			{
				return this._HeaderConfirmDate;
			}
			set
			{
				if ((this._HeaderConfirmDate != value))
				{
					this._HeaderConfirmDate = value;
				}
			}
		}
		
		[Column(Storage="_TopConfirm", DbType="NVarChar(40)")]
		[DataMember(Order=36)]
		public string TopConfirm
		{
			get
			{
				return this._TopConfirm;
			}
			set
			{
				if ((this._TopConfirm != value))
				{
					this._TopConfirm = value;
				}
			}
		}
		
		[Column(Storage="_TopConfirmDate", DbType="DateTime")]
		[DataMember(Order=37)]
		public System.Nullable<System.DateTime> TopConfirmDate
		{
			get
			{
				return this._TopConfirmDate;
			}
			set
			{
				if ((this._TopConfirmDate != value))
				{
					this._TopConfirmDate = value;
				}
			}
		}
		
		[Column(Storage="_PPCConfirm", DbType="NVarChar(40)")]
		[DataMember(Order=38)]
		public string PPCConfirm
		{
			get
			{
				return this._PPCConfirm;
			}
			set
			{
				if ((this._PPCConfirm != value))
				{
					this._PPCConfirm = value;
				}
			}
		}
		
		[Column(Storage="_PPCConfirmDate", DbType="DateTime")]
		[DataMember(Order=39)]
		public System.Nullable<System.DateTime> PPCConfirmDate
		{
			get
			{
				return this._PPCConfirmDate;
			}
			set
			{
				if ((this._PPCConfirmDate != value))
				{
					this._PPCConfirmDate = value;
				}
			}
		}
		
		[Column(Storage="_Category", DbType="NVarChar(4)")]
		[DataMember(Order=40)]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this._Category = value;
				}
			}
		}
		
		[Column(Storage="_BulkQty", DbType="Int")]
		[DataMember(Order=41)]
		public System.Nullable<int> BulkQty
		{
			get
			{
				return this._BulkQty;
			}
			set
			{
				if ((this._BulkQty != value))
				{
					this._BulkQty = value;
				}
			}
		}
		
		[Column(Storage="_SampleQty", DbType="Int")]
		[DataMember(Order=42)]
		public System.Nullable<int> SampleQty
		{
			get
			{
				return this._SampleQty;
			}
			set
			{
				if ((this._SampleQty != value))
				{
					this._SampleQty = value;
				}
			}
		}
		
		[Column(Storage="_LineWorkStartShip_SpecialFactory", DbType="DateTime")]
		[DataMember(Order=43)]
		public System.Nullable<System.DateTime> LineWorkStartShip_SpecialFactory
		{
			get
			{
				return this._LineWorkStartShip_SpecialFactory;
			}
			set
			{
				if ((this._LineWorkStartShip_SpecialFactory != value))
				{
					this._LineWorkStartShip_SpecialFactory = value;
				}
			}
		}
		
		[Column(Storage="_LineWorkShipCompleted_SpecialFactory", DbType="DateTime")]
		[DataMember(Order=44)]
		public System.Nullable<System.DateTime> LineWorkShipCompleted_SpecialFactory
		{
			get
			{
				return this._LineWorkShipCompleted_SpecialFactory;
			}
			set
			{
				if ((this._LineWorkShipCompleted_SpecialFactory != value))
				{
					this._LineWorkShipCompleted_SpecialFactory = value;
				}
			}
		}
		
		[Column(Storage="_ChosenOption", DbType="Int")]
		[DataMember(Order=45)]
		public System.Nullable<int> ChosenOption
		{
			get
			{
				return this._ChosenOption;
			}
			set
			{
				if ((this._ChosenOption != value))
				{
					this._ChosenOption = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.View_RWOConfirm")]
	[DataContract()]
	public partial class View_RWOConfirm
	{
		
		private string _Company;
		
		private string _ProjectNo;
		
		private string _SalesOrderNo;
		
		private string _CustomerCode;
		
		private string _Customer;
		
		private string _Factory;
		
		private string _WorkOrderNo;
		
		private string _StyleNo;
		
		private string _Category;
		
		private string _CustomerStyleNo;
		
		private int _SalesOrderLine;
		
		private System.Nullable<System.DateTime> _RWOCreateDate;
		
		private System.Nullable<System.DateTime> _AmendDate;
		
		private System.Nullable<System.DateTime> _WOReviseDate;
		
		private System.Nullable<int> _Version;
		
		private System.Nullable<System.DateTime> _FactoryWorkStartDate;
		
		private System.Nullable<int> _CurrWOVersion;
		
		private System.Nullable<int> _WOVersion;
		
		private System.Nullable<System.DateTime> _LineWorkStartDate;
		
		private System.Nullable<System.DateTime> _T3Date;
		
		private System.Nullable<System.DateTime> _AjustT3Date;
		
		private string _AjustT3DateConfirm;
		
		private System.Nullable<System.DateTime> _FCLExFtyDate;
		
		private System.Nullable<System.DateTime> _LCLExFtyDate;
		
		private string _OAConfirm;
		
		private System.Nullable<System.DateTime> _OAConfirmDate;
		
		private string _HeaderConfirm;
		
		private System.Nullable<System.DateTime> _HeaderConfirmDate;
		
		private string _TopConfirm;
		
		private System.Nullable<System.DateTime> _TopConfirmDate;
		
		private string _PPCConfirm;
		
		private System.Nullable<System.DateTime> _PPCConfirmDate;
		
		private string _Users;
		
		private System.Nullable<int> _Next;
		
		private bool _IsRWO;
		
		private System.Nullable<int> _Current;
		
		private string _ColorCode;
		
		private int _RoundNo;
		
		private System.Nullable<int> _RoundTotal;
		
		private System.Nullable<int> _ActionStatus;
		
		private System.Nullable<int> _WCRoundNo;
		
		private System.Nullable<int> _WCRoundTotal;
		
		private System.Nullable<int> _BulkQty;
		
		private System.Nullable<int> _SampleQty;
		
		private System.Nullable<System.DateTime> _LineWorkStartDate_SpecialFactory;
		
		private System.Nullable<int> _ChosenOption;
		
		public View_RWOConfirm()
		{
		}
		
		[Column(Storage="_Company", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		[DataMember(Order=1)]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this._Company = value;
				}
			}
		}
		
		[Column(Storage="_ProjectNo", DbType="NVarChar(50)")]
		[DataMember(Order=2)]
		public string ProjectNo
		{
			get
			{
				return this._ProjectNo;
			}
			set
			{
				if ((this._ProjectNo != value))
				{
					this._ProjectNo = value;
				}
			}
		}
		
		[Column(Storage="_SalesOrderNo", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		[DataMember(Order=3)]
		public string SalesOrderNo
		{
			get
			{
				return this._SalesOrderNo;
			}
			set
			{
				if ((this._SalesOrderNo != value))
				{
					this._SalesOrderNo = value;
				}
			}
		}
		
		[Column(Storage="_CustomerCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[DataMember(Order=4)]
		public string CustomerCode
		{
			get
			{
				return this._CustomerCode;
			}
			set
			{
				if ((this._CustomerCode != value))
				{
					this._CustomerCode = value;
				}
			}
		}
		
		[Column(Storage="_Customer", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[DataMember(Order=5)]
		public string Customer
		{
			get
			{
				return this._Customer;
			}
			set
			{
				if ((this._Customer != value))
				{
					this._Customer = value;
				}
			}
		}
		
		[Column(Storage="_Factory", DbType="NVarChar(50)")]
		[DataMember(Order=6)]
		public string Factory
		{
			get
			{
				return this._Factory;
			}
			set
			{
				if ((this._Factory != value))
				{
					this._Factory = value;
				}
			}
		}
		
		[Column(Storage="_WorkOrderNo", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		[DataMember(Order=7)]
		public string WorkOrderNo
		{
			get
			{
				return this._WorkOrderNo;
			}
			set
			{
				if ((this._WorkOrderNo != value))
				{
					this._WorkOrderNo = value;
				}
			}
		}
		
		[Column(Storage="_StyleNo", DbType="VarChar(9)")]
		[DataMember(Order=8)]
		public string StyleNo
		{
			get
			{
				return this._StyleNo;
			}
			set
			{
				if ((this._StyleNo != value))
				{
					this._StyleNo = value;
				}
			}
		}
		
		[Column(Storage="_Category", DbType="NVarChar(4)")]
		[DataMember(Order=9)]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this._Category = value;
				}
			}
		}
		
		[Column(Storage="_CustomerStyleNo", DbType="NVarChar(50)")]
		[DataMember(Order=10)]
		public string CustomerStyleNo
		{
			get
			{
				return this._CustomerStyleNo;
			}
			set
			{
				if ((this._CustomerStyleNo != value))
				{
					this._CustomerStyleNo = value;
				}
			}
		}
		
		[Column(Storage="_SalesOrderLine", DbType="Int NOT NULL")]
		[DataMember(Order=11)]
		public int SalesOrderLine
		{
			get
			{
				return this._SalesOrderLine;
			}
			set
			{
				if ((this._SalesOrderLine != value))
				{
					this._SalesOrderLine = value;
				}
			}
		}
		
		[Column(Storage="_RWOCreateDate", DbType="DateTime")]
		[DataMember(Order=12)]
		public System.Nullable<System.DateTime> RWOCreateDate
		{
			get
			{
				return this._RWOCreateDate;
			}
			set
			{
				if ((this._RWOCreateDate != value))
				{
					this._RWOCreateDate = value;
				}
			}
		}
		
		[Column(Storage="_AmendDate", DbType="DateTime")]
		[DataMember(Order=13)]
		public System.Nullable<System.DateTime> AmendDate
		{
			get
			{
				return this._AmendDate;
			}
			set
			{
				if ((this._AmendDate != value))
				{
					this._AmendDate = value;
				}
			}
		}
		
		[Column(Storage="_WOReviseDate", DbType="DateTime")]
		[DataMember(Order=14)]
		public System.Nullable<System.DateTime> WOReviseDate
		{
			get
			{
				return this._WOReviseDate;
			}
			set
			{
				if ((this._WOReviseDate != value))
				{
					this._WOReviseDate = value;
				}
			}
		}
		
		[Column(Storage="_Version", DbType="Int")]
		[DataMember(Order=15)]
		public System.Nullable<int> Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this._Version = value;
				}
			}
		}
		
		[Column(Storage="_FactoryWorkStartDate", DbType="DateTime")]
		[DataMember(Order=16)]
		public System.Nullable<System.DateTime> FactoryWorkStartDate
		{
			get
			{
				return this._FactoryWorkStartDate;
			}
			set
			{
				if ((this._FactoryWorkStartDate != value))
				{
					this._FactoryWorkStartDate = value;
				}
			}
		}
		
		[Column(Storage="_CurrWOVersion", DbType="Int")]
		[DataMember(Order=17)]
		public System.Nullable<int> CurrWOVersion
		{
			get
			{
				return this._CurrWOVersion;
			}
			set
			{
				if ((this._CurrWOVersion != value))
				{
					this._CurrWOVersion = value;
				}
			}
		}
		
		[Column(Storage="_WOVersion", DbType="Int")]
		[DataMember(Order=18)]
		public System.Nullable<int> WOVersion
		{
			get
			{
				return this._WOVersion;
			}
			set
			{
				if ((this._WOVersion != value))
				{
					this._WOVersion = value;
				}
			}
		}
		
		[Column(Storage="_LineWorkStartDate", DbType="DateTime")]
		[DataMember(Order=19)]
		public System.Nullable<System.DateTime> LineWorkStartDate
		{
			get
			{
				return this._LineWorkStartDate;
			}
			set
			{
				if ((this._LineWorkStartDate != value))
				{
					this._LineWorkStartDate = value;
				}
			}
		}
		
		[Column(Storage="_T3Date", DbType="DateTime")]
		[DataMember(Order=20)]
		public System.Nullable<System.DateTime> T3Date
		{
			get
			{
				return this._T3Date;
			}
			set
			{
				if ((this._T3Date != value))
				{
					this._T3Date = value;
				}
			}
		}
		
		[Column(Storage="_AjustT3Date", DbType="DateTime")]
		[DataMember(Order=21)]
		public System.Nullable<System.DateTime> AjustT3Date
		{
			get
			{
				return this._AjustT3Date;
			}
			set
			{
				if ((this._AjustT3Date != value))
				{
					this._AjustT3Date = value;
				}
			}
		}
		
		[Column(Storage="_AjustT3DateConfirm", DbType="NVarChar(40)")]
		[DataMember(Order=22)]
		public string AjustT3DateConfirm
		{
			get
			{
				return this._AjustT3DateConfirm;
			}
			set
			{
				if ((this._AjustT3DateConfirm != value))
				{
					this._AjustT3DateConfirm = value;
				}
			}
		}
		
		[Column(Storage="_FCLExFtyDate", DbType="DateTime")]
		[DataMember(Order=23)]
		public System.Nullable<System.DateTime> FCLExFtyDate
		{
			get
			{
				return this._FCLExFtyDate;
			}
			set
			{
				if ((this._FCLExFtyDate != value))
				{
					this._FCLExFtyDate = value;
				}
			}
		}
		
		[Column(Storage="_LCLExFtyDate", DbType="DateTime")]
		[DataMember(Order=24)]
		public System.Nullable<System.DateTime> LCLExFtyDate
		{
			get
			{
				return this._LCLExFtyDate;
			}
			set
			{
				if ((this._LCLExFtyDate != value))
				{
					this._LCLExFtyDate = value;
				}
			}
		}
		
		[Column(Storage="_OAConfirm", DbType="NVarChar(40)")]
		[DataMember(Order=25)]
		public string OAConfirm
		{
			get
			{
				return this._OAConfirm;
			}
			set
			{
				if ((this._OAConfirm != value))
				{
					this._OAConfirm = value;
				}
			}
		}
		
		[Column(Storage="_OAConfirmDate", DbType="DateTime")]
		[DataMember(Order=26)]
		public System.Nullable<System.DateTime> OAConfirmDate
		{
			get
			{
				return this._OAConfirmDate;
			}
			set
			{
				if ((this._OAConfirmDate != value))
				{
					this._OAConfirmDate = value;
				}
			}
		}
		
		[Column(Storage="_HeaderConfirm", DbType="NVarChar(40)")]
		[DataMember(Order=27)]
		public string HeaderConfirm
		{
			get
			{
				return this._HeaderConfirm;
			}
			set
			{
				if ((this._HeaderConfirm != value))
				{
					this._HeaderConfirm = value;
				}
			}
		}
		
		[Column(Storage="_HeaderConfirmDate", DbType="DateTime")]
		[DataMember(Order=28)]
		public System.Nullable<System.DateTime> HeaderConfirmDate
		{
			get
			{
				return this._HeaderConfirmDate;
			}
			set
			{
				if ((this._HeaderConfirmDate != value))
				{
					this._HeaderConfirmDate = value;
				}
			}
		}
		
		[Column(Storage="_TopConfirm", DbType="NVarChar(40)")]
		[DataMember(Order=29)]
		public string TopConfirm
		{
			get
			{
				return this._TopConfirm;
			}
			set
			{
				if ((this._TopConfirm != value))
				{
					this._TopConfirm = value;
				}
			}
		}
		
		[Column(Storage="_TopConfirmDate", DbType="DateTime")]
		[DataMember(Order=30)]
		public System.Nullable<System.DateTime> TopConfirmDate
		{
			get
			{
				return this._TopConfirmDate;
			}
			set
			{
				if ((this._TopConfirmDate != value))
				{
					this._TopConfirmDate = value;
				}
			}
		}
		
		[Column(Storage="_PPCConfirm", DbType="NVarChar(40)")]
		[DataMember(Order=31)]
		public string PPCConfirm
		{
			get
			{
				return this._PPCConfirm;
			}
			set
			{
				if ((this._PPCConfirm != value))
				{
					this._PPCConfirm = value;
				}
			}
		}
		
		[Column(Storage="_PPCConfirmDate", DbType="DateTime")]
		[DataMember(Order=32)]
		public System.Nullable<System.DateTime> PPCConfirmDate
		{
			get
			{
				return this._PPCConfirmDate;
			}
			set
			{
				if ((this._PPCConfirmDate != value))
				{
					this._PPCConfirmDate = value;
				}
			}
		}
		
		[Column(Storage="_Users", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		[DataMember(Order=33)]
		public string Users
		{
			get
			{
				return this._Users;
			}
			set
			{
				if ((this._Users != value))
				{
					this._Users = value;
				}
			}
		}
		
		[Column(Storage="_Next", DbType="Int")]
		[DataMember(Order=34)]
		public System.Nullable<int> Next
		{
			get
			{
				return this._Next;
			}
			set
			{
				if ((this._Next != value))
				{
					this._Next = value;
				}
			}
		}
		
		[Column(Storage="_IsRWO", DbType="Bit NOT NULL")]
		[DataMember(Order=35)]
		public bool IsRWO
		{
			get
			{
				return this._IsRWO;
			}
			set
			{
				if ((this._IsRWO != value))
				{
					this._IsRWO = value;
				}
			}
		}
		
		[Column(Name="[Current]", Storage="_Current", DbType="Int")]
		[DataMember(Order=36)]
		public System.Nullable<int> Current
		{
			get
			{
				return this._Current;
			}
			set
			{
				if ((this._Current != value))
				{
					this._Current = value;
				}
			}
		}
		
		[Column(Storage="_ColorCode", DbType="VarChar(3) NOT NULL", CanBeNull=false)]
		[DataMember(Order=37)]
		public string ColorCode
		{
			get
			{
				return this._ColorCode;
			}
			set
			{
				if ((this._ColorCode != value))
				{
					this._ColorCode = value;
				}
			}
		}
		
		[Column(Storage="_RoundNo", DbType="Int NOT NULL")]
		[DataMember(Order=38)]
		public int RoundNo
		{
			get
			{
				return this._RoundNo;
			}
			set
			{
				if ((this._RoundNo != value))
				{
					this._RoundNo = value;
				}
			}
		}
		
		[Column(Storage="_RoundTotal", DbType="Int")]
		[DataMember(Order=39)]
		public System.Nullable<int> RoundTotal
		{
			get
			{
				return this._RoundTotal;
			}
			set
			{
				if ((this._RoundTotal != value))
				{
					this._RoundTotal = value;
				}
			}
		}
		
		[Column(Storage="_ActionStatus", DbType="Int")]
		[DataMember(Order=40)]
		public System.Nullable<int> ActionStatus
		{
			get
			{
				return this._ActionStatus;
			}
			set
			{
				if ((this._ActionStatus != value))
				{
					this._ActionStatus = value;
				}
			}
		}
		
		[Column(Storage="_WCRoundNo", DbType="Int")]
		[DataMember(Order=41)]
		public System.Nullable<int> WCRoundNo
		{
			get
			{
				return this._WCRoundNo;
			}
			set
			{
				if ((this._WCRoundNo != value))
				{
					this._WCRoundNo = value;
				}
			}
		}
		
		[Column(Storage="_WCRoundTotal", DbType="Int")]
		[DataMember(Order=42)]
		public System.Nullable<int> WCRoundTotal
		{
			get
			{
				return this._WCRoundTotal;
			}
			set
			{
				if ((this._WCRoundTotal != value))
				{
					this._WCRoundTotal = value;
				}
			}
		}
		
		[Column(Storage="_BulkQty", DbType="Int")]
		[DataMember(Order=43)]
		public System.Nullable<int> BulkQty
		{
			get
			{
				return this._BulkQty;
			}
			set
			{
				if ((this._BulkQty != value))
				{
					this._BulkQty = value;
				}
			}
		}
		
		[Column(Storage="_SampleQty", DbType="Int")]
		[DataMember(Order=44)]
		public System.Nullable<int> SampleQty
		{
			get
			{
				return this._SampleQty;
			}
			set
			{
				if ((this._SampleQty != value))
				{
					this._SampleQty = value;
				}
			}
		}
		
		[Column(Storage="_LineWorkStartDate_SpecialFactory", DbType="DateTime")]
		[DataMember(Order=45)]
		public System.Nullable<System.DateTime> LineWorkStartDate_SpecialFactory
		{
			get
			{
				return this._LineWorkStartDate_SpecialFactory;
			}
			set
			{
				if ((this._LineWorkStartDate_SpecialFactory != value))
				{
					this._LineWorkStartDate_SpecialFactory = value;
				}
			}
		}
		
		[Column(Storage="_ChosenOption", DbType="Int")]
		[DataMember(Order=46)]
		public System.Nullable<int> ChosenOption
		{
			get
			{
				return this._ChosenOption;
			}
			set
			{
				if ((this._ChosenOption != value))
				{
					this._ChosenOption = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.Style")]
	[DataContract()]
	public partial class Style : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Company;
		
		private string _StyleNo;
		
		private string _ProductDescription;
		
		private System.Nullable<bool> _MaterialContrastColor;
		
		private System.Nullable<bool> _MaterialVariousWidth;
		
		private System.Nullable<bool> _MaterialOthers;
		
		private string _MaterialOthersRemark;
		
		private System.Nullable<System.DateTime> _MaterialDate;
		
		private string _MaterialConfirm;
		
		private System.Nullable<bool> _CuttingBackPart;
		
		private System.Nullable<bool> _CuttingCoverButton;
		
		private System.Nullable<bool> _CuttingMixStyles;
		
		private System.Nullable<bool> _CuttingNotch;
		
		private System.Nullable<bool> _CuttingFabircRelax;
		
		private System.Nullable<int> _CuttingFabircRelaxHours;
		
		private System.Nullable<bool> _Cutting1stLace;
		
		private System.Nullable<int> _Cutting1stLaceClass;
		
		private System.Nullable<double> _Cutting1stLaceWastage;
		
		private System.Nullable<bool> _Cutting2ndLace;
		
		private System.Nullable<int> _Cutting2ndLaceClass;
		
		private System.Nullable<double> _Cutting2ndLaceWastage;
		
		private System.Nullable<bool> _CuttingOthers;
		
		private string _CuttingOthersRemark;
		
		private System.Nullable<System.DateTime> _CuttingDate;
		
		private string _CuttingConfirm;
		
		private System.Nullable<bool> _TestWashing;
		
		private System.Nullable<bool> _TestAZO;
		
		private System.Nullable<bool> _TestShrinkage;
		
		private System.Nullable<bool> _TestFusing;
		
		private System.Nullable<bool> _TestOEKO;
		
		private System.Nullable<bool> _TestElongation;
		
		private System.Nullable<bool> _TestOthers;
		
		private string _TestOthersRemark;
		
		private System.Nullable<System.DateTime> _TestDate;
		
		private string _TestConfirm;
		
		private string _Customer;
		
		private string _CustomerStyleNo;
		
		private string _EndCustCode;
		
		private string _BrandName;
		
		private string _CustomerCollection;
		
		private string _ColorRange;
		
		private string _SizeRange;
		
		private string _CupRange;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private System.Nullable<bool> _CADOthers;
		
		private string _CADOthersRemark;
		
		private System.Nullable<System.DateTime> _CADDate;
		
		private EntitySet<PackagingMaterial> _PackagingMaterials;
		
		private EntitySet<WorkOrder> _WorkOrders;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnStyleNoChanging(string value);
    partial void OnStyleNoChanged();
    partial void OnProductDescriptionChanging(string value);
    partial void OnProductDescriptionChanged();
    partial void OnMaterialContrastColorChanging(System.Nullable<bool> value);
    partial void OnMaterialContrastColorChanged();
    partial void OnMaterialVariousWidthChanging(System.Nullable<bool> value);
    partial void OnMaterialVariousWidthChanged();
    partial void OnMaterialOthersChanging(System.Nullable<bool> value);
    partial void OnMaterialOthersChanged();
    partial void OnMaterialOthersRemarkChanging(string value);
    partial void OnMaterialOthersRemarkChanged();
    partial void OnMaterialDateChanging(System.Nullable<System.DateTime> value);
    partial void OnMaterialDateChanged();
    partial void OnMaterialConfirmChanging(string value);
    partial void OnMaterialConfirmChanged();
    partial void OnCuttingBackPartChanging(System.Nullable<bool> value);
    partial void OnCuttingBackPartChanged();
    partial void OnCuttingCoverButtonChanging(System.Nullable<bool> value);
    partial void OnCuttingCoverButtonChanged();
    partial void OnCuttingMixStylesChanging(System.Nullable<bool> value);
    partial void OnCuttingMixStylesChanged();
    partial void OnCuttingNotchChanging(System.Nullable<bool> value);
    partial void OnCuttingNotchChanged();
    partial void OnCuttingFabircRelaxChanging(System.Nullable<bool> value);
    partial void OnCuttingFabircRelaxChanged();
    partial void OnCuttingFabircRelaxHoursChanging(System.Nullable<int> value);
    partial void OnCuttingFabircRelaxHoursChanged();
    partial void OnCutting1stLaceChanging(System.Nullable<bool> value);
    partial void OnCutting1stLaceChanged();
    partial void OnCutting1stLaceClassChanging(System.Nullable<int> value);
    partial void OnCutting1stLaceClassChanged();
    partial void OnCutting1stLaceWastageChanging(System.Nullable<double> value);
    partial void OnCutting1stLaceWastageChanged();
    partial void OnCutting2ndLaceChanging(System.Nullable<bool> value);
    partial void OnCutting2ndLaceChanged();
    partial void OnCutting2ndLaceClassChanging(System.Nullable<int> value);
    partial void OnCutting2ndLaceClassChanged();
    partial void OnCutting2ndLaceWastageChanging(System.Nullable<double> value);
    partial void OnCutting2ndLaceWastageChanged();
    partial void OnCuttingOthersChanging(System.Nullable<bool> value);
    partial void OnCuttingOthersChanged();
    partial void OnCuttingOthersRemarkChanging(string value);
    partial void OnCuttingOthersRemarkChanged();
    partial void OnCuttingDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCuttingDateChanged();
    partial void OnCuttingConfirmChanging(string value);
    partial void OnCuttingConfirmChanged();
    partial void OnTestWashingChanging(System.Nullable<bool> value);
    partial void OnTestWashingChanged();
    partial void OnTestAZOChanging(System.Nullable<bool> value);
    partial void OnTestAZOChanged();
    partial void OnTestShrinkageChanging(System.Nullable<bool> value);
    partial void OnTestShrinkageChanged();
    partial void OnTestFusingChanging(System.Nullable<bool> value);
    partial void OnTestFusingChanged();
    partial void OnTestOEKOChanging(System.Nullable<bool> value);
    partial void OnTestOEKOChanged();
    partial void OnTestElongationChanging(System.Nullable<bool> value);
    partial void OnTestElongationChanged();
    partial void OnTestOthersChanging(System.Nullable<bool> value);
    partial void OnTestOthersChanged();
    partial void OnTestOthersRemarkChanging(string value);
    partial void OnTestOthersRemarkChanged();
    partial void OnTestDateChanging(System.Nullable<System.DateTime> value);
    partial void OnTestDateChanged();
    partial void OnTestConfirmChanging(string value);
    partial void OnTestConfirmChanged();
    partial void OnCustomerChanging(string value);
    partial void OnCustomerChanged();
    partial void OnCustomerStyleNoChanging(string value);
    partial void OnCustomerStyleNoChanged();
    partial void OnEndCustCodeChanging(string value);
    partial void OnEndCustCodeChanged();
    partial void OnBrandNameChanging(string value);
    partial void OnBrandNameChanged();
    partial void OnCustomerCollectionChanging(string value);
    partial void OnCustomerCollectionChanged();
    partial void OnColorRangeChanging(string value);
    partial void OnColorRangeChanged();
    partial void OnSizeRangeChanging(string value);
    partial void OnSizeRangeChanged();
    partial void OnCupRangeChanging(string value);
    partial void OnCupRangeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnCADOthersChanging(System.Nullable<bool> value);
    partial void OnCADOthersChanged();
    partial void OnCADOthersRemarkChanging(string value);
    partial void OnCADOthersRemarkChanged();
    partial void OnCADDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCADDateChanged();
    #endregion
		
		public Style()
		{
			this.Initialize();
		}
		
		[Column(Storage="_Company", DbType="VarChar(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=1)]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[Column(Storage="_StyleNo", DbType="VarChar(9) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=2)]
		public string StyleNo
		{
			get
			{
				return this._StyleNo;
			}
			set
			{
				if ((this._StyleNo != value))
				{
					this.OnStyleNoChanging(value);
					this.SendPropertyChanging();
					this._StyleNo = value;
					this.SendPropertyChanged("StyleNo");
					this.OnStyleNoChanged();
				}
			}
		}
		
		[Column(Storage="_ProductDescription", DbType="NVarChar(50)")]
		[DataMember(Order=3)]
		public string ProductDescription
		{
			get
			{
				return this._ProductDescription;
			}
			set
			{
				if ((this._ProductDescription != value))
				{
					this.OnProductDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ProductDescription = value;
					this.SendPropertyChanged("ProductDescription");
					this.OnProductDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_MaterialContrastColor", DbType="Bit")]
		[DataMember(Order=4)]
		public System.Nullable<bool> MaterialContrastColor
		{
			get
			{
				return this._MaterialContrastColor;
			}
			set
			{
				if ((this._MaterialContrastColor != value))
				{
					this.OnMaterialContrastColorChanging(value);
					this.SendPropertyChanging();
					this._MaterialContrastColor = value;
					this.SendPropertyChanged("MaterialContrastColor");
					this.OnMaterialContrastColorChanged();
				}
			}
		}
		
		[Column(Storage="_MaterialVariousWidth", DbType="Bit")]
		[DataMember(Order=5)]
		public System.Nullable<bool> MaterialVariousWidth
		{
			get
			{
				return this._MaterialVariousWidth;
			}
			set
			{
				if ((this._MaterialVariousWidth != value))
				{
					this.OnMaterialVariousWidthChanging(value);
					this.SendPropertyChanging();
					this._MaterialVariousWidth = value;
					this.SendPropertyChanged("MaterialVariousWidth");
					this.OnMaterialVariousWidthChanged();
				}
			}
		}
		
		[Column(Storage="_MaterialOthers", DbType="Bit")]
		[DataMember(Order=6)]
		public System.Nullable<bool> MaterialOthers
		{
			get
			{
				return this._MaterialOthers;
			}
			set
			{
				if ((this._MaterialOthers != value))
				{
					this.OnMaterialOthersChanging(value);
					this.SendPropertyChanging();
					this._MaterialOthers = value;
					this.SendPropertyChanged("MaterialOthers");
					this.OnMaterialOthersChanged();
				}
			}
		}
		
		[Column(Storage="_MaterialOthersRemark", DbType="NVarChar(1000)")]
		[DataMember(Order=7)]
		public string MaterialOthersRemark
		{
			get
			{
				return this._MaterialOthersRemark;
			}
			set
			{
				if ((this._MaterialOthersRemark != value))
				{
					this.OnMaterialOthersRemarkChanging(value);
					this.SendPropertyChanging();
					this._MaterialOthersRemark = value;
					this.SendPropertyChanged("MaterialOthersRemark");
					this.OnMaterialOthersRemarkChanged();
				}
			}
		}
		
		[Column(Storage="_MaterialDate", DbType="DateTime")]
		[DataMember(Order=8)]
		public System.Nullable<System.DateTime> MaterialDate
		{
			get
			{
				return this._MaterialDate;
			}
			set
			{
				if ((this._MaterialDate != value))
				{
					this.OnMaterialDateChanging(value);
					this.SendPropertyChanging();
					this._MaterialDate = value;
					this.SendPropertyChanged("MaterialDate");
					this.OnMaterialDateChanged();
				}
			}
		}
		
		[Column(Storage="_MaterialConfirm", DbType="NVarChar(20)")]
		[DataMember(Order=9)]
		public string MaterialConfirm
		{
			get
			{
				return this._MaterialConfirm;
			}
			set
			{
				if ((this._MaterialConfirm != value))
				{
					this.OnMaterialConfirmChanging(value);
					this.SendPropertyChanging();
					this._MaterialConfirm = value;
					this.SendPropertyChanged("MaterialConfirm");
					this.OnMaterialConfirmChanged();
				}
			}
		}
		
		[Column(Storage="_CuttingBackPart", DbType="Bit")]
		[DataMember(Order=10)]
		public System.Nullable<bool> CuttingBackPart
		{
			get
			{
				return this._CuttingBackPart;
			}
			set
			{
				if ((this._CuttingBackPart != value))
				{
					this.OnCuttingBackPartChanging(value);
					this.SendPropertyChanging();
					this._CuttingBackPart = value;
					this.SendPropertyChanged("CuttingBackPart");
					this.OnCuttingBackPartChanged();
				}
			}
		}
		
		[Column(Storage="_CuttingCoverButton", DbType="Bit")]
		[DataMember(Order=11)]
		public System.Nullable<bool> CuttingCoverButton
		{
			get
			{
				return this._CuttingCoverButton;
			}
			set
			{
				if ((this._CuttingCoverButton != value))
				{
					this.OnCuttingCoverButtonChanging(value);
					this.SendPropertyChanging();
					this._CuttingCoverButton = value;
					this.SendPropertyChanged("CuttingCoverButton");
					this.OnCuttingCoverButtonChanged();
				}
			}
		}
		
		[Column(Storage="_CuttingMixStyles", DbType="Bit")]
		[DataMember(Order=12)]
		public System.Nullable<bool> CuttingMixStyles
		{
			get
			{
				return this._CuttingMixStyles;
			}
			set
			{
				if ((this._CuttingMixStyles != value))
				{
					this.OnCuttingMixStylesChanging(value);
					this.SendPropertyChanging();
					this._CuttingMixStyles = value;
					this.SendPropertyChanged("CuttingMixStyles");
					this.OnCuttingMixStylesChanged();
				}
			}
		}
		
		[Column(Storage="_CuttingNotch", DbType="Bit")]
		[DataMember(Order=13)]
		public System.Nullable<bool> CuttingNotch
		{
			get
			{
				return this._CuttingNotch;
			}
			set
			{
				if ((this._CuttingNotch != value))
				{
					this.OnCuttingNotchChanging(value);
					this.SendPropertyChanging();
					this._CuttingNotch = value;
					this.SendPropertyChanged("CuttingNotch");
					this.OnCuttingNotchChanged();
				}
			}
		}
		
		[Column(Storage="_CuttingFabircRelax", DbType="Bit")]
		[DataMember(Order=14)]
		public System.Nullable<bool> CuttingFabircRelax
		{
			get
			{
				return this._CuttingFabircRelax;
			}
			set
			{
				if ((this._CuttingFabircRelax != value))
				{
					this.OnCuttingFabircRelaxChanging(value);
					this.SendPropertyChanging();
					this._CuttingFabircRelax = value;
					this.SendPropertyChanged("CuttingFabircRelax");
					this.OnCuttingFabircRelaxChanged();
				}
			}
		}
		
		[Column(Storage="_CuttingFabircRelaxHours", DbType="Int")]
		[DataMember(Order=15)]
		public System.Nullable<int> CuttingFabircRelaxHours
		{
			get
			{
				return this._CuttingFabircRelaxHours;
			}
			set
			{
				if ((this._CuttingFabircRelaxHours != value))
				{
					this.OnCuttingFabircRelaxHoursChanging(value);
					this.SendPropertyChanging();
					this._CuttingFabircRelaxHours = value;
					this.SendPropertyChanged("CuttingFabircRelaxHours");
					this.OnCuttingFabircRelaxHoursChanged();
				}
			}
		}
		
		[Column(Storage="_Cutting1stLace", DbType="Bit")]
		[DataMember(Order=16)]
		public System.Nullable<bool> Cutting1stLace
		{
			get
			{
				return this._Cutting1stLace;
			}
			set
			{
				if ((this._Cutting1stLace != value))
				{
					this.OnCutting1stLaceChanging(value);
					this.SendPropertyChanging();
					this._Cutting1stLace = value;
					this.SendPropertyChanged("Cutting1stLace");
					this.OnCutting1stLaceChanged();
				}
			}
		}
		
		[Column(Storage="_Cutting1stLaceClass", DbType="Int")]
		[DataMember(Order=17)]
		public System.Nullable<int> Cutting1stLaceClass
		{
			get
			{
				return this._Cutting1stLaceClass;
			}
			set
			{
				if ((this._Cutting1stLaceClass != value))
				{
					this.OnCutting1stLaceClassChanging(value);
					this.SendPropertyChanging();
					this._Cutting1stLaceClass = value;
					this.SendPropertyChanged("Cutting1stLaceClass");
					this.OnCutting1stLaceClassChanged();
				}
			}
		}
		
		[Column(Storage="_Cutting1stLaceWastage", DbType="Float")]
		[DataMember(Order=18)]
		public System.Nullable<double> Cutting1stLaceWastage
		{
			get
			{
				return this._Cutting1stLaceWastage;
			}
			set
			{
				if ((this._Cutting1stLaceWastage != value))
				{
					this.OnCutting1stLaceWastageChanging(value);
					this.SendPropertyChanging();
					this._Cutting1stLaceWastage = value;
					this.SendPropertyChanged("Cutting1stLaceWastage");
					this.OnCutting1stLaceWastageChanged();
				}
			}
		}
		
		[Column(Storage="_Cutting2ndLace", DbType="Bit")]
		[DataMember(Order=19)]
		public System.Nullable<bool> Cutting2ndLace
		{
			get
			{
				return this._Cutting2ndLace;
			}
			set
			{
				if ((this._Cutting2ndLace != value))
				{
					this.OnCutting2ndLaceChanging(value);
					this.SendPropertyChanging();
					this._Cutting2ndLace = value;
					this.SendPropertyChanged("Cutting2ndLace");
					this.OnCutting2ndLaceChanged();
				}
			}
		}
		
		[Column(Storage="_Cutting2ndLaceClass", DbType="Int")]
		[DataMember(Order=20)]
		public System.Nullable<int> Cutting2ndLaceClass
		{
			get
			{
				return this._Cutting2ndLaceClass;
			}
			set
			{
				if ((this._Cutting2ndLaceClass != value))
				{
					this.OnCutting2ndLaceClassChanging(value);
					this.SendPropertyChanging();
					this._Cutting2ndLaceClass = value;
					this.SendPropertyChanged("Cutting2ndLaceClass");
					this.OnCutting2ndLaceClassChanged();
				}
			}
		}
		
		[Column(Storage="_Cutting2ndLaceWastage", DbType="Float")]
		[DataMember(Order=21)]
		public System.Nullable<double> Cutting2ndLaceWastage
		{
			get
			{
				return this._Cutting2ndLaceWastage;
			}
			set
			{
				if ((this._Cutting2ndLaceWastage != value))
				{
					this.OnCutting2ndLaceWastageChanging(value);
					this.SendPropertyChanging();
					this._Cutting2ndLaceWastage = value;
					this.SendPropertyChanged("Cutting2ndLaceWastage");
					this.OnCutting2ndLaceWastageChanged();
				}
			}
		}
		
		[Column(Storage="_CuttingOthers", DbType="Bit")]
		[DataMember(Order=22)]
		public System.Nullable<bool> CuttingOthers
		{
			get
			{
				return this._CuttingOthers;
			}
			set
			{
				if ((this._CuttingOthers != value))
				{
					this.OnCuttingOthersChanging(value);
					this.SendPropertyChanging();
					this._CuttingOthers = value;
					this.SendPropertyChanged("CuttingOthers");
					this.OnCuttingOthersChanged();
				}
			}
		}
		
		[Column(Storage="_CuttingOthersRemark", DbType="NVarChar(1000)")]
		[DataMember(Order=23)]
		public string CuttingOthersRemark
		{
			get
			{
				return this._CuttingOthersRemark;
			}
			set
			{
				if ((this._CuttingOthersRemark != value))
				{
					this.OnCuttingOthersRemarkChanging(value);
					this.SendPropertyChanging();
					this._CuttingOthersRemark = value;
					this.SendPropertyChanged("CuttingOthersRemark");
					this.OnCuttingOthersRemarkChanged();
				}
			}
		}
		
		[Column(Storage="_CuttingDate", DbType="DateTime")]
		[DataMember(Order=24)]
		public System.Nullable<System.DateTime> CuttingDate
		{
			get
			{
				return this._CuttingDate;
			}
			set
			{
				if ((this._CuttingDate != value))
				{
					this.OnCuttingDateChanging(value);
					this.SendPropertyChanging();
					this._CuttingDate = value;
					this.SendPropertyChanged("CuttingDate");
					this.OnCuttingDateChanged();
				}
			}
		}
		
		[Column(Storage="_CuttingConfirm", DbType="NVarChar(20)")]
		[DataMember(Order=25)]
		public string CuttingConfirm
		{
			get
			{
				return this._CuttingConfirm;
			}
			set
			{
				if ((this._CuttingConfirm != value))
				{
					this.OnCuttingConfirmChanging(value);
					this.SendPropertyChanging();
					this._CuttingConfirm = value;
					this.SendPropertyChanged("CuttingConfirm");
					this.OnCuttingConfirmChanged();
				}
			}
		}
		
		[Column(Storage="_TestWashing", DbType="Bit")]
		[DataMember(Order=26)]
		public System.Nullable<bool> TestWashing
		{
			get
			{
				return this._TestWashing;
			}
			set
			{
				if ((this._TestWashing != value))
				{
					this.OnTestWashingChanging(value);
					this.SendPropertyChanging();
					this._TestWashing = value;
					this.SendPropertyChanged("TestWashing");
					this.OnTestWashingChanged();
				}
			}
		}
		
		[Column(Storage="_TestAZO", DbType="Bit")]
		[DataMember(Order=27)]
		public System.Nullable<bool> TestAZO
		{
			get
			{
				return this._TestAZO;
			}
			set
			{
				if ((this._TestAZO != value))
				{
					this.OnTestAZOChanging(value);
					this.SendPropertyChanging();
					this._TestAZO = value;
					this.SendPropertyChanged("TestAZO");
					this.OnTestAZOChanged();
				}
			}
		}
		
		[Column(Storage="_TestShrinkage", DbType="Bit")]
		[DataMember(Order=28)]
		public System.Nullable<bool> TestShrinkage
		{
			get
			{
				return this._TestShrinkage;
			}
			set
			{
				if ((this._TestShrinkage != value))
				{
					this.OnTestShrinkageChanging(value);
					this.SendPropertyChanging();
					this._TestShrinkage = value;
					this.SendPropertyChanged("TestShrinkage");
					this.OnTestShrinkageChanged();
				}
			}
		}
		
		[Column(Storage="_TestFusing", DbType="Bit")]
		[DataMember(Order=29)]
		public System.Nullable<bool> TestFusing
		{
			get
			{
				return this._TestFusing;
			}
			set
			{
				if ((this._TestFusing != value))
				{
					this.OnTestFusingChanging(value);
					this.SendPropertyChanging();
					this._TestFusing = value;
					this.SendPropertyChanged("TestFusing");
					this.OnTestFusingChanged();
				}
			}
		}
		
		[Column(Storage="_TestOEKO", DbType="Bit")]
		[DataMember(Order=30)]
		public System.Nullable<bool> TestOEKO
		{
			get
			{
				return this._TestOEKO;
			}
			set
			{
				if ((this._TestOEKO != value))
				{
					this.OnTestOEKOChanging(value);
					this.SendPropertyChanging();
					this._TestOEKO = value;
					this.SendPropertyChanged("TestOEKO");
					this.OnTestOEKOChanged();
				}
			}
		}
		
		[Column(Storage="_TestElongation", DbType="Bit")]
		[DataMember(Order=31)]
		public System.Nullable<bool> TestElongation
		{
			get
			{
				return this._TestElongation;
			}
			set
			{
				if ((this._TestElongation != value))
				{
					this.OnTestElongationChanging(value);
					this.SendPropertyChanging();
					this._TestElongation = value;
					this.SendPropertyChanged("TestElongation");
					this.OnTestElongationChanged();
				}
			}
		}
		
		[Column(Storage="_TestOthers", DbType="Bit")]
		[DataMember(Order=32)]
		public System.Nullable<bool> TestOthers
		{
			get
			{
				return this._TestOthers;
			}
			set
			{
				if ((this._TestOthers != value))
				{
					this.OnTestOthersChanging(value);
					this.SendPropertyChanging();
					this._TestOthers = value;
					this.SendPropertyChanged("TestOthers");
					this.OnTestOthersChanged();
				}
			}
		}
		
		[Column(Storage="_TestOthersRemark", DbType="NVarChar(1000)")]
		[DataMember(Order=33)]
		public string TestOthersRemark
		{
			get
			{
				return this._TestOthersRemark;
			}
			set
			{
				if ((this._TestOthersRemark != value))
				{
					this.OnTestOthersRemarkChanging(value);
					this.SendPropertyChanging();
					this._TestOthersRemark = value;
					this.SendPropertyChanged("TestOthersRemark");
					this.OnTestOthersRemarkChanged();
				}
			}
		}
		
		[Column(Storage="_TestDate", DbType="DateTime")]
		[DataMember(Order=34)]
		public System.Nullable<System.DateTime> TestDate
		{
			get
			{
				return this._TestDate;
			}
			set
			{
				if ((this._TestDate != value))
				{
					this.OnTestDateChanging(value);
					this.SendPropertyChanging();
					this._TestDate = value;
					this.SendPropertyChanged("TestDate");
					this.OnTestDateChanged();
				}
			}
		}
		
		[Column(Storage="_TestConfirm", DbType="NVarChar(20)")]
		[DataMember(Order=35)]
		public string TestConfirm
		{
			get
			{
				return this._TestConfirm;
			}
			set
			{
				if ((this._TestConfirm != value))
				{
					this.OnTestConfirmChanging(value);
					this.SendPropertyChanging();
					this._TestConfirm = value;
					this.SendPropertyChanged("TestConfirm");
					this.OnTestConfirmChanged();
				}
			}
		}
		
		[Column(Storage="_Customer", DbType="NVarChar(20)")]
		[DataMember(Order=36)]
		public string Customer
		{
			get
			{
				return this._Customer;
			}
			set
			{
				if ((this._Customer != value))
				{
					this.OnCustomerChanging(value);
					this.SendPropertyChanging();
					this._Customer = value;
					this.SendPropertyChanged("Customer");
					this.OnCustomerChanged();
				}
			}
		}
		
		[Column(Storage="_CustomerStyleNo", DbType="NVarChar(50)")]
		[DataMember(Order=37)]
		public string CustomerStyleNo
		{
			get
			{
				return this._CustomerStyleNo;
			}
			set
			{
				if ((this._CustomerStyleNo != value))
				{
					this.OnCustomerStyleNoChanging(value);
					this.SendPropertyChanging();
					this._CustomerStyleNo = value;
					this.SendPropertyChanged("CustomerStyleNo");
					this.OnCustomerStyleNoChanged();
				}
			}
		}
		
		[Column(Storage="_EndCustCode", DbType="NVarChar(20)")]
		[DataMember(Order=38)]
		public string EndCustCode
		{
			get
			{
				return this._EndCustCode;
			}
			set
			{
				if ((this._EndCustCode != value))
				{
					this.OnEndCustCodeChanging(value);
					this.SendPropertyChanging();
					this._EndCustCode = value;
					this.SendPropertyChanged("EndCustCode");
					this.OnEndCustCodeChanged();
				}
			}
		}
		
		[Column(Storage="_BrandName", DbType="NVarChar(100)")]
		[DataMember(Order=39)]
		public string BrandName
		{
			get
			{
				return this._BrandName;
			}
			set
			{
				if ((this._BrandName != value))
				{
					this.OnBrandNameChanging(value);
					this.SendPropertyChanging();
					this._BrandName = value;
					this.SendPropertyChanged("BrandName");
					this.OnBrandNameChanged();
				}
			}
		}
		
		[Column(Storage="_CustomerCollection", DbType="NVarChar(100)")]
		[DataMember(Order=40)]
		public string CustomerCollection
		{
			get
			{
				return this._CustomerCollection;
			}
			set
			{
				if ((this._CustomerCollection != value))
				{
					this.OnCustomerCollectionChanging(value);
					this.SendPropertyChanging();
					this._CustomerCollection = value;
					this.SendPropertyChanged("CustomerCollection");
					this.OnCustomerCollectionChanged();
				}
			}
		}
		
		[Column(Storage="_ColorRange", DbType="NVarChar(100)")]
		[DataMember(Order=41)]
		public string ColorRange
		{
			get
			{
				return this._ColorRange;
			}
			set
			{
				if ((this._ColorRange != value))
				{
					this.OnColorRangeChanging(value);
					this.SendPropertyChanging();
					this._ColorRange = value;
					this.SendPropertyChanged("ColorRange");
					this.OnColorRangeChanged();
				}
			}
		}
		
		[Column(Storage="_SizeRange", DbType="NVarChar(100)")]
		[DataMember(Order=42)]
		public string SizeRange
		{
			get
			{
				return this._SizeRange;
			}
			set
			{
				if ((this._SizeRange != value))
				{
					this.OnSizeRangeChanging(value);
					this.SendPropertyChanging();
					this._SizeRange = value;
					this.SendPropertyChanged("SizeRange");
					this.OnSizeRangeChanged();
				}
			}
		}
		
		[Column(Storage="_CupRange", DbType="NVarChar(100)")]
		[DataMember(Order=43)]
		public string CupRange
		{
			get
			{
				return this._CupRange;
			}
			set
			{
				if ((this._CupRange != value))
				{
					this.OnCupRangeChanging(value);
					this.SendPropertyChanging();
					this._CupRange = value;
					this.SendPropertyChanged("CupRange");
					this.OnCupRangeChanged();
				}
			}
		}
		
		[Column(Storage="_CreateDate", DbType="DateTime")]
		[DataMember(Order=44)]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[Column(Storage="_CADOthers", DbType="Bit")]
		[DataMember(Order=45)]
		public System.Nullable<bool> CADOthers
		{
			get
			{
				return this._CADOthers;
			}
			set
			{
				if ((this._CADOthers != value))
				{
					this.OnCADOthersChanging(value);
					this.SendPropertyChanging();
					this._CADOthers = value;
					this.SendPropertyChanged("CADOthers");
					this.OnCADOthersChanged();
				}
			}
		}
		
		[Column(Storage="_CADOthersRemark", DbType="NVarChar(1000)")]
		[DataMember(Order=46)]
		public string CADOthersRemark
		{
			get
			{
				return this._CADOthersRemark;
			}
			set
			{
				if ((this._CADOthersRemark != value))
				{
					this.OnCADOthersRemarkChanging(value);
					this.SendPropertyChanging();
					this._CADOthersRemark = value;
					this.SendPropertyChanged("CADOthersRemark");
					this.OnCADOthersRemarkChanged();
				}
			}
		}
		
		[Column(Storage="_CADDate", DbType="DateTime")]
		[DataMember(Order=47)]
		public System.Nullable<System.DateTime> CADDate
		{
			get
			{
				return this._CADDate;
			}
			set
			{
				if ((this._CADDate != value))
				{
					this.OnCADDateChanging(value);
					this.SendPropertyChanging();
					this._CADDate = value;
					this.SendPropertyChanged("CADDate");
					this.OnCADDateChanged();
				}
			}
		}
		
		[Association(Name="Style_PackagingMaterial", Storage="_PackagingMaterials", ThisKey="Company,StyleNo", OtherKey="Company,StyleNo")]
		[DataMember(Order=48, EmitDefaultValue=false)]
		public EntitySet<PackagingMaterial> PackagingMaterials
		{
			get
			{
				if ((this.serializing 
							&& (this._PackagingMaterials.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._PackagingMaterials;
			}
			set
			{
				this._PackagingMaterials.Assign(value);
			}
		}
		
		[Association(Name="Style_WorkOrder", Storage="_WorkOrders", ThisKey="Company,StyleNo", OtherKey="Company,StyleNo")]
		[DataMember(Order=49, EmitDefaultValue=false)]
		public EntitySet<WorkOrder> WorkOrders
		{
			get
			{
				if ((this.serializing 
							&& (this._WorkOrders.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._WorkOrders;
			}
			set
			{
				this._WorkOrders.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PackagingMaterials(PackagingMaterial entity)
		{
			this.SendPropertyChanging();
			entity.Style = this;
		}
		
		private void detach_PackagingMaterials(PackagingMaterial entity)
		{
			this.SendPropertyChanging();
			entity.Style = null;
		}
		
		private void attach_WorkOrders(WorkOrder entity)
		{
			this.SendPropertyChanging();
			entity.Style = this;
		}
		
		private void detach_WorkOrders(WorkOrder entity)
		{
			this.SendPropertyChanging();
			entity.Style = null;
		}
		
		private void Initialize()
		{
			this._PackagingMaterials = new EntitySet<PackagingMaterial>(new Action<PackagingMaterial>(this.attach_PackagingMaterials), new Action<PackagingMaterial>(this.detach_PackagingMaterials));
			this._WorkOrders = new EntitySet<WorkOrder>(new Action<WorkOrder>(this.attach_WorkOrders), new Action<WorkOrder>(this.detach_WorkOrders));
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[OnSerializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[OnSerialized()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[Table(Name="dbo.Email")]
	[DataContract()]
	public partial class Email : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OID;
		
		private string _Dept;
		
		private string _EmailTo;
		
		private string _EmailCc;
		
		private string _Customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOIDChanging(int value);
    partial void OnOIDChanged();
    partial void OnDeptChanging(string value);
    partial void OnDeptChanged();
    partial void OnEmailToChanging(string value);
    partial void OnEmailToChanged();
    partial void OnEmailCcChanging(string value);
    partial void OnEmailCcChanged();
    partial void OnCustomerChanging(string value);
    partial void OnCustomerChanged();
    #endregion
		
		public Email()
		{
			this.Initialize();
		}
		
		[Column(Storage="_OID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=1)]
		public int OID
		{
			get
			{
				return this._OID;
			}
			set
			{
				if ((this._OID != value))
				{
					this.OnOIDChanging(value);
					this.SendPropertyChanging();
					this._OID = value;
					this.SendPropertyChanged("OID");
					this.OnOIDChanged();
				}
			}
		}
		
		[Column(Storage="_Dept", DbType="VarChar(20)")]
		[DataMember(Order=2)]
		public string Dept
		{
			get
			{
				return this._Dept;
			}
			set
			{
				if ((this._Dept != value))
				{
					this.OnDeptChanging(value);
					this.SendPropertyChanging();
					this._Dept = value;
					this.SendPropertyChanged("Dept");
					this.OnDeptChanged();
				}
			}
		}
		
		[Column(Storage="_EmailTo", DbType="VarChar(MAX)")]
		[DataMember(Order=3)]
		public string EmailTo
		{
			get
			{
				return this._EmailTo;
			}
			set
			{
				if ((this._EmailTo != value))
				{
					this.OnEmailToChanging(value);
					this.SendPropertyChanging();
					this._EmailTo = value;
					this.SendPropertyChanged("EmailTo");
					this.OnEmailToChanged();
				}
			}
		}
		
		[Column(Storage="_EmailCc", DbType="VarChar(MAX)")]
		[DataMember(Order=4)]
		public string EmailCc
		{
			get
			{
				return this._EmailCc;
			}
			set
			{
				if ((this._EmailCc != value))
				{
					this.OnEmailCcChanging(value);
					this.SendPropertyChanging();
					this._EmailCc = value;
					this.SendPropertyChanged("EmailCc");
					this.OnEmailCcChanged();
				}
			}
		}
		
		[Column(Storage="_Customer", DbType="VarChar(MAX)")]
		[DataMember(Order=5)]
		public string Customer
		{
			get
			{
				return this._Customer;
			}
			set
			{
				if ((this._Customer != value))
				{
					this.OnCustomerChanging(value);
					this.SendPropertyChanging();
					this._Customer = value;
					this.SendPropertyChanged("Customer");
					this.OnCustomerChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[Table(Name="dbo.CustomerCode")]
	[DataContract()]
	public partial class CustomerCode : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Customer;
		
		private string _CustomerCode1;
		
		private string _Team;
		
		private string _SizeSystem;
		
		private string _CustomerAlias;
		
		private string _Remark;
		
		private EntitySet<CustomerCommission> _CustomerCommissions;
		
		private EntitySet<CustomerBrandCategory> _CustomerBrandCategories;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomerChanging(string value);
    partial void OnCustomerChanged();
    partial void OnCustomerCode1Changing(string value);
    partial void OnCustomerCode1Changed();
    partial void OnTeamChanging(string value);
    partial void OnTeamChanged();
    partial void OnSizeSystemChanging(string value);
    partial void OnSizeSystemChanged();
    partial void OnCustomerAliasChanging(string value);
    partial void OnCustomerAliasChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public CustomerCode()
		{
			this.Initialize();
		}
		
		[Column(Storage="_Customer", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=1)]
		public string Customer
		{
			get
			{
				return this._Customer;
			}
			set
			{
				if ((this._Customer != value))
				{
					this.OnCustomerChanging(value);
					this.SendPropertyChanging();
					this._Customer = value;
					this.SendPropertyChanged("Customer");
					this.OnCustomerChanged();
				}
			}
		}
		
		[Column(Name="CustomerCode", Storage="_CustomerCode1", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=2)]
		public string CustomerCode1
		{
			get
			{
				return this._CustomerCode1;
			}
			set
			{
				if ((this._CustomerCode1 != value))
				{
					this.OnCustomerCode1Changing(value);
					this.SendPropertyChanging();
					this._CustomerCode1 = value;
					this.SendPropertyChanged("CustomerCode1");
					this.OnCustomerCode1Changed();
				}
			}
		}
		
		[Column(Storage="_Team", DbType="VarChar(50)")]
		[DataMember(Order=3)]
		public string Team
		{
			get
			{
				return this._Team;
			}
			set
			{
				if ((this._Team != value))
				{
					this.OnTeamChanging(value);
					this.SendPropertyChanging();
					this._Team = value;
					this.SendPropertyChanged("Team");
					this.OnTeamChanged();
				}
			}
		}
		
		[Column(Storage="_SizeSystem", DbType="NVarChar(50)")]
		[DataMember(Order=4)]
		public string SizeSystem
		{
			get
			{
				return this._SizeSystem;
			}
			set
			{
				if ((this._SizeSystem != value))
				{
					this.OnSizeSystemChanging(value);
					this.SendPropertyChanging();
					this._SizeSystem = value;
					this.SendPropertyChanged("SizeSystem");
					this.OnSizeSystemChanged();
				}
			}
		}
		
		[Column(Storage="_CustomerAlias", DbType="NVarChar(50)")]
		[DataMember(Order=5)]
		public string CustomerAlias
		{
			get
			{
				return this._CustomerAlias;
			}
			set
			{
				if ((this._CustomerAlias != value))
				{
					this.OnCustomerAliasChanging(value);
					this.SendPropertyChanging();
					this._CustomerAlias = value;
					this.SendPropertyChanged("CustomerAlias");
					this.OnCustomerAliasChanged();
				}
			}
		}
		
		[Column(Storage="_Remark", DbType="VarChar(300)")]
		[DataMember(Order=6)]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[Association(Name="CustomerCode_CustomerCommission", Storage="_CustomerCommissions", ThisKey="Customer,CustomerCode1", OtherKey="Customer,CustomerCodeF")]
		[DataMember(Order=7, EmitDefaultValue=false)]
		public EntitySet<CustomerCommission> CustomerCommissions
		{
			get
			{
				if ((this.serializing 
							&& (this._CustomerCommissions.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CustomerCommissions;
			}
			set
			{
				this._CustomerCommissions.Assign(value);
			}
		}
		
		[Association(Name="CustomerCode_CustomerBrandCategory", Storage="_CustomerBrandCategories", ThisKey="Customer,CustomerCode1", OtherKey="Customer,CustCode")]
		[DataMember(Order=8, EmitDefaultValue=false)]
		public EntitySet<CustomerBrandCategory> CustomerBrandCategories
		{
			get
			{
				if ((this.serializing 
							&& (this._CustomerBrandCategories.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CustomerBrandCategories;
			}
			set
			{
				this._CustomerBrandCategories.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CustomerCommissions(CustomerCommission entity)
		{
			this.SendPropertyChanging();
			entity.CustomerCode = this;
		}
		
		private void detach_CustomerCommissions(CustomerCommission entity)
		{
			this.SendPropertyChanging();
			entity.CustomerCode = null;
		}
		
		private void attach_CustomerBrandCategories(CustomerBrandCategory entity)
		{
			this.SendPropertyChanging();
			entity.CustomerCode = this;
		}
		
		private void detach_CustomerBrandCategories(CustomerBrandCategory entity)
		{
			this.SendPropertyChanging();
			entity.CustomerCode = null;
		}
		
		private void Initialize()
		{
			this._CustomerCommissions = new EntitySet<CustomerCommission>(new Action<CustomerCommission>(this.attach_CustomerCommissions), new Action<CustomerCommission>(this.detach_CustomerCommissions));
			this._CustomerBrandCategories = new EntitySet<CustomerBrandCategory>(new Action<CustomerBrandCategory>(this.attach_CustomerBrandCategories), new Action<CustomerBrandCategory>(this.detach_CustomerBrandCategories));
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[OnSerializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[OnSerialized()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[Table(Name="dbo.WorkOrder")]
	[DataContract()]
	public partial class WorkOrder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Company;
		
		private string _SalesOrderNo;
		
		private string _WorkOrderNo;
		
		private int _SalesOrderLine;
		
		private string _StyleNo;
		
		private string _CustomerStyleNo;
		
		private string _CustomerPO;
		
		private string _CustStyleTrackingNo;
		
		private string _CustomerCollection;
		
		private System.Nullable<int> _AmendmentNo;
		
		private System.Nullable<int> _Version;
		
		private string _SeasonRange;
		
		private string _ShipMode;
		
		private string _PackingMethod;
		
		private string _WOStatus;
		
		private string _CatNo;
		
		private string _Category;
		
		private string _Destination;
		
		private string _BrandName;
		
		private System.Nullable<decimal> _UnitPrice;
		
		private System.Nullable<decimal> _HKPrice;
		
		private string _StyleUPX;
		
		private string _DBC;
		
		private System.Nullable<System.DateTime> _ETADate;
		
		private System.Nullable<System.DateTime> _DCDate;
		
		private System.Nullable<System.DateTime> _CommitmentDate;
		
		private System.Nullable<System.DateTime> _PODate;
		
		private System.Nullable<System.DateTime> _ConfirmedDate;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private System.Nullable<int> _Ratio;
		
		private System.Nullable<decimal> _MaxOvershipQtyRatio;
		
		private string _BulkvsSOQty;
		
		private System.Nullable<bool> _StyleOrder;
		
		private System.Nullable<bool> _StyleRevision;
		
		private System.Nullable<double> _SAH;
		
		private string _BaseSize;
		
		private string _SizeMatrix;
		
		private string _Composition;
		
		private string _Notepad;
		
		private string _OAConfirm;
		
		private System.Nullable<System.DateTime> _OAConfirmDate;
		
		private string _HeaderConfirm;
		
		private System.Nullable<System.DateTime> _HeaderConfirmDate;
		
		private string _TopConfirm;
		
		private System.Nullable<System.DateTime> _TopConfirmDate;
		
		private string _PPCConfirm;
		
		private System.Nullable<System.DateTime> _PPCConfirmDate;
		
		private System.Nullable<System.DateTime> _DeliveryStartShip;
		
		private System.Nullable<System.DateTime> _DeliveryShipCompleted;
		
		private System.Nullable<System.DateTime> _ClosingStartShip;
		
		private System.Nullable<System.DateTime> _ClosingShipCompleted;
		
		private System.Nullable<System.DateTime> _WOCreateDate;
		
		private System.Nullable<System.DateTime> _WOReviseDate;
		
		private System.Nullable<System.DateTime> _FactoryWorkStartShip;
		
		private System.Nullable<System.DateTime> _FactoryWorkShipCompleted;
		
		private System.Nullable<System.DateTime> _LineWorkStartShip;
		
		private System.Nullable<System.DateTime> _LineWorkShipCompleted;
		
		private System.Nullable<System.DateTime> _T3StartShip;
		
		private System.Nullable<System.DateTime> _T3ShipCompleted;
		
		private System.Nullable<System.DateTime> _T3Adjust;
		
		private string _AjustT3DateConfirm;
		
		private System.Nullable<System.DateTime> _LCLExFtyStartShip;
		
		private System.Nullable<System.DateTime> _LCLExFtyShipCompleted;
		
		private System.Nullable<System.DateTime> _FCLExFtyStartShip;
		
		private System.Nullable<System.DateTime> _FCLExFtyShipCompleted;
		
		private System.Nullable<bool> _TestWashing;
		
		private System.Nullable<bool> _TestAZO;
		
		private System.Nullable<bool> _TestShrinkage;
		
		private System.Nullable<bool> _TestFusing;
		
		private System.Nullable<bool> _TestOEKO;
		
		private System.Nullable<bool> _TestElongation;
		
		private System.Nullable<bool> _TestOthers;
		
		private string _TestOthersRemark;
		
		private System.Nullable<System.DateTime> _TestDate;
		
		private string _TestConfirm;
		
		private System.Nullable<bool> _CuttingMixStyles;
		
		private System.Nullable<bool> _CuttingOthers;
		
		private string _CuttingOthersRemark;
		
		private string _SampleDesptachQtyAndDate;
		
		private System.Nullable<int> _ActionStatus;
		
		private System.Nullable<System.DateTime> _ActionStatusDate;
		
		private string _PackReference;
		
		private string _LabelReference;
		
		private System.Nullable<System.DateTime> _FirstStationStartShip;
		
		private System.Nullable<System.DateTime> _FirstStationShipCompleted;
		
		private System.Nullable<double> _NumberOfLine;
		
		private System.Nullable<double> _EFF;
		
		private System.Nullable<double> _CU;
		
		private System.Nullable<double> _WF;
		
		private string _ShipModeChangeRemark;
		
		private System.Nullable<double> _Line_SAH;
		
		private System.Nullable<System.DateTime> _CompletedDate;
		
		private System.Nullable<System.DateTime> _TransitDate;
		
		private System.Nullable<decimal> _ProductPrice;
		
		private string _Currency;
		
		private string _SpecialFactory;
		
		private string _AssignFactory;
		
		private string _CasingMethod;
		
		private System.Nullable<int> _BulkShipmentQty;
		
		private System.Nullable<int> _BulkSampleQty;
		
		private System.Nullable<int> _BulkSampleQty_PPWs;
		
		private System.Nullable<int> _BulkSampleQty_Sewing;
		
		private System.Nullable<bool> _SampleIsArranged;
		
		private string _SampleOrderNOs;
		
		private string _SampleOrderNOCreater;
		
		private System.Nullable<System.DateTime> _SampleOrderNOCreateDate;
		
		private System.Nullable<int> _WOQty;
		
		private string _IncompleteWOReasonCode;
		
		private EntitySet<WorkOrderVersion> _WorkOrderVersions;
		
		private EntitySet<WOChooseFW> _WOChooseFWs;
		
		private EntitySet<WorkOrderColor> _WorkOrderColors;
		
		private EntitySet<WorkOrderCategory> _WorkOrderCategories;
		
		private EntityRef<Project> _Project;
		
		private EntityRef<Style> _Style;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnSalesOrderNoChanging(string value);
    partial void OnSalesOrderNoChanged();
    partial void OnWorkOrderNoChanging(string value);
    partial void OnWorkOrderNoChanged();
    partial void OnSalesOrderLineChanging(int value);
    partial void OnSalesOrderLineChanged();
    partial void OnStyleNoChanging(string value);
    partial void OnStyleNoChanged();
    partial void OnCustomerStyleNoChanging(string value);
    partial void OnCustomerStyleNoChanged();
    partial void OnCustomerPOChanging(string value);
    partial void OnCustomerPOChanged();
    partial void OnCustStyleTrackingNoChanging(string value);
    partial void OnCustStyleTrackingNoChanged();
    partial void OnCustomerCollectionChanging(string value);
    partial void OnCustomerCollectionChanged();
    partial void OnAmendmentNoChanging(System.Nullable<int> value);
    partial void OnAmendmentNoChanged();
    partial void OnVersionChanging(System.Nullable<int> value);
    partial void OnVersionChanged();
    partial void OnSeasonRangeChanging(string value);
    partial void OnSeasonRangeChanged();
    partial void OnShipModeChanging(string value);
    partial void OnShipModeChanged();
    partial void OnPackingMethodChanging(string value);
    partial void OnPackingMethodChanged();
    partial void OnWOStatusChanging(string value);
    partial void OnWOStatusChanged();
    partial void OnCatNoChanging(string value);
    partial void OnCatNoChanged();
    partial void OnCategoryChanging(string value);
    partial void OnCategoryChanged();
    partial void OnDestinationChanging(string value);
    partial void OnDestinationChanged();
    partial void OnBrandNameChanging(string value);
    partial void OnBrandNameChanged();
    partial void OnUnitPriceChanging(System.Nullable<decimal> value);
    partial void OnUnitPriceChanged();
    partial void OnHKPriceChanging(System.Nullable<decimal> value);
    partial void OnHKPriceChanged();
    partial void OnStyleUPXChanging(string value);
    partial void OnStyleUPXChanged();
    partial void OnDBCChanging(string value);
    partial void OnDBCChanged();
    partial void OnETADateChanging(System.Nullable<System.DateTime> value);
    partial void OnETADateChanged();
    partial void OnDCDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDCDateChanged();
    partial void OnCommitmentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCommitmentDateChanged();
    partial void OnPODateChanging(System.Nullable<System.DateTime> value);
    partial void OnPODateChanged();
    partial void OnConfirmedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnConfirmedDateChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnRatioChanging(System.Nullable<int> value);
    partial void OnRatioChanged();
    partial void OnMaxOvershipQtyRatioChanging(System.Nullable<decimal> value);
    partial void OnMaxOvershipQtyRatioChanged();
    partial void OnBulkvsSOQtyChanging(string value);
    partial void OnBulkvsSOQtyChanged();
    partial void OnStyleOrderChanging(System.Nullable<bool> value);
    partial void OnStyleOrderChanged();
    partial void OnStyleRevisionChanging(System.Nullable<bool> value);
    partial void OnStyleRevisionChanged();
    partial void OnSAHChanging(System.Nullable<double> value);
    partial void OnSAHChanged();
    partial void OnBaseSizeChanging(string value);
    partial void OnBaseSizeChanged();
    partial void OnSizeMatrixChanging(string value);
    partial void OnSizeMatrixChanged();
    partial void OnCompositionChanging(string value);
    partial void OnCompositionChanged();
    partial void OnNotepadChanging(string value);
    partial void OnNotepadChanged();
    partial void OnOAConfirmChanging(string value);
    partial void OnOAConfirmChanged();
    partial void OnOAConfirmDateChanging(System.Nullable<System.DateTime> value);
    partial void OnOAConfirmDateChanged();
    partial void OnHeaderConfirmChanging(string value);
    partial void OnHeaderConfirmChanged();
    partial void OnHeaderConfirmDateChanging(System.Nullable<System.DateTime> value);
    partial void OnHeaderConfirmDateChanged();
    partial void OnTopConfirmChanging(string value);
    partial void OnTopConfirmChanged();
    partial void OnTopConfirmDateChanging(System.Nullable<System.DateTime> value);
    partial void OnTopConfirmDateChanged();
    partial void OnPPCConfirmChanging(string value);
    partial void OnPPCConfirmChanged();
    partial void OnPPCConfirmDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPPCConfirmDateChanged();
    partial void OnDeliveryStartShipChanging(System.Nullable<System.DateTime> value);
    partial void OnDeliveryStartShipChanged();
    partial void OnDeliveryShipCompletedChanging(System.Nullable<System.DateTime> value);
    partial void OnDeliveryShipCompletedChanged();
    partial void OnClosingStartShipChanging(System.Nullable<System.DateTime> value);
    partial void OnClosingStartShipChanged();
    partial void OnClosingShipCompletedChanging(System.Nullable<System.DateTime> value);
    partial void OnClosingShipCompletedChanged();
    partial void OnWOCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnWOCreateDateChanged();
    partial void OnWOReviseDateChanging(System.Nullable<System.DateTime> value);
    partial void OnWOReviseDateChanged();
    partial void OnFactoryWorkStartShipChanging(System.Nullable<System.DateTime> value);
    partial void OnFactoryWorkStartShipChanged();
    partial void OnFactoryWorkShipCompletedChanging(System.Nullable<System.DateTime> value);
    partial void OnFactoryWorkShipCompletedChanged();
    partial void OnLineWorkStartShipChanging(System.Nullable<System.DateTime> value);
    partial void OnLineWorkStartShipChanged();
    partial void OnLineWorkShipCompletedChanging(System.Nullable<System.DateTime> value);
    partial void OnLineWorkShipCompletedChanged();
    partial void OnT3StartShipChanging(System.Nullable<System.DateTime> value);
    partial void OnT3StartShipChanged();
    partial void OnT3ShipCompletedChanging(System.Nullable<System.DateTime> value);
    partial void OnT3ShipCompletedChanged();
    partial void OnT3AdjustChanging(System.Nullable<System.DateTime> value);
    partial void OnT3AdjustChanged();
    partial void OnAjustT3DateConfirmChanging(string value);
    partial void OnAjustT3DateConfirmChanged();
    partial void OnLCLExFtyStartShipChanging(System.Nullable<System.DateTime> value);
    partial void OnLCLExFtyStartShipChanged();
    partial void OnLCLExFtyShipCompletedChanging(System.Nullable<System.DateTime> value);
    partial void OnLCLExFtyShipCompletedChanged();
    partial void OnFCLExFtyStartShipChanging(System.Nullable<System.DateTime> value);
    partial void OnFCLExFtyStartShipChanged();
    partial void OnFCLExFtyShipCompletedChanging(System.Nullable<System.DateTime> value);
    partial void OnFCLExFtyShipCompletedChanged();
    partial void OnTestWashingChanging(System.Nullable<bool> value);
    partial void OnTestWashingChanged();
    partial void OnTestAZOChanging(System.Nullable<bool> value);
    partial void OnTestAZOChanged();
    partial void OnTestShrinkageChanging(System.Nullable<bool> value);
    partial void OnTestShrinkageChanged();
    partial void OnTestFusingChanging(System.Nullable<bool> value);
    partial void OnTestFusingChanged();
    partial void OnTestOEKOChanging(System.Nullable<bool> value);
    partial void OnTestOEKOChanged();
    partial void OnTestElongationChanging(System.Nullable<bool> value);
    partial void OnTestElongationChanged();
    partial void OnTestOthersChanging(System.Nullable<bool> value);
    partial void OnTestOthersChanged();
    partial void OnTestOthersRemarkChanging(string value);
    partial void OnTestOthersRemarkChanged();
    partial void OnTestDateChanging(System.Nullable<System.DateTime> value);
    partial void OnTestDateChanged();
    partial void OnTestConfirmChanging(string value);
    partial void OnTestConfirmChanged();
    partial void OnCuttingMixStylesChanging(System.Nullable<bool> value);
    partial void OnCuttingMixStylesChanged();
    partial void OnCuttingOthersChanging(System.Nullable<bool> value);
    partial void OnCuttingOthersChanged();
    partial void OnCuttingOthersRemarkChanging(string value);
    partial void OnCuttingOthersRemarkChanged();
    partial void OnSampleDesptachQtyAndDateChanging(string value);
    partial void OnSampleDesptachQtyAndDateChanged();
    partial void OnActionStatusChanging(System.Nullable<int> value);
    partial void OnActionStatusChanged();
    partial void OnActionStatusDateChanging(System.Nullable<System.DateTime> value);
    partial void OnActionStatusDateChanged();
    partial void OnPackReferenceChanging(string value);
    partial void OnPackReferenceChanged();
    partial void OnLabelReferenceChanging(string value);
    partial void OnLabelReferenceChanged();
    partial void OnFirstStationStartShipChanging(System.Nullable<System.DateTime> value);
    partial void OnFirstStationStartShipChanged();
    partial void OnFirstStationShipCompletedChanging(System.Nullable<System.DateTime> value);
    partial void OnFirstStationShipCompletedChanged();
    partial void OnNumberOfLineChanging(System.Nullable<double> value);
    partial void OnNumberOfLineChanged();
    partial void OnEFFChanging(System.Nullable<double> value);
    partial void OnEFFChanged();
    partial void OnCUChanging(System.Nullable<double> value);
    partial void OnCUChanged();
    partial void OnWFChanging(System.Nullable<double> value);
    partial void OnWFChanged();
    partial void OnShipModeChangeRemarkChanging(string value);
    partial void OnShipModeChangeRemarkChanged();
    partial void OnLine_SAHChanging(System.Nullable<double> value);
    partial void OnLine_SAHChanged();
    partial void OnCompletedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCompletedDateChanged();
    partial void OnTransitDateChanging(System.Nullable<System.DateTime> value);
    partial void OnTransitDateChanged();
    partial void OnProductPriceChanging(System.Nullable<decimal> value);
    partial void OnProductPriceChanged();
    partial void OnCurrencyChanging(string value);
    partial void OnCurrencyChanged();
    partial void OnSpecialFactoryChanging(string value);
    partial void OnSpecialFactoryChanged();
    partial void OnAssignFactoryChanging(string value);
    partial void OnAssignFactoryChanged();
    partial void OnCasingMethodChanging(string value);
    partial void OnCasingMethodChanged();
    partial void OnBulkShipmentQtyChanging(System.Nullable<int> value);
    partial void OnBulkShipmentQtyChanged();
    partial void OnBulkSampleQtyChanging(System.Nullable<int> value);
    partial void OnBulkSampleQtyChanged();
    partial void OnBulkSampleQty_PPWsChanging(System.Nullable<int> value);
    partial void OnBulkSampleQty_PPWsChanged();
    partial void OnBulkSampleQty_SewingChanging(System.Nullable<int> value);
    partial void OnBulkSampleQty_SewingChanged();
    partial void OnSampleIsArrangedChanging(System.Nullable<bool> value);
    partial void OnSampleIsArrangedChanged();
    partial void OnSampleOrderNOsChanging(string value);
    partial void OnSampleOrderNOsChanged();
    partial void OnSampleOrderNOCreaterChanging(string value);
    partial void OnSampleOrderNOCreaterChanged();
    partial void OnSampleOrderNOCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSampleOrderNOCreateDateChanged();
    partial void OnWOQtyChanging(System.Nullable<int> value);
    partial void OnWOQtyChanged();
    partial void OnIncompleteWOReasonCodeChanging(string value);
    partial void OnIncompleteWOReasonCodeChanged();
    #endregion
		
		public WorkOrder()
		{
			this.Initialize();
		}
		
		[Column(Storage="_Company", DbType="VarChar(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=1)]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					if (this._Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[Column(Storage="_SalesOrderNo", DbType="VarChar(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=2)]
		public string SalesOrderNo
		{
			get
			{
				return this._SalesOrderNo;
			}
			set
			{
				if ((this._SalesOrderNo != value))
				{
					if (this._Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSalesOrderNoChanging(value);
					this.SendPropertyChanging();
					this._SalesOrderNo = value;
					this.SendPropertyChanged("SalesOrderNo");
					this.OnSalesOrderNoChanged();
				}
			}
		}
		
		[Column(Storage="_WorkOrderNo", DbType="VarChar(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=3)]
		public string WorkOrderNo
		{
			get
			{
				return this._WorkOrderNo;
			}
			set
			{
				if ((this._WorkOrderNo != value))
				{
					this.OnWorkOrderNoChanging(value);
					this.SendPropertyChanging();
					this._WorkOrderNo = value;
					this.SendPropertyChanged("WorkOrderNo");
					this.OnWorkOrderNoChanged();
				}
			}
		}
		
		[Column(Storage="_SalesOrderLine", DbType="Int NOT NULL")]
		[DataMember(Order=4)]
		public int SalesOrderLine
		{
			get
			{
				return this._SalesOrderLine;
			}
			set
			{
				if ((this._SalesOrderLine != value))
				{
					this.OnSalesOrderLineChanging(value);
					this.SendPropertyChanging();
					this._SalesOrderLine = value;
					this.SendPropertyChanged("SalesOrderLine");
					this.OnSalesOrderLineChanged();
				}
			}
		}
		
		[Column(Storage="_StyleNo", DbType="VarChar(9)")]
		[DataMember(Order=5)]
		public string StyleNo
		{
			get
			{
				return this._StyleNo;
			}
			set
			{
				if ((this._StyleNo != value))
				{
					if (this._Style.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStyleNoChanging(value);
					this.SendPropertyChanging();
					this._StyleNo = value;
					this.SendPropertyChanged("StyleNo");
					this.OnStyleNoChanged();
				}
			}
		}
		
		[Column(Storage="_CustomerStyleNo", DbType="NVarChar(50)")]
		[DataMember(Order=6)]
		public string CustomerStyleNo
		{
			get
			{
				return this._CustomerStyleNo;
			}
			set
			{
				if ((this._CustomerStyleNo != value))
				{
					this.OnCustomerStyleNoChanging(value);
					this.SendPropertyChanging();
					this._CustomerStyleNo = value;
					this.SendPropertyChanged("CustomerStyleNo");
					this.OnCustomerStyleNoChanged();
				}
			}
		}
		
		[Column(Storage="_CustomerPO", DbType="NVarChar(50)")]
		[DataMember(Order=7)]
		public string CustomerPO
		{
			get
			{
				return this._CustomerPO;
			}
			set
			{
				if ((this._CustomerPO != value))
				{
					this.OnCustomerPOChanging(value);
					this.SendPropertyChanging();
					this._CustomerPO = value;
					this.SendPropertyChanged("CustomerPO");
					this.OnCustomerPOChanged();
				}
			}
		}
		
		[Column(Storage="_CustStyleTrackingNo", DbType="NVarChar(50)")]
		[DataMember(Order=8)]
		public string CustStyleTrackingNo
		{
			get
			{
				return this._CustStyleTrackingNo;
			}
			set
			{
				if ((this._CustStyleTrackingNo != value))
				{
					this.OnCustStyleTrackingNoChanging(value);
					this.SendPropertyChanging();
					this._CustStyleTrackingNo = value;
					this.SendPropertyChanged("CustStyleTrackingNo");
					this.OnCustStyleTrackingNoChanged();
				}
			}
		}
		
		[Column(Storage="_CustomerCollection", DbType="NVarChar(50)")]
		[DataMember(Order=9)]
		public string CustomerCollection
		{
			get
			{
				return this._CustomerCollection;
			}
			set
			{
				if ((this._CustomerCollection != value))
				{
					this.OnCustomerCollectionChanging(value);
					this.SendPropertyChanging();
					this._CustomerCollection = value;
					this.SendPropertyChanged("CustomerCollection");
					this.OnCustomerCollectionChanged();
				}
			}
		}
		
		[Column(Storage="_AmendmentNo", DbType="Int")]
		[DataMember(Order=10)]
		public System.Nullable<int> AmendmentNo
		{
			get
			{
				return this._AmendmentNo;
			}
			set
			{
				if ((this._AmendmentNo != value))
				{
					this.OnAmendmentNoChanging(value);
					this.SendPropertyChanging();
					this._AmendmentNo = value;
					this.SendPropertyChanged("AmendmentNo");
					this.OnAmendmentNoChanged();
				}
			}
		}
		
		[Column(Storage="_Version", DbType="Int")]
		[DataMember(Order=11)]
		public System.Nullable<int> Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[Column(Storage="_SeasonRange", DbType="NVarChar(50)")]
		[DataMember(Order=12)]
		public string SeasonRange
		{
			get
			{
				return this._SeasonRange;
			}
			set
			{
				if ((this._SeasonRange != value))
				{
					this.OnSeasonRangeChanging(value);
					this.SendPropertyChanging();
					this._SeasonRange = value;
					this.SendPropertyChanged("SeasonRange");
					this.OnSeasonRangeChanged();
				}
			}
		}
		
		[Column(Storage="_ShipMode", DbType="NVarChar(50)")]
		[DataMember(Order=13)]
		public string ShipMode
		{
			get
			{
				return this._ShipMode;
			}
			set
			{
				if ((this._ShipMode != value))
				{
					this.OnShipModeChanging(value);
					this.SendPropertyChanging();
					this._ShipMode = value;
					this.SendPropertyChanged("ShipMode");
					this.OnShipModeChanged();
				}
			}
		}
		
		[Column(Storage="_PackingMethod", DbType="NVarChar(72)")]
		[DataMember(Order=14)]
		public string PackingMethod
		{
			get
			{
				return this._PackingMethod;
			}
			set
			{
				if ((this._PackingMethod != value))
				{
					this.OnPackingMethodChanging(value);
					this.SendPropertyChanging();
					this._PackingMethod = value;
					this.SendPropertyChanged("PackingMethod");
					this.OnPackingMethodChanged();
				}
			}
		}
		
		[Column(Storage="_WOStatus", DbType="NVarChar(50)")]
		[DataMember(Order=15)]
		public string WOStatus
		{
			get
			{
				return this._WOStatus;
			}
			set
			{
				if ((this._WOStatus != value))
				{
					this.OnWOStatusChanging(value);
					this.SendPropertyChanging();
					this._WOStatus = value;
					this.SendPropertyChanged("WOStatus");
					this.OnWOStatusChanged();
				}
			}
		}
		
		[Column(Storage="_CatNo", DbType="NVarChar(40)")]
		[DataMember(Order=16)]
		public string CatNo
		{
			get
			{
				return this._CatNo;
			}
			set
			{
				if ((this._CatNo != value))
				{
					this.OnCatNoChanging(value);
					this.SendPropertyChanging();
					this._CatNo = value;
					this.SendPropertyChanged("CatNo");
					this.OnCatNoChanged();
				}
			}
		}
		
		[Column(Storage="_Category", DbType="NVarChar(4)")]
		[DataMember(Order=17)]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		[Column(Storage="_Destination", DbType="NVarChar(72)")]
		[DataMember(Order=18)]
		public string Destination
		{
			get
			{
				return this._Destination;
			}
			set
			{
				if ((this._Destination != value))
				{
					this.OnDestinationChanging(value);
					this.SendPropertyChanging();
					this._Destination = value;
					this.SendPropertyChanged("Destination");
					this.OnDestinationChanged();
				}
			}
		}
		
		[Column(Storage="_BrandName", DbType="NVarChar(72)")]
		[DataMember(Order=19)]
		public string BrandName
		{
			get
			{
				return this._BrandName;
			}
			set
			{
				if ((this._BrandName != value))
				{
					this.OnBrandNameChanging(value);
					this.SendPropertyChanging();
					this._BrandName = value;
					this.SendPropertyChanged("BrandName");
					this.OnBrandNameChanged();
				}
			}
		}
		
		[Column(Storage="_UnitPrice", DbType="Decimal(15,5)")]
		[DataMember(Order=20)]
		public System.Nullable<decimal> UnitPrice
		{
			get
			{
				return this._UnitPrice;
			}
			set
			{
				if ((this._UnitPrice != value))
				{
					this.OnUnitPriceChanging(value);
					this.SendPropertyChanging();
					this._UnitPrice = value;
					this.SendPropertyChanged("UnitPrice");
					this.OnUnitPriceChanged();
				}
			}
		}
		
		[Column(Storage="_HKPrice", DbType="Decimal(15,5)")]
		[DataMember(Order=21)]
		public System.Nullable<decimal> HKPrice
		{
			get
			{
				return this._HKPrice;
			}
			set
			{
				if ((this._HKPrice != value))
				{
					this.OnHKPriceChanging(value);
					this.SendPropertyChanging();
					this._HKPrice = value;
					this.SendPropertyChanged("HKPrice");
					this.OnHKPriceChanged();
				}
			}
		}
		
		[Column(Storage="_StyleUPX", DbType="NVarChar(50)")]
		[DataMember(Order=22)]
		public string StyleUPX
		{
			get
			{
				return this._StyleUPX;
			}
			set
			{
				if ((this._StyleUPX != value))
				{
					this.OnStyleUPXChanging(value);
					this.SendPropertyChanging();
					this._StyleUPX = value;
					this.SendPropertyChanged("StyleUPX");
					this.OnStyleUPXChanged();
				}
			}
		}
		
		[Column(Storage="_DBC", DbType="NVarChar(60)")]
		[DataMember(Order=23)]
		public string DBC
		{
			get
			{
				return this._DBC;
			}
			set
			{
				if ((this._DBC != value))
				{
					this.OnDBCChanging(value);
					this.SendPropertyChanging();
					this._DBC = value;
					this.SendPropertyChanged("DBC");
					this.OnDBCChanged();
				}
			}
		}
		
		[Column(Storage="_ETADate", DbType="DateTime")]
		[DataMember(Order=24)]
		public System.Nullable<System.DateTime> ETADate
		{
			get
			{
				return this._ETADate;
			}
			set
			{
				if ((this._ETADate != value))
				{
					this.OnETADateChanging(value);
					this.SendPropertyChanging();
					this._ETADate = value;
					this.SendPropertyChanged("ETADate");
					this.OnETADateChanged();
				}
			}
		}
		
		[Column(Storage="_DCDate", DbType="DateTime")]
		[DataMember(Order=25)]
		public System.Nullable<System.DateTime> DCDate
		{
			get
			{
				return this._DCDate;
			}
			set
			{
				if ((this._DCDate != value))
				{
					this.OnDCDateChanging(value);
					this.SendPropertyChanging();
					this._DCDate = value;
					this.SendPropertyChanged("DCDate");
					this.OnDCDateChanged();
				}
			}
		}
		
		[Column(Storage="_CommitmentDate", DbType="DateTime")]
		[DataMember(Order=26)]
		public System.Nullable<System.DateTime> CommitmentDate
		{
			get
			{
				return this._CommitmentDate;
			}
			set
			{
				if ((this._CommitmentDate != value))
				{
					this.OnCommitmentDateChanging(value);
					this.SendPropertyChanging();
					this._CommitmentDate = value;
					this.SendPropertyChanged("CommitmentDate");
					this.OnCommitmentDateChanged();
				}
			}
		}
		
		[Column(Storage="_PODate", DbType="DateTime")]
		[DataMember(Order=27)]
		public System.Nullable<System.DateTime> PODate
		{
			get
			{
				return this._PODate;
			}
			set
			{
				if ((this._PODate != value))
				{
					this.OnPODateChanging(value);
					this.SendPropertyChanging();
					this._PODate = value;
					this.SendPropertyChanged("PODate");
					this.OnPODateChanged();
				}
			}
		}
		
		[Column(Storage="_ConfirmedDate", DbType="DateTime")]
		[DataMember(Order=28)]
		public System.Nullable<System.DateTime> ConfirmedDate
		{
			get
			{
				return this._ConfirmedDate;
			}
			set
			{
				if ((this._ConfirmedDate != value))
				{
					this.OnConfirmedDateChanging(value);
					this.SendPropertyChanging();
					this._ConfirmedDate = value;
					this.SendPropertyChanged("ConfirmedDate");
					this.OnConfirmedDateChanged();
				}
			}
		}
		
		[Column(Storage="_UpdateDate", DbType="DateTime")]
		[DataMember(Order=29)]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[Column(Storage="_Ratio", DbType="Int")]
		[DataMember(Order=30)]
		public System.Nullable<int> Ratio
		{
			get
			{
				return this._Ratio;
			}
			set
			{
				if ((this._Ratio != value))
				{
					this.OnRatioChanging(value);
					this.SendPropertyChanging();
					this._Ratio = value;
					this.SendPropertyChanged("Ratio");
					this.OnRatioChanged();
				}
			}
		}
		
		[Column(Storage="_MaxOvershipQtyRatio", DbType="Decimal(15,5)")]
		[DataMember(Order=31)]
		public System.Nullable<decimal> MaxOvershipQtyRatio
		{
			get
			{
				return this._MaxOvershipQtyRatio;
			}
			set
			{
				if ((this._MaxOvershipQtyRatio != value))
				{
					this.OnMaxOvershipQtyRatioChanging(value);
					this.SendPropertyChanging();
					this._MaxOvershipQtyRatio = value;
					this.SendPropertyChanged("MaxOvershipQtyRatio");
					this.OnMaxOvershipQtyRatioChanged();
				}
			}
		}
		
		[Column(Storage="_BulkvsSOQty", DbType="NVarChar(50)")]
		[DataMember(Order=32)]
		public string BulkvsSOQty
		{
			get
			{
				return this._BulkvsSOQty;
			}
			set
			{
				if ((this._BulkvsSOQty != value))
				{
					this.OnBulkvsSOQtyChanging(value);
					this.SendPropertyChanging();
					this._BulkvsSOQty = value;
					this.SendPropertyChanged("BulkvsSOQty");
					this.OnBulkvsSOQtyChanged();
				}
			}
		}
		
		[Column(Storage="_StyleOrder", DbType="Bit")]
		[DataMember(Order=33)]
		public System.Nullable<bool> StyleOrder
		{
			get
			{
				return this._StyleOrder;
			}
			set
			{
				if ((this._StyleOrder != value))
				{
					this.OnStyleOrderChanging(value);
					this.SendPropertyChanging();
					this._StyleOrder = value;
					this.SendPropertyChanged("StyleOrder");
					this.OnStyleOrderChanged();
				}
			}
		}
		
		[Column(Storage="_StyleRevision", DbType="Bit")]
		[DataMember(Order=34)]
		public System.Nullable<bool> StyleRevision
		{
			get
			{
				return this._StyleRevision;
			}
			set
			{
				if ((this._StyleRevision != value))
				{
					this.OnStyleRevisionChanging(value);
					this.SendPropertyChanging();
					this._StyleRevision = value;
					this.SendPropertyChanged("StyleRevision");
					this.OnStyleRevisionChanged();
				}
			}
		}
		
		[Column(Storage="_SAH", DbType="Float")]
		[DataMember(Order=35)]
		public System.Nullable<double> SAH
		{
			get
			{
				return this._SAH;
			}
			set
			{
				if ((this._SAH != value))
				{
					this.OnSAHChanging(value);
					this.SendPropertyChanging();
					this._SAH = value;
					this.SendPropertyChanged("SAH");
					this.OnSAHChanged();
				}
			}
		}
		
		[Column(Storage="_BaseSize", DbType="NVarChar(72)")]
		[DataMember(Order=36)]
		public string BaseSize
		{
			get
			{
				return this._BaseSize;
			}
			set
			{
				if ((this._BaseSize != value))
				{
					this.OnBaseSizeChanging(value);
					this.SendPropertyChanging();
					this._BaseSize = value;
					this.SendPropertyChanged("BaseSize");
					this.OnBaseSizeChanged();
				}
			}
		}
		
		[Column(Storage="_SizeMatrix", DbType="NVarChar(50)")]
		[DataMember(Order=37)]
		public string SizeMatrix
		{
			get
			{
				return this._SizeMatrix;
			}
			set
			{
				if ((this._SizeMatrix != value))
				{
					this.OnSizeMatrixChanging(value);
					this.SendPropertyChanging();
					this._SizeMatrix = value;
					this.SendPropertyChanged("SizeMatrix");
					this.OnSizeMatrixChanged();
				}
			}
		}
		
		[Column(Storage="_Composition", DbType="NVarChar(600)")]
		[DataMember(Order=38)]
		public string Composition
		{
			get
			{
				return this._Composition;
			}
			set
			{
				if ((this._Composition != value))
				{
					this.OnCompositionChanging(value);
					this.SendPropertyChanging();
					this._Composition = value;
					this.SendPropertyChanged("Composition");
					this.OnCompositionChanged();
				}
			}
		}
		
		[Column(Storage="_Notepad", DbType="NVarChar(2000)")]
		[DataMember(Order=39)]
		public string Notepad
		{
			get
			{
				return this._Notepad;
			}
			set
			{
				if ((this._Notepad != value))
				{
					this.OnNotepadChanging(value);
					this.SendPropertyChanging();
					this._Notepad = value;
					this.SendPropertyChanged("Notepad");
					this.OnNotepadChanged();
				}
			}
		}
		
		[Column(Storage="_OAConfirm", DbType="NVarChar(40)")]
		[DataMember(Order=40)]
		public string OAConfirm
		{
			get
			{
				return this._OAConfirm;
			}
			set
			{
				if ((this._OAConfirm != value))
				{
					this.OnOAConfirmChanging(value);
					this.SendPropertyChanging();
					this._OAConfirm = value;
					this.SendPropertyChanged("OAConfirm");
					this.OnOAConfirmChanged();
				}
			}
		}
		
		[Column(Storage="_OAConfirmDate", DbType="DateTime")]
		[DataMember(Order=41)]
		public System.Nullable<System.DateTime> OAConfirmDate
		{
			get
			{
				return this._OAConfirmDate;
			}
			set
			{
				if ((this._OAConfirmDate != value))
				{
					this.OnOAConfirmDateChanging(value);
					this.SendPropertyChanging();
					this._OAConfirmDate = value;
					this.SendPropertyChanged("OAConfirmDate");
					this.OnOAConfirmDateChanged();
				}
			}
		}
		
		[Column(Storage="_HeaderConfirm", DbType="NVarChar(40)")]
		[DataMember(Order=42)]
		public string HeaderConfirm
		{
			get
			{
				return this._HeaderConfirm;
			}
			set
			{
				if ((this._HeaderConfirm != value))
				{
					this.OnHeaderConfirmChanging(value);
					this.SendPropertyChanging();
					this._HeaderConfirm = value;
					this.SendPropertyChanged("HeaderConfirm");
					this.OnHeaderConfirmChanged();
				}
			}
		}
		
		[Column(Storage="_HeaderConfirmDate", DbType="DateTime")]
		[DataMember(Order=43)]
		public System.Nullable<System.DateTime> HeaderConfirmDate
		{
			get
			{
				return this._HeaderConfirmDate;
			}
			set
			{
				if ((this._HeaderConfirmDate != value))
				{
					this.OnHeaderConfirmDateChanging(value);
					this.SendPropertyChanging();
					this._HeaderConfirmDate = value;
					this.SendPropertyChanged("HeaderConfirmDate");
					this.OnHeaderConfirmDateChanged();
				}
			}
		}
		
		[Column(Storage="_TopConfirm", DbType="NVarChar(40)")]
		[DataMember(Order=44)]
		public string TopConfirm
		{
			get
			{
				return this._TopConfirm;
			}
			set
			{
				if ((this._TopConfirm != value))
				{
					this.OnTopConfirmChanging(value);
					this.SendPropertyChanging();
					this._TopConfirm = value;
					this.SendPropertyChanged("TopConfirm");
					this.OnTopConfirmChanged();
				}
			}
		}
		
		[Column(Storage="_TopConfirmDate", DbType="DateTime")]
		[DataMember(Order=45)]
		public System.Nullable<System.DateTime> TopConfirmDate
		{
			get
			{
				return this._TopConfirmDate;
			}
			set
			{
				if ((this._TopConfirmDate != value))
				{
					this.OnTopConfirmDateChanging(value);
					this.SendPropertyChanging();
					this._TopConfirmDate = value;
					this.SendPropertyChanged("TopConfirmDate");
					this.OnTopConfirmDateChanged();
				}
			}
		}
		
		[Column(Storage="_PPCConfirm", DbType="NVarChar(40)")]
		[DataMember(Order=46)]
		public string PPCConfirm
		{
			get
			{
				return this._PPCConfirm;
			}
			set
			{
				if ((this._PPCConfirm != value))
				{
					this.OnPPCConfirmChanging(value);
					this.SendPropertyChanging();
					this._PPCConfirm = value;
					this.SendPropertyChanged("PPCConfirm");
					this.OnPPCConfirmChanged();
				}
			}
		}
		
		[Column(Storage="_PPCConfirmDate", DbType="DateTime")]
		[DataMember(Order=47)]
		public System.Nullable<System.DateTime> PPCConfirmDate
		{
			get
			{
				return this._PPCConfirmDate;
			}
			set
			{
				if ((this._PPCConfirmDate != value))
				{
					this.OnPPCConfirmDateChanging(value);
					this.SendPropertyChanging();
					this._PPCConfirmDate = value;
					this.SendPropertyChanged("PPCConfirmDate");
					this.OnPPCConfirmDateChanged();
				}
			}
		}
		
		[Column(Storage="_DeliveryStartShip", DbType="DateTime")]
		[DataMember(Order=48)]
		public System.Nullable<System.DateTime> DeliveryStartShip
		{
			get
			{
				return this._DeliveryStartShip;
			}
			set
			{
				if ((this._DeliveryStartShip != value))
				{
					this.OnDeliveryStartShipChanging(value);
					this.SendPropertyChanging();
					this._DeliveryStartShip = value;
					this.SendPropertyChanged("DeliveryStartShip");
					this.OnDeliveryStartShipChanged();
				}
			}
		}
		
		[Column(Storage="_DeliveryShipCompleted", DbType="DateTime")]
		[DataMember(Order=49)]
		public System.Nullable<System.DateTime> DeliveryShipCompleted
		{
			get
			{
				return this._DeliveryShipCompleted;
			}
			set
			{
				if ((this._DeliveryShipCompleted != value))
				{
					this.OnDeliveryShipCompletedChanging(value);
					this.SendPropertyChanging();
					this._DeliveryShipCompleted = value;
					this.SendPropertyChanged("DeliveryShipCompleted");
					this.OnDeliveryShipCompletedChanged();
				}
			}
		}
		
		[Column(Storage="_ClosingStartShip", DbType="DateTime")]
		[DataMember(Order=50)]
		public System.Nullable<System.DateTime> ClosingStartShip
		{
			get
			{
				return this._ClosingStartShip;
			}
			set
			{
				if ((this._ClosingStartShip != value))
				{
					this.OnClosingStartShipChanging(value);
					this.SendPropertyChanging();
					this._ClosingStartShip = value;
					this.SendPropertyChanged("ClosingStartShip");
					this.OnClosingStartShipChanged();
				}
			}
		}
		
		[Column(Storage="_ClosingShipCompleted", DbType="DateTime")]
		[DataMember(Order=51)]
		public System.Nullable<System.DateTime> ClosingShipCompleted
		{
			get
			{
				return this._ClosingShipCompleted;
			}
			set
			{
				if ((this._ClosingShipCompleted != value))
				{
					this.OnClosingShipCompletedChanging(value);
					this.SendPropertyChanging();
					this._ClosingShipCompleted = value;
					this.SendPropertyChanged("ClosingShipCompleted");
					this.OnClosingShipCompletedChanged();
				}
			}
		}
		
		[Column(Storage="_WOCreateDate", DbType="DateTime")]
		[DataMember(Order=52)]
		public System.Nullable<System.DateTime> WOCreateDate
		{
			get
			{
				return this._WOCreateDate;
			}
			set
			{
				if ((this._WOCreateDate != value))
				{
					this.OnWOCreateDateChanging(value);
					this.SendPropertyChanging();
					this._WOCreateDate = value;
					this.SendPropertyChanged("WOCreateDate");
					this.OnWOCreateDateChanged();
				}
			}
		}
		
		[Column(Storage="_WOReviseDate", DbType="DateTime")]
		[DataMember(Order=53)]
		public System.Nullable<System.DateTime> WOReviseDate
		{
			get
			{
				return this._WOReviseDate;
			}
			set
			{
				if ((this._WOReviseDate != value))
				{
					this.OnWOReviseDateChanging(value);
					this.SendPropertyChanging();
					this._WOReviseDate = value;
					this.SendPropertyChanged("WOReviseDate");
					this.OnWOReviseDateChanged();
				}
			}
		}
		
		[Column(Storage="_FactoryWorkStartShip", DbType="DateTime")]
		[DataMember(Order=54)]
		public System.Nullable<System.DateTime> FactoryWorkStartShip
		{
			get
			{
				return this._FactoryWorkStartShip;
			}
			set
			{
				if ((this._FactoryWorkStartShip != value))
				{
					this.OnFactoryWorkStartShipChanging(value);
					this.SendPropertyChanging();
					this._FactoryWorkStartShip = value;
					this.SendPropertyChanged("FactoryWorkStartShip");
					this.OnFactoryWorkStartShipChanged();
				}
			}
		}
		
		[Column(Storage="_FactoryWorkShipCompleted", DbType="DateTime")]
		[DataMember(Order=55)]
		public System.Nullable<System.DateTime> FactoryWorkShipCompleted
		{
			get
			{
				return this._FactoryWorkShipCompleted;
			}
			set
			{
				if ((this._FactoryWorkShipCompleted != value))
				{
					this.OnFactoryWorkShipCompletedChanging(value);
					this.SendPropertyChanging();
					this._FactoryWorkShipCompleted = value;
					this.SendPropertyChanged("FactoryWorkShipCompleted");
					this.OnFactoryWorkShipCompletedChanged();
				}
			}
		}
		
		[Column(Storage="_LineWorkStartShip", DbType="DateTime")]
		[DataMember(Order=56)]
		public System.Nullable<System.DateTime> LineWorkStartShip
		{
			get
			{
				return this._LineWorkStartShip;
			}
			set
			{
				if ((this._LineWorkStartShip != value))
				{
					this.OnLineWorkStartShipChanging(value);
					this.SendPropertyChanging();
					this._LineWorkStartShip = value;
					this.SendPropertyChanged("LineWorkStartShip");
					this.OnLineWorkStartShipChanged();
				}
			}
		}
		
		[Column(Storage="_LineWorkShipCompleted", DbType="DateTime")]
		[DataMember(Order=57)]
		public System.Nullable<System.DateTime> LineWorkShipCompleted
		{
			get
			{
				return this._LineWorkShipCompleted;
			}
			set
			{
				if ((this._LineWorkShipCompleted != value))
				{
					this.OnLineWorkShipCompletedChanging(value);
					this.SendPropertyChanging();
					this._LineWorkShipCompleted = value;
					this.SendPropertyChanged("LineWorkShipCompleted");
					this.OnLineWorkShipCompletedChanged();
				}
			}
		}
		
		[Column(Storage="_T3StartShip", DbType="DateTime")]
		[DataMember(Order=58)]
		public System.Nullable<System.DateTime> T3StartShip
		{
			get
			{
				return this._T3StartShip;
			}
			set
			{
				if ((this._T3StartShip != value))
				{
					this.OnT3StartShipChanging(value);
					this.SendPropertyChanging();
					this._T3StartShip = value;
					this.SendPropertyChanged("T3StartShip");
					this.OnT3StartShipChanged();
				}
			}
		}
		
		[Column(Storage="_T3ShipCompleted", DbType="DateTime")]
		[DataMember(Order=59)]
		public System.Nullable<System.DateTime> T3ShipCompleted
		{
			get
			{
				return this._T3ShipCompleted;
			}
			set
			{
				if ((this._T3ShipCompleted != value))
				{
					this.OnT3ShipCompletedChanging(value);
					this.SendPropertyChanging();
					this._T3ShipCompleted = value;
					this.SendPropertyChanged("T3ShipCompleted");
					this.OnT3ShipCompletedChanged();
				}
			}
		}
		
		[Column(Storage="_T3Adjust", DbType="DateTime")]
		[DataMember(Order=60)]
		public System.Nullable<System.DateTime> T3Adjust
		{
			get
			{
				return this._T3Adjust;
			}
			set
			{
				if ((this._T3Adjust != value))
				{
					this.OnT3AdjustChanging(value);
					this.SendPropertyChanging();
					this._T3Adjust = value;
					this.SendPropertyChanged("T3Adjust");
					this.OnT3AdjustChanged();
				}
			}
		}
		
		[Column(Storage="_AjustT3DateConfirm", DbType="NVarChar(60)")]
		[DataMember(Order=61)]
		public string AjustT3DateConfirm
		{
			get
			{
				return this._AjustT3DateConfirm;
			}
			set
			{
				if ((this._AjustT3DateConfirm != value))
				{
					this.OnAjustT3DateConfirmChanging(value);
					this.SendPropertyChanging();
					this._AjustT3DateConfirm = value;
					this.SendPropertyChanged("AjustT3DateConfirm");
					this.OnAjustT3DateConfirmChanged();
				}
			}
		}
		
		[Column(Storage="_LCLExFtyStartShip", DbType="DateTime")]
		[DataMember(Order=62)]
		public System.Nullable<System.DateTime> LCLExFtyStartShip
		{
			get
			{
				return this._LCLExFtyStartShip;
			}
			set
			{
				if ((this._LCLExFtyStartShip != value))
				{
					this.OnLCLExFtyStartShipChanging(value);
					this.SendPropertyChanging();
					this._LCLExFtyStartShip = value;
					this.SendPropertyChanged("LCLExFtyStartShip");
					this.OnLCLExFtyStartShipChanged();
				}
			}
		}
		
		[Column(Storage="_LCLExFtyShipCompleted", DbType="DateTime")]
		[DataMember(Order=63)]
		public System.Nullable<System.DateTime> LCLExFtyShipCompleted
		{
			get
			{
				return this._LCLExFtyShipCompleted;
			}
			set
			{
				if ((this._LCLExFtyShipCompleted != value))
				{
					this.OnLCLExFtyShipCompletedChanging(value);
					this.SendPropertyChanging();
					this._LCLExFtyShipCompleted = value;
					this.SendPropertyChanged("LCLExFtyShipCompleted");
					this.OnLCLExFtyShipCompletedChanged();
				}
			}
		}
		
		[Column(Storage="_FCLExFtyStartShip", DbType="DateTime")]
		[DataMember(Order=64)]
		public System.Nullable<System.DateTime> FCLExFtyStartShip
		{
			get
			{
				return this._FCLExFtyStartShip;
			}
			set
			{
				if ((this._FCLExFtyStartShip != value))
				{
					this.OnFCLExFtyStartShipChanging(value);
					this.SendPropertyChanging();
					this._FCLExFtyStartShip = value;
					this.SendPropertyChanged("FCLExFtyStartShip");
					this.OnFCLExFtyStartShipChanged();
				}
			}
		}
		
		[Column(Storage="_FCLExFtyShipCompleted", DbType="DateTime")]
		[DataMember(Order=65)]
		public System.Nullable<System.DateTime> FCLExFtyShipCompleted
		{
			get
			{
				return this._FCLExFtyShipCompleted;
			}
			set
			{
				if ((this._FCLExFtyShipCompleted != value))
				{
					this.OnFCLExFtyShipCompletedChanging(value);
					this.SendPropertyChanging();
					this._FCLExFtyShipCompleted = value;
					this.SendPropertyChanged("FCLExFtyShipCompleted");
					this.OnFCLExFtyShipCompletedChanged();
				}
			}
		}
		
		[Column(Storage="_TestWashing", DbType="Bit")]
		[DataMember(Order=66)]
		public System.Nullable<bool> TestWashing
		{
			get
			{
				return this._TestWashing;
			}
			set
			{
				if ((this._TestWashing != value))
				{
					this.OnTestWashingChanging(value);
					this.SendPropertyChanging();
					this._TestWashing = value;
					this.SendPropertyChanged("TestWashing");
					this.OnTestWashingChanged();
				}
			}
		}
		
		[Column(Storage="_TestAZO", DbType="Bit")]
		[DataMember(Order=67)]
		public System.Nullable<bool> TestAZO
		{
			get
			{
				return this._TestAZO;
			}
			set
			{
				if ((this._TestAZO != value))
				{
					this.OnTestAZOChanging(value);
					this.SendPropertyChanging();
					this._TestAZO = value;
					this.SendPropertyChanged("TestAZO");
					this.OnTestAZOChanged();
				}
			}
		}
		
		[Column(Storage="_TestShrinkage", DbType="Bit")]
		[DataMember(Order=68)]
		public System.Nullable<bool> TestShrinkage
		{
			get
			{
				return this._TestShrinkage;
			}
			set
			{
				if ((this._TestShrinkage != value))
				{
					this.OnTestShrinkageChanging(value);
					this.SendPropertyChanging();
					this._TestShrinkage = value;
					this.SendPropertyChanged("TestShrinkage");
					this.OnTestShrinkageChanged();
				}
			}
		}
		
		[Column(Storage="_TestFusing", DbType="Bit")]
		[DataMember(Order=69)]
		public System.Nullable<bool> TestFusing
		{
			get
			{
				return this._TestFusing;
			}
			set
			{
				if ((this._TestFusing != value))
				{
					this.OnTestFusingChanging(value);
					this.SendPropertyChanging();
					this._TestFusing = value;
					this.SendPropertyChanged("TestFusing");
					this.OnTestFusingChanged();
				}
			}
		}
		
		[Column(Storage="_TestOEKO", DbType="Bit")]
		[DataMember(Order=70)]
		public System.Nullable<bool> TestOEKO
		{
			get
			{
				return this._TestOEKO;
			}
			set
			{
				if ((this._TestOEKO != value))
				{
					this.OnTestOEKOChanging(value);
					this.SendPropertyChanging();
					this._TestOEKO = value;
					this.SendPropertyChanged("TestOEKO");
					this.OnTestOEKOChanged();
				}
			}
		}
		
		[Column(Storage="_TestElongation", DbType="Bit")]
		[DataMember(Order=71)]
		public System.Nullable<bool> TestElongation
		{
			get
			{
				return this._TestElongation;
			}
			set
			{
				if ((this._TestElongation != value))
				{
					this.OnTestElongationChanging(value);
					this.SendPropertyChanging();
					this._TestElongation = value;
					this.SendPropertyChanged("TestElongation");
					this.OnTestElongationChanged();
				}
			}
		}
		
		[Column(Storage="_TestOthers", DbType="Bit")]
		[DataMember(Order=72)]
		public System.Nullable<bool> TestOthers
		{
			get
			{
				return this._TestOthers;
			}
			set
			{
				if ((this._TestOthers != value))
				{
					this.OnTestOthersChanging(value);
					this.SendPropertyChanging();
					this._TestOthers = value;
					this.SendPropertyChanged("TestOthers");
					this.OnTestOthersChanged();
				}
			}
		}
		
		[Column(Storage="_TestOthersRemark", DbType="NVarChar(1000)")]
		[DataMember(Order=73)]
		public string TestOthersRemark
		{
			get
			{
				return this._TestOthersRemark;
			}
			set
			{
				if ((this._TestOthersRemark != value))
				{
					this.OnTestOthersRemarkChanging(value);
					this.SendPropertyChanging();
					this._TestOthersRemark = value;
					this.SendPropertyChanged("TestOthersRemark");
					this.OnTestOthersRemarkChanged();
				}
			}
		}
		
		[Column(Storage="_TestDate", DbType="DateTime")]
		[DataMember(Order=74)]
		public System.Nullable<System.DateTime> TestDate
		{
			get
			{
				return this._TestDate;
			}
			set
			{
				if ((this._TestDate != value))
				{
					this.OnTestDateChanging(value);
					this.SendPropertyChanging();
					this._TestDate = value;
					this.SendPropertyChanged("TestDate");
					this.OnTestDateChanged();
				}
			}
		}
		
		[Column(Storage="_TestConfirm", DbType="NVarChar(40)")]
		[DataMember(Order=75)]
		public string TestConfirm
		{
			get
			{
				return this._TestConfirm;
			}
			set
			{
				if ((this._TestConfirm != value))
				{
					this.OnTestConfirmChanging(value);
					this.SendPropertyChanging();
					this._TestConfirm = value;
					this.SendPropertyChanged("TestConfirm");
					this.OnTestConfirmChanged();
				}
			}
		}
		
		[Column(Storage="_CuttingMixStyles", DbType="Bit")]
		[DataMember(Order=76)]
		public System.Nullable<bool> CuttingMixStyles
		{
			get
			{
				return this._CuttingMixStyles;
			}
			set
			{
				if ((this._CuttingMixStyles != value))
				{
					this.OnCuttingMixStylesChanging(value);
					this.SendPropertyChanging();
					this._CuttingMixStyles = value;
					this.SendPropertyChanged("CuttingMixStyles");
					this.OnCuttingMixStylesChanged();
				}
			}
		}
		
		[Column(Storage="_CuttingOthers", DbType="Bit")]
		[DataMember(Order=77)]
		public System.Nullable<bool> CuttingOthers
		{
			get
			{
				return this._CuttingOthers;
			}
			set
			{
				if ((this._CuttingOthers != value))
				{
					this.OnCuttingOthersChanging(value);
					this.SendPropertyChanging();
					this._CuttingOthers = value;
					this.SendPropertyChanged("CuttingOthers");
					this.OnCuttingOthersChanged();
				}
			}
		}
		
		[Column(Storage="_CuttingOthersRemark", DbType="NVarChar(1000)")]
		[DataMember(Order=78)]
		public string CuttingOthersRemark
		{
			get
			{
				return this._CuttingOthersRemark;
			}
			set
			{
				if ((this._CuttingOthersRemark != value))
				{
					this.OnCuttingOthersRemarkChanging(value);
					this.SendPropertyChanging();
					this._CuttingOthersRemark = value;
					this.SendPropertyChanged("CuttingOthersRemark");
					this.OnCuttingOthersRemarkChanged();
				}
			}
		}
		
		[Column(Storage="_SampleDesptachQtyAndDate", DbType="NVarChar(50)")]
		[DataMember(Order=79)]
		public string SampleDesptachQtyAndDate
		{
			get
			{
				return this._SampleDesptachQtyAndDate;
			}
			set
			{
				if ((this._SampleDesptachQtyAndDate != value))
				{
					this.OnSampleDesptachQtyAndDateChanging(value);
					this.SendPropertyChanging();
					this._SampleDesptachQtyAndDate = value;
					this.SendPropertyChanged("SampleDesptachQtyAndDate");
					this.OnSampleDesptachQtyAndDateChanged();
				}
			}
		}
		
		[Column(Storage="_ActionStatus", DbType="Int")]
		[DataMember(Order=80)]
		public System.Nullable<int> ActionStatus
		{
			get
			{
				return this._ActionStatus;
			}
			set
			{
				if ((this._ActionStatus != value))
				{
					this.OnActionStatusChanging(value);
					this.SendPropertyChanging();
					this._ActionStatus = value;
					this.SendPropertyChanged("ActionStatus");
					this.OnActionStatusChanged();
				}
			}
		}
		
		[Column(Storage="_ActionStatusDate", DbType="DateTime")]
		[DataMember(Order=81)]
		public System.Nullable<System.DateTime> ActionStatusDate
		{
			get
			{
				return this._ActionStatusDate;
			}
			set
			{
				if ((this._ActionStatusDate != value))
				{
					this.OnActionStatusDateChanging(value);
					this.SendPropertyChanging();
					this._ActionStatusDate = value;
					this.SendPropertyChanged("ActionStatusDate");
					this.OnActionStatusDateChanged();
				}
			}
		}
		
		[Column(Storage="_PackReference", DbType="NVarChar(50)")]
		[DataMember(Order=82)]
		public string PackReference
		{
			get
			{
				return this._PackReference;
			}
			set
			{
				if ((this._PackReference != value))
				{
					this.OnPackReferenceChanging(value);
					this.SendPropertyChanging();
					this._PackReference = value;
					this.SendPropertyChanged("PackReference");
					this.OnPackReferenceChanged();
				}
			}
		}
		
		[Column(Storage="_LabelReference", DbType="NVarChar(50)")]
		[DataMember(Order=83)]
		public string LabelReference
		{
			get
			{
				return this._LabelReference;
			}
			set
			{
				if ((this._LabelReference != value))
				{
					this.OnLabelReferenceChanging(value);
					this.SendPropertyChanging();
					this._LabelReference = value;
					this.SendPropertyChanged("LabelReference");
					this.OnLabelReferenceChanged();
				}
			}
		}
		
		[Column(Storage="_FirstStationStartShip", DbType="DateTime")]
		[DataMember(Order=84)]
		public System.Nullable<System.DateTime> FirstStationStartShip
		{
			get
			{
				return this._FirstStationStartShip;
			}
			set
			{
				if ((this._FirstStationStartShip != value))
				{
					this.OnFirstStationStartShipChanging(value);
					this.SendPropertyChanging();
					this._FirstStationStartShip = value;
					this.SendPropertyChanged("FirstStationStartShip");
					this.OnFirstStationStartShipChanged();
				}
			}
		}
		
		[Column(Storage="_FirstStationShipCompleted", DbType="DateTime")]
		[DataMember(Order=85)]
		public System.Nullable<System.DateTime> FirstStationShipCompleted
		{
			get
			{
				return this._FirstStationShipCompleted;
			}
			set
			{
				if ((this._FirstStationShipCompleted != value))
				{
					this.OnFirstStationShipCompletedChanging(value);
					this.SendPropertyChanging();
					this._FirstStationShipCompleted = value;
					this.SendPropertyChanged("FirstStationShipCompleted");
					this.OnFirstStationShipCompletedChanged();
				}
			}
		}
		
		[Column(Storage="_NumberOfLine", DbType="Float")]
		[DataMember(Order=86)]
		public System.Nullable<double> NumberOfLine
		{
			get
			{
				return this._NumberOfLine;
			}
			set
			{
				if ((this._NumberOfLine != value))
				{
					this.OnNumberOfLineChanging(value);
					this.SendPropertyChanging();
					this._NumberOfLine = value;
					this.SendPropertyChanged("NumberOfLine");
					this.OnNumberOfLineChanged();
				}
			}
		}
		
		[Column(Storage="_EFF", DbType="Float")]
		[DataMember(Order=87)]
		public System.Nullable<double> EFF
		{
			get
			{
				return this._EFF;
			}
			set
			{
				if ((this._EFF != value))
				{
					this.OnEFFChanging(value);
					this.SendPropertyChanging();
					this._EFF = value;
					this.SendPropertyChanged("EFF");
					this.OnEFFChanged();
				}
			}
		}
		
		[Column(Storage="_CU", DbType="Float")]
		[DataMember(Order=88)]
		public System.Nullable<double> CU
		{
			get
			{
				return this._CU;
			}
			set
			{
				if ((this._CU != value))
				{
					this.OnCUChanging(value);
					this.SendPropertyChanging();
					this._CU = value;
					this.SendPropertyChanged("CU");
					this.OnCUChanged();
				}
			}
		}
		
		[Column(Storage="_WF", DbType="Float")]
		[DataMember(Order=89)]
		public System.Nullable<double> WF
		{
			get
			{
				return this._WF;
			}
			set
			{
				if ((this._WF != value))
				{
					this.OnWFChanging(value);
					this.SendPropertyChanging();
					this._WF = value;
					this.SendPropertyChanged("WF");
					this.OnWFChanged();
				}
			}
		}
		
		[Column(Storage="_ShipModeChangeRemark", DbType="NVarChar(500)")]
		[DataMember(Order=90)]
		public string ShipModeChangeRemark
		{
			get
			{
				return this._ShipModeChangeRemark;
			}
			set
			{
				if ((this._ShipModeChangeRemark != value))
				{
					this.OnShipModeChangeRemarkChanging(value);
					this.SendPropertyChanging();
					this._ShipModeChangeRemark = value;
					this.SendPropertyChanged("ShipModeChangeRemark");
					this.OnShipModeChangeRemarkChanged();
				}
			}
		}
		
		[Column(Storage="_Line_SAH", DbType="Float")]
		[DataMember(Order=91)]
		public System.Nullable<double> Line_SAH
		{
			get
			{
				return this._Line_SAH;
			}
			set
			{
				if ((this._Line_SAH != value))
				{
					this.OnLine_SAHChanging(value);
					this.SendPropertyChanging();
					this._Line_SAH = value;
					this.SendPropertyChanged("Line_SAH");
					this.OnLine_SAHChanged();
				}
			}
		}
		
		[Column(Storage="_CompletedDate", DbType="DateTime")]
		[DataMember(Order=92)]
		public System.Nullable<System.DateTime> CompletedDate
		{
			get
			{
				return this._CompletedDate;
			}
			set
			{
				if ((this._CompletedDate != value))
				{
					this.OnCompletedDateChanging(value);
					this.SendPropertyChanging();
					this._CompletedDate = value;
					this.SendPropertyChanged("CompletedDate");
					this.OnCompletedDateChanged();
				}
			}
		}
		
		[Column(Storage="_TransitDate", DbType="DateTime")]
		[DataMember(Order=93)]
		public System.Nullable<System.DateTime> TransitDate
		{
			get
			{
				return this._TransitDate;
			}
			set
			{
				if ((this._TransitDate != value))
				{
					this.OnTransitDateChanging(value);
					this.SendPropertyChanging();
					this._TransitDate = value;
					this.SendPropertyChanged("TransitDate");
					this.OnTransitDateChanged();
				}
			}
		}
		
		[Column(Storage="_ProductPrice", DbType="Decimal(15,5)")]
		[DataMember(Order=94)]
		public System.Nullable<decimal> ProductPrice
		{
			get
			{
				return this._ProductPrice;
			}
			set
			{
				if ((this._ProductPrice != value))
				{
					this.OnProductPriceChanging(value);
					this.SendPropertyChanging();
					this._ProductPrice = value;
					this.SendPropertyChanged("ProductPrice");
					this.OnProductPriceChanged();
				}
			}
		}
		
		[Column(Storage="_Currency", DbType="VarChar(5)")]
		[DataMember(Order=95)]
		public string Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[Column(Storage="_SpecialFactory", DbType="NVarChar(50)")]
		[DataMember(Order=96)]
		public string SpecialFactory
		{
			get
			{
				return this._SpecialFactory;
			}
			set
			{
				if ((this._SpecialFactory != value))
				{
					this.OnSpecialFactoryChanging(value);
					this.SendPropertyChanging();
					this._SpecialFactory = value;
					this.SendPropertyChanged("SpecialFactory");
					this.OnSpecialFactoryChanged();
				}
			}
		}
		
		[Column(Storage="_AssignFactory", DbType="NVarChar(50)")]
		[DataMember(Order=97)]
		public string AssignFactory
		{
			get
			{
				return this._AssignFactory;
			}
			set
			{
				if ((this._AssignFactory != value))
				{
					this.OnAssignFactoryChanging(value);
					this.SendPropertyChanging();
					this._AssignFactory = value;
					this.SendPropertyChanged("AssignFactory");
					this.OnAssignFactoryChanged();
				}
			}
		}
		
		[Column(Storage="_CasingMethod", DbType="NVarChar(100)")]
		[DataMember(Order=98)]
		public string CasingMethod
		{
			get
			{
				return this._CasingMethod;
			}
			set
			{
				if ((this._CasingMethod != value))
				{
					this.OnCasingMethodChanging(value);
					this.SendPropertyChanging();
					this._CasingMethod = value;
					this.SendPropertyChanged("CasingMethod");
					this.OnCasingMethodChanged();
				}
			}
		}
		
		[Column(Storage="_BulkShipmentQty", DbType="Int")]
		[DataMember(Order=99)]
		public System.Nullable<int> BulkShipmentQty
		{
			get
			{
				return this._BulkShipmentQty;
			}
			set
			{
				if ((this._BulkShipmentQty != value))
				{
					this.OnBulkShipmentQtyChanging(value);
					this.SendPropertyChanging();
					this._BulkShipmentQty = value;
					this.SendPropertyChanged("BulkShipmentQty");
					this.OnBulkShipmentQtyChanged();
				}
			}
		}
		
		[Column(Storage="_BulkSampleQty", DbType="Int")]
		[DataMember(Order=100)]
		public System.Nullable<int> BulkSampleQty
		{
			get
			{
				return this._BulkSampleQty;
			}
			set
			{
				if ((this._BulkSampleQty != value))
				{
					this.OnBulkSampleQtyChanging(value);
					this.SendPropertyChanging();
					this._BulkSampleQty = value;
					this.SendPropertyChanged("BulkSampleQty");
					this.OnBulkSampleQtyChanged();
				}
			}
		}
		
		[Column(Storage="_BulkSampleQty_PPWs", DbType="Int")]
		[DataMember(Order=101)]
		public System.Nullable<int> BulkSampleQty_PPWs
		{
			get
			{
				return this._BulkSampleQty_PPWs;
			}
			set
			{
				if ((this._BulkSampleQty_PPWs != value))
				{
					this.OnBulkSampleQty_PPWsChanging(value);
					this.SendPropertyChanging();
					this._BulkSampleQty_PPWs = value;
					this.SendPropertyChanged("BulkSampleQty_PPWs");
					this.OnBulkSampleQty_PPWsChanged();
				}
			}
		}
		
		[Column(Storage="_BulkSampleQty_Sewing", DbType="Int")]
		[DataMember(Order=102)]
		public System.Nullable<int> BulkSampleQty_Sewing
		{
			get
			{
				return this._BulkSampleQty_Sewing;
			}
			set
			{
				if ((this._BulkSampleQty_Sewing != value))
				{
					this.OnBulkSampleQty_SewingChanging(value);
					this.SendPropertyChanging();
					this._BulkSampleQty_Sewing = value;
					this.SendPropertyChanged("BulkSampleQty_Sewing");
					this.OnBulkSampleQty_SewingChanged();
				}
			}
		}
		
		[Column(Storage="_SampleIsArranged", DbType="Bit")]
		[DataMember(Order=103)]
		public System.Nullable<bool> SampleIsArranged
		{
			get
			{
				return this._SampleIsArranged;
			}
			set
			{
				if ((this._SampleIsArranged != value))
				{
					this.OnSampleIsArrangedChanging(value);
					this.SendPropertyChanging();
					this._SampleIsArranged = value;
					this.SendPropertyChanged("SampleIsArranged");
					this.OnSampleIsArrangedChanged();
				}
			}
		}
		
		[Column(Storage="_SampleOrderNOs", DbType="VarChar(300)")]
		[DataMember(Order=104)]
		public string SampleOrderNOs
		{
			get
			{
				return this._SampleOrderNOs;
			}
			set
			{
				if ((this._SampleOrderNOs != value))
				{
					this.OnSampleOrderNOsChanging(value);
					this.SendPropertyChanging();
					this._SampleOrderNOs = value;
					this.SendPropertyChanged("SampleOrderNOs");
					this.OnSampleOrderNOsChanged();
				}
			}
		}
		
		[Column(Storage="_SampleOrderNOCreater", DbType="VarChar(100)")]
		[DataMember(Order=105)]
		public string SampleOrderNOCreater
		{
			get
			{
				return this._SampleOrderNOCreater;
			}
			set
			{
				if ((this._SampleOrderNOCreater != value))
				{
					this.OnSampleOrderNOCreaterChanging(value);
					this.SendPropertyChanging();
					this._SampleOrderNOCreater = value;
					this.SendPropertyChanged("SampleOrderNOCreater");
					this.OnSampleOrderNOCreaterChanged();
				}
			}
		}
		
		[Column(Storage="_SampleOrderNOCreateDate", DbType="DateTime")]
		[DataMember(Order=106)]
		public System.Nullable<System.DateTime> SampleOrderNOCreateDate
		{
			get
			{
				return this._SampleOrderNOCreateDate;
			}
			set
			{
				if ((this._SampleOrderNOCreateDate != value))
				{
					this.OnSampleOrderNOCreateDateChanging(value);
					this.SendPropertyChanging();
					this._SampleOrderNOCreateDate = value;
					this.SendPropertyChanged("SampleOrderNOCreateDate");
					this.OnSampleOrderNOCreateDateChanged();
				}
			}
		}
		
		[Column(Storage="_WOQty", DbType="Int")]
		[DataMember(Order=107)]
		public System.Nullable<int> WOQty
		{
			get
			{
				return this._WOQty;
			}
			set
			{
				if ((this._WOQty != value))
				{
					this.OnWOQtyChanging(value);
					this.SendPropertyChanging();
					this._WOQty = value;
					this.SendPropertyChanged("WOQty");
					this.OnWOQtyChanged();
				}
			}
		}
		
		[Column(Storage="_IncompleteWOReasonCode", DbType="VarChar(50)")]
		[DataMember(Order=108)]
		public string IncompleteWOReasonCode
		{
			get
			{
				return this._IncompleteWOReasonCode;
			}
			set
			{
				if ((this._IncompleteWOReasonCode != value))
				{
					this.OnIncompleteWOReasonCodeChanging(value);
					this.SendPropertyChanging();
					this._IncompleteWOReasonCode = value;
					this.SendPropertyChanged("IncompleteWOReasonCode");
					this.OnIncompleteWOReasonCodeChanged();
				}
			}
		}
		
		[Association(Name="WorkOrder_WorkOrderVersion", Storage="_WorkOrderVersions", ThisKey="Company,SalesOrderNo,WorkOrderNo", OtherKey="Company,SalesOrderNo,WorkOrderNo")]
		[DataMember(Order=109, EmitDefaultValue=false)]
		public EntitySet<WorkOrderVersion> WorkOrderVersions
		{
			get
			{
				if ((this.serializing 
							&& (this._WorkOrderVersions.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._WorkOrderVersions;
			}
			set
			{
				this._WorkOrderVersions.Assign(value);
			}
		}
		
		[Association(Name="WorkOrder_WOChooseFW", Storage="_WOChooseFWs", ThisKey="Company,SalesOrderNo,WorkOrderNo", OtherKey="Company,SalesOrderNo,WorkOrderNo")]
		[DataMember(Order=110, EmitDefaultValue=false)]
		public EntitySet<WOChooseFW> WOChooseFWs
		{
			get
			{
				if ((this.serializing 
							&& (this._WOChooseFWs.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._WOChooseFWs;
			}
			set
			{
				this._WOChooseFWs.Assign(value);
			}
		}
		
		[Association(Name="WorkOrder_WorkOrderColor", Storage="_WorkOrderColors", ThisKey="Company,SalesOrderNo,WorkOrderNo", OtherKey="Company,SalesOrderNo,WorkOrderNo")]
		[DataMember(Order=111, EmitDefaultValue=false)]
		public EntitySet<WorkOrderColor> WorkOrderColors
		{
			get
			{
				if ((this.serializing 
							&& (this._WorkOrderColors.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._WorkOrderColors;
			}
			set
			{
				this._WorkOrderColors.Assign(value);
			}
		}
		
		[Association(Name="WorkOrder_WorkOrderCategory", Storage="_WorkOrderCategories", ThisKey="Company,SalesOrderNo,WorkOrderNo", OtherKey="Company,SalesOrderNo,WorkOrderNo")]
		[DataMember(Order=112, EmitDefaultValue=false)]
		public EntitySet<WorkOrderCategory> WorkOrderCategories
		{
			get
			{
				if ((this.serializing 
							&& (this._WorkOrderCategories.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._WorkOrderCategories;
			}
			set
			{
				this._WorkOrderCategories.Assign(value);
			}
		}
		
		[Association(Name="Project_WorkOrder", Storage="_Project", ThisKey="Company,SalesOrderNo", OtherKey="Company,SalesOrderNo", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Project Project
		{
			get
			{
				return this._Project.Entity;
			}
			set
			{
				Project previousValue = this._Project.Entity;
				if (((previousValue != value) 
							|| (this._Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Project.Entity = null;
						previousValue.WorkOrders.Remove(this);
					}
					this._Project.Entity = value;
					if ((value != null))
					{
						value.WorkOrders.Add(this);
						this._Company = value.Company;
						this._SalesOrderNo = value.SalesOrderNo;
					}
					else
					{
						this._Company = default(string);
						this._SalesOrderNo = default(string);
					}
					this.SendPropertyChanged("Project");
				}
			}
		}
		
		[Association(Name="Style_WorkOrder", Storage="_Style", ThisKey="Company,StyleNo", OtherKey="Company,StyleNo", IsForeignKey=true)]
		public Style Style
		{
			get
			{
				return this._Style.Entity;
			}
			set
			{
				Style previousValue = this._Style.Entity;
				if (((previousValue != value) 
							|| (this._Style.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Style.Entity = null;
						previousValue.WorkOrders.Remove(this);
					}
					this._Style.Entity = value;
					if ((value != null))
					{
						value.WorkOrders.Add(this);
						this._Company = value.Company;
						this._StyleNo = value.StyleNo;
					}
					else
					{
						this._Company = default(string);
						this._StyleNo = default(string);
					}
					this.SendPropertyChanged("Style");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_WorkOrderVersions(WorkOrderVersion entity)
		{
			this.SendPropertyChanging();
			entity.WorkOrder = this;
		}
		
		private void detach_WorkOrderVersions(WorkOrderVersion entity)
		{
			this.SendPropertyChanging();
			entity.WorkOrder = null;
		}
		
		private void attach_WOChooseFWs(WOChooseFW entity)
		{
			this.SendPropertyChanging();
			entity.WorkOrder = this;
		}
		
		private void detach_WOChooseFWs(WOChooseFW entity)
		{
			this.SendPropertyChanging();
			entity.WorkOrder = null;
		}
		
		private void attach_WorkOrderColors(WorkOrderColor entity)
		{
			this.SendPropertyChanging();
			entity.WorkOrder = this;
		}
		
		private void detach_WorkOrderColors(WorkOrderColor entity)
		{
			this.SendPropertyChanging();
			entity.WorkOrder = null;
		}
		
		private void attach_WorkOrderCategories(WorkOrderCategory entity)
		{
			this.SendPropertyChanging();
			entity.WorkOrder = this;
		}
		
		private void detach_WorkOrderCategories(WorkOrderCategory entity)
		{
			this.SendPropertyChanging();
			entity.WorkOrder = null;
		}
		
		private void Initialize()
		{
			this._WorkOrderVersions = new EntitySet<WorkOrderVersion>(new Action<WorkOrderVersion>(this.attach_WorkOrderVersions), new Action<WorkOrderVersion>(this.detach_WorkOrderVersions));
			this._WOChooseFWs = new EntitySet<WOChooseFW>(new Action<WOChooseFW>(this.attach_WOChooseFWs), new Action<WOChooseFW>(this.detach_WOChooseFWs));
			this._WorkOrderColors = new EntitySet<WorkOrderColor>(new Action<WorkOrderColor>(this.attach_WorkOrderColors), new Action<WorkOrderColor>(this.detach_WorkOrderColors));
			this._WorkOrderCategories = new EntitySet<WorkOrderCategory>(new Action<WorkOrderCategory>(this.attach_WorkOrderCategories), new Action<WorkOrderCategory>(this.detach_WorkOrderCategories));
			this._Project = default(EntityRef<Project>);
			this._Style = default(EntityRef<Style>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[OnSerializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[OnSerialized()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[Table(Name="dbo.WONotepadReason")]
	[DataContract()]
	public partial class WONotepadReason : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OID;
		
		private string _Seq;
		
		private string _NameEN;
		
		private string _NameCN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOIDChanging(int value);
    partial void OnOIDChanged();
    partial void OnSeqChanging(string value);
    partial void OnSeqChanged();
    partial void OnNameENChanging(string value);
    partial void OnNameENChanged();
    partial void OnNameCNChanging(string value);
    partial void OnNameCNChanged();
    #endregion
		
		public WONotepadReason()
		{
			this.Initialize();
		}
		
		[Column(Storage="_OID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=1)]
		public int OID
		{
			get
			{
				return this._OID;
			}
			set
			{
				if ((this._OID != value))
				{
					this.OnOIDChanging(value);
					this.SendPropertyChanging();
					this._OID = value;
					this.SendPropertyChanged("OID");
					this.OnOIDChanged();
				}
			}
		}
		
		[Column(Storage="_Seq", DbType="VarChar(20)")]
		[DataMember(Order=2)]
		public string Seq
		{
			get
			{
				return this._Seq;
			}
			set
			{
				if ((this._Seq != value))
				{
					this.OnSeqChanging(value);
					this.SendPropertyChanging();
					this._Seq = value;
					this.SendPropertyChanged("Seq");
					this.OnSeqChanged();
				}
			}
		}
		
		[Column(Storage="_NameEN", DbType="NVarChar(300)")]
		[DataMember(Order=3)]
		public string NameEN
		{
			get
			{
				return this._NameEN;
			}
			set
			{
				if ((this._NameEN != value))
				{
					this.OnNameENChanging(value);
					this.SendPropertyChanging();
					this._NameEN = value;
					this.SendPropertyChanged("NameEN");
					this.OnNameENChanged();
				}
			}
		}
		
		[Column(Storage="_NameCN", DbType="NVarChar(300)")]
		[DataMember(Order=4)]
		public string NameCN
		{
			get
			{
				return this._NameCN;
			}
			set
			{
				if ((this._NameCN != value))
				{
					this.OnNameCNChanging(value);
					this.SendPropertyChanging();
					this._NameCN = value;
					this.SendPropertyChanged("NameCN");
					this.OnNameCNChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[Table(Name="dbo.WorkOrderSample")]
	[DataContract()]
	public partial class WorkOrderSample : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Company;
		
		private string _SalesOrderNo;
		
		private string _WorkOrderNo;
		
		private string _ColorCode;
		
		private string _Cup;
		
		private string _Size;
		
		private System.Guid _SampleID;
		
		private string _SampleType;
		
		private string _WorkShop;
		
		private System.Nullable<System.DateTime> _SampleDespatchDate;
		
		private System.Nullable<int> _SampleQty;
		
		private string _AddressTo;
		
		private string _Symbol;
		
		private System.Nullable<System.DateTime> _ActualSampleDespatchDate;
		
		private System.Nullable<System.DateTime> _ApproveDate;
		
		private System.Nullable<int> _KeepQty;
		
		private System.Nullable<System.DateTime> _SampleDespatchDate_Next;
		
		private System.Nullable<System.DateTime> _ActualSampleDespatchDate_Next;
		
		private System.Nullable<System.DateTime> _ApproveDate_Next;
		
		private string _ApproveStatus;
		
		private string _ApproveStatus_Next;
		
		private EntityRef<WorkOrderSKU> _WorkOrderSKU;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnSalesOrderNoChanging(string value);
    partial void OnSalesOrderNoChanged();
    partial void OnWorkOrderNoChanging(string value);
    partial void OnWorkOrderNoChanged();
    partial void OnColorCodeChanging(string value);
    partial void OnColorCodeChanged();
    partial void OnCupChanging(string value);
    partial void OnCupChanged();
    partial void OnSizeChanging(string value);
    partial void OnSizeChanged();
    partial void OnSampleIDChanging(System.Guid value);
    partial void OnSampleIDChanged();
    partial void OnSampleTypeChanging(string value);
    partial void OnSampleTypeChanged();
    partial void OnWorkShopChanging(string value);
    partial void OnWorkShopChanged();
    partial void OnSampleDespatchDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSampleDespatchDateChanged();
    partial void OnSampleQtyChanging(System.Nullable<int> value);
    partial void OnSampleQtyChanged();
    partial void OnAddressToChanging(string value);
    partial void OnAddressToChanged();
    partial void OnSymbolChanging(string value);
    partial void OnSymbolChanged();
    partial void OnActualSampleDespatchDateChanging(System.Nullable<System.DateTime> value);
    partial void OnActualSampleDespatchDateChanged();
    partial void OnApproveDateChanging(System.Nullable<System.DateTime> value);
    partial void OnApproveDateChanged();
    partial void OnKeepQtyChanging(System.Nullable<int> value);
    partial void OnKeepQtyChanged();
    partial void OnSampleDespatchDate_NextChanging(System.Nullable<System.DateTime> value);
    partial void OnSampleDespatchDate_NextChanged();
    partial void OnActualSampleDespatchDate_NextChanging(System.Nullable<System.DateTime> value);
    partial void OnActualSampleDespatchDate_NextChanged();
    partial void OnApproveDate_NextChanging(System.Nullable<System.DateTime> value);
    partial void OnApproveDate_NextChanged();
    partial void OnApproveStatusChanging(string value);
    partial void OnApproveStatusChanged();
    partial void OnApproveStatus_NextChanging(string value);
    partial void OnApproveStatus_NextChanged();
    #endregion
		
		public WorkOrderSample()
		{
			this.Initialize();
		}
		
		[Column(Storage="_Company", DbType="VarChar(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=1)]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					if (this._WorkOrderSKU.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[Column(Storage="_SalesOrderNo", DbType="VarChar(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=2)]
		public string SalesOrderNo
		{
			get
			{
				return this._SalesOrderNo;
			}
			set
			{
				if ((this._SalesOrderNo != value))
				{
					if (this._WorkOrderSKU.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSalesOrderNoChanging(value);
					this.SendPropertyChanging();
					this._SalesOrderNo = value;
					this.SendPropertyChanged("SalesOrderNo");
					this.OnSalesOrderNoChanged();
				}
			}
		}
		
		[Column(Storage="_WorkOrderNo", DbType="VarChar(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=3)]
		public string WorkOrderNo
		{
			get
			{
				return this._WorkOrderNo;
			}
			set
			{
				if ((this._WorkOrderNo != value))
				{
					if (this._WorkOrderSKU.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkOrderNoChanging(value);
					this.SendPropertyChanging();
					this._WorkOrderNo = value;
					this.SendPropertyChanged("WorkOrderNo");
					this.OnWorkOrderNoChanged();
				}
			}
		}
		
		[Column(Storage="_ColorCode", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=4)]
		public string ColorCode
		{
			get
			{
				return this._ColorCode;
			}
			set
			{
				if ((this._ColorCode != value))
				{
					if (this._WorkOrderSKU.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnColorCodeChanging(value);
					this.SendPropertyChanging();
					this._ColorCode = value;
					this.SendPropertyChanged("ColorCode");
					this.OnColorCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Cup", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=5)]
		public string Cup
		{
			get
			{
				return this._Cup;
			}
			set
			{
				if ((this._Cup != value))
				{
					if (this._WorkOrderSKU.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCupChanging(value);
					this.SendPropertyChanging();
					this._Cup = value;
					this.SendPropertyChanged("Cup");
					this.OnCupChanged();
				}
			}
		}
		
		[Column(Storage="_Size", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=6)]
		public string Size
		{
			get
			{
				return this._Size;
			}
			set
			{
				if ((this._Size != value))
				{
					if (this._WorkOrderSKU.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSizeChanging(value);
					this.SendPropertyChanging();
					this._Size = value;
					this.SendPropertyChanged("Size");
					this.OnSizeChanged();
				}
			}
		}
		
		[Column(Storage="_SampleID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[DataMember(Order=7)]
		public System.Guid SampleID
		{
			get
			{
				return this._SampleID;
			}
			set
			{
				if ((this._SampleID != value))
				{
					this.OnSampleIDChanging(value);
					this.SendPropertyChanging();
					this._SampleID = value;
					this.SendPropertyChanged("SampleID");
					this.OnSampleIDChanged();
				}
			}
		}
		
		[Column(Storage="_SampleType", DbType="VarChar(50)")]
		[DataMember(Order=8)]
		public string SampleType
		{
			get
			{
				return this._SampleType;
			}
			set
			{
				if ((this._SampleType != value))
				{
					this.OnSampleTypeChanging(value);
					this.SendPropertyChanging();
					this._SampleType = value;
					this.SendPropertyChanged("SampleType");
					this.OnSampleTypeChanged();
				}
			}
		}
		
		[Column(Storage="_WorkShop", DbType="NVarChar(40)")]
		[DataMember(Order=9)]
		public string WorkShop
		{
			get
			{
				return this._WorkShop;
			}
			set
			{
				if ((this._WorkShop != value))
				{
					this.OnWorkShopChanging(value);
					this.SendPropertyChanging();
					this._WorkShop = value;
					this.SendPropertyChanged("WorkShop");
					this.OnWorkShopChanged();
				}
			}
		}
		
		[Column(Storage="_SampleDespatchDate", DbType="DateTime")]
		[DataMember(Order=10)]
		public System.Nullable<System.DateTime> SampleDespatchDate
		{
			get
			{
				return this._SampleDespatchDate;
			}
			set
			{
				if ((this._SampleDespatchDate != value))
				{
					this.OnSampleDespatchDateChanging(value);
					this.SendPropertyChanging();
					this._SampleDespatchDate = value;
					this.SendPropertyChanged("SampleDespatchDate");
					this.OnSampleDespatchDateChanged();
				}
			}
		}
		
		[Column(Storage="_SampleQty", DbType="Int")]
		[DataMember(Order=11)]
		public System.Nullable<int> SampleQty
		{
			get
			{
				return this._SampleQty;
			}
			set
			{
				if ((this._SampleQty != value))
				{
					this.OnSampleQtyChanging(value);
					this.SendPropertyChanging();
					this._SampleQty = value;
					this.SendPropertyChanged("SampleQty");
					this.OnSampleQtyChanged();
				}
			}
		}
		
		[Column(Storage="_AddressTo", DbType="NVarChar(50)")]
		[DataMember(Order=12)]
		public string AddressTo
		{
			get
			{
				return this._AddressTo;
			}
			set
			{
				if ((this._AddressTo != value))
				{
					this.OnAddressToChanging(value);
					this.SendPropertyChanging();
					this._AddressTo = value;
					this.SendPropertyChanged("AddressTo");
					this.OnAddressToChanged();
				}
			}
		}
		
		[Column(Storage="_Symbol", DbType="NVarChar(20)")]
		[DataMember(Order=13)]
		public string Symbol
		{
			get
			{
				return this._Symbol;
			}
			set
			{
				if ((this._Symbol != value))
				{
					this.OnSymbolChanging(value);
					this.SendPropertyChanging();
					this._Symbol = value;
					this.SendPropertyChanged("Symbol");
					this.OnSymbolChanged();
				}
			}
		}
		
		[Column(Storage="_ActualSampleDespatchDate", DbType="DateTime")]
		[DataMember(Order=14)]
		public System.Nullable<System.DateTime> ActualSampleDespatchDate
		{
			get
			{
				return this._ActualSampleDespatchDate;
			}
			set
			{
				if ((this._ActualSampleDespatchDate != value))
				{
					this.OnActualSampleDespatchDateChanging(value);
					this.SendPropertyChanging();
					this._ActualSampleDespatchDate = value;
					this.SendPropertyChanged("ActualSampleDespatchDate");
					this.OnActualSampleDespatchDateChanged();
				}
			}
		}
		
		[Column(Storage="_ApproveDate", DbType="DateTime")]
		[DataMember(Order=15)]
		public System.Nullable<System.DateTime> ApproveDate
		{
			get
			{
				return this._ApproveDate;
			}
			set
			{
				if ((this._ApproveDate != value))
				{
					this.OnApproveDateChanging(value);
					this.SendPropertyChanging();
					this._ApproveDate = value;
					this.SendPropertyChanged("ApproveDate");
					this.OnApproveDateChanged();
				}
			}
		}
		
		[Column(Storage="_KeepQty", DbType="Int")]
		[DataMember(Order=16)]
		public System.Nullable<int> KeepQty
		{
			get
			{
				return this._KeepQty;
			}
			set
			{
				if ((this._KeepQty != value))
				{
					this.OnKeepQtyChanging(value);
					this.SendPropertyChanging();
					this._KeepQty = value;
					this.SendPropertyChanged("KeepQty");
					this.OnKeepQtyChanged();
				}
			}
		}
		
		[Column(Storage="_SampleDespatchDate_Next", DbType="DateTime")]
		[DataMember(Order=17)]
		public System.Nullable<System.DateTime> SampleDespatchDate_Next
		{
			get
			{
				return this._SampleDespatchDate_Next;
			}
			set
			{
				if ((this._SampleDespatchDate_Next != value))
				{
					this.OnSampleDespatchDate_NextChanging(value);
					this.SendPropertyChanging();
					this._SampleDespatchDate_Next = value;
					this.SendPropertyChanged("SampleDespatchDate_Next");
					this.OnSampleDespatchDate_NextChanged();
				}
			}
		}
		
		[Column(Storage="_ActualSampleDespatchDate_Next", DbType="DateTime")]
		[DataMember(Order=18)]
		public System.Nullable<System.DateTime> ActualSampleDespatchDate_Next
		{
			get
			{
				return this._ActualSampleDespatchDate_Next;
			}
			set
			{
				if ((this._ActualSampleDespatchDate_Next != value))
				{
					this.OnActualSampleDespatchDate_NextChanging(value);
					this.SendPropertyChanging();
					this._ActualSampleDespatchDate_Next = value;
					this.SendPropertyChanged("ActualSampleDespatchDate_Next");
					this.OnActualSampleDespatchDate_NextChanged();
				}
			}
		}
		
		[Column(Storage="_ApproveDate_Next", DbType="DateTime")]
		[DataMember(Order=19)]
		public System.Nullable<System.DateTime> ApproveDate_Next
		{
			get
			{
				return this._ApproveDate_Next;
			}
			set
			{
				if ((this._ApproveDate_Next != value))
				{
					this.OnApproveDate_NextChanging(value);
					this.SendPropertyChanging();
					this._ApproveDate_Next = value;
					this.SendPropertyChanged("ApproveDate_Next");
					this.OnApproveDate_NextChanged();
				}
			}
		}
		
		[Column(Storage="_ApproveStatus", DbType="VarChar(20)")]
		[DataMember(Order=20)]
		public string ApproveStatus
		{
			get
			{
				return this._ApproveStatus;
			}
			set
			{
				if ((this._ApproveStatus != value))
				{
					this.OnApproveStatusChanging(value);
					this.SendPropertyChanging();
					this._ApproveStatus = value;
					this.SendPropertyChanged("ApproveStatus");
					this.OnApproveStatusChanged();
				}
			}
		}
		
		[Column(Storage="_ApproveStatus_Next", DbType="VarChar(20)")]
		[DataMember(Order=21)]
		public string ApproveStatus_Next
		{
			get
			{
				return this._ApproveStatus_Next;
			}
			set
			{
				if ((this._ApproveStatus_Next != value))
				{
					this.OnApproveStatus_NextChanging(value);
					this.SendPropertyChanging();
					this._ApproveStatus_Next = value;
					this.SendPropertyChanged("ApproveStatus_Next");
					this.OnApproveStatus_NextChanged();
				}
			}
		}
		
		[Association(Name="WorkOrderSKU_WorkOrderSample", Storage="_WorkOrderSKU", ThisKey="Company,SalesOrderNo,WorkOrderNo,ColorCode,Cup,Size", OtherKey="Company,SalesOrderNo,WorkOrderNo,ColorCode,Cup,Size", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public WorkOrderSKU WorkOrderSKU
		{
			get
			{
				return this._WorkOrderSKU.Entity;
			}
			set
			{
				WorkOrderSKU previousValue = this._WorkOrderSKU.Entity;
				if (((previousValue != value) 
							|| (this._WorkOrderSKU.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WorkOrderSKU.Entity = null;
						previousValue.WorkOrderSamples.Remove(this);
					}
					this._WorkOrderSKU.Entity = value;
					if ((value != null))
					{
						value.WorkOrderSamples.Add(this);
						this._Company = value.Company;
						this._SalesOrderNo = value.SalesOrderNo;
						this._WorkOrderNo = value.WorkOrderNo;
						this._ColorCode = value.ColorCode;
						this._Cup = value.Cup;
						this._Size = value.Size;
					}
					else
					{
						this._Company = default(string);
						this._SalesOrderNo = default(string);
						this._WorkOrderNo = default(string);
						this._ColorCode = default(string);
						this._Cup = default(string);
						this._Size = default(string);
					}
					this.SendPropertyChanged("WorkOrderSKU");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._WorkOrderSKU = default(EntityRef<WorkOrderSKU>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[Table(Name="dbo.PaymentTerms")]
	[DataContract()]
	public partial class PaymentTerm : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _OID;
		
		private string _Code;
		
		private string _Description;
		
		private string _Explanation;
		
		private EntitySet<PaymentTermsDetail> _PaymentTermsDetails;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOIDChanging(long value);
    partial void OnOIDChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnExplanationChanging(string value);
    partial void OnExplanationChanged();
    #endregion
		
		public PaymentTerm()
		{
			this.Initialize();
		}
		
		[Column(Storage="_OID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=1)]
		public long OID
		{
			get
			{
				return this._OID;
			}
			set
			{
				if ((this._OID != value))
				{
					this.OnOIDChanging(value);
					this.SendPropertyChanging();
					this._OID = value;
					this.SendPropertyChanged("OID");
					this.OnOIDChanged();
				}
			}
		}
		
		[Column(Storage="_Code", DbType="VarChar(50)")]
		[DataMember(Order=2)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Description", DbType="VarChar(1000)")]
		[DataMember(Order=3)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_Explanation", DbType="VarChar(1000)")]
		[DataMember(Order=4)]
		public string Explanation
		{
			get
			{
				return this._Explanation;
			}
			set
			{
				if ((this._Explanation != value))
				{
					this.OnExplanationChanging(value);
					this.SendPropertyChanging();
					this._Explanation = value;
					this.SendPropertyChanged("Explanation");
					this.OnExplanationChanged();
				}
			}
		}
		
		[Association(Name="PaymentTerm_PaymentTermsDetail", Storage="_PaymentTermsDetails", ThisKey="OID", OtherKey="PaymentTermsOID")]
		[DataMember(Order=5, EmitDefaultValue=false)]
		public EntitySet<PaymentTermsDetail> PaymentTermsDetails
		{
			get
			{
				if ((this.serializing 
							&& (this._PaymentTermsDetails.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._PaymentTermsDetails;
			}
			set
			{
				this._PaymentTermsDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PaymentTermsDetails(PaymentTermsDetail entity)
		{
			this.SendPropertyChanging();
			entity.PaymentTerm = this;
		}
		
		private void detach_PaymentTermsDetails(PaymentTermsDetail entity)
		{
			this.SendPropertyChanging();
			entity.PaymentTerm = null;
		}
		
		private void Initialize()
		{
			this._PaymentTermsDetails = new EntitySet<PaymentTermsDetail>(new Action<PaymentTermsDetail>(this.attach_PaymentTermsDetails), new Action<PaymentTermsDetail>(this.detach_PaymentTermsDetails));
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[OnSerializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[OnSerialized()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[Table(Name="dbo.PaymentTermsDetail")]
	[DataContract()]
	public partial class PaymentTermsDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _OID;
		
		private System.Nullable<long> _PaymentTermsOID;
		
		private string _Customer;
		
		private string _Description;
		
		private string _Explanation;
		
		private EntityRef<PaymentTerm> _PaymentTerm;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOIDChanging(long value);
    partial void OnOIDChanged();
    partial void OnPaymentTermsOIDChanging(System.Nullable<long> value);
    partial void OnPaymentTermsOIDChanged();
    partial void OnCustomerChanging(string value);
    partial void OnCustomerChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnExplanationChanging(string value);
    partial void OnExplanationChanged();
    #endregion
		
		public PaymentTermsDetail()
		{
			this.Initialize();
		}
		
		[Column(Storage="_OID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=1)]
		public long OID
		{
			get
			{
				return this._OID;
			}
			set
			{
				if ((this._OID != value))
				{
					this.OnOIDChanging(value);
					this.SendPropertyChanging();
					this._OID = value;
					this.SendPropertyChanged("OID");
					this.OnOIDChanged();
				}
			}
		}
		
		[Column(Storage="_PaymentTermsOID", DbType="BigInt")]
		[DataMember(Order=2)]
		public System.Nullable<long> PaymentTermsOID
		{
			get
			{
				return this._PaymentTermsOID;
			}
			set
			{
				if ((this._PaymentTermsOID != value))
				{
					if (this._PaymentTerm.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPaymentTermsOIDChanging(value);
					this.SendPropertyChanging();
					this._PaymentTermsOID = value;
					this.SendPropertyChanged("PaymentTermsOID");
					this.OnPaymentTermsOIDChanged();
				}
			}
		}
		
		[Column(Storage="_Customer", DbType="VarChar(20)")]
		[DataMember(Order=3)]
		public string Customer
		{
			get
			{
				return this._Customer;
			}
			set
			{
				if ((this._Customer != value))
				{
					this.OnCustomerChanging(value);
					this.SendPropertyChanging();
					this._Customer = value;
					this.SendPropertyChanged("Customer");
					this.OnCustomerChanged();
				}
			}
		}
		
		[Column(Storage="_Description", DbType="VarChar(1000)")]
		[DataMember(Order=4)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_Explanation", DbType="VarChar(1000)")]
		[DataMember(Order=5)]
		public string Explanation
		{
			get
			{
				return this._Explanation;
			}
			set
			{
				if ((this._Explanation != value))
				{
					this.OnExplanationChanging(value);
					this.SendPropertyChanging();
					this._Explanation = value;
					this.SendPropertyChanged("Explanation");
					this.OnExplanationChanged();
				}
			}
		}
		
		[Association(Name="PaymentTerm_PaymentTermsDetail", Storage="_PaymentTerm", ThisKey="PaymentTermsOID", OtherKey="OID", IsForeignKey=true, DeleteRule="CASCADE")]
		public PaymentTerm PaymentTerm
		{
			get
			{
				return this._PaymentTerm.Entity;
			}
			set
			{
				PaymentTerm previousValue = this._PaymentTerm.Entity;
				if (((previousValue != value) 
							|| (this._PaymentTerm.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PaymentTerm.Entity = null;
						previousValue.PaymentTermsDetails.Remove(this);
					}
					this._PaymentTerm.Entity = value;
					if ((value != null))
					{
						value.PaymentTermsDetails.Add(this);
						this._PaymentTermsOID = value.OID;
					}
					else
					{
						this._PaymentTermsOID = default(Nullable<long>);
					}
					this.SendPropertyChanged("PaymentTerm");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._PaymentTerm = default(EntityRef<PaymentTerm>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[Table(Name="dbo.LWPM_CustomerProfile")]
	[DataContract()]
	public partial class LWPM_CustomerProfile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SEQ;
		
		private string _SeqNo;
		
		private string _CUST;
		
		private string _LST2;
		
		private string _TPLANT;
		
		private string _PMTH;
		
		private string _LST2D;
		
		private System.Nullable<float> _FRST;
		
		private string _EXFWK;
		
		private string _EXFTM;
		
		private System.Nullable<float> _EXFDAY;
		
		private System.Nullable<float> _LSTR;
		
		private System.Nullable<float> _BZJS;
		
		private string _CJSWK;
		
		private string _CJSSJ;
		
		private string _REMK;
		
		private string _AEXFWK;
		
		private string _AEXFTM;
		
		private string _ACJSWK;
		
		private string _ACJSSJ;
		
		private string _LPORT;
		
		private string _ALPORT;
		
		private string _FCUST;
		
		private string _PGRP;
		
		private string _AGT;
		
		private string _ADDR;
		
		private string _PORTL;
		
		private string _LMTH;
		
		private string _SDUE;
		
		private string _IRATIO;
		
		private System.Nullable<float> _TTIME;
		
		private System.Nullable<float> _ITIME;
		
		private System.Nullable<float> _ATTIME;
		
		private string _ETD;
		
		private string _AETD;
		
		private string _GRP;
		
		private System.Nullable<float> _YSZQ;
		
		private System.Nullable<int> _RQTY;
		
		private System.Nullable<float> _BZNY;
		
		private System.Nullable<bool> _ACT;
		
		private System.Nullable<int> _RLINE;
		
		private System.Nullable<int> _RQTY1;
		
		private string _CGRP;
		
		private System.Nullable<float> _YSZQ1;
		
		private System.Nullable<float> _ORDDAY;
		
		private System.Nullable<float> _PSP1;
		
		private System.Nullable<float> _PSP2;
		
		private System.Nullable<float> _MPUR1;
		
		private System.Nullable<float> _MPUR2;
		
		private System.Nullable<float> _YSZQ01;
		
		private System.Nullable<float> _YSZQ0;
		
		private System.Nullable<float> _SP1;
		
		private System.Nullable<float> _TCT1;
		
		private System.Nullable<float> _TCT2;
		
		private System.Nullable<bool> _AB2;
		
		private System.Nullable<bool> _AB3;
		
		private System.Nullable<float> _ORDDAY_R;
		
		private System.Nullable<float> _PSP1_R;
		
		private System.Nullable<float> _PSP2_R;
		
		private System.Nullable<float> _MPUR1_R;
		
		private System.Nullable<float> _MPUR2_R;
		
		private System.Nullable<float> _FRST_R;
		
		private System.Nullable<float> _LSTR_R;
		
		private System.Nullable<float> _YSZQ_R;
		
		private System.Nullable<float> _YSZQ1_R;
		
		private System.Nullable<float> _YSZQ0_R;
		
		private System.Nullable<float> _YSZQ01_R;
		
		private System.Nullable<float> _SP1_R;
		
		private System.Nullable<float> _TCT1_R;
		
		private System.Nullable<float> _TCT2_R;
		
		private string _LPORT1;
		
		private string _EXFWK1;
		
		private string _EXFTM1;
		
		private string _CJSWK1;
		
		private string _CJSSJ1;
		
		private string _ETD1;
		
		private System.Nullable<float> _TTIME1;
		
		private string _ALPORT1;
		
		private string _AEXFWK1;
		
		private string _AEXFTM1;
		
		private string _ACJSWK1;
		
		private string _ACJSSJ1;
		
		private string _AETD1;
		
		private System.Nullable<float> _ATTIME1;
		
		private System.Nullable<int> _T3CT;
		
		private string _SEWBOND;
		
		private string _OSP;
		
		private System.Nullable<bool> _ITDT;
		
		private System.Nullable<bool> _ACDT;
		
		private System.Nullable<int> _DTDIFF;
		
		private string _DSEQ;
		
		private string _PORTL1;
		
		private string _PersonInCharge;
		
		private System.Nullable<int> _ShippedGmtsAcceptableShortShip;
		
		private System.Nullable<int> _OceanLCLOutboundHandlingLoading;
		
		private System.Nullable<int> _OceanLCLOutboundHandlingBoarding;
		
		private System.Nullable<int> _OceanFCLOutboundHandlingLoading;
		
		private System.Nullable<int> _OceanFCLOutboundHandlingBoarding;
		
		private System.Nullable<int> _AirLCLOutboundHandlingLoading;
		
		private System.Nullable<int> _AirLCLOutboundHandlingBoarding;
		
		private System.Nullable<int> _SWW;
		
		private string _PaymentTermsCode;
		
		private string _PaymentTermsDescription;
		
		private System.Nullable<int> _CT2RepeatDays;
		
		private string _PaymentTermsFromCustPO;
		
		private string _PaymentTermsFromCustPOExplanation;
		
		private string _OceanLCLExftWkFlag;
		
		private string _OceanLCLClosingWkFlag;
		
		private string _AirLCLExftWkFlag;
		
		private string _AirLCLClosingWkFlag;
		
		private string _Status;
		
		private System.Nullable<System.DateTime> _StatusDate;
		
		private string _Address;
		
		private string _RegionCode;
		
		private string _Country;
		
		private string _Tel;
		
		private string _Fax;
		
		private string _MobilePhone;
		
		private string _Email;
		
		private string _AttnPerson;
		
		private string _AgentName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSEQChanging(int value);
    partial void OnSEQChanged();
    partial void OnSeqNoChanging(string value);
    partial void OnSeqNoChanged();
    partial void OnCUSTChanging(string value);
    partial void OnCUSTChanged();
    partial void OnLST2Changing(string value);
    partial void OnLST2Changed();
    partial void OnTPLANTChanging(string value);
    partial void OnTPLANTChanged();
    partial void OnPMTHChanging(string value);
    partial void OnPMTHChanged();
    partial void OnLST2DChanging(string value);
    partial void OnLST2DChanged();
    partial void OnFRSTChanging(System.Nullable<float> value);
    partial void OnFRSTChanged();
    partial void OnEXFWKChanging(string value);
    partial void OnEXFWKChanged();
    partial void OnEXFTMChanging(string value);
    partial void OnEXFTMChanged();
    partial void OnEXFDAYChanging(System.Nullable<float> value);
    partial void OnEXFDAYChanged();
    partial void OnLSTRChanging(System.Nullable<float> value);
    partial void OnLSTRChanged();
    partial void OnBZJSChanging(System.Nullable<float> value);
    partial void OnBZJSChanged();
    partial void OnCJSWKChanging(string value);
    partial void OnCJSWKChanged();
    partial void OnCJSSJChanging(string value);
    partial void OnCJSSJChanged();
    partial void OnREMKChanging(string value);
    partial void OnREMKChanged();
    partial void OnAEXFWKChanging(string value);
    partial void OnAEXFWKChanged();
    partial void OnAEXFTMChanging(string value);
    partial void OnAEXFTMChanged();
    partial void OnACJSWKChanging(string value);
    partial void OnACJSWKChanged();
    partial void OnACJSSJChanging(string value);
    partial void OnACJSSJChanged();
    partial void OnLPORTChanging(string value);
    partial void OnLPORTChanged();
    partial void OnALPORTChanging(string value);
    partial void OnALPORTChanged();
    partial void OnFCUSTChanging(string value);
    partial void OnFCUSTChanged();
    partial void OnPGRPChanging(string value);
    partial void OnPGRPChanged();
    partial void OnAGTChanging(string value);
    partial void OnAGTChanged();
    partial void OnADDRChanging(string value);
    partial void OnADDRChanged();
    partial void OnPORTLChanging(string value);
    partial void OnPORTLChanged();
    partial void OnLMTHChanging(string value);
    partial void OnLMTHChanged();
    partial void OnSDUEChanging(string value);
    partial void OnSDUEChanged();
    partial void OnIRATIOChanging(string value);
    partial void OnIRATIOChanged();
    partial void OnTTIMEChanging(System.Nullable<float> value);
    partial void OnTTIMEChanged();
    partial void OnITIMEChanging(System.Nullable<float> value);
    partial void OnITIMEChanged();
    partial void OnATTIMEChanging(System.Nullable<float> value);
    partial void OnATTIMEChanged();
    partial void OnETDChanging(string value);
    partial void OnETDChanged();
    partial void OnAETDChanging(string value);
    partial void OnAETDChanged();
    partial void OnGRPChanging(string value);
    partial void OnGRPChanged();
    partial void OnYSZQChanging(System.Nullable<float> value);
    partial void OnYSZQChanged();
    partial void OnRQTYChanging(System.Nullable<int> value);
    partial void OnRQTYChanged();
    partial void OnBZNYChanging(System.Nullable<float> value);
    partial void OnBZNYChanged();
    partial void OnACTChanging(System.Nullable<bool> value);
    partial void OnACTChanged();
    partial void OnRLINEChanging(System.Nullable<int> value);
    partial void OnRLINEChanged();
    partial void OnRQTY1Changing(System.Nullable<int> value);
    partial void OnRQTY1Changed();
    partial void OnCGRPChanging(string value);
    partial void OnCGRPChanged();
    partial void OnYSZQ1Changing(System.Nullable<float> value);
    partial void OnYSZQ1Changed();
    partial void OnORDDAYChanging(System.Nullable<float> value);
    partial void OnORDDAYChanged();
    partial void OnPSP1Changing(System.Nullable<float> value);
    partial void OnPSP1Changed();
    partial void OnPSP2Changing(System.Nullable<float> value);
    partial void OnPSP2Changed();
    partial void OnMPUR1Changing(System.Nullable<float> value);
    partial void OnMPUR1Changed();
    partial void OnMPUR2Changing(System.Nullable<float> value);
    partial void OnMPUR2Changed();
    partial void OnYSZQ01Changing(System.Nullable<float> value);
    partial void OnYSZQ01Changed();
    partial void OnYSZQ0Changing(System.Nullable<float> value);
    partial void OnYSZQ0Changed();
    partial void OnSP1Changing(System.Nullable<float> value);
    partial void OnSP1Changed();
    partial void OnTCT1Changing(System.Nullable<float> value);
    partial void OnTCT1Changed();
    partial void OnTCT2Changing(System.Nullable<float> value);
    partial void OnTCT2Changed();
    partial void OnAB2Changing(System.Nullable<bool> value);
    partial void OnAB2Changed();
    partial void OnAB3Changing(System.Nullable<bool> value);
    partial void OnAB3Changed();
    partial void OnORDDAY_RChanging(System.Nullable<float> value);
    partial void OnORDDAY_RChanged();
    partial void OnPSP1_RChanging(System.Nullable<float> value);
    partial void OnPSP1_RChanged();
    partial void OnPSP2_RChanging(System.Nullable<float> value);
    partial void OnPSP2_RChanged();
    partial void OnMPUR1_RChanging(System.Nullable<float> value);
    partial void OnMPUR1_RChanged();
    partial void OnMPUR2_RChanging(System.Nullable<float> value);
    partial void OnMPUR2_RChanged();
    partial void OnFRST_RChanging(System.Nullable<float> value);
    partial void OnFRST_RChanged();
    partial void OnLSTR_RChanging(System.Nullable<float> value);
    partial void OnLSTR_RChanged();
    partial void OnYSZQ_RChanging(System.Nullable<float> value);
    partial void OnYSZQ_RChanged();
    partial void OnYSZQ1_RChanging(System.Nullable<float> value);
    partial void OnYSZQ1_RChanged();
    partial void OnYSZQ0_RChanging(System.Nullable<float> value);
    partial void OnYSZQ0_RChanged();
    partial void OnYSZQ01_RChanging(System.Nullable<float> value);
    partial void OnYSZQ01_RChanged();
    partial void OnSP1_RChanging(System.Nullable<float> value);
    partial void OnSP1_RChanged();
    partial void OnTCT1_RChanging(System.Nullable<float> value);
    partial void OnTCT1_RChanged();
    partial void OnTCT2_RChanging(System.Nullable<float> value);
    partial void OnTCT2_RChanged();
    partial void OnLPORT1Changing(string value);
    partial void OnLPORT1Changed();
    partial void OnEXFWK1Changing(string value);
    partial void OnEXFWK1Changed();
    partial void OnEXFTM1Changing(string value);
    partial void OnEXFTM1Changed();
    partial void OnCJSWK1Changing(string value);
    partial void OnCJSWK1Changed();
    partial void OnCJSSJ1Changing(string value);
    partial void OnCJSSJ1Changed();
    partial void OnETD1Changing(string value);
    partial void OnETD1Changed();
    partial void OnTTIME1Changing(System.Nullable<float> value);
    partial void OnTTIME1Changed();
    partial void OnALPORT1Changing(string value);
    partial void OnALPORT1Changed();
    partial void OnAEXFWK1Changing(string value);
    partial void OnAEXFWK1Changed();
    partial void OnAEXFTM1Changing(string value);
    partial void OnAEXFTM1Changed();
    partial void OnACJSWK1Changing(string value);
    partial void OnACJSWK1Changed();
    partial void OnACJSSJ1Changing(string value);
    partial void OnACJSSJ1Changed();
    partial void OnAETD1Changing(string value);
    partial void OnAETD1Changed();
    partial void OnATTIME1Changing(System.Nullable<float> value);
    partial void OnATTIME1Changed();
    partial void OnT3CTChanging(System.Nullable<int> value);
    partial void OnT3CTChanged();
    partial void OnSEWBONDChanging(string value);
    partial void OnSEWBONDChanged();
    partial void OnOSPChanging(string value);
    partial void OnOSPChanged();
    partial void OnITDTChanging(System.Nullable<bool> value);
    partial void OnITDTChanged();
    partial void OnACDTChanging(System.Nullable<bool> value);
    partial void OnACDTChanged();
    partial void OnDTDIFFChanging(System.Nullable<int> value);
    partial void OnDTDIFFChanged();
    partial void OnDSEQChanging(string value);
    partial void OnDSEQChanged();
    partial void OnPORTL1Changing(string value);
    partial void OnPORTL1Changed();
    partial void OnPersonInChargeChanging(string value);
    partial void OnPersonInChargeChanged();
    partial void OnShippedGmtsAcceptableShortShipChanging(System.Nullable<int> value);
    partial void OnShippedGmtsAcceptableShortShipChanged();
    partial void OnOceanLCLOutboundHandlingLoadingChanging(System.Nullable<int> value);
    partial void OnOceanLCLOutboundHandlingLoadingChanged();
    partial void OnOceanLCLOutboundHandlingBoardingChanging(System.Nullable<int> value);
    partial void OnOceanLCLOutboundHandlingBoardingChanged();
    partial void OnOceanFCLOutboundHandlingLoadingChanging(System.Nullable<int> value);
    partial void OnOceanFCLOutboundHandlingLoadingChanged();
    partial void OnOceanFCLOutboundHandlingBoardingChanging(System.Nullable<int> value);
    partial void OnOceanFCLOutboundHandlingBoardingChanged();
    partial void OnAirLCLOutboundHandlingLoadingChanging(System.Nullable<int> value);
    partial void OnAirLCLOutboundHandlingLoadingChanged();
    partial void OnAirLCLOutboundHandlingBoardingChanging(System.Nullable<int> value);
    partial void OnAirLCLOutboundHandlingBoardingChanged();
    partial void OnSWWChanging(System.Nullable<int> value);
    partial void OnSWWChanged();
    partial void OnPaymentTermsCodeChanging(string value);
    partial void OnPaymentTermsCodeChanged();
    partial void OnPaymentTermsDescriptionChanging(string value);
    partial void OnPaymentTermsDescriptionChanged();
    partial void OnCT2RepeatDaysChanging(System.Nullable<int> value);
    partial void OnCT2RepeatDaysChanged();
    partial void OnPaymentTermsFromCustPOChanging(string value);
    partial void OnPaymentTermsFromCustPOChanged();
    partial void OnPaymentTermsFromCustPOExplanationChanging(string value);
    partial void OnPaymentTermsFromCustPOExplanationChanged();
    partial void OnOceanLCLExftWkFlagChanging(string value);
    partial void OnOceanLCLExftWkFlagChanged();
    partial void OnOceanLCLClosingWkFlagChanging(string value);
    partial void OnOceanLCLClosingWkFlagChanged();
    partial void OnAirLCLExftWkFlagChanging(string value);
    partial void OnAirLCLExftWkFlagChanged();
    partial void OnAirLCLClosingWkFlagChanging(string value);
    partial void OnAirLCLClosingWkFlagChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnStatusDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStatusDateChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnRegionCodeChanging(string value);
    partial void OnRegionCodeChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnTelChanging(string value);
    partial void OnTelChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnMobilePhoneChanging(string value);
    partial void OnMobilePhoneChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnAttnPersonChanging(string value);
    partial void OnAttnPersonChanged();
    partial void OnAgentNameChanging(string value);
    partial void OnAgentNameChanged();
    #endregion
		
		public LWPM_CustomerProfile()
		{
			this.Initialize();
		}
		
		[Column(Storage="_SEQ", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=1)]
		public int SEQ
		{
			get
			{
				return this._SEQ;
			}
			set
			{
				if ((this._SEQ != value))
				{
					this.OnSEQChanging(value);
					this.SendPropertyChanging();
					this._SEQ = value;
					this.SendPropertyChanged("SEQ");
					this.OnSEQChanged();
				}
			}
		}
		
		[Column(Storage="_SeqNo", DbType="VarChar(10)")]
		[DataMember(Order=2)]
		public string SeqNo
		{
			get
			{
				return this._SeqNo;
			}
			set
			{
				if ((this._SeqNo != value))
				{
					this.OnSeqNoChanging(value);
					this.SendPropertyChanging();
					this._SeqNo = value;
					this.SendPropertyChanged("SeqNo");
					this.OnSeqNoChanged();
				}
			}
		}
		
		[Column(Storage="_CUST", DbType="VarChar(10)")]
		[DataMember(Order=3)]
		public string CUST
		{
			get
			{
				return this._CUST;
			}
			set
			{
				if ((this._CUST != value))
				{
					this.OnCUSTChanging(value);
					this.SendPropertyChanging();
					this._CUST = value;
					this.SendPropertyChanged("CUST");
					this.OnCUSTChanged();
				}
			}
		}
		
		[Column(Storage="_LST2", DbType="VarChar(20)")]
		[DataMember(Order=4)]
		public string LST2
		{
			get
			{
				return this._LST2;
			}
			set
			{
				if ((this._LST2 != value))
				{
					this.OnLST2Changing(value);
					this.SendPropertyChanging();
					this._LST2 = value;
					this.SendPropertyChanged("LST2");
					this.OnLST2Changed();
				}
			}
		}
		
		[Column(Storage="_TPLANT", DbType="VarChar(10)")]
		[DataMember(Order=5)]
		public string TPLANT
		{
			get
			{
				return this._TPLANT;
			}
			set
			{
				if ((this._TPLANT != value))
				{
					this.OnTPLANTChanging(value);
					this.SendPropertyChanging();
					this._TPLANT = value;
					this.SendPropertyChanged("TPLANT");
					this.OnTPLANTChanged();
				}
			}
		}
		
		[Column(Storage="_PMTH", DbType="VarChar(10)")]
		[DataMember(Order=6)]
		public string PMTH
		{
			get
			{
				return this._PMTH;
			}
			set
			{
				if ((this._PMTH != value))
				{
					this.OnPMTHChanging(value);
					this.SendPropertyChanging();
					this._PMTH = value;
					this.SendPropertyChanged("PMTH");
					this.OnPMTHChanged();
				}
			}
		}
		
		[Column(Storage="_LST2D", DbType="VarChar(150)")]
		[DataMember(Order=7)]
		public string LST2D
		{
			get
			{
				return this._LST2D;
			}
			set
			{
				if ((this._LST2D != value))
				{
					this.OnLST2DChanging(value);
					this.SendPropertyChanging();
					this._LST2D = value;
					this.SendPropertyChanged("LST2D");
					this.OnLST2DChanged();
				}
			}
		}
		
		[Column(Storage="_FRST", DbType="Real")]
		[DataMember(Order=8)]
		public System.Nullable<float> FRST
		{
			get
			{
				return this._FRST;
			}
			set
			{
				if ((this._FRST != value))
				{
					this.OnFRSTChanging(value);
					this.SendPropertyChanging();
					this._FRST = value;
					this.SendPropertyChanged("FRST");
					this.OnFRSTChanged();
				}
			}
		}
		
		[Column(Storage="_EXFWK", DbType="VarChar(10)")]
		[DataMember(Order=9)]
		public string EXFWK
		{
			get
			{
				return this._EXFWK;
			}
			set
			{
				if ((this._EXFWK != value))
				{
					this.OnEXFWKChanging(value);
					this.SendPropertyChanging();
					this._EXFWK = value;
					this.SendPropertyChanged("EXFWK");
					this.OnEXFWKChanged();
				}
			}
		}
		
		[Column(Storage="_EXFTM", DbType="VarChar(20)")]
		[DataMember(Order=10)]
		public string EXFTM
		{
			get
			{
				return this._EXFTM;
			}
			set
			{
				if ((this._EXFTM != value))
				{
					this.OnEXFTMChanging(value);
					this.SendPropertyChanging();
					this._EXFTM = value;
					this.SendPropertyChanged("EXFTM");
					this.OnEXFTMChanged();
				}
			}
		}
		
		[Column(Storage="_EXFDAY", DbType="Real")]
		[DataMember(Order=11)]
		public System.Nullable<float> EXFDAY
		{
			get
			{
				return this._EXFDAY;
			}
			set
			{
				if ((this._EXFDAY != value))
				{
					this.OnEXFDAYChanging(value);
					this.SendPropertyChanging();
					this._EXFDAY = value;
					this.SendPropertyChanged("EXFDAY");
					this.OnEXFDAYChanged();
				}
			}
		}
		
		[Column(Storage="_LSTR", DbType="Real")]
		[DataMember(Order=12)]
		public System.Nullable<float> LSTR
		{
			get
			{
				return this._LSTR;
			}
			set
			{
				if ((this._LSTR != value))
				{
					this.OnLSTRChanging(value);
					this.SendPropertyChanging();
					this._LSTR = value;
					this.SendPropertyChanged("LSTR");
					this.OnLSTRChanged();
				}
			}
		}
		
		[Column(Storage="_BZJS", DbType="Real")]
		[DataMember(Order=13)]
		public System.Nullable<float> BZJS
		{
			get
			{
				return this._BZJS;
			}
			set
			{
				if ((this._BZJS != value))
				{
					this.OnBZJSChanging(value);
					this.SendPropertyChanging();
					this._BZJS = value;
					this.SendPropertyChanged("BZJS");
					this.OnBZJSChanged();
				}
			}
		}
		
		[Column(Storage="_CJSWK", DbType="VarChar(10)")]
		[DataMember(Order=14)]
		public string CJSWK
		{
			get
			{
				return this._CJSWK;
			}
			set
			{
				if ((this._CJSWK != value))
				{
					this.OnCJSWKChanging(value);
					this.SendPropertyChanging();
					this._CJSWK = value;
					this.SendPropertyChanged("CJSWK");
					this.OnCJSWKChanged();
				}
			}
		}
		
		[Column(Storage="_CJSSJ", DbType="VarChar(20)")]
		[DataMember(Order=15)]
		public string CJSSJ
		{
			get
			{
				return this._CJSSJ;
			}
			set
			{
				if ((this._CJSSJ != value))
				{
					this.OnCJSSJChanging(value);
					this.SendPropertyChanging();
					this._CJSSJ = value;
					this.SendPropertyChanged("CJSSJ");
					this.OnCJSSJChanged();
				}
			}
		}
		
		[Column(Storage="_REMK", DbType="VarChar(10)")]
		[DataMember(Order=16)]
		public string REMK
		{
			get
			{
				return this._REMK;
			}
			set
			{
				if ((this._REMK != value))
				{
					this.OnREMKChanging(value);
					this.SendPropertyChanging();
					this._REMK = value;
					this.SendPropertyChanged("REMK");
					this.OnREMKChanged();
				}
			}
		}
		
		[Column(Storage="_AEXFWK", DbType="VarChar(10)")]
		[DataMember(Order=17)]
		public string AEXFWK
		{
			get
			{
				return this._AEXFWK;
			}
			set
			{
				if ((this._AEXFWK != value))
				{
					this.OnAEXFWKChanging(value);
					this.SendPropertyChanging();
					this._AEXFWK = value;
					this.SendPropertyChanged("AEXFWK");
					this.OnAEXFWKChanged();
				}
			}
		}
		
		[Column(Storage="_AEXFTM", DbType="VarChar(20)")]
		[DataMember(Order=18)]
		public string AEXFTM
		{
			get
			{
				return this._AEXFTM;
			}
			set
			{
				if ((this._AEXFTM != value))
				{
					this.OnAEXFTMChanging(value);
					this.SendPropertyChanging();
					this._AEXFTM = value;
					this.SendPropertyChanged("AEXFTM");
					this.OnAEXFTMChanged();
				}
			}
		}
		
		[Column(Storage="_ACJSWK", DbType="VarChar(10)")]
		[DataMember(Order=19)]
		public string ACJSWK
		{
			get
			{
				return this._ACJSWK;
			}
			set
			{
				if ((this._ACJSWK != value))
				{
					this.OnACJSWKChanging(value);
					this.SendPropertyChanging();
					this._ACJSWK = value;
					this.SendPropertyChanged("ACJSWK");
					this.OnACJSWKChanged();
				}
			}
		}
		
		[Column(Storage="_ACJSSJ", DbType="VarChar(20)")]
		[DataMember(Order=20)]
		public string ACJSSJ
		{
			get
			{
				return this._ACJSSJ;
			}
			set
			{
				if ((this._ACJSSJ != value))
				{
					this.OnACJSSJChanging(value);
					this.SendPropertyChanging();
					this._ACJSSJ = value;
					this.SendPropertyChanged("ACJSSJ");
					this.OnACJSSJChanged();
				}
			}
		}
		
		[Column(Storage="_LPORT", DbType="VarChar(20)")]
		[DataMember(Order=21)]
		public string LPORT
		{
			get
			{
				return this._LPORT;
			}
			set
			{
				if ((this._LPORT != value))
				{
					this.OnLPORTChanging(value);
					this.SendPropertyChanging();
					this._LPORT = value;
					this.SendPropertyChanged("LPORT");
					this.OnLPORTChanged();
				}
			}
		}
		
		[Column(Storage="_ALPORT", DbType="VarChar(20)")]
		[DataMember(Order=22)]
		public string ALPORT
		{
			get
			{
				return this._ALPORT;
			}
			set
			{
				if ((this._ALPORT != value))
				{
					this.OnALPORTChanging(value);
					this.SendPropertyChanging();
					this._ALPORT = value;
					this.SendPropertyChanged("ALPORT");
					this.OnALPORTChanged();
				}
			}
		}
		
		[Column(Storage="_FCUST", DbType="VarChar(200)")]
		[DataMember(Order=23)]
		public string FCUST
		{
			get
			{
				return this._FCUST;
			}
			set
			{
				if ((this._FCUST != value))
				{
					this.OnFCUSTChanging(value);
					this.SendPropertyChanging();
					this._FCUST = value;
					this.SendPropertyChanged("FCUST");
					this.OnFCUSTChanged();
				}
			}
		}
		
		[Column(Storage="_PGRP", DbType="VarChar(10)")]
		[DataMember(Order=24)]
		public string PGRP
		{
			get
			{
				return this._PGRP;
			}
			set
			{
				if ((this._PGRP != value))
				{
					this.OnPGRPChanging(value);
					this.SendPropertyChanging();
					this._PGRP = value;
					this.SendPropertyChanged("PGRP");
					this.OnPGRPChanged();
				}
			}
		}
		
		[Column(Storage="_AGT", DbType="VarChar(20)")]
		[DataMember(Order=25)]
		public string AGT
		{
			get
			{
				return this._AGT;
			}
			set
			{
				if ((this._AGT != value))
				{
					this.OnAGTChanging(value);
					this.SendPropertyChanging();
					this._AGT = value;
					this.SendPropertyChanged("AGT");
					this.OnAGTChanged();
				}
			}
		}
		
		[Column(Storage="_ADDR", DbType="VarChar(200)")]
		[DataMember(Order=26)]
		public string ADDR
		{
			get
			{
				return this._ADDR;
			}
			set
			{
				if ((this._ADDR != value))
				{
					this.OnADDRChanging(value);
					this.SendPropertyChanging();
					this._ADDR = value;
					this.SendPropertyChanged("ADDR");
					this.OnADDRChanged();
				}
			}
		}
		
		[Column(Storage="_PORTL", DbType="VarChar(10)")]
		[DataMember(Order=27)]
		public string PORTL
		{
			get
			{
				return this._PORTL;
			}
			set
			{
				if ((this._PORTL != value))
				{
					this.OnPORTLChanging(value);
					this.SendPropertyChanging();
					this._PORTL = value;
					this.SendPropertyChanged("PORTL");
					this.OnPORTLChanged();
				}
			}
		}
		
		[Column(Storage="_LMTH", DbType="VarChar(10)")]
		[DataMember(Order=28)]
		public string LMTH
		{
			get
			{
				return this._LMTH;
			}
			set
			{
				if ((this._LMTH != value))
				{
					this.OnLMTHChanging(value);
					this.SendPropertyChanging();
					this._LMTH = value;
					this.SendPropertyChanged("LMTH");
					this.OnLMTHChanged();
				}
			}
		}
		
		[Column(Storage="_SDUE", DbType="VarChar(20)")]
		[DataMember(Order=29)]
		public string SDUE
		{
			get
			{
				return this._SDUE;
			}
			set
			{
				if ((this._SDUE != value))
				{
					this.OnSDUEChanging(value);
					this.SendPropertyChanging();
					this._SDUE = value;
					this.SendPropertyChanged("SDUE");
					this.OnSDUEChanged();
				}
			}
		}
		
		[Column(Storage="_IRATIO", DbType="VarChar(10)")]
		[DataMember(Order=30)]
		public string IRATIO
		{
			get
			{
				return this._IRATIO;
			}
			set
			{
				if ((this._IRATIO != value))
				{
					this.OnIRATIOChanging(value);
					this.SendPropertyChanging();
					this._IRATIO = value;
					this.SendPropertyChanged("IRATIO");
					this.OnIRATIOChanged();
				}
			}
		}
		
		[Column(Storage="_TTIME", DbType="Real")]
		[DataMember(Order=31)]
		public System.Nullable<float> TTIME
		{
			get
			{
				return this._TTIME;
			}
			set
			{
				if ((this._TTIME != value))
				{
					this.OnTTIMEChanging(value);
					this.SendPropertyChanging();
					this._TTIME = value;
					this.SendPropertyChanged("TTIME");
					this.OnTTIMEChanged();
				}
			}
		}
		
		[Column(Storage="_ITIME", DbType="Real")]
		[DataMember(Order=32)]
		public System.Nullable<float> ITIME
		{
			get
			{
				return this._ITIME;
			}
			set
			{
				if ((this._ITIME != value))
				{
					this.OnITIMEChanging(value);
					this.SendPropertyChanging();
					this._ITIME = value;
					this.SendPropertyChanged("ITIME");
					this.OnITIMEChanged();
				}
			}
		}
		
		[Column(Storage="_ATTIME", DbType="Real")]
		[DataMember(Order=33)]
		public System.Nullable<float> ATTIME
		{
			get
			{
				return this._ATTIME;
			}
			set
			{
				if ((this._ATTIME != value))
				{
					this.OnATTIMEChanging(value);
					this.SendPropertyChanging();
					this._ATTIME = value;
					this.SendPropertyChanged("ATTIME");
					this.OnATTIMEChanged();
				}
			}
		}
		
		[Column(Storage="_ETD", DbType="VarChar(50)")]
		[DataMember(Order=34)]
		public string ETD
		{
			get
			{
				return this._ETD;
			}
			set
			{
				if ((this._ETD != value))
				{
					this.OnETDChanging(value);
					this.SendPropertyChanging();
					this._ETD = value;
					this.SendPropertyChanged("ETD");
					this.OnETDChanged();
				}
			}
		}
		
		[Column(Storage="_AETD", DbType="VarChar(150)")]
		[DataMember(Order=35)]
		public string AETD
		{
			get
			{
				return this._AETD;
			}
			set
			{
				if ((this._AETD != value))
				{
					this.OnAETDChanging(value);
					this.SendPropertyChanging();
					this._AETD = value;
					this.SendPropertyChanged("AETD");
					this.OnAETDChanged();
				}
			}
		}
		
		[Column(Storage="_GRP", DbType="VarChar(5)")]
		[DataMember(Order=36)]
		public string GRP
		{
			get
			{
				return this._GRP;
			}
			set
			{
				if ((this._GRP != value))
				{
					this.OnGRPChanging(value);
					this.SendPropertyChanging();
					this._GRP = value;
					this.SendPropertyChanged("GRP");
					this.OnGRPChanged();
				}
			}
		}
		
		[Column(Storage="_YSZQ", DbType="Real")]
		[DataMember(Order=37)]
		public System.Nullable<float> YSZQ
		{
			get
			{
				return this._YSZQ;
			}
			set
			{
				if ((this._YSZQ != value))
				{
					this.OnYSZQChanging(value);
					this.SendPropertyChanging();
					this._YSZQ = value;
					this.SendPropertyChanged("YSZQ");
					this.OnYSZQChanged();
				}
			}
		}
		
		[Column(Storage="_RQTY", DbType="Int")]
		[DataMember(Order=38)]
		public System.Nullable<int> RQTY
		{
			get
			{
				return this._RQTY;
			}
			set
			{
				if ((this._RQTY != value))
				{
					this.OnRQTYChanging(value);
					this.SendPropertyChanging();
					this._RQTY = value;
					this.SendPropertyChanged("RQTY");
					this.OnRQTYChanged();
				}
			}
		}
		
		[Column(Storage="_BZNY", DbType="Real")]
		[DataMember(Order=39)]
		public System.Nullable<float> BZNY
		{
			get
			{
				return this._BZNY;
			}
			set
			{
				if ((this._BZNY != value))
				{
					this.OnBZNYChanging(value);
					this.SendPropertyChanging();
					this._BZNY = value;
					this.SendPropertyChanged("BZNY");
					this.OnBZNYChanged();
				}
			}
		}
		
		[Column(Storage="_ACT", DbType="Bit")]
		[DataMember(Order=40)]
		public System.Nullable<bool> ACT
		{
			get
			{
				return this._ACT;
			}
			set
			{
				if ((this._ACT != value))
				{
					this.OnACTChanging(value);
					this.SendPropertyChanging();
					this._ACT = value;
					this.SendPropertyChanged("ACT");
					this.OnACTChanged();
				}
			}
		}
		
		[Column(Storage="_RLINE", DbType="Int")]
		[DataMember(Order=41)]
		public System.Nullable<int> RLINE
		{
			get
			{
				return this._RLINE;
			}
			set
			{
				if ((this._RLINE != value))
				{
					this.OnRLINEChanging(value);
					this.SendPropertyChanging();
					this._RLINE = value;
					this.SendPropertyChanged("RLINE");
					this.OnRLINEChanged();
				}
			}
		}
		
		[Column(Storage="_RQTY1", DbType="Int")]
		[DataMember(Order=42)]
		public System.Nullable<int> RQTY1
		{
			get
			{
				return this._RQTY1;
			}
			set
			{
				if ((this._RQTY1 != value))
				{
					this.OnRQTY1Changing(value);
					this.SendPropertyChanging();
					this._RQTY1 = value;
					this.SendPropertyChanged("RQTY1");
					this.OnRQTY1Changed();
				}
			}
		}
		
		[Column(Storage="_CGRP", DbType="VarChar(20)")]
		[DataMember(Order=43)]
		public string CGRP
		{
			get
			{
				return this._CGRP;
			}
			set
			{
				if ((this._CGRP != value))
				{
					this.OnCGRPChanging(value);
					this.SendPropertyChanging();
					this._CGRP = value;
					this.SendPropertyChanged("CGRP");
					this.OnCGRPChanged();
				}
			}
		}
		
		[Column(Storage="_YSZQ1", DbType="Real")]
		[DataMember(Order=44)]
		public System.Nullable<float> YSZQ1
		{
			get
			{
				return this._YSZQ1;
			}
			set
			{
				if ((this._YSZQ1 != value))
				{
					this.OnYSZQ1Changing(value);
					this.SendPropertyChanging();
					this._YSZQ1 = value;
					this.SendPropertyChanged("YSZQ1");
					this.OnYSZQ1Changed();
				}
			}
		}
		
		[Column(Storage="_ORDDAY", DbType="Real")]
		[DataMember(Order=45)]
		public System.Nullable<float> ORDDAY
		{
			get
			{
				return this._ORDDAY;
			}
			set
			{
				if ((this._ORDDAY != value))
				{
					this.OnORDDAYChanging(value);
					this.SendPropertyChanging();
					this._ORDDAY = value;
					this.SendPropertyChanged("ORDDAY");
					this.OnORDDAYChanged();
				}
			}
		}
		
		[Column(Storage="_PSP1", DbType="Real")]
		[DataMember(Order=46)]
		public System.Nullable<float> PSP1
		{
			get
			{
				return this._PSP1;
			}
			set
			{
				if ((this._PSP1 != value))
				{
					this.OnPSP1Changing(value);
					this.SendPropertyChanging();
					this._PSP1 = value;
					this.SendPropertyChanged("PSP1");
					this.OnPSP1Changed();
				}
			}
		}
		
		[Column(Storage="_PSP2", DbType="Real")]
		[DataMember(Order=47)]
		public System.Nullable<float> PSP2
		{
			get
			{
				return this._PSP2;
			}
			set
			{
				if ((this._PSP2 != value))
				{
					this.OnPSP2Changing(value);
					this.SendPropertyChanging();
					this._PSP2 = value;
					this.SendPropertyChanged("PSP2");
					this.OnPSP2Changed();
				}
			}
		}
		
		[Column(Storage="_MPUR1", DbType="Real")]
		[DataMember(Order=48)]
		public System.Nullable<float> MPUR1
		{
			get
			{
				return this._MPUR1;
			}
			set
			{
				if ((this._MPUR1 != value))
				{
					this.OnMPUR1Changing(value);
					this.SendPropertyChanging();
					this._MPUR1 = value;
					this.SendPropertyChanged("MPUR1");
					this.OnMPUR1Changed();
				}
			}
		}
		
		[Column(Storage="_MPUR2", DbType="Real")]
		[DataMember(Order=49)]
		public System.Nullable<float> MPUR2
		{
			get
			{
				return this._MPUR2;
			}
			set
			{
				if ((this._MPUR2 != value))
				{
					this.OnMPUR2Changing(value);
					this.SendPropertyChanging();
					this._MPUR2 = value;
					this.SendPropertyChanged("MPUR2");
					this.OnMPUR2Changed();
				}
			}
		}
		
		[Column(Storage="_YSZQ01", DbType="Real")]
		[DataMember(Order=50)]
		public System.Nullable<float> YSZQ01
		{
			get
			{
				return this._YSZQ01;
			}
			set
			{
				if ((this._YSZQ01 != value))
				{
					this.OnYSZQ01Changing(value);
					this.SendPropertyChanging();
					this._YSZQ01 = value;
					this.SendPropertyChanged("YSZQ01");
					this.OnYSZQ01Changed();
				}
			}
		}
		
		[Column(Storage="_YSZQ0", DbType="Real")]
		[DataMember(Order=51)]
		public System.Nullable<float> YSZQ0
		{
			get
			{
				return this._YSZQ0;
			}
			set
			{
				if ((this._YSZQ0 != value))
				{
					this.OnYSZQ0Changing(value);
					this.SendPropertyChanging();
					this._YSZQ0 = value;
					this.SendPropertyChanged("YSZQ0");
					this.OnYSZQ0Changed();
				}
			}
		}
		
		[Column(Storage="_SP1", DbType="Real")]
		[DataMember(Order=52)]
		public System.Nullable<float> SP1
		{
			get
			{
				return this._SP1;
			}
			set
			{
				if ((this._SP1 != value))
				{
					this.OnSP1Changing(value);
					this.SendPropertyChanging();
					this._SP1 = value;
					this.SendPropertyChanged("SP1");
					this.OnSP1Changed();
				}
			}
		}
		
		[Column(Storage="_TCT1", DbType="Real")]
		[DataMember(Order=53)]
		public System.Nullable<float> TCT1
		{
			get
			{
				return this._TCT1;
			}
			set
			{
				if ((this._TCT1 != value))
				{
					this.OnTCT1Changing(value);
					this.SendPropertyChanging();
					this._TCT1 = value;
					this.SendPropertyChanged("TCT1");
					this.OnTCT1Changed();
				}
			}
		}
		
		[Column(Storage="_TCT2", DbType="Real")]
		[DataMember(Order=54)]
		public System.Nullable<float> TCT2
		{
			get
			{
				return this._TCT2;
			}
			set
			{
				if ((this._TCT2 != value))
				{
					this.OnTCT2Changing(value);
					this.SendPropertyChanging();
					this._TCT2 = value;
					this.SendPropertyChanged("TCT2");
					this.OnTCT2Changed();
				}
			}
		}
		
		[Column(Storage="_AB2", DbType="Bit")]
		[DataMember(Order=55)]
		public System.Nullable<bool> AB2
		{
			get
			{
				return this._AB2;
			}
			set
			{
				if ((this._AB2 != value))
				{
					this.OnAB2Changing(value);
					this.SendPropertyChanging();
					this._AB2 = value;
					this.SendPropertyChanged("AB2");
					this.OnAB2Changed();
				}
			}
		}
		
		[Column(Storage="_AB3", DbType="Bit")]
		[DataMember(Order=56)]
		public System.Nullable<bool> AB3
		{
			get
			{
				return this._AB3;
			}
			set
			{
				if ((this._AB3 != value))
				{
					this.OnAB3Changing(value);
					this.SendPropertyChanging();
					this._AB3 = value;
					this.SendPropertyChanged("AB3");
					this.OnAB3Changed();
				}
			}
		}
		
		[Column(Storage="_ORDDAY_R", DbType="Real")]
		[DataMember(Order=57)]
		public System.Nullable<float> ORDDAY_R
		{
			get
			{
				return this._ORDDAY_R;
			}
			set
			{
				if ((this._ORDDAY_R != value))
				{
					this.OnORDDAY_RChanging(value);
					this.SendPropertyChanging();
					this._ORDDAY_R = value;
					this.SendPropertyChanged("ORDDAY_R");
					this.OnORDDAY_RChanged();
				}
			}
		}
		
		[Column(Storage="_PSP1_R", DbType="Real")]
		[DataMember(Order=58)]
		public System.Nullable<float> PSP1_R
		{
			get
			{
				return this._PSP1_R;
			}
			set
			{
				if ((this._PSP1_R != value))
				{
					this.OnPSP1_RChanging(value);
					this.SendPropertyChanging();
					this._PSP1_R = value;
					this.SendPropertyChanged("PSP1_R");
					this.OnPSP1_RChanged();
				}
			}
		}
		
		[Column(Storage="_PSP2_R", DbType="Real")]
		[DataMember(Order=59)]
		public System.Nullable<float> PSP2_R
		{
			get
			{
				return this._PSP2_R;
			}
			set
			{
				if ((this._PSP2_R != value))
				{
					this.OnPSP2_RChanging(value);
					this.SendPropertyChanging();
					this._PSP2_R = value;
					this.SendPropertyChanged("PSP2_R");
					this.OnPSP2_RChanged();
				}
			}
		}
		
		[Column(Storage="_MPUR1_R", DbType="Real")]
		[DataMember(Order=60)]
		public System.Nullable<float> MPUR1_R
		{
			get
			{
				return this._MPUR1_R;
			}
			set
			{
				if ((this._MPUR1_R != value))
				{
					this.OnMPUR1_RChanging(value);
					this.SendPropertyChanging();
					this._MPUR1_R = value;
					this.SendPropertyChanged("MPUR1_R");
					this.OnMPUR1_RChanged();
				}
			}
		}
		
		[Column(Storage="_MPUR2_R", DbType="Real")]
		[DataMember(Order=61)]
		public System.Nullable<float> MPUR2_R
		{
			get
			{
				return this._MPUR2_R;
			}
			set
			{
				if ((this._MPUR2_R != value))
				{
					this.OnMPUR2_RChanging(value);
					this.SendPropertyChanging();
					this._MPUR2_R = value;
					this.SendPropertyChanged("MPUR2_R");
					this.OnMPUR2_RChanged();
				}
			}
		}
		
		[Column(Storage="_FRST_R", DbType="Real")]
		[DataMember(Order=62)]
		public System.Nullable<float> FRST_R
		{
			get
			{
				return this._FRST_R;
			}
			set
			{
				if ((this._FRST_R != value))
				{
					this.OnFRST_RChanging(value);
					this.SendPropertyChanging();
					this._FRST_R = value;
					this.SendPropertyChanged("FRST_R");
					this.OnFRST_RChanged();
				}
			}
		}
		
		[Column(Storage="_LSTR_R", DbType="Real")]
		[DataMember(Order=63)]
		public System.Nullable<float> LSTR_R
		{
			get
			{
				return this._LSTR_R;
			}
			set
			{
				if ((this._LSTR_R != value))
				{
					this.OnLSTR_RChanging(value);
					this.SendPropertyChanging();
					this._LSTR_R = value;
					this.SendPropertyChanged("LSTR_R");
					this.OnLSTR_RChanged();
				}
			}
		}
		
		[Column(Storage="_YSZQ_R", DbType="Real")]
		[DataMember(Order=64)]
		public System.Nullable<float> YSZQ_R
		{
			get
			{
				return this._YSZQ_R;
			}
			set
			{
				if ((this._YSZQ_R != value))
				{
					this.OnYSZQ_RChanging(value);
					this.SendPropertyChanging();
					this._YSZQ_R = value;
					this.SendPropertyChanged("YSZQ_R");
					this.OnYSZQ_RChanged();
				}
			}
		}
		
		[Column(Storage="_YSZQ1_R", DbType="Real")]
		[DataMember(Order=65)]
		public System.Nullable<float> YSZQ1_R
		{
			get
			{
				return this._YSZQ1_R;
			}
			set
			{
				if ((this._YSZQ1_R != value))
				{
					this.OnYSZQ1_RChanging(value);
					this.SendPropertyChanging();
					this._YSZQ1_R = value;
					this.SendPropertyChanged("YSZQ1_R");
					this.OnYSZQ1_RChanged();
				}
			}
		}
		
		[Column(Storage="_YSZQ0_R", DbType="Real")]
		[DataMember(Order=66)]
		public System.Nullable<float> YSZQ0_R
		{
			get
			{
				return this._YSZQ0_R;
			}
			set
			{
				if ((this._YSZQ0_R != value))
				{
					this.OnYSZQ0_RChanging(value);
					this.SendPropertyChanging();
					this._YSZQ0_R = value;
					this.SendPropertyChanged("YSZQ0_R");
					this.OnYSZQ0_RChanged();
				}
			}
		}
		
		[Column(Storage="_YSZQ01_R", DbType="Real")]
		[DataMember(Order=67)]
		public System.Nullable<float> YSZQ01_R
		{
			get
			{
				return this._YSZQ01_R;
			}
			set
			{
				if ((this._YSZQ01_R != value))
				{
					this.OnYSZQ01_RChanging(value);
					this.SendPropertyChanging();
					this._YSZQ01_R = value;
					this.SendPropertyChanged("YSZQ01_R");
					this.OnYSZQ01_RChanged();
				}
			}
		}
		
		[Column(Storage="_SP1_R", DbType="Real")]
		[DataMember(Order=68)]
		public System.Nullable<float> SP1_R
		{
			get
			{
				return this._SP1_R;
			}
			set
			{
				if ((this._SP1_R != value))
				{
					this.OnSP1_RChanging(value);
					this.SendPropertyChanging();
					this._SP1_R = value;
					this.SendPropertyChanged("SP1_R");
					this.OnSP1_RChanged();
				}
			}
		}
		
		[Column(Storage="_TCT1_R", DbType="Real")]
		[DataMember(Order=69)]
		public System.Nullable<float> TCT1_R
		{
			get
			{
				return this._TCT1_R;
			}
			set
			{
				if ((this._TCT1_R != value))
				{
					this.OnTCT1_RChanging(value);
					this.SendPropertyChanging();
					this._TCT1_R = value;
					this.SendPropertyChanged("TCT1_R");
					this.OnTCT1_RChanged();
				}
			}
		}
		
		[Column(Storage="_TCT2_R", DbType="Real")]
		[DataMember(Order=70)]
		public System.Nullable<float> TCT2_R
		{
			get
			{
				return this._TCT2_R;
			}
			set
			{
				if ((this._TCT2_R != value))
				{
					this.OnTCT2_RChanging(value);
					this.SendPropertyChanging();
					this._TCT2_R = value;
					this.SendPropertyChanged("TCT2_R");
					this.OnTCT2_RChanged();
				}
			}
		}
		
		[Column(Storage="_LPORT1", DbType="VarChar(20)")]
		[DataMember(Order=71)]
		public string LPORT1
		{
			get
			{
				return this._LPORT1;
			}
			set
			{
				if ((this._LPORT1 != value))
				{
					this.OnLPORT1Changing(value);
					this.SendPropertyChanging();
					this._LPORT1 = value;
					this.SendPropertyChanged("LPORT1");
					this.OnLPORT1Changed();
				}
			}
		}
		
		[Column(Storage="_EXFWK1", DbType="VarChar(10)")]
		[DataMember(Order=72)]
		public string EXFWK1
		{
			get
			{
				return this._EXFWK1;
			}
			set
			{
				if ((this._EXFWK1 != value))
				{
					this.OnEXFWK1Changing(value);
					this.SendPropertyChanging();
					this._EXFWK1 = value;
					this.SendPropertyChanged("EXFWK1");
					this.OnEXFWK1Changed();
				}
			}
		}
		
		[Column(Storage="_EXFTM1", DbType="VarChar(20)")]
		[DataMember(Order=73)]
		public string EXFTM1
		{
			get
			{
				return this._EXFTM1;
			}
			set
			{
				if ((this._EXFTM1 != value))
				{
					this.OnEXFTM1Changing(value);
					this.SendPropertyChanging();
					this._EXFTM1 = value;
					this.SendPropertyChanged("EXFTM1");
					this.OnEXFTM1Changed();
				}
			}
		}
		
		[Column(Storage="_CJSWK1", DbType="VarChar(10)")]
		[DataMember(Order=74)]
		public string CJSWK1
		{
			get
			{
				return this._CJSWK1;
			}
			set
			{
				if ((this._CJSWK1 != value))
				{
					this.OnCJSWK1Changing(value);
					this.SendPropertyChanging();
					this._CJSWK1 = value;
					this.SendPropertyChanged("CJSWK1");
					this.OnCJSWK1Changed();
				}
			}
		}
		
		[Column(Storage="_CJSSJ1", DbType="VarChar(20)")]
		[DataMember(Order=75)]
		public string CJSSJ1
		{
			get
			{
				return this._CJSSJ1;
			}
			set
			{
				if ((this._CJSSJ1 != value))
				{
					this.OnCJSSJ1Changing(value);
					this.SendPropertyChanging();
					this._CJSSJ1 = value;
					this.SendPropertyChanged("CJSSJ1");
					this.OnCJSSJ1Changed();
				}
			}
		}
		
		[Column(Storage="_ETD1", DbType="VarChar(10)")]
		[DataMember(Order=76)]
		public string ETD1
		{
			get
			{
				return this._ETD1;
			}
			set
			{
				if ((this._ETD1 != value))
				{
					this.OnETD1Changing(value);
					this.SendPropertyChanging();
					this._ETD1 = value;
					this.SendPropertyChanged("ETD1");
					this.OnETD1Changed();
				}
			}
		}
		
		[Column(Storage="_TTIME1", DbType="Real")]
		[DataMember(Order=77)]
		public System.Nullable<float> TTIME1
		{
			get
			{
				return this._TTIME1;
			}
			set
			{
				if ((this._TTIME1 != value))
				{
					this.OnTTIME1Changing(value);
					this.SendPropertyChanging();
					this._TTIME1 = value;
					this.SendPropertyChanged("TTIME1");
					this.OnTTIME1Changed();
				}
			}
		}
		
		[Column(Storage="_ALPORT1", DbType="VarChar(20)")]
		[DataMember(Order=78)]
		public string ALPORT1
		{
			get
			{
				return this._ALPORT1;
			}
			set
			{
				if ((this._ALPORT1 != value))
				{
					this.OnALPORT1Changing(value);
					this.SendPropertyChanging();
					this._ALPORT1 = value;
					this.SendPropertyChanged("ALPORT1");
					this.OnALPORT1Changed();
				}
			}
		}
		
		[Column(Storage="_AEXFWK1", DbType="VarChar(10)")]
		[DataMember(Order=79)]
		public string AEXFWK1
		{
			get
			{
				return this._AEXFWK1;
			}
			set
			{
				if ((this._AEXFWK1 != value))
				{
					this.OnAEXFWK1Changing(value);
					this.SendPropertyChanging();
					this._AEXFWK1 = value;
					this.SendPropertyChanged("AEXFWK1");
					this.OnAEXFWK1Changed();
				}
			}
		}
		
		[Column(Storage="_AEXFTM1", DbType="VarChar(20)")]
		[DataMember(Order=80)]
		public string AEXFTM1
		{
			get
			{
				return this._AEXFTM1;
			}
			set
			{
				if ((this._AEXFTM1 != value))
				{
					this.OnAEXFTM1Changing(value);
					this.SendPropertyChanging();
					this._AEXFTM1 = value;
					this.SendPropertyChanged("AEXFTM1");
					this.OnAEXFTM1Changed();
				}
			}
		}
		
		[Column(Storage="_ACJSWK1", DbType="VarChar(10)")]
		[DataMember(Order=81)]
		public string ACJSWK1
		{
			get
			{
				return this._ACJSWK1;
			}
			set
			{
				if ((this._ACJSWK1 != value))
				{
					this.OnACJSWK1Changing(value);
					this.SendPropertyChanging();
					this._ACJSWK1 = value;
					this.SendPropertyChanged("ACJSWK1");
					this.OnACJSWK1Changed();
				}
			}
		}
		
		[Column(Storage="_ACJSSJ1", DbType="VarChar(20)")]
		[DataMember(Order=82)]
		public string ACJSSJ1
		{
			get
			{
				return this._ACJSSJ1;
			}
			set
			{
				if ((this._ACJSSJ1 != value))
				{
					this.OnACJSSJ1Changing(value);
					this.SendPropertyChanging();
					this._ACJSSJ1 = value;
					this.SendPropertyChanged("ACJSSJ1");
					this.OnACJSSJ1Changed();
				}
			}
		}
		
		[Column(Storage="_AETD1", DbType="VarChar(10)")]
		[DataMember(Order=83)]
		public string AETD1
		{
			get
			{
				return this._AETD1;
			}
			set
			{
				if ((this._AETD1 != value))
				{
					this.OnAETD1Changing(value);
					this.SendPropertyChanging();
					this._AETD1 = value;
					this.SendPropertyChanged("AETD1");
					this.OnAETD1Changed();
				}
			}
		}
		
		[Column(Storage="_ATTIME1", DbType="Real")]
		[DataMember(Order=84)]
		public System.Nullable<float> ATTIME1
		{
			get
			{
				return this._ATTIME1;
			}
			set
			{
				if ((this._ATTIME1 != value))
				{
					this.OnATTIME1Changing(value);
					this.SendPropertyChanging();
					this._ATTIME1 = value;
					this.SendPropertyChanged("ATTIME1");
					this.OnATTIME1Changed();
				}
			}
		}
		
		[Column(Storage="_T3CT", DbType="Int")]
		[DataMember(Order=85)]
		public System.Nullable<int> T3CT
		{
			get
			{
				return this._T3CT;
			}
			set
			{
				if ((this._T3CT != value))
				{
					this.OnT3CTChanging(value);
					this.SendPropertyChanging();
					this._T3CT = value;
					this.SendPropertyChanged("T3CT");
					this.OnT3CTChanged();
				}
			}
		}
		
		[Column(Storage="_SEWBOND", DbType="VarChar(20)")]
		[DataMember(Order=86)]
		public string SEWBOND
		{
			get
			{
				return this._SEWBOND;
			}
			set
			{
				if ((this._SEWBOND != value))
				{
					this.OnSEWBONDChanging(value);
					this.SendPropertyChanging();
					this._SEWBOND = value;
					this.SendPropertyChanged("SEWBOND");
					this.OnSEWBONDChanged();
				}
			}
		}
		
		[Column(Storage="_OSP", DbType="VarChar(30)")]
		[DataMember(Order=87)]
		public string OSP
		{
			get
			{
				return this._OSP;
			}
			set
			{
				if ((this._OSP != value))
				{
					this.OnOSPChanging(value);
					this.SendPropertyChanging();
					this._OSP = value;
					this.SendPropertyChanged("OSP");
					this.OnOSPChanged();
				}
			}
		}
		
		[Column(Storage="_ITDT", DbType="Bit")]
		[DataMember(Order=88)]
		public System.Nullable<bool> ITDT
		{
			get
			{
				return this._ITDT;
			}
			set
			{
				if ((this._ITDT != value))
				{
					this.OnITDTChanging(value);
					this.SendPropertyChanging();
					this._ITDT = value;
					this.SendPropertyChanged("ITDT");
					this.OnITDTChanged();
				}
			}
		}
		
		[Column(Storage="_ACDT", DbType="Bit")]
		[DataMember(Order=89)]
		public System.Nullable<bool> ACDT
		{
			get
			{
				return this._ACDT;
			}
			set
			{
				if ((this._ACDT != value))
				{
					this.OnACDTChanging(value);
					this.SendPropertyChanging();
					this._ACDT = value;
					this.SendPropertyChanged("ACDT");
					this.OnACDTChanged();
				}
			}
		}
		
		[Column(Storage="_DTDIFF", DbType="Int")]
		[DataMember(Order=90)]
		public System.Nullable<int> DTDIFF
		{
			get
			{
				return this._DTDIFF;
			}
			set
			{
				if ((this._DTDIFF != value))
				{
					this.OnDTDIFFChanging(value);
					this.SendPropertyChanging();
					this._DTDIFF = value;
					this.SendPropertyChanged("DTDIFF");
					this.OnDTDIFFChanged();
				}
			}
		}
		
		[Column(Storage="_DSEQ", DbType="NVarChar(10)")]
		[DataMember(Order=91)]
		public string DSEQ
		{
			get
			{
				return this._DSEQ;
			}
			set
			{
				if ((this._DSEQ != value))
				{
					this.OnDSEQChanging(value);
					this.SendPropertyChanging();
					this._DSEQ = value;
					this.SendPropertyChanged("DSEQ");
					this.OnDSEQChanged();
				}
			}
		}
		
		[Column(Storage="_PORTL1", DbType="VarChar(50)")]
		[DataMember(Order=92)]
		public string PORTL1
		{
			get
			{
				return this._PORTL1;
			}
			set
			{
				if ((this._PORTL1 != value))
				{
					this.OnPORTL1Changing(value);
					this.SendPropertyChanging();
					this._PORTL1 = value;
					this.SendPropertyChanged("PORTL1");
					this.OnPORTL1Changed();
				}
			}
		}
		
		[Column(Storage="_PersonInCharge", DbType="VarChar(50)")]
		[DataMember(Order=93)]
		public string PersonInCharge
		{
			get
			{
				return this._PersonInCharge;
			}
			set
			{
				if ((this._PersonInCharge != value))
				{
					this.OnPersonInChargeChanging(value);
					this.SendPropertyChanging();
					this._PersonInCharge = value;
					this.SendPropertyChanged("PersonInCharge");
					this.OnPersonInChargeChanged();
				}
			}
		}
		
		[Column(Storage="_ShippedGmtsAcceptableShortShip", DbType="Int")]
		[DataMember(Order=94)]
		public System.Nullable<int> ShippedGmtsAcceptableShortShip
		{
			get
			{
				return this._ShippedGmtsAcceptableShortShip;
			}
			set
			{
				if ((this._ShippedGmtsAcceptableShortShip != value))
				{
					this.OnShippedGmtsAcceptableShortShipChanging(value);
					this.SendPropertyChanging();
					this._ShippedGmtsAcceptableShortShip = value;
					this.SendPropertyChanged("ShippedGmtsAcceptableShortShip");
					this.OnShippedGmtsAcceptableShortShipChanged();
				}
			}
		}
		
		[Column(Storage="_OceanLCLOutboundHandlingLoading", DbType="Int")]
		[DataMember(Order=95)]
		public System.Nullable<int> OceanLCLOutboundHandlingLoading
		{
			get
			{
				return this._OceanLCLOutboundHandlingLoading;
			}
			set
			{
				if ((this._OceanLCLOutboundHandlingLoading != value))
				{
					this.OnOceanLCLOutboundHandlingLoadingChanging(value);
					this.SendPropertyChanging();
					this._OceanLCLOutboundHandlingLoading = value;
					this.SendPropertyChanged("OceanLCLOutboundHandlingLoading");
					this.OnOceanLCLOutboundHandlingLoadingChanged();
				}
			}
		}
		
		[Column(Storage="_OceanLCLOutboundHandlingBoarding", DbType="Int")]
		[DataMember(Order=96)]
		public System.Nullable<int> OceanLCLOutboundHandlingBoarding
		{
			get
			{
				return this._OceanLCLOutboundHandlingBoarding;
			}
			set
			{
				if ((this._OceanLCLOutboundHandlingBoarding != value))
				{
					this.OnOceanLCLOutboundHandlingBoardingChanging(value);
					this.SendPropertyChanging();
					this._OceanLCLOutboundHandlingBoarding = value;
					this.SendPropertyChanged("OceanLCLOutboundHandlingBoarding");
					this.OnOceanLCLOutboundHandlingBoardingChanged();
				}
			}
		}
		
		[Column(Storage="_OceanFCLOutboundHandlingLoading", DbType="Int")]
		[DataMember(Order=97)]
		public System.Nullable<int> OceanFCLOutboundHandlingLoading
		{
			get
			{
				return this._OceanFCLOutboundHandlingLoading;
			}
			set
			{
				if ((this._OceanFCLOutboundHandlingLoading != value))
				{
					this.OnOceanFCLOutboundHandlingLoadingChanging(value);
					this.SendPropertyChanging();
					this._OceanFCLOutboundHandlingLoading = value;
					this.SendPropertyChanged("OceanFCLOutboundHandlingLoading");
					this.OnOceanFCLOutboundHandlingLoadingChanged();
				}
			}
		}
		
		[Column(Storage="_OceanFCLOutboundHandlingBoarding", DbType="Int")]
		[DataMember(Order=98)]
		public System.Nullable<int> OceanFCLOutboundHandlingBoarding
		{
			get
			{
				return this._OceanFCLOutboundHandlingBoarding;
			}
			set
			{
				if ((this._OceanFCLOutboundHandlingBoarding != value))
				{
					this.OnOceanFCLOutboundHandlingBoardingChanging(value);
					this.SendPropertyChanging();
					this._OceanFCLOutboundHandlingBoarding = value;
					this.SendPropertyChanged("OceanFCLOutboundHandlingBoarding");
					this.OnOceanFCLOutboundHandlingBoardingChanged();
				}
			}
		}
		
		[Column(Storage="_AirLCLOutboundHandlingLoading", DbType="Int")]
		[DataMember(Order=99)]
		public System.Nullable<int> AirLCLOutboundHandlingLoading
		{
			get
			{
				return this._AirLCLOutboundHandlingLoading;
			}
			set
			{
				if ((this._AirLCLOutboundHandlingLoading != value))
				{
					this.OnAirLCLOutboundHandlingLoadingChanging(value);
					this.SendPropertyChanging();
					this._AirLCLOutboundHandlingLoading = value;
					this.SendPropertyChanged("AirLCLOutboundHandlingLoading");
					this.OnAirLCLOutboundHandlingLoadingChanged();
				}
			}
		}
		
		[Column(Storage="_AirLCLOutboundHandlingBoarding", DbType="Int")]
		[DataMember(Order=100)]
		public System.Nullable<int> AirLCLOutboundHandlingBoarding
		{
			get
			{
				return this._AirLCLOutboundHandlingBoarding;
			}
			set
			{
				if ((this._AirLCLOutboundHandlingBoarding != value))
				{
					this.OnAirLCLOutboundHandlingBoardingChanging(value);
					this.SendPropertyChanging();
					this._AirLCLOutboundHandlingBoarding = value;
					this.SendPropertyChanged("AirLCLOutboundHandlingBoarding");
					this.OnAirLCLOutboundHandlingBoardingChanged();
				}
			}
		}
		
		[Column(Storage="_SWW", DbType="Int")]
		[DataMember(Order=101)]
		public System.Nullable<int> SWW
		{
			get
			{
				return this._SWW;
			}
			set
			{
				if ((this._SWW != value))
				{
					this.OnSWWChanging(value);
					this.SendPropertyChanging();
					this._SWW = value;
					this.SendPropertyChanged("SWW");
					this.OnSWWChanged();
				}
			}
		}
		
		[Column(Storage="_PaymentTermsCode", DbType="VarChar(50)")]
		[DataMember(Order=102)]
		public string PaymentTermsCode
		{
			get
			{
				return this._PaymentTermsCode;
			}
			set
			{
				if ((this._PaymentTermsCode != value))
				{
					this.OnPaymentTermsCodeChanging(value);
					this.SendPropertyChanging();
					this._PaymentTermsCode = value;
					this.SendPropertyChanged("PaymentTermsCode");
					this.OnPaymentTermsCodeChanged();
				}
			}
		}
		
		[Column(Storage="_PaymentTermsDescription", DbType="VarChar(500)")]
		[DataMember(Order=103)]
		public string PaymentTermsDescription
		{
			get
			{
				return this._PaymentTermsDescription;
			}
			set
			{
				if ((this._PaymentTermsDescription != value))
				{
					this.OnPaymentTermsDescriptionChanging(value);
					this.SendPropertyChanging();
					this._PaymentTermsDescription = value;
					this.SendPropertyChanged("PaymentTermsDescription");
					this.OnPaymentTermsDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_CT2RepeatDays", DbType="Int")]
		[DataMember(Order=104)]
		public System.Nullable<int> CT2RepeatDays
		{
			get
			{
				return this._CT2RepeatDays;
			}
			set
			{
				if ((this._CT2RepeatDays != value))
				{
					this.OnCT2RepeatDaysChanging(value);
					this.SendPropertyChanging();
					this._CT2RepeatDays = value;
					this.SendPropertyChanged("CT2RepeatDays");
					this.OnCT2RepeatDaysChanged();
				}
			}
		}
		
		[Column(Storage="_PaymentTermsFromCustPO", DbType="VarChar(500)")]
		[DataMember(Order=105)]
		public string PaymentTermsFromCustPO
		{
			get
			{
				return this._PaymentTermsFromCustPO;
			}
			set
			{
				if ((this._PaymentTermsFromCustPO != value))
				{
					this.OnPaymentTermsFromCustPOChanging(value);
					this.SendPropertyChanging();
					this._PaymentTermsFromCustPO = value;
					this.SendPropertyChanged("PaymentTermsFromCustPO");
					this.OnPaymentTermsFromCustPOChanged();
				}
			}
		}
		
		[Column(Storage="_PaymentTermsFromCustPOExplanation", DbType="VarChar(500)")]
		[DataMember(Order=106)]
		public string PaymentTermsFromCustPOExplanation
		{
			get
			{
				return this._PaymentTermsFromCustPOExplanation;
			}
			set
			{
				if ((this._PaymentTermsFromCustPOExplanation != value))
				{
					this.OnPaymentTermsFromCustPOExplanationChanging(value);
					this.SendPropertyChanging();
					this._PaymentTermsFromCustPOExplanation = value;
					this.SendPropertyChanged("PaymentTermsFromCustPOExplanation");
					this.OnPaymentTermsFromCustPOExplanationChanged();
				}
			}
		}
		
		[Column(Storage="_OceanLCLExftWkFlag", DbType="VarChar(10)")]
		[DataMember(Order=107)]
		public string OceanLCLExftWkFlag
		{
			get
			{
				return this._OceanLCLExftWkFlag;
			}
			set
			{
				if ((this._OceanLCLExftWkFlag != value))
				{
					this.OnOceanLCLExftWkFlagChanging(value);
					this.SendPropertyChanging();
					this._OceanLCLExftWkFlag = value;
					this.SendPropertyChanged("OceanLCLExftWkFlag");
					this.OnOceanLCLExftWkFlagChanged();
				}
			}
		}
		
		[Column(Storage="_OceanLCLClosingWkFlag", DbType="VarChar(10)")]
		[DataMember(Order=108)]
		public string OceanLCLClosingWkFlag
		{
			get
			{
				return this._OceanLCLClosingWkFlag;
			}
			set
			{
				if ((this._OceanLCLClosingWkFlag != value))
				{
					this.OnOceanLCLClosingWkFlagChanging(value);
					this.SendPropertyChanging();
					this._OceanLCLClosingWkFlag = value;
					this.SendPropertyChanged("OceanLCLClosingWkFlag");
					this.OnOceanLCLClosingWkFlagChanged();
				}
			}
		}
		
		[Column(Storage="_AirLCLExftWkFlag", DbType="VarChar(10)")]
		[DataMember(Order=109)]
		public string AirLCLExftWkFlag
		{
			get
			{
				return this._AirLCLExftWkFlag;
			}
			set
			{
				if ((this._AirLCLExftWkFlag != value))
				{
					this.OnAirLCLExftWkFlagChanging(value);
					this.SendPropertyChanging();
					this._AirLCLExftWkFlag = value;
					this.SendPropertyChanged("AirLCLExftWkFlag");
					this.OnAirLCLExftWkFlagChanged();
				}
			}
		}
		
		[Column(Storage="_AirLCLClosingWkFlag", DbType="VarChar(10)")]
		[DataMember(Order=110)]
		public string AirLCLClosingWkFlag
		{
			get
			{
				return this._AirLCLClosingWkFlag;
			}
			set
			{
				if ((this._AirLCLClosingWkFlag != value))
				{
					this.OnAirLCLClosingWkFlagChanging(value);
					this.SendPropertyChanging();
					this._AirLCLClosingWkFlag = value;
					this.SendPropertyChanged("AirLCLClosingWkFlag");
					this.OnAirLCLClosingWkFlagChanged();
				}
			}
		}
		
		[Column(Storage="_Status", DbType="VarChar(100)")]
		[DataMember(Order=111)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[Column(Storage="_StatusDate", DbType="DateTime")]
		[DataMember(Order=112)]
		public System.Nullable<System.DateTime> StatusDate
		{
			get
			{
				return this._StatusDate;
			}
			set
			{
				if ((this._StatusDate != value))
				{
					this.OnStatusDateChanging(value);
					this.SendPropertyChanging();
					this._StatusDate = value;
					this.SendPropertyChanged("StatusDate");
					this.OnStatusDateChanged();
				}
			}
		}
		
		[Column(Storage="_Address", DbType="VarChar(1000)")]
		[DataMember(Order=113)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[Column(Storage="_RegionCode", DbType="VarChar(20)")]
		[DataMember(Order=114)]
		public string RegionCode
		{
			get
			{
				return this._RegionCode;
			}
			set
			{
				if ((this._RegionCode != value))
				{
					this.OnRegionCodeChanging(value);
					this.SendPropertyChanging();
					this._RegionCode = value;
					this.SendPropertyChanged("RegionCode");
					this.OnRegionCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Country", DbType="VarChar(20)")]
		[DataMember(Order=115)]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[Column(Storage="_Tel", DbType="VarChar(50)")]
		[DataMember(Order=116)]
		public string Tel
		{
			get
			{
				return this._Tel;
			}
			set
			{
				if ((this._Tel != value))
				{
					this.OnTelChanging(value);
					this.SendPropertyChanging();
					this._Tel = value;
					this.SendPropertyChanged("Tel");
					this.OnTelChanged();
				}
			}
		}
		
		[Column(Storage="_Fax", DbType="VarChar(50)")]
		[DataMember(Order=117)]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[Column(Storage="_MobilePhone", DbType="VarChar(50)")]
		[DataMember(Order=118)]
		public string MobilePhone
		{
			get
			{
				return this._MobilePhone;
			}
			set
			{
				if ((this._MobilePhone != value))
				{
					this.OnMobilePhoneChanging(value);
					this.SendPropertyChanging();
					this._MobilePhone = value;
					this.SendPropertyChanged("MobilePhone");
					this.OnMobilePhoneChanged();
				}
			}
		}
		
		[Column(Storage="_Email", DbType="VarChar(50)")]
		[DataMember(Order=119)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[Column(Storage="_AttnPerson", DbType="VarChar(100)")]
		[DataMember(Order=120)]
		public string AttnPerson
		{
			get
			{
				return this._AttnPerson;
			}
			set
			{
				if ((this._AttnPerson != value))
				{
					this.OnAttnPersonChanging(value);
					this.SendPropertyChanging();
					this._AttnPerson = value;
					this.SendPropertyChanged("AttnPerson");
					this.OnAttnPersonChanged();
				}
			}
		}
		
		[Column(Storage="_AgentName", DbType="VarChar(500)")]
		[DataMember(Order=121)]
		public string AgentName
		{
			get
			{
				return this._AgentName;
			}
			set
			{
				if ((this._AgentName != value))
				{
					this.OnAgentNameChanging(value);
					this.SendPropertyChanging();
					this._AgentName = value;
					this.SendPropertyChanged("AgentName");
					this.OnAgentNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
}
#pragma warning restore 1591
