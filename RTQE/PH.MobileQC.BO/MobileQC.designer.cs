#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.5466
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace PH.MobileQC.BO
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="PH.MobileQC")]
	public partial class MobileQCDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertQC_AlertMessage(QC_AlertMessage instance);
    partial void UpdateQC_AlertMessage(QC_AlertMessage instance);
    partial void DeleteQC_AlertMessage(QC_AlertMessage instance);
    partial void InsertQC_AlertEmail(QC_AlertEmail instance);
    partial void UpdateQC_AlertEmail(QC_AlertEmail instance);
    partial void DeleteQC_AlertEmail(QC_AlertEmail instance);
    partial void InsertQC_TaskSchemaBlackWhiteProcessInfo(QC_TaskSchemaBlackWhiteProcessInfo instance);
    partial void UpdateQC_TaskSchemaBlackWhiteProcessInfo(QC_TaskSchemaBlackWhiteProcessInfo instance);
    partial void DeleteQC_TaskSchemaBlackWhiteProcessInfo(QC_TaskSchemaBlackWhiteProcessInfo instance);
    partial void InsertQC_TaskSchemaHeader(QC_TaskSchemaHeader instance);
    partial void UpdateQC_TaskSchemaHeader(QC_TaskSchemaHeader instance);
    partial void DeleteQC_TaskSchemaHeader(QC_TaskSchemaHeader instance);
    partial void InsertQC_TaskSchemaDetail(QC_TaskSchemaDetail instance);
    partial void UpdateQC_TaskSchemaDetail(QC_TaskSchemaDetail instance);
    partial void DeleteQC_TaskSchemaDetail(QC_TaskSchemaDetail instance);
    partial void InsertTraceInfo(TraceInfo instance);
    partial void UpdateTraceInfo(TraceInfo instance);
    partial void DeleteTraceInfo(TraceInfo instance);
    partial void InsertQC_QCRole(QC_QCRole instance);
    partial void UpdateQC_QCRole(QC_QCRole instance);
    partial void DeleteQC_QCRole(QC_QCRole instance);
    partial void InsertQC_RoleUser(QC_RoleUser instance);
    partial void UpdateQC_RoleUser(QC_RoleUser instance);
    partial void DeleteQC_RoleUser(QC_RoleUser instance);
    partial void InsertQC_AppRightInfo(QC_AppRightInfo instance);
    partial void UpdateQC_AppRightInfo(QC_AppRightInfo instance);
    partial void DeleteQC_AppRightInfo(QC_AppRightInfo instance);
    partial void InsertQC_AppInfo(QC_AppInfo instance);
    partial void UpdateQC_AppInfo(QC_AppInfo instance);
    partial void DeleteQC_AppInfo(QC_AppInfo instance);
    partial void InsertQC_AppActivityInfo(QC_AppActivityInfo instance);
    partial void UpdateQC_AppActivityInfo(QC_AppActivityInfo instance);
    partial void DeleteQC_AppActivityInfo(QC_AppActivityInfo instance);
    partial void InsertQC_QCUser(QC_QCUser instance);
    partial void UpdateQC_QCUser(QC_QCUser instance);
    partial void DeleteQC_QCUser(QC_QCUser instance);
    partial void InsertQC_Detail_Detail(QC_Detail_Detail instance);
    partial void UpdateQC_Detail_Detail(QC_Detail_Detail instance);
    partial void DeleteQC_Detail_Detail(QC_Detail_Detail instance);
    partial void InsertQC_FirstPassRatioTarget(QC_FirstPassRatioTarget instance);
    partial void UpdateQC_FirstPassRatioTarget(QC_FirstPassRatioTarget instance);
    partial void DeleteQC_FirstPassRatioTarget(QC_FirstPassRatioTarget instance);
    partial void InsertQC_ProductTypeInfo(QC_ProductTypeInfo instance);
    partial void UpdateQC_ProductTypeInfo(QC_ProductTypeInfo instance);
    partial void DeleteQC_ProductTypeInfo(QC_ProductTypeInfo instance);
    partial void InsertQC_ProductType_CommonDefect(QC_ProductType_CommonDefect instance);
    partial void UpdateQC_ProductType_CommonDefect(QC_ProductType_CommonDefect instance);
    partial void DeleteQC_ProductType_CommonDefect(QC_ProductType_CommonDefect instance);
    partial void InsertQC_ProductType_CommonPosition(QC_ProductType_CommonPosition instance);
    partial void UpdateQC_ProductType_CommonPosition(QC_ProductType_CommonPosition instance);
    partial void DeleteQC_ProductType_CommonPosition(QC_ProductType_CommonPosition instance);
    partial void InsertQC_ImproveActionPlan(QC_ImproveActionPlan instance);
    partial void UpdateQC_ImproveActionPlan(QC_ImproveActionPlan instance);
    partial void DeleteQC_ImproveActionPlan(QC_ImproveActionPlan instance);
    partial void InsertQC_Detail_Final(QC_Detail_Final instance);
    partial void UpdateQC_Detail_Final(QC_Detail_Final instance);
    partial void DeleteQC_Detail_Final(QC_Detail_Final instance);
    partial void InsertQC_Detail_Detail_Final(QC_Detail_Detail_Final instance);
    partial void UpdateQC_Detail_Detail_Final(QC_Detail_Detail_Final instance);
    partial void DeleteQC_Detail_Detail_Final(QC_Detail_Detail_Final instance);
    partial void InsertQC_Master_Final(QC_Master_Final instance);
    partial void UpdateQC_Master_Final(QC_Master_Final instance);
    partial void DeleteQC_Master_Final(QC_Master_Final instance);
    partial void InsertQC_Defect(QC_Defect instance);
    partial void UpdateQC_Defect(QC_Defect instance);
    partial void DeleteQC_Defect(QC_Defect instance);
    partial void InsertFirstPass_Detail(FirstPass_Detail instance);
    partial void UpdateFirstPass_Detail(FirstPass_Detail instance);
    partial void DeleteFirstPass_Detail(FirstPass_Detail instance);
    partial void InsertFirstPass_Header(FirstPass_Header instance);
    partial void UpdateFirstPass_Header(FirstPass_Header instance);
    partial void DeleteFirstPass_Header(FirstPass_Header instance);
    partial void InsertFirstPass_AlertLogHeader(FirstPass_AlertLogHeader instance);
    partial void UpdateFirstPass_AlertLogHeader(FirstPass_AlertLogHeader instance);
    partial void DeleteFirstPass_AlertLogHeader(FirstPass_AlertLogHeader instance);
    partial void InsertFirstPass_AlertLogDetail(FirstPass_AlertLogDetail instance);
    partial void UpdateFirstPass_AlertLogDetail(FirstPass_AlertLogDetail instance);
    partial void DeleteFirstPass_AlertLogDetail(FirstPass_AlertLogDetail instance);
    partial void InsertFirstPass_AlertLogCategory(FirstPass_AlertLogCategory instance);
    partial void UpdateFirstPass_AlertLogCategory(FirstPass_AlertLogCategory instance);
    partial void DeleteFirstPass_AlertLogCategory(FirstPass_AlertLogCategory instance);
    partial void InsertQC_Detail(QC_Detail instance);
    partial void UpdateQC_Detail(QC_Detail instance);
    partial void DeleteQC_Detail(QC_Detail instance);
    partial void InsertQC_Master(QC_Master instance);
    partial void UpdateQC_Master(QC_Master instance);
    partial void DeleteQC_Master(QC_Master instance);
    partial void InsertWorkforceFPYTarget(WorkforceFPYTarget instance);
    partial void UpdateWorkforceFPYTarget(WorkforceFPYTarget instance);
    partial void DeleteWorkforceFPYTarget(WorkforceFPYTarget instance);
    partial void InsertQC_Detail_SizeAudit(QC_Detail_SizeAudit instance);
    partial void UpdateQC_Detail_SizeAudit(QC_Detail_SizeAudit instance);
    partial void DeleteQC_Detail_SizeAudit(QC_Detail_SizeAudit instance);
    partial void InsertQC_Detail_SizeAudit_Final(QC_Detail_SizeAudit_Final instance);
    partial void UpdateQC_Detail_SizeAudit_Final(QC_Detail_SizeAudit_Final instance);
    partial void DeleteQC_Detail_SizeAudit_Final(QC_Detail_SizeAudit_Final instance);
    partial void InsertCustQCDetail(CustQCDetail instance);
    partial void UpdateCustQCDetail(CustQCDetail instance);
    partial void DeleteCustQCDetail(CustQCDetail instance);
    partial void InsertCustQCDetail_Interim(CustQCDetail_Interim instance);
    partial void UpdateCustQCDetail_Interim(CustQCDetail_Interim instance);
    partial void DeleteCustQCDetail_Interim(CustQCDetail_Interim instance);
    partial void InsertQC_AQLLevel(QC_AQLLevel instance);
    partial void UpdateQC_AQLLevel(QC_AQLLevel instance);
    partial void DeleteQC_AQLLevel(QC_AQLLevel instance);
    partial void InsertCustQCMaster_Interim(CustQCMaster_Interim instance);
    partial void UpdateCustQCMaster_Interim(CustQCMaster_Interim instance);
    partial void DeleteCustQCMaster_Interim(CustQCMaster_Interim instance);
    partial void InsertQC_ExamPlanDetail(QC_ExamPlanDetail instance);
    partial void UpdateQC_ExamPlanDetail(QC_ExamPlanDetail instance);
    partial void DeleteQC_ExamPlanDetail(QC_ExamPlanDetail instance);
    partial void InsertFinanceExportData(FinanceExportData instance);
    partial void UpdateFinanceExportData(FinanceExportData instance);
    partial void DeleteFinanceExportData(FinanceExportData instance);
    partial void InsertQC_AuditQtyRange(QC_AuditQtyRange instance);
    partial void UpdateQC_AuditQtyRange(QC_AuditQtyRange instance);
    partial void DeleteQC_AuditQtyRange(QC_AuditQtyRange instance);
    partial void InsertFullInspectionHeader(FullInspectionHeader instance);
    partial void UpdateFullInspectionHeader(FullInspectionHeader instance);
    partial void DeleteFullInspectionHeader(FullInspectionHeader instance);
    partial void InsertFullInspectionDetail(FullInspectionDetail instance);
    partial void UpdateFullInspectionDetail(FullInspectionDetail instance);
    partial void DeleteFullInspectionDetail(FullInspectionDetail instance);
    partial void InsertFourDefectCode(FourDefectCode instance);
    partial void UpdateFourDefectCode(FourDefectCode instance);
    partial void DeleteFourDefectCode(FourDefectCode instance);
    partial void InsertCustQCMaster(CustQCMaster instance);
    partial void UpdateCustQCMaster(CustQCMaster instance);
    partial void DeleteCustQCMaster(CustQCMaster instance);
    partial void InsertQC_ExamPlanHeader(QC_ExamPlanHeader instance);
    partial void UpdateQC_ExamPlanHeader(QC_ExamPlanHeader instance);
    partial void DeleteQC_ExamPlanHeader(QC_ExamPlanHeader instance);
    partial void InsertAQLAuditor(AQLAuditor instance);
    partial void UpdateAQLAuditor(AQLAuditor instance);
    partial void DeleteAQLAuditor(AQLAuditor instance);
    partial void InsertFinalAuditPlanList(FinalAuditPlanList instance);
    partial void UpdateFinalAuditPlanList(FinalAuditPlanList instance);
    partial void DeleteFinalAuditPlanList(FinalAuditPlanList instance);
    partial void InsertQC_ReportInfo(QC_ReportInfo instance);
    partial void UpdateQC_ReportInfo(QC_ReportInfo instance);
    partial void DeleteQC_ReportInfo(QC_ReportInfo instance);
    partial void InsertAuditExamSetup(AuditExamSetup instance);
    partial void UpdateAuditExamSetup(AuditExamSetup instance);
    partial void DeleteAuditExamSetup(AuditExamSetup instance);
    #endregion
		
		public MobileQCDataContext() : 
				base(global::PH.MobileQC.BO.Properties.Settings.Default.PH_MobileQCConnectionString8, mappingSource)
		{
			OnCreated();
		}
		
		public MobileQCDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MobileQCDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MobileQCDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MobileQCDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Mobile_QC_GX> Mobile_QC_GXes
		{
			get
			{
				return this.GetTable<Mobile_QC_GX>();
			}
		}
		
		public System.Data.Linq.Table<vMobile_qc> vMobile_qcs
		{
			get
			{
				return this.GetTable<vMobile_qc>();
			}
		}
		
		public System.Data.Linq.Table<QC_AlertMessage> QC_AlertMessages
		{
			get
			{
				return this.GetTable<QC_AlertMessage>();
			}
		}
		
		public System.Data.Linq.Table<QC_AlertEmail> QC_AlertEmails
		{
			get
			{
				return this.GetTable<QC_AlertEmail>();
			}
		}
		
		public System.Data.Linq.Table<worker_Evaluate> worker_Evaluates
		{
			get
			{
				return this.GetTable<worker_Evaluate>();
			}
		}
		
		public System.Data.Linq.Table<qc_rate> qc_rates
		{
			get
			{
				return this.GetTable<qc_rate>();
			}
		}
		
		public System.Data.Linq.Table<QC_TaskSchemaBlackWhiteProcessInfo> QC_TaskSchemaBlackWhiteProcessInfos
		{
			get
			{
				return this.GetTable<QC_TaskSchemaBlackWhiteProcessInfo>();
			}
		}
		
		public System.Data.Linq.Table<QC_TaskSchemaHeader> QC_TaskSchemaHeaders
		{
			get
			{
				return this.GetTable<QC_TaskSchemaHeader>();
			}
		}
		
		public System.Data.Linq.Table<QC_TaskSchemaDetail> QC_TaskSchemaDetails
		{
			get
			{
				return this.GetTable<QC_TaskSchemaDetail>();
			}
		}
		
		public System.Data.Linq.Table<TraceInfo> TraceInfos
		{
			get
			{
				return this.GetTable<TraceInfo>();
			}
		}
		
		public System.Data.Linq.Table<QC_QCRole> QC_QCRoles
		{
			get
			{
				return this.GetTable<QC_QCRole>();
			}
		}
		
		public System.Data.Linq.Table<QC_RoleUser> QC_RoleUsers
		{
			get
			{
				return this.GetTable<QC_RoleUser>();
			}
		}
		
		public System.Data.Linq.Table<QC_AppRightInfo> QC_AppRightInfos
		{
			get
			{
				return this.GetTable<QC_AppRightInfo>();
			}
		}
		
		public System.Data.Linq.Table<QC_AppInfo> QC_AppInfos
		{
			get
			{
				return this.GetTable<QC_AppInfo>();
			}
		}
		
		public System.Data.Linq.Table<QC_AppActivityInfo> QC_AppActivityInfos
		{
			get
			{
				return this.GetTable<QC_AppActivityInfo>();
			}
		}
		
		public System.Data.Linq.Table<QC_QCUser> QC_QCUsers
		{
			get
			{
				return this.GetTable<QC_QCUser>();
			}
		}
		
		public System.Data.Linq.Table<QC_Detail_Detail> QC_Detail_Details
		{
			get
			{
				return this.GetTable<QC_Detail_Detail>();
			}
		}
		
		public System.Data.Linq.Table<QC_FirstPassRatioTarget> QC_FirstPassRatioTargets
		{
			get
			{
				return this.GetTable<QC_FirstPassRatioTarget>();
			}
		}
		
		public System.Data.Linq.Table<QC_ProductTypeInfo> QC_ProductTypeInfos
		{
			get
			{
				return this.GetTable<QC_ProductTypeInfo>();
			}
		}
		
		public System.Data.Linq.Table<QC_ProductType_CommonDefect> QC_ProductType_CommonDefects
		{
			get
			{
				return this.GetTable<QC_ProductType_CommonDefect>();
			}
		}
		
		public System.Data.Linq.Table<QC_ProductType_CommonPosition> QC_ProductType_CommonPositions
		{
			get
			{
				return this.GetTable<QC_ProductType_CommonPosition>();
			}
		}
		
		public System.Data.Linq.Table<QC_ImproveActionPlan> QC_ImproveActionPlans
		{
			get
			{
				return this.GetTable<QC_ImproveActionPlan>();
			}
		}
		
		public System.Data.Linq.Table<QC_Detail_Final> QC_Detail_Finals
		{
			get
			{
				return this.GetTable<QC_Detail_Final>();
			}
		}
		
		public System.Data.Linq.Table<QC_Detail_Detail_Final> QC_Detail_Detail_Finals
		{
			get
			{
				return this.GetTable<QC_Detail_Detail_Final>();
			}
		}
		
		public System.Data.Linq.Table<QC_Master_Final> QC_Master_Finals
		{
			get
			{
				return this.GetTable<QC_Master_Final>();
			}
		}
		
		public System.Data.Linq.Table<QC_Defect> QC_Defects
		{
			get
			{
				return this.GetTable<QC_Defect>();
			}
		}
		
		public System.Data.Linq.Table<FirstPass_Detail> FirstPass_Details
		{
			get
			{
				return this.GetTable<FirstPass_Detail>();
			}
		}
		
		public System.Data.Linq.Table<FirstPass_Header> FirstPass_Headers
		{
			get
			{
				return this.GetTable<FirstPass_Header>();
			}
		}
		
		public System.Data.Linq.Table<FirstPass_AlertLogHeader> FirstPass_AlertLogHeaders
		{
			get
			{
				return this.GetTable<FirstPass_AlertLogHeader>();
			}
		}
		
		public System.Data.Linq.Table<FirstPass_AlertLogDetail> FirstPass_AlertLogDetails
		{
			get
			{
				return this.GetTable<FirstPass_AlertLogDetail>();
			}
		}
		
		public System.Data.Linq.Table<FirstPass_AlertLogCategory> FirstPass_AlertLogCategories
		{
			get
			{
				return this.GetTable<FirstPass_AlertLogCategory>();
			}
		}
		
		public System.Data.Linq.Table<Email> Emails
		{
			get
			{
				return this.GetTable<Email>();
			}
		}
		
		public System.Data.Linq.Table<QC_Detail> QC_Details
		{
			get
			{
				return this.GetTable<QC_Detail>();
			}
		}
		
		public System.Data.Linq.Table<QC_Master> QC_Masters
		{
			get
			{
				return this.GetTable<QC_Master>();
			}
		}
		
		public System.Data.Linq.Table<WorkforceFPYTarget> WorkforceFPYTargets
		{
			get
			{
				return this.GetTable<WorkforceFPYTarget>();
			}
		}
		
		public System.Data.Linq.Table<QC_Detail_SizeAudit> QC_Detail_SizeAudits
		{
			get
			{
				return this.GetTable<QC_Detail_SizeAudit>();
			}
		}
		
		public System.Data.Linq.Table<QC_Detail_SizeAudit_Final> QC_Detail_SizeAudit_Finals
		{
			get
			{
				return this.GetTable<QC_Detail_SizeAudit_Final>();
			}
		}
		
		public System.Data.Linq.Table<CustQCDetail> CustQCDetails
		{
			get
			{
				return this.GetTable<CustQCDetail>();
			}
		}
		
		public System.Data.Linq.Table<CustQCDetail_Interim> CustQCDetail_Interims
		{
			get
			{
				return this.GetTable<CustQCDetail_Interim>();
			}
		}
		
		public System.Data.Linq.Table<QC_AQLLevel> QC_AQLLevels
		{
			get
			{
				return this.GetTable<QC_AQLLevel>();
			}
		}
		
		public System.Data.Linq.Table<CustQCMaster_Interim> CustQCMaster_Interims
		{
			get
			{
				return this.GetTable<CustQCMaster_Interim>();
			}
		}
		
		public System.Data.Linq.Table<QC_ExamPlanDetail> QC_ExamPlanDetails
		{
			get
			{
				return this.GetTable<QC_ExamPlanDetail>();
			}
		}
		
		public System.Data.Linq.Table<FinanceExportData> FinanceExportDatas
		{
			get
			{
				return this.GetTable<FinanceExportData>();
			}
		}
		
		public System.Data.Linq.Table<QC_AuditQtyRange> QC_AuditQtyRanges
		{
			get
			{
				return this.GetTable<QC_AuditQtyRange>();
			}
		}
		
		public System.Data.Linq.Table<FullInspectionHeader> FullInspectionHeaders
		{
			get
			{
				return this.GetTable<FullInspectionHeader>();
			}
		}
		
		public System.Data.Linq.Table<FullInspectionDetail> FullInspectionDetails
		{
			get
			{
				return this.GetTable<FullInspectionDetail>();
			}
		}
		
		public System.Data.Linq.Table<FourDefectCode> FourDefectCodes
		{
			get
			{
				return this.GetTable<FourDefectCode>();
			}
		}
		
		public System.Data.Linq.Table<CustQCMaster> CustQCMasters
		{
			get
			{
				return this.GetTable<CustQCMaster>();
			}
		}
		
		public System.Data.Linq.Table<QC_ExamPlanHeader> QC_ExamPlanHeaders
		{
			get
			{
				return this.GetTable<QC_ExamPlanHeader>();
			}
		}
		
		public System.Data.Linq.Table<AQLAuditor> AQLAuditors
		{
			get
			{
				return this.GetTable<AQLAuditor>();
			}
		}
		
		public System.Data.Linq.Table<FinalAuditPlanList> FinalAuditPlanLists
		{
			get
			{
				return this.GetTable<FinalAuditPlanList>();
			}
		}
		
		public System.Data.Linq.Table<QC_ReportInfo> QC_ReportInfos
		{
			get
			{
				return this.GetTable<QC_ReportInfo>();
			}
		}
		
		public System.Data.Linq.Table<AuditExamSetup> AuditExamSetups
		{
			get
			{
				return this.GetTable<AuditExamSetup>();
			}
		}
		
		[Function(Name="dbo.QC_WorkOffline")]
		public int QC_WorkOffline([Parameter(Name="Actionid", DbType="Bit")] System.Nullable<bool> actionid, [Parameter(Name="IsSucc", DbType="TinyInt")] ref System.Nullable<byte> isSucc)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), actionid, isSucc);
			isSucc = ((System.Nullable<byte>)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.sp_getmobileqcinfo")]
		public int sp_getmobileqcinfo([Parameter(DbType="VarChar(10)")] string line)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), line);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.sp_GetQcCheckReport")]
		public ISingleResult<sp_GetQcCheckReportResult> sp_GetQcCheckReport([Parameter(Name="Line", DbType="VarChar(20)")] string line, [Parameter(Name="Qnno", DbType="VarChar(20)")] string qnno, [Parameter(Name="Style", DbType="VarChar(20)")] string style)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), line, qnno, style);
			return ((ISingleResult<sp_GetQcCheckReportResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.MobileQC_QuerySize")]
		public int MobileQC_QuerySize([Parameter(Name="StyleNo", DbType="VarChar(100)")] string styleNo)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), styleNo);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.GetSize")]
		public int GetSize([Parameter(Name="Line", DbType="VarChar(8)")] string line, [Parameter(Name="Seq", DbType="Int")] System.Nullable<int> seq)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), line, seq);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.Proc_DefectSummyByDay")]
		public int Proc_DefectSummyByDay([Parameter(Name="Factory", DbType="VarChar(50)")] string factory, [Parameter(Name="LineCode", DbType="VarChar(50)")] string lineCode, [Parameter(DbType="VarChar(10)")] string datefrom, [Parameter(DbType="VarChar(10)")] string dateto, [Parameter(Name="Langid", DbType="VarChar(2)")] string langid)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), factory, lineCode, datefrom, dateto, langid);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.FN_GetFAE", IsComposable=true)]
		public string FN_GetFAE([Parameter(DbType="VarChar(20)")] string style, [Parameter(DbType="VarChar(8)")] string gxdh)
		{
			return ((string)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), style, gxdh).ReturnValue));
		}
		
		[Function(Name="dbo.sp_GetSizeAuditReport")]
		public ISingleResult<sp_GetSizeAuditReportResult> sp_GetSizeAuditReport([Parameter(Name="ReportType", DbType="Int")] System.Nullable<int> reportType, [Parameter(Name="QCTimeBegin", DbType="DateTime")] System.Nullable<System.DateTime> qCTimeBegin, [Parameter(Name="QCTimeEnd", DbType="DateTime")] System.Nullable<System.DateTime> qCTimeEnd, [Parameter(Name="Project", DbType="VarChar(20)")] string project, [Parameter(Name="WO", DbType="VarChar(20)")] string wO, [Parameter(Name="Style", DbType="VarChar(20)")] string style, [Parameter(Name="Color", DbType="VarChar(20)")] string color)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), reportType, qCTimeBegin, qCTimeEnd, project, wO, style, color);
			return ((ISingleResult<sp_GetSizeAuditReportResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.AQL")]
		public int AQL([Parameter(Name="QCTimeBegin", DbType="DateTime")] System.Nullable<System.DateTime> qCTimeBegin, [Parameter(Name="Factory", DbType="VarChar(20)")] string factory, [Parameter(Name="WO", DbType="VarChar(20)")] string wO, [Parameter(Name="Style", DbType="VarChar(20)")] string style, [Parameter(Name="Line", DbType="VarChar(20)")] string line, [Parameter(Name="ProjectNum", DbType="VarChar(20)")] string projectNum, [Parameter(Name="Color", DbType="VarChar(20)")] string color)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), qCTimeBegin, factory, wO, style, line, projectNum, color);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.sp_CustQCDetailReport")]
		public ISingleResult<sp_CustQCDetailReportResult> sp_CustQCDetailReport([Parameter(Name="QCLocation", DbType="VarChar(20)")] string qCLocation, [Parameter(Name="FromDate", DbType="DateTime")] System.Nullable<System.DateTime> fromDate, [Parameter(Name="ToDate", DbType="DateTime")] System.Nullable<System.DateTime> toDate, [Parameter(Name="ShowFooter", DbType="Bit")] System.Nullable<bool> showFooter)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), qCLocation, fromDate, toDate, showFooter);
			return ((ISingleResult<sp_CustQCDetailReportResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.sp_CustQCDetailInterimReport")]
		public ISingleResult<sp_CustQCDetailInterimReportResult> sp_CustQCDetailInterimReport([Parameter(Name="QCLocation", DbType="VarChar(20)")] string qCLocation, [Parameter(Name="FromDate", DbType="DateTime")] System.Nullable<System.DateTime> fromDate, [Parameter(Name="ToDate", DbType="DateTime")] System.Nullable<System.DateTime> toDate, [Parameter(Name="ShowFooter", DbType="Bit")] System.Nullable<bool> showFooter)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), qCLocation, fromDate, toDate, showFooter);
			return ((ISingleResult<sp_CustQCDetailInterimReportResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.sp_GetDefectPictureReport")]
		public ISingleResult<sp_GetDefectPictureReportResult> sp_GetDefectPictureReport([Parameter(Name="ReportType", DbType="Int")] System.Nullable<int> reportType, [Parameter(Name="QCTimeBegin", DbType="DateTime")] System.Nullable<System.DateTime> qCTimeBegin, [Parameter(Name="QCTimeEnd", DbType="DateTime")] System.Nullable<System.DateTime> qCTimeEnd, [Parameter(Name="Cust", DbType="VarChar(MAX)")] string cust, [Parameter(Name="Style", DbType="VarChar(MAX)")] string style, [Parameter(Name="Factory", DbType="VarChar(MAX)")] string factory, [Parameter(Name="WorkShop", DbType="VarChar(MAX)")] string workShop)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), reportType, qCTimeBegin, qCTimeEnd, cust, style, factory, workShop);
			return ((ISingleResult<sp_GetDefectPictureReportResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.fn_GetFtybyWeek", IsComposable=true)]
		public System.Nullable<int> fn_GetFtybyWeek([Parameter(Name="ExamDate", DbType="DateTime")] System.Nullable<System.DateTime> examDate)
		{
			return ((System.Nullable<int>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), examDate).ReturnValue));
		}
	}
	
	[Table(Name="dbo.Mobile_QC_GX")]
	public partial class Mobile_QC_GX
	{
		
		private string _cstyle;
		
		private string _cstyle1;
		
		private System.Nullable<int> _Gxh;
		
		private string _Gxdh;
		
		private string _Gxm;
		
		private string _Yzjb;
		
		private string _Zkcc;
		
		private string _Mx;
		
		private string _Dx;
		
		private string _Egxm;
		
		private string _Tgxm;
		
		public Mobile_QC_GX()
		{
		}
		
		[Column(Storage="_cstyle", DbType="VarChar(20)")]
		public string cstyle
		{
			get
			{
				return this._cstyle;
			}
			set
			{
				if ((this._cstyle != value))
				{
					this._cstyle = value;
				}
			}
		}
		
		[Column(Storage="_cstyle1", DbType="VarChar(20)")]
		public string cstyle1
		{
			get
			{
				return this._cstyle1;
			}
			set
			{
				if ((this._cstyle1 != value))
				{
					this._cstyle1 = value;
				}
			}
		}
		
		[Column(Storage="_Gxh", DbType="Int")]
		public System.Nullable<int> Gxh
		{
			get
			{
				return this._Gxh;
			}
			set
			{
				if ((this._Gxh != value))
				{
					this._Gxh = value;
				}
			}
		}
		
		[Column(Storage="_Gxdh", DbType="VarChar(6)")]
		public string Gxdh
		{
			get
			{
				return this._Gxdh;
			}
			set
			{
				if ((this._Gxdh != value))
				{
					this._Gxdh = value;
				}
			}
		}
		
		[Column(Storage="_Gxm", DbType="VarChar(40)")]
		public string Gxm
		{
			get
			{
				return this._Gxm;
			}
			set
			{
				if ((this._Gxm != value))
				{
					this._Gxm = value;
				}
			}
		}
		
		[Column(Storage="_Yzjb", DbType="VarChar(10)")]
		public string Yzjb
		{
			get
			{
				return this._Yzjb;
			}
			set
			{
				if ((this._Yzjb != value))
				{
					this._Yzjb = value;
				}
			}
		}
		
		[Column(Storage="_Zkcc", DbType="VarChar(6)")]
		public string Zkcc
		{
			get
			{
				return this._Zkcc;
			}
			set
			{
				if ((this._Zkcc != value))
				{
					this._Zkcc = value;
				}
			}
		}
		
		[Column(Storage="_Mx", DbType="VarChar(10)")]
		public string Mx
		{
			get
			{
				return this._Mx;
			}
			set
			{
				if ((this._Mx != value))
				{
					this._Mx = value;
				}
			}
		}
		
		[Column(Storage="_Dx", DbType="VarChar(10)")]
		public string Dx
		{
			get
			{
				return this._Dx;
			}
			set
			{
				if ((this._Dx != value))
				{
					this._Dx = value;
				}
			}
		}
		
		[Column(Storage="_Egxm", DbType="VarChar(90)")]
		public string Egxm
		{
			get
			{
				return this._Egxm;
			}
			set
			{
				if ((this._Egxm != value))
				{
					this._Egxm = value;
				}
			}
		}
		
		[Column(Storage="_Tgxm", DbType="VarChar(90)")]
		public string Tgxm
		{
			get
			{
				return this._Tgxm;
			}
			set
			{
				if ((this._Tgxm != value))
				{
					this._Tgxm = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.vMobile_qc")]
	public partial class vMobile_qc
	{
		
		private string _FCCS;
		
		private string _ARTNO;
		
		private string _PLINE;
		
		private string _J_NO;
		
		private string _CSTYLE;
		
		public vMobile_qc()
		{
		}
		
		[Column(Storage="_FCCS", DbType="VarChar(8)")]
		public string FCCS
		{
			get
			{
				return this._FCCS;
			}
			set
			{
				if ((this._FCCS != value))
				{
					this._FCCS = value;
				}
			}
		}
		
		[Column(Storage="_ARTNO", DbType="VarChar(20)")]
		public string ARTNO
		{
			get
			{
				return this._ARTNO;
			}
			set
			{
				if ((this._ARTNO != value))
				{
					this._ARTNO = value;
				}
			}
		}
		
		[Column(Storage="_PLINE", DbType="VarChar(5)")]
		public string PLINE
		{
			get
			{
				return this._PLINE;
			}
			set
			{
				if ((this._PLINE != value))
				{
					this._PLINE = value;
				}
			}
		}
		
		[Column(Storage="_J_NO", DbType="VarChar(22)")]
		public string J_NO
		{
			get
			{
				return this._J_NO;
			}
			set
			{
				if ((this._J_NO != value))
				{
					this._J_NO = value;
				}
			}
		}
		
		[Column(Storage="_CSTYLE", DbType="VarChar(35)")]
		public string CSTYLE
		{
			get
			{
				return this._CSTYLE;
			}
			set
			{
				if ((this._CSTYLE != value))
				{
					this._CSTYLE = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.QC_AlertMessage")]
	public partial class QC_AlertMessage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _Line;
		
		private string _Project;
		
		private string _Style;
		
		private string _Color;
		
		private string _OPNCode;
		
		private string _OPNName;
		
		private string _Defect;
		
		private System.DateTime _SendTime;
		
		private string _MasterID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnLineChanging(string value);
    partial void OnLineChanged();
    partial void OnProjectChanging(string value);
    partial void OnProjectChanged();
    partial void OnStyleChanging(string value);
    partial void OnStyleChanged();
    partial void OnColorChanging(string value);
    partial void OnColorChanged();
    partial void OnOPNCodeChanging(string value);
    partial void OnOPNCodeChanged();
    partial void OnOPNNameChanging(string value);
    partial void OnOPNNameChanged();
    partial void OnDefectChanging(string value);
    partial void OnDefectChanged();
    partial void OnSendTimeChanging(System.DateTime value);
    partial void OnSendTimeChanged();
    partial void OnMasterIDChanging(string value);
    partial void OnMasterIDChanged();
    #endregion
		
		public QC_AlertMessage()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_Line", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Line
		{
			get
			{
				return this._Line;
			}
			set
			{
				if ((this._Line != value))
				{
					this.OnLineChanging(value);
					this.SendPropertyChanging();
					this._Line = value;
					this.SendPropertyChanged("Line");
					this.OnLineChanged();
				}
			}
		}
		
		[Column(Storage="_Project", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Project
		{
			get
			{
				return this._Project;
			}
			set
			{
				if ((this._Project != value))
				{
					this.OnProjectChanging(value);
					this.SendPropertyChanging();
					this._Project = value;
					this.SendPropertyChanged("Project");
					this.OnProjectChanged();
				}
			}
		}
		
		[Column(Storage="_Style", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Style
		{
			get
			{
				return this._Style;
			}
			set
			{
				if ((this._Style != value))
				{
					this.OnStyleChanging(value);
					this.SendPropertyChanging();
					this._Style = value;
					this.SendPropertyChanged("Style");
					this.OnStyleChanged();
				}
			}
		}
		
		[Column(Storage="_Color", DbType="VarChar(20)")]
		public string Color
		{
			get
			{
				return this._Color;
			}
			set
			{
				if ((this._Color != value))
				{
					this.OnColorChanging(value);
					this.SendPropertyChanging();
					this._Color = value;
					this.SendPropertyChanged("Color");
					this.OnColorChanged();
				}
			}
		}
		
		[Column(Storage="_OPNCode", DbType="VarChar(8) NOT NULL", CanBeNull=false)]
		public string OPNCode
		{
			get
			{
				return this._OPNCode;
			}
			set
			{
				if ((this._OPNCode != value))
				{
					this.OnOPNCodeChanging(value);
					this.SendPropertyChanging();
					this._OPNCode = value;
					this.SendPropertyChanged("OPNCode");
					this.OnOPNCodeChanged();
				}
			}
		}
		
		[Column(Storage="_OPNName", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string OPNName
		{
			get
			{
				return this._OPNName;
			}
			set
			{
				if ((this._OPNName != value))
				{
					this.OnOPNNameChanging(value);
					this.SendPropertyChanging();
					this._OPNName = value;
					this.SendPropertyChanged("OPNName");
					this.OnOPNNameChanged();
				}
			}
		}
		
		[Column(Storage="_Defect", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Defect
		{
			get
			{
				return this._Defect;
			}
			set
			{
				if ((this._Defect != value))
				{
					this.OnDefectChanging(value);
					this.SendPropertyChanging();
					this._Defect = value;
					this.SendPropertyChanged("Defect");
					this.OnDefectChanged();
				}
			}
		}
		
		[Column(Storage="_SendTime", DbType="DateTime NOT NULL")]
		public System.DateTime SendTime
		{
			get
			{
				return this._SendTime;
			}
			set
			{
				if ((this._SendTime != value))
				{
					this.OnSendTimeChanging(value);
					this.SendPropertyChanging();
					this._SendTime = value;
					this.SendPropertyChanged("SendTime");
					this.OnSendTimeChanged();
				}
			}
		}
		
		[Column(Storage="_MasterID", DbType="varchar(40)", CanBeNull=false)]
		public string MasterID
		{
			get
			{
				return this._MasterID;
			}
			set
			{
				if ((this._MasterID != value))
				{
					this.OnMasterIDChanging(value);
					this.SendPropertyChanging();
					this._MasterID = value;
					this.SendPropertyChanged("MasterID");
					this.OnMasterIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.QC_AlertEmail")]
	public partial class QC_AlertEmail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _TO;
		
		private string _CC;
		
		private string _BCC;
		
		private string _Subject;
		
		private System.Nullable<int> _AlertSwitch;
		
		private string _Factory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnTOChanging(string value);
    partial void OnTOChanged();
    partial void OnCCChanging(string value);
    partial void OnCCChanged();
    partial void OnBCCChanging(string value);
    partial void OnBCCChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnAlertSwitchChanging(System.Nullable<int> value);
    partial void OnAlertSwitchChanged();
    partial void OnFactoryChanging(string value);
    partial void OnFactoryChanged();
    #endregion
		
		public QC_AlertEmail()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Name="[TO]", Storage="_TO", DbType="VarChar(2000)")]
		public string TO
		{
			get
			{
				return this._TO;
			}
			set
			{
				if ((this._TO != value))
				{
					this.OnTOChanging(value);
					this.SendPropertyChanging();
					this._TO = value;
					this.SendPropertyChanged("TO");
					this.OnTOChanged();
				}
			}
		}
		
		[Column(Storage="_CC", DbType="VarChar(2000)")]
		public string CC
		{
			get
			{
				return this._CC;
			}
			set
			{
				if ((this._CC != value))
				{
					this.OnCCChanging(value);
					this.SendPropertyChanging();
					this._CC = value;
					this.SendPropertyChanged("CC");
					this.OnCCChanged();
				}
			}
		}
		
		[Column(Storage="_BCC", DbType="VarChar(2000)")]
		public string BCC
		{
			get
			{
				return this._BCC;
			}
			set
			{
				if ((this._BCC != value))
				{
					this.OnBCCChanging(value);
					this.SendPropertyChanging();
					this._BCC = value;
					this.SendPropertyChanged("BCC");
					this.OnBCCChanged();
				}
			}
		}
		
		[Column(Storage="_Subject", DbType="NVarChar(2000)")]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged("Subject");
					this.OnSubjectChanged();
				}
			}
		}
		
		[Column(Storage="_AlertSwitch", DbType="Int")]
		public System.Nullable<int> AlertSwitch
		{
			get
			{
				return this._AlertSwitch;
			}
			set
			{
				if ((this._AlertSwitch != value))
				{
					this.OnAlertSwitchChanging(value);
					this.SendPropertyChanging();
					this._AlertSwitch = value;
					this.SendPropertyChanged("AlertSwitch");
					this.OnAlertSwitchChanged();
				}
			}
		}
		
		[Column(Storage="_Factory", DbType="NVarchar(50)")]
		public string Factory
		{
			get
			{
				return this._Factory;
			}
			set
			{
				if ((this._Factory != value))
				{
					this.OnFactoryChanging(value);
					this.SendPropertyChanging();
					this._Factory = value;
					this.SendPropertyChanged("Factory");
					this.OnFactoryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.worker_Evaluate")]
	public partial class worker_Evaluate
	{
		
		private string _factory;
		
		private string _workshop;
		
		private string _worker;
		
		private System.Nullable<int> _qccount;
		
		private System.Nullable<int> _defectcount;
		
		private System.Nullable<int> _LightCount;
		
		private string _PHMergeDefectCode;
		
		private System.Nullable<decimal> _pyrate;
		
		private string _workername;
		
		public worker_Evaluate()
		{
		}
		
		[Column(Storage="_factory", DbType="VarChar(20)")]
		public string factory
		{
			get
			{
				return this._factory;
			}
			set
			{
				if ((this._factory != value))
				{
					this._factory = value;
				}
			}
		}
		
		[Column(Storage="_workshop", DbType="VarChar(20)")]
		public string workshop
		{
			get
			{
				return this._workshop;
			}
			set
			{
				if ((this._workshop != value))
				{
					this._workshop = value;
				}
			}
		}
		
		[Column(Storage="_worker", DbType="VarChar(12)")]
		public string worker
		{
			get
			{
				return this._worker;
			}
			set
			{
				if ((this._worker != value))
				{
					this._worker = value;
				}
			}
		}
		
		[Column(Storage="_qccount", DbType="Int")]
		public System.Nullable<int> qccount
		{
			get
			{
				return this._qccount;
			}
			set
			{
				if ((this._qccount != value))
				{
					this._qccount = value;
				}
			}
		}
		
		[Column(Storage="_defectcount", DbType="Int")]
		public System.Nullable<int> defectcount
		{
			get
			{
				return this._defectcount;
			}
			set
			{
				if ((this._defectcount != value))
				{
					this._defectcount = value;
				}
			}
		}
		
		[Column(Storage="_LightCount", DbType="Int")]
		public System.Nullable<int> LightCount
		{
			get
			{
				return this._LightCount;
			}
			set
			{
				if ((this._LightCount != value))
				{
					this._LightCount = value;
				}
			}
		}
		
		[Column(Storage="_PHMergeDefectCode", DbType="VarChar(15)")]
		public string PHMergeDefectCode
		{
			get
			{
				return this._PHMergeDefectCode;
			}
			set
			{
				if ((this._PHMergeDefectCode != value))
				{
					this._PHMergeDefectCode = value;
				}
			}
		}
		
		[Column(Storage="_pyrate", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> pyrate
		{
			get
			{
				return this._pyrate;
			}
			set
			{
				if ((this._pyrate != value))
				{
					this._pyrate = value;
				}
			}
		}
		
		[Column(Storage="_workername", DbType="char(10)")]
		public string workername
		{
			get
			{
				return this._workername;
			}
			set
			{
				if ((this._workername != value))
				{
					this._workername = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.qc_rate")]
	public partial class qc_rate
	{
		
		private string _mark;
		
		private System.Nullable<System.DateTime> _qc_time;
		
		private string _line;
		
		private string _style;
		
		private string _worker;
		
		private string _w_procedure;
		
		private System.Nullable<int> _qccount;
		
		private System.Nullable<int> _defectcount;
		
		private System.Nullable<decimal> _rate;
		
		private string _operationname;
		
		public qc_rate()
		{
		}
		
		[Column(Storage="_mark", DbType="Char(20)")]
		public string mark
		{
			get
			{
				return this._mark;
			}
			set
			{
				if ((this._mark != value))
				{
					this._mark = value;
				}
			}
		}
		
		[Column(Storage="_qc_time", DbType="DateTime")]
		public System.Nullable<System.DateTime> qc_time
		{
			get
			{
				return this._qc_time;
			}
			set
			{
				if ((this._qc_time != value))
				{
					this._qc_time = value;
				}
			}
		}
		
		[Column(Storage="_line", DbType="VarChar(8)")]
		public string line
		{
			get
			{
				return this._line;
			}
			set
			{
				if ((this._line != value))
				{
					this._line = value;
				}
			}
		}
		
		[Column(Storage="_style", DbType="VarChar(20)")]
		public string style
		{
			get
			{
				return this._style;
			}
			set
			{
				if ((this._style != value))
				{
					this._style = value;
				}
			}
		}
		
		[Column(Storage="_worker", DbType="VarChar(12)")]
		public string worker
		{
			get
			{
				return this._worker;
			}
			set
			{
				if ((this._worker != value))
				{
					this._worker = value;
				}
			}
		}
		
		[Column(Storage="_w_procedure", DbType="VarChar(8)")]
		public string w_procedure
		{
			get
			{
				return this._w_procedure;
			}
			set
			{
				if ((this._w_procedure != value))
				{
					this._w_procedure = value;
				}
			}
		}
		
		[Column(Storage="_qccount", DbType="Int")]
		public System.Nullable<int> qccount
		{
			get
			{
				return this._qccount;
			}
			set
			{
				if ((this._qccount != value))
				{
					this._qccount = value;
				}
			}
		}
		
		[Column(Storage="_defectcount", DbType="Int")]
		public System.Nullable<int> defectcount
		{
			get
			{
				return this._defectcount;
			}
			set
			{
				if ((this._defectcount != value))
				{
					this._defectcount = value;
				}
			}
		}
		
		[Column(Storage="_rate", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> rate
		{
			get
			{
				return this._rate;
			}
			set
			{
				if ((this._rate != value))
				{
					this._rate = value;
				}
			}
		}
		
		[Column(Storage="_operationname", DbType="varchar(100)", CanBeNull=false)]
		public string operationname
		{
			get
			{
				return this._operationname;
			}
			set
			{
				if ((this._operationname != value))
				{
					this._operationname = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.QC_TaskSchemaBlackWhiteProcessInfo")]
	public partial class QC_TaskSchemaBlackWhiteProcessInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ProcessCode;
		
		private string _Flag;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProcessCodeChanging(string value);
    partial void OnProcessCodeChanged();
    partial void OnFlagChanging(string value);
    partial void OnFlagChanged();
    #endregion
		
		public QC_TaskSchemaBlackWhiteProcessInfo()
		{
			OnCreated();
		}
		
		[Column(Storage="_ProcessCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ProcessCode
		{
			get
			{
				return this._ProcessCode;
			}
			set
			{
				if ((this._ProcessCode != value))
				{
					this.OnProcessCodeChanging(value);
					this.SendPropertyChanging();
					this._ProcessCode = value;
					this.SendPropertyChanged("ProcessCode");
					this.OnProcessCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Flag", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Flag
		{
			get
			{
				return this._Flag;
			}
			set
			{
				if ((this._Flag != value))
				{
					this.OnFlagChanging(value);
					this.SendPropertyChanging();
					this._Flag = value;
					this.SendPropertyChanged("Flag");
					this.OnFlagChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.QC_TaskSchemaHeader")]
	public partial class QC_TaskSchemaHeader : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _MasterID;
		
		private string _Factory;
		
		private System.Nullable<System.DateTime> _QCActionDate;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _CreateUser;
		
		private string _Remark;
		
		private string _TaskType;
		
		private EntitySet<QC_TaskSchemaDetail> _QC_TaskSchemaDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMasterIDChanging(System.Guid value);
    partial void OnMasterIDChanged();
    partial void OnFactoryChanging(string value);
    partial void OnFactoryChanged();
    partial void OnQCActionDateChanging(System.Nullable<System.DateTime> value);
    partial void OnQCActionDateChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnCreateUserChanging(string value);
    partial void OnCreateUserChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnTaskTypeChanging(string value);
    partial void OnTaskTypeChanged();
    #endregion
		
		public QC_TaskSchemaHeader()
		{
			this._QC_TaskSchemaDetails = new EntitySet<QC_TaskSchemaDetail>(new Action<QC_TaskSchemaDetail>(this.attach_QC_TaskSchemaDetails), new Action<QC_TaskSchemaDetail>(this.detach_QC_TaskSchemaDetails));
			OnCreated();
		}
		
		[Column(Storage="_MasterID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid MasterID
		{
			get
			{
				return this._MasterID;
			}
			set
			{
				if ((this._MasterID != value))
				{
					this.OnMasterIDChanging(value);
					this.SendPropertyChanging();
					this._MasterID = value;
					this.SendPropertyChanged("MasterID");
					this.OnMasterIDChanged();
				}
			}
		}
		
		[Column(Storage="_Factory", DbType="NVarChar(50)")]
		public string Factory
		{
			get
			{
				return this._Factory;
			}
			set
			{
				if ((this._Factory != value))
				{
					this.OnFactoryChanging(value);
					this.SendPropertyChanging();
					this._Factory = value;
					this.SendPropertyChanged("Factory");
					this.OnFactoryChanged();
				}
			}
		}
		
		[Column(Storage="_QCActionDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> QCActionDate
		{
			get
			{
				return this._QCActionDate;
			}
			set
			{
				if ((this._QCActionDate != value))
				{
					this.OnQCActionDateChanging(value);
					this.SendPropertyChanging();
					this._QCActionDate = value;
					this.SendPropertyChanged("QCActionDate");
					this.OnQCActionDateChanged();
				}
			}
		}
		
		[Column(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[Column(Storage="_CreateUser", DbType="NVarChar(50)")]
		public string CreateUser
		{
			get
			{
				return this._CreateUser;
			}
			set
			{
				if ((this._CreateUser != value))
				{
					this.OnCreateUserChanging(value);
					this.SendPropertyChanging();
					this._CreateUser = value;
					this.SendPropertyChanged("CreateUser");
					this.OnCreateUserChanged();
				}
			}
		}
		
		[Column(Storage="_Remark", DbType="NVarChar(500)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[Column(Storage="_TaskType", DbType="NVarChar(50)")]
		public string TaskType
		{
			get
			{
				return this._TaskType;
			}
			set
			{
				if ((this._TaskType != value))
				{
					this.OnTaskTypeChanging(value);
					this.SendPropertyChanging();
					this._TaskType = value;
					this.SendPropertyChanged("TaskType");
					this.OnTaskTypeChanged();
				}
			}
		}
		
		[Association(Name="QC_TaskSchemaHeader_QC_TaskSchemaDetail", Storage="_QC_TaskSchemaDetails", ThisKey="MasterID", OtherKey="MasterID")]
		public EntitySet<QC_TaskSchemaDetail> QC_TaskSchemaDetails
		{
			get
			{
				return this._QC_TaskSchemaDetails;
			}
			set
			{
				this._QC_TaskSchemaDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_QC_TaskSchemaDetails(QC_TaskSchemaDetail entity)
		{
			this.SendPropertyChanging();
			entity.QC_TaskSchemaHeader = this;
		}
		
		private void detach_QC_TaskSchemaDetails(QC_TaskSchemaDetail entity)
		{
			this.SendPropertyChanging();
			entity.QC_TaskSchemaHeader = null;
		}
	}
	
	[Table(Name="dbo.QC_TaskSchemaDetail")]
	public partial class QC_TaskSchemaDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _MasterID;
		
		private System.Guid _DetailID;
		
		private string _Factory;
		
		private string _WorkShop;
		
		private string _WorkLine;
		
		private string _ProjectNO;
		
		private string _WONO;
		
		private string _RWONO;
		
		private string _ColorCode;
		
		private string _QNNO;
		
		private System.Nullable<bool> _IsAuditedAtPreDay;
		
		private System.Nullable<bool> _IsFalseAtPreDay;
		
		private string _StyleNO;
		
		private System.Nullable<int> _ProcessSeq;
		
		private string _ProcessCode;
		
		private string _ProcessName;
		
		private string _ProcessStep;
		
		private System.Nullable<bool> _IsInSchema;
		
		private System.Nullable<bool> _IsCoreProcess;
		
		private System.Nullable<int> _DefaultAuditQty;
		
		private System.Nullable<int> _TotalAuditQty;
		
		private System.Nullable<decimal> _ProcessSAH;
		
		private System.Nullable<int> _QNQty;
		
		private System.Nullable<int> _PlanQty;
		
		private System.Nullable<int> _SchemaQty;
		
		private string _CreateUser;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _AlterUser;
		
		private System.Nullable<System.DateTime> _AlterDate;
		
		private string _Remark;
		
		private EntityRef<QC_TaskSchemaHeader> _QC_TaskSchemaHeader;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMasterIDChanging(System.Guid value);
    partial void OnMasterIDChanged();
    partial void OnDetailIDChanging(System.Guid value);
    partial void OnDetailIDChanged();
    partial void OnFactoryChanging(string value);
    partial void OnFactoryChanged();
    partial void OnWorkShopChanging(string value);
    partial void OnWorkShopChanged();
    partial void OnWorkLineChanging(string value);
    partial void OnWorkLineChanged();
    partial void OnProjectNOChanging(string value);
    partial void OnProjectNOChanged();
    partial void OnWONOChanging(string value);
    partial void OnWONOChanged();
    partial void OnRWONOChanging(string value);
    partial void OnRWONOChanged();
    partial void OnColorCodeChanging(string value);
    partial void OnColorCodeChanged();
    partial void OnQNNOChanging(string value);
    partial void OnQNNOChanged();
    partial void OnIsAuditedAtPreDayChanging(System.Nullable<bool> value);
    partial void OnIsAuditedAtPreDayChanged();
    partial void OnIsFalseAtPreDayChanging(System.Nullable<bool> value);
    partial void OnIsFalseAtPreDayChanged();
    partial void OnStyleNOChanging(string value);
    partial void OnStyleNOChanged();
    partial void OnProcessSeqChanging(System.Nullable<int> value);
    partial void OnProcessSeqChanged();
    partial void OnProcessCodeChanging(string value);
    partial void OnProcessCodeChanged();
    partial void OnProcessNameChanging(string value);
    partial void OnProcessNameChanged();
    partial void OnProcessStepChanging(string value);
    partial void OnProcessStepChanged();
    partial void OnIsInSchemaChanging(System.Nullable<bool> value);
    partial void OnIsInSchemaChanged();
    partial void OnIsCoreProcessChanging(System.Nullable<bool> value);
    partial void OnIsCoreProcessChanged();
    partial void OnDefaultAuditQtyChanging(System.Nullable<int> value);
    partial void OnDefaultAuditQtyChanged();
    partial void OnTotalAuditQtyChanging(System.Nullable<int> value);
    partial void OnTotalAuditQtyChanged();
    partial void OnProcessSAHChanging(System.Nullable<decimal> value);
    partial void OnProcessSAHChanged();
    partial void OnQNQtyChanging(System.Nullable<int> value);
    partial void OnQNQtyChanged();
    partial void OnPlanQtyChanging(System.Nullable<int> value);
    partial void OnPlanQtyChanged();
    partial void OnSchemaQtyChanging(System.Nullable<int> value);
    partial void OnSchemaQtyChanged();
    partial void OnCreateUserChanging(string value);
    partial void OnCreateUserChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnAlterUserChanging(string value);
    partial void OnAlterUserChanged();
    partial void OnAlterDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAlterDateChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public QC_TaskSchemaDetail()
		{
			this._QC_TaskSchemaHeader = default(EntityRef<QC_TaskSchemaHeader>);
			OnCreated();
		}
		
		[Column(Storage="_MasterID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid MasterID
		{
			get
			{
				return this._MasterID;
			}
			set
			{
				if ((this._MasterID != value))
				{
					if (this._QC_TaskSchemaHeader.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMasterIDChanging(value);
					this.SendPropertyChanging();
					this._MasterID = value;
					this.SendPropertyChanged("MasterID");
					this.OnMasterIDChanged();
				}
			}
		}
		
		[Column(Storage="_DetailID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid DetailID
		{
			get
			{
				return this._DetailID;
			}
			set
			{
				if ((this._DetailID != value))
				{
					this.OnDetailIDChanging(value);
					this.SendPropertyChanging();
					this._DetailID = value;
					this.SendPropertyChanged("DetailID");
					this.OnDetailIDChanged();
				}
			}
		}
		
		[Column(Storage="_Factory", DbType="NVarChar(50)")]
		public string Factory
		{
			get
			{
				return this._Factory;
			}
			set
			{
				if ((this._Factory != value))
				{
					this.OnFactoryChanging(value);
					this.SendPropertyChanging();
					this._Factory = value;
					this.SendPropertyChanged("Factory");
					this.OnFactoryChanged();
				}
			}
		}
		
		[Column(Storage="_WorkShop", DbType="NVarChar(10)")]
		public string WorkShop
		{
			get
			{
				return this._WorkShop;
			}
			set
			{
				if ((this._WorkShop != value))
				{
					this.OnWorkShopChanging(value);
					this.SendPropertyChanging();
					this._WorkShop = value;
					this.SendPropertyChanged("WorkShop");
					this.OnWorkShopChanged();
				}
			}
		}
		
		[Column(Storage="_WorkLine", DbType="NVarChar(10)")]
		public string WorkLine
		{
			get
			{
				return this._WorkLine;
			}
			set
			{
				if ((this._WorkLine != value))
				{
					this.OnWorkLineChanging(value);
					this.SendPropertyChanging();
					this._WorkLine = value;
					this.SendPropertyChanged("WorkLine");
					this.OnWorkLineChanged();
				}
			}
		}
		
		[Column(Storage="_ProjectNO", DbType="NVarChar(20)")]
		public string ProjectNO
		{
			get
			{
				return this._ProjectNO;
			}
			set
			{
				if ((this._ProjectNO != value))
				{
					this.OnProjectNOChanging(value);
					this.SendPropertyChanging();
					this._ProjectNO = value;
					this.SendPropertyChanged("ProjectNO");
					this.OnProjectNOChanged();
				}
			}
		}
		
		[Column(Storage="_WONO", DbType="NVarChar(20)")]
		public string WONO
		{
			get
			{
				return this._WONO;
			}
			set
			{
				if ((this._WONO != value))
				{
					this.OnWONOChanging(value);
					this.SendPropertyChanging();
					this._WONO = value;
					this.SendPropertyChanged("WONO");
					this.OnWONOChanged();
				}
			}
		}
		
		[Column(Storage="_RWONO", DbType="NVarChar(20)")]
		public string RWONO
		{
			get
			{
				return this._RWONO;
			}
			set
			{
				if ((this._RWONO != value))
				{
					this.OnRWONOChanging(value);
					this.SendPropertyChanging();
					this._RWONO = value;
					this.SendPropertyChanged("RWONO");
					this.OnRWONOChanged();
				}
			}
		}
		
		[Column(Storage="_ColorCode", DbType="NVarChar(50)")]
		public string ColorCode
		{
			get
			{
				return this._ColorCode;
			}
			set
			{
				if ((this._ColorCode != value))
				{
					this.OnColorCodeChanging(value);
					this.SendPropertyChanging();
					this._ColorCode = value;
					this.SendPropertyChanged("ColorCode");
					this.OnColorCodeChanged();
				}
			}
		}
		
		[Column(Storage="_QNNO", DbType="NVarChar(50)")]
		public string QNNO
		{
			get
			{
				return this._QNNO;
			}
			set
			{
				if ((this._QNNO != value))
				{
					this.OnQNNOChanging(value);
					this.SendPropertyChanging();
					this._QNNO = value;
					this.SendPropertyChanged("QNNO");
					this.OnQNNOChanged();
				}
			}
		}
		
		[Column(Storage="_IsAuditedAtPreDay", DbType="Bit")]
		public System.Nullable<bool> IsAuditedAtPreDay
		{
			get
			{
				return this._IsAuditedAtPreDay;
			}
			set
			{
				if ((this._IsAuditedAtPreDay != value))
				{
					this.OnIsAuditedAtPreDayChanging(value);
					this.SendPropertyChanging();
					this._IsAuditedAtPreDay = value;
					this.SendPropertyChanged("IsAuditedAtPreDay");
					this.OnIsAuditedAtPreDayChanged();
				}
			}
		}
		
		[Column(Storage="_IsFalseAtPreDay", DbType="Bit")]
		public System.Nullable<bool> IsFalseAtPreDay
		{
			get
			{
				return this._IsFalseAtPreDay;
			}
			set
			{
				if ((this._IsFalseAtPreDay != value))
				{
					this.OnIsFalseAtPreDayChanging(value);
					this.SendPropertyChanging();
					this._IsFalseAtPreDay = value;
					this.SendPropertyChanged("IsFalseAtPreDay");
					this.OnIsFalseAtPreDayChanged();
				}
			}
		}
		
		[Column(Storage="_StyleNO", DbType="NVarChar(50)")]
		public string StyleNO
		{
			get
			{
				return this._StyleNO;
			}
			set
			{
				if ((this._StyleNO != value))
				{
					this.OnStyleNOChanging(value);
					this.SendPropertyChanging();
					this._StyleNO = value;
					this.SendPropertyChanged("StyleNO");
					this.OnStyleNOChanged();
				}
			}
		}
		
		[Column(Storage="_ProcessSeq", DbType="Int")]
		public System.Nullable<int> ProcessSeq
		{
			get
			{
				return this._ProcessSeq;
			}
			set
			{
				if ((this._ProcessSeq != value))
				{
					this.OnProcessSeqChanging(value);
					this.SendPropertyChanging();
					this._ProcessSeq = value;
					this.SendPropertyChanged("ProcessSeq");
					this.OnProcessSeqChanged();
				}
			}
		}
		
		[Column(Storage="_ProcessCode", DbType="NVarChar(50)")]
		public string ProcessCode
		{
			get
			{
				return this._ProcessCode;
			}
			set
			{
				if ((this._ProcessCode != value))
				{
					this.OnProcessCodeChanging(value);
					this.SendPropertyChanging();
					this._ProcessCode = value;
					this.SendPropertyChanged("ProcessCode");
					this.OnProcessCodeChanged();
				}
			}
		}
		
		[Column(Storage="_ProcessName", DbType="NVarChar(500)")]
		public string ProcessName
		{
			get
			{
				return this._ProcessName;
			}
			set
			{
				if ((this._ProcessName != value))
				{
					this.OnProcessNameChanging(value);
					this.SendPropertyChanging();
					this._ProcessName = value;
					this.SendPropertyChanged("ProcessName");
					this.OnProcessNameChanged();
				}
			}
		}
		
		[Column(Storage="_ProcessStep", DbType="NVarChar(5)")]
		public string ProcessStep
		{
			get
			{
				return this._ProcessStep;
			}
			set
			{
				if ((this._ProcessStep != value))
				{
					this.OnProcessStepChanging(value);
					this.SendPropertyChanging();
					this._ProcessStep = value;
					this.SendPropertyChanged("ProcessStep");
					this.OnProcessStepChanged();
				}
			}
		}
		
		[Column(Storage="_IsInSchema", DbType="Bit")]
		public System.Nullable<bool> IsInSchema
		{
			get
			{
				return this._IsInSchema;
			}
			set
			{
				if ((this._IsInSchema != value))
				{
					this.OnIsInSchemaChanging(value);
					this.SendPropertyChanging();
					this._IsInSchema = value;
					this.SendPropertyChanged("IsInSchema");
					this.OnIsInSchemaChanged();
				}
			}
		}
		
		[Column(Storage="_IsCoreProcess", DbType="Bit")]
		public System.Nullable<bool> IsCoreProcess
		{
			get
			{
				return this._IsCoreProcess;
			}
			set
			{
				if ((this._IsCoreProcess != value))
				{
					this.OnIsCoreProcessChanging(value);
					this.SendPropertyChanging();
					this._IsCoreProcess = value;
					this.SendPropertyChanged("IsCoreProcess");
					this.OnIsCoreProcessChanged();
				}
			}
		}
		
		[Column(Storage="_DefaultAuditQty", DbType="Int")]
		public System.Nullable<int> DefaultAuditQty
		{
			get
			{
				return this._DefaultAuditQty;
			}
			set
			{
				if ((this._DefaultAuditQty != value))
				{
					this.OnDefaultAuditQtyChanging(value);
					this.SendPropertyChanging();
					this._DefaultAuditQty = value;
					this.SendPropertyChanged("DefaultAuditQty");
					this.OnDefaultAuditQtyChanged();
				}
			}
		}
		
		[Column(Storage="_TotalAuditQty", DbType="Int")]
		public System.Nullable<int> TotalAuditQty
		{
			get
			{
				return this._TotalAuditQty;
			}
			set
			{
				if ((this._TotalAuditQty != value))
				{
					this.OnTotalAuditQtyChanging(value);
					this.SendPropertyChanging();
					this._TotalAuditQty = value;
					this.SendPropertyChanged("TotalAuditQty");
					this.OnTotalAuditQtyChanged();
				}
			}
		}
		
		[Column(Storage="_ProcessSAH", DbType="Decimal(18,6)")]
		public System.Nullable<decimal> ProcessSAH
		{
			get
			{
				return this._ProcessSAH;
			}
			set
			{
				if ((this._ProcessSAH != value))
				{
					this.OnProcessSAHChanging(value);
					this.SendPropertyChanging();
					this._ProcessSAH = value;
					this.SendPropertyChanged("ProcessSAH");
					this.OnProcessSAHChanged();
				}
			}
		}
		
		[Column(Storage="_QNQty", DbType="Int")]
		public System.Nullable<int> QNQty
		{
			get
			{
				return this._QNQty;
			}
			set
			{
				if ((this._QNQty != value))
				{
					this.OnQNQtyChanging(value);
					this.SendPropertyChanging();
					this._QNQty = value;
					this.SendPropertyChanged("QNQty");
					this.OnQNQtyChanged();
				}
			}
		}
		
		[Column(Storage="_PlanQty", DbType="Int")]
		public System.Nullable<int> PlanQty
		{
			get
			{
				return this._PlanQty;
			}
			set
			{
				if ((this._PlanQty != value))
				{
					this.OnPlanQtyChanging(value);
					this.SendPropertyChanging();
					this._PlanQty = value;
					this.SendPropertyChanged("PlanQty");
					this.OnPlanQtyChanged();
				}
			}
		}
		
		[Column(Storage="_SchemaQty", DbType="Int")]
		public System.Nullable<int> SchemaQty
		{
			get
			{
				return this._SchemaQty;
			}
			set
			{
				if ((this._SchemaQty != value))
				{
					this.OnSchemaQtyChanging(value);
					this.SendPropertyChanging();
					this._SchemaQty = value;
					this.SendPropertyChanged("SchemaQty");
					this.OnSchemaQtyChanged();
				}
			}
		}
		
		[Column(Storage="_CreateUser", DbType="NVarChar(50)")]
		public string CreateUser
		{
			get
			{
				return this._CreateUser;
			}
			set
			{
				if ((this._CreateUser != value))
				{
					this.OnCreateUserChanging(value);
					this.SendPropertyChanging();
					this._CreateUser = value;
					this.SendPropertyChanged("CreateUser");
					this.OnCreateUserChanged();
				}
			}
		}
		
		[Column(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[Column(Storage="_AlterUser", DbType="NVarChar(50)")]
		public string AlterUser
		{
			get
			{
				return this._AlterUser;
			}
			set
			{
				if ((this._AlterUser != value))
				{
					this.OnAlterUserChanging(value);
					this.SendPropertyChanging();
					this._AlterUser = value;
					this.SendPropertyChanged("AlterUser");
					this.OnAlterUserChanged();
				}
			}
		}
		
		[Column(Storage="_AlterDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AlterDate
		{
			get
			{
				return this._AlterDate;
			}
			set
			{
				if ((this._AlterDate != value))
				{
					this.OnAlterDateChanging(value);
					this.SendPropertyChanging();
					this._AlterDate = value;
					this.SendPropertyChanged("AlterDate");
					this.OnAlterDateChanged();
				}
			}
		}
		
		[Column(Storage="_Remark", DbType="NVarChar(500)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[Association(Name="QC_TaskSchemaHeader_QC_TaskSchemaDetail", Storage="_QC_TaskSchemaHeader", ThisKey="MasterID", OtherKey="MasterID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public QC_TaskSchemaHeader QC_TaskSchemaHeader
		{
			get
			{
				return this._QC_TaskSchemaHeader.Entity;
			}
			set
			{
				QC_TaskSchemaHeader previousValue = this._QC_TaskSchemaHeader.Entity;
				if (((previousValue != value) 
							|| (this._QC_TaskSchemaHeader.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QC_TaskSchemaHeader.Entity = null;
						previousValue.QC_TaskSchemaDetails.Remove(this);
					}
					this._QC_TaskSchemaHeader.Entity = value;
					if ((value != null))
					{
						value.QC_TaskSchemaDetails.Add(this);
						this._MasterID = value.MasterID;
					}
					else
					{
						this._MasterID = default(System.Guid);
					}
					this.SendPropertyChanged("QC_TaskSchemaHeader");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.TraceInfo")]
	public partial class TraceInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _RecId;
		
		private string _DefectCodes;
		
		private string _DefectList;
		
		private string _LevelCode;
		
		private string _Executer;
		
		private string _CreateBy;
		
		private System.Nullable<System.DateTime> _CreateTime;
		
		private string _UpdateBy;
		
		private System.Nullable<System.DateTime> _UpdateTime;
		
		private bool _Finish;
		
		private System.Nullable<System.DateTime> _FinishDate;
		
		private string _Factory;
		
		private string _Workshop;
		
		private string _Line;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRecIdChanging(System.Guid value);
    partial void OnRecIdChanged();
    partial void OnDefectCodesChanging(string value);
    partial void OnDefectCodesChanged();
    partial void OnDefectListChanging(string value);
    partial void OnDefectListChanged();
    partial void OnLevelCodeChanging(string value);
    partial void OnLevelCodeChanged();
    partial void OnExecuterChanging(string value);
    partial void OnExecuterChanged();
    partial void OnCreateByChanging(string value);
    partial void OnCreateByChanged();
    partial void OnCreateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateTimeChanged();
    partial void OnUpdateByChanging(string value);
    partial void OnUpdateByChanged();
    partial void OnUpdateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateTimeChanged();
    partial void OnFinishChanging(bool value);
    partial void OnFinishChanged();
    partial void OnFinishDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFinishDateChanged();
    partial void OnFactoryChanging(string value);
    partial void OnFactoryChanged();
    partial void OnWorkshopChanging(string value);
    partial void OnWorkshopChanged();
    partial void OnLineChanging(string value);
    partial void OnLineChanged();
    #endregion
		
		public TraceInfo()
		{
			OnCreated();
		}
		
		[Column(Storage="_RecId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid RecId
		{
			get
			{
				return this._RecId;
			}
			set
			{
				if ((this._RecId != value))
				{
					this.OnRecIdChanging(value);
					this.SendPropertyChanging();
					this._RecId = value;
					this.SendPropertyChanged("RecId");
					this.OnRecIdChanged();
				}
			}
		}
		
		[Column(Storage="_DefectCodes", DbType="NVarChar(2000)")]
		public string DefectCodes
		{
			get
			{
				return this._DefectCodes;
			}
			set
			{
				if ((this._DefectCodes != value))
				{
					this.OnDefectCodesChanging(value);
					this.SendPropertyChanging();
					this._DefectCodes = value;
					this.SendPropertyChanged("DefectCodes");
					this.OnDefectCodesChanged();
				}
			}
		}
		
		[Column(Storage="_DefectList", DbType="NVarChar(2000)")]
		public string DefectList
		{
			get
			{
				return this._DefectList;
			}
			set
			{
				if ((this._DefectList != value))
				{
					this.OnDefectListChanging(value);
					this.SendPropertyChanging();
					this._DefectList = value;
					this.SendPropertyChanged("DefectList");
					this.OnDefectListChanged();
				}
			}
		}
		
		[Column(Storage="_LevelCode", DbType="NVarChar(20)")]
		public string LevelCode
		{
			get
			{
				return this._LevelCode;
			}
			set
			{
				if ((this._LevelCode != value))
				{
					this.OnLevelCodeChanging(value);
					this.SendPropertyChanging();
					this._LevelCode = value;
					this.SendPropertyChanged("LevelCode");
					this.OnLevelCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Executer", DbType="NVarChar(20)")]
		public string Executer
		{
			get
			{
				return this._Executer;
			}
			set
			{
				if ((this._Executer != value))
				{
					this.OnExecuterChanging(value);
					this.SendPropertyChanging();
					this._Executer = value;
					this.SendPropertyChanged("Executer");
					this.OnExecuterChanged();
				}
			}
		}
		
		[Column(Storage="_CreateBy", DbType="VarChar(15)")]
		public string CreateBy
		{
			get
			{
				return this._CreateBy;
			}
			set
			{
				if ((this._CreateBy != value))
				{
					this.OnCreateByChanging(value);
					this.SendPropertyChanging();
					this._CreateBy = value;
					this.SendPropertyChanged("CreateBy");
					this.OnCreateByChanged();
				}
			}
		}
		
		[Column(Storage="_CreateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[Column(Storage="_UpdateBy", DbType="VarChar(15)")]
		public string UpdateBy
		{
			get
			{
				return this._UpdateBy;
			}
			set
			{
				if ((this._UpdateBy != value))
				{
					this.OnUpdateByChanging(value);
					this.SendPropertyChanging();
					this._UpdateBy = value;
					this.SendPropertyChanged("UpdateBy");
					this.OnUpdateByChanged();
				}
			}
		}
		
		[Column(Storage="_UpdateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateTime
		{
			get
			{
				return this._UpdateTime;
			}
			set
			{
				if ((this._UpdateTime != value))
				{
					this.OnUpdateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdateTime = value;
					this.SendPropertyChanged("UpdateTime");
					this.OnUpdateTimeChanged();
				}
			}
		}
		
		[Column(Storage="_Finish", DbType="Bit NOT NULL")]
		public bool Finish
		{
			get
			{
				return this._Finish;
			}
			set
			{
				if ((this._Finish != value))
				{
					this.OnFinishChanging(value);
					this.SendPropertyChanging();
					this._Finish = value;
					this.SendPropertyChanged("Finish");
					this.OnFinishChanged();
				}
			}
		}
		
		[Column(Storage="_FinishDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> FinishDate
		{
			get
			{
				return this._FinishDate;
			}
			set
			{
				if ((this._FinishDate != value))
				{
					this.OnFinishDateChanging(value);
					this.SendPropertyChanging();
					this._FinishDate = value;
					this.SendPropertyChanged("FinishDate");
					this.OnFinishDateChanged();
				}
			}
		}
		
		[Column(Storage="_Factory", DbType="VarChar(15)")]
		public string Factory
		{
			get
			{
				return this._Factory;
			}
			set
			{
				if ((this._Factory != value))
				{
					this.OnFactoryChanging(value);
					this.SendPropertyChanging();
					this._Factory = value;
					this.SendPropertyChanged("Factory");
					this.OnFactoryChanged();
				}
			}
		}
		
		[Column(Storage="_Workshop", DbType="VarChar(10)")]
		public string Workshop
		{
			get
			{
				return this._Workshop;
			}
			set
			{
				if ((this._Workshop != value))
				{
					this.OnWorkshopChanging(value);
					this.SendPropertyChanging();
					this._Workshop = value;
					this.SendPropertyChanged("Workshop");
					this.OnWorkshopChanged();
				}
			}
		}
		
		[Column(Storage="_Line", DbType="VarChar(10)")]
		public string Line
		{
			get
			{
				return this._Line;
			}
			set
			{
				if ((this._Line != value))
				{
					this.OnLineChanging(value);
					this.SendPropertyChanging();
					this._Line = value;
					this.SendPropertyChanged("Line");
					this.OnLineChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.QC_QCRole")]
	public partial class QC_QCRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _RoleCode;
		
		private string _RoleName;
		
		private string _AppName;
		
		private System.Nullable<int> _OrderSeq;
		
		private string _CreateUser;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _AlterUser;
		
		private System.Nullable<System.DateTime> _AlterDate;
		
		private string _Remark;
		
		private EntitySet<QC_RoleUser> _QC_RoleUsers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleCodeChanging(string value);
    partial void OnRoleCodeChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    partial void OnAppNameChanging(string value);
    partial void OnAppNameChanged();
    partial void OnOrderSeqChanging(System.Nullable<int> value);
    partial void OnOrderSeqChanged();
    partial void OnCreateUserChanging(string value);
    partial void OnCreateUserChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnAlterUserChanging(string value);
    partial void OnAlterUserChanged();
    partial void OnAlterDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAlterDateChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public QC_QCRole()
		{
			this._QC_RoleUsers = new EntitySet<QC_RoleUser>(new Action<QC_RoleUser>(this.attach_QC_RoleUsers), new Action<QC_RoleUser>(this.detach_QC_RoleUsers));
			OnCreated();
		}
		
		[Column(Storage="_RoleCode", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string RoleCode
		{
			get
			{
				return this._RoleCode;
			}
			set
			{
				if ((this._RoleCode != value))
				{
					this.OnRoleCodeChanging(value);
					this.SendPropertyChanging();
					this._RoleCode = value;
					this.SendPropertyChanged("RoleCode");
					this.OnRoleCodeChanged();
				}
			}
		}
		
		[Column(Storage="_RoleName", DbType="NVarChar(20)")]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[Column(Storage="_AppName", DbType="NVarChar(50)")]
		public string AppName
		{
			get
			{
				return this._AppName;
			}
			set
			{
				if ((this._AppName != value))
				{
					this.OnAppNameChanging(value);
					this.SendPropertyChanging();
					this._AppName = value;
					this.SendPropertyChanged("AppName");
					this.OnAppNameChanged();
				}
			}
		}
		
		[Column(Storage="_OrderSeq", DbType="Int")]
		public System.Nullable<int> OrderSeq
		{
			get
			{
				return this._OrderSeq;
			}
			set
			{
				if ((this._OrderSeq != value))
				{
					this.OnOrderSeqChanging(value);
					this.SendPropertyChanging();
					this._OrderSeq = value;
					this.SendPropertyChanged("OrderSeq");
					this.OnOrderSeqChanged();
				}
			}
		}
		
		[Column(Storage="_CreateUser", DbType="NVarChar(20)")]
		public string CreateUser
		{
			get
			{
				return this._CreateUser;
			}
			set
			{
				if ((this._CreateUser != value))
				{
					this.OnCreateUserChanging(value);
					this.SendPropertyChanging();
					this._CreateUser = value;
					this.SendPropertyChanged("CreateUser");
					this.OnCreateUserChanged();
				}
			}
		}
		
		[Column(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[Column(Storage="_AlterUser", DbType="NVarChar(20)")]
		public string AlterUser
		{
			get
			{
				return this._AlterUser;
			}
			set
			{
				if ((this._AlterUser != value))
				{
					this.OnAlterUserChanging(value);
					this.SendPropertyChanging();
					this._AlterUser = value;
					this.SendPropertyChanged("AlterUser");
					this.OnAlterUserChanged();
				}
			}
		}
		
		[Column(Storage="_AlterDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AlterDate
		{
			get
			{
				return this._AlterDate;
			}
			set
			{
				if ((this._AlterDate != value))
				{
					this.OnAlterDateChanging(value);
					this.SendPropertyChanging();
					this._AlterDate = value;
					this.SendPropertyChanged("AlterDate");
					this.OnAlterDateChanged();
				}
			}
		}
		
		[Column(Storage="_Remark", DbType="NVarChar(500)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[Association(Name="QC_QCRole_QC_RoleUser", Storage="_QC_RoleUsers", ThisKey="RoleCode", OtherKey="RoleCode")]
		public EntitySet<QC_RoleUser> QC_RoleUsers
		{
			get
			{
				return this._QC_RoleUsers;
			}
			set
			{
				this._QC_RoleUsers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_QC_RoleUsers(QC_RoleUser entity)
		{
			this.SendPropertyChanging();
			entity.QC_QCRole = this;
		}
		
		private void detach_QC_RoleUsers(QC_RoleUser entity)
		{
			this.SendPropertyChanging();
			entity.QC_QCRole = null;
		}
	}
	
	[Table(Name="dbo.QC_RoleUser")]
	public partial class QC_RoleUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _RoleCode;
		
		private string _UserCode;
		
		private string _CreateUser;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _AlterUser;
		
		private System.Nullable<System.DateTime> _AlterDate;
		
		private string _Remark;
		
		private EntityRef<QC_QCRole> _QC_QCRole;
		
		private EntityRef<QC_QCUser> _QC_QCUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleCodeChanging(string value);
    partial void OnRoleCodeChanged();
    partial void OnUserCodeChanging(string value);
    partial void OnUserCodeChanged();
    partial void OnCreateUserChanging(string value);
    partial void OnCreateUserChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnAlterUserChanging(string value);
    partial void OnAlterUserChanged();
    partial void OnAlterDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAlterDateChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public QC_RoleUser()
		{
			this._QC_QCRole = default(EntityRef<QC_QCRole>);
			this._QC_QCUser = default(EntityRef<QC_QCUser>);
			OnCreated();
		}
		
		[Column(Storage="_RoleCode", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string RoleCode
		{
			get
			{
				return this._RoleCode;
			}
			set
			{
				if ((this._RoleCode != value))
				{
					if (this._QC_QCRole.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleCodeChanging(value);
					this.SendPropertyChanging();
					this._RoleCode = value;
					this.SendPropertyChanged("RoleCode");
					this.OnRoleCodeChanged();
				}
			}
		}
		
		[Column(Storage="_UserCode", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserCode
		{
			get
			{
				return this._UserCode;
			}
			set
			{
				if ((this._UserCode != value))
				{
					if (this._QC_QCUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserCodeChanging(value);
					this.SendPropertyChanging();
					this._UserCode = value;
					this.SendPropertyChanged("UserCode");
					this.OnUserCodeChanged();
				}
			}
		}
		
		[Column(Storage="_CreateUser", DbType="NVarChar(20)")]
		public string CreateUser
		{
			get
			{
				return this._CreateUser;
			}
			set
			{
				if ((this._CreateUser != value))
				{
					this.OnCreateUserChanging(value);
					this.SendPropertyChanging();
					this._CreateUser = value;
					this.SendPropertyChanged("CreateUser");
					this.OnCreateUserChanged();
				}
			}
		}
		
		[Column(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[Column(Storage="_AlterUser", DbType="NVarChar(20)")]
		public string AlterUser
		{
			get
			{
				return this._AlterUser;
			}
			set
			{
				if ((this._AlterUser != value))
				{
					this.OnAlterUserChanging(value);
					this.SendPropertyChanging();
					this._AlterUser = value;
					this.SendPropertyChanged("AlterUser");
					this.OnAlterUserChanged();
				}
			}
		}
		
		[Column(Storage="_AlterDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AlterDate
		{
			get
			{
				return this._AlterDate;
			}
			set
			{
				if ((this._AlterDate != value))
				{
					this.OnAlterDateChanging(value);
					this.SendPropertyChanging();
					this._AlterDate = value;
					this.SendPropertyChanged("AlterDate");
					this.OnAlterDateChanged();
				}
			}
		}
		
		[Column(Storage="_Remark", DbType="NVarChar(500)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[Association(Name="QC_QCRole_QC_RoleUser", Storage="_QC_QCRole", ThisKey="RoleCode", OtherKey="RoleCode", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public QC_QCRole QC_QCRole
		{
			get
			{
				return this._QC_QCRole.Entity;
			}
			set
			{
				QC_QCRole previousValue = this._QC_QCRole.Entity;
				if (((previousValue != value) 
							|| (this._QC_QCRole.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QC_QCRole.Entity = null;
						previousValue.QC_RoleUsers.Remove(this);
					}
					this._QC_QCRole.Entity = value;
					if ((value != null))
					{
						value.QC_RoleUsers.Add(this);
						this._RoleCode = value.RoleCode;
					}
					else
					{
						this._RoleCode = default(string);
					}
					this.SendPropertyChanged("QC_QCRole");
				}
			}
		}
		
		[Association(Name="QC_QCUser_QC_RoleUser", Storage="_QC_QCUser", ThisKey="UserCode", OtherKey="UserCode", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public QC_QCUser QC_QCUser
		{
			get
			{
				return this._QC_QCUser.Entity;
			}
			set
			{
				QC_QCUser previousValue = this._QC_QCUser.Entity;
				if (((previousValue != value) 
							|| (this._QC_QCUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QC_QCUser.Entity = null;
						previousValue.QC_RoleUsers.Remove(this);
					}
					this._QC_QCUser.Entity = value;
					if ((value != null))
					{
						value.QC_RoleUsers.Add(this);
						this._UserCode = value.UserCode;
					}
					else
					{
						this._UserCode = default(string);
					}
					this.SendPropertyChanged("QC_QCUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.QC_AppRightInfo")]
	public partial class QC_AppRightInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _APPName;
		
		private string _RoleCode;
		
		private string _UserCode;
		
		private string _ActivityName;
		
		private System.Nullable<bool> _IsAdd;
		
		private System.Nullable<bool> _IsDelete;
		
		private System.Nullable<bool> _IsEdit;
		
		private System.Nullable<bool> _IsAssign;
		
		private string _CreateUser;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _AlterUser;
		
		private System.Nullable<System.DateTime> _AlterDate;
		
		private string _Remark;
		
		private EntityRef<QC_QCUser> _QC_QCUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAPPNameChanging(string value);
    partial void OnAPPNameChanged();
    partial void OnRoleCodeChanging(string value);
    partial void OnRoleCodeChanged();
    partial void OnUserCodeChanging(string value);
    partial void OnUserCodeChanged();
    partial void OnActivityNameChanging(string value);
    partial void OnActivityNameChanged();
    partial void OnIsAddChanging(System.Nullable<bool> value);
    partial void OnIsAddChanged();
    partial void OnIsDeleteChanging(System.Nullable<bool> value);
    partial void OnIsDeleteChanged();
    partial void OnIsEditChanging(System.Nullable<bool> value);
    partial void OnIsEditChanged();
    partial void OnIsAssignChanging(System.Nullable<bool> value);
    partial void OnIsAssignChanged();
    partial void OnCreateUserChanging(string value);
    partial void OnCreateUserChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnAlterUserChanging(string value);
    partial void OnAlterUserChanged();
    partial void OnAlterDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAlterDateChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public QC_AppRightInfo()
		{
			this._QC_QCUser = default(EntityRef<QC_QCUser>);
			OnCreated();
		}
		
		[Column(Storage="_APPName", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string APPName
		{
			get
			{
				return this._APPName;
			}
			set
			{
				if ((this._APPName != value))
				{
					this.OnAPPNameChanging(value);
					this.SendPropertyChanging();
					this._APPName = value;
					this.SendPropertyChanged("APPName");
					this.OnAPPNameChanged();
				}
			}
		}
		
		[Column(Storage="_RoleCode", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string RoleCode
		{
			get
			{
				return this._RoleCode;
			}
			set
			{
				if ((this._RoleCode != value))
				{
					this.OnRoleCodeChanging(value);
					this.SendPropertyChanging();
					this._RoleCode = value;
					this.SendPropertyChanged("RoleCode");
					this.OnRoleCodeChanged();
				}
			}
		}
		
		[Column(Storage="_UserCode", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserCode
		{
			get
			{
				return this._UserCode;
			}
			set
			{
				if ((this._UserCode != value))
				{
					if (this._QC_QCUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserCodeChanging(value);
					this.SendPropertyChanging();
					this._UserCode = value;
					this.SendPropertyChanged("UserCode");
					this.OnUserCodeChanged();
				}
			}
		}
		
		[Column(Storage="_ActivityName", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ActivityName
		{
			get
			{
				return this._ActivityName;
			}
			set
			{
				if ((this._ActivityName != value))
				{
					this.OnActivityNameChanging(value);
					this.SendPropertyChanging();
					this._ActivityName = value;
					this.SendPropertyChanged("ActivityName");
					this.OnActivityNameChanged();
				}
			}
		}
		
		[Column(Storage="_IsAdd", DbType="Bit")]
		public System.Nullable<bool> IsAdd
		{
			get
			{
				return this._IsAdd;
			}
			set
			{
				if ((this._IsAdd != value))
				{
					this.OnIsAddChanging(value);
					this.SendPropertyChanging();
					this._IsAdd = value;
					this.SendPropertyChanged("IsAdd");
					this.OnIsAddChanged();
				}
			}
		}
		
		[Column(Storage="_IsDelete", DbType="Bit")]
		public System.Nullable<bool> IsDelete
		{
			get
			{
				return this._IsDelete;
			}
			set
			{
				if ((this._IsDelete != value))
				{
					this.OnIsDeleteChanging(value);
					this.SendPropertyChanging();
					this._IsDelete = value;
					this.SendPropertyChanged("IsDelete");
					this.OnIsDeleteChanged();
				}
			}
		}
		
		[Column(Storage="_IsEdit", DbType="Bit")]
		public System.Nullable<bool> IsEdit
		{
			get
			{
				return this._IsEdit;
			}
			set
			{
				if ((this._IsEdit != value))
				{
					this.OnIsEditChanging(value);
					this.SendPropertyChanging();
					this._IsEdit = value;
					this.SendPropertyChanged("IsEdit");
					this.OnIsEditChanged();
				}
			}
		}
		
		[Column(Storage="_IsAssign", DbType="Bit")]
		public System.Nullable<bool> IsAssign
		{
			get
			{
				return this._IsAssign;
			}
			set
			{
				if ((this._IsAssign != value))
				{
					this.OnIsAssignChanging(value);
					this.SendPropertyChanging();
					this._IsAssign = value;
					this.SendPropertyChanged("IsAssign");
					this.OnIsAssignChanged();
				}
			}
		}
		
		[Column(Storage="_CreateUser", DbType="NVarChar(20)")]
		public string CreateUser
		{
			get
			{
				return this._CreateUser;
			}
			set
			{
				if ((this._CreateUser != value))
				{
					this.OnCreateUserChanging(value);
					this.SendPropertyChanging();
					this._CreateUser = value;
					this.SendPropertyChanged("CreateUser");
					this.OnCreateUserChanged();
				}
			}
		}
		
		[Column(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[Column(Storage="_AlterUser", DbType="NVarChar(20)")]
		public string AlterUser
		{
			get
			{
				return this._AlterUser;
			}
			set
			{
				if ((this._AlterUser != value))
				{
					this.OnAlterUserChanging(value);
					this.SendPropertyChanging();
					this._AlterUser = value;
					this.SendPropertyChanged("AlterUser");
					this.OnAlterUserChanged();
				}
			}
		}
		
		[Column(Storage="_AlterDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AlterDate
		{
			get
			{
				return this._AlterDate;
			}
			set
			{
				if ((this._AlterDate != value))
				{
					this.OnAlterDateChanging(value);
					this.SendPropertyChanging();
					this._AlterDate = value;
					this.SendPropertyChanged("AlterDate");
					this.OnAlterDateChanged();
				}
			}
		}
		
		[Column(Storage="_Remark", DbType="NVarChar(50)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[Association(Name="QC_QCUser_QC_AppRightInfo", Storage="_QC_QCUser", ThisKey="UserCode", OtherKey="UserCode", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public QC_QCUser QC_QCUser
		{
			get
			{
				return this._QC_QCUser.Entity;
			}
			set
			{
				QC_QCUser previousValue = this._QC_QCUser.Entity;
				if (((previousValue != value) 
							|| (this._QC_QCUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QC_QCUser.Entity = null;
						previousValue.QC_AppRightInfos.Remove(this);
					}
					this._QC_QCUser.Entity = value;
					if ((value != null))
					{
						value.QC_AppRightInfos.Add(this);
						this._UserCode = value.UserCode;
					}
					else
					{
						this._UserCode = default(string);
					}
					this.SendPropertyChanged("QC_QCUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.QC_AppInfo")]
	public partial class QC_AppInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _AppName;
		
		private string _Description;
		
		private string _CreateUser;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _Remark;
		
		private EntityRef<QC_AppActivityInfo> _QC_AppActivityInfo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAppNameChanging(string value);
    partial void OnAppNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreateUserChanging(string value);
    partial void OnCreateUserChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public QC_AppInfo()
		{
			this._QC_AppActivityInfo = default(EntityRef<QC_AppActivityInfo>);
			OnCreated();
		}
		
		[Column(Storage="_AppName", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AppName
		{
			get
			{
				return this._AppName;
			}
			set
			{
				if ((this._AppName != value))
				{
					this.OnAppNameChanging(value);
					this.SendPropertyChanging();
					this._AppName = value;
					this.SendPropertyChanged("AppName");
					this.OnAppNameChanged();
				}
			}
		}
		
		[Column(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_CreateUser", DbType="NVarChar(20)")]
		public string CreateUser
		{
			get
			{
				return this._CreateUser;
			}
			set
			{
				if ((this._CreateUser != value))
				{
					this.OnCreateUserChanging(value);
					this.SendPropertyChanging();
					this._CreateUser = value;
					this.SendPropertyChanged("CreateUser");
					this.OnCreateUserChanged();
				}
			}
		}
		
		[Column(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[Column(Storage="_Remark", DbType="NVarChar(500)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[Association(Name="QC_AppInfo_QC_AppActivityInfo", Storage="_QC_AppActivityInfo", ThisKey="AppName", OtherKey="AppName", IsUnique=true, IsForeignKey=false)]
		public QC_AppActivityInfo QC_AppActivityInfo
		{
			get
			{
				return this._QC_AppActivityInfo.Entity;
			}
			set
			{
				QC_AppActivityInfo previousValue = this._QC_AppActivityInfo.Entity;
				if (((previousValue != value) 
							|| (this._QC_AppActivityInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QC_AppActivityInfo.Entity = null;
						previousValue.QC_AppInfo = null;
					}
					this._QC_AppActivityInfo.Entity = value;
					if ((value != null))
					{
						value.QC_AppInfo = this;
					}
					this.SendPropertyChanged("QC_AppActivityInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.QC_AppActivityInfo")]
	public partial class QC_AppActivityInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _AppName;
		
		private string _ActivityName;
		
		private string _Description;
		
		private string _CreateUser;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _Remark;
		
		private EntityRef<QC_AppInfo> _QC_AppInfo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAppNameChanging(string value);
    partial void OnAppNameChanged();
    partial void OnActivityNameChanging(string value);
    partial void OnActivityNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreateUserChanging(string value);
    partial void OnCreateUserChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public QC_AppActivityInfo()
		{
			this._QC_AppInfo = default(EntityRef<QC_AppInfo>);
			OnCreated();
		}
		
		[Column(Storage="_AppName", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AppName
		{
			get
			{
				return this._AppName;
			}
			set
			{
				if ((this._AppName != value))
				{
					if (this._QC_AppInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAppNameChanging(value);
					this.SendPropertyChanging();
					this._AppName = value;
					this.SendPropertyChanged("AppName");
					this.OnAppNameChanged();
				}
			}
		}
		
		[Column(Storage="_ActivityName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ActivityName
		{
			get
			{
				return this._ActivityName;
			}
			set
			{
				if ((this._ActivityName != value))
				{
					this.OnActivityNameChanging(value);
					this.SendPropertyChanging();
					this._ActivityName = value;
					this.SendPropertyChanged("ActivityName");
					this.OnActivityNameChanged();
				}
			}
		}
		
		[Column(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_CreateUser", DbType="NVarChar(20)")]
		public string CreateUser
		{
			get
			{
				return this._CreateUser;
			}
			set
			{
				if ((this._CreateUser != value))
				{
					this.OnCreateUserChanging(value);
					this.SendPropertyChanging();
					this._CreateUser = value;
					this.SendPropertyChanged("CreateUser");
					this.OnCreateUserChanged();
				}
			}
		}
		
		[Column(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[Column(Storage="_Remark", DbType="NVarChar(500)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[Association(Name="QC_AppInfo_QC_AppActivityInfo", Storage="_QC_AppInfo", ThisKey="AppName", OtherKey="AppName", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public QC_AppInfo QC_AppInfo
		{
			get
			{
				return this._QC_AppInfo.Entity;
			}
			set
			{
				QC_AppInfo previousValue = this._QC_AppInfo.Entity;
				if (((previousValue != value) 
							|| (this._QC_AppInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QC_AppInfo.Entity = null;
						previousValue.QC_AppActivityInfo = null;
					}
					this._QC_AppInfo.Entity = value;
					if ((value != null))
					{
						value.QC_AppActivityInfo = this;
						this._AppName = value.AppName;
					}
					else
					{
						this._AppName = default(string);
					}
					this.SendPropertyChanged("QC_AppInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.QC_QCUser")]
	public partial class QC_QCUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UserCode;
		
		private string _Factory;
		
		private string _WorkShop;
		
		private string _WorkLine;
		
		private System.Nullable<bool> _IsDisable;
		
		private System.Nullable<bool> _IsShowFunctionList;
		
		private System.Nullable<bool> _IsFactoryManager;
		
		private System.Nullable<bool> _IsDepartmentManager;
		
		private string _CreateUser;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _AlterUser;
		
		private System.Nullable<System.DateTime> _AlterDate;
		
		private string _Remark;
		
		private EntitySet<QC_RoleUser> _QC_RoleUsers;
		
		private EntitySet<QC_AppRightInfo> _QC_AppRightInfos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserCodeChanging(string value);
    partial void OnUserCodeChanged();
    partial void OnFactoryChanging(string value);
    partial void OnFactoryChanged();
    partial void OnWorkShopChanging(string value);
    partial void OnWorkShopChanged();
    partial void OnWorkLineChanging(string value);
    partial void OnWorkLineChanged();
    partial void OnIsDisableChanging(System.Nullable<bool> value);
    partial void OnIsDisableChanged();
    partial void OnIsShowFunctionListChanging(System.Nullable<bool> value);
    partial void OnIsShowFunctionListChanged();
    partial void OnIsFactoryManagerChanging(System.Nullable<bool> value);
    partial void OnIsFactoryManagerChanged();
    partial void OnIsDepartmentManagerChanging(System.Nullable<bool> value);
    partial void OnIsDepartmentManagerChanged();
    partial void OnCreateUserChanging(string value);
    partial void OnCreateUserChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnAlterUserChanging(string value);
    partial void OnAlterUserChanged();
    partial void OnAlterDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAlterDateChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public QC_QCUser()
		{
			this._QC_RoleUsers = new EntitySet<QC_RoleUser>(new Action<QC_RoleUser>(this.attach_QC_RoleUsers), new Action<QC_RoleUser>(this.detach_QC_RoleUsers));
			this._QC_AppRightInfos = new EntitySet<QC_AppRightInfo>(new Action<QC_AppRightInfo>(this.attach_QC_AppRightInfos), new Action<QC_AppRightInfo>(this.detach_QC_AppRightInfos));
			OnCreated();
		}
		
		[Column(Storage="_UserCode", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserCode
		{
			get
			{
				return this._UserCode;
			}
			set
			{
				if ((this._UserCode != value))
				{
					this.OnUserCodeChanging(value);
					this.SendPropertyChanging();
					this._UserCode = value;
					this.SendPropertyChanged("UserCode");
					this.OnUserCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Factory", DbType="NVarChar(50)")]
		public string Factory
		{
			get
			{
				return this._Factory;
			}
			set
			{
				if ((this._Factory != value))
				{
					this.OnFactoryChanging(value);
					this.SendPropertyChanging();
					this._Factory = value;
					this.SendPropertyChanged("Factory");
					this.OnFactoryChanged();
				}
			}
		}
		
		[Column(Storage="_WorkShop", DbType="NVarChar(50)")]
		public string WorkShop
		{
			get
			{
				return this._WorkShop;
			}
			set
			{
				if ((this._WorkShop != value))
				{
					this.OnWorkShopChanging(value);
					this.SendPropertyChanging();
					this._WorkShop = value;
					this.SendPropertyChanged("WorkShop");
					this.OnWorkShopChanged();
				}
			}
		}
		
		[Column(Storage="_WorkLine", DbType="NVarChar(50)")]
		public string WorkLine
		{
			get
			{
				return this._WorkLine;
			}
			set
			{
				if ((this._WorkLine != value))
				{
					this.OnWorkLineChanging(value);
					this.SendPropertyChanging();
					this._WorkLine = value;
					this.SendPropertyChanged("WorkLine");
					this.OnWorkLineChanged();
				}
			}
		}
		
		[Column(Storage="_IsDisable", DbType="Bit")]
		public System.Nullable<bool> IsDisable
		{
			get
			{
				return this._IsDisable;
			}
			set
			{
				if ((this._IsDisable != value))
				{
					this.OnIsDisableChanging(value);
					this.SendPropertyChanging();
					this._IsDisable = value;
					this.SendPropertyChanged("IsDisable");
					this.OnIsDisableChanged();
				}
			}
		}
		
		[Column(Storage="_IsShowFunctionList", DbType="Bit")]
		public System.Nullable<bool> IsShowFunctionList
		{
			get
			{
				return this._IsShowFunctionList;
			}
			set
			{
				if ((this._IsShowFunctionList != value))
				{
					this.OnIsShowFunctionListChanging(value);
					this.SendPropertyChanging();
					this._IsShowFunctionList = value;
					this.SendPropertyChanged("IsShowFunctionList");
					this.OnIsShowFunctionListChanged();
				}
			}
		}
		
		[Column(Storage="_IsFactoryManager", DbType="Bit")]
		public System.Nullable<bool> IsFactoryManager
		{
			get
			{
				return this._IsFactoryManager;
			}
			set
			{
				if ((this._IsFactoryManager != value))
				{
					this.OnIsFactoryManagerChanging(value);
					this.SendPropertyChanging();
					this._IsFactoryManager = value;
					this.SendPropertyChanged("IsFactoryManager");
					this.OnIsFactoryManagerChanged();
				}
			}
		}
		
		[Column(Storage="_IsDepartmentManager", DbType="Bit")]
		public System.Nullable<bool> IsDepartmentManager
		{
			get
			{
				return this._IsDepartmentManager;
			}
			set
			{
				if ((this._IsDepartmentManager != value))
				{
					this.OnIsDepartmentManagerChanging(value);
					this.SendPropertyChanging();
					this._IsDepartmentManager = value;
					this.SendPropertyChanged("IsDepartmentManager");
					this.OnIsDepartmentManagerChanged();
				}
			}
		}
		
		[Column(Storage="_CreateUser", DbType="NVarChar(20)")]
		public string CreateUser
		{
			get
			{
				return this._CreateUser;
			}
			set
			{
				if ((this._CreateUser != value))
				{
					this.OnCreateUserChanging(value);
					this.SendPropertyChanging();
					this._CreateUser = value;
					this.SendPropertyChanged("CreateUser");
					this.OnCreateUserChanged();
				}
			}
		}
		
		[Column(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[Column(Storage="_AlterUser", DbType="NVarChar(20)")]
		public string AlterUser
		{
			get
			{
				return this._AlterUser;
			}
			set
			{
				if ((this._AlterUser != value))
				{
					this.OnAlterUserChanging(value);
					this.SendPropertyChanging();
					this._AlterUser = value;
					this.SendPropertyChanged("AlterUser");
					this.OnAlterUserChanged();
				}
			}
		}
		
		[Column(Storage="_AlterDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AlterDate
		{
			get
			{
				return this._AlterDate;
			}
			set
			{
				if ((this._AlterDate != value))
				{
					this.OnAlterDateChanging(value);
					this.SendPropertyChanging();
					this._AlterDate = value;
					this.SendPropertyChanged("AlterDate");
					this.OnAlterDateChanged();
				}
			}
		}
		
		[Column(Storage="_Remark", DbType="NVarChar(500)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[Association(Name="QC_QCUser_QC_RoleUser", Storage="_QC_RoleUsers", ThisKey="UserCode", OtherKey="UserCode")]
		public EntitySet<QC_RoleUser> QC_RoleUsers
		{
			get
			{
				return this._QC_RoleUsers;
			}
			set
			{
				this._QC_RoleUsers.Assign(value);
			}
		}
		
		[Association(Name="QC_QCUser_QC_AppRightInfo", Storage="_QC_AppRightInfos", ThisKey="UserCode", OtherKey="UserCode")]
		public EntitySet<QC_AppRightInfo> QC_AppRightInfos
		{
			get
			{
				return this._QC_AppRightInfos;
			}
			set
			{
				this._QC_AppRightInfos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_QC_RoleUsers(QC_RoleUser entity)
		{
			this.SendPropertyChanging();
			entity.QC_QCUser = this;
		}
		
		private void detach_QC_RoleUsers(QC_RoleUser entity)
		{
			this.SendPropertyChanging();
			entity.QC_QCUser = null;
		}
		
		private void attach_QC_AppRightInfos(QC_AppRightInfo entity)
		{
			this.SendPropertyChanging();
			entity.QC_QCUser = this;
		}
		
		private void detach_QC_AppRightInfos(QC_AppRightInfo entity)
		{
			this.SendPropertyChanging();
			entity.QC_QCUser = null;
		}
	}
	
	[Table(Name="dbo.QC_Detail_Detail")]
	public partial class QC_Detail_Detail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Guid _MasterID;
		
		private System.Guid _DetailID;
		
		private System.Nullable<int> _ProductSeq;
		
		private string _DefectCode;
		
		private System.Nullable<int> _DefectQty;
		
		private string _Worker;
		
		private string _W_procedure;
		
		private string _Problem;
		
		private string _Cause;
		
		private System.Nullable<bool> _IsFindAtSameTime;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _CreateUser;
		
		private System.Nullable<System.DateTime> _AlterDate;
		
		private string _AlterUser;
		
		private string _ImgUrl;
		
		private EntityRef<QC_Detail> _QC_Detail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnMasterIDChanging(System.Guid value);
    partial void OnMasterIDChanged();
    partial void OnDetailIDChanging(System.Guid value);
    partial void OnDetailIDChanged();
    partial void OnProductSeqChanging(System.Nullable<int> value);
    partial void OnProductSeqChanged();
    partial void OnDefectCodeChanging(string value);
    partial void OnDefectCodeChanged();
    partial void OnDefectQtyChanging(System.Nullable<int> value);
    partial void OnDefectQtyChanged();
    partial void OnWorkerChanging(string value);
    partial void OnWorkerChanged();
    partial void OnW_procedureChanging(string value);
    partial void OnW_procedureChanged();
    partial void OnProblemChanging(string value);
    partial void OnProblemChanged();
    partial void OnCauseChanging(string value);
    partial void OnCauseChanged();
    partial void OnIsFindAtSameTimeChanging(System.Nullable<bool> value);
    partial void OnIsFindAtSameTimeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnCreateUserChanging(string value);
    partial void OnCreateUserChanged();
    partial void OnAlterDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAlterDateChanged();
    partial void OnAlterUserChanging(string value);
    partial void OnAlterUserChanged();
    partial void OnImgUrlChanging(string value);
    partial void OnImgUrlChanged();
    #endregion
		
		public QC_Detail_Detail()
		{
			this._QC_Detail = default(EntityRef<QC_Detail>);
			OnCreated();
		}
		
		[Column(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_MasterID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid MasterID
		{
			get
			{
				return this._MasterID;
			}
			set
			{
				if ((this._MasterID != value))
				{
					if (this._QC_Detail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMasterIDChanging(value);
					this.SendPropertyChanging();
					this._MasterID = value;
					this.SendPropertyChanged("MasterID");
					this.OnMasterIDChanged();
				}
			}
		}
		
		[Column(Storage="_DetailID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid DetailID
		{
			get
			{
				return this._DetailID;
			}
			set
			{
				if ((this._DetailID != value))
				{
					if (this._QC_Detail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDetailIDChanging(value);
					this.SendPropertyChanging();
					this._DetailID = value;
					this.SendPropertyChanged("DetailID");
					this.OnDetailIDChanged();
				}
			}
		}
		
		[Column(Storage="_ProductSeq", DbType="Int")]
		public System.Nullable<int> ProductSeq
		{
			get
			{
				return this._ProductSeq;
			}
			set
			{
				if ((this._ProductSeq != value))
				{
					this.OnProductSeqChanging(value);
					this.SendPropertyChanging();
					this._ProductSeq = value;
					this.SendPropertyChanged("ProductSeq");
					this.OnProductSeqChanged();
				}
			}
		}
		
		[Column(Storage="_DefectCode", DbType="NVarChar(50)")]
		public string DefectCode
		{
			get
			{
				return this._DefectCode;
			}
			set
			{
				if ((this._DefectCode != value))
				{
					this.OnDefectCodeChanging(value);
					this.SendPropertyChanging();
					this._DefectCode = value;
					this.SendPropertyChanged("DefectCode");
					this.OnDefectCodeChanged();
				}
			}
		}
		
		[Column(Storage="_DefectQty", DbType="Int")]
		public System.Nullable<int> DefectQty
		{
			get
			{
				return this._DefectQty;
			}
			set
			{
				if ((this._DefectQty != value))
				{
					this.OnDefectQtyChanging(value);
					this.SendPropertyChanging();
					this._DefectQty = value;
					this.SendPropertyChanged("DefectQty");
					this.OnDefectQtyChanged();
				}
			}
		}
		
		[Column(Storage="_Worker", DbType="NVarChar(50)")]
		public string Worker
		{
			get
			{
				return this._Worker;
			}
			set
			{
				if ((this._Worker != value))
				{
					this.OnWorkerChanging(value);
					this.SendPropertyChanging();
					this._Worker = value;
					this.SendPropertyChanged("Worker");
					this.OnWorkerChanged();
				}
			}
		}
		
		[Column(Storage="_W_procedure", DbType="NVarChar(50)")]
		public string W_procedure
		{
			get
			{
				return this._W_procedure;
			}
			set
			{
				if ((this._W_procedure != value))
				{
					this.OnW_procedureChanging(value);
					this.SendPropertyChanging();
					this._W_procedure = value;
					this.SendPropertyChanged("W_procedure");
					this.OnW_procedureChanged();
				}
			}
		}
		
		[Column(Storage="_Problem", DbType="NVarChar(50)")]
		public string Problem
		{
			get
			{
				return this._Problem;
			}
			set
			{
				if ((this._Problem != value))
				{
					this.OnProblemChanging(value);
					this.SendPropertyChanging();
					this._Problem = value;
					this.SendPropertyChanged("Problem");
					this.OnProblemChanged();
				}
			}
		}
		
		[Column(Storage="_Cause", DbType="NVarChar(50)")]
		public string Cause
		{
			get
			{
				return this._Cause;
			}
			set
			{
				if ((this._Cause != value))
				{
					this.OnCauseChanging(value);
					this.SendPropertyChanging();
					this._Cause = value;
					this.SendPropertyChanged("Cause");
					this.OnCauseChanged();
				}
			}
		}
		
		[Column(Storage="_IsFindAtSameTime", DbType="Bit")]
		public System.Nullable<bool> IsFindAtSameTime
		{
			get
			{
				return this._IsFindAtSameTime;
			}
			set
			{
				if ((this._IsFindAtSameTime != value))
				{
					this.OnIsFindAtSameTimeChanging(value);
					this.SendPropertyChanging();
					this._IsFindAtSameTime = value;
					this.SendPropertyChanged("IsFindAtSameTime");
					this.OnIsFindAtSameTimeChanged();
				}
			}
		}
		
		[Column(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[Column(Storage="_CreateUser", DbType="NVarChar(50)")]
		public string CreateUser
		{
			get
			{
				return this._CreateUser;
			}
			set
			{
				if ((this._CreateUser != value))
				{
					this.OnCreateUserChanging(value);
					this.SendPropertyChanging();
					this._CreateUser = value;
					this.SendPropertyChanged("CreateUser");
					this.OnCreateUserChanged();
				}
			}
		}
		
		[Column(Storage="_AlterDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AlterDate
		{
			get
			{
				return this._AlterDate;
			}
			set
			{
				if ((this._AlterDate != value))
				{
					this.OnAlterDateChanging(value);
					this.SendPropertyChanging();
					this._AlterDate = value;
					this.SendPropertyChanged("AlterDate");
					this.OnAlterDateChanged();
				}
			}
		}
		
		[Column(Storage="_AlterUser", DbType="NVarChar(50)")]
		public string AlterUser
		{
			get
			{
				return this._AlterUser;
			}
			set
			{
				if ((this._AlterUser != value))
				{
					this.OnAlterUserChanging(value);
					this.SendPropertyChanging();
					this._AlterUser = value;
					this.SendPropertyChanged("AlterUser");
					this.OnAlterUserChanged();
				}
			}
		}
		
		[Column(Storage="_ImgUrl", DbType="NVarChar(100)")]
		public string ImgUrl
		{
			get
			{
				return this._ImgUrl;
			}
			set
			{
				if ((this._ImgUrl != value))
				{
					this.OnImgUrlChanging(value);
					this.SendPropertyChanging();
					this._ImgUrl = value;
					this.SendPropertyChanged("ImgUrl");
					this.OnImgUrlChanged();
				}
			}
		}
		
		[Association(Name="QC_Detail_QC_Detail_Detail", Storage="_QC_Detail", ThisKey="MasterID,DetailID", OtherKey="MasterID,ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public QC_Detail QC_Detail
		{
			get
			{
				return this._QC_Detail.Entity;
			}
			set
			{
				QC_Detail previousValue = this._QC_Detail.Entity;
				if (((previousValue != value) 
							|| (this._QC_Detail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QC_Detail.Entity = null;
						previousValue.QC_Detail_Details.Remove(this);
					}
					this._QC_Detail.Entity = value;
					if ((value != null))
					{
						value.QC_Detail_Details.Add(this);
						this._MasterID = value.MasterID;
						this._DetailID = value.ID;
					}
					else
					{
						this._MasterID = default(System.Guid);
						this._DetailID = default(System.Guid);
					}
					this.SendPropertyChanged("QC_Detail");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.QC_FirstPassRatioTarget")]
	public partial class QC_FirstPassRatioTarget : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _Factory;
		
		private System.Nullable<decimal> _TargetValue;
		
		private System.Nullable<System.DateTime> _EffectFromDate;
		
		private string _CreateUser;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _AlterUser;
		
		private System.Nullable<System.DateTime> _AlterDate;
		
		private string _Remark;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnFactoryChanging(string value);
    partial void OnFactoryChanged();
    partial void OnTargetValueChanging(System.Nullable<decimal> value);
    partial void OnTargetValueChanged();
    partial void OnEffectFromDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEffectFromDateChanged();
    partial void OnCreateUserChanging(string value);
    partial void OnCreateUserChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnAlterUserChanging(string value);
    partial void OnAlterUserChanged();
    partial void OnAlterDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAlterDateChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public QC_FirstPassRatioTarget()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_Factory", DbType="NVarChar(50)")]
		public string Factory
		{
			get
			{
				return this._Factory;
			}
			set
			{
				if ((this._Factory != value))
				{
					this.OnFactoryChanging(value);
					this.SendPropertyChanging();
					this._Factory = value;
					this.SendPropertyChanged("Factory");
					this.OnFactoryChanged();
				}
			}
		}
		
		[Column(Storage="_TargetValue", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> TargetValue
		{
			get
			{
				return this._TargetValue;
			}
			set
			{
				if ((this._TargetValue != value))
				{
					this.OnTargetValueChanging(value);
					this.SendPropertyChanging();
					this._TargetValue = value;
					this.SendPropertyChanged("TargetValue");
					this.OnTargetValueChanged();
				}
			}
		}
		
		[Column(Storage="_EffectFromDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EffectFromDate
		{
			get
			{
				return this._EffectFromDate;
			}
			set
			{
				if ((this._EffectFromDate != value))
				{
					this.OnEffectFromDateChanging(value);
					this.SendPropertyChanging();
					this._EffectFromDate = value;
					this.SendPropertyChanged("EffectFromDate");
					this.OnEffectFromDateChanged();
				}
			}
		}
		
		[Column(Storage="_CreateUser", DbType="NVarChar(20)")]
		public string CreateUser
		{
			get
			{
				return this._CreateUser;
			}
			set
			{
				if ((this._CreateUser != value))
				{
					this.OnCreateUserChanging(value);
					this.SendPropertyChanging();
					this._CreateUser = value;
					this.SendPropertyChanged("CreateUser");
					this.OnCreateUserChanged();
				}
			}
		}
		
		[Column(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[Column(Storage="_AlterUser", DbType="NVarChar(20)")]
		public string AlterUser
		{
			get
			{
				return this._AlterUser;
			}
			set
			{
				if ((this._AlterUser != value))
				{
					this.OnAlterUserChanging(value);
					this.SendPropertyChanging();
					this._AlterUser = value;
					this.SendPropertyChanged("AlterUser");
					this.OnAlterUserChanged();
				}
			}
		}
		
		[Column(Storage="_AlterDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AlterDate
		{
			get
			{
				return this._AlterDate;
			}
			set
			{
				if ((this._AlterDate != value))
				{
					this.OnAlterDateChanging(value);
					this.SendPropertyChanging();
					this._AlterDate = value;
					this.SendPropertyChanged("AlterDate");
					this.OnAlterDateChanged();
				}
			}
		}
		
		[Column(Storage="_Remark", DbType="NVarChar(500)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.QC_ProductTypeInfo")]
	public partial class QC_ProductTypeInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ProductTypeCode;
		
		private string _ProductTypeName;
		
		private string _CreateUser;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _AlterUser;
		
		private System.Nullable<System.DateTime> _AlterDate;
		
		private string _Remark;
		
		private EntitySet<QC_ProductType_CommonDefect> _QC_ProductType_CommonDefects;
		
		private EntitySet<QC_ProductType_CommonPosition> _QC_ProductType_CommonPositions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductTypeCodeChanging(string value);
    partial void OnProductTypeCodeChanged();
    partial void OnProductTypeNameChanging(string value);
    partial void OnProductTypeNameChanged();
    partial void OnCreateUserChanging(string value);
    partial void OnCreateUserChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnAlterUserChanging(string value);
    partial void OnAlterUserChanged();
    partial void OnAlterDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAlterDateChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public QC_ProductTypeInfo()
		{
			this._QC_ProductType_CommonDefects = new EntitySet<QC_ProductType_CommonDefect>(new Action<QC_ProductType_CommonDefect>(this.attach_QC_ProductType_CommonDefects), new Action<QC_ProductType_CommonDefect>(this.detach_QC_ProductType_CommonDefects));
			this._QC_ProductType_CommonPositions = new EntitySet<QC_ProductType_CommonPosition>(new Action<QC_ProductType_CommonPosition>(this.attach_QC_ProductType_CommonPositions), new Action<QC_ProductType_CommonPosition>(this.detach_QC_ProductType_CommonPositions));
			OnCreated();
		}
		
		[Column(Storage="_ProductTypeCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ProductTypeCode
		{
			get
			{
				return this._ProductTypeCode;
			}
			set
			{
				if ((this._ProductTypeCode != value))
				{
					this.OnProductTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._ProductTypeCode = value;
					this.SendPropertyChanged("ProductTypeCode");
					this.OnProductTypeCodeChanged();
				}
			}
		}
		
		[Column(Storage="_ProductTypeName", DbType="NVarChar(100)")]
		public string ProductTypeName
		{
			get
			{
				return this._ProductTypeName;
			}
			set
			{
				if ((this._ProductTypeName != value))
				{
					this.OnProductTypeNameChanging(value);
					this.SendPropertyChanging();
					this._ProductTypeName = value;
					this.SendPropertyChanged("ProductTypeName");
					this.OnProductTypeNameChanged();
				}
			}
		}
		
		[Column(Storage="_CreateUser", DbType="NVarChar(50)")]
		public string CreateUser
		{
			get
			{
				return this._CreateUser;
			}
			set
			{
				if ((this._CreateUser != value))
				{
					this.OnCreateUserChanging(value);
					this.SendPropertyChanging();
					this._CreateUser = value;
					this.SendPropertyChanged("CreateUser");
					this.OnCreateUserChanged();
				}
			}
		}
		
		[Column(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[Column(Storage="_AlterUser", DbType="NVarChar(50)")]
		public string AlterUser
		{
			get
			{
				return this._AlterUser;
			}
			set
			{
				if ((this._AlterUser != value))
				{
					this.OnAlterUserChanging(value);
					this.SendPropertyChanging();
					this._AlterUser = value;
					this.SendPropertyChanged("AlterUser");
					this.OnAlterUserChanged();
				}
			}
		}
		
		[Column(Storage="_AlterDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AlterDate
		{
			get
			{
				return this._AlterDate;
			}
			set
			{
				if ((this._AlterDate != value))
				{
					this.OnAlterDateChanging(value);
					this.SendPropertyChanging();
					this._AlterDate = value;
					this.SendPropertyChanged("AlterDate");
					this.OnAlterDateChanged();
				}
			}
		}
		
		[Column(Storage="_Remark", DbType="NVarChar(500)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[Association(Name="QC_ProductTypeInfo_QC_ProductType_CommonDefect", Storage="_QC_ProductType_CommonDefects", ThisKey="ProductTypeCode", OtherKey="ProductTypeCode")]
		public EntitySet<QC_ProductType_CommonDefect> QC_ProductType_CommonDefects
		{
			get
			{
				return this._QC_ProductType_CommonDefects;
			}
			set
			{
				this._QC_ProductType_CommonDefects.Assign(value);
			}
		}
		
		[Association(Name="QC_ProductTypeInfo_QC_ProductType_CommonPosition", Storage="_QC_ProductType_CommonPositions", ThisKey="ProductTypeCode", OtherKey="ProductTypeCode")]
		public EntitySet<QC_ProductType_CommonPosition> QC_ProductType_CommonPositions
		{
			get
			{
				return this._QC_ProductType_CommonPositions;
			}
			set
			{
				this._QC_ProductType_CommonPositions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_QC_ProductType_CommonDefects(QC_ProductType_CommonDefect entity)
		{
			this.SendPropertyChanging();
			entity.QC_ProductTypeInfo = this;
		}
		
		private void detach_QC_ProductType_CommonDefects(QC_ProductType_CommonDefect entity)
		{
			this.SendPropertyChanging();
			entity.QC_ProductTypeInfo = null;
		}
		
		private void attach_QC_ProductType_CommonPositions(QC_ProductType_CommonPosition entity)
		{
			this.SendPropertyChanging();
			entity.QC_ProductTypeInfo = this;
		}
		
		private void detach_QC_ProductType_CommonPositions(QC_ProductType_CommonPosition entity)
		{
			this.SendPropertyChanging();
			entity.QC_ProductTypeInfo = null;
		}
	}
	
	[Table(Name="dbo.QC_ProductType_CommonDefect")]
	public partial class QC_ProductType_CommonDefect : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ProductTypeCode;
		
		private string _DefectCode;
		
		private string _CreateUser;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private EntityRef<QC_ProductTypeInfo> _QC_ProductTypeInfo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductTypeCodeChanging(string value);
    partial void OnProductTypeCodeChanged();
    partial void OnDefectCodeChanging(string value);
    partial void OnDefectCodeChanged();
    partial void OnCreateUserChanging(string value);
    partial void OnCreateUserChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    #endregion
		
		public QC_ProductType_CommonDefect()
		{
			this._QC_ProductTypeInfo = default(EntityRef<QC_ProductTypeInfo>);
			OnCreated();
		}
		
		[Column(Storage="_ProductTypeCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ProductTypeCode
		{
			get
			{
				return this._ProductTypeCode;
			}
			set
			{
				if ((this._ProductTypeCode != value))
				{
					if (this._QC_ProductTypeInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._ProductTypeCode = value;
					this.SendPropertyChanged("ProductTypeCode");
					this.OnProductTypeCodeChanged();
				}
			}
		}
		
		[Column(Storage="_DefectCode", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string DefectCode
		{
			get
			{
				return this._DefectCode;
			}
			set
			{
				if ((this._DefectCode != value))
				{
					this.OnDefectCodeChanging(value);
					this.SendPropertyChanging();
					this._DefectCode = value;
					this.SendPropertyChanged("DefectCode");
					this.OnDefectCodeChanged();
				}
			}
		}
		
		[Column(Storage="_CreateUser", DbType="NVarChar(50)")]
		public string CreateUser
		{
			get
			{
				return this._CreateUser;
			}
			set
			{
				if ((this._CreateUser != value))
				{
					this.OnCreateUserChanging(value);
					this.SendPropertyChanging();
					this._CreateUser = value;
					this.SendPropertyChanged("CreateUser");
					this.OnCreateUserChanged();
				}
			}
		}
		
		[Column(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[Association(Name="QC_ProductTypeInfo_QC_ProductType_CommonDefect", Storage="_QC_ProductTypeInfo", ThisKey="ProductTypeCode", OtherKey="ProductTypeCode", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public QC_ProductTypeInfo QC_ProductTypeInfo
		{
			get
			{
				return this._QC_ProductTypeInfo.Entity;
			}
			set
			{
				QC_ProductTypeInfo previousValue = this._QC_ProductTypeInfo.Entity;
				if (((previousValue != value) 
							|| (this._QC_ProductTypeInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QC_ProductTypeInfo.Entity = null;
						previousValue.QC_ProductType_CommonDefects.Remove(this);
					}
					this._QC_ProductTypeInfo.Entity = value;
					if ((value != null))
					{
						value.QC_ProductType_CommonDefects.Add(this);
						this._ProductTypeCode = value.ProductTypeCode;
					}
					else
					{
						this._ProductTypeCode = default(string);
					}
					this.SendPropertyChanged("QC_ProductTypeInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.QC_ProductType_CommonPosition")]
	public partial class QC_ProductType_CommonPosition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ProductTypeCode;
		
		private string _PositionCode;
		
		private string _CreateUser;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private EntityRef<QC_ProductTypeInfo> _QC_ProductTypeInfo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductTypeCodeChanging(string value);
    partial void OnProductTypeCodeChanged();
    partial void OnPositionCodeChanging(string value);
    partial void OnPositionCodeChanged();
    partial void OnCreateUserChanging(string value);
    partial void OnCreateUserChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    #endregion
		
		public QC_ProductType_CommonPosition()
		{
			this._QC_ProductTypeInfo = default(EntityRef<QC_ProductTypeInfo>);
			OnCreated();
		}
		
		[Column(Storage="_ProductTypeCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ProductTypeCode
		{
			get
			{
				return this._ProductTypeCode;
			}
			set
			{
				if ((this._ProductTypeCode != value))
				{
					if (this._QC_ProductTypeInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._ProductTypeCode = value;
					this.SendPropertyChanged("ProductTypeCode");
					this.OnProductTypeCodeChanged();
				}
			}
		}
		
		[Column(Storage="_PositionCode", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PositionCode
		{
			get
			{
				return this._PositionCode;
			}
			set
			{
				if ((this._PositionCode != value))
				{
					this.OnPositionCodeChanging(value);
					this.SendPropertyChanging();
					this._PositionCode = value;
					this.SendPropertyChanged("PositionCode");
					this.OnPositionCodeChanged();
				}
			}
		}
		
		[Column(Storage="_CreateUser", DbType="NVarChar(50)")]
		public string CreateUser
		{
			get
			{
				return this._CreateUser;
			}
			set
			{
				if ((this._CreateUser != value))
				{
					this.OnCreateUserChanging(value);
					this.SendPropertyChanging();
					this._CreateUser = value;
					this.SendPropertyChanged("CreateUser");
					this.OnCreateUserChanged();
				}
			}
		}
		
		[Column(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[Association(Name="QC_ProductTypeInfo_QC_ProductType_CommonPosition", Storage="_QC_ProductTypeInfo", ThisKey="ProductTypeCode", OtherKey="ProductTypeCode", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public QC_ProductTypeInfo QC_ProductTypeInfo
		{
			get
			{
				return this._QC_ProductTypeInfo.Entity;
			}
			set
			{
				QC_ProductTypeInfo previousValue = this._QC_ProductTypeInfo.Entity;
				if (((previousValue != value) 
							|| (this._QC_ProductTypeInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QC_ProductTypeInfo.Entity = null;
						previousValue.QC_ProductType_CommonPositions.Remove(this);
					}
					this._QC_ProductTypeInfo.Entity = value;
					if ((value != null))
					{
						value.QC_ProductType_CommonPositions.Add(this);
						this._ProductTypeCode = value.ProductTypeCode;
					}
					else
					{
						this._ProductTypeCode = default(string);
					}
					this.SendPropertyChanged("QC_ProductTypeInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.QC_ImproveActionPlan")]
	public partial class QC_ImproveActionPlan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OID;
		
		private System.Nullable<int> _SeqNo;
		
		private string _NameCN;
		
		private string _NameEn;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOIDChanging(int value);
    partial void OnOIDChanged();
    partial void OnSeqNoChanging(System.Nullable<int> value);
    partial void OnSeqNoChanged();
    partial void OnNameCNChanging(string value);
    partial void OnNameCNChanged();
    partial void OnNameEnChanging(string value);
    partial void OnNameEnChanged();
    #endregion
		
		public QC_ImproveActionPlan()
		{
			OnCreated();
		}
		
		[Column(Storage="_OID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int OID
		{
			get
			{
				return this._OID;
			}
			set
			{
				if ((this._OID != value))
				{
					this.OnOIDChanging(value);
					this.SendPropertyChanging();
					this._OID = value;
					this.SendPropertyChanged("OID");
					this.OnOIDChanged();
				}
			}
		}
		
		[Column(Storage="_SeqNo", DbType="Int")]
		public System.Nullable<int> SeqNo
		{
			get
			{
				return this._SeqNo;
			}
			set
			{
				if ((this._SeqNo != value))
				{
					this.OnSeqNoChanging(value);
					this.SendPropertyChanging();
					this._SeqNo = value;
					this.SendPropertyChanged("SeqNo");
					this.OnSeqNoChanged();
				}
			}
		}
		
		[Column(Storage="_NameCN", DbType="NVarChar(1000)")]
		public string NameCN
		{
			get
			{
				return this._NameCN;
			}
			set
			{
				if ((this._NameCN != value))
				{
					this.OnNameCNChanging(value);
					this.SendPropertyChanging();
					this._NameCN = value;
					this.SendPropertyChanged("NameCN");
					this.OnNameCNChanged();
				}
			}
		}
		
		[Column(Storage="_NameEn", DbType="NVarChar(1000)")]
		public string NameEn
		{
			get
			{
				return this._NameEn;
			}
			set
			{
				if ((this._NameEn != value))
				{
					this.OnNameEnChanging(value);
					this.SendPropertyChanging();
					this._NameEn = value;
					this.SendPropertyChanged("NameEn");
					this.OnNameEnChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.QC_Detail_Final")]
	public partial class QC_Detail_Final : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private char _QC_Light;
		
		private System.Nullable<int> _LightCount;
		
		private string _Defect_Code;
		
		private string _Problem;
		
		private string _Action_Taken;
		
		private string _SolutionCode;
		
		private string _OnOffLine;
		
		private string _Cause;
		
		private System.Guid _MasterID;
		
		private System.Guid _ID;
		
		private string _TrafficLightFlag;
		
		private System.Nullable<bool> _Processed;
		
		private string _IsReAudit;
		
		private string _ReAuditID;
		
		private string _DetailType;
		
		private EntitySet<QC_Detail_Detail_Final> _QC_Detail_Detail_Finals;
		
		private EntitySet<QC_Detail_SizeAudit_Final> _QC_Detail_SizeAudit_Finals;
		
		private EntityRef<QC_Master_Final> _QC_Master_Final;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnQC_LightChanging(char value);
    partial void OnQC_LightChanged();
    partial void OnLightCountChanging(System.Nullable<int> value);
    partial void OnLightCountChanged();
    partial void OnDefect_CodeChanging(string value);
    partial void OnDefect_CodeChanged();
    partial void OnProblemChanging(string value);
    partial void OnProblemChanged();
    partial void OnAction_TakenChanging(string value);
    partial void OnAction_TakenChanged();
    partial void OnSolutionCodeChanging(string value);
    partial void OnSolutionCodeChanged();
    partial void OnOnOffLineChanging(string value);
    partial void OnOnOffLineChanged();
    partial void OnCauseChanging(string value);
    partial void OnCauseChanged();
    partial void OnMasterIDChanging(System.Guid value);
    partial void OnMasterIDChanged();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnTrafficLightFlagChanging(string value);
    partial void OnTrafficLightFlagChanged();
    partial void OnProcessedChanging(System.Nullable<bool> value);
    partial void OnProcessedChanged();
    partial void OnIsReAuditChanging(string value);
    partial void OnIsReAuditChanged();
    partial void OnReAuditIDChanging(string value);
    partial void OnReAuditIDChanged();
    partial void OnDetailTypeChanging(string value);
    partial void OnDetailTypeChanged();
    #endregion
		
		public QC_Detail_Final()
		{
			this._QC_Detail_Detail_Finals = new EntitySet<QC_Detail_Detail_Final>(new Action<QC_Detail_Detail_Final>(this.attach_QC_Detail_Detail_Finals), new Action<QC_Detail_Detail_Final>(this.detach_QC_Detail_Detail_Finals));
			this._QC_Detail_SizeAudit_Finals = new EntitySet<QC_Detail_SizeAudit_Final>(new Action<QC_Detail_SizeAudit_Final>(this.attach_QC_Detail_SizeAudit_Finals), new Action<QC_Detail_SizeAudit_Final>(this.detach_QC_Detail_SizeAudit_Finals));
			this._QC_Master_Final = default(EntityRef<QC_Master_Final>);
			OnCreated();
		}
		
		[Column(Storage="_QC_Light", DbType="VarChar(1) NOT NULL")]
		public char QC_Light
		{
			get
			{
				return this._QC_Light;
			}
			set
			{
				if ((this._QC_Light != value))
				{
					this.OnQC_LightChanging(value);
					this.SendPropertyChanging();
					this._QC_Light = value;
					this.SendPropertyChanged("QC_Light");
					this.OnQC_LightChanged();
				}
			}
		}
		
		[Column(Storage="_LightCount", DbType="Int")]
		public System.Nullable<int> LightCount
		{
			get
			{
				return this._LightCount;
			}
			set
			{
				if ((this._LightCount != value))
				{
					this.OnLightCountChanging(value);
					this.SendPropertyChanging();
					this._LightCount = value;
					this.SendPropertyChanged("LightCount");
					this.OnLightCountChanged();
				}
			}
		}
		
		[Column(Storage="_Defect_Code", DbType="VarChar(10)")]
		public string Defect_Code
		{
			get
			{
				return this._Defect_Code;
			}
			set
			{
				if ((this._Defect_Code != value))
				{
					this.OnDefect_CodeChanging(value);
					this.SendPropertyChanging();
					this._Defect_Code = value;
					this.SendPropertyChanged("Defect_Code");
					this.OnDefect_CodeChanged();
				}
			}
		}
		
		[Column(Storage="_Problem", DbType="VarChar(1000)")]
		public string Problem
		{
			get
			{
				return this._Problem;
			}
			set
			{
				if ((this._Problem != value))
				{
					this.OnProblemChanging(value);
					this.SendPropertyChanging();
					this._Problem = value;
					this.SendPropertyChanged("Problem");
					this.OnProblemChanged();
				}
			}
		}
		
		[Column(Storage="_Action_Taken", DbType="VarChar(10)")]
		public string Action_Taken
		{
			get
			{
				return this._Action_Taken;
			}
			set
			{
				if ((this._Action_Taken != value))
				{
					this.OnAction_TakenChanging(value);
					this.SendPropertyChanging();
					this._Action_Taken = value;
					this.SendPropertyChanged("Action_Taken");
					this.OnAction_TakenChanged();
				}
			}
		}
		
		[Column(Storage="_SolutionCode", DbType="VarChar(500)")]
		public string SolutionCode
		{
			get
			{
				return this._SolutionCode;
			}
			set
			{
				if ((this._SolutionCode != value))
				{
					this.OnSolutionCodeChanging(value);
					this.SendPropertyChanging();
					this._SolutionCode = value;
					this.SendPropertyChanged("SolutionCode");
					this.OnSolutionCodeChanged();
				}
			}
		}
		
		[Column(Storage="_OnOffLine", DbType="VarChar(10)")]
		public string OnOffLine
		{
			get
			{
				return this._OnOffLine;
			}
			set
			{
				if ((this._OnOffLine != value))
				{
					this.OnOnOffLineChanging(value);
					this.SendPropertyChanging();
					this._OnOffLine = value;
					this.SendPropertyChanged("OnOffLine");
					this.OnOnOffLineChanged();
				}
			}
		}
		
		[Column(Storage="_Cause", DbType="VarChar(10)")]
		public string Cause
		{
			get
			{
				return this._Cause;
			}
			set
			{
				if ((this._Cause != value))
				{
					this.OnCauseChanging(value);
					this.SendPropertyChanging();
					this._Cause = value;
					this.SendPropertyChanged("Cause");
					this.OnCauseChanged();
				}
			}
		}
		
		[Column(Storage="_MasterID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid MasterID
		{
			get
			{
				return this._MasterID;
			}
			set
			{
				if ((this._MasterID != value))
				{
					if (this._QC_Master_Final.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMasterIDChanging(value);
					this.SendPropertyChanging();
					this._MasterID = value;
					this.SendPropertyChanged("MasterID");
					this.OnMasterIDChanged();
				}
			}
		}
		
		[Column(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_TrafficLightFlag", DbType="NVarChar(10)")]
		public string TrafficLightFlag
		{
			get
			{
				return this._TrafficLightFlag;
			}
			set
			{
				if ((this._TrafficLightFlag != value))
				{
					this.OnTrafficLightFlagChanging(value);
					this.SendPropertyChanging();
					this._TrafficLightFlag = value;
					this.SendPropertyChanged("TrafficLightFlag");
					this.OnTrafficLightFlagChanged();
				}
			}
		}
		
		[Column(Storage="_Processed", DbType="Bit")]
		public System.Nullable<bool> Processed
		{
			get
			{
				return this._Processed;
			}
			set
			{
				if ((this._Processed != value))
				{
					this.OnProcessedChanging(value);
					this.SendPropertyChanging();
					this._Processed = value;
					this.SendPropertyChanged("Processed");
					this.OnProcessedChanged();
				}
			}
		}
		
		[Column(Storage="_IsReAudit", DbType="NVarChar(50)")]
		public string IsReAudit
		{
			get
			{
				return this._IsReAudit;
			}
			set
			{
				if ((this._IsReAudit != value))
				{
					this.OnIsReAuditChanging(value);
					this.SendPropertyChanging();
					this._IsReAudit = value;
					this.SendPropertyChanged("IsReAudit");
					this.OnIsReAuditChanged();
				}
			}
		}
		
		[Column(Storage="_ReAuditID", DbType="NVarChar(40)")]
		public string ReAuditID
		{
			get
			{
				return this._ReAuditID;
			}
			set
			{
				if ((this._ReAuditID != value))
				{
					this.OnReAuditIDChanging(value);
					this.SendPropertyChanging();
					this._ReAuditID = value;
					this.SendPropertyChanged("ReAuditID");
					this.OnReAuditIDChanged();
				}
			}
		}
		
		[Column(Storage="_DetailType", DbType="NVarChar(10)")]
		public string DetailType
		{
			get
			{
				return this._DetailType;
			}
			set
			{
				if ((this._DetailType != value))
				{
					this.OnDetailTypeChanging(value);
					this.SendPropertyChanging();
					this._DetailType = value;
					this.SendPropertyChanged("DetailType");
					this.OnDetailTypeChanged();
				}
			}
		}
		
		[Association(Name="QC_Detail_Final_QC_Detail_Detail_Final", Storage="_QC_Detail_Detail_Finals", ThisKey="MasterID,ID", OtherKey="MasterID,DetailID")]
		public EntitySet<QC_Detail_Detail_Final> QC_Detail_Detail_Finals
		{
			get
			{
				return this._QC_Detail_Detail_Finals;
			}
			set
			{
				this._QC_Detail_Detail_Finals.Assign(value);
			}
		}
		
		[Association(Name="QC_Detail_Final_QC_Detail_SizeAudit_Final", Storage="_QC_Detail_SizeAudit_Finals", ThisKey="MasterID,ID", OtherKey="MasterID,DetailID")]
		public EntitySet<QC_Detail_SizeAudit_Final> QC_Detail_SizeAudit_Finals
		{
			get
			{
				return this._QC_Detail_SizeAudit_Finals;
			}
			set
			{
				this._QC_Detail_SizeAudit_Finals.Assign(value);
			}
		}
		
		[Association(Name="QC_Master_Final_QC_Detail_Final", Storage="_QC_Master_Final", ThisKey="MasterID", OtherKey="MasterID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public QC_Master_Final QC_Master_Final
		{
			get
			{
				return this._QC_Master_Final.Entity;
			}
			set
			{
				QC_Master_Final previousValue = this._QC_Master_Final.Entity;
				if (((previousValue != value) 
							|| (this._QC_Master_Final.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QC_Master_Final.Entity = null;
						previousValue.QC_Detail_Finals.Remove(this);
					}
					this._QC_Master_Final.Entity = value;
					if ((value != null))
					{
						value.QC_Detail_Finals.Add(this);
						this._MasterID = value.MasterID;
					}
					else
					{
						this._MasterID = default(System.Guid);
					}
					this.SendPropertyChanged("QC_Master_Final");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_QC_Detail_Detail_Finals(QC_Detail_Detail_Final entity)
		{
			this.SendPropertyChanging();
			entity.QC_Detail_Final = this;
		}
		
		private void detach_QC_Detail_Detail_Finals(QC_Detail_Detail_Final entity)
		{
			this.SendPropertyChanging();
			entity.QC_Detail_Final = null;
		}
		
		private void attach_QC_Detail_SizeAudit_Finals(QC_Detail_SizeAudit_Final entity)
		{
			this.SendPropertyChanging();
			entity.QC_Detail_Final = this;
		}
		
		private void detach_QC_Detail_SizeAudit_Finals(QC_Detail_SizeAudit_Final entity)
		{
			this.SendPropertyChanging();
			entity.QC_Detail_Final = null;
		}
	}
	
	[Table(Name="dbo.QC_Detail_Detail_Final")]
	public partial class QC_Detail_Detail_Final : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Guid _MasterID;
		
		private System.Guid _DetailID;
		
		private System.Nullable<int> _ProductSeq;
		
		private string _DefectCode;
		
		private System.Nullable<int> _DefectQty;
		
		private string _Worker;
		
		private string _W_procedure;
		
		private string _Problem;
		
		private string _Cause;
		
		private System.Nullable<bool> _IsFindAtSameTime;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _CreateUser;
		
		private System.Nullable<System.DateTime> _AlterDate;
		
		private string _AlterUser;
		
		private string _ImgUrl;
		
		private string _IsMainDefect;
		
		private string _DefectFromWs;
		
		private EntityRef<QC_Detail_Final> _QC_Detail_Final;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnMasterIDChanging(System.Guid value);
    partial void OnMasterIDChanged();
    partial void OnDetailIDChanging(System.Guid value);
    partial void OnDetailIDChanged();
    partial void OnProductSeqChanging(System.Nullable<int> value);
    partial void OnProductSeqChanged();
    partial void OnDefectCodeChanging(string value);
    partial void OnDefectCodeChanged();
    partial void OnDefectQtyChanging(System.Nullable<int> value);
    partial void OnDefectQtyChanged();
    partial void OnWorkerChanging(string value);
    partial void OnWorkerChanged();
    partial void OnW_procedureChanging(string value);
    partial void OnW_procedureChanged();
    partial void OnProblemChanging(string value);
    partial void OnProblemChanged();
    partial void OnCauseChanging(string value);
    partial void OnCauseChanged();
    partial void OnIsFindAtSameTimeChanging(System.Nullable<bool> value);
    partial void OnIsFindAtSameTimeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnCreateUserChanging(string value);
    partial void OnCreateUserChanged();
    partial void OnAlterDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAlterDateChanged();
    partial void OnAlterUserChanging(string value);
    partial void OnAlterUserChanged();
    partial void OnImgUrlChanging(string value);
    partial void OnImgUrlChanged();
    partial void OnIsMainDefectChanging(string value);
    partial void OnIsMainDefectChanged();
    partial void OnDefectFromWsChanging(string value);
    partial void OnDefectFromWsChanged();
    #endregion
		
		public QC_Detail_Detail_Final()
		{
			this._QC_Detail_Final = default(EntityRef<QC_Detail_Final>);
			OnCreated();
		}
		
		[Column(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_MasterID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid MasterID
		{
			get
			{
				return this._MasterID;
			}
			set
			{
				if ((this._MasterID != value))
				{
					if (this._QC_Detail_Final.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMasterIDChanging(value);
					this.SendPropertyChanging();
					this._MasterID = value;
					this.SendPropertyChanged("MasterID");
					this.OnMasterIDChanged();
				}
			}
		}
		
		[Column(Storage="_DetailID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid DetailID
		{
			get
			{
				return this._DetailID;
			}
			set
			{
				if ((this._DetailID != value))
				{
					if (this._QC_Detail_Final.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDetailIDChanging(value);
					this.SendPropertyChanging();
					this._DetailID = value;
					this.SendPropertyChanged("DetailID");
					this.OnDetailIDChanged();
				}
			}
		}
		
		[Column(Storage="_ProductSeq", DbType="Int")]
		public System.Nullable<int> ProductSeq
		{
			get
			{
				return this._ProductSeq;
			}
			set
			{
				if ((this._ProductSeq != value))
				{
					this.OnProductSeqChanging(value);
					this.SendPropertyChanging();
					this._ProductSeq = value;
					this.SendPropertyChanged("ProductSeq");
					this.OnProductSeqChanged();
				}
			}
		}
		
		[Column(Storage="_DefectCode", DbType="NVarChar(50)")]
		public string DefectCode
		{
			get
			{
				return this._DefectCode;
			}
			set
			{
				if ((this._DefectCode != value))
				{
					this.OnDefectCodeChanging(value);
					this.SendPropertyChanging();
					this._DefectCode = value;
					this.SendPropertyChanged("DefectCode");
					this.OnDefectCodeChanged();
				}
			}
		}
		
		[Column(Storage="_DefectQty", DbType="Int")]
		public System.Nullable<int> DefectQty
		{
			get
			{
				return this._DefectQty;
			}
			set
			{
				if ((this._DefectQty != value))
				{
					this.OnDefectQtyChanging(value);
					this.SendPropertyChanging();
					this._DefectQty = value;
					this.SendPropertyChanged("DefectQty");
					this.OnDefectQtyChanged();
				}
			}
		}
		
		[Column(Storage="_Worker", DbType="NVarChar(50)")]
		public string Worker
		{
			get
			{
				return this._Worker;
			}
			set
			{
				if ((this._Worker != value))
				{
					this.OnWorkerChanging(value);
					this.SendPropertyChanging();
					this._Worker = value;
					this.SendPropertyChanged("Worker");
					this.OnWorkerChanged();
				}
			}
		}
		
		[Column(Storage="_W_procedure", DbType="NVarChar(50)")]
		public string W_procedure
		{
			get
			{
				return this._W_procedure;
			}
			set
			{
				if ((this._W_procedure != value))
				{
					this.OnW_procedureChanging(value);
					this.SendPropertyChanging();
					this._W_procedure = value;
					this.SendPropertyChanged("W_procedure");
					this.OnW_procedureChanged();
				}
			}
		}
		
		[Column(Storage="_Problem", DbType="NVarChar(50)")]
		public string Problem
		{
			get
			{
				return this._Problem;
			}
			set
			{
				if ((this._Problem != value))
				{
					this.OnProblemChanging(value);
					this.SendPropertyChanging();
					this._Problem = value;
					this.SendPropertyChanged("Problem");
					this.OnProblemChanged();
				}
			}
		}
		
		[Column(Storage="_Cause", DbType="NVarChar(50)")]
		public string Cause
		{
			get
			{
				return this._Cause;
			}
			set
			{
				if ((this._Cause != value))
				{
					this.OnCauseChanging(value);
					this.SendPropertyChanging();
					this._Cause = value;
					this.SendPropertyChanged("Cause");
					this.OnCauseChanged();
				}
			}
		}
		
		[Column(Storage="_IsFindAtSameTime", DbType="Bit")]
		public System.Nullable<bool> IsFindAtSameTime
		{
			get
			{
				return this._IsFindAtSameTime;
			}
			set
			{
				if ((this._IsFindAtSameTime != value))
				{
					this.OnIsFindAtSameTimeChanging(value);
					this.SendPropertyChanging();
					this._IsFindAtSameTime = value;
					this.SendPropertyChanged("IsFindAtSameTime");
					this.OnIsFindAtSameTimeChanged();
				}
			}
		}
		
		[Column(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[Column(Storage="_CreateUser", DbType="NVarChar(50)")]
		public string CreateUser
		{
			get
			{
				return this._CreateUser;
			}
			set
			{
				if ((this._CreateUser != value))
				{
					this.OnCreateUserChanging(value);
					this.SendPropertyChanging();
					this._CreateUser = value;
					this.SendPropertyChanged("CreateUser");
					this.OnCreateUserChanged();
				}
			}
		}
		
		[Column(Storage="_AlterDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AlterDate
		{
			get
			{
				return this._AlterDate;
			}
			set
			{
				if ((this._AlterDate != value))
				{
					this.OnAlterDateChanging(value);
					this.SendPropertyChanging();
					this._AlterDate = value;
					this.SendPropertyChanged("AlterDate");
					this.OnAlterDateChanged();
				}
			}
		}
		
		[Column(Storage="_AlterUser", DbType="NVarChar(50)")]
		public string AlterUser
		{
			get
			{
				return this._AlterUser;
			}
			set
			{
				if ((this._AlterUser != value))
				{
					this.OnAlterUserChanging(value);
					this.SendPropertyChanging();
					this._AlterUser = value;
					this.SendPropertyChanged("AlterUser");
					this.OnAlterUserChanged();
				}
			}
		}
		
		[Column(Storage="_ImgUrl", DbType="NVarChar(100)")]
		public string ImgUrl
		{
			get
			{
				return this._ImgUrl;
			}
			set
			{
				if ((this._ImgUrl != value))
				{
					this.OnImgUrlChanging(value);
					this.SendPropertyChanging();
					this._ImgUrl = value;
					this.SendPropertyChanged("ImgUrl");
					this.OnImgUrlChanged();
				}
			}
		}
		
		[Column(Storage="_IsMainDefect", DbType="NVarChar(5)")]
		public string IsMainDefect
		{
			get
			{
				return this._IsMainDefect;
			}
			set
			{
				if ((this._IsMainDefect != value))
				{
					this.OnIsMainDefectChanging(value);
					this.SendPropertyChanging();
					this._IsMainDefect = value;
					this.SendPropertyChanged("IsMainDefect");
					this.OnIsMainDefectChanged();
				}
			}
		}
		
		[Column(Storage="_DefectFromWs", DbType="NVarChar(50)")]
		public string DefectFromWs
		{
			get
			{
				return this._DefectFromWs;
			}
			set
			{
				if ((this._DefectFromWs != value))
				{
					this.OnDefectFromWsChanging(value);
					this.SendPropertyChanging();
					this._DefectFromWs = value;
					this.SendPropertyChanged("DefectFromWs");
					this.OnDefectFromWsChanged();
				}
			}
		}
		
		[Association(Name="QC_Detail_Final_QC_Detail_Detail_Final", Storage="_QC_Detail_Final", ThisKey="MasterID,DetailID", OtherKey="MasterID,ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public QC_Detail_Final QC_Detail_Final
		{
			get
			{
				return this._QC_Detail_Final.Entity;
			}
			set
			{
				QC_Detail_Final previousValue = this._QC_Detail_Final.Entity;
				if (((previousValue != value) 
							|| (this._QC_Detail_Final.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QC_Detail_Final.Entity = null;
						previousValue.QC_Detail_Detail_Finals.Remove(this);
					}
					this._QC_Detail_Final.Entity = value;
					if ((value != null))
					{
						value.QC_Detail_Detail_Finals.Add(this);
						this._MasterID = value.MasterID;
						this._DetailID = value.ID;
					}
					else
					{
						this._MasterID = default(System.Guid);
						this._DetailID = default(System.Guid);
					}
					this.SendPropertyChanged("QC_Detail_Final");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.QC_Master_Final")]
	public partial class QC_Master_Final : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Line;
		
		private string _Project;
		
		private string _WO;
		
		private string _RWO;
		
		private string _Style;
		
		private System.Nullable<System.DateTime> _QC_time;
		
		private System.Nullable<int> _QNQty;
		
		private System.Nullable<int> _QCCount;
		
		private string _QCMan;
		
		private string _QNNo;
		
		private string _BoxNo;
		
		private string _Color;
		
		private string _Size;
		
		private string _WOc;
		
		private System.Guid _MasterID;
		
		private string _Factory;
		
		private string _WorkShop;
		
		private string _ArtNO;
		
		private string _QCRoleCode;
		
		private string _QNSeq;
		
		private System.Nullable<int> _ProductQty;
		
		private System.Nullable<int> _ProductBoxQty;
		
		private System.Nullable<int> _AuditBoxQty;
		
		private string _AuditType;
		
		private string _SubAuditType;
		
		private System.Nullable<int> _PassLevel;
		
		private System.Nullable<int> _SubPassLevel;
		
		private string _AuditResult;
		
		private string _QCType;
		
		private string _AssignUser;
		
		private System.Nullable<System.DateTime> _AssignDate;
		
		private System.Nullable<bool> _IsFinishInput;
		
		private string _ProductTypeCode;
		
		private string _WsConfirm;
		
		private string _QAConfirm;
		
		private string _SIConfirm;
		
		private string _ImproveActionPlan;
		
		private EntitySet<QC_Detail_Final> _QC_Detail_Finals;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLineChanging(string value);
    partial void OnLineChanged();
    partial void OnProjectChanging(string value);
    partial void OnProjectChanged();
    partial void OnWOChanging(string value);
    partial void OnWOChanged();
    partial void OnRWOChanging(string value);
    partial void OnRWOChanged();
    partial void OnStyleChanging(string value);
    partial void OnStyleChanged();
    partial void OnQC_timeChanging(System.Nullable<System.DateTime> value);
    partial void OnQC_timeChanged();
    partial void OnQNQtyChanging(System.Nullable<int> value);
    partial void OnQNQtyChanged();
    partial void OnQCCountChanging(System.Nullable<int> value);
    partial void OnQCCountChanged();
    partial void OnQCManChanging(string value);
    partial void OnQCManChanged();
    partial void OnQNNoChanging(string value);
    partial void OnQNNoChanged();
    partial void OnBoxNoChanging(string value);
    partial void OnBoxNoChanged();
    partial void OnColorChanging(string value);
    partial void OnColorChanged();
    partial void OnSizeChanging(string value);
    partial void OnSizeChanged();
    partial void OnWOcChanging(string value);
    partial void OnWOcChanged();
    partial void OnMasterIDChanging(System.Guid value);
    partial void OnMasterIDChanged();
    partial void OnFactoryChanging(string value);
    partial void OnFactoryChanged();
    partial void OnWorkShopChanging(string value);
    partial void OnWorkShopChanged();
    partial void OnArtNOChanging(string value);
    partial void OnArtNOChanged();
    partial void OnQCRoleCodeChanging(string value);
    partial void OnQCRoleCodeChanged();
    partial void OnQNSeqChanging(string value);
    partial void OnQNSeqChanged();
    partial void OnProductQtyChanging(System.Nullable<int> value);
    partial void OnProductQtyChanged();
    partial void OnProductBoxQtyChanging(System.Nullable<int> value);
    partial void OnProductBoxQtyChanged();
    partial void OnAuditBoxQtyChanging(System.Nullable<int> value);
    partial void OnAuditBoxQtyChanged();
    partial void OnAuditTypeChanging(string value);
    partial void OnAuditTypeChanged();
    partial void OnSubAuditTypeChanging(string value);
    partial void OnSubAuditTypeChanged();
    partial void OnPassLevelChanging(System.Nullable<int> value);
    partial void OnPassLevelChanged();
    partial void OnSubPassLevelChanging(System.Nullable<int> value);
    partial void OnSubPassLevelChanged();
    partial void OnAuditResultChanging(string value);
    partial void OnAuditResultChanged();
    partial void OnQCTypeChanging(string value);
    partial void OnQCTypeChanged();
    partial void OnAssignUserChanging(string value);
    partial void OnAssignUserChanged();
    partial void OnAssignDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAssignDateChanged();
    partial void OnIsFinishInputChanging(System.Nullable<bool> value);
    partial void OnIsFinishInputChanged();
    partial void OnProductTypeCodeChanging(string value);
    partial void OnProductTypeCodeChanged();
    partial void OnWsConfirmChanging(string value);
    partial void OnWsConfirmChanged();
    partial void OnQAConfirmChanging(string value);
    partial void OnQAConfirmChanged();
    partial void OnSIConfirmChanging(string value);
    partial void OnSIConfirmChanged();
    partial void OnImproveActionPlanChanging(string value);
    partial void OnImproveActionPlanChanged();
    #endregion
		
		public QC_Master_Final()
		{
			this._QC_Detail_Finals = new EntitySet<QC_Detail_Final>(new Action<QC_Detail_Final>(this.attach_QC_Detail_Finals), new Action<QC_Detail_Final>(this.detach_QC_Detail_Finals));
			OnCreated();
		}
		
		[Column(Storage="_Line", DbType="VarChar(8)")]
		public string Line
		{
			get
			{
				return this._Line;
			}
			set
			{
				if ((this._Line != value))
				{
					this.OnLineChanging(value);
					this.SendPropertyChanging();
					this._Line = value;
					this.SendPropertyChanged("Line");
					this.OnLineChanged();
				}
			}
		}
		
		[Column(Storage="_Project", DbType="VarChar(20)")]
		public string Project
		{
			get
			{
				return this._Project;
			}
			set
			{
				if ((this._Project != value))
				{
					this.OnProjectChanging(value);
					this.SendPropertyChanging();
					this._Project = value;
					this.SendPropertyChanged("Project");
					this.OnProjectChanged();
				}
			}
		}
		
		[Column(Storage="_WO", DbType="VarChar(20)")]
		public string WO
		{
			get
			{
				return this._WO;
			}
			set
			{
				if ((this._WO != value))
				{
					this.OnWOChanging(value);
					this.SendPropertyChanging();
					this._WO = value;
					this.SendPropertyChanged("WO");
					this.OnWOChanged();
				}
			}
		}
		
		[Column(Storage="_RWO", DbType="VarChar(20)")]
		public string RWO
		{
			get
			{
				return this._RWO;
			}
			set
			{
				if ((this._RWO != value))
				{
					this.OnRWOChanging(value);
					this.SendPropertyChanging();
					this._RWO = value;
					this.SendPropertyChanged("RWO");
					this.OnRWOChanged();
				}
			}
		}
		
		[Column(Storage="_Style", DbType="VarChar(20)")]
		public string Style
		{
			get
			{
				return this._Style;
			}
			set
			{
				if ((this._Style != value))
				{
					this.OnStyleChanging(value);
					this.SendPropertyChanging();
					this._Style = value;
					this.SendPropertyChanged("Style");
					this.OnStyleChanged();
				}
			}
		}
		
		[Column(Storage="_QC_time", DbType="DateTime")]
		public System.Nullable<System.DateTime> QC_time
		{
			get
			{
				return this._QC_time;
			}
			set
			{
				if ((this._QC_time != value))
				{
					this.OnQC_timeChanging(value);
					this.SendPropertyChanging();
					this._QC_time = value;
					this.SendPropertyChanged("QC_time");
					this.OnQC_timeChanged();
				}
			}
		}
		
		[Column(Storage="_QNQty", DbType="Int")]
		public System.Nullable<int> QNQty
		{
			get
			{
				return this._QNQty;
			}
			set
			{
				if ((this._QNQty != value))
				{
					this.OnQNQtyChanging(value);
					this.SendPropertyChanging();
					this._QNQty = value;
					this.SendPropertyChanged("QNQty");
					this.OnQNQtyChanged();
				}
			}
		}
		
		[Column(Storage="_QCCount", DbType="Int")]
		public System.Nullable<int> QCCount
		{
			get
			{
				return this._QCCount;
			}
			set
			{
				if ((this._QCCount != value))
				{
					this.OnQCCountChanging(value);
					this.SendPropertyChanging();
					this._QCCount = value;
					this.SendPropertyChanged("QCCount");
					this.OnQCCountChanged();
				}
			}
		}
		
		[Column(Storage="_QCMan", DbType="VarChar(20)")]
		public string QCMan
		{
			get
			{
				return this._QCMan;
			}
			set
			{
				if ((this._QCMan != value))
				{
					this.OnQCManChanging(value);
					this.SendPropertyChanging();
					this._QCMan = value;
					this.SendPropertyChanged("QCMan");
					this.OnQCManChanged();
				}
			}
		}
		
		[Column(Storage="_QNNo", DbType="VarChar(10)")]
		public string QNNo
		{
			get
			{
				return this._QNNo;
			}
			set
			{
				if ((this._QNNo != value))
				{
					this.OnQNNoChanging(value);
					this.SendPropertyChanging();
					this._QNNo = value;
					this.SendPropertyChanged("QNNo");
					this.OnQNNoChanged();
				}
			}
		}
		
		[Column(Storage="_BoxNo", DbType="VarChar(10)")]
		public string BoxNo
		{
			get
			{
				return this._BoxNo;
			}
			set
			{
				if ((this._BoxNo != value))
				{
					this.OnBoxNoChanging(value);
					this.SendPropertyChanging();
					this._BoxNo = value;
					this.SendPropertyChanged("BoxNo");
					this.OnBoxNoChanged();
				}
			}
		}
		
		[Column(Storage="_Color", DbType="VarChar(20)")]
		public string Color
		{
			get
			{
				return this._Color;
			}
			set
			{
				if ((this._Color != value))
				{
					this.OnColorChanging(value);
					this.SendPropertyChanging();
					this._Color = value;
					this.SendPropertyChanged("Color");
					this.OnColorChanged();
				}
			}
		}
		
		[Column(Storage="_Size", DbType="VarChar(200)")]
		public string Size
		{
			get
			{
				return this._Size;
			}
			set
			{
				if ((this._Size != value))
				{
					this.OnSizeChanging(value);
					this.SendPropertyChanging();
					this._Size = value;
					this.SendPropertyChanged("Size");
					this.OnSizeChanged();
				}
			}
		}
		
		[Column(Storage="_WOc", DbType="VarChar(20)")]
		public string WOc
		{
			get
			{
				return this._WOc;
			}
			set
			{
				if ((this._WOc != value))
				{
					this.OnWOcChanging(value);
					this.SendPropertyChanging();
					this._WOc = value;
					this.SendPropertyChanged("WOc");
					this.OnWOcChanged();
				}
			}
		}
		
		[Column(Storage="_MasterID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid MasterID
		{
			get
			{
				return this._MasterID;
			}
			set
			{
				if ((this._MasterID != value))
				{
					this.OnMasterIDChanging(value);
					this.SendPropertyChanging();
					this._MasterID = value;
					this.SendPropertyChanged("MasterID");
					this.OnMasterIDChanged();
				}
			}
		}
		
		[Column(Storage="_Factory", DbType="VarChar(20)")]
		public string Factory
		{
			get
			{
				return this._Factory;
			}
			set
			{
				if ((this._Factory != value))
				{
					this.OnFactoryChanging(value);
					this.SendPropertyChanging();
					this._Factory = value;
					this.SendPropertyChanged("Factory");
					this.OnFactoryChanged();
				}
			}
		}
		
		[Column(Storage="_WorkShop", DbType="VarChar(20)")]
		public string WorkShop
		{
			get
			{
				return this._WorkShop;
			}
			set
			{
				if ((this._WorkShop != value))
				{
					this.OnWorkShopChanging(value);
					this.SendPropertyChanging();
					this._WorkShop = value;
					this.SendPropertyChanged("WorkShop");
					this.OnWorkShopChanged();
				}
			}
		}
		
		[Column(Storage="_ArtNO", DbType="NVarChar(20)")]
		public string ArtNO
		{
			get
			{
				return this._ArtNO;
			}
			set
			{
				if ((this._ArtNO != value))
				{
					this.OnArtNOChanging(value);
					this.SendPropertyChanging();
					this._ArtNO = value;
					this.SendPropertyChanged("ArtNO");
					this.OnArtNOChanged();
				}
			}
		}
		
		[Column(Storage="_QCRoleCode", DbType="NVarChar(50)")]
		public string QCRoleCode
		{
			get
			{
				return this._QCRoleCode;
			}
			set
			{
				if ((this._QCRoleCode != value))
				{
					this.OnQCRoleCodeChanging(value);
					this.SendPropertyChanging();
					this._QCRoleCode = value;
					this.SendPropertyChanged("QCRoleCode");
					this.OnQCRoleCodeChanged();
				}
			}
		}
		
		[Column(Storage="_QNSeq", DbType="NVarChar(50)")]
		public string QNSeq
		{
			get
			{
				return this._QNSeq;
			}
			set
			{
				if ((this._QNSeq != value))
				{
					this.OnQNSeqChanging(value);
					this.SendPropertyChanging();
					this._QNSeq = value;
					this.SendPropertyChanged("QNSeq");
					this.OnQNSeqChanged();
				}
			}
		}
		
		[Column(Storage="_ProductQty", DbType="Int")]
		public System.Nullable<int> ProductQty
		{
			get
			{
				return this._ProductQty;
			}
			set
			{
				if ((this._ProductQty != value))
				{
					this.OnProductQtyChanging(value);
					this.SendPropertyChanging();
					this._ProductQty = value;
					this.SendPropertyChanged("ProductQty");
					this.OnProductQtyChanged();
				}
			}
		}
		
		[Column(Storage="_ProductBoxQty", DbType="Int")]
		public System.Nullable<int> ProductBoxQty
		{
			get
			{
				return this._ProductBoxQty;
			}
			set
			{
				if ((this._ProductBoxQty != value))
				{
					this.OnProductBoxQtyChanging(value);
					this.SendPropertyChanging();
					this._ProductBoxQty = value;
					this.SendPropertyChanged("ProductBoxQty");
					this.OnProductBoxQtyChanged();
				}
			}
		}
		
		[Column(Storage="_AuditBoxQty", DbType="Int")]
		public System.Nullable<int> AuditBoxQty
		{
			get
			{
				return this._AuditBoxQty;
			}
			set
			{
				if ((this._AuditBoxQty != value))
				{
					this.OnAuditBoxQtyChanging(value);
					this.SendPropertyChanging();
					this._AuditBoxQty = value;
					this.SendPropertyChanged("AuditBoxQty");
					this.OnAuditBoxQtyChanged();
				}
			}
		}
		
		[Column(Storage="_AuditType", DbType="NVarChar(20)")]
		public string AuditType
		{
			get
			{
				return this._AuditType;
			}
			set
			{
				if ((this._AuditType != value))
				{
					this.OnAuditTypeChanging(value);
					this.SendPropertyChanging();
					this._AuditType = value;
					this.SendPropertyChanged("AuditType");
					this.OnAuditTypeChanged();
				}
			}
		}
		
		[Column(Storage="_SubAuditType", DbType="NVarChar(20)")]
		public string SubAuditType
		{
			get
			{
				return this._SubAuditType;
			}
			set
			{
				if ((this._SubAuditType != value))
				{
					this.OnSubAuditTypeChanging(value);
					this.SendPropertyChanging();
					this._SubAuditType = value;
					this.SendPropertyChanged("SubAuditType");
					this.OnSubAuditTypeChanged();
				}
			}
		}
		
		[Column(Storage="_PassLevel", DbType="Int")]
		public System.Nullable<int> PassLevel
		{
			get
			{
				return this._PassLevel;
			}
			set
			{
				if ((this._PassLevel != value))
				{
					this.OnPassLevelChanging(value);
					this.SendPropertyChanging();
					this._PassLevel = value;
					this.SendPropertyChanged("PassLevel");
					this.OnPassLevelChanged();
				}
			}
		}
		
		[Column(Storage="_SubPassLevel", DbType="Int")]
		public System.Nullable<int> SubPassLevel
		{
			get
			{
				return this._SubPassLevel;
			}
			set
			{
				if ((this._SubPassLevel != value))
				{
					this.OnSubPassLevelChanging(value);
					this.SendPropertyChanging();
					this._SubPassLevel = value;
					this.SendPropertyChanged("SubPassLevel");
					this.OnSubPassLevelChanged();
				}
			}
		}
		
		[Column(Storage="_AuditResult", DbType="NVarChar(20)")]
		public string AuditResult
		{
			get
			{
				return this._AuditResult;
			}
			set
			{
				if ((this._AuditResult != value))
				{
					this.OnAuditResultChanging(value);
					this.SendPropertyChanging();
					this._AuditResult = value;
					this.SendPropertyChanged("AuditResult");
					this.OnAuditResultChanged();
				}
			}
		}
		
		[Column(Storage="_QCType", DbType="NVarChar(20)")]
		public string QCType
		{
			get
			{
				return this._QCType;
			}
			set
			{
				if ((this._QCType != value))
				{
					this.OnQCTypeChanging(value);
					this.SendPropertyChanging();
					this._QCType = value;
					this.SendPropertyChanged("QCType");
					this.OnQCTypeChanged();
				}
			}
		}
		
		[Column(Storage="_AssignUser", DbType="NVarChar(50)")]
		public string AssignUser
		{
			get
			{
				return this._AssignUser;
			}
			set
			{
				if ((this._AssignUser != value))
				{
					this.OnAssignUserChanging(value);
					this.SendPropertyChanging();
					this._AssignUser = value;
					this.SendPropertyChanged("AssignUser");
					this.OnAssignUserChanged();
				}
			}
		}
		
		[Column(Storage="_AssignDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AssignDate
		{
			get
			{
				return this._AssignDate;
			}
			set
			{
				if ((this._AssignDate != value))
				{
					this.OnAssignDateChanging(value);
					this.SendPropertyChanging();
					this._AssignDate = value;
					this.SendPropertyChanged("AssignDate");
					this.OnAssignDateChanged();
				}
			}
		}
		
		[Column(Storage="_IsFinishInput", DbType="Bit")]
		public System.Nullable<bool> IsFinishInput
		{
			get
			{
				return this._IsFinishInput;
			}
			set
			{
				if ((this._IsFinishInput != value))
				{
					this.OnIsFinishInputChanging(value);
					this.SendPropertyChanging();
					this._IsFinishInput = value;
					this.SendPropertyChanged("IsFinishInput");
					this.OnIsFinishInputChanged();
				}
			}
		}
		
		[Column(Storage="_ProductTypeCode", DbType="NVarChar(10)")]
		public string ProductTypeCode
		{
			get
			{
				return this._ProductTypeCode;
			}
			set
			{
				if ((this._ProductTypeCode != value))
				{
					this.OnProductTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._ProductTypeCode = value;
					this.SendPropertyChanged("ProductTypeCode");
					this.OnProductTypeCodeChanged();
				}
			}
		}
		
		[Column(Storage="_WsConfirm", DbType="NVarChar(20)")]
		public string WsConfirm
		{
			get
			{
				return this._WsConfirm;
			}
			set
			{
				if ((this._WsConfirm != value))
				{
					this.OnWsConfirmChanging(value);
					this.SendPropertyChanging();
					this._WsConfirm = value;
					this.SendPropertyChanged("WsConfirm");
					this.OnWsConfirmChanged();
				}
			}
		}
		
		[Column(Storage="_QAConfirm", DbType="NVarChar(20)")]
		public string QAConfirm
		{
			get
			{
				return this._QAConfirm;
			}
			set
			{
				if ((this._QAConfirm != value))
				{
					this.OnQAConfirmChanging(value);
					this.SendPropertyChanging();
					this._QAConfirm = value;
					this.SendPropertyChanged("QAConfirm");
					this.OnQAConfirmChanged();
				}
			}
		}
		
		[Column(Storage="_SIConfirm", DbType="NVarChar(20)")]
		public string SIConfirm
		{
			get
			{
				return this._SIConfirm;
			}
			set
			{
				if ((this._SIConfirm != value))
				{
					this.OnSIConfirmChanging(value);
					this.SendPropertyChanging();
					this._SIConfirm = value;
					this.SendPropertyChanged("SIConfirm");
					this.OnSIConfirmChanged();
				}
			}
		}
		
		[Column(Storage="_ImproveActionPlan", DbType="NVarChar(MAX)")]
		public string ImproveActionPlan
		{
			get
			{
				return this._ImproveActionPlan;
			}
			set
			{
				if ((this._ImproveActionPlan != value))
				{
					this.OnImproveActionPlanChanging(value);
					this.SendPropertyChanging();
					this._ImproveActionPlan = value;
					this.SendPropertyChanged("ImproveActionPlan");
					this.OnImproveActionPlanChanged();
				}
			}
		}
		
		[Association(Name="QC_Master_Final_QC_Detail_Final", Storage="_QC_Detail_Finals", ThisKey="MasterID", OtherKey="MasterID")]
		public EntitySet<QC_Detail_Final> QC_Detail_Finals
		{
			get
			{
				return this._QC_Detail_Finals;
			}
			set
			{
				this._QC_Detail_Finals.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_QC_Detail_Finals(QC_Detail_Final entity)
		{
			this.SendPropertyChanging();
			entity.QC_Master_Final = this;
		}
		
		private void detach_QC_Detail_Finals(QC_Detail_Final entity)
		{
			this.SendPropertyChanging();
			entity.QC_Master_Final = null;
		}
	}
	
	[Table(Name="dbo.QC_Defect")]
	public partial class QC_Defect : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Defect_Type;
		
		private string _Defect_Code;
		
		private string _Defect_Spec;
		
		private string _Remark;
		
		private string _Desc_EN;
		
		private string _Desc_TH;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDefect_TypeChanging(int value);
    partial void OnDefect_TypeChanged();
    partial void OnDefect_CodeChanging(string value);
    partial void OnDefect_CodeChanged();
    partial void OnDefect_SpecChanging(string value);
    partial void OnDefect_SpecChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnDesc_ENChanging(string value);
    partial void OnDesc_ENChanged();
    partial void OnDesc_THChanging(string value);
    partial void OnDesc_THChanged();
    #endregion
		
		public QC_Defect()
		{
			OnCreated();
		}
		
		[Column(Storage="_Defect_Type", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Defect_Type
		{
			get
			{
				return this._Defect_Type;
			}
			set
			{
				if ((this._Defect_Type != value))
				{
					this.OnDefect_TypeChanging(value);
					this.SendPropertyChanging();
					this._Defect_Type = value;
					this.SendPropertyChanged("Defect_Type");
					this.OnDefect_TypeChanged();
				}
			}
		}
		
		[Column(Storage="_Defect_Code", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Defect_Code
		{
			get
			{
				return this._Defect_Code;
			}
			set
			{
				if ((this._Defect_Code != value))
				{
					this.OnDefect_CodeChanging(value);
					this.SendPropertyChanging();
					this._Defect_Code = value;
					this.SendPropertyChanged("Defect_Code");
					this.OnDefect_CodeChanged();
				}
			}
		}
		
		[Column(Storage="_Defect_Spec", DbType="VarChar(200)")]
		public string Defect_Spec
		{
			get
			{
				return this._Defect_Spec;
			}
			set
			{
				if ((this._Defect_Spec != value))
				{
					this.OnDefect_SpecChanging(value);
					this.SendPropertyChanging();
					this._Defect_Spec = value;
					this.SendPropertyChanged("Defect_Spec");
					this.OnDefect_SpecChanged();
				}
			}
		}
		
		[Column(Storage="_Remark", DbType="NVarChar(50)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[Column(Storage="_Desc_EN", DbType="NVarChar(200)")]
		public string Desc_EN
		{
			get
			{
				return this._Desc_EN;
			}
			set
			{
				if ((this._Desc_EN != value))
				{
					this.OnDesc_ENChanging(value);
					this.SendPropertyChanging();
					this._Desc_EN = value;
					this.SendPropertyChanged("Desc_EN");
					this.OnDesc_ENChanged();
				}
			}
		}
		
		[Column(Storage="_Desc_TH", DbType="NVarChar(200)")]
		public string Desc_TH
		{
			get
			{
				return this._Desc_TH;
			}
			set
			{
				if ((this._Desc_TH != value))
				{
					this.OnDesc_THChanging(value);
					this.SendPropertyChanging();
					this._Desc_TH = value;
					this.SendPropertyChanged("Desc_TH");
					this.OnDesc_THChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.FirstPass_Detail")]
	public partial class FirstPass_Detail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _OID;
		
		private System.Nullable<long> _HeaderOID;
		
		private string _Workshop;
		
		private string _QCTime;
		
		private string _DefectName;
		
		private EntityRef<FirstPass_Header> _FirstPass_Header;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOIDChanging(long value);
    partial void OnOIDChanged();
    partial void OnHeaderOIDChanging(System.Nullable<long> value);
    partial void OnHeaderOIDChanged();
    partial void OnWorkshopChanging(string value);
    partial void OnWorkshopChanged();
    partial void OnQCTimeChanging(string value);
    partial void OnQCTimeChanged();
    partial void OnDefectNameChanging(string value);
    partial void OnDefectNameChanged();
    #endregion
		
		public FirstPass_Detail()
		{
			this._FirstPass_Header = default(EntityRef<FirstPass_Header>);
			OnCreated();
		}
		
		[Column(Storage="_OID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long OID
		{
			get
			{
				return this._OID;
			}
			set
			{
				if ((this._OID != value))
				{
					this.OnOIDChanging(value);
					this.SendPropertyChanging();
					this._OID = value;
					this.SendPropertyChanged("OID");
					this.OnOIDChanged();
				}
			}
		}
		
		[Column(Storage="_HeaderOID", DbType="BigInt")]
		public System.Nullable<long> HeaderOID
		{
			get
			{
				return this._HeaderOID;
			}
			set
			{
				if ((this._HeaderOID != value))
				{
					if (this._FirstPass_Header.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHeaderOIDChanging(value);
					this.SendPropertyChanging();
					this._HeaderOID = value;
					this.SendPropertyChanged("HeaderOID");
					this.OnHeaderOIDChanged();
				}
			}
		}
		
		[Column(Storage="_Workshop", DbType="VarChar(20)")]
		public string Workshop
		{
			get
			{
				return this._Workshop;
			}
			set
			{
				if ((this._Workshop != value))
				{
					this.OnWorkshopChanging(value);
					this.SendPropertyChanging();
					this._Workshop = value;
					this.SendPropertyChanged("Workshop");
					this.OnWorkshopChanged();
				}
			}
		}
		
		[Column(Storage="_QCTime", DbType="VarChar(100)")]
		public string QCTime
		{
			get
			{
				return this._QCTime;
			}
			set
			{
				if ((this._QCTime != value))
				{
					this.OnQCTimeChanging(value);
					this.SendPropertyChanging();
					this._QCTime = value;
					this.SendPropertyChanged("QCTime");
					this.OnQCTimeChanged();
				}
			}
		}
		
		[Column(Storage="_DefectName", DbType="NVarChar(500)")]
		public string DefectName
		{
			get
			{
				return this._DefectName;
			}
			set
			{
				if ((this._DefectName != value))
				{
					this.OnDefectNameChanging(value);
					this.SendPropertyChanging();
					this._DefectName = value;
					this.SendPropertyChanged("DefectName");
					this.OnDefectNameChanged();
				}
			}
		}
		
		[Association(Name="FirstPass_Header_FirstPass_Detail", Storage="_FirstPass_Header", ThisKey="HeaderOID", OtherKey="OID", IsForeignKey=true, DeleteRule="CASCADE")]
		public FirstPass_Header FirstPass_Header
		{
			get
			{
				return this._FirstPass_Header.Entity;
			}
			set
			{
				FirstPass_Header previousValue = this._FirstPass_Header.Entity;
				if (((previousValue != value) 
							|| (this._FirstPass_Header.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FirstPass_Header.Entity = null;
						previousValue.FirstPass_Details.Remove(this);
					}
					this._FirstPass_Header.Entity = value;
					if ((value != null))
					{
						value.FirstPass_Details.Add(this);
						this._HeaderOID = value.OID;
					}
					else
					{
						this._HeaderOID = default(Nullable<long>);
					}
					this.SendPropertyChanged("FirstPass_Header");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.FirstPass_Header")]
	public partial class FirstPass_Header : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _OID;
		
		private string _Factory;
		
		private System.Nullable<System.DateTime> _QueryDate;
		
		private EntitySet<FirstPass_Detail> _FirstPass_Details;
		
		private EntityRef<FirstPass_Header> _FirstPass_Header2;
		
		private EntitySet<FirstPass_AlertLogHeader> _FirstPass_AlertLogHeaders;
		
		private EntityRef<FirstPass_Header> _FirstPass_Header1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOIDChanging(long value);
    partial void OnOIDChanged();
    partial void OnFactoryChanging(string value);
    partial void OnFactoryChanged();
    partial void OnQueryDateChanging(System.Nullable<System.DateTime> value);
    partial void OnQueryDateChanged();
    #endregion
		
		public FirstPass_Header()
		{
			this._FirstPass_Details = new EntitySet<FirstPass_Detail>(new Action<FirstPass_Detail>(this.attach_FirstPass_Details), new Action<FirstPass_Detail>(this.detach_FirstPass_Details));
			this._FirstPass_Header2 = default(EntityRef<FirstPass_Header>);
			this._FirstPass_AlertLogHeaders = new EntitySet<FirstPass_AlertLogHeader>(new Action<FirstPass_AlertLogHeader>(this.attach_FirstPass_AlertLogHeaders), new Action<FirstPass_AlertLogHeader>(this.detach_FirstPass_AlertLogHeaders));
			this._FirstPass_Header1 = default(EntityRef<FirstPass_Header>);
			OnCreated();
		}
		
		[Column(Storage="_OID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long OID
		{
			get
			{
				return this._OID;
			}
			set
			{
				if ((this._OID != value))
				{
					if (this._FirstPass_Header1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOIDChanging(value);
					this.SendPropertyChanging();
					this._OID = value;
					this.SendPropertyChanged("OID");
					this.OnOIDChanged();
				}
			}
		}
		
		[Column(Storage="_Factory", DbType="VarChar(20)")]
		public string Factory
		{
			get
			{
				return this._Factory;
			}
			set
			{
				if ((this._Factory != value))
				{
					this.OnFactoryChanging(value);
					this.SendPropertyChanging();
					this._Factory = value;
					this.SendPropertyChanged("Factory");
					this.OnFactoryChanged();
				}
			}
		}
		
		[Column(Storage="_QueryDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> QueryDate
		{
			get
			{
				return this._QueryDate;
			}
			set
			{
				if ((this._QueryDate != value))
				{
					this.OnQueryDateChanging(value);
					this.SendPropertyChanging();
					this._QueryDate = value;
					this.SendPropertyChanged("QueryDate");
					this.OnQueryDateChanged();
				}
			}
		}
		
		[Association(Name="FirstPass_Header_FirstPass_Detail", Storage="_FirstPass_Details", ThisKey="OID", OtherKey="HeaderOID")]
		public EntitySet<FirstPass_Detail> FirstPass_Details
		{
			get
			{
				return this._FirstPass_Details;
			}
			set
			{
				this._FirstPass_Details.Assign(value);
			}
		}
		
		[Association(Name="FirstPass_Header_FirstPass_Header", Storage="_FirstPass_Header2", ThisKey="OID", OtherKey="OID", IsUnique=true, IsForeignKey=false)]
		public FirstPass_Header FirstPass_Header2
		{
			get
			{
				return this._FirstPass_Header2.Entity;
			}
			set
			{
				FirstPass_Header previousValue = this._FirstPass_Header2.Entity;
				if (((previousValue != value) 
							|| (this._FirstPass_Header2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FirstPass_Header2.Entity = null;
						previousValue.FirstPass_Header1 = null;
					}
					this._FirstPass_Header2.Entity = value;
					if ((value != null))
					{
						value.FirstPass_Header1 = this;
					}
					this.SendPropertyChanged("FirstPass_Header2");
				}
			}
		}
		
		[Association(Name="FirstPass_Header_FirstPass_AlertLogHeader", Storage="_FirstPass_AlertLogHeaders", ThisKey="OID", OtherKey="HeaderOID")]
		public EntitySet<FirstPass_AlertLogHeader> FirstPass_AlertLogHeaders
		{
			get
			{
				return this._FirstPass_AlertLogHeaders;
			}
			set
			{
				this._FirstPass_AlertLogHeaders.Assign(value);
			}
		}
		
		[Association(Name="FirstPass_Header_FirstPass_Header", Storage="_FirstPass_Header1", ThisKey="OID", OtherKey="OID", IsForeignKey=true)]
		public FirstPass_Header FirstPass_Header1
		{
			get
			{
				return this._FirstPass_Header1.Entity;
			}
			set
			{
				FirstPass_Header previousValue = this._FirstPass_Header1.Entity;
				if (((previousValue != value) 
							|| (this._FirstPass_Header1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FirstPass_Header1.Entity = null;
						previousValue.FirstPass_Header2 = null;
					}
					this._FirstPass_Header1.Entity = value;
					if ((value != null))
					{
						value.FirstPass_Header2 = this;
						this._OID = value.OID;
					}
					else
					{
						this._OID = default(long);
					}
					this.SendPropertyChanged("FirstPass_Header1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FirstPass_Details(FirstPass_Detail entity)
		{
			this.SendPropertyChanging();
			entity.FirstPass_Header = this;
		}
		
		private void detach_FirstPass_Details(FirstPass_Detail entity)
		{
			this.SendPropertyChanging();
			entity.FirstPass_Header = null;
		}
		
		private void attach_FirstPass_AlertLogHeaders(FirstPass_AlertLogHeader entity)
		{
			this.SendPropertyChanging();
			entity.FirstPass_Header = this;
		}
		
		private void detach_FirstPass_AlertLogHeaders(FirstPass_AlertLogHeader entity)
		{
			this.SendPropertyChanging();
			entity.FirstPass_Header = null;
		}
	}
	
	[Table(Name="dbo.FirstPass_AlertLogHeader")]
	public partial class FirstPass_AlertLogHeader : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _OID;
		
		private System.Nullable<long> _HeaderOID;
		
		private string _AcitonID;
		
		private string _ItemNo;
		
		private string _ItemSubject;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _PlanEndDate;
		
		private System.Nullable<bool> _IsCompleted;
		
		private System.Nullable<System.DateTime> _CompletedDate;
		
		private EntitySet<FirstPass_AlertLogDetail> _FirstPass_AlertLogDetails;
		
		private EntityRef<FirstPass_Header> _FirstPass_Header;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOIDChanging(long value);
    partial void OnOIDChanged();
    partial void OnHeaderOIDChanging(System.Nullable<long> value);
    partial void OnHeaderOIDChanged();
    partial void OnAcitonIDChanging(string value);
    partial void OnAcitonIDChanged();
    partial void OnItemNoChanging(string value);
    partial void OnItemNoChanged();
    partial void OnItemSubjectChanging(string value);
    partial void OnItemSubjectChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnPlanEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPlanEndDateChanged();
    partial void OnIsCompletedChanging(System.Nullable<bool> value);
    partial void OnIsCompletedChanged();
    partial void OnCompletedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCompletedDateChanged();
    #endregion
		
		public FirstPass_AlertLogHeader()
		{
			this._FirstPass_AlertLogDetails = new EntitySet<FirstPass_AlertLogDetail>(new Action<FirstPass_AlertLogDetail>(this.attach_FirstPass_AlertLogDetails), new Action<FirstPass_AlertLogDetail>(this.detach_FirstPass_AlertLogDetails));
			this._FirstPass_Header = default(EntityRef<FirstPass_Header>);
			OnCreated();
		}
		
		[Column(Storage="_OID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long OID
		{
			get
			{
				return this._OID;
			}
			set
			{
				if ((this._OID != value))
				{
					this.OnOIDChanging(value);
					this.SendPropertyChanging();
					this._OID = value;
					this.SendPropertyChanged("OID");
					this.OnOIDChanged();
				}
			}
		}
		
		[Column(Storage="_HeaderOID", DbType="BigInt")]
		public System.Nullable<long> HeaderOID
		{
			get
			{
				return this._HeaderOID;
			}
			set
			{
				if ((this._HeaderOID != value))
				{
					if (this._FirstPass_Header.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHeaderOIDChanging(value);
					this.SendPropertyChanging();
					this._HeaderOID = value;
					this.SendPropertyChanged("HeaderOID");
					this.OnHeaderOIDChanged();
				}
			}
		}
		
		[Column(Storage="_AcitonID", DbType="VarChar(20)")]
		public string AcitonID
		{
			get
			{
				return this._AcitonID;
			}
			set
			{
				if ((this._AcitonID != value))
				{
					this.OnAcitonIDChanging(value);
					this.SendPropertyChanging();
					this._AcitonID = value;
					this.SendPropertyChanged("AcitonID");
					this.OnAcitonIDChanged();
				}
			}
		}
		
		[Column(Storage="_ItemNo", DbType="NVarChar(100)")]
		public string ItemNo
		{
			get
			{
				return this._ItemNo;
			}
			set
			{
				if ((this._ItemNo != value))
				{
					this.OnItemNoChanging(value);
					this.SendPropertyChanging();
					this._ItemNo = value;
					this.SendPropertyChanged("ItemNo");
					this.OnItemNoChanged();
				}
			}
		}
		
		[Column(Storage="_ItemSubject", DbType="NVarChar(MAX)")]
		public string ItemSubject
		{
			get
			{
				return this._ItemSubject;
			}
			set
			{
				if ((this._ItemSubject != value))
				{
					this.OnItemSubjectChanging(value);
					this.SendPropertyChanging();
					this._ItemSubject = value;
					this.SendPropertyChanged("ItemSubject");
					this.OnItemSubjectChanged();
				}
			}
		}
		
		[Column(Storage="_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[Column(Storage="_PlanEndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PlanEndDate
		{
			get
			{
				return this._PlanEndDate;
			}
			set
			{
				if ((this._PlanEndDate != value))
				{
					this.OnPlanEndDateChanging(value);
					this.SendPropertyChanging();
					this._PlanEndDate = value;
					this.SendPropertyChanged("PlanEndDate");
					this.OnPlanEndDateChanged();
				}
			}
		}
		
		[Column(Storage="_IsCompleted", DbType="Bit")]
		public System.Nullable<bool> IsCompleted
		{
			get
			{
				return this._IsCompleted;
			}
			set
			{
				if ((this._IsCompleted != value))
				{
					this.OnIsCompletedChanging(value);
					this.SendPropertyChanging();
					this._IsCompleted = value;
					this.SendPropertyChanged("IsCompleted");
					this.OnIsCompletedChanged();
				}
			}
		}
		
		[Column(Storage="_CompletedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompletedDate
		{
			get
			{
				return this._CompletedDate;
			}
			set
			{
				if ((this._CompletedDate != value))
				{
					this.OnCompletedDateChanging(value);
					this.SendPropertyChanging();
					this._CompletedDate = value;
					this.SendPropertyChanged("CompletedDate");
					this.OnCompletedDateChanged();
				}
			}
		}
		
		[Association(Name="FirstPass_AlertLogHeader_FirstPass_AlertLogDetail", Storage="_FirstPass_AlertLogDetails", ThisKey="OID", OtherKey="AlertLogHeaderOID")]
		public EntitySet<FirstPass_AlertLogDetail> FirstPass_AlertLogDetails
		{
			get
			{
				return this._FirstPass_AlertLogDetails;
			}
			set
			{
				this._FirstPass_AlertLogDetails.Assign(value);
			}
		}
		
		[Association(Name="FirstPass_Header_FirstPass_AlertLogHeader", Storage="_FirstPass_Header", ThisKey="HeaderOID", OtherKey="OID", IsForeignKey=true, DeleteRule="CASCADE")]
		public FirstPass_Header FirstPass_Header
		{
			get
			{
				return this._FirstPass_Header.Entity;
			}
			set
			{
				FirstPass_Header previousValue = this._FirstPass_Header.Entity;
				if (((previousValue != value) 
							|| (this._FirstPass_Header.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FirstPass_Header.Entity = null;
						previousValue.FirstPass_AlertLogHeaders.Remove(this);
					}
					this._FirstPass_Header.Entity = value;
					if ((value != null))
					{
						value.FirstPass_AlertLogHeaders.Add(this);
						this._HeaderOID = value.OID;
					}
					else
					{
						this._HeaderOID = default(Nullable<long>);
					}
					this.SendPropertyChanged("FirstPass_Header");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FirstPass_AlertLogDetails(FirstPass_AlertLogDetail entity)
		{
			this.SendPropertyChanging();
			entity.FirstPass_AlertLogHeader = this;
		}
		
		private void detach_FirstPass_AlertLogDetails(FirstPass_AlertLogDetail entity)
		{
			this.SendPropertyChanging();
			entity.FirstPass_AlertLogHeader = null;
		}
	}
	
	[Table(Name="dbo.FirstPass_AlertLogDetail")]
	public partial class FirstPass_AlertLogDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _OID;
		
		private long _AlertLogHeaderOID;
		
		private System.Nullable<System.DateTime> _StartFollowDate;
		
		private System.Nullable<int> _FollowCount;
		
		private string _Sender;
		
		private string _FollowSummary;
		
		private System.Data.Linq.Binary _Attachment;
		
		private string _AttFileName;
		
		private EntityRef<FirstPass_AlertLogHeader> _FirstPass_AlertLogHeader;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOIDChanging(long value);
    partial void OnOIDChanged();
    partial void OnAlertLogHeaderOIDChanging(long value);
    partial void OnAlertLogHeaderOIDChanged();
    partial void OnStartFollowDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartFollowDateChanged();
    partial void OnFollowCountChanging(System.Nullable<int> value);
    partial void OnFollowCountChanged();
    partial void OnSenderChanging(string value);
    partial void OnSenderChanged();
    partial void OnFollowSummaryChanging(string value);
    partial void OnFollowSummaryChanged();
    partial void OnAttachmentChanging(System.Data.Linq.Binary value);
    partial void OnAttachmentChanged();
    partial void OnAttFileNameChanging(string value);
    partial void OnAttFileNameChanged();
    #endregion
		
		public FirstPass_AlertLogDetail()
		{
			this._FirstPass_AlertLogHeader = default(EntityRef<FirstPass_AlertLogHeader>);
			OnCreated();
		}
		
		[Column(Storage="_OID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long OID
		{
			get
			{
				return this._OID;
			}
			set
			{
				if ((this._OID != value))
				{
					this.OnOIDChanging(value);
					this.SendPropertyChanging();
					this._OID = value;
					this.SendPropertyChanged("OID");
					this.OnOIDChanged();
				}
			}
		}
		
		[Column(Storage="_AlertLogHeaderOID", DbType="BigInt NOT NULL")]
		public long AlertLogHeaderOID
		{
			get
			{
				return this._AlertLogHeaderOID;
			}
			set
			{
				if ((this._AlertLogHeaderOID != value))
				{
					if (this._FirstPass_AlertLogHeader.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAlertLogHeaderOIDChanging(value);
					this.SendPropertyChanging();
					this._AlertLogHeaderOID = value;
					this.SendPropertyChanged("AlertLogHeaderOID");
					this.OnAlertLogHeaderOIDChanged();
				}
			}
		}
		
		[Column(Storage="_StartFollowDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartFollowDate
		{
			get
			{
				return this._StartFollowDate;
			}
			set
			{
				if ((this._StartFollowDate != value))
				{
					this.OnStartFollowDateChanging(value);
					this.SendPropertyChanging();
					this._StartFollowDate = value;
					this.SendPropertyChanged("StartFollowDate");
					this.OnStartFollowDateChanged();
				}
			}
		}
		
		[Column(Storage="_FollowCount", DbType="Int")]
		public System.Nullable<int> FollowCount
		{
			get
			{
				return this._FollowCount;
			}
			set
			{
				if ((this._FollowCount != value))
				{
					this.OnFollowCountChanging(value);
					this.SendPropertyChanging();
					this._FollowCount = value;
					this.SendPropertyChanged("FollowCount");
					this.OnFollowCountChanged();
				}
			}
		}
		
		[Column(Storage="_Sender", DbType="NVarChar(100)")]
		public string Sender
		{
			get
			{
				return this._Sender;
			}
			set
			{
				if ((this._Sender != value))
				{
					this.OnSenderChanging(value);
					this.SendPropertyChanging();
					this._Sender = value;
					this.SendPropertyChanged("Sender");
					this.OnSenderChanged();
				}
			}
		}
		
		[Column(Storage="_FollowSummary", DbType="NVarChar(MAX)")]
		public string FollowSummary
		{
			get
			{
				return this._FollowSummary;
			}
			set
			{
				if ((this._FollowSummary != value))
				{
					this.OnFollowSummaryChanging(value);
					this.SendPropertyChanging();
					this._FollowSummary = value;
					this.SendPropertyChanged("FollowSummary");
					this.OnFollowSummaryChanged();
				}
			}
		}
		
		[Column(Storage="_Attachment", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Attachment
		{
			get
			{
				return this._Attachment;
			}
			set
			{
				if ((this._Attachment != value))
				{
					this.OnAttachmentChanging(value);
					this.SendPropertyChanging();
					this._Attachment = value;
					this.SendPropertyChanged("Attachment");
					this.OnAttachmentChanged();
				}
			}
		}
		
		[Column(Storage="_AttFileName", DbType="NVarChar(200)")]
		public string AttFileName
		{
			get
			{
				return this._AttFileName;
			}
			set
			{
				if ((this._AttFileName != value))
				{
					this.OnAttFileNameChanging(value);
					this.SendPropertyChanging();
					this._AttFileName = value;
					this.SendPropertyChanged("AttFileName");
					this.OnAttFileNameChanged();
				}
			}
		}
		
		[Association(Name="FirstPass_AlertLogHeader_FirstPass_AlertLogDetail", Storage="_FirstPass_AlertLogHeader", ThisKey="AlertLogHeaderOID", OtherKey="OID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public FirstPass_AlertLogHeader FirstPass_AlertLogHeader
		{
			get
			{
				return this._FirstPass_AlertLogHeader.Entity;
			}
			set
			{
				FirstPass_AlertLogHeader previousValue = this._FirstPass_AlertLogHeader.Entity;
				if (((previousValue != value) 
							|| (this._FirstPass_AlertLogHeader.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FirstPass_AlertLogHeader.Entity = null;
						previousValue.FirstPass_AlertLogDetails.Remove(this);
					}
					this._FirstPass_AlertLogHeader.Entity = value;
					if ((value != null))
					{
						value.FirstPass_AlertLogDetails.Add(this);
						this._AlertLogHeaderOID = value.OID;
					}
					else
					{
						this._AlertLogHeaderOID = default(long);
					}
					this.SendPropertyChanged("FirstPass_AlertLogHeader");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.FirstPass_AlertLogCategory")]
	public partial class FirstPass_AlertLogCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _BigCategory;
		
		private string _Category;
		
		private string _Description;
		
		private string _Description_EN;
		
		private string _Description_BD;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnBigCategoryChanging(string value);
    partial void OnBigCategoryChanged();
    partial void OnCategoryChanging(string value);
    partial void OnCategoryChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDescription_ENChanging(string value);
    partial void OnDescription_ENChanged();
    partial void OnDescription_BDChanging(string value);
    partial void OnDescription_BDChanged();
    #endregion
		
		public FirstPass_AlertLogCategory()
		{
			OnCreated();
		}
		
		[Column(Storage="_Code", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[Column(Storage="_BigCategory", DbType="NVarChar(100)")]
		public string BigCategory
		{
			get
			{
				return this._BigCategory;
			}
			set
			{
				if ((this._BigCategory != value))
				{
					this.OnBigCategoryChanging(value);
					this.SendPropertyChanging();
					this._BigCategory = value;
					this.SendPropertyChanged("BigCategory");
					this.OnBigCategoryChanged();
				}
			}
		}
		
		[Column(Storage="_Category", DbType="NVarChar(100)")]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		[Column(Storage="_Description", DbType="NVarChar(1000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_Description_EN", DbType="NVarChar(1000)")]
		public string Description_EN
		{
			get
			{
				return this._Description_EN;
			}
			set
			{
				if ((this._Description_EN != value))
				{
					this.OnDescription_ENChanging(value);
					this.SendPropertyChanging();
					this._Description_EN = value;
					this.SendPropertyChanged("Description_EN");
					this.OnDescription_ENChanged();
				}
			}
		}
		
		[Column(Storage="_Description_BD", DbType="NVarChar(1000)")]
		public string Description_BD
		{
			get
			{
				return this._Description_BD;
			}
			set
			{
				if ((this._Description_BD != value))
				{
					this.OnDescription_BDChanging(value);
					this.SendPropertyChanging();
					this._Description_BD = value;
					this.SendPropertyChanged("Description_BD");
					this.OnDescription_BDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Email")]
	public partial class Email
	{
		
		private string _UserID;
		
		private string _EmailAddress;
		
		private System.Nullable<int> _SortID;
		
		public Email()
		{
		}
		
		[Column(Storage="_UserID", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[Column(Storage="_EmailAddress", DbType="NVarChar(200)")]
		public string EmailAddress
		{
			get
			{
				return this._EmailAddress;
			}
			set
			{
				if ((this._EmailAddress != value))
				{
					this._EmailAddress = value;
				}
			}
		}
		
		[Column(Storage="_SortID", DbType="Int")]
		public System.Nullable<int> SortID
		{
			get
			{
				return this._SortID;
			}
			set
			{
				if ((this._SortID != value))
				{
					this._SortID = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.QC_Detail")]
	public partial class QC_Detail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _QC_Light;
		
		private System.Nullable<int> _LightCount;
		
		private string _Defect_Code;
		
		private string _Problem;
		
		private string _Action_Taken;
		
		private string _SolutionCode;
		
		private string _OnOffLine;
		
		private string _Cause;
		
		private System.Guid _MasterID;
		
		private System.Guid _ID;
		
		private string _TrafficLightFlag;
		
		private System.Nullable<bool> _Processed;
		
		private string _IsReAudit;
		
		private string _ReAuditID;
		
		private string _DetailType;
		
		private EntitySet<QC_Detail_Detail> _QC_Detail_Details;
		
		private EntitySet<QC_Detail_SizeAudit> _QC_Detail_SizeAudits;
		
		private EntityRef<QC_Master> _QC_Master;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnQC_LightChanging(string value);
    partial void OnQC_LightChanged();
    partial void OnLightCountChanging(System.Nullable<int> value);
    partial void OnLightCountChanged();
    partial void OnDefect_CodeChanging(string value);
    partial void OnDefect_CodeChanged();
    partial void OnProblemChanging(string value);
    partial void OnProblemChanged();
    partial void OnAction_TakenChanging(string value);
    partial void OnAction_TakenChanged();
    partial void OnSolutionCodeChanging(string value);
    partial void OnSolutionCodeChanged();
    partial void OnOnOffLineChanging(string value);
    partial void OnOnOffLineChanged();
    partial void OnCauseChanging(string value);
    partial void OnCauseChanged();
    partial void OnMasterIDChanging(System.Guid value);
    partial void OnMasterIDChanged();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnTrafficLightFlagChanging(string value);
    partial void OnTrafficLightFlagChanged();
    partial void OnProcessedChanging(System.Nullable<bool> value);
    partial void OnProcessedChanged();
    partial void OnIsReAuditChanging(string value);
    partial void OnIsReAuditChanged();
    partial void OnReAuditIDChanging(string value);
    partial void OnReAuditIDChanged();
    partial void OnDetailTypeChanging(string value);
    partial void OnDetailTypeChanged();
    #endregion
		
		public QC_Detail()
		{
			this._QC_Detail_Details = new EntitySet<QC_Detail_Detail>(new Action<QC_Detail_Detail>(this.attach_QC_Detail_Details), new Action<QC_Detail_Detail>(this.detach_QC_Detail_Details));
			this._QC_Detail_SizeAudits = new EntitySet<QC_Detail_SizeAudit>(new Action<QC_Detail_SizeAudit>(this.attach_QC_Detail_SizeAudits), new Action<QC_Detail_SizeAudit>(this.detach_QC_Detail_SizeAudits));
			this._QC_Master = default(EntityRef<QC_Master>);
			OnCreated();
		}
		
		[Column(Storage="_QC_Light", DbType="NVarChar(10)")]
		public string QC_Light
		{
			get
			{
				return this._QC_Light;
			}
			set
			{
				if ((this._QC_Light != value))
				{
					this.OnQC_LightChanging(value);
					this.SendPropertyChanging();
					this._QC_Light = value;
					this.SendPropertyChanged("QC_Light");
					this.OnQC_LightChanged();
				}
			}
		}
		
		[Column(Storage="_LightCount", DbType="Int")]
		public System.Nullable<int> LightCount
		{
			get
			{
				return this._LightCount;
			}
			set
			{
				if ((this._LightCount != value))
				{
					this.OnLightCountChanging(value);
					this.SendPropertyChanging();
					this._LightCount = value;
					this.SendPropertyChanged("LightCount");
					this.OnLightCountChanged();
				}
			}
		}
		
		[Column(Storage="_Defect_Code", DbType="VarChar(10)")]
		public string Defect_Code
		{
			get
			{
				return this._Defect_Code;
			}
			set
			{
				if ((this._Defect_Code != value))
				{
					this.OnDefect_CodeChanging(value);
					this.SendPropertyChanging();
					this._Defect_Code = value;
					this.SendPropertyChanged("Defect_Code");
					this.OnDefect_CodeChanged();
				}
			}
		}
		
		[Column(Storage="_Problem", DbType="VarChar(1000)")]
		public string Problem
		{
			get
			{
				return this._Problem;
			}
			set
			{
				if ((this._Problem != value))
				{
					this.OnProblemChanging(value);
					this.SendPropertyChanging();
					this._Problem = value;
					this.SendPropertyChanged("Problem");
					this.OnProblemChanged();
				}
			}
		}
		
		[Column(Storage="_Action_Taken", DbType="VarChar(10)")]
		public string Action_Taken
		{
			get
			{
				return this._Action_Taken;
			}
			set
			{
				if ((this._Action_Taken != value))
				{
					this.OnAction_TakenChanging(value);
					this.SendPropertyChanging();
					this._Action_Taken = value;
					this.SendPropertyChanged("Action_Taken");
					this.OnAction_TakenChanged();
				}
			}
		}
		
		[Column(Storage="_SolutionCode", DbType="VarChar(500)")]
		public string SolutionCode
		{
			get
			{
				return this._SolutionCode;
			}
			set
			{
				if ((this._SolutionCode != value))
				{
					this.OnSolutionCodeChanging(value);
					this.SendPropertyChanging();
					this._SolutionCode = value;
					this.SendPropertyChanged("SolutionCode");
					this.OnSolutionCodeChanged();
				}
			}
		}
		
		[Column(Storage="_OnOffLine", DbType="VarChar(10)")]
		public string OnOffLine
		{
			get
			{
				return this._OnOffLine;
			}
			set
			{
				if ((this._OnOffLine != value))
				{
					this.OnOnOffLineChanging(value);
					this.SendPropertyChanging();
					this._OnOffLine = value;
					this.SendPropertyChanged("OnOffLine");
					this.OnOnOffLineChanged();
				}
			}
		}
		
		[Column(Storage="_Cause", DbType="VarChar(10)")]
		public string Cause
		{
			get
			{
				return this._Cause;
			}
			set
			{
				if ((this._Cause != value))
				{
					this.OnCauseChanging(value);
					this.SendPropertyChanging();
					this._Cause = value;
					this.SendPropertyChanged("Cause");
					this.OnCauseChanged();
				}
			}
		}
		
		[Column(Storage="_MasterID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid MasterID
		{
			get
			{
				return this._MasterID;
			}
			set
			{
				if ((this._MasterID != value))
				{
					if (this._QC_Master.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMasterIDChanging(value);
					this.SendPropertyChanging();
					this._MasterID = value;
					this.SendPropertyChanged("MasterID");
					this.OnMasterIDChanged();
				}
			}
		}
		
		[Column(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_TrafficLightFlag", DbType="NVarChar(10)")]
		public string TrafficLightFlag
		{
			get
			{
				return this._TrafficLightFlag;
			}
			set
			{
				if ((this._TrafficLightFlag != value))
				{
					this.OnTrafficLightFlagChanging(value);
					this.SendPropertyChanging();
					this._TrafficLightFlag = value;
					this.SendPropertyChanged("TrafficLightFlag");
					this.OnTrafficLightFlagChanged();
				}
			}
		}
		
		[Column(Storage="_Processed", DbType="Bit")]
		public System.Nullable<bool> Processed
		{
			get
			{
				return this._Processed;
			}
			set
			{
				if ((this._Processed != value))
				{
					this.OnProcessedChanging(value);
					this.SendPropertyChanging();
					this._Processed = value;
					this.SendPropertyChanged("Processed");
					this.OnProcessedChanged();
				}
			}
		}
		
		[Column(Storage="_IsReAudit", DbType="NVarChar(50)")]
		public string IsReAudit
		{
			get
			{
				return this._IsReAudit;
			}
			set
			{
				if ((this._IsReAudit != value))
				{
					this.OnIsReAuditChanging(value);
					this.SendPropertyChanging();
					this._IsReAudit = value;
					this.SendPropertyChanged("IsReAudit");
					this.OnIsReAuditChanged();
				}
			}
		}
		
		[Column(Storage="_ReAuditID", DbType="NVarChar(40)")]
		public string ReAuditID
		{
			get
			{
				return this._ReAuditID;
			}
			set
			{
				if ((this._ReAuditID != value))
				{
					this.OnReAuditIDChanging(value);
					this.SendPropertyChanging();
					this._ReAuditID = value;
					this.SendPropertyChanged("ReAuditID");
					this.OnReAuditIDChanged();
				}
			}
		}
		
		[Column(Storage="_DetailType", DbType="NVarChar(10)")]
		public string DetailType
		{
			get
			{
				return this._DetailType;
			}
			set
			{
				if ((this._DetailType != value))
				{
					this.OnDetailTypeChanging(value);
					this.SendPropertyChanging();
					this._DetailType = value;
					this.SendPropertyChanged("DetailType");
					this.OnDetailTypeChanged();
				}
			}
		}
		
		[Association(Name="QC_Detail_QC_Detail_Detail", Storage="_QC_Detail_Details", ThisKey="MasterID,ID", OtherKey="MasterID,DetailID")]
		public EntitySet<QC_Detail_Detail> QC_Detail_Details
		{
			get
			{
				return this._QC_Detail_Details;
			}
			set
			{
				this._QC_Detail_Details.Assign(value);
			}
		}
		
		[Association(Name="QC_Detail_QC_Detail_SizeAudit", Storage="_QC_Detail_SizeAudits", ThisKey="MasterID,ID", OtherKey="MasterID,DetailID")]
		public EntitySet<QC_Detail_SizeAudit> QC_Detail_SizeAudits
		{
			get
			{
				return this._QC_Detail_SizeAudits;
			}
			set
			{
				this._QC_Detail_SizeAudits.Assign(value);
			}
		}
		
		[Association(Name="QC_Master_QC_Detail", Storage="_QC_Master", ThisKey="MasterID", OtherKey="MasterID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public QC_Master QC_Master
		{
			get
			{
				return this._QC_Master.Entity;
			}
			set
			{
				QC_Master previousValue = this._QC_Master.Entity;
				if (((previousValue != value) 
							|| (this._QC_Master.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QC_Master.Entity = null;
						previousValue.QC_Details.Remove(this);
					}
					this._QC_Master.Entity = value;
					if ((value != null))
					{
						value.QC_Details.Add(this);
						this._MasterID = value.MasterID;
					}
					else
					{
						this._MasterID = default(System.Guid);
					}
					this.SendPropertyChanged("QC_Master");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_QC_Detail_Details(QC_Detail_Detail entity)
		{
			this.SendPropertyChanging();
			entity.QC_Detail = this;
		}
		
		private void detach_QC_Detail_Details(QC_Detail_Detail entity)
		{
			this.SendPropertyChanging();
			entity.QC_Detail = null;
		}
		
		private void attach_QC_Detail_SizeAudits(QC_Detail_SizeAudit entity)
		{
			this.SendPropertyChanging();
			entity.QC_Detail = this;
		}
		
		private void detach_QC_Detail_SizeAudits(QC_Detail_SizeAudit entity)
		{
			this.SendPropertyChanging();
			entity.QC_Detail = null;
		}
	}
	
	[Table(Name="dbo.QC_Master")]
	public partial class QC_Master : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Line;
		
		private string _Project;
		
		private string _WO;
		
		private string _RWO;
		
		private string _ArtNO;
		
		private string _Style;
		
		private string _W_procedure;
		
		private string _Worker;
		
		private System.Nullable<System.DateTime> _QC_time;
		
		private System.Nullable<int> _QCCount;
		
		private string _QCMan;
		
		private string _QNNo;
		
		private string _BoxNo;
		
		private string _BindNo;
		
		private string _MachinePlace;
		
		private string _Color;
		
		private string _Size;
		
		private string _WOc;
		
		private System.Guid _MasterID;
		
		private string _OTN;
		
		private string _Factory;
		
		private string _WorkShop;
		
		private string _QCRoleCode;
		
		private string _AssignUser;
		
		private System.Nullable<System.DateTime> _AssignDate;
		
		private string _QCType;
		
		private string _IsFinishInput;
		
		private string _ProductTypeCode;
		
		private string _PartCode;
		
		private EntitySet<QC_Detail> _QC_Details;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLineChanging(string value);
    partial void OnLineChanged();
    partial void OnProjectChanging(string value);
    partial void OnProjectChanged();
    partial void OnWOChanging(string value);
    partial void OnWOChanged();
    partial void OnRWOChanging(string value);
    partial void OnRWOChanged();
    partial void OnArtNOChanging(string value);
    partial void OnArtNOChanged();
    partial void OnStyleChanging(string value);
    partial void OnStyleChanged();
    partial void OnW_procedureChanging(string value);
    partial void OnW_procedureChanged();
    partial void OnWorkerChanging(string value);
    partial void OnWorkerChanged();
    partial void OnQC_timeChanging(System.Nullable<System.DateTime> value);
    partial void OnQC_timeChanged();
    partial void OnQCCountChanging(System.Nullable<int> value);
    partial void OnQCCountChanged();
    partial void OnQCManChanging(string value);
    partial void OnQCManChanged();
    partial void OnQNNoChanging(string value);
    partial void OnQNNoChanged();
    partial void OnBoxNoChanging(string value);
    partial void OnBoxNoChanged();
    partial void OnBindNoChanging(string value);
    partial void OnBindNoChanged();
    partial void OnMachinePlaceChanging(string value);
    partial void OnMachinePlaceChanged();
    partial void OnColorChanging(string value);
    partial void OnColorChanged();
    partial void OnSizeChanging(string value);
    partial void OnSizeChanged();
    partial void OnWOcChanging(string value);
    partial void OnWOcChanged();
    partial void OnMasterIDChanging(System.Guid value);
    partial void OnMasterIDChanged();
    partial void OnOTNChanging(string value);
    partial void OnOTNChanged();
    partial void OnFactoryChanging(string value);
    partial void OnFactoryChanged();
    partial void OnWorkShopChanging(string value);
    partial void OnWorkShopChanged();
    partial void OnQCRoleCodeChanging(string value);
    partial void OnQCRoleCodeChanged();
    partial void OnAssignUserChanging(string value);
    partial void OnAssignUserChanged();
    partial void OnAssignDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAssignDateChanged();
    partial void OnQCTypeChanging(string value);
    partial void OnQCTypeChanged();
    partial void OnIsFinishInputChanging(string value);
    partial void OnIsFinishInputChanged();
    partial void OnProductTypeCodeChanging(string value);
    partial void OnProductTypeCodeChanged();
    partial void OnPartCodeChanging(string value);
    partial void OnPartCodeChanged();
    #endregion
		
		public QC_Master()
		{
			this._QC_Details = new EntitySet<QC_Detail>(new Action<QC_Detail>(this.attach_QC_Details), new Action<QC_Detail>(this.detach_QC_Details));
			OnCreated();
		}
		
		[Column(Storage="_Line", DbType="VarChar(8)")]
		public string Line
		{
			get
			{
				return this._Line;
			}
			set
			{
				if ((this._Line != value))
				{
					this.OnLineChanging(value);
					this.SendPropertyChanging();
					this._Line = value;
					this.SendPropertyChanged("Line");
					this.OnLineChanged();
				}
			}
		}
		
		[Column(Storage="_Project", DbType="VarChar(20)")]
		public string Project
		{
			get
			{
				return this._Project;
			}
			set
			{
				if ((this._Project != value))
				{
					this.OnProjectChanging(value);
					this.SendPropertyChanging();
					this._Project = value;
					this.SendPropertyChanged("Project");
					this.OnProjectChanged();
				}
			}
		}
		
		[Column(Storage="_WO", DbType="VarChar(20)")]
		public string WO
		{
			get
			{
				return this._WO;
			}
			set
			{
				if ((this._WO != value))
				{
					this.OnWOChanging(value);
					this.SendPropertyChanging();
					this._WO = value;
					this.SendPropertyChanged("WO");
					this.OnWOChanged();
				}
			}
		}
		
		[Column(Storage="_RWO", DbType="VarChar(20)")]
		public string RWO
		{
			get
			{
				return this._RWO;
			}
			set
			{
				if ((this._RWO != value))
				{
					this.OnRWOChanging(value);
					this.SendPropertyChanging();
					this._RWO = value;
					this.SendPropertyChanged("RWO");
					this.OnRWOChanged();
				}
			}
		}
		
		[Column(Storage="_ArtNO", DbType="NVarChar(20)")]
		public string ArtNO
		{
			get
			{
				return this._ArtNO;
			}
			set
			{
				if ((this._ArtNO != value))
				{
					this.OnArtNOChanging(value);
					this.SendPropertyChanging();
					this._ArtNO = value;
					this.SendPropertyChanged("ArtNO");
					this.OnArtNOChanged();
				}
			}
		}
		
		[Column(Storage="_Style", DbType="VarChar(20)")]
		public string Style
		{
			get
			{
				return this._Style;
			}
			set
			{
				if ((this._Style != value))
				{
					this.OnStyleChanging(value);
					this.SendPropertyChanging();
					this._Style = value;
					this.SendPropertyChanged("Style");
					this.OnStyleChanged();
				}
			}
		}
		
		[Column(Storage="_W_procedure", DbType="VarChar(8)")]
		public string W_procedure
		{
			get
			{
				return this._W_procedure;
			}
			set
			{
				if ((this._W_procedure != value))
				{
					this.OnW_procedureChanging(value);
					this.SendPropertyChanging();
					this._W_procedure = value;
					this.SendPropertyChanged("W_procedure");
					this.OnW_procedureChanged();
				}
			}
		}
		
		[Column(Storage="_Worker", DbType="VarChar(12)")]
		public string Worker
		{
			get
			{
				return this._Worker;
			}
			set
			{
				if ((this._Worker != value))
				{
					this.OnWorkerChanging(value);
					this.SendPropertyChanging();
					this._Worker = value;
					this.SendPropertyChanged("Worker");
					this.OnWorkerChanged();
				}
			}
		}
		
		[Column(Storage="_QC_time", DbType="DateTime")]
		public System.Nullable<System.DateTime> QC_time
		{
			get
			{
				return this._QC_time;
			}
			set
			{
				if ((this._QC_time != value))
				{
					this.OnQC_timeChanging(value);
					this.SendPropertyChanging();
					this._QC_time = value;
					this.SendPropertyChanged("QC_time");
					this.OnQC_timeChanged();
				}
			}
		}
		
		[Column(Storage="_QCCount", DbType="Int")]
		public System.Nullable<int> QCCount
		{
			get
			{
				return this._QCCount;
			}
			set
			{
				if ((this._QCCount != value))
				{
					this.OnQCCountChanging(value);
					this.SendPropertyChanging();
					this._QCCount = value;
					this.SendPropertyChanged("QCCount");
					this.OnQCCountChanged();
				}
			}
		}
		
		[Column(Storage="_QCMan", DbType="VarChar(20)")]
		public string QCMan
		{
			get
			{
				return this._QCMan;
			}
			set
			{
				if ((this._QCMan != value))
				{
					this.OnQCManChanging(value);
					this.SendPropertyChanging();
					this._QCMan = value;
					this.SendPropertyChanged("QCMan");
					this.OnQCManChanged();
				}
			}
		}
		
		[Column(Storage="_QNNo", DbType="VarChar(10)")]
		public string QNNo
		{
			get
			{
				return this._QNNo;
			}
			set
			{
				if ((this._QNNo != value))
				{
					this.OnQNNoChanging(value);
					this.SendPropertyChanging();
					this._QNNo = value;
					this.SendPropertyChanged("QNNo");
					this.OnQNNoChanged();
				}
			}
		}
		
		[Column(Storage="_BoxNo", DbType="VarChar(10)")]
		public string BoxNo
		{
			get
			{
				return this._BoxNo;
			}
			set
			{
				if ((this._BoxNo != value))
				{
					this.OnBoxNoChanging(value);
					this.SendPropertyChanging();
					this._BoxNo = value;
					this.SendPropertyChanged("BoxNo");
					this.OnBoxNoChanged();
				}
			}
		}
		
		[Column(Storage="_BindNo", DbType="VarChar(10)")]
		public string BindNo
		{
			get
			{
				return this._BindNo;
			}
			set
			{
				if ((this._BindNo != value))
				{
					this.OnBindNoChanging(value);
					this.SendPropertyChanging();
					this._BindNo = value;
					this.SendPropertyChanged("BindNo");
					this.OnBindNoChanged();
				}
			}
		}
		
		[Column(Storage="_MachinePlace", DbType="VarChar(10)")]
		public string MachinePlace
		{
			get
			{
				return this._MachinePlace;
			}
			set
			{
				if ((this._MachinePlace != value))
				{
					this.OnMachinePlaceChanging(value);
					this.SendPropertyChanging();
					this._MachinePlace = value;
					this.SendPropertyChanged("MachinePlace");
					this.OnMachinePlaceChanged();
				}
			}
		}
		
		[Column(Storage="_Color", DbType="VarChar(20)")]
		public string Color
		{
			get
			{
				return this._Color;
			}
			set
			{
				if ((this._Color != value))
				{
					this.OnColorChanging(value);
					this.SendPropertyChanging();
					this._Color = value;
					this.SendPropertyChanged("Color");
					this.OnColorChanged();
				}
			}
		}
		
		[Column(Storage="_Size", DbType="VarChar(20)")]
		public string Size
		{
			get
			{
				return this._Size;
			}
			set
			{
				if ((this._Size != value))
				{
					this.OnSizeChanging(value);
					this.SendPropertyChanging();
					this._Size = value;
					this.SendPropertyChanged("Size");
					this.OnSizeChanged();
				}
			}
		}
		
		[Column(Storage="_WOc", DbType="VarChar(20)")]
		public string WOc
		{
			get
			{
				return this._WOc;
			}
			set
			{
				if ((this._WOc != value))
				{
					this.OnWOcChanging(value);
					this.SendPropertyChanging();
					this._WOc = value;
					this.SendPropertyChanged("WOc");
					this.OnWOcChanged();
				}
			}
		}
		
		[Column(Storage="_MasterID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid MasterID
		{
			get
			{
				return this._MasterID;
			}
			set
			{
				if ((this._MasterID != value))
				{
					this.OnMasterIDChanging(value);
					this.SendPropertyChanging();
					this._MasterID = value;
					this.SendPropertyChanged("MasterID");
					this.OnMasterIDChanged();
				}
			}
		}
		
		[Column(Storage="_OTN", DbType="VarChar(20)")]
		public string OTN
		{
			get
			{
				return this._OTN;
			}
			set
			{
				if ((this._OTN != value))
				{
					this.OnOTNChanging(value);
					this.SendPropertyChanging();
					this._OTN = value;
					this.SendPropertyChanged("OTN");
					this.OnOTNChanged();
				}
			}
		}
		
		[Column(Storage="_Factory", DbType="VarChar(20)")]
		public string Factory
		{
			get
			{
				return this._Factory;
			}
			set
			{
				if ((this._Factory != value))
				{
					this.OnFactoryChanging(value);
					this.SendPropertyChanging();
					this._Factory = value;
					this.SendPropertyChanged("Factory");
					this.OnFactoryChanged();
				}
			}
		}
		
		[Column(Storage="_WorkShop", DbType="VarChar(20)")]
		public string WorkShop
		{
			get
			{
				return this._WorkShop;
			}
			set
			{
				if ((this._WorkShop != value))
				{
					this.OnWorkShopChanging(value);
					this.SendPropertyChanging();
					this._WorkShop = value;
					this.SendPropertyChanged("WorkShop");
					this.OnWorkShopChanged();
				}
			}
		}
		
		[Column(Storage="_QCRoleCode", DbType="NVarChar(50)")]
		public string QCRoleCode
		{
			get
			{
				return this._QCRoleCode;
			}
			set
			{
				if ((this._QCRoleCode != value))
				{
					this.OnQCRoleCodeChanging(value);
					this.SendPropertyChanging();
					this._QCRoleCode = value;
					this.SendPropertyChanged("QCRoleCode");
					this.OnQCRoleCodeChanged();
				}
			}
		}
		
		[Column(Storage="_AssignUser", DbType="NVarChar(20)")]
		public string AssignUser
		{
			get
			{
				return this._AssignUser;
			}
			set
			{
				if ((this._AssignUser != value))
				{
					this.OnAssignUserChanging(value);
					this.SendPropertyChanging();
					this._AssignUser = value;
					this.SendPropertyChanged("AssignUser");
					this.OnAssignUserChanged();
				}
			}
		}
		
		[Column(Storage="_AssignDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AssignDate
		{
			get
			{
				return this._AssignDate;
			}
			set
			{
				if ((this._AssignDate != value))
				{
					this.OnAssignDateChanging(value);
					this.SendPropertyChanging();
					this._AssignDate = value;
					this.SendPropertyChanged("AssignDate");
					this.OnAssignDateChanged();
				}
			}
		}
		
		[Column(Storage="_QCType", DbType="NVarChar(10)")]
		public string QCType
		{
			get
			{
				return this._QCType;
			}
			set
			{
				if ((this._QCType != value))
				{
					this.OnQCTypeChanging(value);
					this.SendPropertyChanging();
					this._QCType = value;
					this.SendPropertyChanged("QCType");
					this.OnQCTypeChanged();
				}
			}
		}
		
		[Column(Storage="_IsFinishInput", DbType="NVarChar(5)")]
		public string IsFinishInput
		{
			get
			{
				return this._IsFinishInput;
			}
			set
			{
				if ((this._IsFinishInput != value))
				{
					this.OnIsFinishInputChanging(value);
					this.SendPropertyChanging();
					this._IsFinishInput = value;
					this.SendPropertyChanged("IsFinishInput");
					this.OnIsFinishInputChanged();
				}
			}
		}
		
		[Column(Storage="_ProductTypeCode", DbType="NVarChar(10)")]
		public string ProductTypeCode
		{
			get
			{
				return this._ProductTypeCode;
			}
			set
			{
				if ((this._ProductTypeCode != value))
				{
					this.OnProductTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._ProductTypeCode = value;
					this.SendPropertyChanged("ProductTypeCode");
					this.OnProductTypeCodeChanged();
				}
			}
		}
		
		[Column(Storage="_PartCode", DbType="NVarChar(10)")]
		public string PartCode
		{
			get
			{
				return this._PartCode;
			}
			set
			{
				if ((this._PartCode != value))
				{
					this.OnPartCodeChanging(value);
					this.SendPropertyChanging();
					this._PartCode = value;
					this.SendPropertyChanged("PartCode");
					this.OnPartCodeChanged();
				}
			}
		}
		
		[Association(Name="QC_Master_QC_Detail", Storage="_QC_Details", ThisKey="MasterID", OtherKey="MasterID")]
		public EntitySet<QC_Detail> QC_Details
		{
			get
			{
				return this._QC_Details;
			}
			set
			{
				this._QC_Details.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_QC_Details(QC_Detail entity)
		{
			this.SendPropertyChanging();
			entity.QC_Master = this;
		}
		
		private void detach_QC_Details(QC_Detail entity)
		{
			this.SendPropertyChanging();
			entity.QC_Master = null;
		}
	}
	
	[Table(Name="dbo.WorkforceFPYTarget")]
	public partial class WorkforceFPYTarget : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _SeqNo;
		
		private string _Factory;
		
		private System.Nullable<decimal> _FPYTarget;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSeqNoChanging(long value);
    partial void OnSeqNoChanged();
    partial void OnFactoryChanging(string value);
    partial void OnFactoryChanged();
    partial void OnFPYTargetChanging(System.Nullable<decimal> value);
    partial void OnFPYTargetChanged();
    #endregion
		
		public WorkforceFPYTarget()
		{
			OnCreated();
		}
		
		[Column(Storage="_SeqNo", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long SeqNo
		{
			get
			{
				return this._SeqNo;
			}
			set
			{
				if ((this._SeqNo != value))
				{
					this.OnSeqNoChanging(value);
					this.SendPropertyChanging();
					this._SeqNo = value;
					this.SendPropertyChanged("SeqNo");
					this.OnSeqNoChanged();
				}
			}
		}
		
		[Column(Storage="_Factory", DbType="VarChar(10)")]
		public string Factory
		{
			get
			{
				return this._Factory;
			}
			set
			{
				if ((this._Factory != value))
				{
					this.OnFactoryChanging(value);
					this.SendPropertyChanging();
					this._Factory = value;
					this.SendPropertyChanged("Factory");
					this.OnFactoryChanged();
				}
			}
		}
		
		[Column(Storage="_FPYTarget", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> FPYTarget
		{
			get
			{
				return this._FPYTarget;
			}
			set
			{
				if ((this._FPYTarget != value))
				{
					this.OnFPYTargetChanging(value);
					this.SendPropertyChanging();
					this._FPYTarget = value;
					this.SendPropertyChanged("FPYTarget");
					this.OnFPYTargetChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.QC_Detail_SizeAudit")]
	public partial class QC_Detail_SizeAudit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _MasterID;
		
		private System.Guid _DetailID;
		
		private System.Guid _SizeID;
		
		private System.Nullable<int> _ProductSeq;
		
		private string _ArtNO;
		
		private string _StyleNO;
		
		private string _SizeCode;
		
		private string _Position;
		
		private string _Standard;
		
		private string _Uom;
		
		private string _AuditValue;
		
		private string _SizeWindageShowText;
		
		private string _SizeWindage;
		
		private string _AuditResult;
		
		private string _ImgUrl;
		
		private string _Tolerence;
		
		private string _Method;
		
		private System.Nullable<System.DateTime> _PlaceCreateDate;
		
		private EntityRef<QC_Detail> _QC_Detail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMasterIDChanging(System.Guid value);
    partial void OnMasterIDChanged();
    partial void OnDetailIDChanging(System.Guid value);
    partial void OnDetailIDChanged();
    partial void OnSizeIDChanging(System.Guid value);
    partial void OnSizeIDChanged();
    partial void OnProductSeqChanging(System.Nullable<int> value);
    partial void OnProductSeqChanged();
    partial void OnArtNOChanging(string value);
    partial void OnArtNOChanged();
    partial void OnStyleNOChanging(string value);
    partial void OnStyleNOChanged();
    partial void OnSizeCodeChanging(string value);
    partial void OnSizeCodeChanged();
    partial void OnPositionChanging(string value);
    partial void OnPositionChanged();
    partial void OnStandardChanging(string value);
    partial void OnStandardChanged();
    partial void OnUomChanging(string value);
    partial void OnUomChanged();
    partial void OnAuditValueChanging(string value);
    partial void OnAuditValueChanged();
    partial void OnSizeWindageShowTextChanging(string value);
    partial void OnSizeWindageShowTextChanged();
    partial void OnSizeWindageChanging(string value);
    partial void OnSizeWindageChanged();
    partial void OnAuditResultChanging(string value);
    partial void OnAuditResultChanged();
    partial void OnImgUrlChanging(string value);
    partial void OnImgUrlChanged();
    partial void OnTolerenceChanging(string value);
    partial void OnTolerenceChanged();
    partial void OnMethodChanging(string value);
    partial void OnMethodChanged();
    partial void OnPlaceCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPlaceCreateDateChanged();
    #endregion
		
		public QC_Detail_SizeAudit()
		{
			this._QC_Detail = default(EntityRef<QC_Detail>);
			OnCreated();
		}
		
		[Column(Storage="_MasterID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid MasterID
		{
			get
			{
				return this._MasterID;
			}
			set
			{
				if ((this._MasterID != value))
				{
					if (this._QC_Detail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMasterIDChanging(value);
					this.SendPropertyChanging();
					this._MasterID = value;
					this.SendPropertyChanged("MasterID");
					this.OnMasterIDChanged();
				}
			}
		}
		
		[Column(Storage="_DetailID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid DetailID
		{
			get
			{
				return this._DetailID;
			}
			set
			{
				if ((this._DetailID != value))
				{
					if (this._QC_Detail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDetailIDChanging(value);
					this.SendPropertyChanging();
					this._DetailID = value;
					this.SendPropertyChanged("DetailID");
					this.OnDetailIDChanged();
				}
			}
		}
		
		[Column(Storage="_SizeID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid SizeID
		{
			get
			{
				return this._SizeID;
			}
			set
			{
				if ((this._SizeID != value))
				{
					this.OnSizeIDChanging(value);
					this.SendPropertyChanging();
					this._SizeID = value;
					this.SendPropertyChanged("SizeID");
					this.OnSizeIDChanged();
				}
			}
		}
		
		[Column(Storage="_ProductSeq", DbType="Int")]
		public System.Nullable<int> ProductSeq
		{
			get
			{
				return this._ProductSeq;
			}
			set
			{
				if ((this._ProductSeq != value))
				{
					this.OnProductSeqChanging(value);
					this.SendPropertyChanging();
					this._ProductSeq = value;
					this.SendPropertyChanged("ProductSeq");
					this.OnProductSeqChanged();
				}
			}
		}
		
		[Column(Storage="_ArtNO", DbType="NVarChar(50)")]
		public string ArtNO
		{
			get
			{
				return this._ArtNO;
			}
			set
			{
				if ((this._ArtNO != value))
				{
					this.OnArtNOChanging(value);
					this.SendPropertyChanging();
					this._ArtNO = value;
					this.SendPropertyChanged("ArtNO");
					this.OnArtNOChanged();
				}
			}
		}
		
		[Column(Storage="_StyleNO", DbType="NVarChar(50)")]
		public string StyleNO
		{
			get
			{
				return this._StyleNO;
			}
			set
			{
				if ((this._StyleNO != value))
				{
					this.OnStyleNOChanging(value);
					this.SendPropertyChanging();
					this._StyleNO = value;
					this.SendPropertyChanged("StyleNO");
					this.OnStyleNOChanged();
				}
			}
		}
		
		[Column(Storage="_SizeCode", DbType="NVarChar(10)")]
		public string SizeCode
		{
			get
			{
				return this._SizeCode;
			}
			set
			{
				if ((this._SizeCode != value))
				{
					this.OnSizeCodeChanging(value);
					this.SendPropertyChanging();
					this._SizeCode = value;
					this.SendPropertyChanged("SizeCode");
					this.OnSizeCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Position", DbType="NVarChar(1000)")]
		public string Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this.OnPositionChanging(value);
					this.SendPropertyChanging();
					this._Position = value;
					this.SendPropertyChanged("Position");
					this.OnPositionChanged();
				}
			}
		}
		
		[Column(Storage="_Standard", DbType="NVarChar(10)")]
		public string Standard
		{
			get
			{
				return this._Standard;
			}
			set
			{
				if ((this._Standard != value))
				{
					this.OnStandardChanging(value);
					this.SendPropertyChanging();
					this._Standard = value;
					this.SendPropertyChanged("Standard");
					this.OnStandardChanged();
				}
			}
		}
		
		[Column(Storage="_Uom", DbType="NVarChar(10)")]
		public string Uom
		{
			get
			{
				return this._Uom;
			}
			set
			{
				if ((this._Uom != value))
				{
					this.OnUomChanging(value);
					this.SendPropertyChanging();
					this._Uom = value;
					this.SendPropertyChanged("Uom");
					this.OnUomChanged();
				}
			}
		}
		
		[Column(Storage="_AuditValue", DbType="NVarChar(10)")]
		public string AuditValue
		{
			get
			{
				return this._AuditValue;
			}
			set
			{
				if ((this._AuditValue != value))
				{
					this.OnAuditValueChanging(value);
					this.SendPropertyChanging();
					this._AuditValue = value;
					this.SendPropertyChanged("AuditValue");
					this.OnAuditValueChanged();
				}
			}
		}
		
		[Column(Storage="_SizeWindageShowText", DbType="NVarChar(50)")]
		public string SizeWindageShowText
		{
			get
			{
				return this._SizeWindageShowText;
			}
			set
			{
				if ((this._SizeWindageShowText != value))
				{
					this.OnSizeWindageShowTextChanging(value);
					this.SendPropertyChanging();
					this._SizeWindageShowText = value;
					this.SendPropertyChanged("SizeWindageShowText");
					this.OnSizeWindageShowTextChanged();
				}
			}
		}
		
		[Column(Storage="_SizeWindage", DbType="NVarChar(10)")]
		public string SizeWindage
		{
			get
			{
				return this._SizeWindage;
			}
			set
			{
				if ((this._SizeWindage != value))
				{
					this.OnSizeWindageChanging(value);
					this.SendPropertyChanging();
					this._SizeWindage = value;
					this.SendPropertyChanged("SizeWindage");
					this.OnSizeWindageChanged();
				}
			}
		}
		
		[Column(Storage="_AuditResult", DbType="NVarChar(10)")]
		public string AuditResult
		{
			get
			{
				return this._AuditResult;
			}
			set
			{
				if ((this._AuditResult != value))
				{
					this.OnAuditResultChanging(value);
					this.SendPropertyChanging();
					this._AuditResult = value;
					this.SendPropertyChanged("AuditResult");
					this.OnAuditResultChanged();
				}
			}
		}
		
		[Column(Storage="_ImgUrl", DbType="NVarChar(50)")]
		public string ImgUrl
		{
			get
			{
				return this._ImgUrl;
			}
			set
			{
				if ((this._ImgUrl != value))
				{
					this.OnImgUrlChanging(value);
					this.SendPropertyChanging();
					this._ImgUrl = value;
					this.SendPropertyChanged("ImgUrl");
					this.OnImgUrlChanged();
				}
			}
		}
		
		[Column(Storage="_Tolerence", DbType="NVarChar(50)")]
		public string Tolerence
		{
			get
			{
				return this._Tolerence;
			}
			set
			{
				if ((this._Tolerence != value))
				{
					this.OnTolerenceChanging(value);
					this.SendPropertyChanging();
					this._Tolerence = value;
					this.SendPropertyChanged("Tolerence");
					this.OnTolerenceChanged();
				}
			}
		}
		
		[Column(Storage="_Method", DbType="NVarChar(50)")]
		public string Method
		{
			get
			{
				return this._Method;
			}
			set
			{
				if ((this._Method != value))
				{
					this.OnMethodChanging(value);
					this.SendPropertyChanging();
					this._Method = value;
					this.SendPropertyChanged("Method");
					this.OnMethodChanged();
				}
			}
		}
		
		[Column(Storage="_PlaceCreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PlaceCreateDate
		{
			get
			{
				return this._PlaceCreateDate;
			}
			set
			{
				if ((this._PlaceCreateDate != value))
				{
					this.OnPlaceCreateDateChanging(value);
					this.SendPropertyChanging();
					this._PlaceCreateDate = value;
					this.SendPropertyChanged("PlaceCreateDate");
					this.OnPlaceCreateDateChanged();
				}
			}
		}
		
		[Association(Name="QC_Detail_QC_Detail_SizeAudit", Storage="_QC_Detail", ThisKey="MasterID,DetailID", OtherKey="MasterID,ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public QC_Detail QC_Detail
		{
			get
			{
				return this._QC_Detail.Entity;
			}
			set
			{
				QC_Detail previousValue = this._QC_Detail.Entity;
				if (((previousValue != value) 
							|| (this._QC_Detail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QC_Detail.Entity = null;
						previousValue.QC_Detail_SizeAudits.Remove(this);
					}
					this._QC_Detail.Entity = value;
					if ((value != null))
					{
						value.QC_Detail_SizeAudits.Add(this);
						this._MasterID = value.MasterID;
						this._DetailID = value.ID;
					}
					else
					{
						this._MasterID = default(System.Guid);
						this._DetailID = default(System.Guid);
					}
					this.SendPropertyChanged("QC_Detail");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.QC_Detail_SizeAudit_Final")]
	public partial class QC_Detail_SizeAudit_Final : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _MasterID;
		
		private System.Guid _DetailID;
		
		private System.Guid _SizeID;
		
		private System.Nullable<int> _ProductSeq;
		
		private string _ArtNO;
		
		private string _StyleNO;
		
		private string _SizeCode;
		
		private string _Position;
		
		private string _Standard;
		
		private string _Uom;
		
		private string _AuditValue;
		
		private string _SizeWindageShowText;
		
		private string _SizeWindage;
		
		private string _AuditResult;
		
		private string _ImgUrl;
		
		private string _Tolerence;
		
		private string _Method;
		
		private EntityRef<QC_Detail_Final> _QC_Detail_Final;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMasterIDChanging(System.Guid value);
    partial void OnMasterIDChanged();
    partial void OnDetailIDChanging(System.Guid value);
    partial void OnDetailIDChanged();
    partial void OnSizeIDChanging(System.Guid value);
    partial void OnSizeIDChanged();
    partial void OnProductSeqChanging(System.Nullable<int> value);
    partial void OnProductSeqChanged();
    partial void OnArtNOChanging(string value);
    partial void OnArtNOChanged();
    partial void OnStyleNOChanging(string value);
    partial void OnStyleNOChanged();
    partial void OnSizeCodeChanging(string value);
    partial void OnSizeCodeChanged();
    partial void OnPositionChanging(string value);
    partial void OnPositionChanged();
    partial void OnStandardChanging(string value);
    partial void OnStandardChanged();
    partial void OnUomChanging(string value);
    partial void OnUomChanged();
    partial void OnAuditValueChanging(string value);
    partial void OnAuditValueChanged();
    partial void OnSizeWindageShowTextChanging(string value);
    partial void OnSizeWindageShowTextChanged();
    partial void OnSizeWindageChanging(string value);
    partial void OnSizeWindageChanged();
    partial void OnAuditResultChanging(string value);
    partial void OnAuditResultChanged();
    partial void OnImgUrlChanging(string value);
    partial void OnImgUrlChanged();
    partial void OnTolerenceChanging(string value);
    partial void OnTolerenceChanged();
    partial void OnMethodChanging(string value);
    partial void OnMethodChanged();
    #endregion
		
		public QC_Detail_SizeAudit_Final()
		{
			this._QC_Detail_Final = default(EntityRef<QC_Detail_Final>);
			OnCreated();
		}
		
		[Column(Storage="_MasterID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid MasterID
		{
			get
			{
				return this._MasterID;
			}
			set
			{
				if ((this._MasterID != value))
				{
					if (this._QC_Detail_Final.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMasterIDChanging(value);
					this.SendPropertyChanging();
					this._MasterID = value;
					this.SendPropertyChanged("MasterID");
					this.OnMasterIDChanged();
				}
			}
		}
		
		[Column(Storage="_DetailID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid DetailID
		{
			get
			{
				return this._DetailID;
			}
			set
			{
				if ((this._DetailID != value))
				{
					if (this._QC_Detail_Final.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDetailIDChanging(value);
					this.SendPropertyChanging();
					this._DetailID = value;
					this.SendPropertyChanged("DetailID");
					this.OnDetailIDChanged();
				}
			}
		}
		
		[Column(Storage="_SizeID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid SizeID
		{
			get
			{
				return this._SizeID;
			}
			set
			{
				if ((this._SizeID != value))
				{
					this.OnSizeIDChanging(value);
					this.SendPropertyChanging();
					this._SizeID = value;
					this.SendPropertyChanged("SizeID");
					this.OnSizeIDChanged();
				}
			}
		}
		
		[Column(Storage="_ProductSeq", DbType="Int")]
		public System.Nullable<int> ProductSeq
		{
			get
			{
				return this._ProductSeq;
			}
			set
			{
				if ((this._ProductSeq != value))
				{
					this.OnProductSeqChanging(value);
					this.SendPropertyChanging();
					this._ProductSeq = value;
					this.SendPropertyChanged("ProductSeq");
					this.OnProductSeqChanged();
				}
			}
		}
		
		[Column(Storage="_ArtNO", DbType="NVarChar(50)")]
		public string ArtNO
		{
			get
			{
				return this._ArtNO;
			}
			set
			{
				if ((this._ArtNO != value))
				{
					this.OnArtNOChanging(value);
					this.SendPropertyChanging();
					this._ArtNO = value;
					this.SendPropertyChanged("ArtNO");
					this.OnArtNOChanged();
				}
			}
		}
		
		[Column(Storage="_StyleNO", DbType="NVarChar(50)")]
		public string StyleNO
		{
			get
			{
				return this._StyleNO;
			}
			set
			{
				if ((this._StyleNO != value))
				{
					this.OnStyleNOChanging(value);
					this.SendPropertyChanging();
					this._StyleNO = value;
					this.SendPropertyChanged("StyleNO");
					this.OnStyleNOChanged();
				}
			}
		}
		
		[Column(Storage="_SizeCode", DbType="NVarChar(10)")]
		public string SizeCode
		{
			get
			{
				return this._SizeCode;
			}
			set
			{
				if ((this._SizeCode != value))
				{
					this.OnSizeCodeChanging(value);
					this.SendPropertyChanging();
					this._SizeCode = value;
					this.SendPropertyChanged("SizeCode");
					this.OnSizeCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Position", DbType="NVarChar(1000)")]
		public string Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this.OnPositionChanging(value);
					this.SendPropertyChanging();
					this._Position = value;
					this.SendPropertyChanged("Position");
					this.OnPositionChanged();
				}
			}
		}
		
		[Column(Storage="_Standard", DbType="NVarChar(10)")]
		public string Standard
		{
			get
			{
				return this._Standard;
			}
			set
			{
				if ((this._Standard != value))
				{
					this.OnStandardChanging(value);
					this.SendPropertyChanging();
					this._Standard = value;
					this.SendPropertyChanged("Standard");
					this.OnStandardChanged();
				}
			}
		}
		
		[Column(Storage="_Uom", DbType="NVarChar(10)")]
		public string Uom
		{
			get
			{
				return this._Uom;
			}
			set
			{
				if ((this._Uom != value))
				{
					this.OnUomChanging(value);
					this.SendPropertyChanging();
					this._Uom = value;
					this.SendPropertyChanged("Uom");
					this.OnUomChanged();
				}
			}
		}
		
		[Column(Storage="_AuditValue", DbType="NVarChar(10)")]
		public string AuditValue
		{
			get
			{
				return this._AuditValue;
			}
			set
			{
				if ((this._AuditValue != value))
				{
					this.OnAuditValueChanging(value);
					this.SendPropertyChanging();
					this._AuditValue = value;
					this.SendPropertyChanged("AuditValue");
					this.OnAuditValueChanged();
				}
			}
		}
		
		[Column(Storage="_SizeWindageShowText", DbType="NVarChar(10)")]
		public string SizeWindageShowText
		{
			get
			{
				return this._SizeWindageShowText;
			}
			set
			{
				if ((this._SizeWindageShowText != value))
				{
					this.OnSizeWindageShowTextChanging(value);
					this.SendPropertyChanging();
					this._SizeWindageShowText = value;
					this.SendPropertyChanged("SizeWindageShowText");
					this.OnSizeWindageShowTextChanged();
				}
			}
		}
		
		[Column(Storage="_SizeWindage", DbType="NVarChar(10)")]
		public string SizeWindage
		{
			get
			{
				return this._SizeWindage;
			}
			set
			{
				if ((this._SizeWindage != value))
				{
					this.OnSizeWindageChanging(value);
					this.SendPropertyChanging();
					this._SizeWindage = value;
					this.SendPropertyChanged("SizeWindage");
					this.OnSizeWindageChanged();
				}
			}
		}
		
		[Column(Storage="_AuditResult", DbType="NVarChar(10)")]
		public string AuditResult
		{
			get
			{
				return this._AuditResult;
			}
			set
			{
				if ((this._AuditResult != value))
				{
					this.OnAuditResultChanging(value);
					this.SendPropertyChanging();
					this._AuditResult = value;
					this.SendPropertyChanged("AuditResult");
					this.OnAuditResultChanged();
				}
			}
		}
		
		[Column(Storage="_ImgUrl", DbType="NVarChar(50)")]
		public string ImgUrl
		{
			get
			{
				return this._ImgUrl;
			}
			set
			{
				if ((this._ImgUrl != value))
				{
					this.OnImgUrlChanging(value);
					this.SendPropertyChanging();
					this._ImgUrl = value;
					this.SendPropertyChanged("ImgUrl");
					this.OnImgUrlChanged();
				}
			}
		}
		
		[Column(Storage="_Tolerence", DbType="NVarChar(50)")]
		public string Tolerence
		{
			get
			{
				return this._Tolerence;
			}
			set
			{
				if ((this._Tolerence != value))
				{
					this.OnTolerenceChanging(value);
					this.SendPropertyChanging();
					this._Tolerence = value;
					this.SendPropertyChanged("Tolerence");
					this.OnTolerenceChanged();
				}
			}
		}
		
		[Column(Storage="_Method", DbType="NVarChar(50)")]
		public string Method
		{
			get
			{
				return this._Method;
			}
			set
			{
				if ((this._Method != value))
				{
					this.OnMethodChanging(value);
					this.SendPropertyChanging();
					this._Method = value;
					this.SendPropertyChanged("Method");
					this.OnMethodChanged();
				}
			}
		}
		
		[Association(Name="QC_Detail_Final_QC_Detail_SizeAudit_Final", Storage="_QC_Detail_Final", ThisKey="MasterID,DetailID", OtherKey="MasterID,ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public QC_Detail_Final QC_Detail_Final
		{
			get
			{
				return this._QC_Detail_Final.Entity;
			}
			set
			{
				QC_Detail_Final previousValue = this._QC_Detail_Final.Entity;
				if (((previousValue != value) 
							|| (this._QC_Detail_Final.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QC_Detail_Final.Entity = null;
						previousValue.QC_Detail_SizeAudit_Finals.Remove(this);
					}
					this._QC_Detail_Final.Entity = value;
					if ((value != null))
					{
						value.QC_Detail_SizeAudit_Finals.Add(this);
						this._MasterID = value.MasterID;
						this._DetailID = value.ID;
					}
					else
					{
						this._MasterID = default(System.Guid);
						this._DetailID = default(System.Guid);
					}
					this.SendPropertyChanged("QC_Detail_Final");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.CustQCDetail")]
	public partial class CustQCDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _OID;
		
		private System.Nullable<long> _MasterOID;
		
		private string _DefectCode;
		
		private System.Nullable<int> _CriticalDefectQty;
		
		private System.Nullable<int> _MarjorDefectQty;
		
		private System.Nullable<int> _MinorDefectQty;
		
		private string _DefectPicture1URL;
		
		private string _DefectPicture2URL;
		
		private EntityRef<CustQCMaster> _CustQCMaster;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOIDChanging(long value);
    partial void OnOIDChanged();
    partial void OnMasterOIDChanging(System.Nullable<long> value);
    partial void OnMasterOIDChanged();
    partial void OnDefectCodeChanging(string value);
    partial void OnDefectCodeChanged();
    partial void OnCriticalDefectQtyChanging(System.Nullable<int> value);
    partial void OnCriticalDefectQtyChanged();
    partial void OnMarjorDefectQtyChanging(System.Nullable<int> value);
    partial void OnMarjorDefectQtyChanged();
    partial void OnMinorDefectQtyChanging(System.Nullable<int> value);
    partial void OnMinorDefectQtyChanged();
    partial void OnDefectPicture1URLChanging(string value);
    partial void OnDefectPicture1URLChanged();
    partial void OnDefectPicture2URLChanging(string value);
    partial void OnDefectPicture2URLChanged();
    #endregion
		
		public CustQCDetail()
		{
			this._CustQCMaster = default(EntityRef<CustQCMaster>);
			OnCreated();
		}
		
		[Column(Storage="_OID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long OID
		{
			get
			{
				return this._OID;
			}
			set
			{
				if ((this._OID != value))
				{
					this.OnOIDChanging(value);
					this.SendPropertyChanging();
					this._OID = value;
					this.SendPropertyChanged("OID");
					this.OnOIDChanged();
				}
			}
		}
		
		[Column(Storage="_MasterOID", DbType="BigInt")]
		public System.Nullable<long> MasterOID
		{
			get
			{
				return this._MasterOID;
			}
			set
			{
				if ((this._MasterOID != value))
				{
					if (this._CustQCMaster.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMasterOIDChanging(value);
					this.SendPropertyChanging();
					this._MasterOID = value;
					this.SendPropertyChanged("MasterOID");
					this.OnMasterOIDChanged();
				}
			}
		}
		
		[Column(Storage="_DefectCode", DbType="VarChar(15)")]
		public string DefectCode
		{
			get
			{
				return this._DefectCode;
			}
			set
			{
				if ((this._DefectCode != value))
				{
					this.OnDefectCodeChanging(value);
					this.SendPropertyChanging();
					this._DefectCode = value;
					this.SendPropertyChanged("DefectCode");
					this.OnDefectCodeChanged();
				}
			}
		}
		
		[Column(Storage="_CriticalDefectQty", DbType="Int")]
		public System.Nullable<int> CriticalDefectQty
		{
			get
			{
				return this._CriticalDefectQty;
			}
			set
			{
				if ((this._CriticalDefectQty != value))
				{
					this.OnCriticalDefectQtyChanging(value);
					this.SendPropertyChanging();
					this._CriticalDefectQty = value;
					this.SendPropertyChanged("CriticalDefectQty");
					this.OnCriticalDefectQtyChanged();
				}
			}
		}
		
		[Column(Storage="_MarjorDefectQty", DbType="Int")]
		public System.Nullable<int> MarjorDefectQty
		{
			get
			{
				return this._MarjorDefectQty;
			}
			set
			{
				if ((this._MarjorDefectQty != value))
				{
					this.OnMarjorDefectQtyChanging(value);
					this.SendPropertyChanging();
					this._MarjorDefectQty = value;
					this.SendPropertyChanged("MarjorDefectQty");
					this.OnMarjorDefectQtyChanged();
				}
			}
		}
		
		[Column(Storage="_MinorDefectQty", DbType="Int")]
		public System.Nullable<int> MinorDefectQty
		{
			get
			{
				return this._MinorDefectQty;
			}
			set
			{
				if ((this._MinorDefectQty != value))
				{
					this.OnMinorDefectQtyChanging(value);
					this.SendPropertyChanging();
					this._MinorDefectQty = value;
					this.SendPropertyChanged("MinorDefectQty");
					this.OnMinorDefectQtyChanged();
				}
			}
		}
		
		[Column(Storage="_DefectPicture1URL", DbType="VarChar(200)")]
		public string DefectPicture1URL
		{
			get
			{
				return this._DefectPicture1URL;
			}
			set
			{
				if ((this._DefectPicture1URL != value))
				{
					this.OnDefectPicture1URLChanging(value);
					this.SendPropertyChanging();
					this._DefectPicture1URL = value;
					this.SendPropertyChanged("DefectPicture1URL");
					this.OnDefectPicture1URLChanged();
				}
			}
		}
		
		[Column(Storage="_DefectPicture2URL", DbType="VarChar(200)")]
		public string DefectPicture2URL
		{
			get
			{
				return this._DefectPicture2URL;
			}
			set
			{
				if ((this._DefectPicture2URL != value))
				{
					this.OnDefectPicture2URLChanging(value);
					this.SendPropertyChanging();
					this._DefectPicture2URL = value;
					this.SendPropertyChanged("DefectPicture2URL");
					this.OnDefectPicture2URLChanged();
				}
			}
		}
		
		[Association(Name="CustQCMaster_CustQCDetail", Storage="_CustQCMaster", ThisKey="MasterOID", OtherKey="OID", IsForeignKey=true, DeleteRule="CASCADE")]
		public CustQCMaster CustQCMaster
		{
			get
			{
				return this._CustQCMaster.Entity;
			}
			set
			{
				CustQCMaster previousValue = this._CustQCMaster.Entity;
				if (((previousValue != value) 
							|| (this._CustQCMaster.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustQCMaster.Entity = null;
						previousValue.CustQCDetails.Remove(this);
					}
					this._CustQCMaster.Entity = value;
					if ((value != null))
					{
						value.CustQCDetails.Add(this);
						this._MasterOID = value.OID;
					}
					else
					{
						this._MasterOID = default(Nullable<long>);
					}
					this.SendPropertyChanged("CustQCMaster");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.CustQCDetail_Interim")]
	public partial class CustQCDetail_Interim : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _OID;
		
		private System.Nullable<long> _MasterOID;
		
		private string _DefectCode;
		
		private System.Nullable<int> _CriticalDefectQty;
		
		private System.Nullable<int> _MarjorDefectQty;
		
		private System.Nullable<int> _MinorDefectQty;
		
		private string _DefectPicture1URL;
		
		private string _DefectPicture2URL;
		
		private EntityRef<CustQCMaster_Interim> _CustQCMaster_Interim;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOIDChanging(long value);
    partial void OnOIDChanged();
    partial void OnMasterOIDChanging(System.Nullable<long> value);
    partial void OnMasterOIDChanged();
    partial void OnDefectCodeChanging(string value);
    partial void OnDefectCodeChanged();
    partial void OnCriticalDefectQtyChanging(System.Nullable<int> value);
    partial void OnCriticalDefectQtyChanged();
    partial void OnMarjorDefectQtyChanging(System.Nullable<int> value);
    partial void OnMarjorDefectQtyChanged();
    partial void OnMinorDefectQtyChanging(System.Nullable<int> value);
    partial void OnMinorDefectQtyChanged();
    partial void OnDefectPicture1URLChanging(string value);
    partial void OnDefectPicture1URLChanged();
    partial void OnDefectPicture2URLChanging(string value);
    partial void OnDefectPicture2URLChanged();
    #endregion
		
		public CustQCDetail_Interim()
		{
			this._CustQCMaster_Interim = default(EntityRef<CustQCMaster_Interim>);
			OnCreated();
		}
		
		[Column(Storage="_OID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long OID
		{
			get
			{
				return this._OID;
			}
			set
			{
				if ((this._OID != value))
				{
					this.OnOIDChanging(value);
					this.SendPropertyChanging();
					this._OID = value;
					this.SendPropertyChanged("OID");
					this.OnOIDChanged();
				}
			}
		}
		
		[Column(Storage="_MasterOID", DbType="BigInt")]
		public System.Nullable<long> MasterOID
		{
			get
			{
				return this._MasterOID;
			}
			set
			{
				if ((this._MasterOID != value))
				{
					if (this._CustQCMaster_Interim.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMasterOIDChanging(value);
					this.SendPropertyChanging();
					this._MasterOID = value;
					this.SendPropertyChanged("MasterOID");
					this.OnMasterOIDChanged();
				}
			}
		}
		
		[Column(Storage="_DefectCode", DbType="VarChar(15)")]
		public string DefectCode
		{
			get
			{
				return this._DefectCode;
			}
			set
			{
				if ((this._DefectCode != value))
				{
					this.OnDefectCodeChanging(value);
					this.SendPropertyChanging();
					this._DefectCode = value;
					this.SendPropertyChanged("DefectCode");
					this.OnDefectCodeChanged();
				}
			}
		}
		
		[Column(Storage="_CriticalDefectQty", DbType="Int")]
		public System.Nullable<int> CriticalDefectQty
		{
			get
			{
				return this._CriticalDefectQty;
			}
			set
			{
				if ((this._CriticalDefectQty != value))
				{
					this.OnCriticalDefectQtyChanging(value);
					this.SendPropertyChanging();
					this._CriticalDefectQty = value;
					this.SendPropertyChanged("CriticalDefectQty");
					this.OnCriticalDefectQtyChanged();
				}
			}
		}
		
		[Column(Storage="_MarjorDefectQty", DbType="Int")]
		public System.Nullable<int> MarjorDefectQty
		{
			get
			{
				return this._MarjorDefectQty;
			}
			set
			{
				if ((this._MarjorDefectQty != value))
				{
					this.OnMarjorDefectQtyChanging(value);
					this.SendPropertyChanging();
					this._MarjorDefectQty = value;
					this.SendPropertyChanged("MarjorDefectQty");
					this.OnMarjorDefectQtyChanged();
				}
			}
		}
		
		[Column(Storage="_MinorDefectQty", DbType="Int")]
		public System.Nullable<int> MinorDefectQty
		{
			get
			{
				return this._MinorDefectQty;
			}
			set
			{
				if ((this._MinorDefectQty != value))
				{
					this.OnMinorDefectQtyChanging(value);
					this.SendPropertyChanging();
					this._MinorDefectQty = value;
					this.SendPropertyChanged("MinorDefectQty");
					this.OnMinorDefectQtyChanged();
				}
			}
		}
		
		[Column(Storage="_DefectPicture1URL", DbType="VarChar(200)")]
		public string DefectPicture1URL
		{
			get
			{
				return this._DefectPicture1URL;
			}
			set
			{
				if ((this._DefectPicture1URL != value))
				{
					this.OnDefectPicture1URLChanging(value);
					this.SendPropertyChanging();
					this._DefectPicture1URL = value;
					this.SendPropertyChanged("DefectPicture1URL");
					this.OnDefectPicture1URLChanged();
				}
			}
		}
		
		[Column(Storage="_DefectPicture2URL", DbType="VarChar(200)")]
		public string DefectPicture2URL
		{
			get
			{
				return this._DefectPicture2URL;
			}
			set
			{
				if ((this._DefectPicture2URL != value))
				{
					this.OnDefectPicture2URLChanging(value);
					this.SendPropertyChanging();
					this._DefectPicture2URL = value;
					this.SendPropertyChanged("DefectPicture2URL");
					this.OnDefectPicture2URLChanged();
				}
			}
		}
		
		[Association(Name="CustQCMaster_Interim_CustQCDetail_Interim", Storage="_CustQCMaster_Interim", ThisKey="MasterOID", OtherKey="OID", IsForeignKey=true, DeleteRule="CASCADE")]
		public CustQCMaster_Interim CustQCMaster_Interim
		{
			get
			{
				return this._CustQCMaster_Interim.Entity;
			}
			set
			{
				CustQCMaster_Interim previousValue = this._CustQCMaster_Interim.Entity;
				if (((previousValue != value) 
							|| (this._CustQCMaster_Interim.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustQCMaster_Interim.Entity = null;
						previousValue.CustQCDetail_Interims.Remove(this);
					}
					this._CustQCMaster_Interim.Entity = value;
					if ((value != null))
					{
						value.CustQCDetail_Interims.Add(this);
						this._MasterOID = value.OID;
					}
					else
					{
						this._MasterOID = default(Nullable<long>);
					}
					this.SendPropertyChanged("CustQCMaster_Interim");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.QC_AQLLevel")]
	public partial class QC_AQLLevel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OID;
		
		private string _OATeam;
		
		private string _Customer;
		
		private string _ProjectNo;
		
		private string _AQLMarjorLevel;
		
		private string _AQLMinorLevel;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOIDChanging(int value);
    partial void OnOIDChanged();
    partial void OnOATeamChanging(string value);
    partial void OnOATeamChanged();
    partial void OnCustomerChanging(string value);
    partial void OnCustomerChanged();
    partial void OnProjectNoChanging(string value);
    partial void OnProjectNoChanged();
    partial void OnAQLMarjorLevelChanging(string value);
    partial void OnAQLMarjorLevelChanged();
    partial void OnAQLMinorLevelChanging(string value);
    partial void OnAQLMinorLevelChanged();
    #endregion
		
		public QC_AQLLevel()
		{
			OnCreated();
		}
		
		[Column(Storage="_OID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int OID
		{
			get
			{
				return this._OID;
			}
			set
			{
				if ((this._OID != value))
				{
					this.OnOIDChanging(value);
					this.SendPropertyChanging();
					this._OID = value;
					this.SendPropertyChanged("OID");
					this.OnOIDChanged();
				}
			}
		}
		
		[Column(Storage="_OATeam", DbType="VarChar(10)")]
		public string OATeam
		{
			get
			{
				return this._OATeam;
			}
			set
			{
				if ((this._OATeam != value))
				{
					this.OnOATeamChanging(value);
					this.SendPropertyChanging();
					this._OATeam = value;
					this.SendPropertyChanged("OATeam");
					this.OnOATeamChanged();
				}
			}
		}
		
		[Column(Storage="_Customer", DbType="VarChar(10)")]
		public string Customer
		{
			get
			{
				return this._Customer;
			}
			set
			{
				if ((this._Customer != value))
				{
					this.OnCustomerChanging(value);
					this.SendPropertyChanging();
					this._Customer = value;
					this.SendPropertyChanged("Customer");
					this.OnCustomerChanged();
				}
			}
		}
		
		[Column(Storage="_ProjectNo", DbType="VarChar(10)")]
		public string ProjectNo
		{
			get
			{
				return this._ProjectNo;
			}
			set
			{
				if ((this._ProjectNo != value))
				{
					this.OnProjectNoChanging(value);
					this.SendPropertyChanging();
					this._ProjectNo = value;
					this.SendPropertyChanged("ProjectNo");
					this.OnProjectNoChanged();
				}
			}
		}
		
		[Column(Storage="_AQLMarjorLevel", DbType="VarChar(50)")]
		public string AQLMarjorLevel
		{
			get
			{
				return this._AQLMarjorLevel;
			}
			set
			{
				if ((this._AQLMarjorLevel != value))
				{
					this.OnAQLMarjorLevelChanging(value);
					this.SendPropertyChanging();
					this._AQLMarjorLevel = value;
					this.SendPropertyChanged("AQLMarjorLevel");
					this.OnAQLMarjorLevelChanged();
				}
			}
		}
		
		[Column(Storage="_AQLMinorLevel", DbType="VarChar(50)")]
		public string AQLMinorLevel
		{
			get
			{
				return this._AQLMinorLevel;
			}
			set
			{
				if ((this._AQLMinorLevel != value))
				{
					this.OnAQLMinorLevelChanging(value);
					this.SendPropertyChanging();
					this._AQLMinorLevel = value;
					this.SendPropertyChanged("AQLMinorLevel");
					this.OnAQLMinorLevelChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.CustQCMaster_Interim")]
	public partial class CustQCMaster_Interim : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _OID;
		
		private System.Nullable<System.DateTime> _ExamDate;
		
		private string _Customer;
		
		private string _CustStyle;
		
		private System.Nullable<int> _POQty;
		
		private System.Nullable<int> _SampleSizeQty;
		
		private string _AQLMarjorDefectLevel;
		
		private System.Nullable<int> _AQLMarjorDefectAcceptQty;
		
		private string _AQLMinorDefectLevel;
		
		private System.Nullable<int> _AQLMinorDefectAcceptQty;
		
		private string _NeedAQL;
		
		private string _NeedStudy;
		
		private string _QCExamNO;
		
		private string _ProductType;
		
		private System.Nullable<System.DateTime> _ShipmentDate;
		
		private System.Nullable<int> _ShipmentPOQty;
		
		private System.Nullable<int> _ShipmentStyleQty;
		
		private System.Nullable<int> _ShipmentColorQty;
		
		private System.Nullable<int> _ShipmentSizeQty;
		
		private System.Nullable<int> _ExamCartonQty;
		
		private System.Nullable<int> _StandardCartonQty;
		
		private System.Nullable<int> _LogQty;
		
		private string _QCExaminer;
		
		private string _ResponsibleDept;
		
		private string _ProjectNO;
		
		private string _Color;
		
		private string _QCLocation;
		
		private string _CatLogNO;
		
		private string _MfgLocation;
		
		private string _CustomerPO;
		
		private string _WO;
		
		private System.Nullable<int> _SampleSize;
		
		private EntitySet<CustQCDetail_Interim> _CustQCDetail_Interims;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOIDChanging(long value);
    partial void OnOIDChanged();
    partial void OnExamDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExamDateChanged();
    partial void OnCustomerChanging(string value);
    partial void OnCustomerChanged();
    partial void OnCustStyleChanging(string value);
    partial void OnCustStyleChanged();
    partial void OnPOQtyChanging(System.Nullable<int> value);
    partial void OnPOQtyChanged();
    partial void OnSampleSizeQtyChanging(System.Nullable<int> value);
    partial void OnSampleSizeQtyChanged();
    partial void OnAQLMarjorDefectLevelChanging(string value);
    partial void OnAQLMarjorDefectLevelChanged();
    partial void OnAQLMarjorDefectAcceptQtyChanging(System.Nullable<int> value);
    partial void OnAQLMarjorDefectAcceptQtyChanged();
    partial void OnAQLMinorDefectLevelChanging(string value);
    partial void OnAQLMinorDefectLevelChanged();
    partial void OnAQLMinorDefectAcceptQtyChanging(System.Nullable<int> value);
    partial void OnAQLMinorDefectAcceptQtyChanged();
    partial void OnNeedAQLChanging(string value);
    partial void OnNeedAQLChanged();
    partial void OnNeedStudyChanging(string value);
    partial void OnNeedStudyChanged();
    partial void OnQCExamNOChanging(string value);
    partial void OnQCExamNOChanged();
    partial void OnProductTypeChanging(string value);
    partial void OnProductTypeChanged();
    partial void OnShipmentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnShipmentDateChanged();
    partial void OnShipmentPOQtyChanging(System.Nullable<int> value);
    partial void OnShipmentPOQtyChanged();
    partial void OnShipmentStyleQtyChanging(System.Nullable<int> value);
    partial void OnShipmentStyleQtyChanged();
    partial void OnShipmentColorQtyChanging(System.Nullable<int> value);
    partial void OnShipmentColorQtyChanged();
    partial void OnShipmentSizeQtyChanging(System.Nullable<int> value);
    partial void OnShipmentSizeQtyChanged();
    partial void OnExamCartonQtyChanging(System.Nullable<int> value);
    partial void OnExamCartonQtyChanged();
    partial void OnStandardCartonQtyChanging(System.Nullable<int> value);
    partial void OnStandardCartonQtyChanged();
    partial void OnLogQtyChanging(System.Nullable<int> value);
    partial void OnLogQtyChanged();
    partial void OnQCExaminerChanging(string value);
    partial void OnQCExaminerChanged();
    partial void OnResponsibleDeptChanging(string value);
    partial void OnResponsibleDeptChanged();
    partial void OnProjectNOChanging(string value);
    partial void OnProjectNOChanged();
    partial void OnColorChanging(string value);
    partial void OnColorChanged();
    partial void OnQCLocationChanging(string value);
    partial void OnQCLocationChanged();
    partial void OnCatLogNOChanging(string value);
    partial void OnCatLogNOChanged();
    partial void OnMfgLocationChanging(string value);
    partial void OnMfgLocationChanged();
    partial void OnCustomerPOChanging(string value);
    partial void OnCustomerPOChanged();
    partial void OnWOChanging(string value);
    partial void OnWOChanged();
    partial void OnSampleSizeChanging(System.Nullable<int> value);
    partial void OnSampleSizeChanged();
    #endregion
		
		public CustQCMaster_Interim()
		{
			this._CustQCDetail_Interims = new EntitySet<CustQCDetail_Interim>(new Action<CustQCDetail_Interim>(this.attach_CustQCDetail_Interims), new Action<CustQCDetail_Interim>(this.detach_CustQCDetail_Interims));
			OnCreated();
		}
		
		[Column(Storage="_OID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long OID
		{
			get
			{
				return this._OID;
			}
			set
			{
				if ((this._OID != value))
				{
					this.OnOIDChanging(value);
					this.SendPropertyChanging();
					this._OID = value;
					this.SendPropertyChanged("OID");
					this.OnOIDChanged();
				}
			}
		}
		
		[Column(Storage="_ExamDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ExamDate
		{
			get
			{
				return this._ExamDate;
			}
			set
			{
				if ((this._ExamDate != value))
				{
					this.OnExamDateChanging(value);
					this.SendPropertyChanging();
					this._ExamDate = value;
					this.SendPropertyChanged("ExamDate");
					this.OnExamDateChanged();
				}
			}
		}
		
		[Column(Storage="_Customer", DbType="VarChar(10)")]
		public string Customer
		{
			get
			{
				return this._Customer;
			}
			set
			{
				if ((this._Customer != value))
				{
					this.OnCustomerChanging(value);
					this.SendPropertyChanging();
					this._Customer = value;
					this.SendPropertyChanged("Customer");
					this.OnCustomerChanged();
				}
			}
		}
		
		[Column(Storage="_CustStyle", DbType="VarChar(500)")]
		public string CustStyle
		{
			get
			{
				return this._CustStyle;
			}
			set
			{
				if ((this._CustStyle != value))
				{
					this.OnCustStyleChanging(value);
					this.SendPropertyChanging();
					this._CustStyle = value;
					this.SendPropertyChanged("CustStyle");
					this.OnCustStyleChanged();
				}
			}
		}
		
		[Column(Storage="_POQty", DbType="Int")]
		public System.Nullable<int> POQty
		{
			get
			{
				return this._POQty;
			}
			set
			{
				if ((this._POQty != value))
				{
					this.OnPOQtyChanging(value);
					this.SendPropertyChanging();
					this._POQty = value;
					this.SendPropertyChanged("POQty");
					this.OnPOQtyChanged();
				}
			}
		}
		
		[Column(Storage="_SampleSizeQty", DbType="Int")]
		public System.Nullable<int> SampleSizeQty
		{
			get
			{
				return this._SampleSizeQty;
			}
			set
			{
				if ((this._SampleSizeQty != value))
				{
					this.OnSampleSizeQtyChanging(value);
					this.SendPropertyChanging();
					this._SampleSizeQty = value;
					this.SendPropertyChanged("SampleSizeQty");
					this.OnSampleSizeQtyChanged();
				}
			}
		}
		
		[Column(Storage="_AQLMarjorDefectLevel", DbType="VarChar(50)")]
		public string AQLMarjorDefectLevel
		{
			get
			{
				return this._AQLMarjorDefectLevel;
			}
			set
			{
				if ((this._AQLMarjorDefectLevel != value))
				{
					this.OnAQLMarjorDefectLevelChanging(value);
					this.SendPropertyChanging();
					this._AQLMarjorDefectLevel = value;
					this.SendPropertyChanged("AQLMarjorDefectLevel");
					this.OnAQLMarjorDefectLevelChanged();
				}
			}
		}
		
		[Column(Storage="_AQLMarjorDefectAcceptQty", DbType="Int")]
		public System.Nullable<int> AQLMarjorDefectAcceptQty
		{
			get
			{
				return this._AQLMarjorDefectAcceptQty;
			}
			set
			{
				if ((this._AQLMarjorDefectAcceptQty != value))
				{
					this.OnAQLMarjorDefectAcceptQtyChanging(value);
					this.SendPropertyChanging();
					this._AQLMarjorDefectAcceptQty = value;
					this.SendPropertyChanged("AQLMarjorDefectAcceptQty");
					this.OnAQLMarjorDefectAcceptQtyChanged();
				}
			}
		}
		
		[Column(Storage="_AQLMinorDefectLevel", DbType="VarChar(50)")]
		public string AQLMinorDefectLevel
		{
			get
			{
				return this._AQLMinorDefectLevel;
			}
			set
			{
				if ((this._AQLMinorDefectLevel != value))
				{
					this.OnAQLMinorDefectLevelChanging(value);
					this.SendPropertyChanging();
					this._AQLMinorDefectLevel = value;
					this.SendPropertyChanged("AQLMinorDefectLevel");
					this.OnAQLMinorDefectLevelChanged();
				}
			}
		}
		
		[Column(Storage="_AQLMinorDefectAcceptQty", DbType="Int")]
		public System.Nullable<int> AQLMinorDefectAcceptQty
		{
			get
			{
				return this._AQLMinorDefectAcceptQty;
			}
			set
			{
				if ((this._AQLMinorDefectAcceptQty != value))
				{
					this.OnAQLMinorDefectAcceptQtyChanging(value);
					this.SendPropertyChanging();
					this._AQLMinorDefectAcceptQty = value;
					this.SendPropertyChanged("AQLMinorDefectAcceptQty");
					this.OnAQLMinorDefectAcceptQtyChanged();
				}
			}
		}
		
		[Column(Storage="_NeedAQL", DbType="VarChar(10)")]
		public string NeedAQL
		{
			get
			{
				return this._NeedAQL;
			}
			set
			{
				if ((this._NeedAQL != value))
				{
					this.OnNeedAQLChanging(value);
					this.SendPropertyChanging();
					this._NeedAQL = value;
					this.SendPropertyChanged("NeedAQL");
					this.OnNeedAQLChanged();
				}
			}
		}
		
		[Column(Storage="_NeedStudy", DbType="VarChar(10)")]
		public string NeedStudy
		{
			get
			{
				return this._NeedStudy;
			}
			set
			{
				if ((this._NeedStudy != value))
				{
					this.OnNeedStudyChanging(value);
					this.SendPropertyChanging();
					this._NeedStudy = value;
					this.SendPropertyChanged("NeedStudy");
					this.OnNeedStudyChanged();
				}
			}
		}
		
		[Column(Storage="_QCExamNO", DbType="VarChar(50)")]
		public string QCExamNO
		{
			get
			{
				return this._QCExamNO;
			}
			set
			{
				if ((this._QCExamNO != value))
				{
					this.OnQCExamNOChanging(value);
					this.SendPropertyChanging();
					this._QCExamNO = value;
					this.SendPropertyChanged("QCExamNO");
					this.OnQCExamNOChanged();
				}
			}
		}
		
		[Column(Storage="_ProductType", DbType="VarChar(50)")]
		public string ProductType
		{
			get
			{
				return this._ProductType;
			}
			set
			{
				if ((this._ProductType != value))
				{
					this.OnProductTypeChanging(value);
					this.SendPropertyChanging();
					this._ProductType = value;
					this.SendPropertyChanged("ProductType");
					this.OnProductTypeChanged();
				}
			}
		}
		
		[Column(Storage="_ShipmentDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ShipmentDate
		{
			get
			{
				return this._ShipmentDate;
			}
			set
			{
				if ((this._ShipmentDate != value))
				{
					this.OnShipmentDateChanging(value);
					this.SendPropertyChanging();
					this._ShipmentDate = value;
					this.SendPropertyChanged("ShipmentDate");
					this.OnShipmentDateChanged();
				}
			}
		}
		
		[Column(Storage="_ShipmentPOQty", DbType="Int")]
		public System.Nullable<int> ShipmentPOQty
		{
			get
			{
				return this._ShipmentPOQty;
			}
			set
			{
				if ((this._ShipmentPOQty != value))
				{
					this.OnShipmentPOQtyChanging(value);
					this.SendPropertyChanging();
					this._ShipmentPOQty = value;
					this.SendPropertyChanged("ShipmentPOQty");
					this.OnShipmentPOQtyChanged();
				}
			}
		}
		
		[Column(Storage="_ShipmentStyleQty", DbType="Int")]
		public System.Nullable<int> ShipmentStyleQty
		{
			get
			{
				return this._ShipmentStyleQty;
			}
			set
			{
				if ((this._ShipmentStyleQty != value))
				{
					this.OnShipmentStyleQtyChanging(value);
					this.SendPropertyChanging();
					this._ShipmentStyleQty = value;
					this.SendPropertyChanged("ShipmentStyleQty");
					this.OnShipmentStyleQtyChanged();
				}
			}
		}
		
		[Column(Storage="_ShipmentColorQty", DbType="Int")]
		public System.Nullable<int> ShipmentColorQty
		{
			get
			{
				return this._ShipmentColorQty;
			}
			set
			{
				if ((this._ShipmentColorQty != value))
				{
					this.OnShipmentColorQtyChanging(value);
					this.SendPropertyChanging();
					this._ShipmentColorQty = value;
					this.SendPropertyChanged("ShipmentColorQty");
					this.OnShipmentColorQtyChanged();
				}
			}
		}
		
		[Column(Storage="_ShipmentSizeQty", DbType="Int")]
		public System.Nullable<int> ShipmentSizeQty
		{
			get
			{
				return this._ShipmentSizeQty;
			}
			set
			{
				if ((this._ShipmentSizeQty != value))
				{
					this.OnShipmentSizeQtyChanging(value);
					this.SendPropertyChanging();
					this._ShipmentSizeQty = value;
					this.SendPropertyChanged("ShipmentSizeQty");
					this.OnShipmentSizeQtyChanged();
				}
			}
		}
		
		[Column(Storage="_ExamCartonQty", DbType="Int")]
		public System.Nullable<int> ExamCartonQty
		{
			get
			{
				return this._ExamCartonQty;
			}
			set
			{
				if ((this._ExamCartonQty != value))
				{
					this.OnExamCartonQtyChanging(value);
					this.SendPropertyChanging();
					this._ExamCartonQty = value;
					this.SendPropertyChanged("ExamCartonQty");
					this.OnExamCartonQtyChanged();
				}
			}
		}
		
		[Column(Storage="_StandardCartonQty", DbType="Int")]
		public System.Nullable<int> StandardCartonQty
		{
			get
			{
				return this._StandardCartonQty;
			}
			set
			{
				if ((this._StandardCartonQty != value))
				{
					this.OnStandardCartonQtyChanging(value);
					this.SendPropertyChanging();
					this._StandardCartonQty = value;
					this.SendPropertyChanged("StandardCartonQty");
					this.OnStandardCartonQtyChanged();
				}
			}
		}
		
		[Column(Storage="_LogQty", DbType="Int")]
		public System.Nullable<int> LogQty
		{
			get
			{
				return this._LogQty;
			}
			set
			{
				if ((this._LogQty != value))
				{
					this.OnLogQtyChanging(value);
					this.SendPropertyChanging();
					this._LogQty = value;
					this.SendPropertyChanged("LogQty");
					this.OnLogQtyChanged();
				}
			}
		}
		
		[Column(Storage="_QCExaminer", DbType="VarChar(50)")]
		public string QCExaminer
		{
			get
			{
				return this._QCExaminer;
			}
			set
			{
				if ((this._QCExaminer != value))
				{
					this.OnQCExaminerChanging(value);
					this.SendPropertyChanging();
					this._QCExaminer = value;
					this.SendPropertyChanged("QCExaminer");
					this.OnQCExaminerChanged();
				}
			}
		}
		
		[Column(Storage="_ResponsibleDept", DbType="VarChar(1000)")]
		public string ResponsibleDept
		{
			get
			{
				return this._ResponsibleDept;
			}
			set
			{
				if ((this._ResponsibleDept != value))
				{
					this.OnResponsibleDeptChanging(value);
					this.SendPropertyChanging();
					this._ResponsibleDept = value;
					this.SendPropertyChanged("ResponsibleDept");
					this.OnResponsibleDeptChanged();
				}
			}
		}
		
		[Column(Storage="_ProjectNO", DbType="VarChar(500)")]
		public string ProjectNO
		{
			get
			{
				return this._ProjectNO;
			}
			set
			{
				if ((this._ProjectNO != value))
				{
					this.OnProjectNOChanging(value);
					this.SendPropertyChanging();
					this._ProjectNO = value;
					this.SendPropertyChanged("ProjectNO");
					this.OnProjectNOChanged();
				}
			}
		}
		
		[Column(Storage="_Color", DbType="VarChar(500)")]
		public string Color
		{
			get
			{
				return this._Color;
			}
			set
			{
				if ((this._Color != value))
				{
					this.OnColorChanging(value);
					this.SendPropertyChanging();
					this._Color = value;
					this.SendPropertyChanged("Color");
					this.OnColorChanged();
				}
			}
		}
		
		[Column(Storage="_QCLocation", DbType="VarChar(20)")]
		public string QCLocation
		{
			get
			{
				return this._QCLocation;
			}
			set
			{
				if ((this._QCLocation != value))
				{
					this.OnQCLocationChanging(value);
					this.SendPropertyChanging();
					this._QCLocation = value;
					this.SendPropertyChanged("QCLocation");
					this.OnQCLocationChanged();
				}
			}
		}
		
		[Column(Storage="_CatLogNO", DbType="VarChar(20)")]
		public string CatLogNO
		{
			get
			{
				return this._CatLogNO;
			}
			set
			{
				if ((this._CatLogNO != value))
				{
					this.OnCatLogNOChanging(value);
					this.SendPropertyChanging();
					this._CatLogNO = value;
					this.SendPropertyChanged("CatLogNO");
					this.OnCatLogNOChanged();
				}
			}
		}
		
		[Column(Storage="_MfgLocation", DbType="VarChar(20)")]
		public string MfgLocation
		{
			get
			{
				return this._MfgLocation;
			}
			set
			{
				if ((this._MfgLocation != value))
				{
					this.OnMfgLocationChanging(value);
					this.SendPropertyChanging();
					this._MfgLocation = value;
					this.SendPropertyChanged("MfgLocation");
					this.OnMfgLocationChanged();
				}
			}
		}
		
		[Column(Storage="_CustomerPO", DbType="VarChar(1000)")]
		public string CustomerPO
		{
			get
			{
				return this._CustomerPO;
			}
			set
			{
				if ((this._CustomerPO != value))
				{
					this.OnCustomerPOChanging(value);
					this.SendPropertyChanging();
					this._CustomerPO = value;
					this.SendPropertyChanged("CustomerPO");
					this.OnCustomerPOChanged();
				}
			}
		}
		
		[Column(Storage="_WO", DbType="VarChar(1000)")]
		public string WO
		{
			get
			{
				return this._WO;
			}
			set
			{
				if ((this._WO != value))
				{
					this.OnWOChanging(value);
					this.SendPropertyChanging();
					this._WO = value;
					this.SendPropertyChanged("WO");
					this.OnWOChanged();
				}
			}
		}
		
		[Column(Storage="_SampleSize", DbType="Int")]
		public System.Nullable<int> SampleSize
		{
			get
			{
				return this._SampleSize;
			}
			set
			{
				if ((this._SampleSize != value))
				{
					this.OnSampleSizeChanging(value);
					this.SendPropertyChanging();
					this._SampleSize = value;
					this.SendPropertyChanged("SampleSize");
					this.OnSampleSizeChanged();
				}
			}
		}
		
		[Association(Name="CustQCMaster_Interim_CustQCDetail_Interim", Storage="_CustQCDetail_Interims", ThisKey="OID", OtherKey="MasterOID")]
		public EntitySet<CustQCDetail_Interim> CustQCDetail_Interims
		{
			get
			{
				return this._CustQCDetail_Interims;
			}
			set
			{
				this._CustQCDetail_Interims.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CustQCDetail_Interims(CustQCDetail_Interim entity)
		{
			this.SendPropertyChanging();
			entity.CustQCMaster_Interim = this;
		}
		
		private void detach_CustQCDetail_Interims(CustQCDetail_Interim entity)
		{
			this.SendPropertyChanging();
			entity.CustQCMaster_Interim = null;
		}
	}
	
	[Table(Name="dbo.QC_ExamPlanDetail")]
	public partial class QC_ExamPlanDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _OID;
		
		private System.Nullable<long> _HeaderOID;
		
		private string _Line;
		
		private System.Nullable<int> _OptSeq;
		
		private string _OptCode;
		
		private string _OptName;
		
		private string _OptName_EN;
		
		private string _FAE;
		
		private System.Nullable<bool> _MQACheck;
		
		private System.Nullable<bool> _MQCCheck;
		
		private string _Factory;
		
		private string _Workshop;
		
		private System.Nullable<bool> _IsAgree;
		
		private string _AgreeMan;
		
		private System.Nullable<System.DateTime> _AgreeDate;
		
		private System.Nullable<bool> _IsConfirmQI;
		
		private string _ConfirmerQI;
		
		private System.Nullable<System.DateTime> _ConfirmDateQI;
		
		private System.Nullable<bool> _IsConfirmQA;
		
		private string _ConfirmerQA;
		
		private System.Nullable<System.DateTime> _ConfirmDateQA;
		
		private System.Nullable<int> _Seq;
		
		private string _WFCode;
		
		private string _WorkDesk;
		
		private EntityRef<QC_ExamPlanHeader> _QC_ExamPlanHeader;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOIDChanging(long value);
    partial void OnOIDChanged();
    partial void OnHeaderOIDChanging(System.Nullable<long> value);
    partial void OnHeaderOIDChanged();
    partial void OnLineChanging(string value);
    partial void OnLineChanged();
    partial void OnOptSeqChanging(System.Nullable<int> value);
    partial void OnOptSeqChanged();
    partial void OnOptCodeChanging(string value);
    partial void OnOptCodeChanged();
    partial void OnOptNameChanging(string value);
    partial void OnOptNameChanged();
    partial void OnOptName_ENChanging(string value);
    partial void OnOptName_ENChanged();
    partial void OnFAEChanging(string value);
    partial void OnFAEChanged();
    partial void OnMQACheckChanging(System.Nullable<bool> value);
    partial void OnMQACheckChanged();
    partial void OnMQCCheckChanging(System.Nullable<bool> value);
    partial void OnMQCCheckChanged();
    partial void OnFactoryChanging(string value);
    partial void OnFactoryChanged();
    partial void OnWorkshopChanging(string value);
    partial void OnWorkshopChanged();
    partial void OnIsAgreeChanging(System.Nullable<bool> value);
    partial void OnIsAgreeChanged();
    partial void OnAgreeManChanging(string value);
    partial void OnAgreeManChanged();
    partial void OnAgreeDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAgreeDateChanged();
    partial void OnIsConfirmQIChanging(System.Nullable<bool> value);
    partial void OnIsConfirmQIChanged();
    partial void OnConfirmerQIChanging(string value);
    partial void OnConfirmerQIChanged();
    partial void OnConfirmDateQIChanging(System.Nullable<System.DateTime> value);
    partial void OnConfirmDateQIChanged();
    partial void OnIsConfirmQAChanging(System.Nullable<bool> value);
    partial void OnIsConfirmQAChanged();
    partial void OnConfirmerQAChanging(string value);
    partial void OnConfirmerQAChanged();
    partial void OnConfirmDateQAChanging(System.Nullable<System.DateTime> value);
    partial void OnConfirmDateQAChanged();
    partial void OnSeqChanging(System.Nullable<int> value);
    partial void OnSeqChanged();
    partial void OnWFCodeChanging(string value);
    partial void OnWFCodeChanged();
    partial void OnWorkDeskChanging(string value);
    partial void OnWorkDeskChanged();
    #endregion
		
		public QC_ExamPlanDetail()
		{
			this._QC_ExamPlanHeader = default(EntityRef<QC_ExamPlanHeader>);
			OnCreated();
		}
		
		[Column(Storage="_OID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long OID
		{
			get
			{
				return this._OID;
			}
			set
			{
				if ((this._OID != value))
				{
					this.OnOIDChanging(value);
					this.SendPropertyChanging();
					this._OID = value;
					this.SendPropertyChanged("OID");
					this.OnOIDChanged();
				}
			}
		}
		
		[Column(Storage="_HeaderOID", DbType="BigInt")]
		public System.Nullable<long> HeaderOID
		{
			get
			{
				return this._HeaderOID;
			}
			set
			{
				if ((this._HeaderOID != value))
				{
					if (this._QC_ExamPlanHeader.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHeaderOIDChanging(value);
					this.SendPropertyChanging();
					this._HeaderOID = value;
					this.SendPropertyChanged("HeaderOID");
					this.OnHeaderOIDChanged();
				}
			}
		}
		
		[Column(Storage="_Line", DbType="VarChar(50)")]
		public string Line
		{
			get
			{
				return this._Line;
			}
			set
			{
				if ((this._Line != value))
				{
					this.OnLineChanging(value);
					this.SendPropertyChanging();
					this._Line = value;
					this.SendPropertyChanged("Line");
					this.OnLineChanged();
				}
			}
		}
		
		[Column(Storage="_OptSeq", DbType="Int")]
		public System.Nullable<int> OptSeq
		{
			get
			{
				return this._OptSeq;
			}
			set
			{
				if ((this._OptSeq != value))
				{
					this.OnOptSeqChanging(value);
					this.SendPropertyChanging();
					this._OptSeq = value;
					this.SendPropertyChanged("OptSeq");
					this.OnOptSeqChanged();
				}
			}
		}
		
		[Column(Storage="_OptCode", DbType="VarChar(100)")]
		public string OptCode
		{
			get
			{
				return this._OptCode;
			}
			set
			{
				if ((this._OptCode != value))
				{
					this.OnOptCodeChanging(value);
					this.SendPropertyChanging();
					this._OptCode = value;
					this.SendPropertyChanged("OptCode");
					this.OnOptCodeChanged();
				}
			}
		}
		
		[Column(Storage="_OptName", DbType="VarChar(1000)")]
		public string OptName
		{
			get
			{
				return this._OptName;
			}
			set
			{
				if ((this._OptName != value))
				{
					this.OnOptNameChanging(value);
					this.SendPropertyChanging();
					this._OptName = value;
					this.SendPropertyChanged("OptName");
					this.OnOptNameChanged();
				}
			}
		}
		
		[Column(Storage="_OptName_EN", DbType="VarChar(1000)")]
		public string OptName_EN
		{
			get
			{
				return this._OptName_EN;
			}
			set
			{
				if ((this._OptName_EN != value))
				{
					this.OnOptName_ENChanging(value);
					this.SendPropertyChanging();
					this._OptName_EN = value;
					this.SendPropertyChanged("OptName_EN");
					this.OnOptName_ENChanged();
				}
			}
		}
		
		[Column(Storage="_FAE", DbType="VarChar(10)")]
		public string FAE
		{
			get
			{
				return this._FAE;
			}
			set
			{
				if ((this._FAE != value))
				{
					this.OnFAEChanging(value);
					this.SendPropertyChanging();
					this._FAE = value;
					this.SendPropertyChanged("FAE");
					this.OnFAEChanged();
				}
			}
		}
		
		[Column(Storage="_MQACheck", DbType="Bit")]
		public System.Nullable<bool> MQACheck
		{
			get
			{
				return this._MQACheck;
			}
			set
			{
				if ((this._MQACheck != value))
				{
					this.OnMQACheckChanging(value);
					this.SendPropertyChanging();
					this._MQACheck = value;
					this.SendPropertyChanged("MQACheck");
					this.OnMQACheckChanged();
				}
			}
		}
		
		[Column(Storage="_MQCCheck", DbType="Bit")]
		public System.Nullable<bool> MQCCheck
		{
			get
			{
				return this._MQCCheck;
			}
			set
			{
				if ((this._MQCCheck != value))
				{
					this.OnMQCCheckChanging(value);
					this.SendPropertyChanging();
					this._MQCCheck = value;
					this.SendPropertyChanged("MQCCheck");
					this.OnMQCCheckChanged();
				}
			}
		}
		
		[Column(Storage="_Factory", DbType="VarChar(20)")]
		public string Factory
		{
			get
			{
				return this._Factory;
			}
			set
			{
				if ((this._Factory != value))
				{
					this.OnFactoryChanging(value);
					this.SendPropertyChanging();
					this._Factory = value;
					this.SendPropertyChanged("Factory");
					this.OnFactoryChanged();
				}
			}
		}
		
		[Column(Storage="_Workshop", DbType="VarChar(20)")]
		public string Workshop
		{
			get
			{
				return this._Workshop;
			}
			set
			{
				if ((this._Workshop != value))
				{
					this.OnWorkshopChanging(value);
					this.SendPropertyChanging();
					this._Workshop = value;
					this.SendPropertyChanged("Workshop");
					this.OnWorkshopChanged();
				}
			}
		}
		
		[Column(Storage="_IsAgree", DbType="Bit")]
		public System.Nullable<bool> IsAgree
		{
			get
			{
				return this._IsAgree;
			}
			set
			{
				if ((this._IsAgree != value))
				{
					this.OnIsAgreeChanging(value);
					this.SendPropertyChanging();
					this._IsAgree = value;
					this.SendPropertyChanged("IsAgree");
					this.OnIsAgreeChanged();
				}
			}
		}
		
		[Column(Storage="_AgreeMan", DbType="NVarChar(100)")]
		public string AgreeMan
		{
			get
			{
				return this._AgreeMan;
			}
			set
			{
				if ((this._AgreeMan != value))
				{
					this.OnAgreeManChanging(value);
					this.SendPropertyChanging();
					this._AgreeMan = value;
					this.SendPropertyChanged("AgreeMan");
					this.OnAgreeManChanged();
				}
			}
		}
		
		[Column(Storage="_AgreeDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AgreeDate
		{
			get
			{
				return this._AgreeDate;
			}
			set
			{
				if ((this._AgreeDate != value))
				{
					this.OnAgreeDateChanging(value);
					this.SendPropertyChanging();
					this._AgreeDate = value;
					this.SendPropertyChanged("AgreeDate");
					this.OnAgreeDateChanged();
				}
			}
		}
		
		[Column(Storage="_IsConfirmQI", DbType="Bit")]
		public System.Nullable<bool> IsConfirmQI
		{
			get
			{
				return this._IsConfirmQI;
			}
			set
			{
				if ((this._IsConfirmQI != value))
				{
					this.OnIsConfirmQIChanging(value);
					this.SendPropertyChanging();
					this._IsConfirmQI = value;
					this.SendPropertyChanged("IsConfirmQI");
					this.OnIsConfirmQIChanged();
				}
			}
		}
		
		[Column(Storage="_ConfirmerQI", DbType="NVarChar(100)")]
		public string ConfirmerQI
		{
			get
			{
				return this._ConfirmerQI;
			}
			set
			{
				if ((this._ConfirmerQI != value))
				{
					this.OnConfirmerQIChanging(value);
					this.SendPropertyChanging();
					this._ConfirmerQI = value;
					this.SendPropertyChanged("ConfirmerQI");
					this.OnConfirmerQIChanged();
				}
			}
		}
		
		[Column(Storage="_ConfirmDateQI", DbType="DateTime")]
		public System.Nullable<System.DateTime> ConfirmDateQI
		{
			get
			{
				return this._ConfirmDateQI;
			}
			set
			{
				if ((this._ConfirmDateQI != value))
				{
					this.OnConfirmDateQIChanging(value);
					this.SendPropertyChanging();
					this._ConfirmDateQI = value;
					this.SendPropertyChanged("ConfirmDateQI");
					this.OnConfirmDateQIChanged();
				}
			}
		}
		
		[Column(Storage="_IsConfirmQA", DbType="Bit")]
		public System.Nullable<bool> IsConfirmQA
		{
			get
			{
				return this._IsConfirmQA;
			}
			set
			{
				if ((this._IsConfirmQA != value))
				{
					this.OnIsConfirmQAChanging(value);
					this.SendPropertyChanging();
					this._IsConfirmQA = value;
					this.SendPropertyChanged("IsConfirmQA");
					this.OnIsConfirmQAChanged();
				}
			}
		}
		
		[Column(Storage="_ConfirmerQA", DbType="NVarChar(100)")]
		public string ConfirmerQA
		{
			get
			{
				return this._ConfirmerQA;
			}
			set
			{
				if ((this._ConfirmerQA != value))
				{
					this.OnConfirmerQAChanging(value);
					this.SendPropertyChanging();
					this._ConfirmerQA = value;
					this.SendPropertyChanged("ConfirmerQA");
					this.OnConfirmerQAChanged();
				}
			}
		}
		
		[Column(Storage="_ConfirmDateQA", DbType="DateTime")]
		public System.Nullable<System.DateTime> ConfirmDateQA
		{
			get
			{
				return this._ConfirmDateQA;
			}
			set
			{
				if ((this._ConfirmDateQA != value))
				{
					this.OnConfirmDateQAChanging(value);
					this.SendPropertyChanging();
					this._ConfirmDateQA = value;
					this.SendPropertyChanged("ConfirmDateQA");
					this.OnConfirmDateQAChanged();
				}
			}
		}
		
		[Column(Storage="_Seq", DbType="Int")]
		public System.Nullable<int> Seq
		{
			get
			{
				return this._Seq;
			}
			set
			{
				if ((this._Seq != value))
				{
					this.OnSeqChanging(value);
					this.SendPropertyChanging();
					this._Seq = value;
					this.SendPropertyChanged("Seq");
					this.OnSeqChanged();
				}
			}
		}
		
		[Column(Storage="_WFCode", DbType="VarChar(50)")]
		public string WFCode
		{
			get
			{
				return this._WFCode;
			}
			set
			{
				if ((this._WFCode != value))
				{
					this.OnWFCodeChanging(value);
					this.SendPropertyChanging();
					this._WFCode = value;
					this.SendPropertyChanged("WFCode");
					this.OnWFCodeChanged();
				}
			}
		}
		
		[Column(Storage="_WorkDesk", DbType="VarChar(50)")]
		public string WorkDesk
		{
			get
			{
				return this._WorkDesk;
			}
			set
			{
				if ((this._WorkDesk != value))
				{
					this.OnWorkDeskChanging(value);
					this.SendPropertyChanging();
					this._WorkDesk = value;
					this.SendPropertyChanged("WorkDesk");
					this.OnWorkDeskChanged();
				}
			}
		}
		
		[Association(Name="QC_ExamPlanHeader_QC_ExamPlanDetail", Storage="_QC_ExamPlanHeader", ThisKey="HeaderOID", OtherKey="OID", IsForeignKey=true, DeleteRule="CASCADE")]
		public QC_ExamPlanHeader QC_ExamPlanHeader
		{
			get
			{
				return this._QC_ExamPlanHeader.Entity;
			}
			set
			{
				QC_ExamPlanHeader previousValue = this._QC_ExamPlanHeader.Entity;
				if (((previousValue != value) 
							|| (this._QC_ExamPlanHeader.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QC_ExamPlanHeader.Entity = null;
						previousValue.QC_ExamPlanDetails.Remove(this);
					}
					this._QC_ExamPlanHeader.Entity = value;
					if ((value != null))
					{
						value.QC_ExamPlanDetails.Add(this);
						this._HeaderOID = value.OID;
					}
					else
					{
						this._HeaderOID = default(Nullable<long>);
					}
					this.SendPropertyChanged("QC_ExamPlanHeader");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.FinanceExportData")]
	public partial class FinanceExportData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IndexKey;
		
		private string _WO;
		
		private string _InsertFlag;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIndexKeyChanging(int value);
    partial void OnIndexKeyChanged();
    partial void OnWOChanging(string value);
    partial void OnWOChanged();
    partial void OnInsertFlagChanging(string value);
    partial void OnInsertFlagChanged();
    #endregion
		
		public FinanceExportData()
		{
			OnCreated();
		}
		
		[Column(Storage="_IndexKey", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IndexKey
		{
			get
			{
				return this._IndexKey;
			}
			set
			{
				if ((this._IndexKey != value))
				{
					this.OnIndexKeyChanging(value);
					this.SendPropertyChanging();
					this._IndexKey = value;
					this.SendPropertyChanged("IndexKey");
					this.OnIndexKeyChanged();
				}
			}
		}
		
		[Column(Storage="_WO", DbType="VarChar(50)")]
		public string WO
		{
			get
			{
				return this._WO;
			}
			set
			{
				if ((this._WO != value))
				{
					this.OnWOChanging(value);
					this.SendPropertyChanging();
					this._WO = value;
					this.SendPropertyChanged("WO");
					this.OnWOChanged();
				}
			}
		}
		
		[Column(Storage="_InsertFlag", DbType="VarChar(50)")]
		public string InsertFlag
		{
			get
			{
				return this._InsertFlag;
			}
			set
			{
				if ((this._InsertFlag != value))
				{
					this.OnInsertFlagChanging(value);
					this.SendPropertyChanging();
					this._InsertFlag = value;
					this.SendPropertyChanged("InsertFlag");
					this.OnInsertFlagChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.QC_AuditQtyRange")]
	public partial class QC_AuditQtyRange : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Seq;
		
		private System.Nullable<int> _Qty1;
		
		private System.Nullable<int> _Qty2;
		
		private string _Qty;
		
		private System.Nullable<int> _SQty;
		
		private System.Nullable<int> _AQty;
		
		private System.Nullable<int> _RQty;
		
		private System.Nullable<int> _A1Qty;
		
		private System.Nullable<int> _MQty;
		
		private System.Nullable<int> _AQty_10;
		
		private System.Nullable<int> _AQty_15;
		
		private System.Nullable<int> _AQty_65;
		
		private System.Nullable<int> _AQty_065;
		
		private string _Flag;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSeqChanging(int value);
    partial void OnSeqChanged();
    partial void OnQty1Changing(System.Nullable<int> value);
    partial void OnQty1Changed();
    partial void OnQty2Changing(System.Nullable<int> value);
    partial void OnQty2Changed();
    partial void OnQtyChanging(string value);
    partial void OnQtyChanged();
    partial void OnSQtyChanging(System.Nullable<int> value);
    partial void OnSQtyChanged();
    partial void OnAQtyChanging(System.Nullable<int> value);
    partial void OnAQtyChanged();
    partial void OnRQtyChanging(System.Nullable<int> value);
    partial void OnRQtyChanged();
    partial void OnA1QtyChanging(System.Nullable<int> value);
    partial void OnA1QtyChanged();
    partial void OnMQtyChanging(System.Nullable<int> value);
    partial void OnMQtyChanged();
    partial void OnAQty_10Changing(System.Nullable<int> value);
    partial void OnAQty_10Changed();
    partial void OnAQty_15Changing(System.Nullable<int> value);
    partial void OnAQty_15Changed();
    partial void OnAQty_65Changing(System.Nullable<int> value);
    partial void OnAQty_65Changed();
    partial void OnAQty_065Changing(System.Nullable<int> value);
    partial void OnAQty_065Changed();
    partial void OnFlagChanging(string value);
    partial void OnFlagChanged();
    #endregion
		
		public QC_AuditQtyRange()
		{
			OnCreated();
		}
		
		[Column(Storage="_Seq", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Seq
		{
			get
			{
				return this._Seq;
			}
			set
			{
				if ((this._Seq != value))
				{
					this.OnSeqChanging(value);
					this.SendPropertyChanging();
					this._Seq = value;
					this.SendPropertyChanged("Seq");
					this.OnSeqChanged();
				}
			}
		}
		
		[Column(Storage="_Qty1", DbType="Int")]
		public System.Nullable<int> Qty1
		{
			get
			{
				return this._Qty1;
			}
			set
			{
				if ((this._Qty1 != value))
				{
					this.OnQty1Changing(value);
					this.SendPropertyChanging();
					this._Qty1 = value;
					this.SendPropertyChanged("Qty1");
					this.OnQty1Changed();
				}
			}
		}
		
		[Column(Storage="_Qty2", DbType="Int")]
		public System.Nullable<int> Qty2
		{
			get
			{
				return this._Qty2;
			}
			set
			{
				if ((this._Qty2 != value))
				{
					this.OnQty2Changing(value);
					this.SendPropertyChanging();
					this._Qty2 = value;
					this.SendPropertyChanged("Qty2");
					this.OnQty2Changed();
				}
			}
		}
		
		[Column(Storage="_Qty", DbType="NVarChar(100)")]
		public string Qty
		{
			get
			{
				return this._Qty;
			}
			set
			{
				if ((this._Qty != value))
				{
					this.OnQtyChanging(value);
					this.SendPropertyChanging();
					this._Qty = value;
					this.SendPropertyChanged("Qty");
					this.OnQtyChanged();
				}
			}
		}
		
		[Column(Storage="_SQty", DbType="Int")]
		public System.Nullable<int> SQty
		{
			get
			{
				return this._SQty;
			}
			set
			{
				if ((this._SQty != value))
				{
					this.OnSQtyChanging(value);
					this.SendPropertyChanging();
					this._SQty = value;
					this.SendPropertyChanged("SQty");
					this.OnSQtyChanged();
				}
			}
		}
		
		[Column(Storage="_AQty", DbType="Int")]
		public System.Nullable<int> AQty
		{
			get
			{
				return this._AQty;
			}
			set
			{
				if ((this._AQty != value))
				{
					this.OnAQtyChanging(value);
					this.SendPropertyChanging();
					this._AQty = value;
					this.SendPropertyChanged("AQty");
					this.OnAQtyChanged();
				}
			}
		}
		
		[Column(Storage="_RQty", DbType="Int")]
		public System.Nullable<int> RQty
		{
			get
			{
				return this._RQty;
			}
			set
			{
				if ((this._RQty != value))
				{
					this.OnRQtyChanging(value);
					this.SendPropertyChanging();
					this._RQty = value;
					this.SendPropertyChanged("RQty");
					this.OnRQtyChanged();
				}
			}
		}
		
		[Column(Storage="_A1Qty", DbType="Int")]
		public System.Nullable<int> A1Qty
		{
			get
			{
				return this._A1Qty;
			}
			set
			{
				if ((this._A1Qty != value))
				{
					this.OnA1QtyChanging(value);
					this.SendPropertyChanging();
					this._A1Qty = value;
					this.SendPropertyChanged("A1Qty");
					this.OnA1QtyChanged();
				}
			}
		}
		
		[Column(Storage="_MQty", DbType="Int")]
		public System.Nullable<int> MQty
		{
			get
			{
				return this._MQty;
			}
			set
			{
				if ((this._MQty != value))
				{
					this.OnMQtyChanging(value);
					this.SendPropertyChanging();
					this._MQty = value;
					this.SendPropertyChanged("MQty");
					this.OnMQtyChanged();
				}
			}
		}
		
		[Column(Storage="_AQty_10", DbType="Int")]
		public System.Nullable<int> AQty_10
		{
			get
			{
				return this._AQty_10;
			}
			set
			{
				if ((this._AQty_10 != value))
				{
					this.OnAQty_10Changing(value);
					this.SendPropertyChanging();
					this._AQty_10 = value;
					this.SendPropertyChanged("AQty_10");
					this.OnAQty_10Changed();
				}
			}
		}
		
		[Column(Storage="_AQty_15", DbType="Int")]
		public System.Nullable<int> AQty_15
		{
			get
			{
				return this._AQty_15;
			}
			set
			{
				if ((this._AQty_15 != value))
				{
					this.OnAQty_15Changing(value);
					this.SendPropertyChanging();
					this._AQty_15 = value;
					this.SendPropertyChanged("AQty_15");
					this.OnAQty_15Changed();
				}
			}
		}
		
		[Column(Storage="_AQty_65", DbType="Int")]
		public System.Nullable<int> AQty_65
		{
			get
			{
				return this._AQty_65;
			}
			set
			{
				if ((this._AQty_65 != value))
				{
					this.OnAQty_65Changing(value);
					this.SendPropertyChanging();
					this._AQty_65 = value;
					this.SendPropertyChanged("AQty_65");
					this.OnAQty_65Changed();
				}
			}
		}
		
		[Column(Storage="_AQty_065", DbType="Int")]
		public System.Nullable<int> AQty_065
		{
			get
			{
				return this._AQty_065;
			}
			set
			{
				if ((this._AQty_065 != value))
				{
					this.OnAQty_065Changing(value);
					this.SendPropertyChanging();
					this._AQty_065 = value;
					this.SendPropertyChanged("AQty_065");
					this.OnAQty_065Changed();
				}
			}
		}
		
		[Column(Storage="_Flag", DbType="NVarChar(50)")]
		public string Flag
		{
			get
			{
				return this._Flag;
			}
			set
			{
				if ((this._Flag != value))
				{
					this.OnFlagChanging(value);
					this.SendPropertyChanging();
					this._Flag = value;
					this.SendPropertyChanged("Flag");
					this.OnFlagChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.FullInspectionHeader")]
	public partial class FullInspectionHeader : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Oid;
		
		private string _Factory;
		
		private string _WorkShop;
		
		private string _Line;
		
		private string _Project;
		
		private string _LWO;
		
		private string _ColorCode;
		
		private string _StyleNo;
		
		private string _SeqNo;
		
		private System.Nullable<bool> _InspectionCompleted;
		
		private System.Nullable<int> _QNQty;
		
		private string _InspectionConfirmBy;
		
		private System.Nullable<System.DateTime> _InspectionDate;
		
		private string _Inspector;
		
		private string _LineLeader;
		
		private string _LineLeaderSignature;
		
		private string _SewingSupervisior;
		
		private string _Remark;
		
		private System.Nullable<System.DateTime> _ExftyDate;
		
		private EntitySet<FullInspectionDetail> _FullInspectionDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOidChanging(long value);
    partial void OnOidChanged();
    partial void OnFactoryChanging(string value);
    partial void OnFactoryChanged();
    partial void OnWorkShopChanging(string value);
    partial void OnWorkShopChanged();
    partial void OnLineChanging(string value);
    partial void OnLineChanged();
    partial void OnProjectChanging(string value);
    partial void OnProjectChanged();
    partial void OnLWOChanging(string value);
    partial void OnLWOChanged();
    partial void OnColorCodeChanging(string value);
    partial void OnColorCodeChanged();
    partial void OnStyleNoChanging(string value);
    partial void OnStyleNoChanged();
    partial void OnSeqNoChanging(string value);
    partial void OnSeqNoChanged();
    partial void OnInspectionCompletedChanging(System.Nullable<bool> value);
    partial void OnInspectionCompletedChanged();
    partial void OnQNQtyChanging(System.Nullable<int> value);
    partial void OnQNQtyChanged();
    partial void OnInspectionConfirmByChanging(string value);
    partial void OnInspectionConfirmByChanged();
    partial void OnInspectionDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInspectionDateChanged();
    partial void OnInspectorChanging(string value);
    partial void OnInspectorChanged();
    partial void OnLineLeaderChanging(string value);
    partial void OnLineLeaderChanged();
    partial void OnLineLeaderSignatureChanging(string value);
    partial void OnLineLeaderSignatureChanged();
    partial void OnSewingSupervisiorChanging(string value);
    partial void OnSewingSupervisiorChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnExftyDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExftyDateChanged();
    #endregion
		
		public FullInspectionHeader()
		{
			this._FullInspectionDetails = new EntitySet<FullInspectionDetail>(new Action<FullInspectionDetail>(this.attach_FullInspectionDetails), new Action<FullInspectionDetail>(this.detach_FullInspectionDetails));
			OnCreated();
		}
		
		[Column(Storage="_Oid", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Oid
		{
			get
			{
				return this._Oid;
			}
			set
			{
				if ((this._Oid != value))
				{
					this.OnOidChanging(value);
					this.SendPropertyChanging();
					this._Oid = value;
					this.SendPropertyChanged("Oid");
					this.OnOidChanged();
				}
			}
		}
		
		[Column(Storage="_Factory", DbType="VarChar(10)")]
		public string Factory
		{
			get
			{
				return this._Factory;
			}
			set
			{
				if ((this._Factory != value))
				{
					this.OnFactoryChanging(value);
					this.SendPropertyChanging();
					this._Factory = value;
					this.SendPropertyChanged("Factory");
					this.OnFactoryChanged();
				}
			}
		}
		
		[Column(Storage="_WorkShop", DbType="VarChar(20)")]
		public string WorkShop
		{
			get
			{
				return this._WorkShop;
			}
			set
			{
				if ((this._WorkShop != value))
				{
					this.OnWorkShopChanging(value);
					this.SendPropertyChanging();
					this._WorkShop = value;
					this.SendPropertyChanged("WorkShop");
					this.OnWorkShopChanged();
				}
			}
		}
		
		[Column(Storage="_Line", DbType="VarChar(20)")]
		public string Line
		{
			get
			{
				return this._Line;
			}
			set
			{
				if ((this._Line != value))
				{
					this.OnLineChanging(value);
					this.SendPropertyChanging();
					this._Line = value;
					this.SendPropertyChanged("Line");
					this.OnLineChanged();
				}
			}
		}
		
		[Column(Storage="_Project", DbType="VarChar(20)")]
		public string Project
		{
			get
			{
				return this._Project;
			}
			set
			{
				if ((this._Project != value))
				{
					this.OnProjectChanging(value);
					this.SendPropertyChanging();
					this._Project = value;
					this.SendPropertyChanged("Project");
					this.OnProjectChanged();
				}
			}
		}
		
		[Column(Storage="_LWO", DbType="VarChar(50)")]
		public string LWO
		{
			get
			{
				return this._LWO;
			}
			set
			{
				if ((this._LWO != value))
				{
					this.OnLWOChanging(value);
					this.SendPropertyChanging();
					this._LWO = value;
					this.SendPropertyChanged("LWO");
					this.OnLWOChanged();
				}
			}
		}
		
		[Column(Storage="_ColorCode", DbType="VarChar(20)")]
		public string ColorCode
		{
			get
			{
				return this._ColorCode;
			}
			set
			{
				if ((this._ColorCode != value))
				{
					this.OnColorCodeChanging(value);
					this.SendPropertyChanging();
					this._ColorCode = value;
					this.SendPropertyChanged("ColorCode");
					this.OnColorCodeChanged();
				}
			}
		}
		
		[Column(Storage="_StyleNo", DbType="VarChar(50)")]
		public string StyleNo
		{
			get
			{
				return this._StyleNo;
			}
			set
			{
				if ((this._StyleNo != value))
				{
					this.OnStyleNoChanging(value);
					this.SendPropertyChanging();
					this._StyleNo = value;
					this.SendPropertyChanged("StyleNo");
					this.OnStyleNoChanged();
				}
			}
		}
		
		[Column(Storage="_SeqNo", DbType="VarChar(20)")]
		public string SeqNo
		{
			get
			{
				return this._SeqNo;
			}
			set
			{
				if ((this._SeqNo != value))
				{
					this.OnSeqNoChanging(value);
					this.SendPropertyChanging();
					this._SeqNo = value;
					this.SendPropertyChanged("SeqNo");
					this.OnSeqNoChanged();
				}
			}
		}
		
		[Column(Storage="_InspectionCompleted", DbType="Bit")]
		public System.Nullable<bool> InspectionCompleted
		{
			get
			{
				return this._InspectionCompleted;
			}
			set
			{
				if ((this._InspectionCompleted != value))
				{
					this.OnInspectionCompletedChanging(value);
					this.SendPropertyChanging();
					this._InspectionCompleted = value;
					this.SendPropertyChanged("InspectionCompleted");
					this.OnInspectionCompletedChanged();
				}
			}
		}
		
		[Column(Storage="_QNQty", DbType="Int")]
		public System.Nullable<int> QNQty
		{
			get
			{
				return this._QNQty;
			}
			set
			{
				if ((this._QNQty != value))
				{
					this.OnQNQtyChanging(value);
					this.SendPropertyChanging();
					this._QNQty = value;
					this.SendPropertyChanged("QNQty");
					this.OnQNQtyChanged();
				}
			}
		}
		
		[Column(Storage="_InspectionConfirmBy", DbType="NVarChar(100)")]
		public string InspectionConfirmBy
		{
			get
			{
				return this._InspectionConfirmBy;
			}
			set
			{
				if ((this._InspectionConfirmBy != value))
				{
					this.OnInspectionConfirmByChanging(value);
					this.SendPropertyChanging();
					this._InspectionConfirmBy = value;
					this.SendPropertyChanged("InspectionConfirmBy");
					this.OnInspectionConfirmByChanged();
				}
			}
		}
		
		[Column(Storage="_InspectionDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> InspectionDate
		{
			get
			{
				return this._InspectionDate;
			}
			set
			{
				if ((this._InspectionDate != value))
				{
					this.OnInspectionDateChanging(value);
					this.SendPropertyChanging();
					this._InspectionDate = value;
					this.SendPropertyChanged("InspectionDate");
					this.OnInspectionDateChanged();
				}
			}
		}
		
		[Column(Storage="_Inspector", DbType="NVarChar(100)")]
		public string Inspector
		{
			get
			{
				return this._Inspector;
			}
			set
			{
				if ((this._Inspector != value))
				{
					this.OnInspectorChanging(value);
					this.SendPropertyChanging();
					this._Inspector = value;
					this.SendPropertyChanged("Inspector");
					this.OnInspectorChanged();
				}
			}
		}
		
		[Column(Storage="_LineLeader", DbType="NVarChar(100)")]
		public string LineLeader
		{
			get
			{
				return this._LineLeader;
			}
			set
			{
				if ((this._LineLeader != value))
				{
					this.OnLineLeaderChanging(value);
					this.SendPropertyChanging();
					this._LineLeader = value;
					this.SendPropertyChanged("LineLeader");
					this.OnLineLeaderChanged();
				}
			}
		}
		
		[Column(Storage="_LineLeaderSignature", DbType="NVarChar(100)")]
		public string LineLeaderSignature
		{
			get
			{
				return this._LineLeaderSignature;
			}
			set
			{
				if ((this._LineLeaderSignature != value))
				{
					this.OnLineLeaderSignatureChanging(value);
					this.SendPropertyChanging();
					this._LineLeaderSignature = value;
					this.SendPropertyChanged("LineLeaderSignature");
					this.OnLineLeaderSignatureChanged();
				}
			}
		}
		
		[Column(Storage="_SewingSupervisior", DbType="NVarChar(100)")]
		public string SewingSupervisior
		{
			get
			{
				return this._SewingSupervisior;
			}
			set
			{
				if ((this._SewingSupervisior != value))
				{
					this.OnSewingSupervisiorChanging(value);
					this.SendPropertyChanging();
					this._SewingSupervisior = value;
					this.SendPropertyChanged("SewingSupervisior");
					this.OnSewingSupervisiorChanged();
				}
			}
		}
		
		[Column(Storage="_Remark", DbType="NVarChar(2000)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[Column(Storage="_ExftyDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ExftyDate
		{
			get
			{
				return this._ExftyDate;
			}
			set
			{
				if ((this._ExftyDate != value))
				{
					this.OnExftyDateChanging(value);
					this.SendPropertyChanging();
					this._ExftyDate = value;
					this.SendPropertyChanged("ExftyDate");
					this.OnExftyDateChanged();
				}
			}
		}
		
		[Association(Name="FullInspectionHeader_FullInspectionDetail", Storage="_FullInspectionDetails", ThisKey="Oid", OtherKey="FullInspectionHeader")]
		public EntitySet<FullInspectionDetail> FullInspectionDetails
		{
			get
			{
				return this._FullInspectionDetails;
			}
			set
			{
				this._FullInspectionDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FullInspectionDetails(FullInspectionDetail entity)
		{
			this.SendPropertyChanging();
			entity.FullInspectionHeader1 = this;
		}
		
		private void detach_FullInspectionDetails(FullInspectionDetail entity)
		{
			this.SendPropertyChanging();
			entity.FullInspectionHeader1 = null;
		}
	}
	
	[Table(Name="dbo.FullInspectionDetail")]
	public partial class FullInspectionDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Oid;
		
		private System.Nullable<long> _FullInspectionHeader;
		
		private string _Size;
		
		private System.Nullable<int> _ProductQty;
		
		private System.Nullable<int> _DefectiveGarmentQty;
		
		private System.Nullable<decimal> _DefectiveGarmentPercent;
		
		private string _RejectStage;
		
		private System.Nullable<int> _CheckPoint;
		
		private string _PODCode;
		
		private string _PODNameEN;
		
		private string _PODNameCN;
		
		private string _PODNameBD;
		
		private string _DefectCode;
		
		private string _DefectNameEN;
		
		private string _DefectNameCN;
		
		private string _DefectNameBD;
		
		private System.Nullable<int> _DefectQty;
		
		private System.Nullable<bool> _Repaired;
		
		private string _CheckPointSigned;
		
		private System.Nullable<int> _BoxNo;
		
		private System.Nullable<System.DateTime> _InspectionDate;
		
		private string _Inspector;
		
		private string _PODCode1;
		
		private string _PODNameEN1;
		
		private string _PODNameCN1;
		
		private string _PODNameBD1;
		
		private string _PODCode2;
		
		private string _PODNameEN2;
		
		private string _PODNameCN2;
		
		private string _PODNameBD2;
		
		private string _PODCode3;
		
		private string _PODNameEN3;
		
		private string _PODNameCN3;
		
		private string _PODNameBD3;
		
		private string _DefectCode1;
		
		private string _DefectNameEN1;
		
		private string _DefectNameCN1;
		
		private string _DefectNameBD1;
		
		private string _DefectCode2;
		
		private string _DefectNameEN2;
		
		private string _DefectNameCN2;
		
		private string _DefectNameBD2;
		
		private string _DefectCode3;
		
		private string _DefectNameEN3;
		
		private string _DefectNameCN3;
		
		private string _DefectNameBD3;
		
		private System.Nullable<int> _PODQty;
		
		private System.Nullable<int> _RejectQty;
		
		private EntityRef<FullInspectionHeader> _FullInspectionHeader1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOidChanging(long value);
    partial void OnOidChanged();
    partial void OnFullInspectionHeaderChanging(System.Nullable<long> value);
    partial void OnFullInspectionHeaderChanged();
    partial void OnSizeChanging(string value);
    partial void OnSizeChanged();
    partial void OnProductQtyChanging(System.Nullable<int> value);
    partial void OnProductQtyChanged();
    partial void OnDefectiveGarmentQtyChanging(System.Nullable<int> value);
    partial void OnDefectiveGarmentQtyChanged();
    partial void OnDefectiveGarmentPercentChanging(System.Nullable<decimal> value);
    partial void OnDefectiveGarmentPercentChanged();
    partial void OnRejectStageChanging(string value);
    partial void OnRejectStageChanged();
    partial void OnCheckPointChanging(System.Nullable<int> value);
    partial void OnCheckPointChanged();
    partial void OnPODCodeChanging(string value);
    partial void OnPODCodeChanged();
    partial void OnPODNameENChanging(string value);
    partial void OnPODNameENChanged();
    partial void OnPODNameCNChanging(string value);
    partial void OnPODNameCNChanged();
    partial void OnPODNameBDChanging(string value);
    partial void OnPODNameBDChanged();
    partial void OnDefectCodeChanging(string value);
    partial void OnDefectCodeChanged();
    partial void OnDefectNameENChanging(string value);
    partial void OnDefectNameENChanged();
    partial void OnDefectNameCNChanging(string value);
    partial void OnDefectNameCNChanged();
    partial void OnDefectNameBDChanging(string value);
    partial void OnDefectNameBDChanged();
    partial void OnDefectQtyChanging(System.Nullable<int> value);
    partial void OnDefectQtyChanged();
    partial void OnRepairedChanging(System.Nullable<bool> value);
    partial void OnRepairedChanged();
    partial void OnCheckPointSignedChanging(string value);
    partial void OnCheckPointSignedChanged();
    partial void OnBoxNoChanging(System.Nullable<int> value);
    partial void OnBoxNoChanged();
    partial void OnInspectionDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInspectionDateChanged();
    partial void OnInspectorChanging(string value);
    partial void OnInspectorChanged();
    partial void OnPODCode1Changing(string value);
    partial void OnPODCode1Changed();
    partial void OnPODNameEN1Changing(string value);
    partial void OnPODNameEN1Changed();
    partial void OnPODNameCN1Changing(string value);
    partial void OnPODNameCN1Changed();
    partial void OnPODNameBD1Changing(string value);
    partial void OnPODNameBD1Changed();
    partial void OnPODCode2Changing(string value);
    partial void OnPODCode2Changed();
    partial void OnPODNameEN2Changing(string value);
    partial void OnPODNameEN2Changed();
    partial void OnPODNameCN2Changing(string value);
    partial void OnPODNameCN2Changed();
    partial void OnPODNameBD2Changing(string value);
    partial void OnPODNameBD2Changed();
    partial void OnPODCode3Changing(string value);
    partial void OnPODCode3Changed();
    partial void OnPODNameEN3Changing(string value);
    partial void OnPODNameEN3Changed();
    partial void OnPODNameCN3Changing(string value);
    partial void OnPODNameCN3Changed();
    partial void OnPODNameBD3Changing(string value);
    partial void OnPODNameBD3Changed();
    partial void OnDefectCode1Changing(string value);
    partial void OnDefectCode1Changed();
    partial void OnDefectNameEN1Changing(string value);
    partial void OnDefectNameEN1Changed();
    partial void OnDefectNameCN1Changing(string value);
    partial void OnDefectNameCN1Changed();
    partial void OnDefectNameBD1Changing(string value);
    partial void OnDefectNameBD1Changed();
    partial void OnDefectCode2Changing(string value);
    partial void OnDefectCode2Changed();
    partial void OnDefectNameEN2Changing(string value);
    partial void OnDefectNameEN2Changed();
    partial void OnDefectNameCN2Changing(string value);
    partial void OnDefectNameCN2Changed();
    partial void OnDefectNameBD2Changing(string value);
    partial void OnDefectNameBD2Changed();
    partial void OnDefectCode3Changing(string value);
    partial void OnDefectCode3Changed();
    partial void OnDefectNameEN3Changing(string value);
    partial void OnDefectNameEN3Changed();
    partial void OnDefectNameCN3Changing(string value);
    partial void OnDefectNameCN3Changed();
    partial void OnDefectNameBD3Changing(string value);
    partial void OnDefectNameBD3Changed();
    partial void OnPODQtyChanging(System.Nullable<int> value);
    partial void OnPODQtyChanged();
    partial void OnRejectQtyChanging(System.Nullable<int> value);
    partial void OnRejectQtyChanged();
    #endregion
		
		public FullInspectionDetail()
		{
			this._FullInspectionHeader1 = default(EntityRef<FullInspectionHeader>);
			OnCreated();
		}
		
		[Column(Storage="_Oid", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Oid
		{
			get
			{
				return this._Oid;
			}
			set
			{
				if ((this._Oid != value))
				{
					this.OnOidChanging(value);
					this.SendPropertyChanging();
					this._Oid = value;
					this.SendPropertyChanged("Oid");
					this.OnOidChanged();
				}
			}
		}
		
		[Column(Storage="_FullInspectionHeader", DbType="BigInt")]
		public System.Nullable<long> FullInspectionHeader
		{
			get
			{
				return this._FullInspectionHeader;
			}
			set
			{
				if ((this._FullInspectionHeader != value))
				{
					if (this._FullInspectionHeader1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFullInspectionHeaderChanging(value);
					this.SendPropertyChanging();
					this._FullInspectionHeader = value;
					this.SendPropertyChanged("FullInspectionHeader");
					this.OnFullInspectionHeaderChanged();
				}
			}
		}
		
		[Column(Storage="_Size", DbType="VarChar(20)")]
		public string Size
		{
			get
			{
				return this._Size;
			}
			set
			{
				if ((this._Size != value))
				{
					this.OnSizeChanging(value);
					this.SendPropertyChanging();
					this._Size = value;
					this.SendPropertyChanged("Size");
					this.OnSizeChanged();
				}
			}
		}
		
		[Column(Storage="_ProductQty", DbType="Int")]
		public System.Nullable<int> ProductQty
		{
			get
			{
				return this._ProductQty;
			}
			set
			{
				if ((this._ProductQty != value))
				{
					this.OnProductQtyChanging(value);
					this.SendPropertyChanging();
					this._ProductQty = value;
					this.SendPropertyChanged("ProductQty");
					this.OnProductQtyChanged();
				}
			}
		}
		
		[Column(Storage="_DefectiveGarmentQty", DbType="Int")]
		public System.Nullable<int> DefectiveGarmentQty
		{
			get
			{
				return this._DefectiveGarmentQty;
			}
			set
			{
				if ((this._DefectiveGarmentQty != value))
				{
					this.OnDefectiveGarmentQtyChanging(value);
					this.SendPropertyChanging();
					this._DefectiveGarmentQty = value;
					this.SendPropertyChanged("DefectiveGarmentQty");
					this.OnDefectiveGarmentQtyChanged();
				}
			}
		}
		
		[Column(Storage="_DefectiveGarmentPercent", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> DefectiveGarmentPercent
		{
			get
			{
				return this._DefectiveGarmentPercent;
			}
			set
			{
				if ((this._DefectiveGarmentPercent != value))
				{
					this.OnDefectiveGarmentPercentChanging(value);
					this.SendPropertyChanging();
					this._DefectiveGarmentPercent = value;
					this.SendPropertyChanged("DefectiveGarmentPercent");
					this.OnDefectiveGarmentPercentChanged();
				}
			}
		}
		
		[Column(Storage="_RejectStage", DbType="VarChar(20)")]
		public string RejectStage
		{
			get
			{
				return this._RejectStage;
			}
			set
			{
				if ((this._RejectStage != value))
				{
					this.OnRejectStageChanging(value);
					this.SendPropertyChanging();
					this._RejectStage = value;
					this.SendPropertyChanged("RejectStage");
					this.OnRejectStageChanged();
				}
			}
		}
		
		[Column(Name="[CheckPoint]", Storage="_CheckPoint", DbType="Int")]
		public System.Nullable<int> CheckPoint
		{
			get
			{
				return this._CheckPoint;
			}
			set
			{
				if ((this._CheckPoint != value))
				{
					this.OnCheckPointChanging(value);
					this.SendPropertyChanging();
					this._CheckPoint = value;
					this.SendPropertyChanged("CheckPoint");
					this.OnCheckPointChanged();
				}
			}
		}
		
		[Column(Storage="_PODCode", DbType="VarChar(20)")]
		public string PODCode
		{
			get
			{
				return this._PODCode;
			}
			set
			{
				if ((this._PODCode != value))
				{
					this.OnPODCodeChanging(value);
					this.SendPropertyChanging();
					this._PODCode = value;
					this.SendPropertyChanged("PODCode");
					this.OnPODCodeChanged();
				}
			}
		}
		
		[Column(Storage="_PODNameEN", DbType="VarChar(500)")]
		public string PODNameEN
		{
			get
			{
				return this._PODNameEN;
			}
			set
			{
				if ((this._PODNameEN != value))
				{
					this.OnPODNameENChanging(value);
					this.SendPropertyChanging();
					this._PODNameEN = value;
					this.SendPropertyChanged("PODNameEN");
					this.OnPODNameENChanged();
				}
			}
		}
		
		[Column(Storage="_PODNameCN", DbType="VarChar(500)")]
		public string PODNameCN
		{
			get
			{
				return this._PODNameCN;
			}
			set
			{
				if ((this._PODNameCN != value))
				{
					this.OnPODNameCNChanging(value);
					this.SendPropertyChanging();
					this._PODNameCN = value;
					this.SendPropertyChanged("PODNameCN");
					this.OnPODNameCNChanged();
				}
			}
		}
		
		[Column(Storage="_PODNameBD", DbType="NVarChar(500)")]
		public string PODNameBD
		{
			get
			{
				return this._PODNameBD;
			}
			set
			{
				if ((this._PODNameBD != value))
				{
					this.OnPODNameBDChanging(value);
					this.SendPropertyChanging();
					this._PODNameBD = value;
					this.SendPropertyChanged("PODNameBD");
					this.OnPODNameBDChanged();
				}
			}
		}
		
		[Column(Storage="_DefectCode", DbType="VarChar(20)")]
		public string DefectCode
		{
			get
			{
				return this._DefectCode;
			}
			set
			{
				if ((this._DefectCode != value))
				{
					this.OnDefectCodeChanging(value);
					this.SendPropertyChanging();
					this._DefectCode = value;
					this.SendPropertyChanged("DefectCode");
					this.OnDefectCodeChanged();
				}
			}
		}
		
		[Column(Storage="_DefectNameEN", DbType="VarChar(500)")]
		public string DefectNameEN
		{
			get
			{
				return this._DefectNameEN;
			}
			set
			{
				if ((this._DefectNameEN != value))
				{
					this.OnDefectNameENChanging(value);
					this.SendPropertyChanging();
					this._DefectNameEN = value;
					this.SendPropertyChanged("DefectNameEN");
					this.OnDefectNameENChanged();
				}
			}
		}
		
		[Column(Storage="_DefectNameCN", DbType="VarChar(500)")]
		public string DefectNameCN
		{
			get
			{
				return this._DefectNameCN;
			}
			set
			{
				if ((this._DefectNameCN != value))
				{
					this.OnDefectNameCNChanging(value);
					this.SendPropertyChanging();
					this._DefectNameCN = value;
					this.SendPropertyChanged("DefectNameCN");
					this.OnDefectNameCNChanged();
				}
			}
		}
		
		[Column(Storage="_DefectNameBD", DbType="NVarChar(500)")]
		public string DefectNameBD
		{
			get
			{
				return this._DefectNameBD;
			}
			set
			{
				if ((this._DefectNameBD != value))
				{
					this.OnDefectNameBDChanging(value);
					this.SendPropertyChanging();
					this._DefectNameBD = value;
					this.SendPropertyChanged("DefectNameBD");
					this.OnDefectNameBDChanged();
				}
			}
		}
		
		[Column(Storage="_DefectQty", DbType="Int")]
		public System.Nullable<int> DefectQty
		{
			get
			{
				return this._DefectQty;
			}
			set
			{
				if ((this._DefectQty != value))
				{
					this.OnDefectQtyChanging(value);
					this.SendPropertyChanging();
					this._DefectQty = value;
					this.SendPropertyChanged("DefectQty");
					this.OnDefectQtyChanged();
				}
			}
		}
		
		[Column(Storage="_Repaired", DbType="Bit")]
		public System.Nullable<bool> Repaired
		{
			get
			{
				return this._Repaired;
			}
			set
			{
				if ((this._Repaired != value))
				{
					this.OnRepairedChanging(value);
					this.SendPropertyChanging();
					this._Repaired = value;
					this.SendPropertyChanged("Repaired");
					this.OnRepairedChanged();
				}
			}
		}
		
		[Column(Storage="_CheckPointSigned", DbType="NVarChar(200)")]
		public string CheckPointSigned
		{
			get
			{
				return this._CheckPointSigned;
			}
			set
			{
				if ((this._CheckPointSigned != value))
				{
					this.OnCheckPointSignedChanging(value);
					this.SendPropertyChanging();
					this._CheckPointSigned = value;
					this.SendPropertyChanged("CheckPointSigned");
					this.OnCheckPointSignedChanged();
				}
			}
		}
		
		[Column(Storage="_BoxNo", DbType="Int")]
		public System.Nullable<int> BoxNo
		{
			get
			{
				return this._BoxNo;
			}
			set
			{
				if ((this._BoxNo != value))
				{
					this.OnBoxNoChanging(value);
					this.SendPropertyChanging();
					this._BoxNo = value;
					this.SendPropertyChanged("BoxNo");
					this.OnBoxNoChanged();
				}
			}
		}
		
		[Column(Storage="_InspectionDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> InspectionDate
		{
			get
			{
				return this._InspectionDate;
			}
			set
			{
				if ((this._InspectionDate != value))
				{
					this.OnInspectionDateChanging(value);
					this.SendPropertyChanging();
					this._InspectionDate = value;
					this.SendPropertyChanged("InspectionDate");
					this.OnInspectionDateChanged();
				}
			}
		}
		
		[Column(Storage="_Inspector", DbType="NVarChar(100)")]
		public string Inspector
		{
			get
			{
				return this._Inspector;
			}
			set
			{
				if ((this._Inspector != value))
				{
					this.OnInspectorChanging(value);
					this.SendPropertyChanging();
					this._Inspector = value;
					this.SendPropertyChanged("Inspector");
					this.OnInspectorChanged();
				}
			}
		}
		
		[Column(Storage="_PODCode1", DbType="NVarChar(20)")]
		public string PODCode1
		{
			get
			{
				return this._PODCode1;
			}
			set
			{
				if ((this._PODCode1 != value))
				{
					this.OnPODCode1Changing(value);
					this.SendPropertyChanging();
					this._PODCode1 = value;
					this.SendPropertyChanged("PODCode1");
					this.OnPODCode1Changed();
				}
			}
		}
		
		[Column(Storage="_PODNameEN1", DbType="NVarChar(500)")]
		public string PODNameEN1
		{
			get
			{
				return this._PODNameEN1;
			}
			set
			{
				if ((this._PODNameEN1 != value))
				{
					this.OnPODNameEN1Changing(value);
					this.SendPropertyChanging();
					this._PODNameEN1 = value;
					this.SendPropertyChanged("PODNameEN1");
					this.OnPODNameEN1Changed();
				}
			}
		}
		
		[Column(Storage="_PODNameCN1", DbType="NVarChar(500)")]
		public string PODNameCN1
		{
			get
			{
				return this._PODNameCN1;
			}
			set
			{
				if ((this._PODNameCN1 != value))
				{
					this.OnPODNameCN1Changing(value);
					this.SendPropertyChanging();
					this._PODNameCN1 = value;
					this.SendPropertyChanged("PODNameCN1");
					this.OnPODNameCN1Changed();
				}
			}
		}
		
		[Column(Storage="_PODNameBD1", DbType="NVarChar(500)")]
		public string PODNameBD1
		{
			get
			{
				return this._PODNameBD1;
			}
			set
			{
				if ((this._PODNameBD1 != value))
				{
					this.OnPODNameBD1Changing(value);
					this.SendPropertyChanging();
					this._PODNameBD1 = value;
					this.SendPropertyChanged("PODNameBD1");
					this.OnPODNameBD1Changed();
				}
			}
		}
		
		[Column(Storage="_PODCode2", DbType="NVarChar(20)")]
		public string PODCode2
		{
			get
			{
				return this._PODCode2;
			}
			set
			{
				if ((this._PODCode2 != value))
				{
					this.OnPODCode2Changing(value);
					this.SendPropertyChanging();
					this._PODCode2 = value;
					this.SendPropertyChanged("PODCode2");
					this.OnPODCode2Changed();
				}
			}
		}
		
		[Column(Storage="_PODNameEN2", DbType="NVarChar(500)")]
		public string PODNameEN2
		{
			get
			{
				return this._PODNameEN2;
			}
			set
			{
				if ((this._PODNameEN2 != value))
				{
					this.OnPODNameEN2Changing(value);
					this.SendPropertyChanging();
					this._PODNameEN2 = value;
					this.SendPropertyChanged("PODNameEN2");
					this.OnPODNameEN2Changed();
				}
			}
		}
		
		[Column(Storage="_PODNameCN2", DbType="NVarChar(500)")]
		public string PODNameCN2
		{
			get
			{
				return this._PODNameCN2;
			}
			set
			{
				if ((this._PODNameCN2 != value))
				{
					this.OnPODNameCN2Changing(value);
					this.SendPropertyChanging();
					this._PODNameCN2 = value;
					this.SendPropertyChanged("PODNameCN2");
					this.OnPODNameCN2Changed();
				}
			}
		}
		
		[Column(Storage="_PODNameBD2", DbType="NVarChar(500)")]
		public string PODNameBD2
		{
			get
			{
				return this._PODNameBD2;
			}
			set
			{
				if ((this._PODNameBD2 != value))
				{
					this.OnPODNameBD2Changing(value);
					this.SendPropertyChanging();
					this._PODNameBD2 = value;
					this.SendPropertyChanged("PODNameBD2");
					this.OnPODNameBD2Changed();
				}
			}
		}
		
		[Column(Storage="_PODCode3", DbType="NVarChar(20)")]
		public string PODCode3
		{
			get
			{
				return this._PODCode3;
			}
			set
			{
				if ((this._PODCode3 != value))
				{
					this.OnPODCode3Changing(value);
					this.SendPropertyChanging();
					this._PODCode3 = value;
					this.SendPropertyChanged("PODCode3");
					this.OnPODCode3Changed();
				}
			}
		}
		
		[Column(Storage="_PODNameEN3", DbType="NVarChar(500)")]
		public string PODNameEN3
		{
			get
			{
				return this._PODNameEN3;
			}
			set
			{
				if ((this._PODNameEN3 != value))
				{
					this.OnPODNameEN3Changing(value);
					this.SendPropertyChanging();
					this._PODNameEN3 = value;
					this.SendPropertyChanged("PODNameEN3");
					this.OnPODNameEN3Changed();
				}
			}
		}
		
		[Column(Storage="_PODNameCN3", DbType="NVarChar(500)")]
		public string PODNameCN3
		{
			get
			{
				return this._PODNameCN3;
			}
			set
			{
				if ((this._PODNameCN3 != value))
				{
					this.OnPODNameCN3Changing(value);
					this.SendPropertyChanging();
					this._PODNameCN3 = value;
					this.SendPropertyChanged("PODNameCN3");
					this.OnPODNameCN3Changed();
				}
			}
		}
		
		[Column(Storage="_PODNameBD3", DbType="NVarChar(500)")]
		public string PODNameBD3
		{
			get
			{
				return this._PODNameBD3;
			}
			set
			{
				if ((this._PODNameBD3 != value))
				{
					this.OnPODNameBD3Changing(value);
					this.SendPropertyChanging();
					this._PODNameBD3 = value;
					this.SendPropertyChanged("PODNameBD3");
					this.OnPODNameBD3Changed();
				}
			}
		}
		
		[Column(Storage="_DefectCode1", DbType="NVarChar(20)")]
		public string DefectCode1
		{
			get
			{
				return this._DefectCode1;
			}
			set
			{
				if ((this._DefectCode1 != value))
				{
					this.OnDefectCode1Changing(value);
					this.SendPropertyChanging();
					this._DefectCode1 = value;
					this.SendPropertyChanged("DefectCode1");
					this.OnDefectCode1Changed();
				}
			}
		}
		
		[Column(Storage="_DefectNameEN1", DbType="NVarChar(500)")]
		public string DefectNameEN1
		{
			get
			{
				return this._DefectNameEN1;
			}
			set
			{
				if ((this._DefectNameEN1 != value))
				{
					this.OnDefectNameEN1Changing(value);
					this.SendPropertyChanging();
					this._DefectNameEN1 = value;
					this.SendPropertyChanged("DefectNameEN1");
					this.OnDefectNameEN1Changed();
				}
			}
		}
		
		[Column(Storage="_DefectNameCN1", DbType="NVarChar(500)")]
		public string DefectNameCN1
		{
			get
			{
				return this._DefectNameCN1;
			}
			set
			{
				if ((this._DefectNameCN1 != value))
				{
					this.OnDefectNameCN1Changing(value);
					this.SendPropertyChanging();
					this._DefectNameCN1 = value;
					this.SendPropertyChanged("DefectNameCN1");
					this.OnDefectNameCN1Changed();
				}
			}
		}
		
		[Column(Storage="_DefectNameBD1", DbType="NVarChar(500)")]
		public string DefectNameBD1
		{
			get
			{
				return this._DefectNameBD1;
			}
			set
			{
				if ((this._DefectNameBD1 != value))
				{
					this.OnDefectNameBD1Changing(value);
					this.SendPropertyChanging();
					this._DefectNameBD1 = value;
					this.SendPropertyChanged("DefectNameBD1");
					this.OnDefectNameBD1Changed();
				}
			}
		}
		
		[Column(Storage="_DefectCode2", DbType="NVarChar(20)")]
		public string DefectCode2
		{
			get
			{
				return this._DefectCode2;
			}
			set
			{
				if ((this._DefectCode2 != value))
				{
					this.OnDefectCode2Changing(value);
					this.SendPropertyChanging();
					this._DefectCode2 = value;
					this.SendPropertyChanged("DefectCode2");
					this.OnDefectCode2Changed();
				}
			}
		}
		
		[Column(Storage="_DefectNameEN2", DbType="NVarChar(500)")]
		public string DefectNameEN2
		{
			get
			{
				return this._DefectNameEN2;
			}
			set
			{
				if ((this._DefectNameEN2 != value))
				{
					this.OnDefectNameEN2Changing(value);
					this.SendPropertyChanging();
					this._DefectNameEN2 = value;
					this.SendPropertyChanged("DefectNameEN2");
					this.OnDefectNameEN2Changed();
				}
			}
		}
		
		[Column(Storage="_DefectNameCN2", DbType="NVarChar(500)")]
		public string DefectNameCN2
		{
			get
			{
				return this._DefectNameCN2;
			}
			set
			{
				if ((this._DefectNameCN2 != value))
				{
					this.OnDefectNameCN2Changing(value);
					this.SendPropertyChanging();
					this._DefectNameCN2 = value;
					this.SendPropertyChanged("DefectNameCN2");
					this.OnDefectNameCN2Changed();
				}
			}
		}
		
		[Column(Storage="_DefectNameBD2", DbType="NVarChar(500)")]
		public string DefectNameBD2
		{
			get
			{
				return this._DefectNameBD2;
			}
			set
			{
				if ((this._DefectNameBD2 != value))
				{
					this.OnDefectNameBD2Changing(value);
					this.SendPropertyChanging();
					this._DefectNameBD2 = value;
					this.SendPropertyChanged("DefectNameBD2");
					this.OnDefectNameBD2Changed();
				}
			}
		}
		
		[Column(Storage="_DefectCode3", DbType="NVarChar(20)")]
		public string DefectCode3
		{
			get
			{
				return this._DefectCode3;
			}
			set
			{
				if ((this._DefectCode3 != value))
				{
					this.OnDefectCode3Changing(value);
					this.SendPropertyChanging();
					this._DefectCode3 = value;
					this.SendPropertyChanged("DefectCode3");
					this.OnDefectCode3Changed();
				}
			}
		}
		
		[Column(Storage="_DefectNameEN3", DbType="NVarChar(500)")]
		public string DefectNameEN3
		{
			get
			{
				return this._DefectNameEN3;
			}
			set
			{
				if ((this._DefectNameEN3 != value))
				{
					this.OnDefectNameEN3Changing(value);
					this.SendPropertyChanging();
					this._DefectNameEN3 = value;
					this.SendPropertyChanged("DefectNameEN3");
					this.OnDefectNameEN3Changed();
				}
			}
		}
		
		[Column(Storage="_DefectNameCN3", DbType="NVarChar(500)")]
		public string DefectNameCN3
		{
			get
			{
				return this._DefectNameCN3;
			}
			set
			{
				if ((this._DefectNameCN3 != value))
				{
					this.OnDefectNameCN3Changing(value);
					this.SendPropertyChanging();
					this._DefectNameCN3 = value;
					this.SendPropertyChanged("DefectNameCN3");
					this.OnDefectNameCN3Changed();
				}
			}
		}
		
		[Column(Storage="_DefectNameBD3", DbType="NVarChar(500)")]
		public string DefectNameBD3
		{
			get
			{
				return this._DefectNameBD3;
			}
			set
			{
				if ((this._DefectNameBD3 != value))
				{
					this.OnDefectNameBD3Changing(value);
					this.SendPropertyChanging();
					this._DefectNameBD3 = value;
					this.SendPropertyChanged("DefectNameBD3");
					this.OnDefectNameBD3Changed();
				}
			}
		}
		
		[Column(Storage="_PODQty", DbType="Int")]
		public System.Nullable<int> PODQty
		{
			get
			{
				return this._PODQty;
			}
			set
			{
				if ((this._PODQty != value))
				{
					this.OnPODQtyChanging(value);
					this.SendPropertyChanging();
					this._PODQty = value;
					this.SendPropertyChanged("PODQty");
					this.OnPODQtyChanged();
				}
			}
		}
		
		[Column(Storage="_RejectQty", DbType="Int")]
		public System.Nullable<int> RejectQty
		{
			get
			{
				return this._RejectQty;
			}
			set
			{
				if ((this._RejectQty != value))
				{
					this.OnRejectQtyChanging(value);
					this.SendPropertyChanging();
					this._RejectQty = value;
					this.SendPropertyChanged("RejectQty");
					this.OnRejectQtyChanged();
				}
			}
		}
		
		[Association(Name="FullInspectionHeader_FullInspectionDetail", Storage="_FullInspectionHeader1", ThisKey="FullInspectionHeader", OtherKey="Oid", IsForeignKey=true, DeleteRule="CASCADE")]
		public FullInspectionHeader FullInspectionHeader1
		{
			get
			{
				return this._FullInspectionHeader1.Entity;
			}
			set
			{
				FullInspectionHeader previousValue = this._FullInspectionHeader1.Entity;
				if (((previousValue != value) 
							|| (this._FullInspectionHeader1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FullInspectionHeader1.Entity = null;
						previousValue.FullInspectionDetails.Remove(this);
					}
					this._FullInspectionHeader1.Entity = value;
					if ((value != null))
					{
						value.FullInspectionDetails.Add(this);
						this._FullInspectionHeader = value.Oid;
					}
					else
					{
						this._FullInspectionHeader = default(Nullable<long>);
					}
					this.SendPropertyChanged("FullInspectionHeader1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.FourDefectCode")]
	public partial class FourDefectCode : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OID;
		
		private string _DefectCode;
		
		private int _Sort;
		
		private string _DefectNameCN;
		
		private string _DefectNameEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOIDChanging(int value);
    partial void OnOIDChanged();
    partial void OnDefectCodeChanging(string value);
    partial void OnDefectCodeChanged();
    partial void OnSortChanging(int value);
    partial void OnSortChanged();
    partial void OnDefectNameCNChanging(string value);
    partial void OnDefectNameCNChanged();
    partial void OnDefectNameENChanging(string value);
    partial void OnDefectNameENChanged();
    #endregion
		
		public FourDefectCode()
		{
			OnCreated();
		}
		
		[Column(Storage="_OID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int OID
		{
			get
			{
				return this._OID;
			}
			set
			{
				if ((this._OID != value))
				{
					this.OnOIDChanging(value);
					this.SendPropertyChanging();
					this._OID = value;
					this.SendPropertyChanged("OID");
					this.OnOIDChanged();
				}
			}
		}
		
		[Column(Storage="_DefectCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string DefectCode
		{
			get
			{
				return this._DefectCode;
			}
			set
			{
				if ((this._DefectCode != value))
				{
					this.OnDefectCodeChanging(value);
					this.SendPropertyChanging();
					this._DefectCode = value;
					this.SendPropertyChanged("DefectCode");
					this.OnDefectCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Sort", DbType="Int NOT NULL")]
		public int Sort
		{
			get
			{
				return this._Sort;
			}
			set
			{
				if ((this._Sort != value))
				{
					this.OnSortChanging(value);
					this.SendPropertyChanging();
					this._Sort = value;
					this.SendPropertyChanged("Sort");
					this.OnSortChanged();
				}
			}
		}
		
		[Column(Storage="_DefectNameCN", DbType="NVarChar(30)")]
		public string DefectNameCN
		{
			get
			{
				return this._DefectNameCN;
			}
			set
			{
				if ((this._DefectNameCN != value))
				{
					this.OnDefectNameCNChanging(value);
					this.SendPropertyChanging();
					this._DefectNameCN = value;
					this.SendPropertyChanged("DefectNameCN");
					this.OnDefectNameCNChanged();
				}
			}
		}
		
		[Column(Storage="_DefectNameEN", DbType="NVarChar(30)")]
		public string DefectNameEN
		{
			get
			{
				return this._DefectNameEN;
			}
			set
			{
				if ((this._DefectNameEN != value))
				{
					this.OnDefectNameENChanging(value);
					this.SendPropertyChanging();
					this._DefectNameEN = value;
					this.SendPropertyChanged("DefectNameEN");
					this.OnDefectNameENChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.CustQCMaster")]
	public partial class CustQCMaster : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _OID;
		
		private System.Nullable<System.DateTime> _ExamDate;
		
		private string _Customer;
		
		private string _CustStyle;
		
		private System.Nullable<int> _POQty;
		
		private System.Nullable<int> _SampleSizeQty;
		
		private string _AQLMarjorDefectLevel;
		
		private System.Nullable<int> _AQLMarjorDefectAcceptQty;
		
		private string _AQLMinorDefectLevel;
		
		private System.Nullable<int> _AQLMinorDefectAcceptQty;
		
		private string _QCExamNO;
		
		private string _ProductType;
		
		private System.Nullable<System.DateTime> _ShipmentDate;
		
		private System.Nullable<int> _ShipmentPOQty;
		
		private System.Nullable<int> _ShipmentStyleQty;
		
		private System.Nullable<int> _ShipmentColorQty;
		
		private System.Nullable<int> _ShipmentSizeQty;
		
		private System.Nullable<int> _ExamCartonQty;
		
		private System.Nullable<int> _StandardCartonQty;
		
		private System.Nullable<int> _LogQty;
		
		private string _QCExaminer;
		
		private string _ResponsibleDept;
		
		private string _ProjectNO;
		
		private string _Color;
		
		private string _QCLocation;
		
		private string _CatLogNO;
		
		private string _MfgLocation;
		
		private string _CustomerPO;
		
		private string _WO;
		
		private System.Nullable<int> _SampleSzie;
		
		private string _IsShowRpt;
		
		private EntitySet<CustQCDetail> _CustQCDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOIDChanging(long value);
    partial void OnOIDChanged();
    partial void OnExamDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExamDateChanged();
    partial void OnCustomerChanging(string value);
    partial void OnCustomerChanged();
    partial void OnCustStyleChanging(string value);
    partial void OnCustStyleChanged();
    partial void OnPOQtyChanging(System.Nullable<int> value);
    partial void OnPOQtyChanged();
    partial void OnSampleSizeQtyChanging(System.Nullable<int> value);
    partial void OnSampleSizeQtyChanged();
    partial void OnAQLMarjorDefectLevelChanging(string value);
    partial void OnAQLMarjorDefectLevelChanged();
    partial void OnAQLMarjorDefectAcceptQtyChanging(System.Nullable<int> value);
    partial void OnAQLMarjorDefectAcceptQtyChanged();
    partial void OnAQLMinorDefectLevelChanging(string value);
    partial void OnAQLMinorDefectLevelChanged();
    partial void OnAQLMinorDefectAcceptQtyChanging(System.Nullable<int> value);
    partial void OnAQLMinorDefectAcceptQtyChanged();
    partial void OnQCExamNOChanging(string value);
    partial void OnQCExamNOChanged();
    partial void OnProductTypeChanging(string value);
    partial void OnProductTypeChanged();
    partial void OnShipmentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnShipmentDateChanged();
    partial void OnShipmentPOQtyChanging(System.Nullable<int> value);
    partial void OnShipmentPOQtyChanged();
    partial void OnShipmentStyleQtyChanging(System.Nullable<int> value);
    partial void OnShipmentStyleQtyChanged();
    partial void OnShipmentColorQtyChanging(System.Nullable<int> value);
    partial void OnShipmentColorQtyChanged();
    partial void OnShipmentSizeQtyChanging(System.Nullable<int> value);
    partial void OnShipmentSizeQtyChanged();
    partial void OnExamCartonQtyChanging(System.Nullable<int> value);
    partial void OnExamCartonQtyChanged();
    partial void OnStandardCartonQtyChanging(System.Nullable<int> value);
    partial void OnStandardCartonQtyChanged();
    partial void OnLogQtyChanging(System.Nullable<int> value);
    partial void OnLogQtyChanged();
    partial void OnQCExaminerChanging(string value);
    partial void OnQCExaminerChanged();
    partial void OnResponsibleDeptChanging(string value);
    partial void OnResponsibleDeptChanged();
    partial void OnProjectNOChanging(string value);
    partial void OnProjectNOChanged();
    partial void OnColorChanging(string value);
    partial void OnColorChanged();
    partial void OnQCLocationChanging(string value);
    partial void OnQCLocationChanged();
    partial void OnCatLogNOChanging(string value);
    partial void OnCatLogNOChanged();
    partial void OnMfgLocationChanging(string value);
    partial void OnMfgLocationChanged();
    partial void OnCustomerPOChanging(string value);
    partial void OnCustomerPOChanged();
    partial void OnWOChanging(string value);
    partial void OnWOChanged();
    partial void OnSampleSzieChanging(System.Nullable<int> value);
    partial void OnSampleSzieChanged();
    partial void OnIsShowRptChanging(string value);
    partial void OnIsShowRptChanged();
    #endregion
		
		public CustQCMaster()
		{
			this._CustQCDetails = new EntitySet<CustQCDetail>(new Action<CustQCDetail>(this.attach_CustQCDetails), new Action<CustQCDetail>(this.detach_CustQCDetails));
			OnCreated();
		}
		
		[Column(Storage="_OID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long OID
		{
			get
			{
				return this._OID;
			}
			set
			{
				if ((this._OID != value))
				{
					this.OnOIDChanging(value);
					this.SendPropertyChanging();
					this._OID = value;
					this.SendPropertyChanged("OID");
					this.OnOIDChanged();
				}
			}
		}
		
		[Column(Storage="_ExamDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ExamDate
		{
			get
			{
				return this._ExamDate;
			}
			set
			{
				if ((this._ExamDate != value))
				{
					this.OnExamDateChanging(value);
					this.SendPropertyChanging();
					this._ExamDate = value;
					this.SendPropertyChanged("ExamDate");
					this.OnExamDateChanged();
				}
			}
		}
		
		[Column(Storage="_Customer", DbType="VarChar(10)")]
		public string Customer
		{
			get
			{
				return this._Customer;
			}
			set
			{
				if ((this._Customer != value))
				{
					this.OnCustomerChanging(value);
					this.SendPropertyChanging();
					this._Customer = value;
					this.SendPropertyChanged("Customer");
					this.OnCustomerChanged();
				}
			}
		}
		
		[Column(Storage="_CustStyle", DbType="VarChar(500)")]
		public string CustStyle
		{
			get
			{
				return this._CustStyle;
			}
			set
			{
				if ((this._CustStyle != value))
				{
					this.OnCustStyleChanging(value);
					this.SendPropertyChanging();
					this._CustStyle = value;
					this.SendPropertyChanged("CustStyle");
					this.OnCustStyleChanged();
				}
			}
		}
		
		[Column(Storage="_POQty", DbType="Int")]
		public System.Nullable<int> POQty
		{
			get
			{
				return this._POQty;
			}
			set
			{
				if ((this._POQty != value))
				{
					this.OnPOQtyChanging(value);
					this.SendPropertyChanging();
					this._POQty = value;
					this.SendPropertyChanged("POQty");
					this.OnPOQtyChanged();
				}
			}
		}
		
		[Column(Storage="_SampleSizeQty", DbType="Int")]
		public System.Nullable<int> SampleSizeQty
		{
			get
			{
				return this._SampleSizeQty;
			}
			set
			{
				if ((this._SampleSizeQty != value))
				{
					this.OnSampleSizeQtyChanging(value);
					this.SendPropertyChanging();
					this._SampleSizeQty = value;
					this.SendPropertyChanged("SampleSizeQty");
					this.OnSampleSizeQtyChanged();
				}
			}
		}
		
		[Column(Storage="_AQLMarjorDefectLevel", DbType="VarChar(50)")]
		public string AQLMarjorDefectLevel
		{
			get
			{
				return this._AQLMarjorDefectLevel;
			}
			set
			{
				if ((this._AQLMarjorDefectLevel != value))
				{
					this.OnAQLMarjorDefectLevelChanging(value);
					this.SendPropertyChanging();
					this._AQLMarjorDefectLevel = value;
					this.SendPropertyChanged("AQLMarjorDefectLevel");
					this.OnAQLMarjorDefectLevelChanged();
				}
			}
		}
		
		[Column(Storage="_AQLMarjorDefectAcceptQty", DbType="Int")]
		public System.Nullable<int> AQLMarjorDefectAcceptQty
		{
			get
			{
				return this._AQLMarjorDefectAcceptQty;
			}
			set
			{
				if ((this._AQLMarjorDefectAcceptQty != value))
				{
					this.OnAQLMarjorDefectAcceptQtyChanging(value);
					this.SendPropertyChanging();
					this._AQLMarjorDefectAcceptQty = value;
					this.SendPropertyChanged("AQLMarjorDefectAcceptQty");
					this.OnAQLMarjorDefectAcceptQtyChanged();
				}
			}
		}
		
		[Column(Storage="_AQLMinorDefectLevel", DbType="VarChar(50)")]
		public string AQLMinorDefectLevel
		{
			get
			{
				return this._AQLMinorDefectLevel;
			}
			set
			{
				if ((this._AQLMinorDefectLevel != value))
				{
					this.OnAQLMinorDefectLevelChanging(value);
					this.SendPropertyChanging();
					this._AQLMinorDefectLevel = value;
					this.SendPropertyChanged("AQLMinorDefectLevel");
					this.OnAQLMinorDefectLevelChanged();
				}
			}
		}
		
		[Column(Storage="_AQLMinorDefectAcceptQty", DbType="Int")]
		public System.Nullable<int> AQLMinorDefectAcceptQty
		{
			get
			{
				return this._AQLMinorDefectAcceptQty;
			}
			set
			{
				if ((this._AQLMinorDefectAcceptQty != value))
				{
					this.OnAQLMinorDefectAcceptQtyChanging(value);
					this.SendPropertyChanging();
					this._AQLMinorDefectAcceptQty = value;
					this.SendPropertyChanged("AQLMinorDefectAcceptQty");
					this.OnAQLMinorDefectAcceptQtyChanged();
				}
			}
		}
		
		[Column(Storage="_QCExamNO", DbType="VarChar(50)")]
		public string QCExamNO
		{
			get
			{
				return this._QCExamNO;
			}
			set
			{
				if ((this._QCExamNO != value))
				{
					this.OnQCExamNOChanging(value);
					this.SendPropertyChanging();
					this._QCExamNO = value;
					this.SendPropertyChanged("QCExamNO");
					this.OnQCExamNOChanged();
				}
			}
		}
		
		[Column(Storage="_ProductType", DbType="VarChar(50)")]
		public string ProductType
		{
			get
			{
				return this._ProductType;
			}
			set
			{
				if ((this._ProductType != value))
				{
					this.OnProductTypeChanging(value);
					this.SendPropertyChanging();
					this._ProductType = value;
					this.SendPropertyChanged("ProductType");
					this.OnProductTypeChanged();
				}
			}
		}
		
		[Column(Storage="_ShipmentDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ShipmentDate
		{
			get
			{
				return this._ShipmentDate;
			}
			set
			{
				if ((this._ShipmentDate != value))
				{
					this.OnShipmentDateChanging(value);
					this.SendPropertyChanging();
					this._ShipmentDate = value;
					this.SendPropertyChanged("ShipmentDate");
					this.OnShipmentDateChanged();
				}
			}
		}
		
		[Column(Storage="_ShipmentPOQty", DbType="Int")]
		public System.Nullable<int> ShipmentPOQty
		{
			get
			{
				return this._ShipmentPOQty;
			}
			set
			{
				if ((this._ShipmentPOQty != value))
				{
					this.OnShipmentPOQtyChanging(value);
					this.SendPropertyChanging();
					this._ShipmentPOQty = value;
					this.SendPropertyChanged("ShipmentPOQty");
					this.OnShipmentPOQtyChanged();
				}
			}
		}
		
		[Column(Storage="_ShipmentStyleQty", DbType="Int")]
		public System.Nullable<int> ShipmentStyleQty
		{
			get
			{
				return this._ShipmentStyleQty;
			}
			set
			{
				if ((this._ShipmentStyleQty != value))
				{
					this.OnShipmentStyleQtyChanging(value);
					this.SendPropertyChanging();
					this._ShipmentStyleQty = value;
					this.SendPropertyChanged("ShipmentStyleQty");
					this.OnShipmentStyleQtyChanged();
				}
			}
		}
		
		[Column(Storage="_ShipmentColorQty", DbType="Int")]
		public System.Nullable<int> ShipmentColorQty
		{
			get
			{
				return this._ShipmentColorQty;
			}
			set
			{
				if ((this._ShipmentColorQty != value))
				{
					this.OnShipmentColorQtyChanging(value);
					this.SendPropertyChanging();
					this._ShipmentColorQty = value;
					this.SendPropertyChanged("ShipmentColorQty");
					this.OnShipmentColorQtyChanged();
				}
			}
		}
		
		[Column(Storage="_ShipmentSizeQty", DbType="Int")]
		public System.Nullable<int> ShipmentSizeQty
		{
			get
			{
				return this._ShipmentSizeQty;
			}
			set
			{
				if ((this._ShipmentSizeQty != value))
				{
					this.OnShipmentSizeQtyChanging(value);
					this.SendPropertyChanging();
					this._ShipmentSizeQty = value;
					this.SendPropertyChanged("ShipmentSizeQty");
					this.OnShipmentSizeQtyChanged();
				}
			}
		}
		
		[Column(Storage="_ExamCartonQty", DbType="Int")]
		public System.Nullable<int> ExamCartonQty
		{
			get
			{
				return this._ExamCartonQty;
			}
			set
			{
				if ((this._ExamCartonQty != value))
				{
					this.OnExamCartonQtyChanging(value);
					this.SendPropertyChanging();
					this._ExamCartonQty = value;
					this.SendPropertyChanged("ExamCartonQty");
					this.OnExamCartonQtyChanged();
				}
			}
		}
		
		[Column(Storage="_StandardCartonQty", DbType="Int")]
		public System.Nullable<int> StandardCartonQty
		{
			get
			{
				return this._StandardCartonQty;
			}
			set
			{
				if ((this._StandardCartonQty != value))
				{
					this.OnStandardCartonQtyChanging(value);
					this.SendPropertyChanging();
					this._StandardCartonQty = value;
					this.SendPropertyChanged("StandardCartonQty");
					this.OnStandardCartonQtyChanged();
				}
			}
		}
		
		[Column(Storage="_LogQty", DbType="Int")]
		public System.Nullable<int> LogQty
		{
			get
			{
				return this._LogQty;
			}
			set
			{
				if ((this._LogQty != value))
				{
					this.OnLogQtyChanging(value);
					this.SendPropertyChanging();
					this._LogQty = value;
					this.SendPropertyChanged("LogQty");
					this.OnLogQtyChanged();
				}
			}
		}
		
		[Column(Storage="_QCExaminer", DbType="VarChar(50)")]
		public string QCExaminer
		{
			get
			{
				return this._QCExaminer;
			}
			set
			{
				if ((this._QCExaminer != value))
				{
					this.OnQCExaminerChanging(value);
					this.SendPropertyChanging();
					this._QCExaminer = value;
					this.SendPropertyChanged("QCExaminer");
					this.OnQCExaminerChanged();
				}
			}
		}
		
		[Column(Storage="_ResponsibleDept", DbType="VarChar(1000)")]
		public string ResponsibleDept
		{
			get
			{
				return this._ResponsibleDept;
			}
			set
			{
				if ((this._ResponsibleDept != value))
				{
					this.OnResponsibleDeptChanging(value);
					this.SendPropertyChanging();
					this._ResponsibleDept = value;
					this.SendPropertyChanged("ResponsibleDept");
					this.OnResponsibleDeptChanged();
				}
			}
		}
		
		[Column(Storage="_ProjectNO", DbType="VarChar(500)")]
		public string ProjectNO
		{
			get
			{
				return this._ProjectNO;
			}
			set
			{
				if ((this._ProjectNO != value))
				{
					this.OnProjectNOChanging(value);
					this.SendPropertyChanging();
					this._ProjectNO = value;
					this.SendPropertyChanged("ProjectNO");
					this.OnProjectNOChanged();
				}
			}
		}
		
		[Column(Storage="_Color", DbType="VarChar(500)")]
		public string Color
		{
			get
			{
				return this._Color;
			}
			set
			{
				if ((this._Color != value))
				{
					this.OnColorChanging(value);
					this.SendPropertyChanging();
					this._Color = value;
					this.SendPropertyChanged("Color");
					this.OnColorChanged();
				}
			}
		}
		
		[Column(Storage="_QCLocation", DbType="VarChar(20)")]
		public string QCLocation
		{
			get
			{
				return this._QCLocation;
			}
			set
			{
				if ((this._QCLocation != value))
				{
					this.OnQCLocationChanging(value);
					this.SendPropertyChanging();
					this._QCLocation = value;
					this.SendPropertyChanged("QCLocation");
					this.OnQCLocationChanged();
				}
			}
		}
		
		[Column(Storage="_CatLogNO", DbType="VarChar(20)")]
		public string CatLogNO
		{
			get
			{
				return this._CatLogNO;
			}
			set
			{
				if ((this._CatLogNO != value))
				{
					this.OnCatLogNOChanging(value);
					this.SendPropertyChanging();
					this._CatLogNO = value;
					this.SendPropertyChanged("CatLogNO");
					this.OnCatLogNOChanged();
				}
			}
		}
		
		[Column(Storage="_MfgLocation", DbType="VarChar(20)")]
		public string MfgLocation
		{
			get
			{
				return this._MfgLocation;
			}
			set
			{
				if ((this._MfgLocation != value))
				{
					this.OnMfgLocationChanging(value);
					this.SendPropertyChanging();
					this._MfgLocation = value;
					this.SendPropertyChanged("MfgLocation");
					this.OnMfgLocationChanged();
				}
			}
		}
		
		[Column(Storage="_CustomerPO", DbType="VarChar(1000)")]
		public string CustomerPO
		{
			get
			{
				return this._CustomerPO;
			}
			set
			{
				if ((this._CustomerPO != value))
				{
					this.OnCustomerPOChanging(value);
					this.SendPropertyChanging();
					this._CustomerPO = value;
					this.SendPropertyChanged("CustomerPO");
					this.OnCustomerPOChanged();
				}
			}
		}
		
		[Column(Storage="_WO", DbType="VarChar(1000)")]
		public string WO
		{
			get
			{
				return this._WO;
			}
			set
			{
				if ((this._WO != value))
				{
					this.OnWOChanging(value);
					this.SendPropertyChanging();
					this._WO = value;
					this.SendPropertyChanged("WO");
					this.OnWOChanged();
				}
			}
		}
		
		[Column(Storage="_SampleSzie", DbType="Int")]
		public System.Nullable<int> SampleSzie
		{
			get
			{
				return this._SampleSzie;
			}
			set
			{
				if ((this._SampleSzie != value))
				{
					this.OnSampleSzieChanging(value);
					this.SendPropertyChanging();
					this._SampleSzie = value;
					this.SendPropertyChanged("SampleSzie");
					this.OnSampleSzieChanged();
				}
			}
		}
		
		[Column(Storage="_IsShowRpt", DbType="VarChar(20)")]
		public string IsShowRpt
		{
			get
			{
				return this._IsShowRpt;
			}
			set
			{
				if ((this._IsShowRpt != value))
				{
					this.OnIsShowRptChanging(value);
					this.SendPropertyChanging();
					this._IsShowRpt = value;
					this.SendPropertyChanged("IsShowRpt");
					this.OnIsShowRptChanged();
				}
			}
		}
		
		[Association(Name="CustQCMaster_CustQCDetail", Storage="_CustQCDetails", ThisKey="OID", OtherKey="MasterOID")]
		public EntitySet<CustQCDetail> CustQCDetails
		{
			get
			{
				return this._CustQCDetails;
			}
			set
			{
				this._CustQCDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CustQCDetails(CustQCDetail entity)
		{
			this.SendPropertyChanging();
			entity.CustQCMaster = this;
		}
		
		private void detach_CustQCDetails(CustQCDetail entity)
		{
			this.SendPropertyChanging();
			entity.CustQCMaster = null;
		}
	}
	
	[Table(Name="dbo.QC_ExamPlanHeader")]
	public partial class QC_ExamPlanHeader : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _OID;
		
		private string _PHStyle;
		
		private string _CustStyle;
		
		private string _CustCode;
		
		private string _Factory;
		
		private string _Workshop;
		
		private string _Line;
		
		private System.Nullable<bool> _IsConfirmQI;
		
		private string _ConfirmerQI;
		
		private System.Nullable<System.DateTime> _ConfirmDateQI;
		
		private System.Nullable<bool> _IsApproval;
		
		private string _Approvaler;
		
		private System.Nullable<System.DateTime> _ApprovalDate;
		
		private System.Nullable<bool> _IsConfirmQA;
		
		private string _ConfirmerQA;
		
		private System.Nullable<System.DateTime> _ConfirmDateQA;
		
		private string _ImportantNote;
		
		private System.Nullable<System.DateTime> _ChosenFactoryDate;
		
		private string _StyleType;
		
		private EntitySet<QC_ExamPlanDetail> _QC_ExamPlanDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOIDChanging(long value);
    partial void OnOIDChanged();
    partial void OnPHStyleChanging(string value);
    partial void OnPHStyleChanged();
    partial void OnCustStyleChanging(string value);
    partial void OnCustStyleChanged();
    partial void OnCustCodeChanging(string value);
    partial void OnCustCodeChanged();
    partial void OnFactoryChanging(string value);
    partial void OnFactoryChanged();
    partial void OnWorkshopChanging(string value);
    partial void OnWorkshopChanged();
    partial void OnLineChanging(string value);
    partial void OnLineChanged();
    partial void OnIsConfirmQIChanging(System.Nullable<bool> value);
    partial void OnIsConfirmQIChanged();
    partial void OnConfirmerQIChanging(string value);
    partial void OnConfirmerQIChanged();
    partial void OnConfirmDateQIChanging(System.Nullable<System.DateTime> value);
    partial void OnConfirmDateQIChanged();
    partial void OnIsApprovalChanging(System.Nullable<bool> value);
    partial void OnIsApprovalChanged();
    partial void OnApprovalerChanging(string value);
    partial void OnApprovalerChanged();
    partial void OnApprovalDateChanging(System.Nullable<System.DateTime> value);
    partial void OnApprovalDateChanged();
    partial void OnIsConfirmQAChanging(System.Nullable<bool> value);
    partial void OnIsConfirmQAChanged();
    partial void OnConfirmerQAChanging(string value);
    partial void OnConfirmerQAChanged();
    partial void OnConfirmDateQAChanging(System.Nullable<System.DateTime> value);
    partial void OnConfirmDateQAChanged();
    partial void OnImportantNoteChanging(string value);
    partial void OnImportantNoteChanged();
    partial void OnChosenFactoryDateChanging(System.Nullable<System.DateTime> value);
    partial void OnChosenFactoryDateChanged();
    partial void OnStyleTypeChanging(string value);
    partial void OnStyleTypeChanged();
    #endregion
		
		public QC_ExamPlanHeader()
		{
			this._QC_ExamPlanDetails = new EntitySet<QC_ExamPlanDetail>(new Action<QC_ExamPlanDetail>(this.attach_QC_ExamPlanDetails), new Action<QC_ExamPlanDetail>(this.detach_QC_ExamPlanDetails));
			OnCreated();
		}
		
		[Column(Storage="_OID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long OID
		{
			get
			{
				return this._OID;
			}
			set
			{
				if ((this._OID != value))
				{
					this.OnOIDChanging(value);
					this.SendPropertyChanging();
					this._OID = value;
					this.SendPropertyChanged("OID");
					this.OnOIDChanged();
				}
			}
		}
		
		[Column(Storage="_PHStyle", DbType="VarChar(50)")]
		public string PHStyle
		{
			get
			{
				return this._PHStyle;
			}
			set
			{
				if ((this._PHStyle != value))
				{
					this.OnPHStyleChanging(value);
					this.SendPropertyChanging();
					this._PHStyle = value;
					this.SendPropertyChanged("PHStyle");
					this.OnPHStyleChanged();
				}
			}
		}
		
		[Column(Storage="_CustStyle", DbType="VarChar(50)")]
		public string CustStyle
		{
			get
			{
				return this._CustStyle;
			}
			set
			{
				if ((this._CustStyle != value))
				{
					this.OnCustStyleChanging(value);
					this.SendPropertyChanging();
					this._CustStyle = value;
					this.SendPropertyChanged("CustStyle");
					this.OnCustStyleChanged();
				}
			}
		}
		
		[Column(Storage="_CustCode", DbType="VarChar(50)")]
		public string CustCode
		{
			get
			{
				return this._CustCode;
			}
			set
			{
				if ((this._CustCode != value))
				{
					this.OnCustCodeChanging(value);
					this.SendPropertyChanging();
					this._CustCode = value;
					this.SendPropertyChanged("CustCode");
					this.OnCustCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Factory", DbType="VarChar(100)")]
		public string Factory
		{
			get
			{
				return this._Factory;
			}
			set
			{
				if ((this._Factory != value))
				{
					this.OnFactoryChanging(value);
					this.SendPropertyChanging();
					this._Factory = value;
					this.SendPropertyChanged("Factory");
					this.OnFactoryChanged();
				}
			}
		}
		
		[Column(Storage="_Workshop", DbType="VarChar(100)")]
		public string Workshop
		{
			get
			{
				return this._Workshop;
			}
			set
			{
				if ((this._Workshop != value))
				{
					this.OnWorkshopChanging(value);
					this.SendPropertyChanging();
					this._Workshop = value;
					this.SendPropertyChanged("Workshop");
					this.OnWorkshopChanged();
				}
			}
		}
		
		[Column(Storage="_Line", DbType="VarChar(100)")]
		public string Line
		{
			get
			{
				return this._Line;
			}
			set
			{
				if ((this._Line != value))
				{
					this.OnLineChanging(value);
					this.SendPropertyChanging();
					this._Line = value;
					this.SendPropertyChanged("Line");
					this.OnLineChanged();
				}
			}
		}
		
		[Column(Storage="_IsConfirmQI", DbType="Bit")]
		public System.Nullable<bool> IsConfirmQI
		{
			get
			{
				return this._IsConfirmQI;
			}
			set
			{
				if ((this._IsConfirmQI != value))
				{
					this.OnIsConfirmQIChanging(value);
					this.SendPropertyChanging();
					this._IsConfirmQI = value;
					this.SendPropertyChanged("IsConfirmQI");
					this.OnIsConfirmQIChanged();
				}
			}
		}
		
		[Column(Storage="_ConfirmerQI", DbType="NVarChar(100)")]
		public string ConfirmerQI
		{
			get
			{
				return this._ConfirmerQI;
			}
			set
			{
				if ((this._ConfirmerQI != value))
				{
					this.OnConfirmerQIChanging(value);
					this.SendPropertyChanging();
					this._ConfirmerQI = value;
					this.SendPropertyChanged("ConfirmerQI");
					this.OnConfirmerQIChanged();
				}
			}
		}
		
		[Column(Storage="_ConfirmDateQI", DbType="DateTime")]
		public System.Nullable<System.DateTime> ConfirmDateQI
		{
			get
			{
				return this._ConfirmDateQI;
			}
			set
			{
				if ((this._ConfirmDateQI != value))
				{
					this.OnConfirmDateQIChanging(value);
					this.SendPropertyChanging();
					this._ConfirmDateQI = value;
					this.SendPropertyChanged("ConfirmDateQI");
					this.OnConfirmDateQIChanged();
				}
			}
		}
		
		[Column(Storage="_IsApproval", DbType="Bit")]
		public System.Nullable<bool> IsApproval
		{
			get
			{
				return this._IsApproval;
			}
			set
			{
				if ((this._IsApproval != value))
				{
					this.OnIsApprovalChanging(value);
					this.SendPropertyChanging();
					this._IsApproval = value;
					this.SendPropertyChanged("IsApproval");
					this.OnIsApprovalChanged();
				}
			}
		}
		
		[Column(Storage="_Approvaler", DbType="NVarChar(100)")]
		public string Approvaler
		{
			get
			{
				return this._Approvaler;
			}
			set
			{
				if ((this._Approvaler != value))
				{
					this.OnApprovalerChanging(value);
					this.SendPropertyChanging();
					this._Approvaler = value;
					this.SendPropertyChanged("Approvaler");
					this.OnApprovalerChanged();
				}
			}
		}
		
		[Column(Storage="_ApprovalDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ApprovalDate
		{
			get
			{
				return this._ApprovalDate;
			}
			set
			{
				if ((this._ApprovalDate != value))
				{
					this.OnApprovalDateChanging(value);
					this.SendPropertyChanging();
					this._ApprovalDate = value;
					this.SendPropertyChanged("ApprovalDate");
					this.OnApprovalDateChanged();
				}
			}
		}
		
		[Column(Storage="_IsConfirmQA", DbType="Bit")]
		public System.Nullable<bool> IsConfirmQA
		{
			get
			{
				return this._IsConfirmQA;
			}
			set
			{
				if ((this._IsConfirmQA != value))
				{
					this.OnIsConfirmQAChanging(value);
					this.SendPropertyChanging();
					this._IsConfirmQA = value;
					this.SendPropertyChanged("IsConfirmQA");
					this.OnIsConfirmQAChanged();
				}
			}
		}
		
		[Column(Storage="_ConfirmerQA", DbType="NVarChar(100)")]
		public string ConfirmerQA
		{
			get
			{
				return this._ConfirmerQA;
			}
			set
			{
				if ((this._ConfirmerQA != value))
				{
					this.OnConfirmerQAChanging(value);
					this.SendPropertyChanging();
					this._ConfirmerQA = value;
					this.SendPropertyChanged("ConfirmerQA");
					this.OnConfirmerQAChanged();
				}
			}
		}
		
		[Column(Storage="_ConfirmDateQA", DbType="DateTime")]
		public System.Nullable<System.DateTime> ConfirmDateQA
		{
			get
			{
				return this._ConfirmDateQA;
			}
			set
			{
				if ((this._ConfirmDateQA != value))
				{
					this.OnConfirmDateQAChanging(value);
					this.SendPropertyChanging();
					this._ConfirmDateQA = value;
					this.SendPropertyChanged("ConfirmDateQA");
					this.OnConfirmDateQAChanged();
				}
			}
		}
		
		[Column(Storage="_ImportantNote", DbType="NVarChar(MAX)")]
		public string ImportantNote
		{
			get
			{
				return this._ImportantNote;
			}
			set
			{
				if ((this._ImportantNote != value))
				{
					this.OnImportantNoteChanging(value);
					this.SendPropertyChanging();
					this._ImportantNote = value;
					this.SendPropertyChanged("ImportantNote");
					this.OnImportantNoteChanged();
				}
			}
		}
		
		[Column(Storage="_ChosenFactoryDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ChosenFactoryDate
		{
			get
			{
				return this._ChosenFactoryDate;
			}
			set
			{
				if ((this._ChosenFactoryDate != value))
				{
					this.OnChosenFactoryDateChanging(value);
					this.SendPropertyChanging();
					this._ChosenFactoryDate = value;
					this.SendPropertyChanged("ChosenFactoryDate");
					this.OnChosenFactoryDateChanged();
				}
			}
		}
		
		[Column(Storage="_StyleType", DbType="VarChar(50)")]
		public string StyleType
		{
			get
			{
				return this._StyleType;
			}
			set
			{
				if ((this._StyleType != value))
				{
					this.OnStyleTypeChanging(value);
					this.SendPropertyChanging();
					this._StyleType = value;
					this.SendPropertyChanged("StyleType");
					this.OnStyleTypeChanged();
				}
			}
		}
		
		[Association(Name="QC_ExamPlanHeader_QC_ExamPlanDetail", Storage="_QC_ExamPlanDetails", ThisKey="OID", OtherKey="HeaderOID")]
		public EntitySet<QC_ExamPlanDetail> QC_ExamPlanDetails
		{
			get
			{
				return this._QC_ExamPlanDetails;
			}
			set
			{
				this._QC_ExamPlanDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_QC_ExamPlanDetails(QC_ExamPlanDetail entity)
		{
			this.SendPropertyChanging();
			entity.QC_ExamPlanHeader = this;
		}
		
		private void detach_QC_ExamPlanDetails(QC_ExamPlanDetail entity)
		{
			this.SendPropertyChanging();
			entity.QC_ExamPlanHeader = null;
		}
	}
	
	[Table(Name="dbo.AQLAuditor")]
	public partial class AQLAuditor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _OID;
		
		private string _Fty;
		
		private string _Ws;
		
		private string _Line;
		
		private string _Auditor;
		
		private string _Cust;
		
		private string _AuditorByCust;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOIDChanging(long value);
    partial void OnOIDChanged();
    partial void OnFtyChanging(string value);
    partial void OnFtyChanged();
    partial void OnWsChanging(string value);
    partial void OnWsChanged();
    partial void OnLineChanging(string value);
    partial void OnLineChanged();
    partial void OnAuditorChanging(string value);
    partial void OnAuditorChanged();
    partial void OnCustChanging(string value);
    partial void OnCustChanged();
    partial void OnAuditorByCustChanging(string value);
    partial void OnAuditorByCustChanged();
    #endregion
		
		public AQLAuditor()
		{
			OnCreated();
		}
		
		[Column(Storage="_OID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long OID
		{
			get
			{
				return this._OID;
			}
			set
			{
				if ((this._OID != value))
				{
					this.OnOIDChanging(value);
					this.SendPropertyChanging();
					this._OID = value;
					this.SendPropertyChanged("OID");
					this.OnOIDChanged();
				}
			}
		}
		
		[Column(Storage="_Fty", DbType="VarChar(20)")]
		public string Fty
		{
			get
			{
				return this._Fty;
			}
			set
			{
				if ((this._Fty != value))
				{
					this.OnFtyChanging(value);
					this.SendPropertyChanging();
					this._Fty = value;
					this.SendPropertyChanged("Fty");
					this.OnFtyChanged();
				}
			}
		}
		
		[Column(Storage="_Ws", DbType="VarChar(20)")]
		public string Ws
		{
			get
			{
				return this._Ws;
			}
			set
			{
				if ((this._Ws != value))
				{
					this.OnWsChanging(value);
					this.SendPropertyChanging();
					this._Ws = value;
					this.SendPropertyChanged("Ws");
					this.OnWsChanged();
				}
			}
		}
		
		[Column(Storage="_Line", DbType="VarChar(20)")]
		public string Line
		{
			get
			{
				return this._Line;
			}
			set
			{
				if ((this._Line != value))
				{
					this.OnLineChanging(value);
					this.SendPropertyChanging();
					this._Line = value;
					this.SendPropertyChanged("Line");
					this.OnLineChanged();
				}
			}
		}
		
		[Column(Storage="_Auditor", DbType="VarChar(50)")]
		public string Auditor
		{
			get
			{
				return this._Auditor;
			}
			set
			{
				if ((this._Auditor != value))
				{
					this.OnAuditorChanging(value);
					this.SendPropertyChanging();
					this._Auditor = value;
					this.SendPropertyChanged("Auditor");
					this.OnAuditorChanged();
				}
			}
		}
		
		[Column(Storage="_Cust", DbType="VarChar(50)")]
		public string Cust
		{
			get
			{
				return this._Cust;
			}
			set
			{
				if ((this._Cust != value))
				{
					this.OnCustChanging(value);
					this.SendPropertyChanging();
					this._Cust = value;
					this.SendPropertyChanged("Cust");
					this.OnCustChanged();
				}
			}
		}
		
		[Column(Storage="_AuditorByCust", DbType="VarChar(50)")]
		public string AuditorByCust
		{
			get
			{
				return this._AuditorByCust;
			}
			set
			{
				if ((this._AuditorByCust != value))
				{
					this.OnAuditorByCustChanging(value);
					this.SendPropertyChanging();
					this._AuditorByCust = value;
					this.SendPropertyChanged("AuditorByCust");
					this.OnAuditorByCustChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.FinalAuditPlanList")]
	public partial class FinalAuditPlanList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _OID;
		
		private string _Factory;
		
		private string _Workshop;
		
		private string _Line;
		
		private string _ProjectNo;
		
		private string _CustStyle;
		
		private string _Color;
		
		private string _WO;
		
		private string _WOc;
		
		private string _RWO;
		
		private string _QNNo;
		
		private System.Nullable<int> _QNQty;
		
		private System.Nullable<int> _QNSeq;
		
		private System.Nullable<System.DateTime> _QNDate;
		
		private System.Nullable<int> _ProductQty;
		
		private string _Size;
		
		private System.Nullable<int> _BoxQty;
		
		private string _Auditor;
		
		private System.Nullable<bool> _IsCompleted;
		
		private System.Nullable<System.DateTime> _ImportDate;
		
		private string _PHStyle;
		
		private string _BKU;
		
		private System.Nullable<bool> _IsCompletedFlag;
		
		private string _Operator;
		
		private System.Nullable<System.DateTime> _OperationDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOIDChanging(long value);
    partial void OnOIDChanged();
    partial void OnFactoryChanging(string value);
    partial void OnFactoryChanged();
    partial void OnWorkshopChanging(string value);
    partial void OnWorkshopChanged();
    partial void OnLineChanging(string value);
    partial void OnLineChanged();
    partial void OnProjectNoChanging(string value);
    partial void OnProjectNoChanged();
    partial void OnCustStyleChanging(string value);
    partial void OnCustStyleChanged();
    partial void OnColorChanging(string value);
    partial void OnColorChanged();
    partial void OnWOChanging(string value);
    partial void OnWOChanged();
    partial void OnWOcChanging(string value);
    partial void OnWOcChanged();
    partial void OnRWOChanging(string value);
    partial void OnRWOChanged();
    partial void OnQNNoChanging(string value);
    partial void OnQNNoChanged();
    partial void OnQNQtyChanging(System.Nullable<int> value);
    partial void OnQNQtyChanged();
    partial void OnQNSeqChanging(System.Nullable<int> value);
    partial void OnQNSeqChanged();
    partial void OnQNDateChanging(System.Nullable<System.DateTime> value);
    partial void OnQNDateChanged();
    partial void OnProductQtyChanging(System.Nullable<int> value);
    partial void OnProductQtyChanged();
    partial void OnSizeChanging(string value);
    partial void OnSizeChanged();
    partial void OnBoxQtyChanging(System.Nullable<int> value);
    partial void OnBoxQtyChanged();
    partial void OnAuditorChanging(string value);
    partial void OnAuditorChanged();
    partial void OnIsCompletedChanging(System.Nullable<bool> value);
    partial void OnIsCompletedChanged();
    partial void OnImportDateChanging(System.Nullable<System.DateTime> value);
    partial void OnImportDateChanged();
    partial void OnPHStyleChanging(string value);
    partial void OnPHStyleChanged();
    partial void OnBKUChanging(string value);
    partial void OnBKUChanged();
    partial void OnIsCompletedFlagChanging(System.Nullable<bool> value);
    partial void OnIsCompletedFlagChanged();
    partial void OnOperatorChanging(string value);
    partial void OnOperatorChanged();
    partial void OnOperationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnOperationDateChanged();
    #endregion
		
		public FinalAuditPlanList()
		{
			OnCreated();
		}
		
		[Column(Storage="_OID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long OID
		{
			get
			{
				return this._OID;
			}
			set
			{
				if ((this._OID != value))
				{
					this.OnOIDChanging(value);
					this.SendPropertyChanging();
					this._OID = value;
					this.SendPropertyChanged("OID");
					this.OnOIDChanged();
				}
			}
		}
		
		[Column(Storage="_Factory", DbType="VarChar(8)")]
		public string Factory
		{
			get
			{
				return this._Factory;
			}
			set
			{
				if ((this._Factory != value))
				{
					this.OnFactoryChanging(value);
					this.SendPropertyChanging();
					this._Factory = value;
					this.SendPropertyChanged("Factory");
					this.OnFactoryChanged();
				}
			}
		}
		
		[Column(Storage="_Workshop", DbType="VarChar(10)")]
		public string Workshop
		{
			get
			{
				return this._Workshop;
			}
			set
			{
				if ((this._Workshop != value))
				{
					this.OnWorkshopChanging(value);
					this.SendPropertyChanging();
					this._Workshop = value;
					this.SendPropertyChanged("Workshop");
					this.OnWorkshopChanged();
				}
			}
		}
		
		[Column(Storage="_Line", DbType="VarChar(8)")]
		public string Line
		{
			get
			{
				return this._Line;
			}
			set
			{
				if ((this._Line != value))
				{
					this.OnLineChanging(value);
					this.SendPropertyChanging();
					this._Line = value;
					this.SendPropertyChanged("Line");
					this.OnLineChanged();
				}
			}
		}
		
		[Column(Storage="_ProjectNo", DbType="VarChar(20)")]
		public string ProjectNo
		{
			get
			{
				return this._ProjectNo;
			}
			set
			{
				if ((this._ProjectNo != value))
				{
					this.OnProjectNoChanging(value);
					this.SendPropertyChanging();
					this._ProjectNo = value;
					this.SendPropertyChanged("ProjectNo");
					this.OnProjectNoChanged();
				}
			}
		}
		
		[Column(Storage="_CustStyle", DbType="VarChar(20)")]
		public string CustStyle
		{
			get
			{
				return this._CustStyle;
			}
			set
			{
				if ((this._CustStyle != value))
				{
					this.OnCustStyleChanging(value);
					this.SendPropertyChanging();
					this._CustStyle = value;
					this.SendPropertyChanged("CustStyle");
					this.OnCustStyleChanged();
				}
			}
		}
		
		[Column(Storage="_Color", DbType="VarChar(20)")]
		public string Color
		{
			get
			{
				return this._Color;
			}
			set
			{
				if ((this._Color != value))
				{
					this.OnColorChanging(value);
					this.SendPropertyChanging();
					this._Color = value;
					this.SendPropertyChanged("Color");
					this.OnColorChanged();
				}
			}
		}
		
		[Column(Storage="_WO", DbType="VarChar(20)")]
		public string WO
		{
			get
			{
				return this._WO;
			}
			set
			{
				if ((this._WO != value))
				{
					this.OnWOChanging(value);
					this.SendPropertyChanging();
					this._WO = value;
					this.SendPropertyChanged("WO");
					this.OnWOChanged();
				}
			}
		}
		
		[Column(Storage="_WOc", DbType="VarChar(20)")]
		public string WOc
		{
			get
			{
				return this._WOc;
			}
			set
			{
				if ((this._WOc != value))
				{
					this.OnWOcChanging(value);
					this.SendPropertyChanging();
					this._WOc = value;
					this.SendPropertyChanged("WOc");
					this.OnWOcChanged();
				}
			}
		}
		
		[Column(Storage="_RWO", DbType="VarChar(20)")]
		public string RWO
		{
			get
			{
				return this._RWO;
			}
			set
			{
				if ((this._RWO != value))
				{
					this.OnRWOChanging(value);
					this.SendPropertyChanging();
					this._RWO = value;
					this.SendPropertyChanged("RWO");
					this.OnRWOChanged();
				}
			}
		}
		
		[Column(Storage="_QNNo", DbType="VarChar(10)")]
		public string QNNo
		{
			get
			{
				return this._QNNo;
			}
			set
			{
				if ((this._QNNo != value))
				{
					this.OnQNNoChanging(value);
					this.SendPropertyChanging();
					this._QNNo = value;
					this.SendPropertyChanged("QNNo");
					this.OnQNNoChanged();
				}
			}
		}
		
		[Column(Storage="_QNQty", DbType="Int")]
		public System.Nullable<int> QNQty
		{
			get
			{
				return this._QNQty;
			}
			set
			{
				if ((this._QNQty != value))
				{
					this.OnQNQtyChanging(value);
					this.SendPropertyChanging();
					this._QNQty = value;
					this.SendPropertyChanged("QNQty");
					this.OnQNQtyChanged();
				}
			}
		}
		
		[Column(Storage="_QNSeq", DbType="Int")]
		public System.Nullable<int> QNSeq
		{
			get
			{
				return this._QNSeq;
			}
			set
			{
				if ((this._QNSeq != value))
				{
					this.OnQNSeqChanging(value);
					this.SendPropertyChanging();
					this._QNSeq = value;
					this.SendPropertyChanged("QNSeq");
					this.OnQNSeqChanged();
				}
			}
		}
		
		[Column(Storage="_QNDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> QNDate
		{
			get
			{
				return this._QNDate;
			}
			set
			{
				if ((this._QNDate != value))
				{
					this.OnQNDateChanging(value);
					this.SendPropertyChanging();
					this._QNDate = value;
					this.SendPropertyChanged("QNDate");
					this.OnQNDateChanged();
				}
			}
		}
		
		[Column(Storage="_ProductQty", DbType="Int")]
		public System.Nullable<int> ProductQty
		{
			get
			{
				return this._ProductQty;
			}
			set
			{
				if ((this._ProductQty != value))
				{
					this.OnProductQtyChanging(value);
					this.SendPropertyChanging();
					this._ProductQty = value;
					this.SendPropertyChanged("ProductQty");
					this.OnProductQtyChanged();
				}
			}
		}
		
		[Column(Storage="_Size", DbType="VarChar(200)")]
		public string Size
		{
			get
			{
				return this._Size;
			}
			set
			{
				if ((this._Size != value))
				{
					this.OnSizeChanging(value);
					this.SendPropertyChanging();
					this._Size = value;
					this.SendPropertyChanged("Size");
					this.OnSizeChanged();
				}
			}
		}
		
		[Column(Storage="_BoxQty", DbType="Int")]
		public System.Nullable<int> BoxQty
		{
			get
			{
				return this._BoxQty;
			}
			set
			{
				if ((this._BoxQty != value))
				{
					this.OnBoxQtyChanging(value);
					this.SendPropertyChanging();
					this._BoxQty = value;
					this.SendPropertyChanged("BoxQty");
					this.OnBoxQtyChanged();
				}
			}
		}
		
		[Column(Storage="_Auditor", DbType="VarChar(20)")]
		public string Auditor
		{
			get
			{
				return this._Auditor;
			}
			set
			{
				if ((this._Auditor != value))
				{
					this.OnAuditorChanging(value);
					this.SendPropertyChanging();
					this._Auditor = value;
					this.SendPropertyChanged("Auditor");
					this.OnAuditorChanged();
				}
			}
		}
		
		[Column(Storage="_IsCompleted", DbType="Bit")]
		public System.Nullable<bool> IsCompleted
		{
			get
			{
				return this._IsCompleted;
			}
			set
			{
				if ((this._IsCompleted != value))
				{
					this.OnIsCompletedChanging(value);
					this.SendPropertyChanging();
					this._IsCompleted = value;
					this.SendPropertyChanged("IsCompleted");
					this.OnIsCompletedChanged();
				}
			}
		}
		
		[Column(Storage="_ImportDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ImportDate
		{
			get
			{
				return this._ImportDate;
			}
			set
			{
				if ((this._ImportDate != value))
				{
					this.OnImportDateChanging(value);
					this.SendPropertyChanging();
					this._ImportDate = value;
					this.SendPropertyChanged("ImportDate");
					this.OnImportDateChanged();
				}
			}
		}
		
		[Column(Storage="_PHStyle", DbType="VarChar(30)")]
		public string PHStyle
		{
			get
			{
				return this._PHStyle;
			}
			set
			{
				if ((this._PHStyle != value))
				{
					this.OnPHStyleChanging(value);
					this.SendPropertyChanging();
					this._PHStyle = value;
					this.SendPropertyChanged("PHStyle");
					this.OnPHStyleChanged();
				}
			}
		}
		
		[Column(Storage="_BKU", DbType="VarChar(20)")]
		public string BKU
		{
			get
			{
				return this._BKU;
			}
			set
			{
				if ((this._BKU != value))
				{
					this.OnBKUChanging(value);
					this.SendPropertyChanging();
					this._BKU = value;
					this.SendPropertyChanged("BKU");
					this.OnBKUChanged();
				}
			}
		}
		
		[Column(Storage="_IsCompletedFlag", DbType="Bit")]
		public System.Nullable<bool> IsCompletedFlag
		{
			get
			{
				return this._IsCompletedFlag;
			}
			set
			{
				if ((this._IsCompletedFlag != value))
				{
					this.OnIsCompletedFlagChanging(value);
					this.SendPropertyChanging();
					this._IsCompletedFlag = value;
					this.SendPropertyChanged("IsCompletedFlag");
					this.OnIsCompletedFlagChanged();
				}
			}
		}
		
		[Column(Storage="_Operator", DbType="VarChar(30)")]
		public string Operator
		{
			get
			{
				return this._Operator;
			}
			set
			{
				if ((this._Operator != value))
				{
					this.OnOperatorChanging(value);
					this.SendPropertyChanging();
					this._Operator = value;
					this.SendPropertyChanged("Operator");
					this.OnOperatorChanged();
				}
			}
		}
		
		[Column(Storage="_OperationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> OperationDate
		{
			get
			{
				return this._OperationDate;
			}
			set
			{
				if ((this._OperationDate != value))
				{
					this.OnOperationDateChanging(value);
					this.SendPropertyChanging();
					this._OperationDate = value;
					this.SendPropertyChanged("OperationDate");
					this.OnOperationDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.QC_ReportInfo")]
	public partial class QC_ReportInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ReportID;
		
		private string _ReportCode;
		
		private string _ReportCodeDaily;
		
		private string _ReportCodeWeekly;
		
		private string _ReportName_CN;
		
		private string _ReportName_EN;
		
		private string _ReportName_BD;
		
		private string _VerName;
		
		private string _VerContext;
		
		private string _PublishedName;
		
		private string _PublishedContext;
		
		private string _Remark;
		
		private string _VerNo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReportIDChanging(string value);
    partial void OnReportIDChanged();
    partial void OnReportCodeChanging(string value);
    partial void OnReportCodeChanged();
    partial void OnReportCodeDailyChanging(string value);
    partial void OnReportCodeDailyChanged();
    partial void OnReportCodeWeeklyChanging(string value);
    partial void OnReportCodeWeeklyChanged();
    partial void OnReportName_CNChanging(string value);
    partial void OnReportName_CNChanged();
    partial void OnReportName_ENChanging(string value);
    partial void OnReportName_ENChanged();
    partial void OnReportName_BDChanging(string value);
    partial void OnReportName_BDChanged();
    partial void OnVerNameChanging(string value);
    partial void OnVerNameChanged();
    partial void OnVerContextChanging(string value);
    partial void OnVerContextChanged();
    partial void OnPublishedNameChanging(string value);
    partial void OnPublishedNameChanged();
    partial void OnPublishedContextChanging(string value);
    partial void OnPublishedContextChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnVerNoChanging(string value);
    partial void OnVerNoChanged();
    #endregion
		
		public QC_ReportInfo()
		{
			OnCreated();
		}
		
		[Column(Storage="_ReportID", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ReportID
		{
			get
			{
				return this._ReportID;
			}
			set
			{
				if ((this._ReportID != value))
				{
					this.OnReportIDChanging(value);
					this.SendPropertyChanging();
					this._ReportID = value;
					this.SendPropertyChanged("ReportID");
					this.OnReportIDChanged();
				}
			}
		}
		
		[Column(Storage="_ReportCode", DbType="NVarChar(100)")]
		public string ReportCode
		{
			get
			{
				return this._ReportCode;
			}
			set
			{
				if ((this._ReportCode != value))
				{
					this.OnReportCodeChanging(value);
					this.SendPropertyChanging();
					this._ReportCode = value;
					this.SendPropertyChanged("ReportCode");
					this.OnReportCodeChanged();
				}
			}
		}
		
		[Column(Storage="_ReportCodeDaily", DbType="NVarChar(100)")]
		public string ReportCodeDaily
		{
			get
			{
				return this._ReportCodeDaily;
			}
			set
			{
				if ((this._ReportCodeDaily != value))
				{
					this.OnReportCodeDailyChanging(value);
					this.SendPropertyChanging();
					this._ReportCodeDaily = value;
					this.SendPropertyChanged("ReportCodeDaily");
					this.OnReportCodeDailyChanged();
				}
			}
		}
		
		[Column(Storage="_ReportCodeWeekly", DbType="NVarChar(100)")]
		public string ReportCodeWeekly
		{
			get
			{
				return this._ReportCodeWeekly;
			}
			set
			{
				if ((this._ReportCodeWeekly != value))
				{
					this.OnReportCodeWeeklyChanging(value);
					this.SendPropertyChanging();
					this._ReportCodeWeekly = value;
					this.SendPropertyChanged("ReportCodeWeekly");
					this.OnReportCodeWeeklyChanged();
				}
			}
		}
		
		[Column(Storage="_ReportName_CN", DbType="NVarChar(1000)")]
		public string ReportName_CN
		{
			get
			{
				return this._ReportName_CN;
			}
			set
			{
				if ((this._ReportName_CN != value))
				{
					this.OnReportName_CNChanging(value);
					this.SendPropertyChanging();
					this._ReportName_CN = value;
					this.SendPropertyChanged("ReportName_CN");
					this.OnReportName_CNChanged();
				}
			}
		}
		
		[Column(Storage="_ReportName_EN", DbType="NVarChar(1000)")]
		public string ReportName_EN
		{
			get
			{
				return this._ReportName_EN;
			}
			set
			{
				if ((this._ReportName_EN != value))
				{
					this.OnReportName_ENChanging(value);
					this.SendPropertyChanging();
					this._ReportName_EN = value;
					this.SendPropertyChanged("ReportName_EN");
					this.OnReportName_ENChanged();
				}
			}
		}
		
		[Column(Storage="_ReportName_BD", DbType="NVarChar(1000)")]
		public string ReportName_BD
		{
			get
			{
				return this._ReportName_BD;
			}
			set
			{
				if ((this._ReportName_BD != value))
				{
					this.OnReportName_BDChanging(value);
					this.SendPropertyChanging();
					this._ReportName_BD = value;
					this.SendPropertyChanged("ReportName_BD");
					this.OnReportName_BDChanged();
				}
			}
		}
		
		[Column(Storage="_VerName", DbType="NVarChar(50)")]
		public string VerName
		{
			get
			{
				return this._VerName;
			}
			set
			{
				if ((this._VerName != value))
				{
					this.OnVerNameChanging(value);
					this.SendPropertyChanging();
					this._VerName = value;
					this.SendPropertyChanged("VerName");
					this.OnVerNameChanged();
				}
			}
		}
		
		[Column(Storage="_VerContext", DbType="NVarChar(50)")]
		public string VerContext
		{
			get
			{
				return this._VerContext;
			}
			set
			{
				if ((this._VerContext != value))
				{
					this.OnVerContextChanging(value);
					this.SendPropertyChanging();
					this._VerContext = value;
					this.SendPropertyChanged("VerContext");
					this.OnVerContextChanged();
				}
			}
		}
		
		[Column(Storage="_PublishedName", DbType="NVarChar(50)")]
		public string PublishedName
		{
			get
			{
				return this._PublishedName;
			}
			set
			{
				if ((this._PublishedName != value))
				{
					this.OnPublishedNameChanging(value);
					this.SendPropertyChanging();
					this._PublishedName = value;
					this.SendPropertyChanged("PublishedName");
					this.OnPublishedNameChanged();
				}
			}
		}
		
		[Column(Storage="_PublishedContext", DbType="NVarChar(50)")]
		public string PublishedContext
		{
			get
			{
				return this._PublishedContext;
			}
			set
			{
				if ((this._PublishedContext != value))
				{
					this.OnPublishedContextChanging(value);
					this.SendPropertyChanging();
					this._PublishedContext = value;
					this.SendPropertyChanged("PublishedContext");
					this.OnPublishedContextChanged();
				}
			}
		}
		
		[Column(Storage="_Remark", DbType="NVarChar(1000)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[Column(Storage="_VerNo", DbType="NVarChar(50)")]
		public string VerNo
		{
			get
			{
				return this._VerNo;
			}
			set
			{
				if ((this._VerNo != value))
				{
					this.OnVerNoChanging(value);
					this.SendPropertyChanging();
					this._VerNo = value;
					this.SendPropertyChanged("VerNo");
					this.OnVerNoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.AuditExamSetup")]
	public partial class AuditExamSetup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _OID;
		
		private string _Factory;
		
		private string _AuditorID;
		
		private System.Nullable<System.DateTime> _FromDate;
		
		private System.Nullable<System.DateTime> _ToDate;
		
		private System.Nullable<int> _AuditCount;
		
		private string _Remark;
		
		private System.Nullable<bool> _IsMultiSkillAuditor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOIDChanging(long value);
    partial void OnOIDChanged();
    partial void OnFactoryChanging(string value);
    partial void OnFactoryChanged();
    partial void OnAuditorIDChanging(string value);
    partial void OnAuditorIDChanged();
    partial void OnFromDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFromDateChanged();
    partial void OnToDateChanging(System.Nullable<System.DateTime> value);
    partial void OnToDateChanged();
    partial void OnAuditCountChanging(System.Nullable<int> value);
    partial void OnAuditCountChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnIsMultiSkillAuditorChanging(System.Nullable<bool> value);
    partial void OnIsMultiSkillAuditorChanged();
    #endregion
		
		public AuditExamSetup()
		{
			OnCreated();
		}
		
		[Column(Storage="_OID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long OID
		{
			get
			{
				return this._OID;
			}
			set
			{
				if ((this._OID != value))
				{
					this.OnOIDChanging(value);
					this.SendPropertyChanging();
					this._OID = value;
					this.SendPropertyChanged("OID");
					this.OnOIDChanged();
				}
			}
		}
		
		[Column(Storage="_Factory", DbType="VarChar(50)")]
		public string Factory
		{
			get
			{
				return this._Factory;
			}
			set
			{
				if ((this._Factory != value))
				{
					this.OnFactoryChanging(value);
					this.SendPropertyChanging();
					this._Factory = value;
					this.SendPropertyChanged("Factory");
					this.OnFactoryChanged();
				}
			}
		}
		
		[Column(Storage="_AuditorID", DbType="VarChar(50)")]
		public string AuditorID
		{
			get
			{
				return this._AuditorID;
			}
			set
			{
				if ((this._AuditorID != value))
				{
					this.OnAuditorIDChanging(value);
					this.SendPropertyChanging();
					this._AuditorID = value;
					this.SendPropertyChanged("AuditorID");
					this.OnAuditorIDChanged();
				}
			}
		}
		
		[Column(Storage="_FromDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> FromDate
		{
			get
			{
				return this._FromDate;
			}
			set
			{
				if ((this._FromDate != value))
				{
					this.OnFromDateChanging(value);
					this.SendPropertyChanging();
					this._FromDate = value;
					this.SendPropertyChanged("FromDate");
					this.OnFromDateChanged();
				}
			}
		}
		
		[Column(Storage="_ToDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ToDate
		{
			get
			{
				return this._ToDate;
			}
			set
			{
				if ((this._ToDate != value))
				{
					this.OnToDateChanging(value);
					this.SendPropertyChanging();
					this._ToDate = value;
					this.SendPropertyChanged("ToDate");
					this.OnToDateChanged();
				}
			}
		}
		
		[Column(Storage="_AuditCount", DbType="Int")]
		public System.Nullable<int> AuditCount
		{
			get
			{
				return this._AuditCount;
			}
			set
			{
				if ((this._AuditCount != value))
				{
					this.OnAuditCountChanging(value);
					this.SendPropertyChanging();
					this._AuditCount = value;
					this.SendPropertyChanged("AuditCount");
					this.OnAuditCountChanged();
				}
			}
		}
		
		[Column(Storage="_Remark", DbType="NVarChar(1000)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[Column(Storage="_IsMultiSkillAuditor", DbType="Bit")]
		public System.Nullable<bool> IsMultiSkillAuditor
		{
			get
			{
				return this._IsMultiSkillAuditor;
			}
			set
			{
				if ((this._IsMultiSkillAuditor != value))
				{
					this.OnIsMultiSkillAuditorChanging(value);
					this.SendPropertyChanging();
					this._IsMultiSkillAuditor = value;
					this.SendPropertyChanged("IsMultiSkillAuditor");
					this.OnIsMultiSkillAuditorChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class sp_GetQcCheckReportResult
	{
		
		private string _worker;
		
		private string _workname;
		
		private string _gxdh;
		
		private string _gxm;
		
		private System.Nullable<System.DateTime> _qc_time;
		
		private string _size;
		
		private System.Nullable<int> _qccount;
		
		private System.Nullable<int> _lightcount;
		
		private char _qc_light;
		
		private string _defect_spec;
		
		private string _cause;
		
		private string _correction;
		
		public sp_GetQcCheckReportResult()
		{
		}
		
		[Column(Storage="_worker", DbType="VarChar(12)")]
		public string worker
		{
			get
			{
				return this._worker;
			}
			set
			{
				if ((this._worker != value))
				{
					this._worker = value;
				}
			}
		}
		
		[Column(Storage="_workname", DbType="VarChar(4) NOT NULL", CanBeNull=false)]
		public string workname
		{
			get
			{
				return this._workname;
			}
			set
			{
				if ((this._workname != value))
				{
					this._workname = value;
				}
			}
		}
		
		[Column(Storage="_gxdh", DbType="VarChar(6)")]
		public string gxdh
		{
			get
			{
				return this._gxdh;
			}
			set
			{
				if ((this._gxdh != value))
				{
					this._gxdh = value;
				}
			}
		}
		
		[Column(Storage="_gxm", DbType="VarChar(40)")]
		public string gxm
		{
			get
			{
				return this._gxm;
			}
			set
			{
				if ((this._gxm != value))
				{
					this._gxm = value;
				}
			}
		}
		
		[Column(Storage="_qc_time", DbType="DateTime")]
		public System.Nullable<System.DateTime> qc_time
		{
			get
			{
				return this._qc_time;
			}
			set
			{
				if ((this._qc_time != value))
				{
					this._qc_time = value;
				}
			}
		}
		
		[Column(Storage="_size", DbType="VarChar(20)")]
		public string size
		{
			get
			{
				return this._size;
			}
			set
			{
				if ((this._size != value))
				{
					this._size = value;
				}
			}
		}
		
		[Column(Storage="_qccount", DbType="Int")]
		public System.Nullable<int> qccount
		{
			get
			{
				return this._qccount;
			}
			set
			{
				if ((this._qccount != value))
				{
					this._qccount = value;
				}
			}
		}
		
		[Column(Storage="_lightcount", DbType="Int")]
		public System.Nullable<int> lightcount
		{
			get
			{
				return this._lightcount;
			}
			set
			{
				if ((this._lightcount != value))
				{
					this._lightcount = value;
				}
			}
		}
		
		[Column(Storage="_qc_light", DbType="VarChar(1) NOT NULL")]
		public char qc_light
		{
			get
			{
				return this._qc_light;
			}
			set
			{
				if ((this._qc_light != value))
				{
					this._qc_light = value;
				}
			}
		}
		
		[Column(Storage="_defect_spec", DbType="VarChar(200)")]
		public string defect_spec
		{
			get
			{
				return this._defect_spec;
			}
			set
			{
				if ((this._defect_spec != value))
				{
					this._defect_spec = value;
				}
			}
		}
		
		[Column(Storage="_cause", DbType="VarChar(10)")]
		public string cause
		{
			get
			{
				return this._cause;
			}
			set
			{
				if ((this._cause != value))
				{
					this._cause = value;
				}
			}
		}
		
		[Column(Storage="_correction", DbType="VarChar(10)")]
		public string correction
		{
			get
			{
				return this._correction;
			}
			set
			{
				if ((this._correction != value))
				{
					this._correction = value;
				}
			}
		}
	}
	
	public partial class sp_GetSizeAuditReportResult
	{
		
		private string _Code;
		
		private string _AuditType;
		
		private string _Artno;
		
		private string _QC_Time;
		
		private string _Style;
		
		private string _Position;
		
		private string _Tolerence;
		
		private string _SizeCode;
		
		private string _Standard;
		
		private string _AuditValue;
		
		private string _ProductSeq;
		
		public sp_GetSizeAuditReportResult()
		{
		}
		
		[Column(Storage="_Code", DbType="VarChar(6)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[Column(Storage="_AuditType", DbType="NVarChar(20)")]
		public string AuditType
		{
			get
			{
				return this._AuditType;
			}
			set
			{
				if ((this._AuditType != value))
				{
					this._AuditType = value;
				}
			}
		}
		
		[Column(Storage="_Artno", DbType="NVarChar(50)")]
		public string Artno
		{
			get
			{
				return this._Artno;
			}
			set
			{
				if ((this._Artno != value))
				{
					this._Artno = value;
				}
			}
		}
		
		[Column(Storage="_QC_Time", DbType="VarChar(10)")]
		public string QC_Time
		{
			get
			{
				return this._QC_Time;
			}
			set
			{
				if ((this._QC_Time != value))
				{
					this._QC_Time = value;
				}
			}
		}
		
		[Column(Storage="_Style", DbType="VarChar(20)")]
		public string Style
		{
			get
			{
				return this._Style;
			}
			set
			{
				if ((this._Style != value))
				{
					this._Style = value;
				}
			}
		}
		
		[Column(Storage="_Position", DbType="NVarChar(1000)")]
		public string Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this._Position = value;
				}
			}
		}
		
		[Column(Storage="_Tolerence", DbType="NVarChar(50)")]
		public string Tolerence
		{
			get
			{
				return this._Tolerence;
			}
			set
			{
				if ((this._Tolerence != value))
				{
					this._Tolerence = value;
				}
			}
		}
		
		[Column(Storage="_SizeCode", DbType="NVarChar(10)")]
		public string SizeCode
		{
			get
			{
				return this._SizeCode;
			}
			set
			{
				if ((this._SizeCode != value))
				{
					this._SizeCode = value;
				}
			}
		}
		
		[Column(Storage="_Standard", DbType="NVarChar(10)")]
		public string Standard
		{
			get
			{
				return this._Standard;
			}
			set
			{
				if ((this._Standard != value))
				{
					this._Standard = value;
				}
			}
		}
		
		[Column(Storage="_AuditValue", DbType="NVarChar(10)")]
		public string AuditValue
		{
			get
			{
				return this._AuditValue;
			}
			set
			{
				if ((this._AuditValue != value))
				{
					this._AuditValue = value;
				}
			}
		}
		
		[Column(Storage="_ProductSeq", DbType="VarChar(10)")]
		public string ProductSeq
		{
			get
			{
				return this._ProductSeq;
			}
			set
			{
				if ((this._ProductSeq != value))
				{
					this._ProductSeq = value;
				}
			}
		}
	}
	
	public partial class sp_CustQCDetailReportResult
	{
		
		private long _OID;
		
		private System.Nullable<System.DateTime> _ExamDate;
		
		private string _ResponsibleDept;
		
		private string _ProjectNO;
		
		private string _CustStyle;
		
		private string _Color;
		
		private string _Customer;
		
		private string _QCLocation;
		
		private string _MfgLocation;
		
		private string _CatLogNO;
		
		private string _ItemCN;
		
		private string _ItemEN;
		
		private string _ControlProcedure;
		
		private string _DefectCode;
		
		private string _DefectNameCN;
		
		private string _DefectNameEN;
		
		private string _DefectNameBD;
		
		private int _CriticalDefectQty;
		
		private int _MarjorDefectQty;
		
		private int _MinorDefectQty;
		
		private System.Nullable<long> _SeqNo1;
		
		private int _SeqNo2;
		
		public sp_CustQCDetailReportResult()
		{
		}
		
		[Column(Storage="_OID", DbType="BigInt NOT NULL")]
		public long OID
		{
			get
			{
				return this._OID;
			}
			set
			{
				if ((this._OID != value))
				{
					this._OID = value;
				}
			}
		}
		
		[Column(Storage="_ExamDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ExamDate
		{
			get
			{
				return this._ExamDate;
			}
			set
			{
				if ((this._ExamDate != value))
				{
					this._ExamDate = value;
				}
			}
		}
		
		[Column(Storage="_ResponsibleDept", DbType="VarChar(100)")]
		public string ResponsibleDept
		{
			get
			{
				return this._ResponsibleDept;
			}
			set
			{
				if ((this._ResponsibleDept != value))
				{
					this._ResponsibleDept = value;
				}
			}
		}
		
		[Column(Storage="_ProjectNO", DbType="VarChar(50)")]
		public string ProjectNO
		{
			get
			{
				return this._ProjectNO;
			}
			set
			{
				if ((this._ProjectNO != value))
				{
					this._ProjectNO = value;
				}
			}
		}
		
		[Column(Storage="_CustStyle", DbType="VarChar(50)")]
		public string CustStyle
		{
			get
			{
				return this._CustStyle;
			}
			set
			{
				if ((this._CustStyle != value))
				{
					this._CustStyle = value;
				}
			}
		}
		
		[Column(Storage="_Color", DbType="VarChar(20)")]
		public string Color
		{
			get
			{
				return this._Color;
			}
			set
			{
				if ((this._Color != value))
				{
					this._Color = value;
				}
			}
		}
		
		[Column(Storage="_Customer", DbType="VarChar(10)")]
		public string Customer
		{
			get
			{
				return this._Customer;
			}
			set
			{
				if ((this._Customer != value))
				{
					this._Customer = value;
				}
			}
		}
		
		[Column(Storage="_QCLocation", DbType="VarChar(20)")]
		public string QCLocation
		{
			get
			{
				return this._QCLocation;
			}
			set
			{
				if ((this._QCLocation != value))
				{
					this._QCLocation = value;
				}
			}
		}
		
		[Column(Storage="_MfgLocation", DbType="VarChar(20)")]
		public string MfgLocation
		{
			get
			{
				return this._MfgLocation;
			}
			set
			{
				if ((this._MfgLocation != value))
				{
					this._MfgLocation = value;
				}
			}
		}
		
		[Column(Storage="_CatLogNO", DbType="VarChar(20)")]
		public string CatLogNO
		{
			get
			{
				return this._CatLogNO;
			}
			set
			{
				if ((this._CatLogNO != value))
				{
					this._CatLogNO = value;
				}
			}
		}
		
		[Column(Storage="_ItemCN", DbType="NVarChar(200)")]
		public string ItemCN
		{
			get
			{
				return this._ItemCN;
			}
			set
			{
				if ((this._ItemCN != value))
				{
					this._ItemCN = value;
				}
			}
		}
		
		[Column(Storage="_ItemEN", DbType="VarChar(200)")]
		public string ItemEN
		{
			get
			{
				return this._ItemEN;
			}
			set
			{
				if ((this._ItemEN != value))
				{
					this._ItemEN = value;
				}
			}
		}
		
		[Column(Storage="_ControlProcedure", DbType="VarChar(9) NOT NULL", CanBeNull=false)]
		public string ControlProcedure
		{
			get
			{
				return this._ControlProcedure;
			}
			set
			{
				if ((this._ControlProcedure != value))
				{
					this._ControlProcedure = value;
				}
			}
		}
		
		[Column(Storage="_DefectCode", DbType="VarChar(15)")]
		public string DefectCode
		{
			get
			{
				return this._DefectCode;
			}
			set
			{
				if ((this._DefectCode != value))
				{
					this._DefectCode = value;
				}
			}
		}
		
		[Column(Storage="_DefectNameCN", DbType="NVarChar(200)")]
		public string DefectNameCN
		{
			get
			{
				return this._DefectNameCN;
			}
			set
			{
				if ((this._DefectNameCN != value))
				{
					this._DefectNameCN = value;
				}
			}
		}
		
		[Column(Storage="_DefectNameEN", DbType="VarChar(200)")]
		public string DefectNameEN
		{
			get
			{
				return this._DefectNameEN;
			}
			set
			{
				if ((this._DefectNameEN != value))
				{
					this._DefectNameEN = value;
				}
			}
		}
		
		[Column(Storage="_DefectNameBD", DbType="NVarChar(200)")]
		public string DefectNameBD
		{
			get
			{
				return this._DefectNameBD;
			}
			set
			{
				if ((this._DefectNameBD != value))
				{
					this._DefectNameBD = value;
				}
			}
		}
		
		[Column(Storage="_CriticalDefectQty", DbType="Int NOT NULL")]
		public int CriticalDefectQty
		{
			get
			{
				return this._CriticalDefectQty;
			}
			set
			{
				if ((this._CriticalDefectQty != value))
				{
					this._CriticalDefectQty = value;
				}
			}
		}
		
		[Column(Storage="_MarjorDefectQty", DbType="Int NOT NULL")]
		public int MarjorDefectQty
		{
			get
			{
				return this._MarjorDefectQty;
			}
			set
			{
				if ((this._MarjorDefectQty != value))
				{
					this._MarjorDefectQty = value;
				}
			}
		}
		
		[Column(Storage="_MinorDefectQty", DbType="Int NOT NULL")]
		public int MinorDefectQty
		{
			get
			{
				return this._MinorDefectQty;
			}
			set
			{
				if ((this._MinorDefectQty != value))
				{
					this._MinorDefectQty = value;
				}
			}
		}
		
		[Column(Storage="_SeqNo1", DbType="BigInt")]
		public System.Nullable<long> SeqNo1
		{
			get
			{
				return this._SeqNo1;
			}
			set
			{
				if ((this._SeqNo1 != value))
				{
					this._SeqNo1 = value;
				}
			}
		}
		
		[Column(Storage="_SeqNo2", DbType="Int NOT NULL")]
		public int SeqNo2
		{
			get
			{
				return this._SeqNo2;
			}
			set
			{
				if ((this._SeqNo2 != value))
				{
					this._SeqNo2 = value;
				}
			}
		}
	}
	
	public partial class sp_CustQCDetailInterimReportResult
	{
		
		private long _OID;
		
		private System.Nullable<System.DateTime> _ExamDate;
		
		private string _ResponsibleDept;
		
		private string _ProjectNO;
		
		private string _CustStyle;
		
		private string _Color;
		
		private string _Customer;
		
		private string _QCLocation;
		
		private string _MfgLocation;
		
		private string _CatLogNO;
		
		private string _ItemCN;
		
		private string _ItemEN;
		
		private string _ControlProcedure;
		
		private string _DefectCode;
		
		private string _DefectNameCN;
		
		private string _DefectNameEN;
		
		private string _DefectNameBD;
		
		private int _CriticalDefectQty;
		
		private int _MarjorDefectQty;
		
		private int _MinorDefectQty;
		
		private System.Nullable<long> _SeqNo1;
		
		private int _SeqNo2;
		
		public sp_CustQCDetailInterimReportResult()
		{
		}
		
		[Column(Storage="_OID", DbType="BigInt NOT NULL")]
		public long OID
		{
			get
			{
				return this._OID;
			}
			set
			{
				if ((this._OID != value))
				{
					this._OID = value;
				}
			}
		}
		
		[Column(Storage="_ExamDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ExamDate
		{
			get
			{
				return this._ExamDate;
			}
			set
			{
				if ((this._ExamDate != value))
				{
					this._ExamDate = value;
				}
			}
		}
		
		[Column(Storage="_ResponsibleDept", DbType="VarChar(100)")]
		public string ResponsibleDept
		{
			get
			{
				return this._ResponsibleDept;
			}
			set
			{
				if ((this._ResponsibleDept != value))
				{
					this._ResponsibleDept = value;
				}
			}
		}
		
		[Column(Storage="_ProjectNO", DbType="VarChar(50)")]
		public string ProjectNO
		{
			get
			{
				return this._ProjectNO;
			}
			set
			{
				if ((this._ProjectNO != value))
				{
					this._ProjectNO = value;
				}
			}
		}
		
		[Column(Storage="_CustStyle", DbType="VarChar(50)")]
		public string CustStyle
		{
			get
			{
				return this._CustStyle;
			}
			set
			{
				if ((this._CustStyle != value))
				{
					this._CustStyle = value;
				}
			}
		}
		
		[Column(Storage="_Color", DbType="VarChar(20)")]
		public string Color
		{
			get
			{
				return this._Color;
			}
			set
			{
				if ((this._Color != value))
				{
					this._Color = value;
				}
			}
		}
		
		[Column(Storage="_Customer", DbType="VarChar(10)")]
		public string Customer
		{
			get
			{
				return this._Customer;
			}
			set
			{
				if ((this._Customer != value))
				{
					this._Customer = value;
				}
			}
		}
		
		[Column(Storage="_QCLocation", DbType="VarChar(20)")]
		public string QCLocation
		{
			get
			{
				return this._QCLocation;
			}
			set
			{
				if ((this._QCLocation != value))
				{
					this._QCLocation = value;
				}
			}
		}
		
		[Column(Storage="_MfgLocation", DbType="VarChar(20)")]
		public string MfgLocation
		{
			get
			{
				return this._MfgLocation;
			}
			set
			{
				if ((this._MfgLocation != value))
				{
					this._MfgLocation = value;
				}
			}
		}
		
		[Column(Storage="_CatLogNO", DbType="VarChar(20)")]
		public string CatLogNO
		{
			get
			{
				return this._CatLogNO;
			}
			set
			{
				if ((this._CatLogNO != value))
				{
					this._CatLogNO = value;
				}
			}
		}
		
		[Column(Storage="_ItemCN", DbType="NVarChar(200)")]
		public string ItemCN
		{
			get
			{
				return this._ItemCN;
			}
			set
			{
				if ((this._ItemCN != value))
				{
					this._ItemCN = value;
				}
			}
		}
		
		[Column(Storage="_ItemEN", DbType="VarChar(200)")]
		public string ItemEN
		{
			get
			{
				return this._ItemEN;
			}
			set
			{
				if ((this._ItemEN != value))
				{
					this._ItemEN = value;
				}
			}
		}
		
		[Column(Storage="_ControlProcedure", DbType="VarChar(9) NOT NULL", CanBeNull=false)]
		public string ControlProcedure
		{
			get
			{
				return this._ControlProcedure;
			}
			set
			{
				if ((this._ControlProcedure != value))
				{
					this._ControlProcedure = value;
				}
			}
		}
		
		[Column(Storage="_DefectCode", DbType="VarChar(15)")]
		public string DefectCode
		{
			get
			{
				return this._DefectCode;
			}
			set
			{
				if ((this._DefectCode != value))
				{
					this._DefectCode = value;
				}
			}
		}
		
		[Column(Storage="_DefectNameCN", DbType="NVarChar(200)")]
		public string DefectNameCN
		{
			get
			{
				return this._DefectNameCN;
			}
			set
			{
				if ((this._DefectNameCN != value))
				{
					this._DefectNameCN = value;
				}
			}
		}
		
		[Column(Storage="_DefectNameEN", DbType="VarChar(200)")]
		public string DefectNameEN
		{
			get
			{
				return this._DefectNameEN;
			}
			set
			{
				if ((this._DefectNameEN != value))
				{
					this._DefectNameEN = value;
				}
			}
		}
		
		[Column(Storage="_DefectNameBD", DbType="NVarChar(200)")]
		public string DefectNameBD
		{
			get
			{
				return this._DefectNameBD;
			}
			set
			{
				if ((this._DefectNameBD != value))
				{
					this._DefectNameBD = value;
				}
			}
		}
		
		[Column(Storage="_CriticalDefectQty", DbType="Int NOT NULL")]
		public int CriticalDefectQty
		{
			get
			{
				return this._CriticalDefectQty;
			}
			set
			{
				if ((this._CriticalDefectQty != value))
				{
					this._CriticalDefectQty = value;
				}
			}
		}
		
		[Column(Storage="_MarjorDefectQty", DbType="Int NOT NULL")]
		public int MarjorDefectQty
		{
			get
			{
				return this._MarjorDefectQty;
			}
			set
			{
				if ((this._MarjorDefectQty != value))
				{
					this._MarjorDefectQty = value;
				}
			}
		}
		
		[Column(Storage="_MinorDefectQty", DbType="Int NOT NULL")]
		public int MinorDefectQty
		{
			get
			{
				return this._MinorDefectQty;
			}
			set
			{
				if ((this._MinorDefectQty != value))
				{
					this._MinorDefectQty = value;
				}
			}
		}
		
		[Column(Storage="_SeqNo1", DbType="BigInt")]
		public System.Nullable<long> SeqNo1
		{
			get
			{
				return this._SeqNo1;
			}
			set
			{
				if ((this._SeqNo1 != value))
				{
					this._SeqNo1 = value;
				}
			}
		}
		
		[Column(Storage="_SeqNo2", DbType="Int NOT NULL")]
		public int SeqNo2
		{
			get
			{
				return this._SeqNo2;
			}
			set
			{
				if ((this._SeqNo2 != value))
				{
					this._SeqNo2 = value;
				}
			}
		}
	}
	
	public partial class sp_GetDefectPictureReportResult
	{
		
		private string _ImgUrl;
		
		private string _Factory;
		
		private string _WorkShop;
		
		private string _Line;
		
		private string _Project;
		
		private string _WO;
		
		private string _Style;
		
		private string _Color;
		
		private System.Nullable<System.DateTime> _QC_Time;
		
		private string _AuditType;
		
		private string _DefectChineseName;
		
		public sp_GetDefectPictureReportResult()
		{
		}
		
		[Column(Storage="_ImgUrl", DbType="NVarChar(100)")]
		public string ImgUrl
		{
			get
			{
				return this._ImgUrl;
			}
			set
			{
				if ((this._ImgUrl != value))
				{
					this._ImgUrl = value;
				}
			}
		}
		
		[Column(Storage="_Factory", DbType="VarChar(20)")]
		public string Factory
		{
			get
			{
				return this._Factory;
			}
			set
			{
				if ((this._Factory != value))
				{
					this._Factory = value;
				}
			}
		}
		
		[Column(Storage="_WorkShop", DbType="VarChar(20)")]
		public string WorkShop
		{
			get
			{
				return this._WorkShop;
			}
			set
			{
				if ((this._WorkShop != value))
				{
					this._WorkShop = value;
				}
			}
		}
		
		[Column(Storage="_Line", DbType="VarChar(8)")]
		public string Line
		{
			get
			{
				return this._Line;
			}
			set
			{
				if ((this._Line != value))
				{
					this._Line = value;
				}
			}
		}
		
		[Column(Storage="_Project", DbType="VarChar(20)")]
		public string Project
		{
			get
			{
				return this._Project;
			}
			set
			{
				if ((this._Project != value))
				{
					this._Project = value;
				}
			}
		}
		
		[Column(Storage="_WO", DbType="VarChar(20)")]
		public string WO
		{
			get
			{
				return this._WO;
			}
			set
			{
				if ((this._WO != value))
				{
					this._WO = value;
				}
			}
		}
		
		[Column(Storage="_Style", DbType="VarChar(20)")]
		public string Style
		{
			get
			{
				return this._Style;
			}
			set
			{
				if ((this._Style != value))
				{
					this._Style = value;
				}
			}
		}
		
		[Column(Storage="_Color", DbType="VarChar(20)")]
		public string Color
		{
			get
			{
				return this._Color;
			}
			set
			{
				if ((this._Color != value))
				{
					this._Color = value;
				}
			}
		}
		
		[Column(Storage="_QC_Time", DbType="DateTime")]
		public System.Nullable<System.DateTime> QC_Time
		{
			get
			{
				return this._QC_Time;
			}
			set
			{
				if ((this._QC_Time != value))
				{
					this._QC_Time = value;
				}
			}
		}
		
		[Column(Storage="_AuditType", DbType="NVarChar(20)")]
		public string AuditType
		{
			get
			{
				return this._AuditType;
			}
			set
			{
				if ((this._AuditType != value))
				{
					this._AuditType = value;
				}
			}
		}
		
		[Column(Storage="_DefectChineseName", DbType="NVarChar(402)")]
		public string DefectChineseName
		{
			get
			{
				return this._DefectChineseName;
			}
			set
			{
				if ((this._DefectChineseName != value))
				{
					this._DefectChineseName = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
