//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace PH.FabricInspection.BO {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("_PH_FabricInspectionDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class _PH_FabricInspectionDataSet : global::System.Data.DataSet {
        
        private Fabric_Insp_HeaderDataTable tableFabric_Insp_Header;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public _PH_FabricInspectionDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected _PH_FabricInspectionDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Fabric_Insp_Header"] != null)) {
                    base.Tables.Add(new Fabric_Insp_HeaderDataTable(ds.Tables["Fabric_Insp_Header"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Fabric_Insp_HeaderDataTable Fabric_Insp_Header {
            get {
                return this.tableFabric_Insp_Header;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            _PH_FabricInspectionDataSet cln = ((_PH_FabricInspectionDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Fabric_Insp_Header"] != null)) {
                    base.Tables.Add(new Fabric_Insp_HeaderDataTable(ds.Tables["Fabric_Insp_Header"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableFabric_Insp_Header = ((Fabric_Insp_HeaderDataTable)(base.Tables["Fabric_Insp_Header"]));
            if ((initTable == true)) {
                if ((this.tableFabric_Insp_Header != null)) {
                    this.tableFabric_Insp_Header.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "_PH_FabricInspectionDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/_PH_FabricInspectionDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableFabric_Insp_Header = new Fabric_Insp_HeaderDataTable();
            base.Tables.Add(this.tableFabric_Insp_Header);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeFabric_Insp_Header() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            _PH_FabricInspectionDataSet ds = new _PH_FabricInspectionDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void Fabric_Insp_HeaderRowChangeEventHandler(object sender, Fabric_Insp_HeaderRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Fabric_Insp_HeaderDataTable : global::System.Data.TypedTableBase<Fabric_Insp_HeaderRow> {
            
            private global::System.Data.DataColumn columnCompany;
            
            private global::System.Data.DataColumn columnSystem_Install_No;
            
            private global::System.Data.DataColumn columnItem_No;
            
            private global::System.Data.DataColumn columnItem_Desc;
            
            private global::System.Data.DataColumn columnPO;
            
            private global::System.Data.DataColumn columnHdoNo;
            
            private global::System.Data.DataColumn columnProjectNo;
            
            private global::System.Data.DataColumn columnIQC_Reference;
            
            private global::System.Data.DataColumn columnLot_Id;
            
            private global::System.Data.DataColumn columnActual_Length;
            
            private global::System.Data.DataColumn columnActual_Weight;
            
            private global::System.Data.DataColumn columnSupplier_Width;
            
            private global::System.Data.DataColumn columnInsp_Length;
            
            private global::System.Data.DataColumn columnGM_SQM;
            
            private global::System.Data.DataColumn columnUsable_Width;
            
            private global::System.Data.DataColumn columnSupplier_Code;
            
            private global::System.Data.DataColumn columnSupplich_Batch;
            
            private global::System.Data.DataColumn columnRoll_No;
            
            private global::System.Data.DataColumn columnTotal_Points;
            
            private global::System.Data.DataColumn columnPoints_Hundred_SQM;
            
            private global::System.Data.DataColumn columnDeductive_Qty;
            
            private global::System.Data.DataColumn columnWastage;
            
            private global::System.Data.DataColumn columnInsp_Result;
            
            private global::System.Data.DataColumn columnParty_Insp_Result;
            
            private global::System.Data.DataColumn columnSpread_Insp_Result;
            
            private global::System.Data.DataColumn columnMould_Trial_Result;
            
            private global::System.Data.DataColumn columnPhy_Properties_Result;
            
            private global::System.Data.DataColumn columnColor_Group_Status;
            
            private global::System.Data.DataColumn columnSpread_Defect_Exist;
            
            private global::System.Data.DataColumn columnInsp_Confirm;
            
            private global::System.Data.DataColumn columnPH_Sample;
            
            private global::System.Data.DataColumn columnPanel_Size1;
            
            private global::System.Data.DataColumn columnPanel_Size2;
            
            private global::System.Data.DataColumn columnSpecial_Marker;
            
            private global::System.Data.DataColumn columnSpread_Remark;
            
            private global::System.Data.DataColumn columnMould_Trial_Remark;
            
            private global::System.Data.DataColumn columnStock_In_Date;
            
            private global::System.Data.DataColumn columnStock_In_Date_DateTime;
            
            private global::System.Data.DataColumn columnTurn_Size;
            
            private global::System.Data.DataColumn columnSupplier_Length_Unit;
            
            private global::System.Data.DataColumn columnSupplier_Width_Unit;
            
            private global::System.Data.DataColumn columnSideToSideH_Width;
            
            private global::System.Data.DataColumn columnInspector;
            
            private global::System.Data.DataColumn columnCreate_User;
            
            private global::System.Data.DataColumn columnCreate_Date;
            
            private global::System.Data.DataColumn columnChange_User;
            
            private global::System.Data.DataColumn columnChange_Date;
            
            private global::System.Data.DataColumn columnUse_Status;
            
            private global::System.Data.DataColumn columnLightStatus;
            
            private global::System.Data.DataColumn columnInvoiceNo;
            
            private global::System.Data.DataColumn columnSupplier_Item_No;
            
            private global::System.Data.DataColumn columnSupplierItemColor;
            
            private global::System.Data.DataColumn columnInsp_Result_Reason;
            
            private global::System.Data.DataColumn columnWeftYarnClass;
            
            private global::System.Data.DataColumn columnWeftYarnPercentage;
            
            private global::System.Data.DataColumn columnWeftYarnStatus;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Fabric_Insp_HeaderDataTable() {
                this.TableName = "Fabric_Insp_Header";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Fabric_Insp_HeaderDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Fabric_Insp_HeaderDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompanyColumn {
                get {
                    return this.columnCompany;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn System_Install_NoColumn {
                get {
                    return this.columnSystem_Install_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Item_NoColumn {
                get {
                    return this.columnItem_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Item_DescColumn {
                get {
                    return this.columnItem_Desc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn POColumn {
                get {
                    return this.columnPO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HdoNoColumn {
                get {
                    return this.columnHdoNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProjectNoColumn {
                get {
                    return this.columnProjectNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IQC_ReferenceColumn {
                get {
                    return this.columnIQC_Reference;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Lot_IdColumn {
                get {
                    return this.columnLot_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Actual_LengthColumn {
                get {
                    return this.columnActual_Length;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Actual_WeightColumn {
                get {
                    return this.columnActual_Weight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Supplier_WidthColumn {
                get {
                    return this.columnSupplier_Width;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Insp_LengthColumn {
                get {
                    return this.columnInsp_Length;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GM_SQMColumn {
                get {
                    return this.columnGM_SQM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Usable_WidthColumn {
                get {
                    return this.columnUsable_Width;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Supplier_CodeColumn {
                get {
                    return this.columnSupplier_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Supplich_BatchColumn {
                get {
                    return this.columnSupplich_Batch;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Roll_NoColumn {
                get {
                    return this.columnRoll_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Total_PointsColumn {
                get {
                    return this.columnTotal_Points;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Points_Hundred_SQMColumn {
                get {
                    return this.columnPoints_Hundred_SQM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Deductive_QtyColumn {
                get {
                    return this.columnDeductive_Qty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WastageColumn {
                get {
                    return this.columnWastage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Insp_ResultColumn {
                get {
                    return this.columnInsp_Result;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Party_Insp_ResultColumn {
                get {
                    return this.columnParty_Insp_Result;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Spread_Insp_ResultColumn {
                get {
                    return this.columnSpread_Insp_Result;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Mould_Trial_ResultColumn {
                get {
                    return this.columnMould_Trial_Result;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Phy_Properties_ResultColumn {
                get {
                    return this.columnPhy_Properties_Result;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Color_Group_StatusColumn {
                get {
                    return this.columnColor_Group_Status;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Spread_Defect_ExistColumn {
                get {
                    return this.columnSpread_Defect_Exist;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Insp_ConfirmColumn {
                get {
                    return this.columnInsp_Confirm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PH_SampleColumn {
                get {
                    return this.columnPH_Sample;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Panel_Size1Column {
                get {
                    return this.columnPanel_Size1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Panel_Size2Column {
                get {
                    return this.columnPanel_Size2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Special_MarkerColumn {
                get {
                    return this.columnSpecial_Marker;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Spread_RemarkColumn {
                get {
                    return this.columnSpread_Remark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Mould_Trial_RemarkColumn {
                get {
                    return this.columnMould_Trial_Remark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Stock_In_DateColumn {
                get {
                    return this.columnStock_In_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Stock_In_Date_DateTimeColumn {
                get {
                    return this.columnStock_In_Date_DateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Turn_SizeColumn {
                get {
                    return this.columnTurn_Size;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Supplier_Length_UnitColumn {
                get {
                    return this.columnSupplier_Length_Unit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Supplier_Width_UnitColumn {
                get {
                    return this.columnSupplier_Width_Unit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SideToSideH_WidthColumn {
                get {
                    return this.columnSideToSideH_Width;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InspectorColumn {
                get {
                    return this.columnInspector;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Create_UserColumn {
                get {
                    return this.columnCreate_User;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Create_DateColumn {
                get {
                    return this.columnCreate_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Change_UserColumn {
                get {
                    return this.columnChange_User;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Change_DateColumn {
                get {
                    return this.columnChange_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Use_StatusColumn {
                get {
                    return this.columnUse_Status;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LightStatusColumn {
                get {
                    return this.columnLightStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InvoiceNoColumn {
                get {
                    return this.columnInvoiceNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Supplier_Item_NoColumn {
                get {
                    return this.columnSupplier_Item_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SupplierItemColorColumn {
                get {
                    return this.columnSupplierItemColor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Insp_Result_ReasonColumn {
                get {
                    return this.columnInsp_Result_Reason;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WeftYarnClassColumn {
                get {
                    return this.columnWeftYarnClass;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WeftYarnPercentageColumn {
                get {
                    return this.columnWeftYarnPercentage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WeftYarnStatusColumn {
                get {
                    return this.columnWeftYarnStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Fabric_Insp_HeaderRow this[int index] {
                get {
                    return ((Fabric_Insp_HeaderRow)(this.Rows[index]));
                }
            }
            
            public event Fabric_Insp_HeaderRowChangeEventHandler Fabric_Insp_HeaderRowChanging;
            
            public event Fabric_Insp_HeaderRowChangeEventHandler Fabric_Insp_HeaderRowChanged;
            
            public event Fabric_Insp_HeaderRowChangeEventHandler Fabric_Insp_HeaderRowDeleting;
            
            public event Fabric_Insp_HeaderRowChangeEventHandler Fabric_Insp_HeaderRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddFabric_Insp_HeaderRow(Fabric_Insp_HeaderRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Fabric_Insp_HeaderRow AddFabric_Insp_HeaderRow(
                        string Company, 
                        int System_Install_No, 
                        string Item_No, 
                        string Item_Desc, 
                        string PO, 
                        string HdoNo, 
                        string ProjectNo, 
                        string IQC_Reference, 
                        string Lot_Id, 
                        decimal Actual_Length, 
                        decimal Actual_Weight, 
                        decimal Supplier_Width, 
                        decimal Insp_Length, 
                        decimal GM_SQM, 
                        decimal Usable_Width, 
                        string Supplier_Code, 
                        string Supplich_Batch, 
                        string Roll_No, 
                        int Total_Points, 
                        decimal Points_Hundred_SQM, 
                        decimal Deductive_Qty, 
                        decimal Wastage, 
                        string Insp_Result, 
                        string Party_Insp_Result, 
                        string Spread_Insp_Result, 
                        string Mould_Trial_Result, 
                        string Phy_Properties_Result, 
                        string Color_Group_Status, 
                        string Spread_Defect_Exist, 
                        string Insp_Confirm, 
                        decimal PH_Sample, 
                        decimal Panel_Size1, 
                        decimal Panel_Size2, 
                        decimal Special_Marker, 
                        string Spread_Remark, 
                        string Mould_Trial_Remark, 
                        string Stock_In_Date, 
                        System.DateTime Stock_In_Date_DateTime, 
                        int Turn_Size, 
                        string Supplier_Length_Unit, 
                        string Supplier_Width_Unit, 
                        int SideToSideH_Width, 
                        string Inspector, 
                        string Create_User, 
                        System.DateTime Create_Date, 
                        string Change_User, 
                        System.DateTime Change_Date, 
                        string Use_Status, 
                        string LightStatus, 
                        string InvoiceNo, 
                        string Supplier_Item_No, 
                        string SupplierItemColor, 
                        string Insp_Result_Reason, 
                        string WeftYarnClass, 
                        decimal WeftYarnPercentage, 
                        string WeftYarnStatus) {
                Fabric_Insp_HeaderRow rowFabric_Insp_HeaderRow = ((Fabric_Insp_HeaderRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Company,
                        System_Install_No,
                        Item_No,
                        Item_Desc,
                        PO,
                        HdoNo,
                        ProjectNo,
                        IQC_Reference,
                        Lot_Id,
                        Actual_Length,
                        Actual_Weight,
                        Supplier_Width,
                        Insp_Length,
                        GM_SQM,
                        Usable_Width,
                        Supplier_Code,
                        Supplich_Batch,
                        Roll_No,
                        Total_Points,
                        Points_Hundred_SQM,
                        Deductive_Qty,
                        Wastage,
                        Insp_Result,
                        Party_Insp_Result,
                        Spread_Insp_Result,
                        Mould_Trial_Result,
                        Phy_Properties_Result,
                        Color_Group_Status,
                        Spread_Defect_Exist,
                        Insp_Confirm,
                        PH_Sample,
                        Panel_Size1,
                        Panel_Size2,
                        Special_Marker,
                        Spread_Remark,
                        Mould_Trial_Remark,
                        Stock_In_Date,
                        Stock_In_Date_DateTime,
                        Turn_Size,
                        Supplier_Length_Unit,
                        Supplier_Width_Unit,
                        SideToSideH_Width,
                        Inspector,
                        Create_User,
                        Create_Date,
                        Change_User,
                        Change_Date,
                        Use_Status,
                        LightStatus,
                        InvoiceNo,
                        Supplier_Item_No,
                        SupplierItemColor,
                        Insp_Result_Reason,
                        WeftYarnClass,
                        WeftYarnPercentage,
                        WeftYarnStatus};
                rowFabric_Insp_HeaderRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFabric_Insp_HeaderRow);
                return rowFabric_Insp_HeaderRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Fabric_Insp_HeaderRow FindByCompanySystem_Install_No(string Company, int System_Install_No) {
                return ((Fabric_Insp_HeaderRow)(this.Rows.Find(new object[] {
                            Company,
                            System_Install_No})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                Fabric_Insp_HeaderDataTable cln = ((Fabric_Insp_HeaderDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Fabric_Insp_HeaderDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCompany = base.Columns["Company"];
                this.columnSystem_Install_No = base.Columns["System_Install_No"];
                this.columnItem_No = base.Columns["Item_No"];
                this.columnItem_Desc = base.Columns["Item_Desc"];
                this.columnPO = base.Columns["PO"];
                this.columnHdoNo = base.Columns["HdoNo"];
                this.columnProjectNo = base.Columns["ProjectNo"];
                this.columnIQC_Reference = base.Columns["IQC_Reference"];
                this.columnLot_Id = base.Columns["Lot_Id"];
                this.columnActual_Length = base.Columns["Actual_Length"];
                this.columnActual_Weight = base.Columns["Actual_Weight"];
                this.columnSupplier_Width = base.Columns["Supplier_Width"];
                this.columnInsp_Length = base.Columns["Insp_Length"];
                this.columnGM_SQM = base.Columns["GM_SQM"];
                this.columnUsable_Width = base.Columns["Usable_Width"];
                this.columnSupplier_Code = base.Columns["Supplier_Code"];
                this.columnSupplich_Batch = base.Columns["Supplich_Batch"];
                this.columnRoll_No = base.Columns["Roll_No"];
                this.columnTotal_Points = base.Columns["Total_Points"];
                this.columnPoints_Hundred_SQM = base.Columns["Points_Hundred_SQM"];
                this.columnDeductive_Qty = base.Columns["Deductive_Qty"];
                this.columnWastage = base.Columns["Wastage"];
                this.columnInsp_Result = base.Columns["Insp_Result"];
                this.columnParty_Insp_Result = base.Columns["Party_Insp_Result"];
                this.columnSpread_Insp_Result = base.Columns["Spread_Insp_Result"];
                this.columnMould_Trial_Result = base.Columns["Mould_Trial_Result"];
                this.columnPhy_Properties_Result = base.Columns["Phy_Properties_Result"];
                this.columnColor_Group_Status = base.Columns["Color_Group_Status"];
                this.columnSpread_Defect_Exist = base.Columns["Spread_Defect_Exist"];
                this.columnInsp_Confirm = base.Columns["Insp_Confirm"];
                this.columnPH_Sample = base.Columns["PH_Sample"];
                this.columnPanel_Size1 = base.Columns["Panel_Size1"];
                this.columnPanel_Size2 = base.Columns["Panel_Size2"];
                this.columnSpecial_Marker = base.Columns["Special_Marker"];
                this.columnSpread_Remark = base.Columns["Spread_Remark"];
                this.columnMould_Trial_Remark = base.Columns["Mould_Trial_Remark"];
                this.columnStock_In_Date = base.Columns["Stock_In_Date"];
                this.columnStock_In_Date_DateTime = base.Columns["Stock_In_Date_DateTime"];
                this.columnTurn_Size = base.Columns["Turn_Size"];
                this.columnSupplier_Length_Unit = base.Columns["Supplier_Length_Unit"];
                this.columnSupplier_Width_Unit = base.Columns["Supplier_Width_Unit"];
                this.columnSideToSideH_Width = base.Columns["SideToSideH_Width"];
                this.columnInspector = base.Columns["Inspector"];
                this.columnCreate_User = base.Columns["Create_User"];
                this.columnCreate_Date = base.Columns["Create_Date"];
                this.columnChange_User = base.Columns["Change_User"];
                this.columnChange_Date = base.Columns["Change_Date"];
                this.columnUse_Status = base.Columns["Use_Status"];
                this.columnLightStatus = base.Columns["LightStatus"];
                this.columnInvoiceNo = base.Columns["InvoiceNo"];
                this.columnSupplier_Item_No = base.Columns["Supplier_Item_No"];
                this.columnSupplierItemColor = base.Columns["SupplierItemColor"];
                this.columnInsp_Result_Reason = base.Columns["Insp_Result_Reason"];
                this.columnWeftYarnClass = base.Columns["WeftYarnClass"];
                this.columnWeftYarnPercentage = base.Columns["WeftYarnPercentage"];
                this.columnWeftYarnStatus = base.Columns["WeftYarnStatus"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCompany = new global::System.Data.DataColumn("Company", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompany);
                this.columnSystem_Install_No = new global::System.Data.DataColumn("System_Install_No", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSystem_Install_No);
                this.columnItem_No = new global::System.Data.DataColumn("Item_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItem_No);
                this.columnItem_Desc = new global::System.Data.DataColumn("Item_Desc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItem_Desc);
                this.columnPO = new global::System.Data.DataColumn("PO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPO);
                this.columnHdoNo = new global::System.Data.DataColumn("HdoNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHdoNo);
                this.columnProjectNo = new global::System.Data.DataColumn("ProjectNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjectNo);
                this.columnIQC_Reference = new global::System.Data.DataColumn("IQC_Reference", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIQC_Reference);
                this.columnLot_Id = new global::System.Data.DataColumn("Lot_Id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLot_Id);
                this.columnActual_Length = new global::System.Data.DataColumn("Actual_Length", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActual_Length);
                this.columnActual_Weight = new global::System.Data.DataColumn("Actual_Weight", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActual_Weight);
                this.columnSupplier_Width = new global::System.Data.DataColumn("Supplier_Width", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplier_Width);
                this.columnInsp_Length = new global::System.Data.DataColumn("Insp_Length", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsp_Length);
                this.columnGM_SQM = new global::System.Data.DataColumn("GM_SQM", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGM_SQM);
                this.columnUsable_Width = new global::System.Data.DataColumn("Usable_Width", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUsable_Width);
                this.columnSupplier_Code = new global::System.Data.DataColumn("Supplier_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplier_Code);
                this.columnSupplich_Batch = new global::System.Data.DataColumn("Supplich_Batch", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplich_Batch);
                this.columnRoll_No = new global::System.Data.DataColumn("Roll_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRoll_No);
                this.columnTotal_Points = new global::System.Data.DataColumn("Total_Points", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotal_Points);
                this.columnPoints_Hundred_SQM = new global::System.Data.DataColumn("Points_Hundred_SQM", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPoints_Hundred_SQM);
                this.columnDeductive_Qty = new global::System.Data.DataColumn("Deductive_Qty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeductive_Qty);
                this.columnWastage = new global::System.Data.DataColumn("Wastage", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWastage);
                this.columnInsp_Result = new global::System.Data.DataColumn("Insp_Result", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsp_Result);
                this.columnParty_Insp_Result = new global::System.Data.DataColumn("Party_Insp_Result", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParty_Insp_Result);
                this.columnSpread_Insp_Result = new global::System.Data.DataColumn("Spread_Insp_Result", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpread_Insp_Result);
                this.columnMould_Trial_Result = new global::System.Data.DataColumn("Mould_Trial_Result", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMould_Trial_Result);
                this.columnPhy_Properties_Result = new global::System.Data.DataColumn("Phy_Properties_Result", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhy_Properties_Result);
                this.columnColor_Group_Status = new global::System.Data.DataColumn("Color_Group_Status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnColor_Group_Status);
                this.columnSpread_Defect_Exist = new global::System.Data.DataColumn("Spread_Defect_Exist", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpread_Defect_Exist);
                this.columnInsp_Confirm = new global::System.Data.DataColumn("Insp_Confirm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsp_Confirm);
                this.columnPH_Sample = new global::System.Data.DataColumn("PH_Sample", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPH_Sample);
                this.columnPanel_Size1 = new global::System.Data.DataColumn("Panel_Size1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPanel_Size1);
                this.columnPanel_Size2 = new global::System.Data.DataColumn("Panel_Size2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPanel_Size2);
                this.columnSpecial_Marker = new global::System.Data.DataColumn("Special_Marker", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpecial_Marker);
                this.columnSpread_Remark = new global::System.Data.DataColumn("Spread_Remark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpread_Remark);
                this.columnMould_Trial_Remark = new global::System.Data.DataColumn("Mould_Trial_Remark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMould_Trial_Remark);
                this.columnStock_In_Date = new global::System.Data.DataColumn("Stock_In_Date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStock_In_Date);
                this.columnStock_In_Date_DateTime = new global::System.Data.DataColumn("Stock_In_Date_DateTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStock_In_Date_DateTime);
                this.columnTurn_Size = new global::System.Data.DataColumn("Turn_Size", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTurn_Size);
                this.columnSupplier_Length_Unit = new global::System.Data.DataColumn("Supplier_Length_Unit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplier_Length_Unit);
                this.columnSupplier_Width_Unit = new global::System.Data.DataColumn("Supplier_Width_Unit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplier_Width_Unit);
                this.columnSideToSideH_Width = new global::System.Data.DataColumn("SideToSideH_Width", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSideToSideH_Width);
                this.columnInspector = new global::System.Data.DataColumn("Inspector", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInspector);
                this.columnCreate_User = new global::System.Data.DataColumn("Create_User", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreate_User);
                this.columnCreate_Date = new global::System.Data.DataColumn("Create_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreate_Date);
                this.columnChange_User = new global::System.Data.DataColumn("Change_User", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChange_User);
                this.columnChange_Date = new global::System.Data.DataColumn("Change_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChange_Date);
                this.columnUse_Status = new global::System.Data.DataColumn("Use_Status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUse_Status);
                this.columnLightStatus = new global::System.Data.DataColumn("LightStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLightStatus);
                this.columnInvoiceNo = new global::System.Data.DataColumn("InvoiceNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceNo);
                this.columnSupplier_Item_No = new global::System.Data.DataColumn("Supplier_Item_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplier_Item_No);
                this.columnSupplierItemColor = new global::System.Data.DataColumn("SupplierItemColor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierItemColor);
                this.columnInsp_Result_Reason = new global::System.Data.DataColumn("Insp_Result_Reason", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsp_Result_Reason);
                this.columnWeftYarnClass = new global::System.Data.DataColumn("WeftYarnClass", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWeftYarnClass);
                this.columnWeftYarnPercentage = new global::System.Data.DataColumn("WeftYarnPercentage", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWeftYarnPercentage);
                this.columnWeftYarnStatus = new global::System.Data.DataColumn("WeftYarnStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWeftYarnStatus);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCompany,
                                this.columnSystem_Install_No}, true));
                this.columnCompany.AllowDBNull = false;
                this.columnCompany.MaxLength = 2;
                this.columnSystem_Install_No.AllowDBNull = false;
                this.columnItem_No.MaxLength = 15;
                this.columnItem_Desc.MaxLength = 50;
                this.columnPO.MaxLength = 8;
                this.columnHdoNo.MaxLength = 50;
                this.columnProjectNo.MaxLength = 50;
                this.columnIQC_Reference.MaxLength = 50;
                this.columnLot_Id.MaxLength = 15;
                this.columnSupplier_Code.MaxLength = 7;
                this.columnSupplich_Batch.MaxLength = 50;
                this.columnRoll_No.MaxLength = 50;
                this.columnInsp_Result.MaxLength = 50;
                this.columnParty_Insp_Result.MaxLength = 50;
                this.columnSpread_Insp_Result.MaxLength = 50;
                this.columnMould_Trial_Result.MaxLength = 50;
                this.columnPhy_Properties_Result.MaxLength = 50;
                this.columnColor_Group_Status.MaxLength = 50;
                this.columnSpread_Defect_Exist.MaxLength = 50;
                this.columnInsp_Confirm.MaxLength = 50;
                this.columnSpread_Remark.MaxLength = 500;
                this.columnMould_Trial_Remark.MaxLength = 500;
                this.columnStock_In_Date.MaxLength = 10;
                this.columnSupplier_Length_Unit.MaxLength = 50;
                this.columnSupplier_Width_Unit.MaxLength = 50;
                this.columnInspector.MaxLength = 50;
                this.columnCreate_User.MaxLength = 50;
                this.columnChange_User.MaxLength = 50;
                this.columnUse_Status.MaxLength = 50;
                this.columnLightStatus.MaxLength = 50;
                this.columnInvoiceNo.MaxLength = 50;
                this.columnSupplier_Item_No.MaxLength = 50;
                this.columnSupplierItemColor.MaxLength = 50;
                this.columnInsp_Result_Reason.MaxLength = 100;
                this.columnWeftYarnClass.MaxLength = 50;
                this.columnWeftYarnStatus.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Fabric_Insp_HeaderRow NewFabric_Insp_HeaderRow() {
                return ((Fabric_Insp_HeaderRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Fabric_Insp_HeaderRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(Fabric_Insp_HeaderRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Fabric_Insp_HeaderRowChanged != null)) {
                    this.Fabric_Insp_HeaderRowChanged(this, new Fabric_Insp_HeaderRowChangeEvent(((Fabric_Insp_HeaderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Fabric_Insp_HeaderRowChanging != null)) {
                    this.Fabric_Insp_HeaderRowChanging(this, new Fabric_Insp_HeaderRowChangeEvent(((Fabric_Insp_HeaderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Fabric_Insp_HeaderRowDeleted != null)) {
                    this.Fabric_Insp_HeaderRowDeleted(this, new Fabric_Insp_HeaderRowChangeEvent(((Fabric_Insp_HeaderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Fabric_Insp_HeaderRowDeleting != null)) {
                    this.Fabric_Insp_HeaderRowDeleting(this, new Fabric_Insp_HeaderRowChangeEvent(((Fabric_Insp_HeaderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveFabric_Insp_HeaderRow(Fabric_Insp_HeaderRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                _PH_FabricInspectionDataSet ds = new _PH_FabricInspectionDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Fabric_Insp_HeaderDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Fabric_Insp_HeaderRow : global::System.Data.DataRow {
            
            private Fabric_Insp_HeaderDataTable tableFabric_Insp_Header;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Fabric_Insp_HeaderRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFabric_Insp_Header = ((Fabric_Insp_HeaderDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Company {
                get {
                    return ((string)(this[this.tableFabric_Insp_Header.CompanyColumn]));
                }
                set {
                    this[this.tableFabric_Insp_Header.CompanyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int System_Install_No {
                get {
                    return ((int)(this[this.tableFabric_Insp_Header.System_Install_NoColumn]));
                }
                set {
                    this[this.tableFabric_Insp_Header.System_Install_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Item_No {
                get {
                    try {
                        return ((string)(this[this.tableFabric_Insp_Header.Item_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Item_No\' in table \'Fabric_Insp_Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFabric_Insp_Header.Item_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Item_Desc {
                get {
                    try {
                        return ((string)(this[this.tableFabric_Insp_Header.Item_DescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Item_Desc\' in table \'Fabric_Insp_Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFabric_Insp_Header.Item_DescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PO {
                get {
                    try {
                        return ((string)(this[this.tableFabric_Insp_Header.POColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PO\' in table \'Fabric_Insp_Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFabric_Insp_Header.POColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HdoNo {
                get {
                    try {
                        return ((string)(this[this.tableFabric_Insp_Header.HdoNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HdoNo\' in table \'Fabric_Insp_Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFabric_Insp_Header.HdoNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProjectNo {
                get {
                    try {
                        return ((string)(this[this.tableFabric_Insp_Header.ProjectNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProjectNo\' in table \'Fabric_Insp_Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFabric_Insp_Header.ProjectNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IQC_Reference {
                get {
                    try {
                        return ((string)(this[this.tableFabric_Insp_Header.IQC_ReferenceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IQC_Reference\' in table \'Fabric_Insp_Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFabric_Insp_Header.IQC_ReferenceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Lot_Id {
                get {
                    try {
                        return ((string)(this[this.tableFabric_Insp_Header.Lot_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Lot_Id\' in table \'Fabric_Insp_Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFabric_Insp_Header.Lot_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Actual_Length {
                get {
                    try {
                        return ((decimal)(this[this.tableFabric_Insp_Header.Actual_LengthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Actual_Length\' in table \'Fabric_Insp_Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFabric_Insp_Header.Actual_LengthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Actual_Weight {
                get {
                    try {
                        return ((decimal)(this[this.tableFabric_Insp_Header.Actual_WeightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Actual_Weight\' in table \'Fabric_Insp_Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFabric_Insp_Header.Actual_WeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Supplier_Width {
                get {
                    try {
                        return ((decimal)(this[this.tableFabric_Insp_Header.Supplier_WidthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Supplier_Width\' in table \'Fabric_Insp_Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFabric_Insp_Header.Supplier_WidthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Insp_Length {
                get {
                    try {
                        return ((decimal)(this[this.tableFabric_Insp_Header.Insp_LengthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Insp_Length\' in table \'Fabric_Insp_Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFabric_Insp_Header.Insp_LengthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal GM_SQM {
                get {
                    try {
                        return ((decimal)(this[this.tableFabric_Insp_Header.GM_SQMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GM_SQM\' in table \'Fabric_Insp_Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFabric_Insp_Header.GM_SQMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Usable_Width {
                get {
                    try {
                        return ((decimal)(this[this.tableFabric_Insp_Header.Usable_WidthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Usable_Width\' in table \'Fabric_Insp_Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFabric_Insp_Header.Usable_WidthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Supplier_Code {
                get {
                    try {
                        return ((string)(this[this.tableFabric_Insp_Header.Supplier_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Supplier_Code\' in table \'Fabric_Insp_Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFabric_Insp_Header.Supplier_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Supplich_Batch {
                get {
                    try {
                        return ((string)(this[this.tableFabric_Insp_Header.Supplich_BatchColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Supplich_Batch\' in table \'Fabric_Insp_Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFabric_Insp_Header.Supplich_BatchColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Roll_No {
                get {
                    try {
                        return ((string)(this[this.tableFabric_Insp_Header.Roll_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Roll_No\' in table \'Fabric_Insp_Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFabric_Insp_Header.Roll_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Total_Points {
                get {
                    try {
                        return ((int)(this[this.tableFabric_Insp_Header.Total_PointsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Total_Points\' in table \'Fabric_Insp_Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFabric_Insp_Header.Total_PointsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Points_Hundred_SQM {
                get {
                    try {
                        return ((decimal)(this[this.tableFabric_Insp_Header.Points_Hundred_SQMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Points_Hundred_SQM\' in table \'Fabric_Insp_Header\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableFabric_Insp_Header.Points_Hundred_SQMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Deductive_Qty {
                get {
                    try {
                        return ((decimal)(this[this.tableFabric_Insp_Header.Deductive_QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Deductive_Qty\' in table \'Fabric_Insp_Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFabric_Insp_Header.Deductive_QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Wastage {
                get {
                    try {
                        return ((decimal)(this[this.tableFabric_Insp_Header.WastageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Wastage\' in table \'Fabric_Insp_Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFabric_Insp_Header.WastageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Insp_Result {
                get {
                    try {
                        return ((string)(this[this.tableFabric_Insp_Header.Insp_ResultColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Insp_Result\' in table \'Fabric_Insp_Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFabric_Insp_Header.Insp_ResultColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Party_Insp_Result {
                get {
                    try {
                        return ((string)(this[this.tableFabric_Insp_Header.Party_Insp_ResultColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Party_Insp_Result\' in table \'Fabric_Insp_Header\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableFabric_Insp_Header.Party_Insp_ResultColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Spread_Insp_Result {
                get {
                    try {
                        return ((string)(this[this.tableFabric_Insp_Header.Spread_Insp_ResultColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Spread_Insp_Result\' in table \'Fabric_Insp_Header\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableFabric_Insp_Header.Spread_Insp_ResultColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Mould_Trial_Result {
                get {
                    try {
                        return ((string)(this[this.tableFabric_Insp_Header.Mould_Trial_ResultColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Mould_Trial_Result\' in table \'Fabric_Insp_Header\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableFabric_Insp_Header.Mould_Trial_ResultColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Phy_Properties_Result {
                get {
                    try {
                        return ((string)(this[this.tableFabric_Insp_Header.Phy_Properties_ResultColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Phy_Properties_Result\' in table \'Fabric_Insp_Header\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableFabric_Insp_Header.Phy_Properties_ResultColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Color_Group_Status {
                get {
                    try {
                        return ((string)(this[this.tableFabric_Insp_Header.Color_Group_StatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Color_Group_Status\' in table \'Fabric_Insp_Header\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableFabric_Insp_Header.Color_Group_StatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Spread_Defect_Exist {
                get {
                    try {
                        return ((string)(this[this.tableFabric_Insp_Header.Spread_Defect_ExistColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Spread_Defect_Exist\' in table \'Fabric_Insp_Header\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableFabric_Insp_Header.Spread_Defect_ExistColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Insp_Confirm {
                get {
                    try {
                        return ((string)(this[this.tableFabric_Insp_Header.Insp_ConfirmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Insp_Confirm\' in table \'Fabric_Insp_Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFabric_Insp_Header.Insp_ConfirmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PH_Sample {
                get {
                    try {
                        return ((decimal)(this[this.tableFabric_Insp_Header.PH_SampleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PH_Sample\' in table \'Fabric_Insp_Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFabric_Insp_Header.PH_SampleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Panel_Size1 {
                get {
                    try {
                        return ((decimal)(this[this.tableFabric_Insp_Header.Panel_Size1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Panel_Size1\' in table \'Fabric_Insp_Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFabric_Insp_Header.Panel_Size1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Panel_Size2 {
                get {
                    try {
                        return ((decimal)(this[this.tableFabric_Insp_Header.Panel_Size2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Panel_Size2\' in table \'Fabric_Insp_Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFabric_Insp_Header.Panel_Size2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Special_Marker {
                get {
                    try {
                        return ((decimal)(this[this.tableFabric_Insp_Header.Special_MarkerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Special_Marker\' in table \'Fabric_Insp_Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFabric_Insp_Header.Special_MarkerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Spread_Remark {
                get {
                    try {
                        return ((string)(this[this.tableFabric_Insp_Header.Spread_RemarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Spread_Remark\' in table \'Fabric_Insp_Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFabric_Insp_Header.Spread_RemarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Mould_Trial_Remark {
                get {
                    try {
                        return ((string)(this[this.tableFabric_Insp_Header.Mould_Trial_RemarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Mould_Trial_Remark\' in table \'Fabric_Insp_Header\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableFabric_Insp_Header.Mould_Trial_RemarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Stock_In_Date {
                get {
                    try {
                        return ((string)(this[this.tableFabric_Insp_Header.Stock_In_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Stock_In_Date\' in table \'Fabric_Insp_Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFabric_Insp_Header.Stock_In_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Stock_In_Date_DateTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFabric_Insp_Header.Stock_In_Date_DateTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Stock_In_Date_DateTime\' in table \'Fabric_Insp_Header\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableFabric_Insp_Header.Stock_In_Date_DateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Turn_Size {
                get {
                    try {
                        return ((int)(this[this.tableFabric_Insp_Header.Turn_SizeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Turn_Size\' in table \'Fabric_Insp_Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFabric_Insp_Header.Turn_SizeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Supplier_Length_Unit {
                get {
                    try {
                        return ((string)(this[this.tableFabric_Insp_Header.Supplier_Length_UnitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Supplier_Length_Unit\' in table \'Fabric_Insp_Header\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableFabric_Insp_Header.Supplier_Length_UnitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Supplier_Width_Unit {
                get {
                    try {
                        return ((string)(this[this.tableFabric_Insp_Header.Supplier_Width_UnitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Supplier_Width_Unit\' in table \'Fabric_Insp_Header\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableFabric_Insp_Header.Supplier_Width_UnitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SideToSideH_Width {
                get {
                    try {
                        return ((int)(this[this.tableFabric_Insp_Header.SideToSideH_WidthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SideToSideH_Width\' in table \'Fabric_Insp_Header\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableFabric_Insp_Header.SideToSideH_WidthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Inspector {
                get {
                    try {
                        return ((string)(this[this.tableFabric_Insp_Header.InspectorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Inspector\' in table \'Fabric_Insp_Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFabric_Insp_Header.InspectorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Create_User {
                get {
                    try {
                        return ((string)(this[this.tableFabric_Insp_Header.Create_UserColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Create_User\' in table \'Fabric_Insp_Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFabric_Insp_Header.Create_UserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Create_Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFabric_Insp_Header.Create_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Create_Date\' in table \'Fabric_Insp_Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFabric_Insp_Header.Create_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Change_User {
                get {
                    try {
                        return ((string)(this[this.tableFabric_Insp_Header.Change_UserColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Change_User\' in table \'Fabric_Insp_Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFabric_Insp_Header.Change_UserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Change_Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFabric_Insp_Header.Change_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Change_Date\' in table \'Fabric_Insp_Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFabric_Insp_Header.Change_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Use_Status {
                get {
                    try {
                        return ((string)(this[this.tableFabric_Insp_Header.Use_StatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Use_Status\' in table \'Fabric_Insp_Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFabric_Insp_Header.Use_StatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LightStatus {
                get {
                    try {
                        return ((string)(this[this.tableFabric_Insp_Header.LightStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LightStatus\' in table \'Fabric_Insp_Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFabric_Insp_Header.LightStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InvoiceNo {
                get {
                    try {
                        return ((string)(this[this.tableFabric_Insp_Header.InvoiceNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceNo\' in table \'Fabric_Insp_Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFabric_Insp_Header.InvoiceNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Supplier_Item_No {
                get {
                    try {
                        return ((string)(this[this.tableFabric_Insp_Header.Supplier_Item_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Supplier_Item_No\' in table \'Fabric_Insp_Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFabric_Insp_Header.Supplier_Item_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SupplierItemColor {
                get {
                    try {
                        return ((string)(this[this.tableFabric_Insp_Header.SupplierItemColorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SupplierItemColor\' in table \'Fabric_Insp_Header\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableFabric_Insp_Header.SupplierItemColorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Insp_Result_Reason {
                get {
                    try {
                        return ((string)(this[this.tableFabric_Insp_Header.Insp_Result_ReasonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Insp_Result_Reason\' in table \'Fabric_Insp_Header\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableFabric_Insp_Header.Insp_Result_ReasonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WeftYarnClass {
                get {
                    try {
                        return ((string)(this[this.tableFabric_Insp_Header.WeftYarnClassColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WeftYarnClass\' in table \'Fabric_Insp_Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFabric_Insp_Header.WeftYarnClassColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal WeftYarnPercentage {
                get {
                    try {
                        return ((decimal)(this[this.tableFabric_Insp_Header.WeftYarnPercentageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WeftYarnPercentage\' in table \'Fabric_Insp_Header\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableFabric_Insp_Header.WeftYarnPercentageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WeftYarnStatus {
                get {
                    try {
                        return ((string)(this[this.tableFabric_Insp_Header.WeftYarnStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WeftYarnStatus\' in table \'Fabric_Insp_Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFabric_Insp_Header.WeftYarnStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItem_NoNull() {
                return this.IsNull(this.tableFabric_Insp_Header.Item_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItem_NoNull() {
                this[this.tableFabric_Insp_Header.Item_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItem_DescNull() {
                return this.IsNull(this.tableFabric_Insp_Header.Item_DescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItem_DescNull() {
                this[this.tableFabric_Insp_Header.Item_DescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPONull() {
                return this.IsNull(this.tableFabric_Insp_Header.POColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPONull() {
                this[this.tableFabric_Insp_Header.POColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHdoNoNull() {
                return this.IsNull(this.tableFabric_Insp_Header.HdoNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHdoNoNull() {
                this[this.tableFabric_Insp_Header.HdoNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProjectNoNull() {
                return this.IsNull(this.tableFabric_Insp_Header.ProjectNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProjectNoNull() {
                this[this.tableFabric_Insp_Header.ProjectNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIQC_ReferenceNull() {
                return this.IsNull(this.tableFabric_Insp_Header.IQC_ReferenceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIQC_ReferenceNull() {
                this[this.tableFabric_Insp_Header.IQC_ReferenceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLot_IdNull() {
                return this.IsNull(this.tableFabric_Insp_Header.Lot_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLot_IdNull() {
                this[this.tableFabric_Insp_Header.Lot_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsActual_LengthNull() {
                return this.IsNull(this.tableFabric_Insp_Header.Actual_LengthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetActual_LengthNull() {
                this[this.tableFabric_Insp_Header.Actual_LengthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsActual_WeightNull() {
                return this.IsNull(this.tableFabric_Insp_Header.Actual_WeightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetActual_WeightNull() {
                this[this.tableFabric_Insp_Header.Actual_WeightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplier_WidthNull() {
                return this.IsNull(this.tableFabric_Insp_Header.Supplier_WidthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplier_WidthNull() {
                this[this.tableFabric_Insp_Header.Supplier_WidthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsp_LengthNull() {
                return this.IsNull(this.tableFabric_Insp_Header.Insp_LengthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsp_LengthNull() {
                this[this.tableFabric_Insp_Header.Insp_LengthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGM_SQMNull() {
                return this.IsNull(this.tableFabric_Insp_Header.GM_SQMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGM_SQMNull() {
                this[this.tableFabric_Insp_Header.GM_SQMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUsable_WidthNull() {
                return this.IsNull(this.tableFabric_Insp_Header.Usable_WidthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUsable_WidthNull() {
                this[this.tableFabric_Insp_Header.Usable_WidthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplier_CodeNull() {
                return this.IsNull(this.tableFabric_Insp_Header.Supplier_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplier_CodeNull() {
                this[this.tableFabric_Insp_Header.Supplier_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplich_BatchNull() {
                return this.IsNull(this.tableFabric_Insp_Header.Supplich_BatchColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplich_BatchNull() {
                this[this.tableFabric_Insp_Header.Supplich_BatchColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRoll_NoNull() {
                return this.IsNull(this.tableFabric_Insp_Header.Roll_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRoll_NoNull() {
                this[this.tableFabric_Insp_Header.Roll_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotal_PointsNull() {
                return this.IsNull(this.tableFabric_Insp_Header.Total_PointsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotal_PointsNull() {
                this[this.tableFabric_Insp_Header.Total_PointsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPoints_Hundred_SQMNull() {
                return this.IsNull(this.tableFabric_Insp_Header.Points_Hundred_SQMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPoints_Hundred_SQMNull() {
                this[this.tableFabric_Insp_Header.Points_Hundred_SQMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeductive_QtyNull() {
                return this.IsNull(this.tableFabric_Insp_Header.Deductive_QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeductive_QtyNull() {
                this[this.tableFabric_Insp_Header.Deductive_QtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWastageNull() {
                return this.IsNull(this.tableFabric_Insp_Header.WastageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWastageNull() {
                this[this.tableFabric_Insp_Header.WastageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsp_ResultNull() {
                return this.IsNull(this.tableFabric_Insp_Header.Insp_ResultColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsp_ResultNull() {
                this[this.tableFabric_Insp_Header.Insp_ResultColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsParty_Insp_ResultNull() {
                return this.IsNull(this.tableFabric_Insp_Header.Party_Insp_ResultColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetParty_Insp_ResultNull() {
                this[this.tableFabric_Insp_Header.Party_Insp_ResultColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSpread_Insp_ResultNull() {
                return this.IsNull(this.tableFabric_Insp_Header.Spread_Insp_ResultColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSpread_Insp_ResultNull() {
                this[this.tableFabric_Insp_Header.Spread_Insp_ResultColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMould_Trial_ResultNull() {
                return this.IsNull(this.tableFabric_Insp_Header.Mould_Trial_ResultColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMould_Trial_ResultNull() {
                this[this.tableFabric_Insp_Header.Mould_Trial_ResultColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPhy_Properties_ResultNull() {
                return this.IsNull(this.tableFabric_Insp_Header.Phy_Properties_ResultColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPhy_Properties_ResultNull() {
                this[this.tableFabric_Insp_Header.Phy_Properties_ResultColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsColor_Group_StatusNull() {
                return this.IsNull(this.tableFabric_Insp_Header.Color_Group_StatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetColor_Group_StatusNull() {
                this[this.tableFabric_Insp_Header.Color_Group_StatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSpread_Defect_ExistNull() {
                return this.IsNull(this.tableFabric_Insp_Header.Spread_Defect_ExistColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSpread_Defect_ExistNull() {
                this[this.tableFabric_Insp_Header.Spread_Defect_ExistColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsp_ConfirmNull() {
                return this.IsNull(this.tableFabric_Insp_Header.Insp_ConfirmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsp_ConfirmNull() {
                this[this.tableFabric_Insp_Header.Insp_ConfirmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPH_SampleNull() {
                return this.IsNull(this.tableFabric_Insp_Header.PH_SampleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPH_SampleNull() {
                this[this.tableFabric_Insp_Header.PH_SampleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPanel_Size1Null() {
                return this.IsNull(this.tableFabric_Insp_Header.Panel_Size1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPanel_Size1Null() {
                this[this.tableFabric_Insp_Header.Panel_Size1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPanel_Size2Null() {
                return this.IsNull(this.tableFabric_Insp_Header.Panel_Size2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPanel_Size2Null() {
                this[this.tableFabric_Insp_Header.Panel_Size2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSpecial_MarkerNull() {
                return this.IsNull(this.tableFabric_Insp_Header.Special_MarkerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSpecial_MarkerNull() {
                this[this.tableFabric_Insp_Header.Special_MarkerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSpread_RemarkNull() {
                return this.IsNull(this.tableFabric_Insp_Header.Spread_RemarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSpread_RemarkNull() {
                this[this.tableFabric_Insp_Header.Spread_RemarkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMould_Trial_RemarkNull() {
                return this.IsNull(this.tableFabric_Insp_Header.Mould_Trial_RemarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMould_Trial_RemarkNull() {
                this[this.tableFabric_Insp_Header.Mould_Trial_RemarkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStock_In_DateNull() {
                return this.IsNull(this.tableFabric_Insp_Header.Stock_In_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStock_In_DateNull() {
                this[this.tableFabric_Insp_Header.Stock_In_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStock_In_Date_DateTimeNull() {
                return this.IsNull(this.tableFabric_Insp_Header.Stock_In_Date_DateTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStock_In_Date_DateTimeNull() {
                this[this.tableFabric_Insp_Header.Stock_In_Date_DateTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTurn_SizeNull() {
                return this.IsNull(this.tableFabric_Insp_Header.Turn_SizeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTurn_SizeNull() {
                this[this.tableFabric_Insp_Header.Turn_SizeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplier_Length_UnitNull() {
                return this.IsNull(this.tableFabric_Insp_Header.Supplier_Length_UnitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplier_Length_UnitNull() {
                this[this.tableFabric_Insp_Header.Supplier_Length_UnitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplier_Width_UnitNull() {
                return this.IsNull(this.tableFabric_Insp_Header.Supplier_Width_UnitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplier_Width_UnitNull() {
                this[this.tableFabric_Insp_Header.Supplier_Width_UnitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSideToSideH_WidthNull() {
                return this.IsNull(this.tableFabric_Insp_Header.SideToSideH_WidthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSideToSideH_WidthNull() {
                this[this.tableFabric_Insp_Header.SideToSideH_WidthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInspectorNull() {
                return this.IsNull(this.tableFabric_Insp_Header.InspectorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInspectorNull() {
                this[this.tableFabric_Insp_Header.InspectorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreate_UserNull() {
                return this.IsNull(this.tableFabric_Insp_Header.Create_UserColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreate_UserNull() {
                this[this.tableFabric_Insp_Header.Create_UserColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreate_DateNull() {
                return this.IsNull(this.tableFabric_Insp_Header.Create_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreate_DateNull() {
                this[this.tableFabric_Insp_Header.Create_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChange_UserNull() {
                return this.IsNull(this.tableFabric_Insp_Header.Change_UserColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetChange_UserNull() {
                this[this.tableFabric_Insp_Header.Change_UserColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChange_DateNull() {
                return this.IsNull(this.tableFabric_Insp_Header.Change_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetChange_DateNull() {
                this[this.tableFabric_Insp_Header.Change_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUse_StatusNull() {
                return this.IsNull(this.tableFabric_Insp_Header.Use_StatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUse_StatusNull() {
                this[this.tableFabric_Insp_Header.Use_StatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLightStatusNull() {
                return this.IsNull(this.tableFabric_Insp_Header.LightStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLightStatusNull() {
                this[this.tableFabric_Insp_Header.LightStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInvoiceNoNull() {
                return this.IsNull(this.tableFabric_Insp_Header.InvoiceNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInvoiceNoNull() {
                this[this.tableFabric_Insp_Header.InvoiceNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplier_Item_NoNull() {
                return this.IsNull(this.tableFabric_Insp_Header.Supplier_Item_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplier_Item_NoNull() {
                this[this.tableFabric_Insp_Header.Supplier_Item_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplierItemColorNull() {
                return this.IsNull(this.tableFabric_Insp_Header.SupplierItemColorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplierItemColorNull() {
                this[this.tableFabric_Insp_Header.SupplierItemColorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsp_Result_ReasonNull() {
                return this.IsNull(this.tableFabric_Insp_Header.Insp_Result_ReasonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsp_Result_ReasonNull() {
                this[this.tableFabric_Insp_Header.Insp_Result_ReasonColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWeftYarnClassNull() {
                return this.IsNull(this.tableFabric_Insp_Header.WeftYarnClassColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWeftYarnClassNull() {
                this[this.tableFabric_Insp_Header.WeftYarnClassColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWeftYarnPercentageNull() {
                return this.IsNull(this.tableFabric_Insp_Header.WeftYarnPercentageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWeftYarnPercentageNull() {
                this[this.tableFabric_Insp_Header.WeftYarnPercentageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWeftYarnStatusNull() {
                return this.IsNull(this.tableFabric_Insp_Header.WeftYarnStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWeftYarnStatusNull() {
                this[this.tableFabric_Insp_Header.WeftYarnStatusColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Fabric_Insp_HeaderRowChangeEvent : global::System.EventArgs {
            
            private Fabric_Insp_HeaderRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Fabric_Insp_HeaderRowChangeEvent(Fabric_Insp_HeaderRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Fabric_Insp_HeaderRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace PH.FabricInspection.BO._PH_FabricInspectionDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Fabric_Insp_HeaderTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Fabric_Insp_HeaderTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Fabric_Insp_Header";
            tableMapping.ColumnMappings.Add("Company", "Company");
            tableMapping.ColumnMappings.Add("System_Install_No", "System_Install_No");
            tableMapping.ColumnMappings.Add("Item_No", "Item_No");
            tableMapping.ColumnMappings.Add("Item_Desc", "Item_Desc");
            tableMapping.ColumnMappings.Add("PO", "PO");
            tableMapping.ColumnMappings.Add("HdoNo", "HdoNo");
            tableMapping.ColumnMappings.Add("ProjectNo", "ProjectNo");
            tableMapping.ColumnMappings.Add("IQC_Reference", "IQC_Reference");
            tableMapping.ColumnMappings.Add("Lot_Id", "Lot_Id");
            tableMapping.ColumnMappings.Add("Actual_Length", "Actual_Length");
            tableMapping.ColumnMappings.Add("Actual_Weight", "Actual_Weight");
            tableMapping.ColumnMappings.Add("Supplier_Width", "Supplier_Width");
            tableMapping.ColumnMappings.Add("Insp_Length", "Insp_Length");
            tableMapping.ColumnMappings.Add("GM_SQM", "GM_SQM");
            tableMapping.ColumnMappings.Add("Usable_Width", "Usable_Width");
            tableMapping.ColumnMappings.Add("Supplier_Code", "Supplier_Code");
            tableMapping.ColumnMappings.Add("Supplich_Batch", "Supplich_Batch");
            tableMapping.ColumnMappings.Add("Roll_No", "Roll_No");
            tableMapping.ColumnMappings.Add("Total_Points", "Total_Points");
            tableMapping.ColumnMappings.Add("Points_Hundred_SQM", "Points_Hundred_SQM");
            tableMapping.ColumnMappings.Add("Deductive_Qty", "Deductive_Qty");
            tableMapping.ColumnMappings.Add("Wastage", "Wastage");
            tableMapping.ColumnMappings.Add("Insp_Result", "Insp_Result");
            tableMapping.ColumnMappings.Add("Party_Insp_Result", "Party_Insp_Result");
            tableMapping.ColumnMappings.Add("Spread_Insp_Result", "Spread_Insp_Result");
            tableMapping.ColumnMappings.Add("Mould_Trial_Result", "Mould_Trial_Result");
            tableMapping.ColumnMappings.Add("Phy_Properties_Result", "Phy_Properties_Result");
            tableMapping.ColumnMappings.Add("Color_Group_Status", "Color_Group_Status");
            tableMapping.ColumnMappings.Add("Spread_Defect_Exist", "Spread_Defect_Exist");
            tableMapping.ColumnMappings.Add("Insp_Confirm", "Insp_Confirm");
            tableMapping.ColumnMappings.Add("PH_Sample", "PH_Sample");
            tableMapping.ColumnMappings.Add("Panel_Size1", "Panel_Size1");
            tableMapping.ColumnMappings.Add("Panel_Size2", "Panel_Size2");
            tableMapping.ColumnMappings.Add("Special_Marker", "Special_Marker");
            tableMapping.ColumnMappings.Add("Spread_Remark", "Spread_Remark");
            tableMapping.ColumnMappings.Add("Mould_Trial_Remark", "Mould_Trial_Remark");
            tableMapping.ColumnMappings.Add("Stock_In_Date", "Stock_In_Date");
            tableMapping.ColumnMappings.Add("Stock_In_Date_DateTime", "Stock_In_Date_DateTime");
            tableMapping.ColumnMappings.Add("Turn_Size", "Turn_Size");
            tableMapping.ColumnMappings.Add("Supplier_Length_Unit", "Supplier_Length_Unit");
            tableMapping.ColumnMappings.Add("Supplier_Width_Unit", "Supplier_Width_Unit");
            tableMapping.ColumnMappings.Add("SideToSideH_Width", "SideToSideH_Width");
            tableMapping.ColumnMappings.Add("Inspector", "Inspector");
            tableMapping.ColumnMappings.Add("Create_User", "Create_User");
            tableMapping.ColumnMappings.Add("Create_Date", "Create_Date");
            tableMapping.ColumnMappings.Add("Change_User", "Change_User");
            tableMapping.ColumnMappings.Add("Change_Date", "Change_Date");
            tableMapping.ColumnMappings.Add("Use_Status", "Use_Status");
            tableMapping.ColumnMappings.Add("LightStatus", "LightStatus");
            tableMapping.ColumnMappings.Add("InvoiceNo", "InvoiceNo");
            tableMapping.ColumnMappings.Add("Supplier_Item_No", "Supplier_Item_No");
            tableMapping.ColumnMappings.Add("SupplierItemColor", "SupplierItemColor");
            tableMapping.ColumnMappings.Add("Insp_Result_Reason", "Insp_Result_Reason");
            tableMapping.ColumnMappings.Add("WeftYarnClass", "WeftYarnClass");
            tableMapping.ColumnMappings.Add("WeftYarnPercentage", "WeftYarnPercentage");
            tableMapping.ColumnMappings.Add("WeftYarnStatus", "WeftYarnStatus");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[Fabric_Insp_Header] WHERE (([Company] = @Original_Company) AND" +
                " ([System_Install_No] = @Original_System_Install_No) AND ((@IsNull_Item_No = 1 A" +
                "ND [Item_No] IS NULL) OR ([Item_No] = @Original_Item_No)) AND ((@IsNull_Item_Des" +
                "c = 1 AND [Item_Desc] IS NULL) OR ([Item_Desc] = @Original_Item_Desc)) AND ((@Is" +
                "Null_PO = 1 AND [PO] IS NULL) OR ([PO] = @Original_PO)) AND ((@IsNull_HdoNo = 1 " +
                "AND [HdoNo] IS NULL) OR ([HdoNo] = @Original_HdoNo)) AND ((@IsNull_ProjectNo = 1" +
                " AND [ProjectNo] IS NULL) OR ([ProjectNo] = @Original_ProjectNo)) AND ((@IsNull_" +
                "IQC_Reference = 1 AND [IQC_Reference] IS NULL) OR ([IQC_Reference] = @Original_I" +
                "QC_Reference)) AND ((@IsNull_Lot_Id = 1 AND [Lot_Id] IS NULL) OR ([Lot_Id] = @Or" +
                "iginal_Lot_Id)) AND ((@IsNull_Actual_Length = 1 AND [Actual_Length] IS NULL) OR " +
                "([Actual_Length] = @Original_Actual_Length)) AND ((@IsNull_Actual_Weight = 1 AND" +
                " [Actual_Weight] IS NULL) OR ([Actual_Weight] = @Original_Actual_Weight)) AND ((" +
                "@IsNull_Supplier_Width = 1 AND [Supplier_Width] IS NULL) OR ([Supplier_Width] = " +
                "@Original_Supplier_Width)) AND ((@IsNull_Insp_Length = 1 AND [Insp_Length] IS NU" +
                "LL) OR ([Insp_Length] = @Original_Insp_Length)) AND ((@IsNull_GM_SQM = 1 AND [GM" +
                "_SQM] IS NULL) OR ([GM_SQM] = @Original_GM_SQM)) AND ((@IsNull_Usable_Width = 1 " +
                "AND [Usable_Width] IS NULL) OR ([Usable_Width] = @Original_Usable_Width)) AND ((" +
                "@IsNull_Supplier_Code = 1 AND [Supplier_Code] IS NULL) OR ([Supplier_Code] = @Or" +
                "iginal_Supplier_Code)) AND ((@IsNull_Supplich_Batch = 1 AND [Supplich_Batch] IS " +
                "NULL) OR ([Supplich_Batch] = @Original_Supplich_Batch)) AND ((@IsNull_Roll_No = " +
                "1 AND [Roll_No] IS NULL) OR ([Roll_No] = @Original_Roll_No)) AND ((@IsNull_Total" +
                "_Points = 1 AND [Total_Points] IS NULL) OR ([Total_Points] = @Original_Total_Poi" +
                "nts)) AND ((@IsNull_Points_Hundred_SQM = 1 AND [Points_Hundred_SQM] IS NULL) OR " +
                "([Points_Hundred_SQM] = @Original_Points_Hundred_SQM)) AND ((@IsNull_Deductive_Q" +
                "ty = 1 AND [Deductive_Qty] IS NULL) OR ([Deductive_Qty] = @Original_Deductive_Qt" +
                "y)) AND ((@IsNull_Wastage = 1 AND [Wastage] IS NULL) OR ([Wastage] = @Original_W" +
                "astage)) AND ((@IsNull_Insp_Result = 1 AND [Insp_Result] IS NULL) OR ([Insp_Resu" +
                "lt] = @Original_Insp_Result)) AND ((@IsNull_Party_Insp_Result = 1 AND [Party_Ins" +
                "p_Result] IS NULL) OR ([Party_Insp_Result] = @Original_Party_Insp_Result)) AND (" +
                "(@IsNull_Spread_Insp_Result = 1 AND [Spread_Insp_Result] IS NULL) OR ([Spread_In" +
                "sp_Result] = @Original_Spread_Insp_Result)) AND ((@IsNull_Mould_Trial_Result = 1" +
                " AND [Mould_Trial_Result] IS NULL) OR ([Mould_Trial_Result] = @Original_Mould_Tr" +
                "ial_Result)) AND ((@IsNull_Phy_Properties_Result = 1 AND [Phy_Properties_Result]" +
                " IS NULL) OR ([Phy_Properties_Result] = @Original_Phy_Properties_Result)) AND ((" +
                "@IsNull_Color_Group_Status = 1 AND [Color_Group_Status] IS NULL) OR ([Color_Grou" +
                "p_Status] = @Original_Color_Group_Status)) AND ((@IsNull_Spread_Defect_Exist = 1" +
                " AND [Spread_Defect_Exist] IS NULL) OR ([Spread_Defect_Exist] = @Original_Spread" +
                "_Defect_Exist)) AND ((@IsNull_Insp_Confirm = 1 AND [Insp_Confirm] IS NULL) OR ([" +
                "Insp_Confirm] = @Original_Insp_Confirm)) AND ((@IsNull_PH_Sample = 1 AND [PH_Sam" +
                "ple] IS NULL) OR ([PH_Sample] = @Original_PH_Sample)) AND ((@IsNull_Panel_Size1 " +
                "= 1 AND [Panel_Size1] IS NULL) OR ([Panel_Size1] = @Original_Panel_Size1)) AND (" +
                "(@IsNull_Panel_Size2 = 1 AND [Panel_Size2] IS NULL) OR ([Panel_Size2] = @Origina" +
                "l_Panel_Size2)) AND ((@IsNull_Special_Marker = 1 AND [Special_Marker] IS NULL) O" +
                "R ([Special_Marker] = @Original_Special_Marker)) AND ((@IsNull_Spread_Remark = 1" +
                " AND [Spread_Remark] IS NULL) OR ([Spread_Remark] = @Original_Spread_Remark)) AN" +
                "D ((@IsNull_Mould_Trial_Remark = 1 AND [Mould_Trial_Remark] IS NULL) OR ([Mould_" +
                "Trial_Remark] = @Original_Mould_Trial_Remark)) AND ((@IsNull_Stock_In_Date = 1 A" +
                "ND [Stock_In_Date] IS NULL) OR ([Stock_In_Date] = @Original_Stock_In_Date)) AND " +
                "((@IsNull_Stock_In_Date_DateTime = 1 AND [Stock_In_Date_DateTime] IS NULL) OR ([" +
                "Stock_In_Date_DateTime] = @Original_Stock_In_Date_DateTime)) AND ((@IsNull_Turn_" +
                "Size = 1 AND [Turn_Size] IS NULL) OR ([Turn_Size] = @Original_Turn_Size)) AND ((" +
                "@IsNull_Supplier_Length_Unit = 1 AND [Supplier_Length_Unit] IS NULL) OR ([Suppli" +
                "er_Length_Unit] = @Original_Supplier_Length_Unit)) AND ((@IsNull_Supplier_Width_" +
                "Unit = 1 AND [Supplier_Width_Unit] IS NULL) OR ([Supplier_Width_Unit] = @Origina" +
                "l_Supplier_Width_Unit)) AND ((@IsNull_SideToSideH_Width = 1 AND [SideToSideH_Wid" +
                "th] IS NULL) OR ([SideToSideH_Width] = @Original_SideToSideH_Width)) AND ((@IsNu" +
                "ll_Inspector = 1 AND [Inspector] IS NULL) OR ([Inspector] = @Original_Inspector)" +
                ") AND ((@IsNull_Create_User = 1 AND [Create_User] IS NULL) OR ([Create_User] = @" +
                "Original_Create_User)) AND ((@IsNull_Create_Date = 1 AND [Create_Date] IS NULL) " +
                "OR ([Create_Date] = @Original_Create_Date)) AND ((@IsNull_Change_User = 1 AND [C" +
                "hange_User] IS NULL) OR ([Change_User] = @Original_Change_User)) AND ((@IsNull_C" +
                "hange_Date = 1 AND [Change_Date] IS NULL) OR ([Change_Date] = @Original_Change_D" +
                "ate)) AND ((@IsNull_Use_Status = 1 AND [Use_Status] IS NULL) OR ([Use_Status] = " +
                "@Original_Use_Status)) AND ((@IsNull_LightStatus = 1 AND [LightStatus] IS NULL) " +
                "OR ([LightStatus] = @Original_LightStatus)) AND ((@IsNull_InvoiceNo = 1 AND [Inv" +
                "oiceNo] IS NULL) OR ([InvoiceNo] = @Original_InvoiceNo)) AND ((@IsNull_Supplier_" +
                "Item_No = 1 AND [Supplier_Item_No] IS NULL) OR ([Supplier_Item_No] = @Original_S" +
                "upplier_Item_No)) AND ((@IsNull_SupplierItemColor = 1 AND [SupplierItemColor] IS" +
                " NULL) OR ([SupplierItemColor] = @Original_SupplierItemColor)) AND ((@IsNull_Ins" +
                "p_Result_Reason = 1 AND [Insp_Result_Reason] IS NULL) OR ([Insp_Result_Reason] =" +
                " @Original_Insp_Result_Reason)) AND ((@IsNull_WeftYarnClass = 1 AND [WeftYarnCla" +
                "ss] IS NULL) OR ([WeftYarnClass] = @Original_WeftYarnClass)) AND ((@IsNull_WeftY" +
                "arnPercentage = 1 AND [WeftYarnPercentage] IS NULL) OR ([WeftYarnPercentage] = @" +
                "Original_WeftYarnPercentage)) AND ((@IsNull_WeftYarnStatus = 1 AND [WeftYarnStat" +
                "us] IS NULL) OR ([WeftYarnStatus] = @Original_WeftYarnStatus)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Company", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Company", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_System_Install_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "System_Install_No", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Item_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Item_No", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Item_No", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Item_No", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Item_Desc", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Item_Desc", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Item_Desc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Item_Desc", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_HdoNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HdoNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HdoNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HdoNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ProjectNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProjectNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProjectNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProjectNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IQC_Reference", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IQC_Reference", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IQC_Reference", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IQC_Reference", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Lot_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Lot_Id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Lot_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Lot_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Actual_Length", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Actual_Length", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Actual_Length", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 4, "Actual_Length", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Actual_Weight", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Actual_Weight", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Actual_Weight", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 4, "Actual_Weight", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Supplier_Width", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Supplier_Width", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Supplier_Width", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 4, "Supplier_Width", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Insp_Length", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Insp_Length", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Insp_Length", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 4, "Insp_Length", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_GM_SQM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GM_SQM", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GM_SQM", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 4, "GM_SQM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Usable_Width", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Usable_Width", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Usable_Width", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 4, "Usable_Width", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Supplier_Code", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Supplier_Code", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Supplier_Code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Supplier_Code", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Supplich_Batch", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Supplich_Batch", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Supplich_Batch", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Supplich_Batch", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Roll_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Roll_No", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Roll_No", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Roll_No", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Total_Points", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Total_Points", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Total_Points", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Total_Points", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Points_Hundred_SQM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Points_Hundred_SQM", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Points_Hundred_SQM", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 4, "Points_Hundred_SQM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Deductive_Qty", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Deductive_Qty", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Deductive_Qty", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 4, "Deductive_Qty", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Wastage", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Wastage", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Wastage", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 4, "Wastage", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Insp_Result", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Insp_Result", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Insp_Result", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Insp_Result", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Party_Insp_Result", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Party_Insp_Result", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Party_Insp_Result", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Party_Insp_Result", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Spread_Insp_Result", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Spread_Insp_Result", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Spread_Insp_Result", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Spread_Insp_Result", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Mould_Trial_Result", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mould_Trial_Result", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Mould_Trial_Result", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mould_Trial_Result", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Phy_Properties_Result", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Phy_Properties_Result", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Phy_Properties_Result", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Phy_Properties_Result", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Color_Group_Status", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Color_Group_Status", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Color_Group_Status", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Color_Group_Status", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Spread_Defect_Exist", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Spread_Defect_Exist", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Spread_Defect_Exist", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Spread_Defect_Exist", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Insp_Confirm", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Insp_Confirm", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Insp_Confirm", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Insp_Confirm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PH_Sample", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PH_Sample", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PH_Sample", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 4, "PH_Sample", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Panel_Size1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Panel_Size1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Panel_Size1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 4, "Panel_Size1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Panel_Size2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Panel_Size2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Panel_Size2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 4, "Panel_Size2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Special_Marker", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Special_Marker", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Special_Marker", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 4, "Special_Marker", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Spread_Remark", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Spread_Remark", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Spread_Remark", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Spread_Remark", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Mould_Trial_Remark", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mould_Trial_Remark", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Mould_Trial_Remark", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mould_Trial_Remark", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Stock_In_Date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Stock_In_Date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Stock_In_Date", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Stock_In_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Stock_In_Date_DateTime", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Stock_In_Date_DateTime", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Stock_In_Date_DateTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Stock_In_Date_DateTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Turn_Size", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Turn_Size", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Turn_Size", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Turn_Size", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Supplier_Length_Unit", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Supplier_Length_Unit", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Supplier_Length_Unit", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Supplier_Length_Unit", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Supplier_Width_Unit", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Supplier_Width_Unit", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Supplier_Width_Unit", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Supplier_Width_Unit", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SideToSideH_Width", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SideToSideH_Width", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SideToSideH_Width", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SideToSideH_Width", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Inspector", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inspector", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Inspector", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inspector", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Create_User", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Create_User", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Create_User", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Create_User", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Create_Date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Create_Date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Create_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Create_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Change_User", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Change_User", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Change_User", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Change_User", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Change_Date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Change_Date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Change_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Change_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Use_Status", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Use_Status", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Use_Status", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Use_Status", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LightStatus", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LightStatus", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LightStatus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LightStatus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_InvoiceNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InvoiceNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Supplier_Item_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Supplier_Item_No", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Supplier_Item_No", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Supplier_Item_No", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SupplierItemColor", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SupplierItemColor", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SupplierItemColor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SupplierItemColor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Insp_Result_Reason", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Insp_Result_Reason", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Insp_Result_Reason", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Insp_Result_Reason", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_WeftYarnClass", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WeftYarnClass", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WeftYarnClass", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WeftYarnClass", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_WeftYarnPercentage", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WeftYarnPercentage", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WeftYarnPercentage", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 5, 2, "WeftYarnPercentage", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_WeftYarnStatus", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WeftYarnStatus", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WeftYarnStatus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WeftYarnStatus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Fabric_Insp_Header] ([Company], [System_Install_No], [Item_No]" +
                ", [Item_Desc], [PO], [HdoNo], [ProjectNo], [IQC_Reference], [Lot_Id], [Actual_Le" +
                "ngth], [Actual_Weight], [Supplier_Width], [Insp_Length], [GM_SQM], [Usable_Width" +
                "], [Supplier_Code], [Supplich_Batch], [Roll_No], [Total_Points], [Points_Hundred" +
                "_SQM], [Deductive_Qty], [Wastage], [Insp_Result], [Party_Insp_Result], [Spread_I" +
                "nsp_Result], [Mould_Trial_Result], [Phy_Properties_Result], [Color_Group_Status]" +
                ", [Spread_Defect_Exist], [Insp_Confirm], [PH_Sample], [Panel_Size1], [Panel_Size" +
                "2], [Special_Marker], [Spread_Remark], [Mould_Trial_Remark], [Stock_In_Date], [S" +
                "tock_In_Date_DateTime], [Turn_Size], [Supplier_Length_Unit], [Supplier_Width_Uni" +
                "t], [SideToSideH_Width], [Inspector], [Create_User], [Create_Date], [Change_User" +
                "], [Change_Date], [Use_Status], [LightStatus], [InvoiceNo], [Supplier_Item_No], " +
                "[SupplierItemColor], [Insp_Result_Reason], [WeftYarnClass], [WeftYarnPercentage]" +
                ", [WeftYarnStatus]) VALUES (@Company, @System_Install_No, @Item_No, @Item_Desc, " +
                "@PO, @HdoNo, @ProjectNo, @IQC_Reference, @Lot_Id, @Actual_Length, @Actual_Weight" +
                ", @Supplier_Width, @Insp_Length, @GM_SQM, @Usable_Width, @Supplier_Code, @Suppli" +
                "ch_Batch, @Roll_No, @Total_Points, @Points_Hundred_SQM, @Deductive_Qty, @Wastage" +
                ", @Insp_Result, @Party_Insp_Result, @Spread_Insp_Result, @Mould_Trial_Result, @P" +
                "hy_Properties_Result, @Color_Group_Status, @Spread_Defect_Exist, @Insp_Confirm, " +
                "@PH_Sample, @Panel_Size1, @Panel_Size2, @Special_Marker, @Spread_Remark, @Mould_" +
                "Trial_Remark, @Stock_In_Date, @Stock_In_Date_DateTime, @Turn_Size, @Supplier_Len" +
                "gth_Unit, @Supplier_Width_Unit, @SideToSideH_Width, @Inspector, @Create_User, @C" +
                "reate_Date, @Change_User, @Change_Date, @Use_Status, @LightStatus, @InvoiceNo, @" +
                "Supplier_Item_No, @SupplierItemColor, @Insp_Result_Reason, @WeftYarnClass, @Weft" +
                "YarnPercentage, @WeftYarnStatus);\r\nSELECT Company, System_Install_No, Item_No, I" +
                "tem_Desc, PO, HdoNo, ProjectNo, IQC_Reference, Lot_Id, Actual_Length, Actual_Wei" +
                "ght, Supplier_Width, Insp_Length, GM_SQM, Usable_Width, Supplier_Code, Supplich_" +
                "Batch, Roll_No, Total_Points, Points_Hundred_SQM, Deductive_Qty, Wastage, Insp_R" +
                "esult, Party_Insp_Result, Spread_Insp_Result, Mould_Trial_Result, Phy_Properties" +
                "_Result, Color_Group_Status, Spread_Defect_Exist, Insp_Confirm, PH_Sample, Panel" +
                "_Size1, Panel_Size2, Special_Marker, Spread_Remark, Mould_Trial_Remark, Stock_In" +
                "_Date, Stock_In_Date_DateTime, Turn_Size, Supplier_Length_Unit, Supplier_Width_U" +
                "nit, SideToSideH_Width, Inspector, Create_User, Create_Date, Change_User, Change" +
                "_Date, Use_Status, LightStatus, InvoiceNo, Supplier_Item_No, SupplierItemColor, " +
                "Insp_Result_Reason, WeftYarnClass, WeftYarnPercentage, WeftYarnStatus FROM Fabri" +
                "c_Insp_Header WHERE (Company = @Company) AND (System_Install_No = @System_Instal" +
                "l_No)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Company", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Company", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@System_Install_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "System_Install_No", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Item_No", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Item_No", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Item_Desc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Item_Desc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HdoNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HdoNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProjectNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProjectNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IQC_Reference", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IQC_Reference", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Lot_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Lot_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Actual_Length", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 4, "Actual_Length", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Actual_Weight", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 4, "Actual_Weight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Supplier_Width", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 4, "Supplier_Width", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Insp_Length", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 4, "Insp_Length", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GM_SQM", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 4, "GM_SQM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Usable_Width", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 4, "Usable_Width", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Supplier_Code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Supplier_Code", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Supplich_Batch", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Supplich_Batch", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Roll_No", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Roll_No", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Total_Points", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Total_Points", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Points_Hundred_SQM", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 4, "Points_Hundred_SQM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Deductive_Qty", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 4, "Deductive_Qty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Wastage", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 4, "Wastage", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Insp_Result", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Insp_Result", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Party_Insp_Result", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Party_Insp_Result", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Spread_Insp_Result", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Spread_Insp_Result", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Mould_Trial_Result", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mould_Trial_Result", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Phy_Properties_Result", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Phy_Properties_Result", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Color_Group_Status", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Color_Group_Status", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Spread_Defect_Exist", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Spread_Defect_Exist", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Insp_Confirm", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Insp_Confirm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PH_Sample", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 4, "PH_Sample", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Panel_Size1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 4, "Panel_Size1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Panel_Size2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 4, "Panel_Size2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Special_Marker", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 4, "Special_Marker", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Spread_Remark", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Spread_Remark", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Mould_Trial_Remark", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mould_Trial_Remark", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Stock_In_Date", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Stock_In_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Stock_In_Date_DateTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Stock_In_Date_DateTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Turn_Size", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Turn_Size", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Supplier_Length_Unit", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Supplier_Length_Unit", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Supplier_Width_Unit", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Supplier_Width_Unit", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SideToSideH_Width", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SideToSideH_Width", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Inspector", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inspector", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Create_User", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Create_User", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Create_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Create_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Change_User", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Change_User", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Change_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Change_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Use_Status", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Use_Status", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LightStatus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LightStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Supplier_Item_No", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Supplier_Item_No", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SupplierItemColor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SupplierItemColor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Insp_Result_Reason", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Insp_Result_Reason", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WeftYarnClass", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WeftYarnClass", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WeftYarnPercentage", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 5, 2, "WeftYarnPercentage", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WeftYarnStatus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WeftYarnStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[Fabric_Insp_Header] SET [Company] = @Company, [System_Install_No] =" +
                " @System_Install_No, [Item_No] = @Item_No, [Item_Desc] = @Item_Desc, [PO] = @PO," +
                " [HdoNo] = @HdoNo, [ProjectNo] = @ProjectNo, [IQC_Reference] = @IQC_Reference, [" +
                "Lot_Id] = @Lot_Id, [Actual_Length] = @Actual_Length, [Actual_Weight] = @Actual_W" +
                "eight, [Supplier_Width] = @Supplier_Width, [Insp_Length] = @Insp_Length, [GM_SQM" +
                "] = @GM_SQM, [Usable_Width] = @Usable_Width, [Supplier_Code] = @Supplier_Code, [" +
                "Supplich_Batch] = @Supplich_Batch, [Roll_No] = @Roll_No, [Total_Points] = @Total" +
                "_Points, [Points_Hundred_SQM] = @Points_Hundred_SQM, [Deductive_Qty] = @Deductiv" +
                "e_Qty, [Wastage] = @Wastage, [Insp_Result] = @Insp_Result, [Party_Insp_Result] =" +
                " @Party_Insp_Result, [Spread_Insp_Result] = @Spread_Insp_Result, [Mould_Trial_Re" +
                "sult] = @Mould_Trial_Result, [Phy_Properties_Result] = @Phy_Properties_Result, [" +
                "Color_Group_Status] = @Color_Group_Status, [Spread_Defect_Exist] = @Spread_Defec" +
                "t_Exist, [Insp_Confirm] = @Insp_Confirm, [PH_Sample] = @PH_Sample, [Panel_Size1]" +
                " = @Panel_Size1, [Panel_Size2] = @Panel_Size2, [Special_Marker] = @Special_Marke" +
                "r, [Spread_Remark] = @Spread_Remark, [Mould_Trial_Remark] = @Mould_Trial_Remark," +
                " [Stock_In_Date] = @Stock_In_Date, [Stock_In_Date_DateTime] = @Stock_In_Date_Dat" +
                "eTime, [Turn_Size] = @Turn_Size, [Supplier_Length_Unit] = @Supplier_Length_Unit," +
                " [Supplier_Width_Unit] = @Supplier_Width_Unit, [SideToSideH_Width] = @SideToSide" +
                "H_Width, [Inspector] = @Inspector, [Create_User] = @Create_User, [Create_Date] =" +
                " @Create_Date, [Change_User] = @Change_User, [Change_Date] = @Change_Date, [Use_" +
                "Status] = @Use_Status, [LightStatus] = @LightStatus, [InvoiceNo] = @InvoiceNo, [" +
                "Supplier_Item_No] = @Supplier_Item_No, [SupplierItemColor] = @SupplierItemColor," +
                " [Insp_Result_Reason] = @Insp_Result_Reason, [WeftYarnClass] = @WeftYarnClass, [" +
                "WeftYarnPercentage] = @WeftYarnPercentage, [WeftYarnStatus] = @WeftYarnStatus WH" +
                "ERE (([Company] = @Original_Company) AND ([System_Install_No] = @Original_System" +
                "_Install_No) AND ((@IsNull_Item_No = 1 AND [Item_No] IS NULL) OR ([Item_No] = @O" +
                "riginal_Item_No)) AND ((@IsNull_Item_Desc = 1 AND [Item_Desc] IS NULL) OR ([Item" +
                "_Desc] = @Original_Item_Desc)) AND ((@IsNull_PO = 1 AND [PO] IS NULL) OR ([PO] =" +
                " @Original_PO)) AND ((@IsNull_HdoNo = 1 AND [HdoNo] IS NULL) OR ([HdoNo] = @Orig" +
                "inal_HdoNo)) AND ((@IsNull_ProjectNo = 1 AND [ProjectNo] IS NULL) OR ([ProjectNo" +
                "] = @Original_ProjectNo)) AND ((@IsNull_IQC_Reference = 1 AND [IQC_Reference] IS" +
                " NULL) OR ([IQC_Reference] = @Original_IQC_Reference)) AND ((@IsNull_Lot_Id = 1 " +
                "AND [Lot_Id] IS NULL) OR ([Lot_Id] = @Original_Lot_Id)) AND ((@IsNull_Actual_Len" +
                "gth = 1 AND [Actual_Length] IS NULL) OR ([Actual_Length] = @Original_Actual_Leng" +
                "th)) AND ((@IsNull_Actual_Weight = 1 AND [Actual_Weight] IS NULL) OR ([Actual_We" +
                "ight] = @Original_Actual_Weight)) AND ((@IsNull_Supplier_Width = 1 AND [Supplier" +
                "_Width] IS NULL) OR ([Supplier_Width] = @Original_Supplier_Width)) AND ((@IsNull" +
                "_Insp_Length = 1 AND [Insp_Length] IS NULL) OR ([Insp_Length] = @Original_Insp_L" +
                "ength)) AND ((@IsNull_GM_SQM = 1 AND [GM_SQM] IS NULL) OR ([GM_SQM] = @Original_" +
                "GM_SQM)) AND ((@IsNull_Usable_Width = 1 AND [Usable_Width] IS NULL) OR ([Usable_" +
                "Width] = @Original_Usable_Width)) AND ((@IsNull_Supplier_Code = 1 AND [Supplier_" +
                "Code] IS NULL) OR ([Supplier_Code] = @Original_Supplier_Code)) AND ((@IsNull_Sup" +
                "plich_Batch = 1 AND [Supplich_Batch] IS NULL) OR ([Supplich_Batch] = @Original_S" +
                "upplich_Batch)) AND ((@IsNull_Roll_No = 1 AND [Roll_No] IS NULL) OR ([Roll_No] =" +
                " @Original_Roll_No)) AND ((@IsNull_Total_Points = 1 AND [Total_Points] IS NULL) " +
                "OR ([Total_Points] = @Original_Total_Points)) AND ((@IsNull_Points_Hundred_SQM =" +
                " 1 AND [Points_Hundred_SQM] IS NULL) OR ([Points_Hundred_SQM] = @Original_Points" +
                "_Hundred_SQM)) AND ((@IsNull_Deductive_Qty = 1 AND [Deductive_Qty] IS NULL) OR (" +
                "[Deductive_Qty] = @Original_Deductive_Qty)) AND ((@IsNull_Wastage = 1 AND [Wasta" +
                "ge] IS NULL) OR ([Wastage] = @Original_Wastage)) AND ((@IsNull_Insp_Result = 1 A" +
                "ND [Insp_Result] IS NULL) OR ([Insp_Result] = @Original_Insp_Result)) AND ((@IsN" +
                "ull_Party_Insp_Result = 1 AND [Party_Insp_Result] IS NULL) OR ([Party_Insp_Resul" +
                "t] = @Original_Party_Insp_Result)) AND ((@IsNull_Spread_Insp_Result = 1 AND [Spr" +
                "ead_Insp_Result] IS NULL) OR ([Spread_Insp_Result] = @Original_Spread_Insp_Resul" +
                "t)) AND ((@IsNull_Mould_Trial_Result = 1 AND [Mould_Trial_Result] IS NULL) OR ([" +
                "Mould_Trial_Result] = @Original_Mould_Trial_Result)) AND ((@IsNull_Phy_Propertie" +
                "s_Result = 1 AND [Phy_Properties_Result] IS NULL) OR ([Phy_Properties_Result] = " +
                "@Original_Phy_Properties_Result)) AND ((@IsNull_Color_Group_Status = 1 AND [Colo" +
                "r_Group_Status] IS NULL) OR ([Color_Group_Status] = @Original_Color_Group_Status" +
                ")) AND ((@IsNull_Spread_Defect_Exist = 1 AND [Spread_Defect_Exist] IS NULL) OR (" +
                "[Spread_Defect_Exist] = @Original_Spread_Defect_Exist)) AND ((@IsNull_Insp_Confi" +
                "rm = 1 AND [Insp_Confirm] IS NULL) OR ([Insp_Confirm] = @Original_Insp_Confirm))" +
                " AND ((@IsNull_PH_Sample = 1 AND [PH_Sample] IS NULL) OR ([PH_Sample] = @Origina" +
                "l_PH_Sample)) AND ((@IsNull_Panel_Size1 = 1 AND [Panel_Size1] IS NULL) OR ([Pane" +
                "l_Size1] = @Original_Panel_Size1)) AND ((@IsNull_Panel_Size2 = 1 AND [Panel_Size" +
                "2] IS NULL) OR ([Panel_Size2] = @Original_Panel_Size2)) AND ((@IsNull_Special_Ma" +
                "rker = 1 AND [Special_Marker] IS NULL) OR ([Special_Marker] = @Original_Special_" +
                "Marker)) AND ((@IsNull_Spread_Remark = 1 AND [Spread_Remark] IS NULL) OR ([Sprea" +
                "d_Remark] = @Original_Spread_Remark)) AND ((@IsNull_Mould_Trial_Remark = 1 AND [" +
                "Mould_Trial_Remark] IS NULL) OR ([Mould_Trial_Remark] = @Original_Mould_Trial_Re" +
                "mark)) AND ((@IsNull_Stock_In_Date = 1 AND [Stock_In_Date] IS NULL) OR ([Stock_I" +
                "n_Date] = @Original_Stock_In_Date)) AND ((@IsNull_Stock_In_Date_DateTime = 1 AND" +
                " [Stock_In_Date_DateTime] IS NULL) OR ([Stock_In_Date_DateTime] = @Original_Stoc" +
                "k_In_Date_DateTime)) AND ((@IsNull_Turn_Size = 1 AND [Turn_Size] IS NULL) OR ([T" +
                "urn_Size] = @Original_Turn_Size)) AND ((@IsNull_Supplier_Length_Unit = 1 AND [Su" +
                "pplier_Length_Unit] IS NULL) OR ([Supplier_Length_Unit] = @Original_Supplier_Len" +
                "gth_Unit)) AND ((@IsNull_Supplier_Width_Unit = 1 AND [Supplier_Width_Unit] IS NU" +
                "LL) OR ([Supplier_Width_Unit] = @Original_Supplier_Width_Unit)) AND ((@IsNull_Si" +
                "deToSideH_Width = 1 AND [SideToSideH_Width] IS NULL) OR ([SideToSideH_Width] = @" +
                "Original_SideToSideH_Width)) AND ((@IsNull_Inspector = 1 AND [Inspector] IS NULL" +
                ") OR ([Inspector] = @Original_Inspector)) AND ((@IsNull_Create_User = 1 AND [Cre" +
                "ate_User] IS NULL) OR ([Create_User] = @Original_Create_User)) AND ((@IsNull_Cre" +
                "ate_Date = 1 AND [Create_Date] IS NULL) OR ([Create_Date] = @Original_Create_Dat" +
                "e)) AND ((@IsNull_Change_User = 1 AND [Change_User] IS NULL) OR ([Change_User] =" +
                " @Original_Change_User)) AND ((@IsNull_Change_Date = 1 AND [Change_Date] IS NULL" +
                ") OR ([Change_Date] = @Original_Change_Date)) AND ((@IsNull_Use_Status = 1 AND [" +
                "Use_Status] IS NULL) OR ([Use_Status] = @Original_Use_Status)) AND ((@IsNull_Lig" +
                "htStatus = 1 AND [LightStatus] IS NULL) OR ([LightStatus] = @Original_LightStatu" +
                "s)) AND ((@IsNull_InvoiceNo = 1 AND [InvoiceNo] IS NULL) OR ([InvoiceNo] = @Orig" +
                "inal_InvoiceNo)) AND ((@IsNull_Supplier_Item_No = 1 AND [Supplier_Item_No] IS NU" +
                "LL) OR ([Supplier_Item_No] = @Original_Supplier_Item_No)) AND ((@IsNull_Supplier" +
                "ItemColor = 1 AND [SupplierItemColor] IS NULL) OR ([SupplierItemColor] = @Origin" +
                "al_SupplierItemColor)) AND ((@IsNull_Insp_Result_Reason = 1 AND [Insp_Result_Rea" +
                "son] IS NULL) OR ([Insp_Result_Reason] = @Original_Insp_Result_Reason)) AND ((@I" +
                "sNull_WeftYarnClass = 1 AND [WeftYarnClass] IS NULL) OR ([WeftYarnClass] = @Orig" +
                "inal_WeftYarnClass)) AND ((@IsNull_WeftYarnPercentage = 1 AND [WeftYarnPercentag" +
                "e] IS NULL) OR ([WeftYarnPercentage] = @Original_WeftYarnPercentage)) AND ((@IsN" +
                "ull_WeftYarnStatus = 1 AND [WeftYarnStatus] IS NULL) OR ([WeftYarnStatus] = @Ori" +
                "ginal_WeftYarnStatus)));\r\nSELECT Company, System_Install_No, Item_No, Item_Desc," +
                " PO, HdoNo, ProjectNo, IQC_Reference, Lot_Id, Actual_Length, Actual_Weight, Supp" +
                "lier_Width, Insp_Length, GM_SQM, Usable_Width, Supplier_Code, Supplich_Batch, Ro" +
                "ll_No, Total_Points, Points_Hundred_SQM, Deductive_Qty, Wastage, Insp_Result, Pa" +
                "rty_Insp_Result, Spread_Insp_Result, Mould_Trial_Result, Phy_Properties_Result, " +
                "Color_Group_Status, Spread_Defect_Exist, Insp_Confirm, PH_Sample, Panel_Size1, P" +
                "anel_Size2, Special_Marker, Spread_Remark, Mould_Trial_Remark, Stock_In_Date, St" +
                "ock_In_Date_DateTime, Turn_Size, Supplier_Length_Unit, Supplier_Width_Unit, Side" +
                "ToSideH_Width, Inspector, Create_User, Create_Date, Change_User, Change_Date, Us" +
                "e_Status, LightStatus, InvoiceNo, Supplier_Item_No, SupplierItemColor, Insp_Resu" +
                "lt_Reason, WeftYarnClass, WeftYarnPercentage, WeftYarnStatus FROM Fabric_Insp_He" +
                "ader WHERE (Company = @Company) AND (System_Install_No = @System_Install_No)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Company", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Company", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@System_Install_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "System_Install_No", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Item_No", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Item_No", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Item_Desc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Item_Desc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HdoNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HdoNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProjectNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProjectNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IQC_Reference", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IQC_Reference", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Lot_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Lot_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Actual_Length", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 4, "Actual_Length", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Actual_Weight", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 4, "Actual_Weight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Supplier_Width", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 4, "Supplier_Width", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Insp_Length", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 4, "Insp_Length", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GM_SQM", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 4, "GM_SQM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Usable_Width", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 4, "Usable_Width", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Supplier_Code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Supplier_Code", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Supplich_Batch", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Supplich_Batch", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Roll_No", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Roll_No", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Total_Points", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Total_Points", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Points_Hundred_SQM", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 4, "Points_Hundred_SQM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Deductive_Qty", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 4, "Deductive_Qty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Wastage", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 4, "Wastage", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Insp_Result", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Insp_Result", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Party_Insp_Result", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Party_Insp_Result", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Spread_Insp_Result", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Spread_Insp_Result", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Mould_Trial_Result", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mould_Trial_Result", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Phy_Properties_Result", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Phy_Properties_Result", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Color_Group_Status", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Color_Group_Status", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Spread_Defect_Exist", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Spread_Defect_Exist", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Insp_Confirm", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Insp_Confirm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PH_Sample", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 4, "PH_Sample", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Panel_Size1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 4, "Panel_Size1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Panel_Size2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 4, "Panel_Size2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Special_Marker", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 4, "Special_Marker", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Spread_Remark", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Spread_Remark", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Mould_Trial_Remark", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mould_Trial_Remark", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Stock_In_Date", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Stock_In_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Stock_In_Date_DateTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Stock_In_Date_DateTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Turn_Size", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Turn_Size", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Supplier_Length_Unit", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Supplier_Length_Unit", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Supplier_Width_Unit", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Supplier_Width_Unit", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SideToSideH_Width", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SideToSideH_Width", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Inspector", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inspector", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Create_User", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Create_User", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Create_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Create_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Change_User", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Change_User", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Change_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Change_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Use_Status", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Use_Status", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LightStatus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LightStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Supplier_Item_No", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Supplier_Item_No", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SupplierItemColor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SupplierItemColor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Insp_Result_Reason", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Insp_Result_Reason", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WeftYarnClass", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WeftYarnClass", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WeftYarnPercentage", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 5, 2, "WeftYarnPercentage", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WeftYarnStatus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WeftYarnStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Company", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Company", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_System_Install_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "System_Install_No", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Item_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Item_No", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Item_No", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Item_No", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Item_Desc", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Item_Desc", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Item_Desc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Item_Desc", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_HdoNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HdoNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HdoNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HdoNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ProjectNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProjectNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProjectNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProjectNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IQC_Reference", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IQC_Reference", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IQC_Reference", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IQC_Reference", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Lot_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Lot_Id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Lot_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Lot_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Actual_Length", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Actual_Length", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Actual_Length", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 4, "Actual_Length", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Actual_Weight", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Actual_Weight", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Actual_Weight", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 4, "Actual_Weight", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Supplier_Width", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Supplier_Width", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Supplier_Width", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 4, "Supplier_Width", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Insp_Length", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Insp_Length", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Insp_Length", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 4, "Insp_Length", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_GM_SQM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GM_SQM", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GM_SQM", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 4, "GM_SQM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Usable_Width", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Usable_Width", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Usable_Width", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 4, "Usable_Width", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Supplier_Code", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Supplier_Code", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Supplier_Code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Supplier_Code", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Supplich_Batch", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Supplich_Batch", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Supplich_Batch", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Supplich_Batch", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Roll_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Roll_No", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Roll_No", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Roll_No", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Total_Points", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Total_Points", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Total_Points", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Total_Points", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Points_Hundred_SQM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Points_Hundred_SQM", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Points_Hundred_SQM", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 4, "Points_Hundred_SQM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Deductive_Qty", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Deductive_Qty", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Deductive_Qty", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 4, "Deductive_Qty", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Wastage", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Wastage", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Wastage", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 4, "Wastage", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Insp_Result", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Insp_Result", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Insp_Result", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Insp_Result", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Party_Insp_Result", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Party_Insp_Result", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Party_Insp_Result", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Party_Insp_Result", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Spread_Insp_Result", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Spread_Insp_Result", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Spread_Insp_Result", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Spread_Insp_Result", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Mould_Trial_Result", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mould_Trial_Result", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Mould_Trial_Result", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mould_Trial_Result", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Phy_Properties_Result", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Phy_Properties_Result", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Phy_Properties_Result", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Phy_Properties_Result", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Color_Group_Status", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Color_Group_Status", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Color_Group_Status", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Color_Group_Status", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Spread_Defect_Exist", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Spread_Defect_Exist", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Spread_Defect_Exist", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Spread_Defect_Exist", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Insp_Confirm", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Insp_Confirm", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Insp_Confirm", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Insp_Confirm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PH_Sample", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PH_Sample", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PH_Sample", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 4, "PH_Sample", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Panel_Size1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Panel_Size1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Panel_Size1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 4, "Panel_Size1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Panel_Size2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Panel_Size2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Panel_Size2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 4, "Panel_Size2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Special_Marker", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Special_Marker", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Special_Marker", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 4, "Special_Marker", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Spread_Remark", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Spread_Remark", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Spread_Remark", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Spread_Remark", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Mould_Trial_Remark", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mould_Trial_Remark", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Mould_Trial_Remark", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mould_Trial_Remark", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Stock_In_Date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Stock_In_Date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Stock_In_Date", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Stock_In_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Stock_In_Date_DateTime", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Stock_In_Date_DateTime", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Stock_In_Date_DateTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Stock_In_Date_DateTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Turn_Size", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Turn_Size", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Turn_Size", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Turn_Size", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Supplier_Length_Unit", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Supplier_Length_Unit", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Supplier_Length_Unit", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Supplier_Length_Unit", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Supplier_Width_Unit", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Supplier_Width_Unit", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Supplier_Width_Unit", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Supplier_Width_Unit", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SideToSideH_Width", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SideToSideH_Width", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SideToSideH_Width", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SideToSideH_Width", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Inspector", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inspector", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Inspector", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inspector", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Create_User", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Create_User", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Create_User", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Create_User", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Create_Date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Create_Date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Create_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Create_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Change_User", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Change_User", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Change_User", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Change_User", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Change_Date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Change_Date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Change_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Change_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Use_Status", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Use_Status", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Use_Status", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Use_Status", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LightStatus", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LightStatus", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LightStatus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LightStatus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_InvoiceNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InvoiceNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Supplier_Item_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Supplier_Item_No", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Supplier_Item_No", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Supplier_Item_No", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SupplierItemColor", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SupplierItemColor", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SupplierItemColor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SupplierItemColor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Insp_Result_Reason", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Insp_Result_Reason", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Insp_Result_Reason", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Insp_Result_Reason", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_WeftYarnClass", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WeftYarnClass", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WeftYarnClass", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WeftYarnClass", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_WeftYarnPercentage", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WeftYarnPercentage", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WeftYarnPercentage", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 5, 2, "WeftYarnPercentage", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_WeftYarnStatus", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WeftYarnStatus", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WeftYarnStatus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WeftYarnStatus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_WeftYarnWastage", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WeftYarnWastage", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WeftYarnWastage", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 5, 2, "WeftYarnWastage", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));

        
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::PH.FabricInspection.BO.Properties.Settings.Default.PH_FabricInspectionConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT Company, System_Install_No, Item_No, Item_Desc, PO, HdoNo, ProjectNo, IQC_Reference, Lot_Id, Actual_Length, Actual_Weight, Supplier_Width, Insp_Length, GM_SQM, Usable_Width, Supplier_Code, Supplich_Batch, Roll_No, Total_Points, Points_Hundred_SQM, Deductive_Qty, Wastage, Insp_Result, Party_Insp_Result, Spread_Insp_Result, Mould_Trial_Result, Phy_Properties_Result, Color_Group_Status, Spread_Defect_Exist, Insp_Confirm, PH_Sample, Panel_Size1, Panel_Size2, Special_Marker, Spread_Remark, Mould_Trial_Remark, Stock_In_Date, Stock_In_Date_DateTime, Turn_Size, Supplier_Length_Unit, Supplier_Width_Unit, SideToSideH_Width, Inspector, Create_User, Create_Date, Change_User, Change_Date, Use_Status, LightStatus, InvoiceNo, Supplier_Item_No, SupplierItemColor, Insp_Result_Reason, WeftYarnClass, WeftYarnPercentage, WeftYarnStatus FROM dbo.Fabric_Insp_Header";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(_PH_FabricInspectionDataSet.Fabric_Insp_HeaderDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual _PH_FabricInspectionDataSet.Fabric_Insp_HeaderDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            _PH_FabricInspectionDataSet.Fabric_Insp_HeaderDataTable dataTable = new _PH_FabricInspectionDataSet.Fabric_Insp_HeaderDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(_PH_FabricInspectionDataSet.Fabric_Insp_HeaderDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(_PH_FabricInspectionDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Fabric_Insp_Header");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    string Original_Company, 
                    int Original_System_Install_No, 
                    string Original_Item_No, 
                    string Original_Item_Desc, 
                    string Original_PO, 
                    string Original_HdoNo, 
                    string Original_ProjectNo, 
                    string Original_IQC_Reference, 
                    string Original_Lot_Id, 
                    global::System.Nullable<decimal> Original_Actual_Length, 
                    global::System.Nullable<decimal> Original_Actual_Weight, 
                    global::System.Nullable<decimal> Original_Supplier_Width, 
                    global::System.Nullable<decimal> Original_Insp_Length, 
                    global::System.Nullable<decimal> Original_GM_SQM, 
                    global::System.Nullable<decimal> Original_Usable_Width, 
                    string Original_Supplier_Code, 
                    string Original_Supplich_Batch, 
                    string Original_Roll_No, 
                    global::System.Nullable<int> Original_Total_Points, 
                    global::System.Nullable<decimal> Original_Points_Hundred_SQM, 
                    global::System.Nullable<decimal> Original_Deductive_Qty, 
                    global::System.Nullable<decimal> Original_Wastage, 
                    string Original_Insp_Result, 
                    string Original_Party_Insp_Result, 
                    string Original_Spread_Insp_Result, 
                    string Original_Mould_Trial_Result, 
                    string Original_Phy_Properties_Result, 
                    string Original_Color_Group_Status, 
                    string Original_Spread_Defect_Exist, 
                    string Original_Insp_Confirm, 
                    global::System.Nullable<decimal> Original_PH_Sample, 
                    global::System.Nullable<decimal> Original_Panel_Size1, 
                    global::System.Nullable<decimal> Original_Panel_Size2, 
                    global::System.Nullable<decimal> Original_Special_Marker, 
                    string Original_Spread_Remark, 
                    string Original_Mould_Trial_Remark, 
                    string Original_Stock_In_Date, 
                    global::System.Nullable<global::System.DateTime> Original_Stock_In_Date_DateTime, 
                    global::System.Nullable<int> Original_Turn_Size, 
                    string Original_Supplier_Length_Unit, 
                    string Original_Supplier_Width_Unit, 
                    global::System.Nullable<int> Original_SideToSideH_Width, 
                    string Original_Inspector, 
                    string Original_Create_User, 
                    global::System.Nullable<global::System.DateTime> Original_Create_Date, 
                    string Original_Change_User, 
                    global::System.Nullable<global::System.DateTime> Original_Change_Date, 
                    string Original_Use_Status, 
                    string Original_LightStatus, 
                    string Original_InvoiceNo, 
                    string Original_Supplier_Item_No, 
                    string Original_SupplierItemColor, 
                    string Original_Insp_Result_Reason, 
                    string Original_WeftYarnClass, 
                    global::System.Nullable<decimal> Original_WeftYarnPercentage, 
                    string Original_WeftYarnStatus) {
            if ((Original_Company == null)) {
                throw new global::System.ArgumentNullException("Original_Company");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_Company));
            }
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_System_Install_No));
            if ((Original_Item_No == null)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Item_No));
            }
            if ((Original_Item_Desc == null)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_Item_Desc));
            }
            if ((Original_PO == null)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_PO));
            }
            if ((Original_HdoNo == null)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_HdoNo));
            }
            if ((Original_ProjectNo == null)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_ProjectNo));
            }
            if ((Original_IQC_Reference == null)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_IQC_Reference));
            }
            if ((Original_Lot_Id == null)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_Lot_Id));
            }
            if ((Original_Actual_Length.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((decimal)(Original_Actual_Length.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Original_Actual_Weight.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[19].Value = ((decimal)(Original_Actual_Weight.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Original_Supplier_Width.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[21].Value = ((decimal)(Original_Supplier_Width.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Original_Insp_Length.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[23].Value = ((decimal)(Original_Insp_Length.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Original_GM_SQM.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[25].Value = ((decimal)(Original_GM_SQM.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Original_Usable_Width.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[27].Value = ((decimal)(Original_Usable_Width.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Original_Supplier_Code == null)) {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[29].Value = ((string)(Original_Supplier_Code));
            }
            if ((Original_Supplich_Batch == null)) {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[31].Value = ((string)(Original_Supplich_Batch));
            }
            if ((Original_Roll_No == null)) {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[33].Value = ((string)(Original_Roll_No));
            }
            if ((Original_Total_Points.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[35].Value = ((int)(Original_Total_Points.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((Original_Points_Hundred_SQM.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[37].Value = ((decimal)(Original_Points_Hundred_SQM.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((Original_Deductive_Qty.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[39].Value = ((decimal)(Original_Deductive_Qty.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((Original_Wastage.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[40].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[41].Value = ((decimal)(Original_Wastage.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[40].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((Original_Insp_Result == null)) {
                this.Adapter.DeleteCommand.Parameters[42].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[42].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[43].Value = ((string)(Original_Insp_Result));
            }
            if ((Original_Party_Insp_Result == null)) {
                this.Adapter.DeleteCommand.Parameters[44].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[44].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[45].Value = ((string)(Original_Party_Insp_Result));
            }
            if ((Original_Spread_Insp_Result == null)) {
                this.Adapter.DeleteCommand.Parameters[46].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[46].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[47].Value = ((string)(Original_Spread_Insp_Result));
            }
            if ((Original_Mould_Trial_Result == null)) {
                this.Adapter.DeleteCommand.Parameters[48].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[48].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[49].Value = ((string)(Original_Mould_Trial_Result));
            }
            if ((Original_Phy_Properties_Result == null)) {
                this.Adapter.DeleteCommand.Parameters[50].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[50].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[51].Value = ((string)(Original_Phy_Properties_Result));
            }
            if ((Original_Color_Group_Status == null)) {
                this.Adapter.DeleteCommand.Parameters[52].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[52].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[53].Value = ((string)(Original_Color_Group_Status));
            }
            if ((Original_Spread_Defect_Exist == null)) {
                this.Adapter.DeleteCommand.Parameters[54].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[54].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[55].Value = ((string)(Original_Spread_Defect_Exist));
            }
            if ((Original_Insp_Confirm == null)) {
                this.Adapter.DeleteCommand.Parameters[56].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[56].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[57].Value = ((string)(Original_Insp_Confirm));
            }
            if ((Original_PH_Sample.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[58].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[59].Value = ((decimal)(Original_PH_Sample.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[58].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            if ((Original_Panel_Size1.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[60].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[61].Value = ((decimal)(Original_Panel_Size1.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[60].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            if ((Original_Panel_Size2.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[62].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[63].Value = ((decimal)(Original_Panel_Size2.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[62].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            if ((Original_Special_Marker.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[64].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[65].Value = ((decimal)(Original_Special_Marker.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[64].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            if ((Original_Spread_Remark == null)) {
                this.Adapter.DeleteCommand.Parameters[66].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[66].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[67].Value = ((string)(Original_Spread_Remark));
            }
            if ((Original_Mould_Trial_Remark == null)) {
                this.Adapter.DeleteCommand.Parameters[68].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[68].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[69].Value = ((string)(Original_Mould_Trial_Remark));
            }
            if ((Original_Stock_In_Date == null)) {
                this.Adapter.DeleteCommand.Parameters[70].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[70].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[71].Value = ((string)(Original_Stock_In_Date));
            }
            if ((Original_Stock_In_Date_DateTime.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[72].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[73].Value = ((System.DateTime)(Original_Stock_In_Date_DateTime.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[72].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            if ((Original_Turn_Size.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[74].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[75].Value = ((int)(Original_Turn_Size.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[74].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            if ((Original_Supplier_Length_Unit == null)) {
                this.Adapter.DeleteCommand.Parameters[76].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[76].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[77].Value = ((string)(Original_Supplier_Length_Unit));
            }
            if ((Original_Supplier_Width_Unit == null)) {
                this.Adapter.DeleteCommand.Parameters[78].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[78].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[79].Value = ((string)(Original_Supplier_Width_Unit));
            }
            if ((Original_SideToSideH_Width.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[80].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[81].Value = ((int)(Original_SideToSideH_Width.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[80].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            if ((Original_Inspector == null)) {
                this.Adapter.DeleteCommand.Parameters[82].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[83].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[82].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[83].Value = ((string)(Original_Inspector));
            }
            if ((Original_Create_User == null)) {
                this.Adapter.DeleteCommand.Parameters[84].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[85].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[84].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[85].Value = ((string)(Original_Create_User));
            }
            if ((Original_Create_Date.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[86].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[87].Value = ((System.DateTime)(Original_Create_Date.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[86].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[87].Value = global::System.DBNull.Value;
            }
            if ((Original_Change_User == null)) {
                this.Adapter.DeleteCommand.Parameters[88].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[89].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[88].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[89].Value = ((string)(Original_Change_User));
            }
            if ((Original_Change_Date.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[90].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[91].Value = ((System.DateTime)(Original_Change_Date.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[90].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[91].Value = global::System.DBNull.Value;
            }
            if ((Original_Use_Status == null)) {
                this.Adapter.DeleteCommand.Parameters[92].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[93].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[92].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[93].Value = ((string)(Original_Use_Status));
            }
            if ((Original_LightStatus == null)) {
                this.Adapter.DeleteCommand.Parameters[94].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[95].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[94].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[95].Value = ((string)(Original_LightStatus));
            }
            if ((Original_InvoiceNo == null)) {
                this.Adapter.DeleteCommand.Parameters[96].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[97].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[96].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[97].Value = ((string)(Original_InvoiceNo));
            }
            if ((Original_Supplier_Item_No == null)) {
                this.Adapter.DeleteCommand.Parameters[98].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[99].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[98].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[99].Value = ((string)(Original_Supplier_Item_No));
            }
            if ((Original_SupplierItemColor == null)) {
                this.Adapter.DeleteCommand.Parameters[100].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[101].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[100].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[101].Value = ((string)(Original_SupplierItemColor));
            }
            if ((Original_Insp_Result_Reason == null)) {
                this.Adapter.DeleteCommand.Parameters[102].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[103].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[102].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[103].Value = ((string)(Original_Insp_Result_Reason));
            }
            if ((Original_WeftYarnClass == null)) {
                this.Adapter.DeleteCommand.Parameters[104].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[105].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[104].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[105].Value = ((string)(Original_WeftYarnClass));
            }
            if ((Original_WeftYarnPercentage.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[106].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[107].Value = ((decimal)(Original_WeftYarnPercentage.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[106].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[107].Value = global::System.DBNull.Value;
            }
            if ((Original_WeftYarnStatus == null)) {
                this.Adapter.DeleteCommand.Parameters[108].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[109].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[108].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[109].Value = ((string)(Original_WeftYarnStatus));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string Company, 
                    int System_Install_No, 
                    string Item_No, 
                    string Item_Desc, 
                    string PO, 
                    string HdoNo, 
                    string ProjectNo, 
                    string IQC_Reference, 
                    string Lot_Id, 
                    global::System.Nullable<decimal> Actual_Length, 
                    global::System.Nullable<decimal> Actual_Weight, 
                    global::System.Nullable<decimal> Supplier_Width, 
                    global::System.Nullable<decimal> Insp_Length, 
                    global::System.Nullable<decimal> GM_SQM, 
                    global::System.Nullable<decimal> Usable_Width, 
                    string Supplier_Code, 
                    string Supplich_Batch, 
                    string Roll_No, 
                    global::System.Nullable<int> Total_Points, 
                    global::System.Nullable<decimal> Points_Hundred_SQM, 
                    global::System.Nullable<decimal> Deductive_Qty, 
                    global::System.Nullable<decimal> Wastage, 
                    string Insp_Result, 
                    string Party_Insp_Result, 
                    string Spread_Insp_Result, 
                    string Mould_Trial_Result, 
                    string Phy_Properties_Result, 
                    string Color_Group_Status, 
                    string Spread_Defect_Exist, 
                    string Insp_Confirm, 
                    global::System.Nullable<decimal> PH_Sample, 
                    global::System.Nullable<decimal> Panel_Size1, 
                    global::System.Nullable<decimal> Panel_Size2, 
                    global::System.Nullable<decimal> Special_Marker, 
                    string Spread_Remark, 
                    string Mould_Trial_Remark, 
                    string Stock_In_Date, 
                    global::System.Nullable<global::System.DateTime> Stock_In_Date_DateTime, 
                    global::System.Nullable<int> Turn_Size, 
                    string Supplier_Length_Unit, 
                    string Supplier_Width_Unit, 
                    global::System.Nullable<int> SideToSideH_Width, 
                    string Inspector, 
                    string Create_User, 
                    global::System.Nullable<global::System.DateTime> Create_Date, 
                    string Change_User, 
                    global::System.Nullable<global::System.DateTime> Change_Date, 
                    string Use_Status, 
                    string LightStatus, 
                    string InvoiceNo, 
                    string Supplier_Item_No, 
                    string SupplierItemColor, 
                    string Insp_Result_Reason, 
                    string WeftYarnClass, 
                    global::System.Nullable<decimal> WeftYarnPercentage, 
                    string WeftYarnStatus) {
            if ((Company == null)) {
                throw new global::System.ArgumentNullException("Company");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Company));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(System_Install_No));
            if ((Item_No == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Item_No));
            }
            if ((Item_Desc == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Item_Desc));
            }
            if ((PO == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(PO));
            }
            if ((HdoNo == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(HdoNo));
            }
            if ((ProjectNo == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(ProjectNo));
            }
            if ((IQC_Reference == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(IQC_Reference));
            }
            if ((Lot_Id == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(Lot_Id));
            }
            if ((Actual_Length.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((decimal)(Actual_Length.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Actual_Weight.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((decimal)(Actual_Weight.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Supplier_Width.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((decimal)(Supplier_Width.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Insp_Length.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((decimal)(Insp_Length.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((GM_SQM.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((decimal)(GM_SQM.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Usable_Width.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((decimal)(Usable_Width.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Supplier_Code == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(Supplier_Code));
            }
            if ((Supplich_Batch == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(Supplich_Batch));
            }
            if ((Roll_No == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(Roll_No));
            }
            if ((Total_Points.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((int)(Total_Points.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Points_Hundred_SQM.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[19].Value = ((decimal)(Points_Hundred_SQM.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Deductive_Qty.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((decimal)(Deductive_Qty.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Wastage.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((decimal)(Wastage.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Insp_Result == null)) {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(Insp_Result));
            }
            if ((Party_Insp_Result == null)) {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(Party_Insp_Result));
            }
            if ((Spread_Insp_Result == null)) {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(Spread_Insp_Result));
            }
            if ((Mould_Trial_Result == null)) {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(Mould_Trial_Result));
            }
            if ((Phy_Properties_Result == null)) {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = ((string)(Phy_Properties_Result));
            }
            if ((Color_Group_Status == null)) {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = ((string)(Color_Group_Status));
            }
            if ((Spread_Defect_Exist == null)) {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = ((string)(Spread_Defect_Exist));
            }
            if ((Insp_Confirm == null)) {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = ((string)(Insp_Confirm));
            }
            if ((PH_Sample.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[30].Value = ((decimal)(PH_Sample.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((Panel_Size1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[31].Value = ((decimal)(Panel_Size1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((Panel_Size2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[32].Value = ((decimal)(Panel_Size2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((Special_Marker.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[33].Value = ((decimal)(Special_Marker.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((Spread_Remark == null)) {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = ((string)(Spread_Remark));
            }
            if ((Mould_Trial_Remark == null)) {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = ((string)(Mould_Trial_Remark));
            }
            if ((Stock_In_Date == null)) {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = ((string)(Stock_In_Date));
            }
            if ((Stock_In_Date_DateTime.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[37].Value = ((System.DateTime)(Stock_In_Date_DateTime.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((Turn_Size.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[38].Value = ((int)(Turn_Size.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((Supplier_Length_Unit == null)) {
                this.Adapter.InsertCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = ((string)(Supplier_Length_Unit));
            }
            if ((Supplier_Width_Unit == null)) {
                this.Adapter.InsertCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = ((string)(Supplier_Width_Unit));
            }
            if ((SideToSideH_Width.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[41].Value = ((int)(SideToSideH_Width.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((Inspector == null)) {
                this.Adapter.InsertCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = ((string)(Inspector));
            }
            if ((Create_User == null)) {
                this.Adapter.InsertCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[43].Value = ((string)(Create_User));
            }
            if ((Create_Date.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[44].Value = ((System.DateTime)(Create_Date.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((Change_User == null)) {
                this.Adapter.InsertCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[45].Value = ((string)(Change_User));
            }
            if ((Change_Date.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[46].Value = ((System.DateTime)(Change_Date.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((Use_Status == null)) {
                this.Adapter.InsertCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[47].Value = ((string)(Use_Status));
            }
            if ((LightStatus == null)) {
                this.Adapter.InsertCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[48].Value = ((string)(LightStatus));
            }
            if ((InvoiceNo == null)) {
                this.Adapter.InsertCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[49].Value = ((string)(InvoiceNo));
            }
            if ((Supplier_Item_No == null)) {
                this.Adapter.InsertCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[50].Value = ((string)(Supplier_Item_No));
            }
            if ((SupplierItemColor == null)) {
                this.Adapter.InsertCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[51].Value = ((string)(SupplierItemColor));
            }
            if ((Insp_Result_Reason == null)) {
                this.Adapter.InsertCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[52].Value = ((string)(Insp_Result_Reason));
            }
            if ((WeftYarnClass == null)) {
                this.Adapter.InsertCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[53].Value = ((string)(WeftYarnClass));
            }
            if ((WeftYarnPercentage.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[54].Value = ((decimal)(WeftYarnPercentage.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((WeftYarnStatus == null)) {
                this.Adapter.InsertCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[55].Value = ((string)(WeftYarnStatus));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Company, 
                    int System_Install_No, 
                    string Item_No, 
                    string Item_Desc, 
                    string PO, 
                    string HdoNo, 
                    string ProjectNo, 
                    string IQC_Reference, 
                    string Lot_Id, 
                    global::System.Nullable<decimal> Actual_Length, 
                    global::System.Nullable<decimal> Actual_Weight, 
                    global::System.Nullable<decimal> Supplier_Width, 
                    global::System.Nullable<decimal> Insp_Length, 
                    global::System.Nullable<decimal> GM_SQM, 
                    global::System.Nullable<decimal> Usable_Width, 
                    string Supplier_Code, 
                    string Supplich_Batch, 
                    string Roll_No, 
                    global::System.Nullable<int> Total_Points, 
                    global::System.Nullable<decimal> Points_Hundred_SQM, 
                    global::System.Nullable<decimal> Deductive_Qty, 
                    global::System.Nullable<decimal> Wastage, 
                    string Insp_Result, 
                    string Party_Insp_Result, 
                    string Spread_Insp_Result, 
                    string Mould_Trial_Result, 
                    string Phy_Properties_Result, 
                    string Color_Group_Status, 
                    string Spread_Defect_Exist, 
                    string Insp_Confirm, 
                    global::System.Nullable<decimal> PH_Sample, 
                    global::System.Nullable<decimal> Panel_Size1, 
                    global::System.Nullable<decimal> Panel_Size2, 
                    global::System.Nullable<decimal> Special_Marker, 
                    string Spread_Remark, 
                    string Mould_Trial_Remark, 
                    string Stock_In_Date, 
                    global::System.Nullable<global::System.DateTime> Stock_In_Date_DateTime, 
                    global::System.Nullable<int> Turn_Size, 
                    string Supplier_Length_Unit, 
                    string Supplier_Width_Unit, 
                    global::System.Nullable<int> SideToSideH_Width, 
                    string Inspector, 
                    string Create_User, 
                    global::System.Nullable<global::System.DateTime> Create_Date, 
                    string Change_User, 
                    global::System.Nullable<global::System.DateTime> Change_Date, 
                    string Use_Status, 
                    string LightStatus, 
                    string InvoiceNo, 
                    string Supplier_Item_No, 
                    string SupplierItemColor, 
                    string Insp_Result_Reason, 
                    string WeftYarnClass, 
                    global::System.Nullable<decimal> WeftYarnPercentage, 
                    string WeftYarnStatus, 
                    string Original_Company, 
                    int Original_System_Install_No, 
                    string Original_Item_No, 
                    string Original_Item_Desc, 
                    string Original_PO, 
                    string Original_HdoNo, 
                    string Original_ProjectNo, 
                    string Original_IQC_Reference, 
                    string Original_Lot_Id, 
                    global::System.Nullable<decimal> Original_Actual_Length, 
                    global::System.Nullable<decimal> Original_Actual_Weight, 
                    global::System.Nullable<decimal> Original_Supplier_Width, 
                    global::System.Nullable<decimal> Original_Insp_Length, 
                    global::System.Nullable<decimal> Original_GM_SQM, 
                    global::System.Nullable<decimal> Original_Usable_Width, 
                    string Original_Supplier_Code, 
                    string Original_Supplich_Batch, 
                    string Original_Roll_No, 
                    global::System.Nullable<int> Original_Total_Points, 
                    global::System.Nullable<decimal> Original_Points_Hundred_SQM, 
                    global::System.Nullable<decimal> Original_Deductive_Qty, 
                    global::System.Nullable<decimal> Original_Wastage, 
                    string Original_Insp_Result, 
                    string Original_Party_Insp_Result, 
                    string Original_Spread_Insp_Result, 
                    string Original_Mould_Trial_Result, 
                    string Original_Phy_Properties_Result, 
                    string Original_Color_Group_Status, 
                    string Original_Spread_Defect_Exist, 
                    string Original_Insp_Confirm, 
                    global::System.Nullable<decimal> Original_PH_Sample, 
                    global::System.Nullable<decimal> Original_Panel_Size1, 
                    global::System.Nullable<decimal> Original_Panel_Size2, 
                    global::System.Nullable<decimal> Original_Special_Marker, 
                    string Original_Spread_Remark, 
                    string Original_Mould_Trial_Remark, 
                    string Original_Stock_In_Date, 
                    global::System.Nullable<global::System.DateTime> Original_Stock_In_Date_DateTime, 
                    global::System.Nullable<int> Original_Turn_Size, 
                    string Original_Supplier_Length_Unit, 
                    string Original_Supplier_Width_Unit, 
                    global::System.Nullable<int> Original_SideToSideH_Width, 
                    string Original_Inspector, 
                    string Original_Create_User, 
                    global::System.Nullable<global::System.DateTime> Original_Create_Date, 
                    string Original_Change_User, 
                    global::System.Nullable<global::System.DateTime> Original_Change_Date, 
                    string Original_Use_Status, 
                    string Original_LightStatus, 
                    string Original_InvoiceNo, 
                    string Original_Supplier_Item_No, 
                    string Original_SupplierItemColor, 
                    string Original_Insp_Result_Reason, 
                    string Original_WeftYarnClass, 
                    global::System.Nullable<decimal> Original_WeftYarnPercentage, 
                    string Original_WeftYarnStatus) {
            if ((Company == null)) {
                throw new global::System.ArgumentNullException("Company");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Company));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(System_Install_No));
            if ((Item_No == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Item_No));
            }
            if ((Item_Desc == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Item_Desc));
            }
            if ((PO == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(PO));
            }
            if ((HdoNo == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(HdoNo));
            }
            if ((ProjectNo == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(ProjectNo));
            }
            if ((IQC_Reference == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(IQC_Reference));
            }
            if ((Lot_Id == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Lot_Id));
            }
            if ((Actual_Length.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(Actual_Length.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Actual_Weight.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(Actual_Weight.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Supplier_Width.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((decimal)(Supplier_Width.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Insp_Length.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(Insp_Length.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((GM_SQM.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((decimal)(GM_SQM.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Usable_Width.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((decimal)(Usable_Width.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Supplier_Code == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Supplier_Code));
            }
            if ((Supplich_Batch == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Supplich_Batch));
            }
            if ((Roll_No == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Roll_No));
            }
            if ((Total_Points.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((int)(Total_Points.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Points_Hundred_SQM.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((decimal)(Points_Hundred_SQM.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Deductive_Qty.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((decimal)(Deductive_Qty.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Wastage.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((decimal)(Wastage.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Insp_Result == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Insp_Result));
            }
            if ((Party_Insp_Result == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Party_Insp_Result));
            }
            if ((Spread_Insp_Result == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Spread_Insp_Result));
            }
            if ((Mould_Trial_Result == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Mould_Trial_Result));
            }
            if ((Phy_Properties_Result == null)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Phy_Properties_Result));
            }
            if ((Color_Group_Status == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(Color_Group_Status));
            }
            if ((Spread_Defect_Exist == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Spread_Defect_Exist));
            }
            if ((Insp_Confirm == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(Insp_Confirm));
            }
            if ((PH_Sample.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((decimal)(PH_Sample.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((Panel_Size1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((decimal)(Panel_Size1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((Panel_Size2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((decimal)(Panel_Size2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((Special_Marker.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((decimal)(Special_Marker.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((Spread_Remark == null)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(Spread_Remark));
            }
            if ((Mould_Trial_Remark == null)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(Mould_Trial_Remark));
            }
            if ((Stock_In_Date == null)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(Stock_In_Date));
            }
            if ((Stock_In_Date_DateTime.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((System.DateTime)(Stock_In_Date_DateTime.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((Turn_Size.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((int)(Turn_Size.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((Supplier_Length_Unit == null)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((string)(Supplier_Length_Unit));
            }
            if ((Supplier_Width_Unit == null)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((string)(Supplier_Width_Unit));
            }
            if ((SideToSideH_Width.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((int)(SideToSideH_Width.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((Inspector == null)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((string)(Inspector));
            }
            if ((Create_User == null)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((string)(Create_User));
            }
            if ((Create_Date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((System.DateTime)(Create_Date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((Change_User == null)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((string)(Change_User));
            }
            if ((Change_Date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((System.DateTime)(Change_Date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((Use_Status == null)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((string)(Use_Status));
            }
            if ((LightStatus == null)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((string)(LightStatus));
            }
            if ((InvoiceNo == null)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((string)(InvoiceNo));
            }
            if ((Supplier_Item_No == null)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((string)(Supplier_Item_No));
            }
            if ((SupplierItemColor == null)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((string)(SupplierItemColor));
            }
            if ((Insp_Result_Reason == null)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((string)(Insp_Result_Reason));
            }
            if ((WeftYarnClass == null)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((string)(WeftYarnClass));
            }
            if ((WeftYarnPercentage.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((decimal)(WeftYarnPercentage.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((WeftYarnStatus == null)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((string)(WeftYarnStatus));
            }
            if ((Original_Company == null)) {
                throw new global::System.ArgumentNullException("Original_Company");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((string)(Original_Company));
            }
            this.Adapter.UpdateCommand.Parameters[57].Value = ((int)(Original_System_Install_No));
            if ((Original_Item_No == null)) {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[59].Value = ((string)(Original_Item_No));
            }
            if ((Original_Item_Desc == null)) {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[61].Value = ((string)(Original_Item_Desc));
            }
            if ((Original_PO == null)) {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[63].Value = ((string)(Original_PO));
            }
            if ((Original_HdoNo == null)) {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[65].Value = ((string)(Original_HdoNo));
            }
            if ((Original_ProjectNo == null)) {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[67].Value = ((string)(Original_ProjectNo));
            }
            if ((Original_IQC_Reference == null)) {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[69].Value = ((string)(Original_IQC_Reference));
            }
            if ((Original_Lot_Id == null)) {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[71].Value = ((string)(Original_Lot_Id));
            }
            if ((Original_Actual_Length.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[73].Value = ((decimal)(Original_Actual_Length.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            if ((Original_Actual_Weight.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[75].Value = ((decimal)(Original_Actual_Weight.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            if ((Original_Supplier_Width.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[77].Value = ((decimal)(Original_Supplier_Width.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            if ((Original_Insp_Length.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[79].Value = ((decimal)(Original_Insp_Length.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            if ((Original_GM_SQM.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[81].Value = ((decimal)(Original_GM_SQM.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            if ((Original_Usable_Width.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[83].Value = ((decimal)(Original_Usable_Width.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[83].Value = global::System.DBNull.Value;
            }
            if ((Original_Supplier_Code == null)) {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[85].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[85].Value = ((string)(Original_Supplier_Code));
            }
            if ((Original_Supplich_Batch == null)) {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[87].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[87].Value = ((string)(Original_Supplich_Batch));
            }
            if ((Original_Roll_No == null)) {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[89].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[89].Value = ((string)(Original_Roll_No));
            }
            if ((Original_Total_Points.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[91].Value = ((int)(Original_Total_Points.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[91].Value = global::System.DBNull.Value;
            }
            if ((Original_Points_Hundred_SQM.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[92].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[93].Value = ((decimal)(Original_Points_Hundred_SQM.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[92].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[93].Value = global::System.DBNull.Value;
            }
            if ((Original_Deductive_Qty.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[94].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[95].Value = ((decimal)(Original_Deductive_Qty.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[94].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[95].Value = global::System.DBNull.Value;
            }
            if ((Original_Wastage.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[96].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[97].Value = ((decimal)(Original_Wastage.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[96].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[97].Value = global::System.DBNull.Value;
            }
            if ((Original_Insp_Result == null)) {
                this.Adapter.UpdateCommand.Parameters[98].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[99].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[98].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[99].Value = ((string)(Original_Insp_Result));
            }
            if ((Original_Party_Insp_Result == null)) {
                this.Adapter.UpdateCommand.Parameters[100].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[101].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[100].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[101].Value = ((string)(Original_Party_Insp_Result));
            }
            if ((Original_Spread_Insp_Result == null)) {
                this.Adapter.UpdateCommand.Parameters[102].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[103].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[102].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[103].Value = ((string)(Original_Spread_Insp_Result));
            }
            if ((Original_Mould_Trial_Result == null)) {
                this.Adapter.UpdateCommand.Parameters[104].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[105].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[104].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[105].Value = ((string)(Original_Mould_Trial_Result));
            }
            if ((Original_Phy_Properties_Result == null)) {
                this.Adapter.UpdateCommand.Parameters[106].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[107].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[106].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[107].Value = ((string)(Original_Phy_Properties_Result));
            }
            if ((Original_Color_Group_Status == null)) {
                this.Adapter.UpdateCommand.Parameters[108].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[109].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[108].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[109].Value = ((string)(Original_Color_Group_Status));
            }
            if ((Original_Spread_Defect_Exist == null)) {
                this.Adapter.UpdateCommand.Parameters[110].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[111].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[110].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[111].Value = ((string)(Original_Spread_Defect_Exist));
            }
            if ((Original_Insp_Confirm == null)) {
                this.Adapter.UpdateCommand.Parameters[112].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[113].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[112].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[113].Value = ((string)(Original_Insp_Confirm));
            }
            if ((Original_PH_Sample.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[114].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[115].Value = ((decimal)(Original_PH_Sample.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[114].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[115].Value = global::System.DBNull.Value;
            }
            if ((Original_Panel_Size1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[116].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[117].Value = ((decimal)(Original_Panel_Size1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[116].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[117].Value = global::System.DBNull.Value;
            }
            if ((Original_Panel_Size2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[118].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[119].Value = ((decimal)(Original_Panel_Size2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[118].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[119].Value = global::System.DBNull.Value;
            }
            if ((Original_Special_Marker.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[120].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[121].Value = ((decimal)(Original_Special_Marker.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[120].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[121].Value = global::System.DBNull.Value;
            }
            if ((Original_Spread_Remark == null)) {
                this.Adapter.UpdateCommand.Parameters[122].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[123].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[122].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[123].Value = ((string)(Original_Spread_Remark));
            }
            if ((Original_Mould_Trial_Remark == null)) {
                this.Adapter.UpdateCommand.Parameters[124].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[125].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[124].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[125].Value = ((string)(Original_Mould_Trial_Remark));
            }
            if ((Original_Stock_In_Date == null)) {
                this.Adapter.UpdateCommand.Parameters[126].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[127].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[126].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[127].Value = ((string)(Original_Stock_In_Date));
            }
            if ((Original_Stock_In_Date_DateTime.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[128].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[129].Value = ((System.DateTime)(Original_Stock_In_Date_DateTime.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[128].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[129].Value = global::System.DBNull.Value;
            }
            if ((Original_Turn_Size.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[130].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[131].Value = ((int)(Original_Turn_Size.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[130].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[131].Value = global::System.DBNull.Value;
            }
            if ((Original_Supplier_Length_Unit == null)) {
                this.Adapter.UpdateCommand.Parameters[132].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[133].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[132].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[133].Value = ((string)(Original_Supplier_Length_Unit));
            }
            if ((Original_Supplier_Width_Unit == null)) {
                this.Adapter.UpdateCommand.Parameters[134].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[135].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[134].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[135].Value = ((string)(Original_Supplier_Width_Unit));
            }
            if ((Original_SideToSideH_Width.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[136].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[137].Value = ((int)(Original_SideToSideH_Width.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[136].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[137].Value = global::System.DBNull.Value;
            }
            if ((Original_Inspector == null)) {
                this.Adapter.UpdateCommand.Parameters[138].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[139].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[138].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[139].Value = ((string)(Original_Inspector));
            }
            if ((Original_Create_User == null)) {
                this.Adapter.UpdateCommand.Parameters[140].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[141].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[140].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[141].Value = ((string)(Original_Create_User));
            }
            if ((Original_Create_Date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[142].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[143].Value = ((System.DateTime)(Original_Create_Date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[142].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[143].Value = global::System.DBNull.Value;
            }
            if ((Original_Change_User == null)) {
                this.Adapter.UpdateCommand.Parameters[144].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[145].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[144].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[145].Value = ((string)(Original_Change_User));
            }
            if ((Original_Change_Date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[146].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[147].Value = ((System.DateTime)(Original_Change_Date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[146].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[147].Value = global::System.DBNull.Value;
            }
            if ((Original_Use_Status == null)) {
                this.Adapter.UpdateCommand.Parameters[148].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[149].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[148].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[149].Value = ((string)(Original_Use_Status));
            }
            if ((Original_LightStatus == null)) {
                this.Adapter.UpdateCommand.Parameters[150].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[151].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[150].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[151].Value = ((string)(Original_LightStatus));
            }
            if ((Original_InvoiceNo == null)) {
                this.Adapter.UpdateCommand.Parameters[152].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[153].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[152].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[153].Value = ((string)(Original_InvoiceNo));
            }
            if ((Original_Supplier_Item_No == null)) {
                this.Adapter.UpdateCommand.Parameters[154].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[155].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[154].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[155].Value = ((string)(Original_Supplier_Item_No));
            }
            if ((Original_SupplierItemColor == null)) {
                this.Adapter.UpdateCommand.Parameters[156].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[157].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[156].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[157].Value = ((string)(Original_SupplierItemColor));
            }
            if ((Original_Insp_Result_Reason == null)) {
                this.Adapter.UpdateCommand.Parameters[158].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[159].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[158].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[159].Value = ((string)(Original_Insp_Result_Reason));
            }
            if ((Original_WeftYarnClass == null)) {
                this.Adapter.UpdateCommand.Parameters[160].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[161].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[160].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[161].Value = ((string)(Original_WeftYarnClass));
            }
            if ((Original_WeftYarnPercentage.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[162].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[163].Value = ((decimal)(Original_WeftYarnPercentage.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[162].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[163].Value = global::System.DBNull.Value;
            }
            if ((Original_WeftYarnStatus == null)) {
                this.Adapter.UpdateCommand.Parameters[164].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[165].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[164].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[165].Value = ((string)(Original_WeftYarnStatus));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Item_No, 
                    string Item_Desc, 
                    string PO, 
                    string HdoNo, 
                    string ProjectNo, 
                    string IQC_Reference, 
                    string Lot_Id, 
                    global::System.Nullable<decimal> Actual_Length, 
                    global::System.Nullable<decimal> Actual_Weight, 
                    global::System.Nullable<decimal> Supplier_Width, 
                    global::System.Nullable<decimal> Insp_Length, 
                    global::System.Nullable<decimal> GM_SQM, 
                    global::System.Nullable<decimal> Usable_Width, 
                    string Supplier_Code, 
                    string Supplich_Batch, 
                    string Roll_No, 
                    global::System.Nullable<int> Total_Points, 
                    global::System.Nullable<decimal> Points_Hundred_SQM, 
                    global::System.Nullable<decimal> Deductive_Qty, 
                    global::System.Nullable<decimal> Wastage, 
                    string Insp_Result, 
                    string Party_Insp_Result, 
                    string Spread_Insp_Result, 
                    string Mould_Trial_Result, 
                    string Phy_Properties_Result, 
                    string Color_Group_Status, 
                    string Spread_Defect_Exist, 
                    string Insp_Confirm, 
                    global::System.Nullable<decimal> PH_Sample, 
                    global::System.Nullable<decimal> Panel_Size1, 
                    global::System.Nullable<decimal> Panel_Size2, 
                    global::System.Nullable<decimal> Special_Marker, 
                    string Spread_Remark, 
                    string Mould_Trial_Remark, 
                    string Stock_In_Date, 
                    global::System.Nullable<global::System.DateTime> Stock_In_Date_DateTime, 
                    global::System.Nullable<int> Turn_Size, 
                    string Supplier_Length_Unit, 
                    string Supplier_Width_Unit, 
                    global::System.Nullable<int> SideToSideH_Width, 
                    string Inspector, 
                    string Create_User, 
                    global::System.Nullable<global::System.DateTime> Create_Date, 
                    string Change_User, 
                    global::System.Nullable<global::System.DateTime> Change_Date, 
                    string Use_Status, 
                    string LightStatus, 
                    string InvoiceNo, 
                    string Supplier_Item_No, 
                    string SupplierItemColor, 
                    string Insp_Result_Reason, 
                    string WeftYarnClass, 
                    global::System.Nullable<decimal> WeftYarnPercentage, 
                    string WeftYarnStatus, 
                    string Original_Company, 
                    int Original_System_Install_No, 
                    string Original_Item_No, 
                    string Original_Item_Desc, 
                    string Original_PO, 
                    string Original_HdoNo, 
                    string Original_ProjectNo, 
                    string Original_IQC_Reference, 
                    string Original_Lot_Id, 
                    global::System.Nullable<decimal> Original_Actual_Length, 
                    global::System.Nullable<decimal> Original_Actual_Weight, 
                    global::System.Nullable<decimal> Original_Supplier_Width, 
                    global::System.Nullable<decimal> Original_Insp_Length, 
                    global::System.Nullable<decimal> Original_GM_SQM, 
                    global::System.Nullable<decimal> Original_Usable_Width, 
                    string Original_Supplier_Code, 
                    string Original_Supplich_Batch, 
                    string Original_Roll_No, 
                    global::System.Nullable<int> Original_Total_Points, 
                    global::System.Nullable<decimal> Original_Points_Hundred_SQM, 
                    global::System.Nullable<decimal> Original_Deductive_Qty, 
                    global::System.Nullable<decimal> Original_Wastage, 
                    string Original_Insp_Result, 
                    string Original_Party_Insp_Result, 
                    string Original_Spread_Insp_Result, 
                    string Original_Mould_Trial_Result, 
                    string Original_Phy_Properties_Result, 
                    string Original_Color_Group_Status, 
                    string Original_Spread_Defect_Exist, 
                    string Original_Insp_Confirm, 
                    global::System.Nullable<decimal> Original_PH_Sample, 
                    global::System.Nullable<decimal> Original_Panel_Size1, 
                    global::System.Nullable<decimal> Original_Panel_Size2, 
                    global::System.Nullable<decimal> Original_Special_Marker, 
                    string Original_Spread_Remark, 
                    string Original_Mould_Trial_Remark, 
                    string Original_Stock_In_Date, 
                    global::System.Nullable<global::System.DateTime> Original_Stock_In_Date_DateTime, 
                    global::System.Nullable<int> Original_Turn_Size, 
                    string Original_Supplier_Length_Unit, 
                    string Original_Supplier_Width_Unit, 
                    global::System.Nullable<int> Original_SideToSideH_Width, 
                    string Original_Inspector, 
                    string Original_Create_User, 
                    global::System.Nullable<global::System.DateTime> Original_Create_Date, 
                    string Original_Change_User, 
                    global::System.Nullable<global::System.DateTime> Original_Change_Date, 
                    string Original_Use_Status, 
                    string Original_LightStatus, 
                    string Original_InvoiceNo, 
                    string Original_Supplier_Item_No, 
                    string Original_SupplierItemColor, 
                    string Original_Insp_Result_Reason, 
                    string Original_WeftYarnClass, 
                    global::System.Nullable<decimal> Original_WeftYarnPercentage, 
                    string Original_WeftYarnStatus) {
            return this.Update(Original_Company, Original_System_Install_No, Item_No, Item_Desc, PO, HdoNo, ProjectNo, IQC_Reference, Lot_Id, Actual_Length, Actual_Weight, Supplier_Width, Insp_Length, GM_SQM, Usable_Width, Supplier_Code, Supplich_Batch, Roll_No, Total_Points, Points_Hundred_SQM, Deductive_Qty, Wastage, Insp_Result, Party_Insp_Result, Spread_Insp_Result, Mould_Trial_Result, Phy_Properties_Result, Color_Group_Status, Spread_Defect_Exist, Insp_Confirm, PH_Sample, Panel_Size1, Panel_Size2, Special_Marker, Spread_Remark, Mould_Trial_Remark, Stock_In_Date, Stock_In_Date_DateTime, Turn_Size, Supplier_Length_Unit, Supplier_Width_Unit, SideToSideH_Width, Inspector, Create_User, Create_Date, Change_User, Change_Date, Use_Status, LightStatus, InvoiceNo, Supplier_Item_No, SupplierItemColor, Insp_Result_Reason, WeftYarnClass, WeftYarnPercentage, WeftYarnStatus, Original_Company, Original_System_Install_No, Original_Item_No, Original_Item_Desc, Original_PO, Original_HdoNo, Original_ProjectNo, Original_IQC_Reference, Original_Lot_Id, Original_Actual_Length, Original_Actual_Weight, Original_Supplier_Width, Original_Insp_Length, Original_GM_SQM, Original_Usable_Width, Original_Supplier_Code, Original_Supplich_Batch, Original_Roll_No, Original_Total_Points, Original_Points_Hundred_SQM, Original_Deductive_Qty, Original_Wastage, Original_Insp_Result, Original_Party_Insp_Result, Original_Spread_Insp_Result, Original_Mould_Trial_Result, Original_Phy_Properties_Result, Original_Color_Group_Status, Original_Spread_Defect_Exist, Original_Insp_Confirm, Original_PH_Sample, Original_Panel_Size1, Original_Panel_Size2, Original_Special_Marker, Original_Spread_Remark, Original_Mould_Trial_Remark, Original_Stock_In_Date, Original_Stock_In_Date_DateTime, Original_Turn_Size, Original_Supplier_Length_Unit, Original_Supplier_Width_Unit, Original_SideToSideH_Width, Original_Inspector, Original_Create_User, Original_Create_Date, Original_Change_User, Original_Change_Date, Original_Use_Status, Original_LightStatus, Original_InvoiceNo, Original_Supplier_Item_No, Original_SupplierItemColor, Original_Insp_Result_Reason, Original_WeftYarnClass, Original_WeftYarnPercentage, Original_WeftYarnStatus);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private Fabric_Insp_HeaderTableAdapter _fabric_Insp_HeaderTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public Fabric_Insp_HeaderTableAdapter Fabric_Insp_HeaderTableAdapter {
            get {
                return this._fabric_Insp_HeaderTableAdapter;
            }
            set {
                if (((this._fabric_Insp_HeaderTableAdapter != null) 
                            && (this.TableAdapterInstanceCount == 1))) {
                    this._fabric_Insp_HeaderTableAdapter = value;
                    return;
                }
                if (((value != null) 
                            && (this.MatchTableAdapterConnection(value.Connection) == false))) {
                    throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                            "tring.");
                }
                this._fabric_Insp_HeaderTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._fabric_Insp_HeaderTableAdapter != null) 
                            && (this._fabric_Insp_HeaderTableAdapter.Connection != null))) {
                    return this._fabric_Insp_HeaderTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._fabric_Insp_HeaderTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateUpdatedRows(_PH_FabricInspectionDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._fabric_Insp_HeaderTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Fabric_Insp_Header.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._fabric_Insp_HeaderTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateInsertedRows(_PH_FabricInspectionDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._fabric_Insp_HeaderTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Fabric_Insp_Header.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._fabric_Insp_HeaderTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateDeletedRows(_PH_FabricInspectionDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._fabric_Insp_HeaderTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Fabric_Insp_Header.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._fabric_Insp_HeaderTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int UpdateAll(_PH_FabricInspectionDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Closed) 
                        == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._fabric_Insp_HeaderTableAdapter != null)) {
                    revertConnections.Add(this._fabric_Insp_HeaderTableAdapter, this._fabric_Insp_HeaderTableAdapter.Connection);
                    this._fabric_Insp_HeaderTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._fabric_Insp_HeaderTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._fabric_Insp_HeaderTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._fabric_Insp_HeaderTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._fabric_Insp_HeaderTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._fabric_Insp_HeaderTableAdapter != null)) {
                    this._fabric_Insp_HeaderTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._fabric_Insp_HeaderTableAdapter]));
                    this._fabric_Insp_HeaderTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool IsChildAndParent(global::System.Data.DataRow child, global::System.Data.DataRow parent) {
                global::System.Diagnostics.Debug.Assert((child != null));
                global::System.Diagnostics.Debug.Assert((parent != null));
                global::System.Data.DataRow newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((newParent != null) 
                            && ((object.ReferenceEquals(newParent, child) == false) 
                            && (object.ReferenceEquals(newParent, parent) == false))); 
                ) {
                    newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }
                if ((newParent == null)) {
                    for (newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original); ((newParent != null) 
                                && ((object.ReferenceEquals(newParent, child) == false) 
                                && (object.ReferenceEquals(newParent, parent) == false))); 
                    ) {
                        newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }
                if (object.ReferenceEquals(newParent, parent)) {
                    return true;
                }
                return false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                // Is row1 the child or grandchild of row2
                if (this.IsChildAndParent(row1, row2)) {
                    return this._childFirst;
                }

                // Is row2 the child or grandchild of row1
                if (this.IsChildAndParent(row2, row1)) {
                    return (-1 * this._childFirst);
                }
                return 0;
            }
        }
    }
}

#pragma warning restore 1591