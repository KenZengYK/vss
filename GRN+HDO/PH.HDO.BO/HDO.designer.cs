#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.8806
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PH.HDO.BO
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="PH.HDO")]
	public partial class HDODataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertHDOInvoice(HDOInvoice instance);
    partial void UpdateHDOInvoice(HDOInvoice instance);
    partial void DeleteHDOInvoice(HDOInvoice instance);
    partial void InsertIDInvoice(IDInvoice instance);
    partial void UpdateIDInvoice(IDInvoice instance);
    partial void DeleteIDInvoice(IDInvoice instance);
    partial void InsertStock_In(Stock_In instance);
    partial void UpdateStock_In(Stock_In instance);
    partial void DeleteStock_In(Stock_In instance);
    partial void InsertStock_Out(Stock_Out instance);
    partial void UpdateStock_Out(Stock_Out instance);
    partial void DeleteStock_Out(Stock_Out instance);
    partial void InsertStockBalanceLog(StockBalanceLog instance);
    partial void UpdateStockBalanceLog(StockBalanceLog instance);
    partial void DeleteStockBalanceLog(StockBalanceLog instance);
    partial void InsertStock_Balance(Stock_Balance instance);
    partial void UpdateStock_Balance(Stock_Balance instance);
    partial void DeleteStock_Balance(Stock_Balance instance);
    partial void InsertStock_InKB(Stock_InKB instance);
    partial void UpdateStock_InKB(Stock_InKB instance);
    partial void DeleteStock_InKB(Stock_InKB instance);
    partial void InsertStock_OutKB(Stock_OutKB instance);
    partial void UpdateStock_OutKB(Stock_OutKB instance);
    partial void DeleteStock_OutKB(Stock_OutKB instance);
    partial void InsertStock_BalanceKB(Stock_BalanceKB instance);
    partial void UpdateStock_BalanceKB(Stock_BalanceKB instance);
    partial void DeleteStock_BalanceKB(Stock_BalanceKB instance);
    partial void InsertHDOQuantity(HDOQuantity instance);
    partial void UpdateHDOQuantity(HDOQuantity instance);
    partial void DeleteHDOQuantity(HDOQuantity instance);
    partial void InsertHSCodeAveragePrice(HSCodeAveragePrice instance);
    partial void UpdateHSCodeAveragePrice(HSCodeAveragePrice instance);
    partial void DeleteHSCodeAveragePrice(HSCodeAveragePrice instance);
    partial void InsertContractFull(ContractFull instance);
    partial void UpdateContractFull(ContractFull instance);
    partial void DeleteContractFull(ContractFull instance);
    partial void InsertContractInfo(ContractInfo instance);
    partial void UpdateContractInfo(ContractInfo instance);
    partial void DeleteContractInfo(ContractInfo instance);
    partial void InsertContractInfoDetail(ContractInfoDetail instance);
    partial void UpdateContractInfoDetail(ContractInfoDetail instance);
    partial void DeleteContractInfoDetail(ContractInfoDetail instance);
    partial void InsertContractItem(ContractItem instance);
    partial void UpdateContractItem(ContractItem instance);
    partial void DeleteContractItem(ContractItem instance);
    partial void InsertGrnImported(GrnImported instance);
    partial void UpdateGrnImported(GrnImported instance);
    partial void DeleteGrnImported(GrnImported instance);
    partial void InsertHDOHandling(HDOHandling instance);
    partial void UpdateHDOHandling(HDOHandling instance);
    partial void DeleteHDOHandling(HDOHandling instance);
    partial void InsertHDOReleasedDateInfomation(HDOReleasedDateInfomation instance);
    partial void UpdateHDOReleasedDateInfomation(HDOReleasedDateInfomation instance);
    partial void DeleteHDOReleasedDateInfomation(HDOReleasedDateInfomation instance);
    partial void InsertHDODelivery(HDODelivery instance);
    partial void UpdateHDODelivery(HDODelivery instance);
    partial void DeleteHDODelivery(HDODelivery instance);
    #endregion
		
		public HDODataContext() : 
				base(global::PH.HDO.BO.Properties.Settings.Default.PH_HDOConnectionString7, mappingSource)
		{
			OnCreated();
		}
		
		public HDODataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HDODataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HDODataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HDODataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tempa> tempas
		{
			get
			{
				return this.GetTable<tempa>();
			}
		}
		
		public System.Data.Linq.Table<HDOInvoice> HDOInvoices
		{
			get
			{
				return this.GetTable<HDOInvoice>();
			}
		}
		
		public System.Data.Linq.Table<IDInvoice> IDInvoices
		{
			get
			{
				return this.GetTable<IDInvoice>();
			}
		}
		
		public System.Data.Linq.Table<Stock_In> Stock_Ins
		{
			get
			{
				return this.GetTable<Stock_In>();
			}
		}
		
		public System.Data.Linq.Table<Stock_Out> Stock_Outs
		{
			get
			{
				return this.GetTable<Stock_Out>();
			}
		}
		
		public System.Data.Linq.Table<StockBalanceLog> StockBalanceLogs
		{
			get
			{
				return this.GetTable<StockBalanceLog>();
			}
		}
		
		public System.Data.Linq.Table<Stock_Balance> Stock_Balances
		{
			get
			{
				return this.GetTable<Stock_Balance>();
			}
		}
		
		public System.Data.Linq.Table<Stock_InKB> Stock_InKBs
		{
			get
			{
				return this.GetTable<Stock_InKB>();
			}
		}
		
		public System.Data.Linq.Table<Stock_OutKB> Stock_OutKBs
		{
			get
			{
				return this.GetTable<Stock_OutKB>();
			}
		}
		
		public System.Data.Linq.Table<Stock_BalanceKB> Stock_BalanceKBs
		{
			get
			{
				return this.GetTable<Stock_BalanceKB>();
			}
		}
		
		public System.Data.Linq.Table<HDOQuantity> HDOQuantities
		{
			get
			{
				return this.GetTable<HDOQuantity>();
			}
		}
		
		public System.Data.Linq.Table<HSCodeAveragePrice> HSCodeAveragePrices
		{
			get
			{
				return this.GetTable<HSCodeAveragePrice>();
			}
		}
		
		public System.Data.Linq.Table<ContractFull> ContractFulls
		{
			get
			{
				return this.GetTable<ContractFull>();
			}
		}
		
		public System.Data.Linq.Table<ContractInfo> ContractInfos
		{
			get
			{
				return this.GetTable<ContractInfo>();
			}
		}
		
		public System.Data.Linq.Table<ContractInfoDetail> ContractInfoDetails
		{
			get
			{
				return this.GetTable<ContractInfoDetail>();
			}
		}
		
		public System.Data.Linq.Table<ContractItem> ContractItems
		{
			get
			{
				return this.GetTable<ContractItem>();
			}
		}
		
		public System.Data.Linq.Table<GrnImported> GrnImporteds
		{
			get
			{
				return this.GetTable<GrnImported>();
			}
		}
		
		public System.Data.Linq.Table<HDOHandling> HDOHandlings
		{
			get
			{
				return this.GetTable<HDOHandling>();
			}
		}
		
		public System.Data.Linq.Table<HDOReleasedDateInfomation> HDOReleasedDateInfomations
		{
			get
			{
				return this.GetTable<HDOReleasedDateInfomation>();
			}
		}
		
		public System.Data.Linq.Table<HDODelivery> HDODeliveries
		{
			get
			{
				return this.GetTable<HDODelivery>();
			}
		}
	}
	
	[Table(Name="dbo.tempa")]
	public partial class tempa
	{
		
		public tempa()
		{
		}
	}
	
	[Table(Name="dbo.HDOInvoice")]
	public partial class HDOInvoice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _OID;
		
		private string _HDO;
		
		private string _Invoice;
		
		private string _Operator;
		
		private System.Nullable<System.DateTime> _OperateDate;
		
		private string _Remark;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOIDChanging(System.Guid value);
    partial void OnOIDChanged();
    partial void OnHDOChanging(string value);
    partial void OnHDOChanged();
    partial void OnInvoiceChanging(string value);
    partial void OnInvoiceChanged();
    partial void OnOperatorChanging(string value);
    partial void OnOperatorChanged();
    partial void OnOperateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnOperateDateChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public HDOInvoice()
		{
			OnCreated();
		}
		
		[Column(Storage="_OID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid OID
		{
			get
			{
				return this._OID;
			}
			set
			{
				if ((this._OID != value))
				{
					this.OnOIDChanging(value);
					this.SendPropertyChanging();
					this._OID = value;
					this.SendPropertyChanged("OID");
					this.OnOIDChanged();
				}
			}
		}
		
		[Column(Storage="_HDO", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string HDO
		{
			get
			{
				return this._HDO;
			}
			set
			{
				if ((this._HDO != value))
				{
					this.OnHDOChanging(value);
					this.SendPropertyChanging();
					this._HDO = value;
					this.SendPropertyChanged("HDO");
					this.OnHDOChanged();
				}
			}
		}
		
		[Column(Storage="_Invoice", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Invoice
		{
			get
			{
				return this._Invoice;
			}
			set
			{
				if ((this._Invoice != value))
				{
					this.OnInvoiceChanging(value);
					this.SendPropertyChanging();
					this._Invoice = value;
					this.SendPropertyChanged("Invoice");
					this.OnInvoiceChanged();
				}
			}
		}
		
		[Column(Storage="_Operator", DbType="VarChar(50)")]
		public string Operator
		{
			get
			{
				return this._Operator;
			}
			set
			{
				if ((this._Operator != value))
				{
					this.OnOperatorChanging(value);
					this.SendPropertyChanging();
					this._Operator = value;
					this.SendPropertyChanged("Operator");
					this.OnOperatorChanged();
				}
			}
		}
		
		[Column(Storage="_OperateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> OperateDate
		{
			get
			{
				return this._OperateDate;
			}
			set
			{
				if ((this._OperateDate != value))
				{
					this.OnOperateDateChanging(value);
					this.SendPropertyChanging();
					this._OperateDate = value;
					this.SendPropertyChanged("OperateDate");
					this.OnOperateDateChanged();
				}
			}
		}
		
		[Column(Storage="_Remark", DbType="VarChar(200)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.IDInvoice")]
	public partial class IDInvoice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _OID;
		
		private string _HDO;
		
		private string _ID;
		
		private string _Invoice;
		
		private string _Material;
		
		private string _ProjectNo;
		
		private string _Suppliers;
		
		private string _Operator;
		
		private System.Nullable<System.DateTime> _OperateDate;
		
		private string _Remark;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOIDChanging(System.Guid value);
    partial void OnOIDChanged();
    partial void OnHDOChanging(string value);
    partial void OnHDOChanged();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnInvoiceChanging(string value);
    partial void OnInvoiceChanged();
    partial void OnMaterialChanging(string value);
    partial void OnMaterialChanged();
    partial void OnProjectNoChanging(string value);
    partial void OnProjectNoChanged();
    partial void OnSuppliersChanging(string value);
    partial void OnSuppliersChanged();
    partial void OnOperatorChanging(string value);
    partial void OnOperatorChanged();
    partial void OnOperateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnOperateDateChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public IDInvoice()
		{
			OnCreated();
		}
		
		[Column(Storage="_OID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid OID
		{
			get
			{
				return this._OID;
			}
			set
			{
				if ((this._OID != value))
				{
					this.OnOIDChanging(value);
					this.SendPropertyChanging();
					this._OID = value;
					this.SendPropertyChanged("OID");
					this.OnOIDChanged();
				}
			}
		}
		
		[Column(Storage="_HDO", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string HDO
		{
			get
			{
				return this._HDO;
			}
			set
			{
				if ((this._HDO != value))
				{
					this.OnHDOChanging(value);
					this.SendPropertyChanging();
					this._HDO = value;
					this.SendPropertyChanged("HDO");
					this.OnHDOChanged();
				}
			}
		}
		
		[Column(Storage="_ID", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_Invoice", DbType="VarChar(50)")]
		public string Invoice
		{
			get
			{
				return this._Invoice;
			}
			set
			{
				if ((this._Invoice != value))
				{
					this.OnInvoiceChanging(value);
					this.SendPropertyChanging();
					this._Invoice = value;
					this.SendPropertyChanged("Invoice");
					this.OnInvoiceChanged();
				}
			}
		}
		
		[Column(Storage="_Material", DbType="VarChar(50)")]
		public string Material
		{
			get
			{
				return this._Material;
			}
			set
			{
				if ((this._Material != value))
				{
					this.OnMaterialChanging(value);
					this.SendPropertyChanging();
					this._Material = value;
					this.SendPropertyChanged("Material");
					this.OnMaterialChanged();
				}
			}
		}
		
		[Column(Storage="_ProjectNo", DbType="VarChar(50)")]
		public string ProjectNo
		{
			get
			{
				return this._ProjectNo;
			}
			set
			{
				if ((this._ProjectNo != value))
				{
					this.OnProjectNoChanging(value);
					this.SendPropertyChanging();
					this._ProjectNo = value;
					this.SendPropertyChanged("ProjectNo");
					this.OnProjectNoChanged();
				}
			}
		}
		
		[Column(Storage="_Suppliers", DbType="VarChar(50)")]
		public string Suppliers
		{
			get
			{
				return this._Suppliers;
			}
			set
			{
				if ((this._Suppliers != value))
				{
					this.OnSuppliersChanging(value);
					this.SendPropertyChanging();
					this._Suppliers = value;
					this.SendPropertyChanged("Suppliers");
					this.OnSuppliersChanged();
				}
			}
		}
		
		[Column(Storage="_Operator", DbType="VarChar(50)")]
		public string Operator
		{
			get
			{
				return this._Operator;
			}
			set
			{
				if ((this._Operator != value))
				{
					this.OnOperatorChanging(value);
					this.SendPropertyChanging();
					this._Operator = value;
					this.SendPropertyChanged("Operator");
					this.OnOperatorChanged();
				}
			}
		}
		
		[Column(Storage="_OperateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> OperateDate
		{
			get
			{
				return this._OperateDate;
			}
			set
			{
				if ((this._OperateDate != value))
				{
					this.OnOperateDateChanging(value);
					this.SendPropertyChanging();
					this._OperateDate = value;
					this.SendPropertyChanged("OperateDate");
					this.OnOperateDateChanged();
				}
			}
		}
		
		[Column(Storage="_Remark", DbType="VarChar(200)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Stock_In")]
	public partial class Stock_In : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Date;
		
		private string _PO_number;
		
		private string _Invoice;
		
		private string _Supplier;
		
		private string _Project_No;
		
		private string _Material_name;
		
		private string _Material_Art;
		
		private string _Material_Group;
		
		private string _Type;
		
		private string _Received;
		
		private string _Color;
		
		private string _Size;
		
		private string _Lot_no;
		
		private System.Nullable<int> _Qty;
		
		private string _Uom;
		
		private string _Price;
		
		private string _Currency;
		
		private System.Nullable<decimal> _Total;
		
		private string _Rate;
		
		private System.Nullable<decimal> _Total_THB;
		
		private string _USE_FULL;
		
		private string _Loc;
		
		private string _Unit;
		
		private string _Status;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnPO_numberChanging(string value);
    partial void OnPO_numberChanged();
    partial void OnInvoiceChanging(string value);
    partial void OnInvoiceChanged();
    partial void OnSupplierChanging(string value);
    partial void OnSupplierChanged();
    partial void OnProject_NoChanging(string value);
    partial void OnProject_NoChanged();
    partial void OnMaterial_nameChanging(string value);
    partial void OnMaterial_nameChanged();
    partial void OnMaterial_ArtChanging(string value);
    partial void OnMaterial_ArtChanged();
    partial void OnMaterial_GroupChanging(string value);
    partial void OnMaterial_GroupChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnReceivedChanging(string value);
    partial void OnReceivedChanged();
    partial void OnColorChanging(string value);
    partial void OnColorChanged();
    partial void OnSizeChanging(string value);
    partial void OnSizeChanged();
    partial void OnLot_noChanging(string value);
    partial void OnLot_noChanged();
    partial void OnQtyChanging(System.Nullable<int> value);
    partial void OnQtyChanged();
    partial void OnUomChanging(string value);
    partial void OnUomChanged();
    partial void OnPriceChanging(string value);
    partial void OnPriceChanged();
    partial void OnCurrencyChanging(string value);
    partial void OnCurrencyChanged();
    partial void OnTotalChanging(System.Nullable<decimal> value);
    partial void OnTotalChanged();
    partial void OnRateChanging(string value);
    partial void OnRateChanged();
    partial void OnTotal_THBChanging(System.Nullable<decimal> value);
    partial void OnTotal_THBChanged();
    partial void OnUSE_FULLChanging(string value);
    partial void OnUSE_FULLChanged();
    partial void OnLocChanging(string value);
    partial void OnLocChanged();
    partial void OnUnitChanging(string value);
    partial void OnUnitChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    #endregion
		
		public Stock_In()
		{
			OnCreated();
		}
		
		[Column(Storage="_Date", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[Column(Storage="_PO_number", DbType="VarChar(30)")]
		public string PO_number
		{
			get
			{
				return this._PO_number;
			}
			set
			{
				if ((this._PO_number != value))
				{
					this.OnPO_numberChanging(value);
					this.SendPropertyChanging();
					this._PO_number = value;
					this.SendPropertyChanged("PO_number");
					this.OnPO_numberChanged();
				}
			}
		}
		
		[Column(Storage="_Invoice", DbType="VarChar(30)")]
		public string Invoice
		{
			get
			{
				return this._Invoice;
			}
			set
			{
				if ((this._Invoice != value))
				{
					this.OnInvoiceChanging(value);
					this.SendPropertyChanging();
					this._Invoice = value;
					this.SendPropertyChanged("Invoice");
					this.OnInvoiceChanged();
				}
			}
		}
		
		[Column(Storage="_Supplier", DbType="VarChar(30)")]
		public string Supplier
		{
			get
			{
				return this._Supplier;
			}
			set
			{
				if ((this._Supplier != value))
				{
					this.OnSupplierChanging(value);
					this.SendPropertyChanging();
					this._Supplier = value;
					this.SendPropertyChanged("Supplier");
					this.OnSupplierChanged();
				}
			}
		}
		
		[Column(Storage="_Project_No", DbType="VarChar(30)")]
		public string Project_No
		{
			get
			{
				return this._Project_No;
			}
			set
			{
				if ((this._Project_No != value))
				{
					this.OnProject_NoChanging(value);
					this.SendPropertyChanging();
					this._Project_No = value;
					this.SendPropertyChanged("Project_No");
					this.OnProject_NoChanged();
				}
			}
		}
		
		[Column(Storage="_Material_name", DbType="VarChar(30)")]
		public string Material_name
		{
			get
			{
				return this._Material_name;
			}
			set
			{
				if ((this._Material_name != value))
				{
					this.OnMaterial_nameChanging(value);
					this.SendPropertyChanging();
					this._Material_name = value;
					this.SendPropertyChanged("Material_name");
					this.OnMaterial_nameChanged();
				}
			}
		}
		
		[Column(Storage="_Material_Art", DbType="VarChar(30)")]
		public string Material_Art
		{
			get
			{
				return this._Material_Art;
			}
			set
			{
				if ((this._Material_Art != value))
				{
					this.OnMaterial_ArtChanging(value);
					this.SendPropertyChanging();
					this._Material_Art = value;
					this.SendPropertyChanged("Material_Art");
					this.OnMaterial_ArtChanged();
				}
			}
		}
		
		[Column(Storage="_Material_Group", DbType="VarChar(30)")]
		public string Material_Group
		{
			get
			{
				return this._Material_Group;
			}
			set
			{
				if ((this._Material_Group != value))
				{
					this.OnMaterial_GroupChanging(value);
					this.SendPropertyChanging();
					this._Material_Group = value;
					this.SendPropertyChanged("Material_Group");
					this.OnMaterial_GroupChanged();
				}
			}
		}
		
		[Column(Storage="_Type", DbType="VarChar(20)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[Column(Storage="_Received", DbType="VarChar(20)")]
		public string Received
		{
			get
			{
				return this._Received;
			}
			set
			{
				if ((this._Received != value))
				{
					this.OnReceivedChanging(value);
					this.SendPropertyChanging();
					this._Received = value;
					this.SendPropertyChanged("Received");
					this.OnReceivedChanged();
				}
			}
		}
		
		[Column(Storage="_Color", DbType="VarChar(20)")]
		public string Color
		{
			get
			{
				return this._Color;
			}
			set
			{
				if ((this._Color != value))
				{
					this.OnColorChanging(value);
					this.SendPropertyChanging();
					this._Color = value;
					this.SendPropertyChanged("Color");
					this.OnColorChanged();
				}
			}
		}
		
		[Column(Storage="_Size", DbType="VarChar(20)")]
		public string Size
		{
			get
			{
				return this._Size;
			}
			set
			{
				if ((this._Size != value))
				{
					this.OnSizeChanging(value);
					this.SendPropertyChanging();
					this._Size = value;
					this.SendPropertyChanged("Size");
					this.OnSizeChanged();
				}
			}
		}
		
		[Column(Storage="_Lot_no", DbType="VarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Lot_no
		{
			get
			{
				return this._Lot_no;
			}
			set
			{
				if ((this._Lot_no != value))
				{
					this.OnLot_noChanging(value);
					this.SendPropertyChanging();
					this._Lot_no = value;
					this.SendPropertyChanged("Lot_no");
					this.OnLot_noChanged();
				}
			}
		}
		
		[Column(Storage="_Qty", DbType="Int")]
		public System.Nullable<int> Qty
		{
			get
			{
				return this._Qty;
			}
			set
			{
				if ((this._Qty != value))
				{
					this.OnQtyChanging(value);
					this.SendPropertyChanging();
					this._Qty = value;
					this.SendPropertyChanged("Qty");
					this.OnQtyChanged();
				}
			}
		}
		
		[Column(Storage="_Uom", DbType="VarChar(20)")]
		public string Uom
		{
			get
			{
				return this._Uom;
			}
			set
			{
				if ((this._Uom != value))
				{
					this.OnUomChanging(value);
					this.SendPropertyChanging();
					this._Uom = value;
					this.SendPropertyChanged("Uom");
					this.OnUomChanged();
				}
			}
		}
		
		[Column(Storage="_Price", DbType="VarChar(20)")]
		public string Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[Column(Storage="_Currency", DbType="VarChar(20)")]
		public string Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[Column(Storage="_Total", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this.OnTotalChanging(value);
					this.SendPropertyChanging();
					this._Total = value;
					this.SendPropertyChanged("Total");
					this.OnTotalChanged();
				}
			}
		}
		
		[Column(Storage="_Rate", DbType="VarChar(20)")]
		public string Rate
		{
			get
			{
				return this._Rate;
			}
			set
			{
				if ((this._Rate != value))
				{
					this.OnRateChanging(value);
					this.SendPropertyChanging();
					this._Rate = value;
					this.SendPropertyChanged("Rate");
					this.OnRateChanged();
				}
			}
		}
		
		[Column(Storage="_Total_THB", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> Total_THB
		{
			get
			{
				return this._Total_THB;
			}
			set
			{
				if ((this._Total_THB != value))
				{
					this.OnTotal_THBChanging(value);
					this.SendPropertyChanging();
					this._Total_THB = value;
					this.SendPropertyChanged("Total_THB");
					this.OnTotal_THBChanged();
				}
			}
		}
		
		[Column(Storage="_USE_FULL", DbType="VarChar(20)")]
		public string USE_FULL
		{
			get
			{
				return this._USE_FULL;
			}
			set
			{
				if ((this._USE_FULL != value))
				{
					this.OnUSE_FULLChanging(value);
					this.SendPropertyChanging();
					this._USE_FULL = value;
					this.SendPropertyChanged("USE_FULL");
					this.OnUSE_FULLChanged();
				}
			}
		}
		
		[Column(Storage="_Loc", DbType="VarChar(20)")]
		public string Loc
		{
			get
			{
				return this._Loc;
			}
			set
			{
				if ((this._Loc != value))
				{
					this.OnLocChanging(value);
					this.SendPropertyChanging();
					this._Loc = value;
					this.SendPropertyChanged("Loc");
					this.OnLocChanged();
				}
			}
		}
		
		[Column(Storage="_Unit", DbType="VarChar(20)")]
		public string Unit
		{
			get
			{
				return this._Unit;
			}
			set
			{
				if ((this._Unit != value))
				{
					this.OnUnitChanging(value);
					this.SendPropertyChanging();
					this._Unit = value;
					this.SendPropertyChanged("Unit");
					this.OnUnitChanged();
				}
			}
		}
		
		[Column(Storage="_Status", DbType="VarChar(20)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Stock_Out")]
	public partial class Stock_Out : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Date;
		
		private string _PO_number;
		
		private string _Invoice;
		
		private string _Supplier;
		
		private string _Project_No;
		
		private string _Material_name;
		
		private string _Material_Art;
		
		private string _Material_Group;
		
		private string _Type;
		
		private string _Received;
		
		private string _Color;
		
		private string _Size;
		
		private string _Lot_no;
		
		private System.Nullable<int> _Qty;
		
		private string _Uom;
		
		private string _Price;
		
		private string _Currency;
		
		private System.Nullable<decimal> _Total;
		
		private string _Rate;
		
		private System.Nullable<decimal> _Total_THB;
		
		private string _USE_FULL;
		
		private string _Loc;
		
		private string _Unit;
		
		private string _Status;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnPO_numberChanging(string value);
    partial void OnPO_numberChanged();
    partial void OnInvoiceChanging(string value);
    partial void OnInvoiceChanged();
    partial void OnSupplierChanging(string value);
    partial void OnSupplierChanged();
    partial void OnProject_NoChanging(string value);
    partial void OnProject_NoChanged();
    partial void OnMaterial_nameChanging(string value);
    partial void OnMaterial_nameChanged();
    partial void OnMaterial_ArtChanging(string value);
    partial void OnMaterial_ArtChanged();
    partial void OnMaterial_GroupChanging(string value);
    partial void OnMaterial_GroupChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnReceivedChanging(string value);
    partial void OnReceivedChanged();
    partial void OnColorChanging(string value);
    partial void OnColorChanged();
    partial void OnSizeChanging(string value);
    partial void OnSizeChanged();
    partial void OnLot_noChanging(string value);
    partial void OnLot_noChanged();
    partial void OnQtyChanging(System.Nullable<int> value);
    partial void OnQtyChanged();
    partial void OnUomChanging(string value);
    partial void OnUomChanged();
    partial void OnPriceChanging(string value);
    partial void OnPriceChanged();
    partial void OnCurrencyChanging(string value);
    partial void OnCurrencyChanged();
    partial void OnTotalChanging(System.Nullable<decimal> value);
    partial void OnTotalChanged();
    partial void OnRateChanging(string value);
    partial void OnRateChanged();
    partial void OnTotal_THBChanging(System.Nullable<decimal> value);
    partial void OnTotal_THBChanged();
    partial void OnUSE_FULLChanging(string value);
    partial void OnUSE_FULLChanged();
    partial void OnLocChanging(string value);
    partial void OnLocChanged();
    partial void OnUnitChanging(string value);
    partial void OnUnitChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    #endregion
		
		public Stock_Out()
		{
			OnCreated();
		}
		
		[Column(Storage="_Date", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[Column(Storage="_PO_number", DbType="VarChar(30)")]
		public string PO_number
		{
			get
			{
				return this._PO_number;
			}
			set
			{
				if ((this._PO_number != value))
				{
					this.OnPO_numberChanging(value);
					this.SendPropertyChanging();
					this._PO_number = value;
					this.SendPropertyChanged("PO_number");
					this.OnPO_numberChanged();
				}
			}
		}
		
		[Column(Storage="_Invoice", DbType="VarChar(30)")]
		public string Invoice
		{
			get
			{
				return this._Invoice;
			}
			set
			{
				if ((this._Invoice != value))
				{
					this.OnInvoiceChanging(value);
					this.SendPropertyChanging();
					this._Invoice = value;
					this.SendPropertyChanged("Invoice");
					this.OnInvoiceChanged();
				}
			}
		}
		
		[Column(Storage="_Supplier", DbType="VarChar(30)")]
		public string Supplier
		{
			get
			{
				return this._Supplier;
			}
			set
			{
				if ((this._Supplier != value))
				{
					this.OnSupplierChanging(value);
					this.SendPropertyChanging();
					this._Supplier = value;
					this.SendPropertyChanged("Supplier");
					this.OnSupplierChanged();
				}
			}
		}
		
		[Column(Storage="_Project_No", DbType="VarChar(30)")]
		public string Project_No
		{
			get
			{
				return this._Project_No;
			}
			set
			{
				if ((this._Project_No != value))
				{
					this.OnProject_NoChanging(value);
					this.SendPropertyChanging();
					this._Project_No = value;
					this.SendPropertyChanged("Project_No");
					this.OnProject_NoChanged();
				}
			}
		}
		
		[Column(Storage="_Material_name", DbType="VarChar(30)")]
		public string Material_name
		{
			get
			{
				return this._Material_name;
			}
			set
			{
				if ((this._Material_name != value))
				{
					this.OnMaterial_nameChanging(value);
					this.SendPropertyChanging();
					this._Material_name = value;
					this.SendPropertyChanged("Material_name");
					this.OnMaterial_nameChanged();
				}
			}
		}
		
		[Column(Storage="_Material_Art", DbType="VarChar(30)")]
		public string Material_Art
		{
			get
			{
				return this._Material_Art;
			}
			set
			{
				if ((this._Material_Art != value))
				{
					this.OnMaterial_ArtChanging(value);
					this.SendPropertyChanging();
					this._Material_Art = value;
					this.SendPropertyChanged("Material_Art");
					this.OnMaterial_ArtChanged();
				}
			}
		}
		
		[Column(Storage="_Material_Group", DbType="VarChar(30)")]
		public string Material_Group
		{
			get
			{
				return this._Material_Group;
			}
			set
			{
				if ((this._Material_Group != value))
				{
					this.OnMaterial_GroupChanging(value);
					this.SendPropertyChanging();
					this._Material_Group = value;
					this.SendPropertyChanged("Material_Group");
					this.OnMaterial_GroupChanged();
				}
			}
		}
		
		[Column(Storage="_Type", DbType="VarChar(20)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[Column(Storage="_Received", DbType="VarChar(20)")]
		public string Received
		{
			get
			{
				return this._Received;
			}
			set
			{
				if ((this._Received != value))
				{
					this.OnReceivedChanging(value);
					this.SendPropertyChanging();
					this._Received = value;
					this.SendPropertyChanged("Received");
					this.OnReceivedChanged();
				}
			}
		}
		
		[Column(Storage="_Color", DbType="VarChar(20)")]
		public string Color
		{
			get
			{
				return this._Color;
			}
			set
			{
				if ((this._Color != value))
				{
					this.OnColorChanging(value);
					this.SendPropertyChanging();
					this._Color = value;
					this.SendPropertyChanged("Color");
					this.OnColorChanged();
				}
			}
		}
		
		[Column(Storage="_Size", DbType="VarChar(20)")]
		public string Size
		{
			get
			{
				return this._Size;
			}
			set
			{
				if ((this._Size != value))
				{
					this.OnSizeChanging(value);
					this.SendPropertyChanging();
					this._Size = value;
					this.SendPropertyChanged("Size");
					this.OnSizeChanged();
				}
			}
		}
		
		[Column(Storage="_Lot_no", DbType="VarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Lot_no
		{
			get
			{
				return this._Lot_no;
			}
			set
			{
				if ((this._Lot_no != value))
				{
					this.OnLot_noChanging(value);
					this.SendPropertyChanging();
					this._Lot_no = value;
					this.SendPropertyChanged("Lot_no");
					this.OnLot_noChanged();
				}
			}
		}
		
		[Column(Storage="_Qty", DbType="Int")]
		public System.Nullable<int> Qty
		{
			get
			{
				return this._Qty;
			}
			set
			{
				if ((this._Qty != value))
				{
					this.OnQtyChanging(value);
					this.SendPropertyChanging();
					this._Qty = value;
					this.SendPropertyChanged("Qty");
					this.OnQtyChanged();
				}
			}
		}
		
		[Column(Storage="_Uom", DbType="VarChar(20)")]
		public string Uom
		{
			get
			{
				return this._Uom;
			}
			set
			{
				if ((this._Uom != value))
				{
					this.OnUomChanging(value);
					this.SendPropertyChanging();
					this._Uom = value;
					this.SendPropertyChanged("Uom");
					this.OnUomChanged();
				}
			}
		}
		
		[Column(Storage="_Price", DbType="VarChar(20)")]
		public string Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[Column(Storage="_Currency", DbType="VarChar(20)")]
		public string Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[Column(Storage="_Total", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this.OnTotalChanging(value);
					this.SendPropertyChanging();
					this._Total = value;
					this.SendPropertyChanged("Total");
					this.OnTotalChanged();
				}
			}
		}
		
		[Column(Storage="_Rate", DbType="VarChar(20)")]
		public string Rate
		{
			get
			{
				return this._Rate;
			}
			set
			{
				if ((this._Rate != value))
				{
					this.OnRateChanging(value);
					this.SendPropertyChanging();
					this._Rate = value;
					this.SendPropertyChanged("Rate");
					this.OnRateChanged();
				}
			}
		}
		
		[Column(Storage="_Total_THB", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> Total_THB
		{
			get
			{
				return this._Total_THB;
			}
			set
			{
				if ((this._Total_THB != value))
				{
					this.OnTotal_THBChanging(value);
					this.SendPropertyChanging();
					this._Total_THB = value;
					this.SendPropertyChanged("Total_THB");
					this.OnTotal_THBChanged();
				}
			}
		}
		
		[Column(Storage="_USE_FULL", DbType="VarChar(20)")]
		public string USE_FULL
		{
			get
			{
				return this._USE_FULL;
			}
			set
			{
				if ((this._USE_FULL != value))
				{
					this.OnUSE_FULLChanging(value);
					this.SendPropertyChanging();
					this._USE_FULL = value;
					this.SendPropertyChanged("USE_FULL");
					this.OnUSE_FULLChanged();
				}
			}
		}
		
		[Column(Storage="_Loc", DbType="VarChar(20)")]
		public string Loc
		{
			get
			{
				return this._Loc;
			}
			set
			{
				if ((this._Loc != value))
				{
					this.OnLocChanging(value);
					this.SendPropertyChanging();
					this._Loc = value;
					this.SendPropertyChanged("Loc");
					this.OnLocChanged();
				}
			}
		}
		
		[Column(Storage="_Unit", DbType="VarChar(20)")]
		public string Unit
		{
			get
			{
				return this._Unit;
			}
			set
			{
				if ((this._Unit != value))
				{
					this.OnUnitChanging(value);
					this.SendPropertyChanging();
					this._Unit = value;
					this.SendPropertyChanged("Unit");
					this.OnUnitChanged();
				}
			}
		}
		
		[Column(Storage="_Status", DbType="VarChar(20)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.StockBalanceLog")]
	public partial class StockBalanceLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _UserId;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private string _StockRoom;
		
		private string _MaterialGroup;
		
		private string _Invoice;
		
		private string _Location;
		
		private string _MaterialName;
		
		private string _ProjectNo;
		
		private System.Nullable<System.DateTime> _PrintDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnStockRoomChanging(string value);
    partial void OnStockRoomChanged();
    partial void OnMaterialGroupChanging(string value);
    partial void OnMaterialGroupChanged();
    partial void OnInvoiceChanging(string value);
    partial void OnInvoiceChanged();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    partial void OnMaterialNameChanging(string value);
    partial void OnMaterialNameChanged();
    partial void OnProjectNoChanging(string value);
    partial void OnProjectNoChanged();
    partial void OnPrintDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPrintDateChanged();
    #endregion
		
		public StockBalanceLog()
		{
			OnCreated();
		}
		
		[Column(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_UserId", DbType="VarChar(20)")]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[Column(Storage="_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[Column(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[Column(Storage="_StockRoom", DbType="VarChar(20)")]
		public string StockRoom
		{
			get
			{
				return this._StockRoom;
			}
			set
			{
				if ((this._StockRoom != value))
				{
					this.OnStockRoomChanging(value);
					this.SendPropertyChanging();
					this._StockRoom = value;
					this.SendPropertyChanged("StockRoom");
					this.OnStockRoomChanged();
				}
			}
		}
		
		[Column(Storage="_MaterialGroup", DbType="VarChar(20)")]
		public string MaterialGroup
		{
			get
			{
				return this._MaterialGroup;
			}
			set
			{
				if ((this._MaterialGroup != value))
				{
					this.OnMaterialGroupChanging(value);
					this.SendPropertyChanging();
					this._MaterialGroup = value;
					this.SendPropertyChanged("MaterialGroup");
					this.OnMaterialGroupChanged();
				}
			}
		}
		
		[Column(Storage="_Invoice", DbType="VarChar(20)")]
		public string Invoice
		{
			get
			{
				return this._Invoice;
			}
			set
			{
				if ((this._Invoice != value))
				{
					this.OnInvoiceChanging(value);
					this.SendPropertyChanging();
					this._Invoice = value;
					this.SendPropertyChanged("Invoice");
					this.OnInvoiceChanged();
				}
			}
		}
		
		[Column(Storage="_Location", DbType="VarChar(20)")]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[Column(Storage="_MaterialName", DbType="VarChar(20)")]
		public string MaterialName
		{
			get
			{
				return this._MaterialName;
			}
			set
			{
				if ((this._MaterialName != value))
				{
					this.OnMaterialNameChanging(value);
					this.SendPropertyChanging();
					this._MaterialName = value;
					this.SendPropertyChanged("MaterialName");
					this.OnMaterialNameChanged();
				}
			}
		}
		
		[Column(Storage="_ProjectNo", DbType="VarChar(20)")]
		public string ProjectNo
		{
			get
			{
				return this._ProjectNo;
			}
			set
			{
				if ((this._ProjectNo != value))
				{
					this.OnProjectNoChanging(value);
					this.SendPropertyChanging();
					this._ProjectNo = value;
					this.SendPropertyChanged("ProjectNo");
					this.OnProjectNoChanged();
				}
			}
		}
		
		[Column(Storage="_PrintDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PrintDate
		{
			get
			{
				return this._PrintDate;
			}
			set
			{
				if ((this._PrintDate != value))
				{
					this.OnPrintDateChanging(value);
					this.SendPropertyChanging();
					this._PrintDate = value;
					this.SendPropertyChanged("PrintDate");
					this.OnPrintDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Stock_Balance")]
	public partial class Stock_Balance : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Date;
		
		private string _PO_number;
		
		private string _Invoice;
		
		private string _Supplier;
		
		private string _Project_No;
		
		private string _Material_name;
		
		private string _Material_Art;
		
		private string _Material_Group;
		
		private string _Type;
		
		private string _Received;
		
		private string _Color;
		
		private string _Size;
		
		private string _Lot_no;
		
		private string _Qty;
		
		private string _Uom;
		
		private string _Price;
		
		private string _Currency;
		
		private string _Total;
		
		private string _Rate;
		
		private string _Total_THB;
		
		private string _USE_FULL;
		
		private string _Loc;
		
		private string _Unit;
		
		private string _Status;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnPO_numberChanging(string value);
    partial void OnPO_numberChanged();
    partial void OnInvoiceChanging(string value);
    partial void OnInvoiceChanged();
    partial void OnSupplierChanging(string value);
    partial void OnSupplierChanged();
    partial void OnProject_NoChanging(string value);
    partial void OnProject_NoChanged();
    partial void OnMaterial_nameChanging(string value);
    partial void OnMaterial_nameChanged();
    partial void OnMaterial_ArtChanging(string value);
    partial void OnMaterial_ArtChanged();
    partial void OnMaterial_GroupChanging(string value);
    partial void OnMaterial_GroupChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnReceivedChanging(string value);
    partial void OnReceivedChanged();
    partial void OnColorChanging(string value);
    partial void OnColorChanged();
    partial void OnSizeChanging(string value);
    partial void OnSizeChanged();
    partial void OnLot_noChanging(string value);
    partial void OnLot_noChanged();
    partial void OnQtyChanging(string value);
    partial void OnQtyChanged();
    partial void OnUomChanging(string value);
    partial void OnUomChanged();
    partial void OnPriceChanging(string value);
    partial void OnPriceChanged();
    partial void OnCurrencyChanging(string value);
    partial void OnCurrencyChanged();
    partial void OnTotalChanging(string value);
    partial void OnTotalChanged();
    partial void OnRateChanging(string value);
    partial void OnRateChanged();
    partial void OnTotal_THBChanging(string value);
    partial void OnTotal_THBChanged();
    partial void OnUSE_FULLChanging(string value);
    partial void OnUSE_FULLChanged();
    partial void OnLocChanging(string value);
    partial void OnLocChanged();
    partial void OnUnitChanging(string value);
    partial void OnUnitChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    #endregion
		
		public Stock_Balance()
		{
			OnCreated();
		}
		
		[Column(Storage="_Date", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[Column(Storage="_PO_number", DbType="VarChar(30)")]
		public string PO_number
		{
			get
			{
				return this._PO_number;
			}
			set
			{
				if ((this._PO_number != value))
				{
					this.OnPO_numberChanging(value);
					this.SendPropertyChanging();
					this._PO_number = value;
					this.SendPropertyChanged("PO_number");
					this.OnPO_numberChanged();
				}
			}
		}
		
		[Column(Storage="_Invoice", DbType="VarChar(30)")]
		public string Invoice
		{
			get
			{
				return this._Invoice;
			}
			set
			{
				if ((this._Invoice != value))
				{
					this.OnInvoiceChanging(value);
					this.SendPropertyChanging();
					this._Invoice = value;
					this.SendPropertyChanged("Invoice");
					this.OnInvoiceChanged();
				}
			}
		}
		
		[Column(Storage="_Supplier", DbType="VarChar(30)")]
		public string Supplier
		{
			get
			{
				return this._Supplier;
			}
			set
			{
				if ((this._Supplier != value))
				{
					this.OnSupplierChanging(value);
					this.SendPropertyChanging();
					this._Supplier = value;
					this.SendPropertyChanged("Supplier");
					this.OnSupplierChanged();
				}
			}
		}
		
		[Column(Storage="_Project_No", DbType="VarChar(30)")]
		public string Project_No
		{
			get
			{
				return this._Project_No;
			}
			set
			{
				if ((this._Project_No != value))
				{
					this.OnProject_NoChanging(value);
					this.SendPropertyChanging();
					this._Project_No = value;
					this.SendPropertyChanged("Project_No");
					this.OnProject_NoChanged();
				}
			}
		}
		
		[Column(Storage="_Material_name", DbType="VarChar(30)")]
		public string Material_name
		{
			get
			{
				return this._Material_name;
			}
			set
			{
				if ((this._Material_name != value))
				{
					this.OnMaterial_nameChanging(value);
					this.SendPropertyChanging();
					this._Material_name = value;
					this.SendPropertyChanged("Material_name");
					this.OnMaterial_nameChanged();
				}
			}
		}
		
		[Column(Storage="_Material_Art", DbType="VarChar(30)")]
		public string Material_Art
		{
			get
			{
				return this._Material_Art;
			}
			set
			{
				if ((this._Material_Art != value))
				{
					this.OnMaterial_ArtChanging(value);
					this.SendPropertyChanging();
					this._Material_Art = value;
					this.SendPropertyChanged("Material_Art");
					this.OnMaterial_ArtChanged();
				}
			}
		}
		
		[Column(Storage="_Material_Group", DbType="VarChar(30)")]
		public string Material_Group
		{
			get
			{
				return this._Material_Group;
			}
			set
			{
				if ((this._Material_Group != value))
				{
					this.OnMaterial_GroupChanging(value);
					this.SendPropertyChanging();
					this._Material_Group = value;
					this.SendPropertyChanged("Material_Group");
					this.OnMaterial_GroupChanged();
				}
			}
		}
		
		[Column(Storage="_Type", DbType="VarChar(20)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[Column(Storage="_Received", DbType="VarChar(20)")]
		public string Received
		{
			get
			{
				return this._Received;
			}
			set
			{
				if ((this._Received != value))
				{
					this.OnReceivedChanging(value);
					this.SendPropertyChanging();
					this._Received = value;
					this.SendPropertyChanged("Received");
					this.OnReceivedChanged();
				}
			}
		}
		
		[Column(Storage="_Color", DbType="VarChar(20)")]
		public string Color
		{
			get
			{
				return this._Color;
			}
			set
			{
				if ((this._Color != value))
				{
					this.OnColorChanging(value);
					this.SendPropertyChanging();
					this._Color = value;
					this.SendPropertyChanged("Color");
					this.OnColorChanged();
				}
			}
		}
		
		[Column(Storage="_Size", DbType="VarChar(20)")]
		public string Size
		{
			get
			{
				return this._Size;
			}
			set
			{
				if ((this._Size != value))
				{
					this.OnSizeChanging(value);
					this.SendPropertyChanging();
					this._Size = value;
					this.SendPropertyChanged("Size");
					this.OnSizeChanged();
				}
			}
		}
		
		[Column(Storage="_Lot_no", DbType="VarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Lot_no
		{
			get
			{
				return this._Lot_no;
			}
			set
			{
				if ((this._Lot_no != value))
				{
					this.OnLot_noChanging(value);
					this.SendPropertyChanging();
					this._Lot_no = value;
					this.SendPropertyChanged("Lot_no");
					this.OnLot_noChanged();
				}
			}
		}
		
		[Column(Storage="_Qty", DbType="VarChar(20)")]
		public string Qty
		{
			get
			{
				return this._Qty;
			}
			set
			{
				if ((this._Qty != value))
				{
					this.OnQtyChanging(value);
					this.SendPropertyChanging();
					this._Qty = value;
					this.SendPropertyChanged("Qty");
					this.OnQtyChanged();
				}
			}
		}
		
		[Column(Storage="_Uom", DbType="VarChar(20)")]
		public string Uom
		{
			get
			{
				return this._Uom;
			}
			set
			{
				if ((this._Uom != value))
				{
					this.OnUomChanging(value);
					this.SendPropertyChanging();
					this._Uom = value;
					this.SendPropertyChanged("Uom");
					this.OnUomChanged();
				}
			}
		}
		
		[Column(Storage="_Price", DbType="VarChar(20)")]
		public string Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[Column(Storage="_Currency", DbType="VarChar(20)")]
		public string Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[Column(Storage="_Total", DbType="VarChar(20)")]
		public string Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this.OnTotalChanging(value);
					this.SendPropertyChanging();
					this._Total = value;
					this.SendPropertyChanged("Total");
					this.OnTotalChanged();
				}
			}
		}
		
		[Column(Storage="_Rate", DbType="VarChar(20)")]
		public string Rate
		{
			get
			{
				return this._Rate;
			}
			set
			{
				if ((this._Rate != value))
				{
					this.OnRateChanging(value);
					this.SendPropertyChanging();
					this._Rate = value;
					this.SendPropertyChanged("Rate");
					this.OnRateChanged();
				}
			}
		}
		
		[Column(Storage="_Total_THB", DbType="VarChar(20)")]
		public string Total_THB
		{
			get
			{
				return this._Total_THB;
			}
			set
			{
				if ((this._Total_THB != value))
				{
					this.OnTotal_THBChanging(value);
					this.SendPropertyChanging();
					this._Total_THB = value;
					this.SendPropertyChanged("Total_THB");
					this.OnTotal_THBChanged();
				}
			}
		}
		
		[Column(Storage="_USE_FULL", DbType="VarChar(20)")]
		public string USE_FULL
		{
			get
			{
				return this._USE_FULL;
			}
			set
			{
				if ((this._USE_FULL != value))
				{
					this.OnUSE_FULLChanging(value);
					this.SendPropertyChanging();
					this._USE_FULL = value;
					this.SendPropertyChanged("USE_FULL");
					this.OnUSE_FULLChanged();
				}
			}
		}
		
		[Column(Storage="_Loc", DbType="VarChar(20)")]
		public string Loc
		{
			get
			{
				return this._Loc;
			}
			set
			{
				if ((this._Loc != value))
				{
					this.OnLocChanging(value);
					this.SendPropertyChanging();
					this._Loc = value;
					this.SendPropertyChanged("Loc");
					this.OnLocChanged();
				}
			}
		}
		
		[Column(Storage="_Unit", DbType="VarChar(20)")]
		public string Unit
		{
			get
			{
				return this._Unit;
			}
			set
			{
				if ((this._Unit != value))
				{
					this.OnUnitChanging(value);
					this.SendPropertyChanging();
					this._Unit = value;
					this.SendPropertyChanged("Unit");
					this.OnUnitChanged();
				}
			}
		}
		
		[Column(Storage="_Status", DbType="VarChar(20)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Stock_InKB")]
	public partial class Stock_InKB : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _Date;
		
		private string _PO_number;
		
		private string _Invoice;
		
		private string _Supplier;
		
		private string _Project_No;
		
		private string _Material_name;
		
		private string _Material_Art;
		
		private string _Material_Group;
		
		private string _Type;
		
		private string _Received;
		
		private string _Color;
		
		private string _Size;
		
		private string _Lot_no;
		
		private System.Nullable<int> _Qty;
		
		private string _Uom;
		
		private string _Price;
		
		private string _Currency;
		
		private System.Nullable<decimal> _Total;
		
		private string _Rate;
		
		private System.Nullable<decimal> _Total_THB;
		
		private string _USE_FULL;
		
		private string _Loc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnPO_numberChanging(string value);
    partial void OnPO_numberChanged();
    partial void OnInvoiceChanging(string value);
    partial void OnInvoiceChanged();
    partial void OnSupplierChanging(string value);
    partial void OnSupplierChanged();
    partial void OnProject_NoChanging(string value);
    partial void OnProject_NoChanged();
    partial void OnMaterial_nameChanging(string value);
    partial void OnMaterial_nameChanged();
    partial void OnMaterial_ArtChanging(string value);
    partial void OnMaterial_ArtChanged();
    partial void OnMaterial_GroupChanging(string value);
    partial void OnMaterial_GroupChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnReceivedChanging(string value);
    partial void OnReceivedChanged();
    partial void OnColorChanging(string value);
    partial void OnColorChanged();
    partial void OnSizeChanging(string value);
    partial void OnSizeChanged();
    partial void OnLot_noChanging(string value);
    partial void OnLot_noChanged();
    partial void OnQtyChanging(System.Nullable<int> value);
    partial void OnQtyChanged();
    partial void OnUomChanging(string value);
    partial void OnUomChanged();
    partial void OnPriceChanging(string value);
    partial void OnPriceChanged();
    partial void OnCurrencyChanging(string value);
    partial void OnCurrencyChanged();
    partial void OnTotalChanging(System.Nullable<decimal> value);
    partial void OnTotalChanged();
    partial void OnRateChanging(string value);
    partial void OnRateChanged();
    partial void OnTotal_THBChanging(System.Nullable<decimal> value);
    partial void OnTotal_THBChanged();
    partial void OnUSE_FULLChanging(string value);
    partial void OnUSE_FULLChanged();
    partial void OnLocChanging(string value);
    partial void OnLocChanged();
    #endregion
		
		public Stock_InKB()
		{
			OnCreated();
		}
		
		[Column(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_Date", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[Column(Storage="_PO_number", DbType="VarChar(30)")]
		public string PO_number
		{
			get
			{
				return this._PO_number;
			}
			set
			{
				if ((this._PO_number != value))
				{
					this.OnPO_numberChanging(value);
					this.SendPropertyChanging();
					this._PO_number = value;
					this.SendPropertyChanged("PO_number");
					this.OnPO_numberChanged();
				}
			}
		}
		
		[Column(Storage="_Invoice", DbType="VarChar(30)")]
		public string Invoice
		{
			get
			{
				return this._Invoice;
			}
			set
			{
				if ((this._Invoice != value))
				{
					this.OnInvoiceChanging(value);
					this.SendPropertyChanging();
					this._Invoice = value;
					this.SendPropertyChanged("Invoice");
					this.OnInvoiceChanged();
				}
			}
		}
		
		[Column(Storage="_Supplier", DbType="VarChar(30)")]
		public string Supplier
		{
			get
			{
				return this._Supplier;
			}
			set
			{
				if ((this._Supplier != value))
				{
					this.OnSupplierChanging(value);
					this.SendPropertyChanging();
					this._Supplier = value;
					this.SendPropertyChanged("Supplier");
					this.OnSupplierChanged();
				}
			}
		}
		
		[Column(Storage="_Project_No", DbType="VarChar(50)")]
		public string Project_No
		{
			get
			{
				return this._Project_No;
			}
			set
			{
				if ((this._Project_No != value))
				{
					this.OnProject_NoChanging(value);
					this.SendPropertyChanging();
					this._Project_No = value;
					this.SendPropertyChanged("Project_No");
					this.OnProject_NoChanged();
				}
			}
		}
		
		[Column(Storage="_Material_name", DbType="VarChar(30)")]
		public string Material_name
		{
			get
			{
				return this._Material_name;
			}
			set
			{
				if ((this._Material_name != value))
				{
					this.OnMaterial_nameChanging(value);
					this.SendPropertyChanging();
					this._Material_name = value;
					this.SendPropertyChanged("Material_name");
					this.OnMaterial_nameChanged();
				}
			}
		}
		
		[Column(Storage="_Material_Art", DbType="VarChar(50)")]
		public string Material_Art
		{
			get
			{
				return this._Material_Art;
			}
			set
			{
				if ((this._Material_Art != value))
				{
					this.OnMaterial_ArtChanging(value);
					this.SendPropertyChanging();
					this._Material_Art = value;
					this.SendPropertyChanged("Material_Art");
					this.OnMaterial_ArtChanged();
				}
			}
		}
		
		[Column(Storage="_Material_Group", DbType="VarChar(30)")]
		public string Material_Group
		{
			get
			{
				return this._Material_Group;
			}
			set
			{
				if ((this._Material_Group != value))
				{
					this.OnMaterial_GroupChanging(value);
					this.SendPropertyChanging();
					this._Material_Group = value;
					this.SendPropertyChanged("Material_Group");
					this.OnMaterial_GroupChanged();
				}
			}
		}
		
		[Column(Storage="_Type", DbType="VarChar(20)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[Column(Storage="_Received", DbType="VarChar(20)")]
		public string Received
		{
			get
			{
				return this._Received;
			}
			set
			{
				if ((this._Received != value))
				{
					this.OnReceivedChanging(value);
					this.SendPropertyChanging();
					this._Received = value;
					this.SendPropertyChanged("Received");
					this.OnReceivedChanged();
				}
			}
		}
		
		[Column(Storage="_Color", DbType="VarChar(20)")]
		public string Color
		{
			get
			{
				return this._Color;
			}
			set
			{
				if ((this._Color != value))
				{
					this.OnColorChanging(value);
					this.SendPropertyChanging();
					this._Color = value;
					this.SendPropertyChanged("Color");
					this.OnColorChanged();
				}
			}
		}
		
		[Column(Storage="_Size", DbType="VarChar(20)")]
		public string Size
		{
			get
			{
				return this._Size;
			}
			set
			{
				if ((this._Size != value))
				{
					this.OnSizeChanging(value);
					this.SendPropertyChanging();
					this._Size = value;
					this.SendPropertyChanged("Size");
					this.OnSizeChanged();
				}
			}
		}
		
		[Column(Storage="_Lot_no", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Lot_no
		{
			get
			{
				return this._Lot_no;
			}
			set
			{
				if ((this._Lot_no != value))
				{
					this.OnLot_noChanging(value);
					this.SendPropertyChanging();
					this._Lot_no = value;
					this.SendPropertyChanged("Lot_no");
					this.OnLot_noChanged();
				}
			}
		}
		
		[Column(Storage="_Qty", DbType="Int")]
		public System.Nullable<int> Qty
		{
			get
			{
				return this._Qty;
			}
			set
			{
				if ((this._Qty != value))
				{
					this.OnQtyChanging(value);
					this.SendPropertyChanging();
					this._Qty = value;
					this.SendPropertyChanged("Qty");
					this.OnQtyChanged();
				}
			}
		}
		
		[Column(Storage="_Uom", DbType="VarChar(20)")]
		public string Uom
		{
			get
			{
				return this._Uom;
			}
			set
			{
				if ((this._Uom != value))
				{
					this.OnUomChanging(value);
					this.SendPropertyChanging();
					this._Uom = value;
					this.SendPropertyChanged("Uom");
					this.OnUomChanged();
				}
			}
		}
		
		[Column(Storage="_Price", DbType="VarChar(20)")]
		public string Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[Column(Storage="_Currency", DbType="VarChar(20)")]
		public string Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[Column(Storage="_Total", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this.OnTotalChanging(value);
					this.SendPropertyChanging();
					this._Total = value;
					this.SendPropertyChanged("Total");
					this.OnTotalChanged();
				}
			}
		}
		
		[Column(Storage="_Rate", DbType="VarChar(20)")]
		public string Rate
		{
			get
			{
				return this._Rate;
			}
			set
			{
				if ((this._Rate != value))
				{
					this.OnRateChanging(value);
					this.SendPropertyChanging();
					this._Rate = value;
					this.SendPropertyChanged("Rate");
					this.OnRateChanged();
				}
			}
		}
		
		[Column(Storage="_Total_THB", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> Total_THB
		{
			get
			{
				return this._Total_THB;
			}
			set
			{
				if ((this._Total_THB != value))
				{
					this.OnTotal_THBChanging(value);
					this.SendPropertyChanging();
					this._Total_THB = value;
					this.SendPropertyChanged("Total_THB");
					this.OnTotal_THBChanged();
				}
			}
		}
		
		[Column(Storage="_USE_FULL", DbType="VarChar(20)")]
		public string USE_FULL
		{
			get
			{
				return this._USE_FULL;
			}
			set
			{
				if ((this._USE_FULL != value))
				{
					this.OnUSE_FULLChanging(value);
					this.SendPropertyChanging();
					this._USE_FULL = value;
					this.SendPropertyChanged("USE_FULL");
					this.OnUSE_FULLChanged();
				}
			}
		}
		
		[Column(Storage="_Loc", DbType="VarChar(20)")]
		public string Loc
		{
			get
			{
				return this._Loc;
			}
			set
			{
				if ((this._Loc != value))
				{
					this.OnLocChanging(value);
					this.SendPropertyChanging();
					this._Loc = value;
					this.SendPropertyChanged("Loc");
					this.OnLocChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Stock_OutKB")]
	public partial class Stock_OutKB : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _Date;
		
		private string _PO_number;
		
		private string _Invoice;
		
		private string _Supplier;
		
		private string _Project_No;
		
		private string _Material_name;
		
		private string _Material_Art;
		
		private string _Material_Group;
		
		private string _Type;
		
		private string _Received;
		
		private string _Color;
		
		private string _Size;
		
		private string _Lot_no;
		
		private System.Nullable<int> _Qty;
		
		private string _Uom;
		
		private string _Price;
		
		private string _Currency;
		
		private System.Nullable<decimal> _Total;
		
		private string _Rate;
		
		private System.Nullable<decimal> _Total_THB;
		
		private string _USE_FULL;
		
		private string _Loc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnPO_numberChanging(string value);
    partial void OnPO_numberChanged();
    partial void OnInvoiceChanging(string value);
    partial void OnInvoiceChanged();
    partial void OnSupplierChanging(string value);
    partial void OnSupplierChanged();
    partial void OnProject_NoChanging(string value);
    partial void OnProject_NoChanged();
    partial void OnMaterial_nameChanging(string value);
    partial void OnMaterial_nameChanged();
    partial void OnMaterial_ArtChanging(string value);
    partial void OnMaterial_ArtChanged();
    partial void OnMaterial_GroupChanging(string value);
    partial void OnMaterial_GroupChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnReceivedChanging(string value);
    partial void OnReceivedChanged();
    partial void OnColorChanging(string value);
    partial void OnColorChanged();
    partial void OnSizeChanging(string value);
    partial void OnSizeChanged();
    partial void OnLot_noChanging(string value);
    partial void OnLot_noChanged();
    partial void OnQtyChanging(System.Nullable<int> value);
    partial void OnQtyChanged();
    partial void OnUomChanging(string value);
    partial void OnUomChanged();
    partial void OnPriceChanging(string value);
    partial void OnPriceChanged();
    partial void OnCurrencyChanging(string value);
    partial void OnCurrencyChanged();
    partial void OnTotalChanging(System.Nullable<decimal> value);
    partial void OnTotalChanged();
    partial void OnRateChanging(string value);
    partial void OnRateChanged();
    partial void OnTotal_THBChanging(System.Nullable<decimal> value);
    partial void OnTotal_THBChanged();
    partial void OnUSE_FULLChanging(string value);
    partial void OnUSE_FULLChanged();
    partial void OnLocChanging(string value);
    partial void OnLocChanged();
    #endregion
		
		public Stock_OutKB()
		{
			OnCreated();
		}
		
		[Column(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_Date", DbType="VarChar(20)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[Column(Storage="_PO_number", DbType="VarChar(30)")]
		public string PO_number
		{
			get
			{
				return this._PO_number;
			}
			set
			{
				if ((this._PO_number != value))
				{
					this.OnPO_numberChanging(value);
					this.SendPropertyChanging();
					this._PO_number = value;
					this.SendPropertyChanged("PO_number");
					this.OnPO_numberChanged();
				}
			}
		}
		
		[Column(Storage="_Invoice", DbType="VarChar(30)")]
		public string Invoice
		{
			get
			{
				return this._Invoice;
			}
			set
			{
				if ((this._Invoice != value))
				{
					this.OnInvoiceChanging(value);
					this.SendPropertyChanging();
					this._Invoice = value;
					this.SendPropertyChanged("Invoice");
					this.OnInvoiceChanged();
				}
			}
		}
		
		[Column(Storage="_Supplier", DbType="VarChar(30)")]
		public string Supplier
		{
			get
			{
				return this._Supplier;
			}
			set
			{
				if ((this._Supplier != value))
				{
					this.OnSupplierChanging(value);
					this.SendPropertyChanging();
					this._Supplier = value;
					this.SendPropertyChanged("Supplier");
					this.OnSupplierChanged();
				}
			}
		}
		
		[Column(Storage="_Project_No", DbType="VarChar(50)")]
		public string Project_No
		{
			get
			{
				return this._Project_No;
			}
			set
			{
				if ((this._Project_No != value))
				{
					this.OnProject_NoChanging(value);
					this.SendPropertyChanging();
					this._Project_No = value;
					this.SendPropertyChanged("Project_No");
					this.OnProject_NoChanged();
				}
			}
		}
		
		[Column(Storage="_Material_name", DbType="VarChar(30)")]
		public string Material_name
		{
			get
			{
				return this._Material_name;
			}
			set
			{
				if ((this._Material_name != value))
				{
					this.OnMaterial_nameChanging(value);
					this.SendPropertyChanging();
					this._Material_name = value;
					this.SendPropertyChanged("Material_name");
					this.OnMaterial_nameChanged();
				}
			}
		}
		
		[Column(Storage="_Material_Art", DbType="VarChar(50)")]
		public string Material_Art
		{
			get
			{
				return this._Material_Art;
			}
			set
			{
				if ((this._Material_Art != value))
				{
					this.OnMaterial_ArtChanging(value);
					this.SendPropertyChanging();
					this._Material_Art = value;
					this.SendPropertyChanged("Material_Art");
					this.OnMaterial_ArtChanged();
				}
			}
		}
		
		[Column(Storage="_Material_Group", DbType="VarChar(30)")]
		public string Material_Group
		{
			get
			{
				return this._Material_Group;
			}
			set
			{
				if ((this._Material_Group != value))
				{
					this.OnMaterial_GroupChanging(value);
					this.SendPropertyChanging();
					this._Material_Group = value;
					this.SendPropertyChanged("Material_Group");
					this.OnMaterial_GroupChanged();
				}
			}
		}
		
		[Column(Storage="_Type", DbType="VarChar(20)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[Column(Storage="_Received", DbType="VarChar(20)")]
		public string Received
		{
			get
			{
				return this._Received;
			}
			set
			{
				if ((this._Received != value))
				{
					this.OnReceivedChanging(value);
					this.SendPropertyChanging();
					this._Received = value;
					this.SendPropertyChanged("Received");
					this.OnReceivedChanged();
				}
			}
		}
		
		[Column(Storage="_Color", DbType="VarChar(20)")]
		public string Color
		{
			get
			{
				return this._Color;
			}
			set
			{
				if ((this._Color != value))
				{
					this.OnColorChanging(value);
					this.SendPropertyChanging();
					this._Color = value;
					this.SendPropertyChanged("Color");
					this.OnColorChanged();
				}
			}
		}
		
		[Column(Storage="_Size", DbType="VarChar(20)")]
		public string Size
		{
			get
			{
				return this._Size;
			}
			set
			{
				if ((this._Size != value))
				{
					this.OnSizeChanging(value);
					this.SendPropertyChanging();
					this._Size = value;
					this.SendPropertyChanged("Size");
					this.OnSizeChanged();
				}
			}
		}
		
		[Column(Storage="_Lot_no", DbType="VarChar(30)")]
		public string Lot_no
		{
			get
			{
				return this._Lot_no;
			}
			set
			{
				if ((this._Lot_no != value))
				{
					this.OnLot_noChanging(value);
					this.SendPropertyChanging();
					this._Lot_no = value;
					this.SendPropertyChanged("Lot_no");
					this.OnLot_noChanged();
				}
			}
		}
		
		[Column(Storage="_Qty", DbType="Int")]
		public System.Nullable<int> Qty
		{
			get
			{
				return this._Qty;
			}
			set
			{
				if ((this._Qty != value))
				{
					this.OnQtyChanging(value);
					this.SendPropertyChanging();
					this._Qty = value;
					this.SendPropertyChanged("Qty");
					this.OnQtyChanged();
				}
			}
		}
		
		[Column(Storage="_Uom", DbType="VarChar(20)")]
		public string Uom
		{
			get
			{
				return this._Uom;
			}
			set
			{
				if ((this._Uom != value))
				{
					this.OnUomChanging(value);
					this.SendPropertyChanging();
					this._Uom = value;
					this.SendPropertyChanged("Uom");
					this.OnUomChanged();
				}
			}
		}
		
		[Column(Storage="_Price", DbType="VarChar(20)")]
		public string Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[Column(Storage="_Currency", DbType="VarChar(20)")]
		public string Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[Column(Storage="_Total", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this.OnTotalChanging(value);
					this.SendPropertyChanging();
					this._Total = value;
					this.SendPropertyChanged("Total");
					this.OnTotalChanged();
				}
			}
		}
		
		[Column(Storage="_Rate", DbType="VarChar(20)")]
		public string Rate
		{
			get
			{
				return this._Rate;
			}
			set
			{
				if ((this._Rate != value))
				{
					this.OnRateChanging(value);
					this.SendPropertyChanging();
					this._Rate = value;
					this.SendPropertyChanged("Rate");
					this.OnRateChanged();
				}
			}
		}
		
		[Column(Storage="_Total_THB", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> Total_THB
		{
			get
			{
				return this._Total_THB;
			}
			set
			{
				if ((this._Total_THB != value))
				{
					this.OnTotal_THBChanging(value);
					this.SendPropertyChanging();
					this._Total_THB = value;
					this.SendPropertyChanged("Total_THB");
					this.OnTotal_THBChanged();
				}
			}
		}
		
		[Column(Storage="_USE_FULL", DbType="VarChar(20)")]
		public string USE_FULL
		{
			get
			{
				return this._USE_FULL;
			}
			set
			{
				if ((this._USE_FULL != value))
				{
					this.OnUSE_FULLChanging(value);
					this.SendPropertyChanging();
					this._USE_FULL = value;
					this.SendPropertyChanged("USE_FULL");
					this.OnUSE_FULLChanged();
				}
			}
		}
		
		[Column(Storage="_Loc", DbType="VarChar(20)")]
		public string Loc
		{
			get
			{
				return this._Loc;
			}
			set
			{
				if ((this._Loc != value))
				{
					this.OnLocChanging(value);
					this.SendPropertyChanging();
					this._Loc = value;
					this.SendPropertyChanged("Loc");
					this.OnLocChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Stock_BalanceKB")]
	public partial class Stock_BalanceKB : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _Date;
		
		private string _PO_number;
		
		private string _Invoice;
		
		private string _Supplier;
		
		private string _Project_No;
		
		private string _Material_name;
		
		private string _Material_Art;
		
		private string _Material_Group;
		
		private string _Type;
		
		private string _Received;
		
		private string _Color;
		
		private string _Size;
		
		private string _Lot_no;
		
		private System.Nullable<int> _Qty;
		
		private string _Uom;
		
		private string _Price;
		
		private string _Currency;
		
		private System.Nullable<decimal> _Total;
		
		private string _Rate;
		
		private System.Nullable<decimal> _Total_THB;
		
		private string _USE_FULL;
		
		private string _Loc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnPO_numberChanging(string value);
    partial void OnPO_numberChanged();
    partial void OnInvoiceChanging(string value);
    partial void OnInvoiceChanged();
    partial void OnSupplierChanging(string value);
    partial void OnSupplierChanged();
    partial void OnProject_NoChanging(string value);
    partial void OnProject_NoChanged();
    partial void OnMaterial_nameChanging(string value);
    partial void OnMaterial_nameChanged();
    partial void OnMaterial_ArtChanging(string value);
    partial void OnMaterial_ArtChanged();
    partial void OnMaterial_GroupChanging(string value);
    partial void OnMaterial_GroupChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnReceivedChanging(string value);
    partial void OnReceivedChanged();
    partial void OnColorChanging(string value);
    partial void OnColorChanged();
    partial void OnSizeChanging(string value);
    partial void OnSizeChanged();
    partial void OnLot_noChanging(string value);
    partial void OnLot_noChanged();
    partial void OnQtyChanging(System.Nullable<int> value);
    partial void OnQtyChanged();
    partial void OnUomChanging(string value);
    partial void OnUomChanged();
    partial void OnPriceChanging(string value);
    partial void OnPriceChanged();
    partial void OnCurrencyChanging(string value);
    partial void OnCurrencyChanged();
    partial void OnTotalChanging(System.Nullable<decimal> value);
    partial void OnTotalChanged();
    partial void OnRateChanging(string value);
    partial void OnRateChanged();
    partial void OnTotal_THBChanging(System.Nullable<decimal> value);
    partial void OnTotal_THBChanged();
    partial void OnUSE_FULLChanging(string value);
    partial void OnUSE_FULLChanged();
    partial void OnLocChanging(string value);
    partial void OnLocChanged();
    #endregion
		
		public Stock_BalanceKB()
		{
			OnCreated();
		}
		
		[Column(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_Date", DbType="VarChar(20)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[Column(Storage="_PO_number", DbType="VarChar(30)")]
		public string PO_number
		{
			get
			{
				return this._PO_number;
			}
			set
			{
				if ((this._PO_number != value))
				{
					this.OnPO_numberChanging(value);
					this.SendPropertyChanging();
					this._PO_number = value;
					this.SendPropertyChanged("PO_number");
					this.OnPO_numberChanged();
				}
			}
		}
		
		[Column(Storage="_Invoice", DbType="VarChar(30)")]
		public string Invoice
		{
			get
			{
				return this._Invoice;
			}
			set
			{
				if ((this._Invoice != value))
				{
					this.OnInvoiceChanging(value);
					this.SendPropertyChanging();
					this._Invoice = value;
					this.SendPropertyChanged("Invoice");
					this.OnInvoiceChanged();
				}
			}
		}
		
		[Column(Storage="_Supplier", DbType="VarChar(30)")]
		public string Supplier
		{
			get
			{
				return this._Supplier;
			}
			set
			{
				if ((this._Supplier != value))
				{
					this.OnSupplierChanging(value);
					this.SendPropertyChanging();
					this._Supplier = value;
					this.SendPropertyChanged("Supplier");
					this.OnSupplierChanged();
				}
			}
		}
		
		[Column(Storage="_Project_No", DbType="VarChar(50)")]
		public string Project_No
		{
			get
			{
				return this._Project_No;
			}
			set
			{
				if ((this._Project_No != value))
				{
					this.OnProject_NoChanging(value);
					this.SendPropertyChanging();
					this._Project_No = value;
					this.SendPropertyChanged("Project_No");
					this.OnProject_NoChanged();
				}
			}
		}
		
		[Column(Storage="_Material_name", DbType="VarChar(30)")]
		public string Material_name
		{
			get
			{
				return this._Material_name;
			}
			set
			{
				if ((this._Material_name != value))
				{
					this.OnMaterial_nameChanging(value);
					this.SendPropertyChanging();
					this._Material_name = value;
					this.SendPropertyChanged("Material_name");
					this.OnMaterial_nameChanged();
				}
			}
		}
		
		[Column(Storage="_Material_Art", DbType="VarChar(50)")]
		public string Material_Art
		{
			get
			{
				return this._Material_Art;
			}
			set
			{
				if ((this._Material_Art != value))
				{
					this.OnMaterial_ArtChanging(value);
					this.SendPropertyChanging();
					this._Material_Art = value;
					this.SendPropertyChanged("Material_Art");
					this.OnMaterial_ArtChanged();
				}
			}
		}
		
		[Column(Storage="_Material_Group", DbType="VarChar(30)")]
		public string Material_Group
		{
			get
			{
				return this._Material_Group;
			}
			set
			{
				if ((this._Material_Group != value))
				{
					this.OnMaterial_GroupChanging(value);
					this.SendPropertyChanging();
					this._Material_Group = value;
					this.SendPropertyChanged("Material_Group");
					this.OnMaterial_GroupChanged();
				}
			}
		}
		
		[Column(Storage="_Type", DbType="VarChar(20)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[Column(Storage="_Received", DbType="VarChar(20)")]
		public string Received
		{
			get
			{
				return this._Received;
			}
			set
			{
				if ((this._Received != value))
				{
					this.OnReceivedChanging(value);
					this.SendPropertyChanging();
					this._Received = value;
					this.SendPropertyChanged("Received");
					this.OnReceivedChanged();
				}
			}
		}
		
		[Column(Storage="_Color", DbType="VarChar(20)")]
		public string Color
		{
			get
			{
				return this._Color;
			}
			set
			{
				if ((this._Color != value))
				{
					this.OnColorChanging(value);
					this.SendPropertyChanging();
					this._Color = value;
					this.SendPropertyChanged("Color");
					this.OnColorChanged();
				}
			}
		}
		
		[Column(Storage="_Size", DbType="VarChar(20)")]
		public string Size
		{
			get
			{
				return this._Size;
			}
			set
			{
				if ((this._Size != value))
				{
					this.OnSizeChanging(value);
					this.SendPropertyChanging();
					this._Size = value;
					this.SendPropertyChanged("Size");
					this.OnSizeChanged();
				}
			}
		}
		
		[Column(Storage="_Lot_no", DbType="VarChar(30)")]
		public string Lot_no
		{
			get
			{
				return this._Lot_no;
			}
			set
			{
				if ((this._Lot_no != value))
				{
					this.OnLot_noChanging(value);
					this.SendPropertyChanging();
					this._Lot_no = value;
					this.SendPropertyChanged("Lot_no");
					this.OnLot_noChanged();
				}
			}
		}
		
		[Column(Storage="_Qty", DbType="Int")]
		public System.Nullable<int> Qty
		{
			get
			{
				return this._Qty;
			}
			set
			{
				if ((this._Qty != value))
				{
					this.OnQtyChanging(value);
					this.SendPropertyChanging();
					this._Qty = value;
					this.SendPropertyChanged("Qty");
					this.OnQtyChanged();
				}
			}
		}
		
		[Column(Storage="_Uom", DbType="VarChar(20)")]
		public string Uom
		{
			get
			{
				return this._Uom;
			}
			set
			{
				if ((this._Uom != value))
				{
					this.OnUomChanging(value);
					this.SendPropertyChanging();
					this._Uom = value;
					this.SendPropertyChanged("Uom");
					this.OnUomChanged();
				}
			}
		}
		
		[Column(Storage="_Price", DbType="VarChar(20)")]
		public string Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[Column(Storage="_Currency", DbType="VarChar(20)")]
		public string Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[Column(Storage="_Total", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this.OnTotalChanging(value);
					this.SendPropertyChanging();
					this._Total = value;
					this.SendPropertyChanged("Total");
					this.OnTotalChanged();
				}
			}
		}
		
		[Column(Storage="_Rate", DbType="VarChar(20)")]
		public string Rate
		{
			get
			{
				return this._Rate;
			}
			set
			{
				if ((this._Rate != value))
				{
					this.OnRateChanging(value);
					this.SendPropertyChanging();
					this._Rate = value;
					this.SendPropertyChanged("Rate");
					this.OnRateChanged();
				}
			}
		}
		
		[Column(Storage="_Total_THB", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> Total_THB
		{
			get
			{
				return this._Total_THB;
			}
			set
			{
				if ((this._Total_THB != value))
				{
					this.OnTotal_THBChanging(value);
					this.SendPropertyChanging();
					this._Total_THB = value;
					this.SendPropertyChanged("Total_THB");
					this.OnTotal_THBChanged();
				}
			}
		}
		
		[Column(Storage="_USE_FULL", DbType="VarChar(20)")]
		public string USE_FULL
		{
			get
			{
				return this._USE_FULL;
			}
			set
			{
				if ((this._USE_FULL != value))
				{
					this.OnUSE_FULLChanging(value);
					this.SendPropertyChanging();
					this._USE_FULL = value;
					this.SendPropertyChanged("USE_FULL");
					this.OnUSE_FULLChanged();
				}
			}
		}
		
		[Column(Storage="_Loc", DbType="VarChar(20)")]
		public string Loc
		{
			get
			{
				return this._Loc;
			}
			set
			{
				if ((this._Loc != value))
				{
					this.OnLocChanging(value);
					this.SendPropertyChanging();
					this._Loc = value;
					this.SendPropertyChanged("Loc");
					this.OnLocChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.HDOQuantity")]
	public partial class HDOQuantity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Company;
		
		private int _GRNNO;
		
		private string _PONO;
		
		private int _POLine;
		
		private string _ProjectNo;
		
		private System.Nullable<decimal> _PHQty;
		
		private System.Nullable<decimal> _GRNQty;
		
		private System.Nullable<decimal> _TotalReceivedQty;
		
		private System.Nullable<decimal> _ConversationFactor;
		
		private string _SuppUom;
		
		private string _PHUom;
		
		private System.Nullable<bool> _QtyCompleted;
		
		private System.Nullable<bool> _GRNStatus;
		
		private EntityRef<HDODelivery> _HDODelivery;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnGRNNOChanging(int value);
    partial void OnGRNNOChanged();
    partial void OnPONOChanging(string value);
    partial void OnPONOChanged();
    partial void OnPOLineChanging(int value);
    partial void OnPOLineChanged();
    partial void OnProjectNoChanging(string value);
    partial void OnProjectNoChanged();
    partial void OnPHQtyChanging(System.Nullable<decimal> value);
    partial void OnPHQtyChanged();
    partial void OnGRNQtyChanging(System.Nullable<decimal> value);
    partial void OnGRNQtyChanged();
    partial void OnTotalReceivedQtyChanging(System.Nullable<decimal> value);
    partial void OnTotalReceivedQtyChanged();
    partial void OnConversationFactorChanging(System.Nullable<decimal> value);
    partial void OnConversationFactorChanged();
    partial void OnSuppUomChanging(string value);
    partial void OnSuppUomChanged();
    partial void OnPHUomChanging(string value);
    partial void OnPHUomChanged();
    partial void OnQtyCompletedChanging(System.Nullable<bool> value);
    partial void OnQtyCompletedChanged();
    partial void OnGRNStatusChanging(System.Nullable<bool> value);
    partial void OnGRNStatusChanged();
    #endregion
		
		public HDOQuantity()
		{
			this._HDODelivery = default(EntityRef<HDODelivery>);
			OnCreated();
		}
		
		[Column(Storage="_Company", DbType="VarChar(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					if (this._HDODelivery.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[Column(Storage="_GRNNO", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int GRNNO
		{
			get
			{
				return this._GRNNO;
			}
			set
			{
				if ((this._GRNNO != value))
				{
					if (this._HDODelivery.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGRNNOChanging(value);
					this.SendPropertyChanging();
					this._GRNNO = value;
					this.SendPropertyChanged("GRNNO");
					this.OnGRNNOChanged();
				}
			}
		}
		
		[Column(Storage="_PONO", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PONO
		{
			get
			{
				return this._PONO;
			}
			set
			{
				if ((this._PONO != value))
				{
					this.OnPONOChanging(value);
					this.SendPropertyChanging();
					this._PONO = value;
					this.SendPropertyChanged("PONO");
					this.OnPONOChanged();
				}
			}
		}
		
		[Column(Storage="_POLine", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int POLine
		{
			get
			{
				return this._POLine;
			}
			set
			{
				if ((this._POLine != value))
				{
					this.OnPOLineChanging(value);
					this.SendPropertyChanging();
					this._POLine = value;
					this.SendPropertyChanged("POLine");
					this.OnPOLineChanged();
				}
			}
		}
		
		[Column(Storage="_ProjectNo", DbType="VarChar(20)")]
		public string ProjectNo
		{
			get
			{
				return this._ProjectNo;
			}
			set
			{
				if ((this._ProjectNo != value))
				{
					this.OnProjectNoChanging(value);
					this.SendPropertyChanging();
					this._ProjectNo = value;
					this.SendPropertyChanged("ProjectNo");
					this.OnProjectNoChanged();
				}
			}
		}
		
		[Column(Storage="_PHQty", DbType="Decimal(11,5)")]
		public System.Nullable<decimal> PHQty
		{
			get
			{
				return this._PHQty;
			}
			set
			{
				if ((this._PHQty != value))
				{
					this.OnPHQtyChanging(value);
					this.SendPropertyChanging();
					this._PHQty = value;
					this.SendPropertyChanged("PHQty");
					this.OnPHQtyChanged();
				}
			}
		}
		
		[Column(Storage="_GRNQty", DbType="Decimal(11,5)")]
		public System.Nullable<decimal> GRNQty
		{
			get
			{
				return this._GRNQty;
			}
			set
			{
				if ((this._GRNQty != value))
				{
					this.OnGRNQtyChanging(value);
					this.SendPropertyChanging();
					this._GRNQty = value;
					this.SendPropertyChanged("GRNQty");
					this.OnGRNQtyChanged();
				}
			}
		}
		
		[Column(Storage="_TotalReceivedQty", DbType="Decimal(11,5)")]
		public System.Nullable<decimal> TotalReceivedQty
		{
			get
			{
				return this._TotalReceivedQty;
			}
			set
			{
				if ((this._TotalReceivedQty != value))
				{
					this.OnTotalReceivedQtyChanging(value);
					this.SendPropertyChanging();
					this._TotalReceivedQty = value;
					this.SendPropertyChanged("TotalReceivedQty");
					this.OnTotalReceivedQtyChanged();
				}
			}
		}
		
		[Column(Storage="_ConversationFactor", DbType="Decimal(11,5)")]
		public System.Nullable<decimal> ConversationFactor
		{
			get
			{
				return this._ConversationFactor;
			}
			set
			{
				if ((this._ConversationFactor != value))
				{
					this.OnConversationFactorChanging(value);
					this.SendPropertyChanging();
					this._ConversationFactor = value;
					this.SendPropertyChanged("ConversationFactor");
					this.OnConversationFactorChanged();
				}
			}
		}
		
		[Column(Storage="_SuppUom", DbType="VarChar(10)")]
		public string SuppUom
		{
			get
			{
				return this._SuppUom;
			}
			set
			{
				if ((this._SuppUom != value))
				{
					this.OnSuppUomChanging(value);
					this.SendPropertyChanging();
					this._SuppUom = value;
					this.SendPropertyChanged("SuppUom");
					this.OnSuppUomChanged();
				}
			}
		}
		
		[Column(Storage="_PHUom", DbType="VarChar(10)")]
		public string PHUom
		{
			get
			{
				return this._PHUom;
			}
			set
			{
				if ((this._PHUom != value))
				{
					this.OnPHUomChanging(value);
					this.SendPropertyChanging();
					this._PHUom = value;
					this.SendPropertyChanged("PHUom");
					this.OnPHUomChanged();
				}
			}
		}
		
		[Column(Storage="_QtyCompleted", DbType="Bit")]
		public System.Nullable<bool> QtyCompleted
		{
			get
			{
				return this._QtyCompleted;
			}
			set
			{
				if ((this._QtyCompleted != value))
				{
					this.OnQtyCompletedChanging(value);
					this.SendPropertyChanging();
					this._QtyCompleted = value;
					this.SendPropertyChanged("QtyCompleted");
					this.OnQtyCompletedChanged();
				}
			}
		}
		
		[Column(Storage="_GRNStatus", DbType="Bit")]
		public System.Nullable<bool> GRNStatus
		{
			get
			{
				return this._GRNStatus;
			}
			set
			{
				if ((this._GRNStatus != value))
				{
					this.OnGRNStatusChanging(value);
					this.SendPropertyChanging();
					this._GRNStatus = value;
					this.SendPropertyChanged("GRNStatus");
					this.OnGRNStatusChanged();
				}
			}
		}
		
		[Association(Name="HDODelivery_HDOQuantity", Storage="_HDODelivery", ThisKey="Company,GRNNO", OtherKey="Company,GRNNO", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public HDODelivery HDODelivery
		{
			get
			{
				return this._HDODelivery.Entity;
			}
			set
			{
				HDODelivery previousValue = this._HDODelivery.Entity;
				if (((previousValue != value) 
							|| (this._HDODelivery.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HDODelivery.Entity = null;
						previousValue.HDOQuantities.Remove(this);
					}
					this._HDODelivery.Entity = value;
					if ((value != null))
					{
						value.HDOQuantities.Add(this);
						this._Company = value.Company;
						this._GRNNO = value.GRNNO;
					}
					else
					{
						this._Company = default(string);
						this._GRNNO = default(int);
					}
					this.SendPropertyChanged("HDODelivery");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.HSCodeAveragePrice")]
	public partial class HSCodeAveragePrice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _HSCode;
		
		private string _HSCodeSeq;
		
		private string _FGType;
		
		private System.Nullable<System.DateTime> _TimeFrom;
		
		private System.Nullable<System.DateTime> _TimeEnd;
		
		private string _HSMaterialName;
		
		private string _HSMemo;
		
		private string _HSUnit;
		
		private System.Nullable<decimal> _TotalCost_RMB;
		
		private System.Nullable<decimal> _TotalWeight_RMB;
		
		private System.Nullable<decimal> _Price_RMB;
		
		private System.Nullable<decimal> _TotalCost_Other;
		
		private System.Nullable<decimal> _TotalWeight_Other;
		
		private System.Nullable<decimal> _Price_Other;
		
		private System.Nullable<decimal> _HSCodePrice;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHSCodeChanging(string value);
    partial void OnHSCodeChanged();
    partial void OnHSCodeSeqChanging(string value);
    partial void OnHSCodeSeqChanged();
    partial void OnFGTypeChanging(string value);
    partial void OnFGTypeChanged();
    partial void OnTimeFromChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeFromChanged();
    partial void OnTimeEndChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeEndChanged();
    partial void OnHSMaterialNameChanging(string value);
    partial void OnHSMaterialNameChanged();
    partial void OnHSMemoChanging(string value);
    partial void OnHSMemoChanged();
    partial void OnHSUnitChanging(string value);
    partial void OnHSUnitChanged();
    partial void OnTotalCost_RMBChanging(System.Nullable<decimal> value);
    partial void OnTotalCost_RMBChanged();
    partial void OnTotalWeight_RMBChanging(System.Nullable<decimal> value);
    partial void OnTotalWeight_RMBChanged();
    partial void OnPrice_RMBChanging(System.Nullable<decimal> value);
    partial void OnPrice_RMBChanged();
    partial void OnTotalCost_OtherChanging(System.Nullable<decimal> value);
    partial void OnTotalCost_OtherChanged();
    partial void OnTotalWeight_OtherChanging(System.Nullable<decimal> value);
    partial void OnTotalWeight_OtherChanged();
    partial void OnPrice_OtherChanging(System.Nullable<decimal> value);
    partial void OnPrice_OtherChanged();
    partial void OnHSCodePriceChanging(System.Nullable<decimal> value);
    partial void OnHSCodePriceChanged();
    #endregion
		
		public HSCodeAveragePrice()
		{
			OnCreated();
		}
		
		[Column(Storage="_HSCode", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string HSCode
		{
			get
			{
				return this._HSCode;
			}
			set
			{
				if ((this._HSCode != value))
				{
					this.OnHSCodeChanging(value);
					this.SendPropertyChanging();
					this._HSCode = value;
					this.SendPropertyChanged("HSCode");
					this.OnHSCodeChanged();
				}
			}
		}
		
		[Column(Storage="_HSCodeSeq", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string HSCodeSeq
		{
			get
			{
				return this._HSCodeSeq;
			}
			set
			{
				if ((this._HSCodeSeq != value))
				{
					this.OnHSCodeSeqChanging(value);
					this.SendPropertyChanging();
					this._HSCodeSeq = value;
					this.SendPropertyChanged("HSCodeSeq");
					this.OnHSCodeSeqChanged();
				}
			}
		}
		
		[Column(Storage="_FGType", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string FGType
		{
			get
			{
				return this._FGType;
			}
			set
			{
				if ((this._FGType != value))
				{
					this.OnFGTypeChanging(value);
					this.SendPropertyChanging();
					this._FGType = value;
					this.SendPropertyChanged("FGType");
					this.OnFGTypeChanged();
				}
			}
		}
		
		[Column(Storage="_TimeFrom", DbType="DateTime")]
		public System.Nullable<System.DateTime> TimeFrom
		{
			get
			{
				return this._TimeFrom;
			}
			set
			{
				if ((this._TimeFrom != value))
				{
					this.OnTimeFromChanging(value);
					this.SendPropertyChanging();
					this._TimeFrom = value;
					this.SendPropertyChanged("TimeFrom");
					this.OnTimeFromChanged();
				}
			}
		}
		
		[Column(Storage="_TimeEnd", DbType="DateTime")]
		public System.Nullable<System.DateTime> TimeEnd
		{
			get
			{
				return this._TimeEnd;
			}
			set
			{
				if ((this._TimeEnd != value))
				{
					this.OnTimeEndChanging(value);
					this.SendPropertyChanging();
					this._TimeEnd = value;
					this.SendPropertyChanged("TimeEnd");
					this.OnTimeEndChanged();
				}
			}
		}
		
		[Column(Storage="_HSMaterialName", DbType="NVarChar(50)")]
		public string HSMaterialName
		{
			get
			{
				return this._HSMaterialName;
			}
			set
			{
				if ((this._HSMaterialName != value))
				{
					this.OnHSMaterialNameChanging(value);
					this.SendPropertyChanging();
					this._HSMaterialName = value;
					this.SendPropertyChanged("HSMaterialName");
					this.OnHSMaterialNameChanged();
				}
			}
		}
		
		[Column(Storage="_HSMemo", DbType="NVarChar(500)")]
		public string HSMemo
		{
			get
			{
				return this._HSMemo;
			}
			set
			{
				if ((this._HSMemo != value))
				{
					this.OnHSMemoChanging(value);
					this.SendPropertyChanging();
					this._HSMemo = value;
					this.SendPropertyChanged("HSMemo");
					this.OnHSMemoChanged();
				}
			}
		}
		
		[Column(Storage="_HSUnit", DbType="NVarChar(50)")]
		public string HSUnit
		{
			get
			{
				return this._HSUnit;
			}
			set
			{
				if ((this._HSUnit != value))
				{
					this.OnHSUnitChanging(value);
					this.SendPropertyChanging();
					this._HSUnit = value;
					this.SendPropertyChanged("HSUnit");
					this.OnHSUnitChanged();
				}
			}
		}
		
		[Column(Storage="_TotalCost_RMB", DbType="Decimal(18,6)")]
		public System.Nullable<decimal> TotalCost_RMB
		{
			get
			{
				return this._TotalCost_RMB;
			}
			set
			{
				if ((this._TotalCost_RMB != value))
				{
					this.OnTotalCost_RMBChanging(value);
					this.SendPropertyChanging();
					this._TotalCost_RMB = value;
					this.SendPropertyChanged("TotalCost_RMB");
					this.OnTotalCost_RMBChanged();
				}
			}
		}
		
		[Column(Storage="_TotalWeight_RMB", DbType="Decimal(18,6)")]
		public System.Nullable<decimal> TotalWeight_RMB
		{
			get
			{
				return this._TotalWeight_RMB;
			}
			set
			{
				if ((this._TotalWeight_RMB != value))
				{
					this.OnTotalWeight_RMBChanging(value);
					this.SendPropertyChanging();
					this._TotalWeight_RMB = value;
					this.SendPropertyChanged("TotalWeight_RMB");
					this.OnTotalWeight_RMBChanged();
				}
			}
		}
		
		[Column(Storage="_Price_RMB", DbType="Decimal(18,6)")]
		public System.Nullable<decimal> Price_RMB
		{
			get
			{
				return this._Price_RMB;
			}
			set
			{
				if ((this._Price_RMB != value))
				{
					this.OnPrice_RMBChanging(value);
					this.SendPropertyChanging();
					this._Price_RMB = value;
					this.SendPropertyChanged("Price_RMB");
					this.OnPrice_RMBChanged();
				}
			}
		}
		
		[Column(Storage="_TotalCost_Other", DbType="Decimal(18,6)")]
		public System.Nullable<decimal> TotalCost_Other
		{
			get
			{
				return this._TotalCost_Other;
			}
			set
			{
				if ((this._TotalCost_Other != value))
				{
					this.OnTotalCost_OtherChanging(value);
					this.SendPropertyChanging();
					this._TotalCost_Other = value;
					this.SendPropertyChanged("TotalCost_Other");
					this.OnTotalCost_OtherChanged();
				}
			}
		}
		
		[Column(Storage="_TotalWeight_Other", DbType="Decimal(18,6)")]
		public System.Nullable<decimal> TotalWeight_Other
		{
			get
			{
				return this._TotalWeight_Other;
			}
			set
			{
				if ((this._TotalWeight_Other != value))
				{
					this.OnTotalWeight_OtherChanging(value);
					this.SendPropertyChanging();
					this._TotalWeight_Other = value;
					this.SendPropertyChanged("TotalWeight_Other");
					this.OnTotalWeight_OtherChanged();
				}
			}
		}
		
		[Column(Storage="_Price_Other", DbType="Decimal(18,6)")]
		public System.Nullable<decimal> Price_Other
		{
			get
			{
				return this._Price_Other;
			}
			set
			{
				if ((this._Price_Other != value))
				{
					this.OnPrice_OtherChanging(value);
					this.SendPropertyChanging();
					this._Price_Other = value;
					this.SendPropertyChanged("Price_Other");
					this.OnPrice_OtherChanged();
				}
			}
		}
		
		[Column(Storage="_HSCodePrice", AutoSync=AutoSync.Always, DbType="Decimal(38,19)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> HSCodePrice
		{
			get
			{
				return this._HSCodePrice;
			}
			set
			{
				if ((this._HSCodePrice != value))
				{
					this.OnHSCodePriceChanging(value);
					this.SendPropertyChanging();
					this._HSCodePrice = value;
					this.SendPropertyChanged("HSCodePrice");
					this.OnHSCodePriceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.ContractFull")]
	public partial class ContractFull : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RecId;
		
		private System.Nullable<System.DateTime> _ReciveDate_HK;
		
		private string _ERPSupplier;
		
		private string _PackingNo;
		
		private string _PO;
		
		private string _SuppRef;
		
		private string _PageNo;
		
		private string _MaterialName;
		
		private string _ProductLoc;
		
		private string _PHUnit;
		
		private System.Nullable<int> _GrnQty;
		
		private System.Nullable<decimal> _WeightHsCode;
		
		private string _Currency;
		
		private System.Nullable<decimal> _Price;
		
		private System.Nullable<decimal> _TotalCost;
		
		private System.Nullable<int> _BoxQty;
		
		private string _BoxNo;
		
		private System.Nullable<decimal> _Weight_J;
		
		private System.Nullable<decimal> _Weight_M;
		
		private System.Nullable<int> _HSCodeSeq;
		
		private string _ContractNo;
		
		private string _ItemNo;
		
		private string _BG_Name;
		
		private string _BG_Unit;
		
		private System.Nullable<int> _BG_Qty;
		
		private string _BG_No;
		
		private string _CreateBy;
		
		private System.Nullable<System.DateTime> _Created;
		
		private string _UpdateBy;
		
		private System.Nullable<System.DateTime> _Updated;
		
		private System.Nullable<int> _GrnNo;
		
		private string _HSCode;
		
		private System.Nullable<System.DateTime> _TransferredDate;
		
		private System.Nullable<System.DateTime> _ReleasedDate;
		
		private string _HDONo;
		
		private string _HDOStatus;
		
		private System.Nullable<int> _HDODate;
		
		private System.Nullable<System.DateTime> _ReceivedDate;
		
		private System.Nullable<decimal> _BG_WeightAct;
		
		private decimal _BG_WeightCal;
		
		private string _Remark;
		
		private System.Nullable<System.DateTime> _BG_Date;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRecIdChanging(int value);
    partial void OnRecIdChanged();
    partial void OnReciveDate_HKChanging(System.Nullable<System.DateTime> value);
    partial void OnReciveDate_HKChanged();
    partial void OnERPSupplierChanging(string value);
    partial void OnERPSupplierChanged();
    partial void OnPackingNoChanging(string value);
    partial void OnPackingNoChanged();
    partial void OnPOChanging(string value);
    partial void OnPOChanged();
    partial void OnSuppRefChanging(string value);
    partial void OnSuppRefChanged();
    partial void OnPageNoChanging(string value);
    partial void OnPageNoChanged();
    partial void OnMaterialNameChanging(string value);
    partial void OnMaterialNameChanged();
    partial void OnProductLocChanging(string value);
    partial void OnProductLocChanged();
    partial void OnPHUnitChanging(string value);
    partial void OnPHUnitChanged();
    partial void OnGrnQtyChanging(System.Nullable<int> value);
    partial void OnGrnQtyChanged();
    partial void OnWeightHsCodeChanging(System.Nullable<decimal> value);
    partial void OnWeightHsCodeChanged();
    partial void OnCurrencyChanging(string value);
    partial void OnCurrencyChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    partial void OnTotalCostChanging(System.Nullable<decimal> value);
    partial void OnTotalCostChanged();
    partial void OnBoxQtyChanging(System.Nullable<int> value);
    partial void OnBoxQtyChanged();
    partial void OnBoxNoChanging(string value);
    partial void OnBoxNoChanged();
    partial void OnWeight_JChanging(System.Nullable<decimal> value);
    partial void OnWeight_JChanged();
    partial void OnWeight_MChanging(System.Nullable<decimal> value);
    partial void OnWeight_MChanged();
    partial void OnHSCodeSeqChanging(System.Nullable<int> value);
    partial void OnHSCodeSeqChanged();
    partial void OnContractNoChanging(string value);
    partial void OnContractNoChanged();
    partial void OnItemNoChanging(string value);
    partial void OnItemNoChanged();
    partial void OnBG_NameChanging(string value);
    partial void OnBG_NameChanged();
    partial void OnBG_UnitChanging(string value);
    partial void OnBG_UnitChanged();
    partial void OnBG_QtyChanging(System.Nullable<int> value);
    partial void OnBG_QtyChanged();
    partial void OnBG_NoChanging(string value);
    partial void OnBG_NoChanged();
    partial void OnCreateByChanging(string value);
    partial void OnCreateByChanged();
    partial void OnCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedChanged();
    partial void OnUpdateByChanging(string value);
    partial void OnUpdateByChanged();
    partial void OnUpdatedChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedChanged();
    partial void OnGrnNoChanging(System.Nullable<int> value);
    partial void OnGrnNoChanged();
    partial void OnHSCodeChanging(string value);
    partial void OnHSCodeChanged();
    partial void OnTransferredDateChanging(System.Nullable<System.DateTime> value);
    partial void OnTransferredDateChanged();
    partial void OnReleasedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnReleasedDateChanged();
    partial void OnHDONoChanging(string value);
    partial void OnHDONoChanged();
    partial void OnHDOStatusChanging(string value);
    partial void OnHDOStatusChanged();
    partial void OnHDODateChanging(System.Nullable<int> value);
    partial void OnHDODateChanged();
    partial void OnReceivedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnReceivedDateChanged();
    partial void OnBG_WeightActChanging(System.Nullable<decimal> value);
    partial void OnBG_WeightActChanged();
    partial void OnBG_WeightCalChanging(decimal value);
    partial void OnBG_WeightCalChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnBG_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnBG_DateChanged();
    #endregion
		
		public ContractFull()
		{
			OnCreated();
		}
		
		[Column(Storage="_RecId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RecId
		{
			get
			{
				return this._RecId;
			}
			set
			{
				if ((this._RecId != value))
				{
					this.OnRecIdChanging(value);
					this.SendPropertyChanging();
					this._RecId = value;
					this.SendPropertyChanged("RecId");
					this.OnRecIdChanged();
				}
			}
		}
		
		[Column(Storage="_ReciveDate_HK", DbType="DateTime")]
		public System.Nullable<System.DateTime> ReciveDate_HK
		{
			get
			{
				return this._ReciveDate_HK;
			}
			set
			{
				if ((this._ReciveDate_HK != value))
				{
					this.OnReciveDate_HKChanging(value);
					this.SendPropertyChanging();
					this._ReciveDate_HK = value;
					this.SendPropertyChanged("ReciveDate_HK");
					this.OnReciveDate_HKChanged();
				}
			}
		}
		
		[Column(Storage="_ERPSupplier", DbType="NVarChar(100)")]
		public string ERPSupplier
		{
			get
			{
				return this._ERPSupplier;
			}
			set
			{
				if ((this._ERPSupplier != value))
				{
					this.OnERPSupplierChanging(value);
					this.SendPropertyChanging();
					this._ERPSupplier = value;
					this.SendPropertyChanged("ERPSupplier");
					this.OnERPSupplierChanged();
				}
			}
		}
		
		[Column(Storage="_PackingNo", DbType="NVarChar(16)")]
		public string PackingNo
		{
			get
			{
				return this._PackingNo;
			}
			set
			{
				if ((this._PackingNo != value))
				{
					this.OnPackingNoChanging(value);
					this.SendPropertyChanging();
					this._PackingNo = value;
					this.SendPropertyChanged("PackingNo");
					this.OnPackingNoChanged();
				}
			}
		}
		
		[Column(Storage="_PO", DbType="VarChar(20)")]
		public string PO
		{
			get
			{
				return this._PO;
			}
			set
			{
				if ((this._PO != value))
				{
					this.OnPOChanging(value);
					this.SendPropertyChanging();
					this._PO = value;
					this.SendPropertyChanged("PO");
					this.OnPOChanged();
				}
			}
		}
		
		[Column(Storage="_SuppRef", DbType="NVarChar(16)")]
		public string SuppRef
		{
			get
			{
				return this._SuppRef;
			}
			set
			{
				if ((this._SuppRef != value))
				{
					this.OnSuppRefChanging(value);
					this.SendPropertyChanging();
					this._SuppRef = value;
					this.SendPropertyChanged("SuppRef");
					this.OnSuppRefChanged();
				}
			}
		}
		
		[Column(Storage="_PageNo", DbType="VarChar(8)")]
		public string PageNo
		{
			get
			{
				return this._PageNo;
			}
			set
			{
				if ((this._PageNo != value))
				{
					this.OnPageNoChanging(value);
					this.SendPropertyChanging();
					this._PageNo = value;
					this.SendPropertyChanged("PageNo");
					this.OnPageNoChanged();
				}
			}
		}
		
		[Column(Storage="_MaterialName", DbType="NVarChar(60)")]
		public string MaterialName
		{
			get
			{
				return this._MaterialName;
			}
			set
			{
				if ((this._MaterialName != value))
				{
					this.OnMaterialNameChanging(value);
					this.SendPropertyChanging();
					this._MaterialName = value;
					this.SendPropertyChanged("MaterialName");
					this.OnMaterialNameChanged();
				}
			}
		}
		
		[Column(Storage="_ProductLoc", DbType="NVarChar(20)")]
		public string ProductLoc
		{
			get
			{
				return this._ProductLoc;
			}
			set
			{
				if ((this._ProductLoc != value))
				{
					this.OnProductLocChanging(value);
					this.SendPropertyChanging();
					this._ProductLoc = value;
					this.SendPropertyChanged("ProductLoc");
					this.OnProductLocChanged();
				}
			}
		}
		
		[Column(Storage="_PHUnit", DbType="VarChar(6)")]
		public string PHUnit
		{
			get
			{
				return this._PHUnit;
			}
			set
			{
				if ((this._PHUnit != value))
				{
					this.OnPHUnitChanging(value);
					this.SendPropertyChanging();
					this._PHUnit = value;
					this.SendPropertyChanged("PHUnit");
					this.OnPHUnitChanged();
				}
			}
		}
		
		[Column(Storage="_GrnQty", DbType="Int")]
		public System.Nullable<int> GrnQty
		{
			get
			{
				return this._GrnQty;
			}
			set
			{
				if ((this._GrnQty != value))
				{
					this.OnGrnQtyChanging(value);
					this.SendPropertyChanging();
					this._GrnQty = value;
					this.SendPropertyChanged("GrnQty");
					this.OnGrnQtyChanged();
				}
			}
		}
		
		[Column(Storage="_WeightHsCode", DbType="Decimal(10,6)")]
		public System.Nullable<decimal> WeightHsCode
		{
			get
			{
				return this._WeightHsCode;
			}
			set
			{
				if ((this._WeightHsCode != value))
				{
					this.OnWeightHsCodeChanging(value);
					this.SendPropertyChanging();
					this._WeightHsCode = value;
					this.SendPropertyChanged("WeightHsCode");
					this.OnWeightHsCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Currency", DbType="VarChar(5)")]
		public string Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[Column(Storage="_Price", DbType="Decimal(6,2)")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[Column(Storage="_TotalCost", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> TotalCost
		{
			get
			{
				return this._TotalCost;
			}
			set
			{
				if ((this._TotalCost != value))
				{
					this.OnTotalCostChanging(value);
					this.SendPropertyChanging();
					this._TotalCost = value;
					this.SendPropertyChanged("TotalCost");
					this.OnTotalCostChanged();
				}
			}
		}
		
		[Column(Storage="_BoxQty", DbType="Int")]
		public System.Nullable<int> BoxQty
		{
			get
			{
				return this._BoxQty;
			}
			set
			{
				if ((this._BoxQty != value))
				{
					this.OnBoxQtyChanging(value);
					this.SendPropertyChanging();
					this._BoxQty = value;
					this.SendPropertyChanged("BoxQty");
					this.OnBoxQtyChanged();
				}
			}
		}
		
		[Column(Storage="_BoxNo", DbType="VarChar(10)")]
		public string BoxNo
		{
			get
			{
				return this._BoxNo;
			}
			set
			{
				if ((this._BoxNo != value))
				{
					this.OnBoxNoChanging(value);
					this.SendPropertyChanging();
					this._BoxNo = value;
					this.SendPropertyChanged("BoxNo");
					this.OnBoxNoChanged();
				}
			}
		}
		
		[Column(Storage="_Weight_J", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> Weight_J
		{
			get
			{
				return this._Weight_J;
			}
			set
			{
				if ((this._Weight_J != value))
				{
					this.OnWeight_JChanging(value);
					this.SendPropertyChanging();
					this._Weight_J = value;
					this.SendPropertyChanged("Weight_J");
					this.OnWeight_JChanged();
				}
			}
		}
		
		[Column(Storage="_Weight_M", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> Weight_M
		{
			get
			{
				return this._Weight_M;
			}
			set
			{
				if ((this._Weight_M != value))
				{
					this.OnWeight_MChanging(value);
					this.SendPropertyChanging();
					this._Weight_M = value;
					this.SendPropertyChanged("Weight_M");
					this.OnWeight_MChanged();
				}
			}
		}
		
		[Column(Storage="_HSCodeSeq", DbType="Int")]
		public System.Nullable<int> HSCodeSeq
		{
			get
			{
				return this._HSCodeSeq;
			}
			set
			{
				if ((this._HSCodeSeq != value))
				{
					this.OnHSCodeSeqChanging(value);
					this.SendPropertyChanging();
					this._HSCodeSeq = value;
					this.SendPropertyChanged("HSCodeSeq");
					this.OnHSCodeSeqChanged();
				}
			}
		}
		
		[Column(Storage="_ContractNo", DbType="VarChar(20)")]
		public string ContractNo
		{
			get
			{
				return this._ContractNo;
			}
			set
			{
				if ((this._ContractNo != value))
				{
					this.OnContractNoChanging(value);
					this.SendPropertyChanging();
					this._ContractNo = value;
					this.SendPropertyChanged("ContractNo");
					this.OnContractNoChanged();
				}
			}
		}
		
		[Column(Storage="_ItemNo", DbType="VarChar(10)")]
		public string ItemNo
		{
			get
			{
				return this._ItemNo;
			}
			set
			{
				if ((this._ItemNo != value))
				{
					this.OnItemNoChanging(value);
					this.SendPropertyChanging();
					this._ItemNo = value;
					this.SendPropertyChanged("ItemNo");
					this.OnItemNoChanged();
				}
			}
		}
		
		[Column(Storage="_BG_Name", DbType="NVarChar(60)")]
		public string BG_Name
		{
			get
			{
				return this._BG_Name;
			}
			set
			{
				if ((this._BG_Name != value))
				{
					this.OnBG_NameChanging(value);
					this.SendPropertyChanging();
					this._BG_Name = value;
					this.SendPropertyChanged("BG_Name");
					this.OnBG_NameChanged();
				}
			}
		}
		
		[Column(Storage="_BG_Unit", DbType="VarChar(5)")]
		public string BG_Unit
		{
			get
			{
				return this._BG_Unit;
			}
			set
			{
				if ((this._BG_Unit != value))
				{
					this.OnBG_UnitChanging(value);
					this.SendPropertyChanging();
					this._BG_Unit = value;
					this.SendPropertyChanged("BG_Unit");
					this.OnBG_UnitChanged();
				}
			}
		}
		
		[Column(Storage="_BG_Qty", DbType="Int")]
		public System.Nullable<int> BG_Qty
		{
			get
			{
				return this._BG_Qty;
			}
			set
			{
				if ((this._BG_Qty != value))
				{
					this.OnBG_QtyChanging(value);
					this.SendPropertyChanging();
					this._BG_Qty = value;
					this.SendPropertyChanged("BG_Qty");
					this.OnBG_QtyChanged();
				}
			}
		}
		
		[Column(Storage="_BG_No", DbType="VarChar(10)")]
		public string BG_No
		{
			get
			{
				return this._BG_No;
			}
			set
			{
				if ((this._BG_No != value))
				{
					this.OnBG_NoChanging(value);
					this.SendPropertyChanging();
					this._BG_No = value;
					this.SendPropertyChanged("BG_No");
					this.OnBG_NoChanged();
				}
			}
		}
		
		[Column(Storage="_CreateBy", DbType="NVarChar(20)")]
		public string CreateBy
		{
			get
			{
				return this._CreateBy;
			}
			set
			{
				if ((this._CreateBy != value))
				{
					this.OnCreateByChanging(value);
					this.SendPropertyChanging();
					this._CreateBy = value;
					this.SendPropertyChanged("CreateBy");
					this.OnCreateByChanged();
				}
			}
		}
		
		[Column(Storage="_Created", DbType="DateTime")]
		public System.Nullable<System.DateTime> Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[Column(Storage="_UpdateBy", DbType="NVarChar(20)")]
		public string UpdateBy
		{
			get
			{
				return this._UpdateBy;
			}
			set
			{
				if ((this._UpdateBy != value))
				{
					this.OnUpdateByChanging(value);
					this.SendPropertyChanging();
					this._UpdateBy = value;
					this.SendPropertyChanged("UpdateBy");
					this.OnUpdateByChanged();
				}
			}
		}
		
		[Column(Storage="_Updated", DbType="DateTime")]
		public System.Nullable<System.DateTime> Updated
		{
			get
			{
				return this._Updated;
			}
			set
			{
				if ((this._Updated != value))
				{
					this.OnUpdatedChanging(value);
					this.SendPropertyChanging();
					this._Updated = value;
					this.SendPropertyChanged("Updated");
					this.OnUpdatedChanged();
				}
			}
		}
		
		[Column(Storage="_GrnNo", DbType="Int")]
		public System.Nullable<int> GrnNo
		{
			get
			{
				return this._GrnNo;
			}
			set
			{
				if ((this._GrnNo != value))
				{
					this.OnGrnNoChanging(value);
					this.SendPropertyChanging();
					this._GrnNo = value;
					this.SendPropertyChanged("GrnNo");
					this.OnGrnNoChanged();
				}
			}
		}
		
		[Column(Storage="_HSCode", DbType="VarChar(50)")]
		public string HSCode
		{
			get
			{
				return this._HSCode;
			}
			set
			{
				if ((this._HSCode != value))
				{
					this.OnHSCodeChanging(value);
					this.SendPropertyChanging();
					this._HSCode = value;
					this.SendPropertyChanged("HSCode");
					this.OnHSCodeChanged();
				}
			}
		}
		
		[Column(Storage="_TransferredDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> TransferredDate
		{
			get
			{
				return this._TransferredDate;
			}
			set
			{
				if ((this._TransferredDate != value))
				{
					this.OnTransferredDateChanging(value);
					this.SendPropertyChanging();
					this._TransferredDate = value;
					this.SendPropertyChanged("TransferredDate");
					this.OnTransferredDateChanged();
				}
			}
		}
		
		[Column(Storage="_ReleasedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ReleasedDate
		{
			get
			{
				return this._ReleasedDate;
			}
			set
			{
				if ((this._ReleasedDate != value))
				{
					this.OnReleasedDateChanging(value);
					this.SendPropertyChanging();
					this._ReleasedDate = value;
					this.SendPropertyChanged("ReleasedDate");
					this.OnReleasedDateChanged();
				}
			}
		}
		
		[Column(Storage="_HDONo", DbType="VarChar(20)")]
		public string HDONo
		{
			get
			{
				return this._HDONo;
			}
			set
			{
				if ((this._HDONo != value))
				{
					this.OnHDONoChanging(value);
					this.SendPropertyChanging();
					this._HDONo = value;
					this.SendPropertyChanged("HDONo");
					this.OnHDONoChanged();
				}
			}
		}
		
		[Column(Storage="_HDOStatus", DbType="VarChar(10)")]
		public string HDOStatus
		{
			get
			{
				return this._HDOStatus;
			}
			set
			{
				if ((this._HDOStatus != value))
				{
					this.OnHDOStatusChanging(value);
					this.SendPropertyChanging();
					this._HDOStatus = value;
					this.SendPropertyChanged("HDOStatus");
					this.OnHDOStatusChanged();
				}
			}
		}
		
		[Column(Storage="_HDODate", DbType="Int")]
		public System.Nullable<int> HDODate
		{
			get
			{
				return this._HDODate;
			}
			set
			{
				if ((this._HDODate != value))
				{
					this.OnHDODateChanging(value);
					this.SendPropertyChanging();
					this._HDODate = value;
					this.SendPropertyChanged("HDODate");
					this.OnHDODateChanged();
				}
			}
		}
		
		[Column(Storage="_ReceivedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ReceivedDate
		{
			get
			{
				return this._ReceivedDate;
			}
			set
			{
				if ((this._ReceivedDate != value))
				{
					this.OnReceivedDateChanging(value);
					this.SendPropertyChanging();
					this._ReceivedDate = value;
					this.SendPropertyChanged("ReceivedDate");
					this.OnReceivedDateChanged();
				}
			}
		}
		
		[Column(Storage="_BG_WeightAct", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> BG_WeightAct
		{
			get
			{
				return this._BG_WeightAct;
			}
			set
			{
				if ((this._BG_WeightAct != value))
				{
					this.OnBG_WeightActChanging(value);
					this.SendPropertyChanging();
					this._BG_WeightAct = value;
					this.SendPropertyChanged("BG_WeightAct");
					this.OnBG_WeightActChanged();
				}
			}
		}
		
		[Column(Storage="_BG_WeightCal", DbType="Decimal(10,2)")]
		public decimal BG_WeightCal
		{
			get
			{
				return this._BG_WeightCal;
			}
			set
			{
				if ((this._BG_WeightCal != value))
				{
					this.OnBG_WeightCalChanging(value);
					this.SendPropertyChanging();
					this._BG_WeightCal = value;
					this.SendPropertyChanged("BG_WeightCal");
					this.OnBG_WeightCalChanged();
				}
			}
		}
		
		[Column(Storage="_Remark", DbType="NVarChar(60)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[Column(Storage="_BG_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> BG_Date
		{
			get
			{
				return this._BG_Date;
			}
			set
			{
				if ((this._BG_Date != value))
				{
					this.OnBG_DateChanging(value);
					this.SendPropertyChanging();
					this._BG_Date = value;
					this.SendPropertyChanged("BG_Date");
					this.OnBG_DateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.ContractInfo")]
	public partial class ContractInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CraId;
		
		private string _ContractNo;
		
		private string _ItemNo;
		
		private string _Remark;
		
		private string _CreateBy;
		
		private System.Nullable<System.DateTime> _Created;
		
		private string _UpdateBy;
		
		private System.Nullable<System.DateTime> _Updated;
		
		private string _BG_NO;
		
		private EntitySet<ContractInfoDetail> _ContractInfoDetails;
		
		private EntitySet<ContractItem> _ContractItems;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCraIdChanging(int value);
    partial void OnCraIdChanged();
    partial void OnContractNoChanging(string value);
    partial void OnContractNoChanged();
    partial void OnItemNoChanging(string value);
    partial void OnItemNoChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnCreateByChanging(string value);
    partial void OnCreateByChanged();
    partial void OnCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedChanged();
    partial void OnUpdateByChanging(string value);
    partial void OnUpdateByChanged();
    partial void OnUpdatedChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedChanged();
    partial void OnBG_NOChanging(string value);
    partial void OnBG_NOChanged();
    #endregion
		
		public ContractInfo()
		{
			this._ContractInfoDetails = new EntitySet<ContractInfoDetail>(new Action<ContractInfoDetail>(this.attach_ContractInfoDetails), new Action<ContractInfoDetail>(this.detach_ContractInfoDetails));
			this._ContractItems = new EntitySet<ContractItem>(new Action<ContractItem>(this.attach_ContractItems), new Action<ContractItem>(this.detach_ContractItems));
			OnCreated();
		}
		
		[Column(Storage="_CraId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CraId
		{
			get
			{
				return this._CraId;
			}
			set
			{
				if ((this._CraId != value))
				{
					this.OnCraIdChanging(value);
					this.SendPropertyChanging();
					this._CraId = value;
					this.SendPropertyChanged("CraId");
					this.OnCraIdChanged();
				}
			}
		}
		
		[Column(Storage="_ContractNo", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string ContractNo
		{
			get
			{
				return this._ContractNo;
			}
			set
			{
				if ((this._ContractNo != value))
				{
					this.OnContractNoChanging(value);
					this.SendPropertyChanging();
					this._ContractNo = value;
					this.SendPropertyChanged("ContractNo");
					this.OnContractNoChanged();
				}
			}
		}
		
		[Column(Storage="_ItemNo", DbType="VarChar(5) NOT NULL")]
		public string ItemNo
		{
			get
			{
				return this._ItemNo;
			}
			set
			{
				if ((this._ItemNo != value))
				{
					this.OnItemNoChanging(value);
					this.SendPropertyChanging();
					this._ItemNo = value;
					this.SendPropertyChanged("ItemNo");
					this.OnItemNoChanged();
				}
			}
		}
		
		[Column(Storage="_Remark", DbType="NVarChar(200)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[Column(Storage="_CreateBy", DbType="NVarChar(20)")]
		public string CreateBy
		{
			get
			{
				return this._CreateBy;
			}
			set
			{
				if ((this._CreateBy != value))
				{
					this.OnCreateByChanging(value);
					this.SendPropertyChanging();
					this._CreateBy = value;
					this.SendPropertyChanged("CreateBy");
					this.OnCreateByChanged();
				}
			}
		}
		
		[Column(Storage="_Created", DbType="DateTime")]
		public System.Nullable<System.DateTime> Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[Column(Storage="_UpdateBy", DbType="NVarChar(20)")]
		public string UpdateBy
		{
			get
			{
				return this._UpdateBy;
			}
			set
			{
				if ((this._UpdateBy != value))
				{
					this.OnUpdateByChanging(value);
					this.SendPropertyChanging();
					this._UpdateBy = value;
					this.SendPropertyChanged("UpdateBy");
					this.OnUpdateByChanged();
				}
			}
		}
		
		[Column(Storage="_Updated", DbType="DateTime")]
		public System.Nullable<System.DateTime> Updated
		{
			get
			{
				return this._Updated;
			}
			set
			{
				if ((this._Updated != value))
				{
					this.OnUpdatedChanging(value);
					this.SendPropertyChanging();
					this._Updated = value;
					this.SendPropertyChanged("Updated");
					this.OnUpdatedChanged();
				}
			}
		}
		
		[Column(Storage="_BG_NO", DbType="VarChar(30)")]
		public string BG_NO
		{
			get
			{
				return this._BG_NO;
			}
			set
			{
				if ((this._BG_NO != value))
				{
					this.OnBG_NOChanging(value);
					this.SendPropertyChanging();
					this._BG_NO = value;
					this.SendPropertyChanged("BG_NO");
					this.OnBG_NOChanged();
				}
			}
		}
		
		[Association(Name="ContractInfo_ContractInfoDetail", Storage="_ContractInfoDetails", ThisKey="CraId", OtherKey="CraId")]
		public EntitySet<ContractInfoDetail> ContractInfoDetails
		{
			get
			{
				return this._ContractInfoDetails;
			}
			set
			{
				this._ContractInfoDetails.Assign(value);
			}
		}
		
		[Association(Name="ContractInfo_ContractItem", Storage="_ContractItems", ThisKey="CraId", OtherKey="CraId")]
		public EntitySet<ContractItem> ContractItems
		{
			get
			{
				return this._ContractItems;
			}
			set
			{
				this._ContractItems.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ContractInfoDetails(ContractInfoDetail entity)
		{
			this.SendPropertyChanging();
			entity.ContractInfo = this;
		}
		
		private void detach_ContractInfoDetails(ContractInfoDetail entity)
		{
			this.SendPropertyChanging();
			entity.ContractInfo = null;
		}
		
		private void attach_ContractItems(ContractItem entity)
		{
			this.SendPropertyChanging();
			entity.ContractInfo = this;
		}
		
		private void detach_ContractItems(ContractItem entity)
		{
			this.SendPropertyChanging();
			entity.ContractInfo = null;
		}
	}
	
	[Table(Name="dbo.ContractInfoDetail")]
	public partial class ContractInfoDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CraId;
		
		private int _CraDetailId;
		
		private System.Nullable<int> _GrnNo;
		
		private string _SuppRef;
		
		private string _HSCode;
		
		private string _PO;
		
		private System.Nullable<bool> _POActive;
		
		private string _CreateBy;
		
		private System.Nullable<System.DateTime> _Created;
		
		private string _UpdateBy;
		
		private System.Nullable<System.DateTime> _Updated;
		
		private string _BG_Item;
		
		private EntityRef<ContractInfo> _ContractInfo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCraIdChanging(int value);
    partial void OnCraIdChanged();
    partial void OnCraDetailIdChanging(int value);
    partial void OnCraDetailIdChanged();
    partial void OnGrnNoChanging(System.Nullable<int> value);
    partial void OnGrnNoChanged();
    partial void OnSuppRefChanging(string value);
    partial void OnSuppRefChanged();
    partial void OnHSCodeChanging(string value);
    partial void OnHSCodeChanged();
    partial void OnPOChanging(string value);
    partial void OnPOChanged();
    partial void OnPOActiveChanging(System.Nullable<bool> value);
    partial void OnPOActiveChanged();
    partial void OnCreateByChanging(string value);
    partial void OnCreateByChanged();
    partial void OnCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedChanged();
    partial void OnUpdateByChanging(string value);
    partial void OnUpdateByChanged();
    partial void OnUpdatedChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedChanged();
    partial void OnBG_ItemChanging(string value);
    partial void OnBG_ItemChanged();
    #endregion
		
		public ContractInfoDetail()
		{
			this._ContractInfo = default(EntityRef<ContractInfo>);
			OnCreated();
		}
		
		[Column(Storage="_CraId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CraId
		{
			get
			{
				return this._CraId;
			}
			set
			{
				if ((this._CraId != value))
				{
					if (this._ContractInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCraIdChanging(value);
					this.SendPropertyChanging();
					this._CraId = value;
					this.SendPropertyChanged("CraId");
					this.OnCraIdChanged();
				}
			}
		}
		
		[Column(Storage="_CraDetailId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CraDetailId
		{
			get
			{
				return this._CraDetailId;
			}
			set
			{
				if ((this._CraDetailId != value))
				{
					this.OnCraDetailIdChanging(value);
					this.SendPropertyChanging();
					this._CraDetailId = value;
					this.SendPropertyChanged("CraDetailId");
					this.OnCraDetailIdChanged();
				}
			}
		}
		
		[Column(Storage="_GrnNo", DbType="Int")]
		public System.Nullable<int> GrnNo
		{
			get
			{
				return this._GrnNo;
			}
			set
			{
				if ((this._GrnNo != value))
				{
					this.OnGrnNoChanging(value);
					this.SendPropertyChanging();
					this._GrnNo = value;
					this.SendPropertyChanged("GrnNo");
					this.OnGrnNoChanged();
				}
			}
		}
		
		[Column(Storage="_SuppRef", DbType="NVarChar(20)")]
		public string SuppRef
		{
			get
			{
				return this._SuppRef;
			}
			set
			{
				if ((this._SuppRef != value))
				{
					this.OnSuppRefChanging(value);
					this.SendPropertyChanging();
					this._SuppRef = value;
					this.SendPropertyChanged("SuppRef");
					this.OnSuppRefChanged();
				}
			}
		}
		
		[Column(Storage="_HSCode", DbType="VarChar(50)")]
		public string HSCode
		{
			get
			{
				return this._HSCode;
			}
			set
			{
				if ((this._HSCode != value))
				{
					this.OnHSCodeChanging(value);
					this.SendPropertyChanging();
					this._HSCode = value;
					this.SendPropertyChanged("HSCode");
					this.OnHSCodeChanged();
				}
			}
		}
		
		[Column(Storage="_PO", DbType="VarChar(20)")]
		public string PO
		{
			get
			{
				return this._PO;
			}
			set
			{
				if ((this._PO != value))
				{
					this.OnPOChanging(value);
					this.SendPropertyChanging();
					this._PO = value;
					this.SendPropertyChanged("PO");
					this.OnPOChanged();
				}
			}
		}
		
		[Column(Storage="_POActive", DbType="Bit")]
		public System.Nullable<bool> POActive
		{
			get
			{
				return this._POActive;
			}
			set
			{
				if ((this._POActive != value))
				{
					this.OnPOActiveChanging(value);
					this.SendPropertyChanging();
					this._POActive = value;
					this.SendPropertyChanged("POActive");
					this.OnPOActiveChanged();
				}
			}
		}
		
		[Column(Storage="_CreateBy", DbType="NVarChar(20)")]
		public string CreateBy
		{
			get
			{
				return this._CreateBy;
			}
			set
			{
				if ((this._CreateBy != value))
				{
					this.OnCreateByChanging(value);
					this.SendPropertyChanging();
					this._CreateBy = value;
					this.SendPropertyChanged("CreateBy");
					this.OnCreateByChanged();
				}
			}
		}
		
		[Column(Storage="_Created", DbType="DateTime")]
		public System.Nullable<System.DateTime> Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[Column(Storage="_UpdateBy", DbType="NVarChar(20)")]
		public string UpdateBy
		{
			get
			{
				return this._UpdateBy;
			}
			set
			{
				if ((this._UpdateBy != value))
				{
					this.OnUpdateByChanging(value);
					this.SendPropertyChanging();
					this._UpdateBy = value;
					this.SendPropertyChanged("UpdateBy");
					this.OnUpdateByChanged();
				}
			}
		}
		
		[Column(Storage="_Updated", DbType="DateTime")]
		public System.Nullable<System.DateTime> Updated
		{
			get
			{
				return this._Updated;
			}
			set
			{
				if ((this._Updated != value))
				{
					this.OnUpdatedChanging(value);
					this.SendPropertyChanging();
					this._Updated = value;
					this.SendPropertyChanged("Updated");
					this.OnUpdatedChanged();
				}
			}
		}
		
		[Column(Storage="_BG_Item", DbType="VarChar(10)")]
		public string BG_Item
		{
			get
			{
				return this._BG_Item;
			}
			set
			{
				if ((this._BG_Item != value))
				{
					this.OnBG_ItemChanging(value);
					this.SendPropertyChanging();
					this._BG_Item = value;
					this.SendPropertyChanged("BG_Item");
					this.OnBG_ItemChanged();
				}
			}
		}
		
		[Association(Name="ContractInfo_ContractInfoDetail", Storage="_ContractInfo", ThisKey="CraId", OtherKey="CraId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public ContractInfo ContractInfo
		{
			get
			{
				return this._ContractInfo.Entity;
			}
			set
			{
				ContractInfo previousValue = this._ContractInfo.Entity;
				if (((previousValue != value) 
							|| (this._ContractInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ContractInfo.Entity = null;
						previousValue.ContractInfoDetails.Remove(this);
					}
					this._ContractInfo.Entity = value;
					if ((value != null))
					{
						value.ContractInfoDetails.Add(this);
						this._CraId = value.CraId;
					}
					else
					{
						this._CraId = default(int);
					}
					this.SendPropertyChanged("ContractInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.ContractItem")]
	public partial class ContractItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CraId;
		
		private int _RecId;
		
		private string _HSCode;
		
		private string _BG_Item;
		
		private string _CreateBy;
		
		private System.Nullable<System.DateTime> _Created;
		
		private string _UpdateBy;
		
		private System.Nullable<System.DateTime> _Updated;
		
		private EntityRef<ContractInfo> _ContractInfo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCraIdChanging(int value);
    partial void OnCraIdChanged();
    partial void OnRecIdChanging(int value);
    partial void OnRecIdChanged();
    partial void OnHSCodeChanging(string value);
    partial void OnHSCodeChanged();
    partial void OnBG_ItemChanging(string value);
    partial void OnBG_ItemChanged();
    partial void OnCreateByChanging(string value);
    partial void OnCreateByChanged();
    partial void OnCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedChanged();
    partial void OnUpdateByChanging(string value);
    partial void OnUpdateByChanged();
    partial void OnUpdatedChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedChanged();
    #endregion
		
		public ContractItem()
		{
			this._ContractInfo = default(EntityRef<ContractInfo>);
			OnCreated();
		}
		
		[Column(Storage="_CraId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CraId
		{
			get
			{
				return this._CraId;
			}
			set
			{
				if ((this._CraId != value))
				{
					if (this._ContractInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCraIdChanging(value);
					this.SendPropertyChanging();
					this._CraId = value;
					this.SendPropertyChanged("CraId");
					this.OnCraIdChanged();
				}
			}
		}
		
		[Column(Storage="_RecId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RecId
		{
			get
			{
				return this._RecId;
			}
			set
			{
				if ((this._RecId != value))
				{
					this.OnRecIdChanging(value);
					this.SendPropertyChanging();
					this._RecId = value;
					this.SendPropertyChanged("RecId");
					this.OnRecIdChanged();
				}
			}
		}
		
		[Column(Storage="_HSCode", DbType="VarChar(50)")]
		public string HSCode
		{
			get
			{
				return this._HSCode;
			}
			set
			{
				if ((this._HSCode != value))
				{
					this.OnHSCodeChanging(value);
					this.SendPropertyChanging();
					this._HSCode = value;
					this.SendPropertyChanged("HSCode");
					this.OnHSCodeChanged();
				}
			}
		}
		
		[Column(Storage="_BG_Item", DbType="VarChar(10)")]
		public string BG_Item
		{
			get
			{
				return this._BG_Item;
			}
			set
			{
				if ((this._BG_Item != value))
				{
					this.OnBG_ItemChanging(value);
					this.SendPropertyChanging();
					this._BG_Item = value;
					this.SendPropertyChanged("BG_Item");
					this.OnBG_ItemChanged();
				}
			}
		}
		
		[Column(Storage="_CreateBy", DbType="NVarChar(20)")]
		public string CreateBy
		{
			get
			{
				return this._CreateBy;
			}
			set
			{
				if ((this._CreateBy != value))
				{
					this.OnCreateByChanging(value);
					this.SendPropertyChanging();
					this._CreateBy = value;
					this.SendPropertyChanged("CreateBy");
					this.OnCreateByChanged();
				}
			}
		}
		
		[Column(Storage="_Created", DbType="DateTime")]
		public System.Nullable<System.DateTime> Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[Column(Storage="_UpdateBy", DbType="NVarChar(20)")]
		public string UpdateBy
		{
			get
			{
				return this._UpdateBy;
			}
			set
			{
				if ((this._UpdateBy != value))
				{
					this.OnUpdateByChanging(value);
					this.SendPropertyChanging();
					this._UpdateBy = value;
					this.SendPropertyChanged("UpdateBy");
					this.OnUpdateByChanged();
				}
			}
		}
		
		[Column(Storage="_Updated", DbType="DateTime")]
		public System.Nullable<System.DateTime> Updated
		{
			get
			{
				return this._Updated;
			}
			set
			{
				if ((this._Updated != value))
				{
					this.OnUpdatedChanging(value);
					this.SendPropertyChanging();
					this._Updated = value;
					this.SendPropertyChanged("Updated");
					this.OnUpdatedChanged();
				}
			}
		}
		
		[Association(Name="ContractInfo_ContractItem", Storage="_ContractInfo", ThisKey="CraId", OtherKey="CraId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public ContractInfo ContractInfo
		{
			get
			{
				return this._ContractInfo.Entity;
			}
			set
			{
				ContractInfo previousValue = this._ContractInfo.Entity;
				if (((previousValue != value) 
							|| (this._ContractInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ContractInfo.Entity = null;
						previousValue.ContractItems.Remove(this);
					}
					this._ContractInfo.Entity = value;
					if ((value != null))
					{
						value.ContractItems.Add(this);
						this._CraId = value.CraId;
					}
					else
					{
						this._CraId = default(int);
					}
					this.SendPropertyChanged("ContractInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.GrnImported")]
	public partial class GrnImported : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GRNO59;
		
		private decimal _LINE59;
		
		private decimal _DLIN59;
		
		private string _ITEM59;
		
		private string _CreateBy;
		
		private System.Nullable<System.DateTime> _Created;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGRNO59Changing(int value);
    partial void OnGRNO59Changed();
    partial void OnLINE59Changing(decimal value);
    partial void OnLINE59Changed();
    partial void OnDLIN59Changing(decimal value);
    partial void OnDLIN59Changed();
    partial void OnITEM59Changing(string value);
    partial void OnITEM59Changed();
    partial void OnCreateByChanging(string value);
    partial void OnCreateByChanged();
    partial void OnCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedChanged();
    #endregion
		
		public GrnImported()
		{
			OnCreated();
		}
		
		[Column(Storage="_GRNO59", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int GRNO59
		{
			get
			{
				return this._GRNO59;
			}
			set
			{
				if ((this._GRNO59 != value))
				{
					this.OnGRNO59Changing(value);
					this.SendPropertyChanging();
					this._GRNO59 = value;
					this.SendPropertyChanged("GRNO59");
					this.OnGRNO59Changed();
				}
			}
		}
		
		[Column(Storage="_LINE59", DbType="Decimal(3,0) NOT NULL", IsPrimaryKey=true)]
		public decimal LINE59
		{
			get
			{
				return this._LINE59;
			}
			set
			{
				if ((this._LINE59 != value))
				{
					this.OnLINE59Changing(value);
					this.SendPropertyChanging();
					this._LINE59 = value;
					this.SendPropertyChanged("LINE59");
					this.OnLINE59Changed();
				}
			}
		}
		
		[Column(Storage="_DLIN59", DbType="Decimal(7,0) NOT NULL", IsPrimaryKey=true)]
		public decimal DLIN59
		{
			get
			{
				return this._DLIN59;
			}
			set
			{
				if ((this._DLIN59 != value))
				{
					this.OnDLIN59Changing(value);
					this.SendPropertyChanging();
					this._DLIN59 = value;
					this.SendPropertyChanged("DLIN59");
					this.OnDLIN59Changed();
				}
			}
		}
		
		[Column(Storage="_ITEM59", DbType="NVarChar(25) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ITEM59
		{
			get
			{
				return this._ITEM59;
			}
			set
			{
				if ((this._ITEM59 != value))
				{
					this.OnITEM59Changing(value);
					this.SendPropertyChanging();
					this._ITEM59 = value;
					this.SendPropertyChanged("ITEM59");
					this.OnITEM59Changed();
				}
			}
		}
		
		[Column(Storage="_CreateBy", DbType="NVarChar(20)")]
		public string CreateBy
		{
			get
			{
				return this._CreateBy;
			}
			set
			{
				if ((this._CreateBy != value))
				{
					this.OnCreateByChanging(value);
					this.SendPropertyChanging();
					this._CreateBy = value;
					this.SendPropertyChanged("CreateBy");
					this.OnCreateByChanged();
				}
			}
		}
		
		[Column(Storage="_Created", DbType="DateTime")]
		public System.Nullable<System.DateTime> Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.HDOHandling")]
	public partial class HDOHandling : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Company;
		
		private string _HDONo;
		
		private System.Nullable<System.DateTime> _PlannedDate;
		
		private string _PlannedBy;
		
		private System.Nullable<System.DateTime> _ReleasedDate;
		
		private string _ReleasedBy;
		
		private System.Nullable<System.DateTime> _TransferredDate;
		
		private string _TransferredBy;
		
		private string _CustDeclarationNo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnHDONoChanging(string value);
    partial void OnHDONoChanged();
    partial void OnPlannedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPlannedDateChanged();
    partial void OnPlannedByChanging(string value);
    partial void OnPlannedByChanged();
    partial void OnReleasedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnReleasedDateChanged();
    partial void OnReleasedByChanging(string value);
    partial void OnReleasedByChanged();
    partial void OnTransferredDateChanging(System.Nullable<System.DateTime> value);
    partial void OnTransferredDateChanged();
    partial void OnTransferredByChanging(string value);
    partial void OnTransferredByChanged();
    partial void OnCustDeclarationNoChanging(string value);
    partial void OnCustDeclarationNoChanged();
    #endregion
		
		public HDOHandling()
		{
			OnCreated();
		}
		
		[Column(Storage="_Company", DbType="VarChar(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[Column(Storage="_HDONo", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string HDONo
		{
			get
			{
				return this._HDONo;
			}
			set
			{
				if ((this._HDONo != value))
				{
					this.OnHDONoChanging(value);
					this.SendPropertyChanging();
					this._HDONo = value;
					this.SendPropertyChanged("HDONo");
					this.OnHDONoChanged();
				}
			}
		}
		
		[Column(Storage="_PlannedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PlannedDate
		{
			get
			{
				return this._PlannedDate;
			}
			set
			{
				if ((this._PlannedDate != value))
				{
					this.OnPlannedDateChanging(value);
					this.SendPropertyChanging();
					this._PlannedDate = value;
					this.SendPropertyChanged("PlannedDate");
					this.OnPlannedDateChanged();
				}
			}
		}
		
		[Column(Storage="_PlannedBy", DbType="NVarChar(20)")]
		public string PlannedBy
		{
			get
			{
				return this._PlannedBy;
			}
			set
			{
				if ((this._PlannedBy != value))
				{
					this.OnPlannedByChanging(value);
					this.SendPropertyChanging();
					this._PlannedBy = value;
					this.SendPropertyChanged("PlannedBy");
					this.OnPlannedByChanged();
				}
			}
		}
		
		[Column(Storage="_ReleasedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ReleasedDate
		{
			get
			{
				return this._ReleasedDate;
			}
			set
			{
				if ((this._ReleasedDate != value))
				{
					this.OnReleasedDateChanging(value);
					this.SendPropertyChanging();
					this._ReleasedDate = value;
					this.SendPropertyChanged("ReleasedDate");
					this.OnReleasedDateChanged();
				}
			}
		}
		
		[Column(Storage="_ReleasedBy", DbType="NVarChar(20)")]
		public string ReleasedBy
		{
			get
			{
				return this._ReleasedBy;
			}
			set
			{
				if ((this._ReleasedBy != value))
				{
					this.OnReleasedByChanging(value);
					this.SendPropertyChanging();
					this._ReleasedBy = value;
					this.SendPropertyChanged("ReleasedBy");
					this.OnReleasedByChanged();
				}
			}
		}
		
		[Column(Storage="_TransferredDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> TransferredDate
		{
			get
			{
				return this._TransferredDate;
			}
			set
			{
				if ((this._TransferredDate != value))
				{
					this.OnTransferredDateChanging(value);
					this.SendPropertyChanging();
					this._TransferredDate = value;
					this.SendPropertyChanged("TransferredDate");
					this.OnTransferredDateChanged();
				}
			}
		}
		
		[Column(Storage="_TransferredBy", DbType="NVarChar(20)")]
		public string TransferredBy
		{
			get
			{
				return this._TransferredBy;
			}
			set
			{
				if ((this._TransferredBy != value))
				{
					this.OnTransferredByChanging(value);
					this.SendPropertyChanging();
					this._TransferredBy = value;
					this.SendPropertyChanged("TransferredBy");
					this.OnTransferredByChanged();
				}
			}
		}
		
		[Column(Storage="_CustDeclarationNo", DbType="NVarChar(200)")]
		public string CustDeclarationNo
		{
			get
			{
				return this._CustDeclarationNo;
			}
			set
			{
				if ((this._CustDeclarationNo != value))
				{
					this.OnCustDeclarationNoChanging(value);
					this.SendPropertyChanging();
					this._CustDeclarationNo = value;
					this.SendPropertyChanged("CustDeclarationNo");
					this.OnCustDeclarationNoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.HDOReleasedDateInfomation")]
	public partial class HDOReleasedDateInfomation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _HDONo;
		
		private System.Nullable<System.DateTime> _HDODate;
		
		private System.Nullable<System.DateTime> _HDOReleasedDate;
		
		private string _Status;
		
		private System.Nullable<bool> _IsShow;
		
		private string _Whse;
		
		private string _Creator;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHDONoChanging(string value);
    partial void OnHDONoChanged();
    partial void OnHDODateChanging(System.Nullable<System.DateTime> value);
    partial void OnHDODateChanged();
    partial void OnHDOReleasedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnHDOReleasedDateChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnIsShowChanging(System.Nullable<bool> value);
    partial void OnIsShowChanged();
    partial void OnWhseChanging(string value);
    partial void OnWhseChanged();
    partial void OnCreatorChanging(string value);
    partial void OnCreatorChanged();
    #endregion
		
		public HDOReleasedDateInfomation()
		{
			OnCreated();
		}
		
		[Column(Storage="_HDONo", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string HDONo
		{
			get
			{
				return this._HDONo;
			}
			set
			{
				if ((this._HDONo != value))
				{
					this.OnHDONoChanging(value);
					this.SendPropertyChanging();
					this._HDONo = value;
					this.SendPropertyChanged("HDONo");
					this.OnHDONoChanged();
				}
			}
		}
		
		[Column(Storage="_HDODate", DbType="DateTime")]
		public System.Nullable<System.DateTime> HDODate
		{
			get
			{
				return this._HDODate;
			}
			set
			{
				if ((this._HDODate != value))
				{
					this.OnHDODateChanging(value);
					this.SendPropertyChanging();
					this._HDODate = value;
					this.SendPropertyChanged("HDODate");
					this.OnHDODateChanged();
				}
			}
		}
		
		[Column(Storage="_HDOReleasedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> HDOReleasedDate
		{
			get
			{
				return this._HDOReleasedDate;
			}
			set
			{
				if ((this._HDOReleasedDate != value))
				{
					this.OnHDOReleasedDateChanging(value);
					this.SendPropertyChanging();
					this._HDOReleasedDate = value;
					this.SendPropertyChanged("HDOReleasedDate");
					this.OnHDOReleasedDateChanged();
				}
			}
		}
		
		[Column(Storage="_Status", DbType="VarChar(20)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[Column(Storage="_IsShow", DbType="Bit")]
		public System.Nullable<bool> IsShow
		{
			get
			{
				return this._IsShow;
			}
			set
			{
				if ((this._IsShow != value))
				{
					this.OnIsShowChanging(value);
					this.SendPropertyChanging();
					this._IsShow = value;
					this.SendPropertyChanged("IsShow");
					this.OnIsShowChanged();
				}
			}
		}
		
		[Column(Storage="_Whse", DbType="VarChar(50)")]
		public string Whse
		{
			get
			{
				return this._Whse;
			}
			set
			{
				if ((this._Whse != value))
				{
					this.OnWhseChanging(value);
					this.SendPropertyChanging();
					this._Whse = value;
					this.SendPropertyChanged("Whse");
					this.OnWhseChanged();
				}
			}
		}
		
		[Column(Storage="_Creator", DbType="VarChar(50)")]
		public string Creator
		{
			get
			{
				return this._Creator;
			}
			set
			{
				if ((this._Creator != value))
				{
					this.OnCreatorChanging(value);
					this.SendPropertyChanging();
					this._Creator = value;
					this.SendPropertyChanged("Creator");
					this.OnCreatorChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.HDODelivery")]
	public partial class HDODelivery : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Company;
		
		private int _GRNNO;
		
		private string _Incoterms;
		
		private System.Nullable<System.DateTime> _POTransitDate;
		
		private System.Nullable<System.DateTime> _ActualTransitDate;
		
		private System.Nullable<System.DateTime> _ETADate;
		
		private System.Nullable<bool> _Received;
		
		private System.Nullable<bool> _GRNStatus;
		
		private System.Nullable<System.DateTime> _ReceivedDate;
		
		private string _EntranceCustomNO;
		
		private System.Nullable<System.DateTime> _EntranceCustomDate;
		
		private string _HDONO;
		
		private string _TransitMode;
		
		private System.Nullable<decimal> _CBM;
		
		private string _PONo;
		
		private string _Fty;
		
		private string _ERPSupplier;
		
		private System.Nullable<int> _TimeFrame;
		
		private string _AdviceNoteNo;
		
		private System.Nullable<System.DateTime> _HDODate;
		
		private System.Nullable<char> _HDOStatus;
		
		private System.Nullable<int> _recd59;
		
		private System.Nullable<System.DateTime> _GRNDate;
		
		private string _SuppCde;
		
		private string _MaterialGrp;
		
		private System.Nullable<decimal> _GRNQty;
		
		private string _PHUom;
		
		private System.Nullable<int> _ROLL;
		
		private string _PLNN;
		
		private string _HDOUser;
		
		private string _HDO_Status;
		
		private string _Whse;
		
		private string _Checked;
		
		private System.Nullable<decimal> _TransitQty;
		
		private string _POUom;
		
		private EntitySet<HDOQuantity> _HDOQuantities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnGRNNOChanging(int value);
    partial void OnGRNNOChanged();
    partial void OnIncotermsChanging(string value);
    partial void OnIncotermsChanged();
    partial void OnPOTransitDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPOTransitDateChanged();
    partial void OnActualTransitDateChanging(System.Nullable<System.DateTime> value);
    partial void OnActualTransitDateChanged();
    partial void OnETADateChanging(System.Nullable<System.DateTime> value);
    partial void OnETADateChanged();
    partial void OnReceivedChanging(System.Nullable<bool> value);
    partial void OnReceivedChanged();
    partial void OnGRNStatusChanging(System.Nullable<bool> value);
    partial void OnGRNStatusChanged();
    partial void OnReceivedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnReceivedDateChanged();
    partial void OnEntranceCustomNOChanging(string value);
    partial void OnEntranceCustomNOChanged();
    partial void OnEntranceCustomDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEntranceCustomDateChanged();
    partial void OnHDONOChanging(string value);
    partial void OnHDONOChanged();
    partial void OnTransitModeChanging(string value);
    partial void OnTransitModeChanged();
    partial void OnCBMChanging(System.Nullable<decimal> value);
    partial void OnCBMChanged();
    partial void OnPONoChanging(string value);
    partial void OnPONoChanged();
    partial void OnFtyChanging(string value);
    partial void OnFtyChanged();
    partial void OnERPSupplierChanging(string value);
    partial void OnERPSupplierChanged();
    partial void OnTimeFrameChanging(System.Nullable<int> value);
    partial void OnTimeFrameChanged();
    partial void OnAdviceNoteNoChanging(string value);
    partial void OnAdviceNoteNoChanged();
    partial void OnHDODateChanging(System.Nullable<System.DateTime> value);
    partial void OnHDODateChanged();
    partial void OnHDOStatusChanging(System.Nullable<char> value);
    partial void OnHDOStatusChanged();
    partial void Onrecd59Changing(System.Nullable<int> value);
    partial void Onrecd59Changed();
    partial void OnGRNDateChanging(System.Nullable<System.DateTime> value);
    partial void OnGRNDateChanged();
    partial void OnSuppCdeChanging(string value);
    partial void OnSuppCdeChanged();
    partial void OnMaterialGrpChanging(string value);
    partial void OnMaterialGrpChanged();
    partial void OnGRNQtyChanging(System.Nullable<decimal> value);
    partial void OnGRNQtyChanged();
    partial void OnPHUomChanging(string value);
    partial void OnPHUomChanged();
    partial void OnROLLChanging(System.Nullable<int> value);
    partial void OnROLLChanged();
    partial void OnPLNNChanging(string value);
    partial void OnPLNNChanged();
    partial void OnHDOUserChanging(string value);
    partial void OnHDOUserChanged();
    partial void OnHDO_StatusChanging(string value);
    partial void OnHDO_StatusChanged();
    partial void OnWhseChanging(string value);
    partial void OnWhseChanged();
    partial void OnCheckedChanging(string value);
    partial void OnCheckedChanged();
    partial void OnTransitQtyChanging(System.Nullable<decimal> value);
    partial void OnTransitQtyChanged();
    partial void OnPOUomChanging(string value);
    partial void OnPOUomChanged();
    #endregion
		
		public HDODelivery()
		{
			this._HDOQuantities = new EntitySet<HDOQuantity>(new Action<HDOQuantity>(this.attach_HDOQuantities), new Action<HDOQuantity>(this.detach_HDOQuantities));
			OnCreated();
		}
		
		[Column(Storage="_Company", DbType="VarChar(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[Column(Storage="_GRNNO", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int GRNNO
		{
			get
			{
				return this._GRNNO;
			}
			set
			{
				if ((this._GRNNO != value))
				{
					this.OnGRNNOChanging(value);
					this.SendPropertyChanging();
					this._GRNNO = value;
					this.SendPropertyChanged("GRNNO");
					this.OnGRNNOChanged();
				}
			}
		}
		
		[Column(Storage="_Incoterms", DbType="NVarChar(10)")]
		public string Incoterms
		{
			get
			{
				return this._Incoterms;
			}
			set
			{
				if ((this._Incoterms != value))
				{
					this.OnIncotermsChanging(value);
					this.SendPropertyChanging();
					this._Incoterms = value;
					this.SendPropertyChanged("Incoterms");
					this.OnIncotermsChanged();
				}
			}
		}
		
		[Column(Storage="_POTransitDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> POTransitDate
		{
			get
			{
				return this._POTransitDate;
			}
			set
			{
				if ((this._POTransitDate != value))
				{
					this.OnPOTransitDateChanging(value);
					this.SendPropertyChanging();
					this._POTransitDate = value;
					this.SendPropertyChanged("POTransitDate");
					this.OnPOTransitDateChanged();
				}
			}
		}
		
		[Column(Storage="_ActualTransitDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ActualTransitDate
		{
			get
			{
				return this._ActualTransitDate;
			}
			set
			{
				if ((this._ActualTransitDate != value))
				{
					this.OnActualTransitDateChanging(value);
					this.SendPropertyChanging();
					this._ActualTransitDate = value;
					this.SendPropertyChanged("ActualTransitDate");
					this.OnActualTransitDateChanged();
				}
			}
		}
		
		[Column(Storage="_ETADate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ETADate
		{
			get
			{
				return this._ETADate;
			}
			set
			{
				if ((this._ETADate != value))
				{
					this.OnETADateChanging(value);
					this.SendPropertyChanging();
					this._ETADate = value;
					this.SendPropertyChanged("ETADate");
					this.OnETADateChanged();
				}
			}
		}
		
		[Column(Storage="_Received", DbType="Bit")]
		public System.Nullable<bool> Received
		{
			get
			{
				return this._Received;
			}
			set
			{
				if ((this._Received != value))
				{
					this.OnReceivedChanging(value);
					this.SendPropertyChanging();
					this._Received = value;
					this.SendPropertyChanged("Received");
					this.OnReceivedChanged();
				}
			}
		}
		
		[Column(Storage="_GRNStatus", DbType="Bit")]
		public System.Nullable<bool> GRNStatus
		{
			get
			{
				return this._GRNStatus;
			}
			set
			{
				if ((this._GRNStatus != value))
				{
					this.OnGRNStatusChanging(value);
					this.SendPropertyChanging();
					this._GRNStatus = value;
					this.SendPropertyChanged("GRNStatus");
					this.OnGRNStatusChanged();
				}
			}
		}
		
		[Column(Storage="_ReceivedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ReceivedDate
		{
			get
			{
				return this._ReceivedDate;
			}
			set
			{
				if ((this._ReceivedDate != value))
				{
					this.OnReceivedDateChanging(value);
					this.SendPropertyChanging();
					this._ReceivedDate = value;
					this.SendPropertyChanged("ReceivedDate");
					this.OnReceivedDateChanged();
				}
			}
		}
		
		[Column(Storage="_EntranceCustomNO", DbType="NVarChar(2000)")]
		public string EntranceCustomNO
		{
			get
			{
				return this._EntranceCustomNO;
			}
			set
			{
				if ((this._EntranceCustomNO != value))
				{
					this.OnEntranceCustomNOChanging(value);
					this.SendPropertyChanging();
					this._EntranceCustomNO = value;
					this.SendPropertyChanged("EntranceCustomNO");
					this.OnEntranceCustomNOChanged();
				}
			}
		}
		
		[Column(Storage="_EntranceCustomDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EntranceCustomDate
		{
			get
			{
				return this._EntranceCustomDate;
			}
			set
			{
				if ((this._EntranceCustomDate != value))
				{
					this.OnEntranceCustomDateChanging(value);
					this.SendPropertyChanging();
					this._EntranceCustomDate = value;
					this.SendPropertyChanged("EntranceCustomDate");
					this.OnEntranceCustomDateChanged();
				}
			}
		}
		
		[Column(Storage="_HDONO", DbType="VarChar(30)")]
		public string HDONO
		{
			get
			{
				return this._HDONO;
			}
			set
			{
				if ((this._HDONO != value))
				{
					this.OnHDONOChanging(value);
					this.SendPropertyChanging();
					this._HDONO = value;
					this.SendPropertyChanged("HDONO");
					this.OnHDONOChanged();
				}
			}
		}
		
		[Column(Storage="_TransitMode", DbType="VarChar(30)")]
		public string TransitMode
		{
			get
			{
				return this._TransitMode;
			}
			set
			{
				if ((this._TransitMode != value))
				{
					this.OnTransitModeChanging(value);
					this.SendPropertyChanging();
					this._TransitMode = value;
					this.SendPropertyChanged("TransitMode");
					this.OnTransitModeChanged();
				}
			}
		}
		
		[Column(Storage="_CBM", DbType="Decimal(10,4)")]
		public System.Nullable<decimal> CBM
		{
			get
			{
				return this._CBM;
			}
			set
			{
				if ((this._CBM != value))
				{
					this.OnCBMChanging(value);
					this.SendPropertyChanging();
					this._CBM = value;
					this.SendPropertyChanged("CBM");
					this.OnCBMChanged();
				}
			}
		}
		
		[Column(Storage="_PONo", DbType="VarChar(30)")]
		public string PONo
		{
			get
			{
				return this._PONo;
			}
			set
			{
				if ((this._PONo != value))
				{
					this.OnPONoChanging(value);
					this.SendPropertyChanging();
					this._PONo = value;
					this.SendPropertyChanged("PONo");
					this.OnPONoChanged();
				}
			}
		}
		
		[Column(Storage="_Fty", DbType="VarChar(30)")]
		public string Fty
		{
			get
			{
				return this._Fty;
			}
			set
			{
				if ((this._Fty != value))
				{
					this.OnFtyChanging(value);
					this.SendPropertyChanging();
					this._Fty = value;
					this.SendPropertyChanged("Fty");
					this.OnFtyChanged();
				}
			}
		}
		
		[Column(Storage="_ERPSupplier", DbType="VarChar(30)")]
		public string ERPSupplier
		{
			get
			{
				return this._ERPSupplier;
			}
			set
			{
				if ((this._ERPSupplier != value))
				{
					this.OnERPSupplierChanging(value);
					this.SendPropertyChanging();
					this._ERPSupplier = value;
					this.SendPropertyChanged("ERPSupplier");
					this.OnERPSupplierChanged();
				}
			}
		}
		
		[Column(Storage="_TimeFrame", DbType="Int")]
		public System.Nullable<int> TimeFrame
		{
			get
			{
				return this._TimeFrame;
			}
			set
			{
				if ((this._TimeFrame != value))
				{
					this.OnTimeFrameChanging(value);
					this.SendPropertyChanging();
					this._TimeFrame = value;
					this.SendPropertyChanged("TimeFrame");
					this.OnTimeFrameChanged();
				}
			}
		}
		
		[Column(Storage="_AdviceNoteNo", DbType="VarChar(30)")]
		public string AdviceNoteNo
		{
			get
			{
				return this._AdviceNoteNo;
			}
			set
			{
				if ((this._AdviceNoteNo != value))
				{
					this.OnAdviceNoteNoChanging(value);
					this.SendPropertyChanging();
					this._AdviceNoteNo = value;
					this.SendPropertyChanged("AdviceNoteNo");
					this.OnAdviceNoteNoChanged();
				}
			}
		}
		
		[Column(Storage="_HDODate", DbType="DateTime")]
		public System.Nullable<System.DateTime> HDODate
		{
			get
			{
				return this._HDODate;
			}
			set
			{
				if ((this._HDODate != value))
				{
					this.OnHDODateChanging(value);
					this.SendPropertyChanging();
					this._HDODate = value;
					this.SendPropertyChanged("HDODate");
					this.OnHDODateChanged();
				}
			}
		}
		
		[Column(Storage="_HDOStatus", DbType="VarChar(1)")]
		public System.Nullable<char> HDOStatus
		{
			get
			{
				return this._HDOStatus;
			}
			set
			{
				if ((this._HDOStatus != value))
				{
					this.OnHDOStatusChanging(value);
					this.SendPropertyChanging();
					this._HDOStatus = value;
					this.SendPropertyChanged("HDOStatus");
					this.OnHDOStatusChanged();
				}
			}
		}
		
		[Column(Storage="_recd59", DbType="Int")]
		public System.Nullable<int> recd59
		{
			get
			{
				return this._recd59;
			}
			set
			{
				if ((this._recd59 != value))
				{
					this.Onrecd59Changing(value);
					this.SendPropertyChanging();
					this._recd59 = value;
					this.SendPropertyChanged("recd59");
					this.Onrecd59Changed();
				}
			}
		}
		
		[Column(Storage="_GRNDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> GRNDate
		{
			get
			{
				return this._GRNDate;
			}
			set
			{
				if ((this._GRNDate != value))
				{
					this.OnGRNDateChanging(value);
					this.SendPropertyChanging();
					this._GRNDate = value;
					this.SendPropertyChanged("GRNDate");
					this.OnGRNDateChanged();
				}
			}
		}
		
		[Column(Storage="_SuppCde", DbType="VarChar(10)")]
		public string SuppCde
		{
			get
			{
				return this._SuppCde;
			}
			set
			{
				if ((this._SuppCde != value))
				{
					this.OnSuppCdeChanging(value);
					this.SendPropertyChanging();
					this._SuppCde = value;
					this.SendPropertyChanged("SuppCde");
					this.OnSuppCdeChanged();
				}
			}
		}
		
		[Column(Storage="_MaterialGrp", DbType="VarChar(5)")]
		public string MaterialGrp
		{
			get
			{
				return this._MaterialGrp;
			}
			set
			{
				if ((this._MaterialGrp != value))
				{
					this.OnMaterialGrpChanging(value);
					this.SendPropertyChanging();
					this._MaterialGrp = value;
					this.SendPropertyChanged("MaterialGrp");
					this.OnMaterialGrpChanged();
				}
			}
		}
		
		[Column(Storage="_GRNQty", DbType="Decimal(18,5)")]
		public System.Nullable<decimal> GRNQty
		{
			get
			{
				return this._GRNQty;
			}
			set
			{
				if ((this._GRNQty != value))
				{
					this.OnGRNQtyChanging(value);
					this.SendPropertyChanging();
					this._GRNQty = value;
					this.SendPropertyChanged("GRNQty");
					this.OnGRNQtyChanged();
				}
			}
		}
		
		[Column(Storage="_PHUom", DbType="VarChar(10)")]
		public string PHUom
		{
			get
			{
				return this._PHUom;
			}
			set
			{
				if ((this._PHUom != value))
				{
					this.OnPHUomChanging(value);
					this.SendPropertyChanging();
					this._PHUom = value;
					this.SendPropertyChanged("PHUom");
					this.OnPHUomChanged();
				}
			}
		}
		
		[Column(Storage="_ROLL", DbType="Int")]
		public System.Nullable<int> ROLL
		{
			get
			{
				return this._ROLL;
			}
			set
			{
				if ((this._ROLL != value))
				{
					this.OnROLLChanging(value);
					this.SendPropertyChanging();
					this._ROLL = value;
					this.SendPropertyChanged("ROLL");
					this.OnROLLChanged();
				}
			}
		}
		
		[Column(Storage="_PLNN", DbType="VarChar(50)")]
		public string PLNN
		{
			get
			{
				return this._PLNN;
			}
			set
			{
				if ((this._PLNN != value))
				{
					this.OnPLNNChanging(value);
					this.SendPropertyChanging();
					this._PLNN = value;
					this.SendPropertyChanged("PLNN");
					this.OnPLNNChanged();
				}
			}
		}
		
		[Column(Storage="_HDOUser", DbType="VarChar(50)")]
		public string HDOUser
		{
			get
			{
				return this._HDOUser;
			}
			set
			{
				if ((this._HDOUser != value))
				{
					this.OnHDOUserChanging(value);
					this.SendPropertyChanging();
					this._HDOUser = value;
					this.SendPropertyChanged("HDOUser");
					this.OnHDOUserChanged();
				}
			}
		}
		
		[Column(Storage="_HDO_Status", DbType="VarChar(20)")]
		public string HDO_Status
		{
			get
			{
				return this._HDO_Status;
			}
			set
			{
				if ((this._HDO_Status != value))
				{
					this.OnHDO_StatusChanging(value);
					this.SendPropertyChanging();
					this._HDO_Status = value;
					this.SendPropertyChanged("HDO_Status");
					this.OnHDO_StatusChanged();
				}
			}
		}
		
		[Column(Storage="_Whse", DbType="VarChar(50)")]
		public string Whse
		{
			get
			{
				return this._Whse;
			}
			set
			{
				if ((this._Whse != value))
				{
					this.OnWhseChanging(value);
					this.SendPropertyChanging();
					this._Whse = value;
					this.SendPropertyChanged("Whse");
					this.OnWhseChanged();
				}
			}
		}
		
		[Column(Storage="_Checked", DbType="VarChar(10)")]
		public string Checked
		{
			get
			{
				return this._Checked;
			}
			set
			{
				if ((this._Checked != value))
				{
					this.OnCheckedChanging(value);
					this.SendPropertyChanging();
					this._Checked = value;
					this.SendPropertyChanged("Checked");
					this.OnCheckedChanged();
				}
			}
		}
		
		[Column(Storage="_TransitQty", DbType="Decimal(18,6)")]
		public System.Nullable<decimal> TransitQty
		{
			get
			{
				return this._TransitQty;
			}
			set
			{
				if ((this._TransitQty != value))
				{
					this.OnTransitQtyChanging(value);
					this.SendPropertyChanging();
					this._TransitQty = value;
					this.SendPropertyChanged("TransitQty");
					this.OnTransitQtyChanged();
				}
			}
		}
		
		[Column(Storage="_POUom", DbType="VarChar(10)")]
		public string POUom
		{
			get
			{
				return this._POUom;
			}
			set
			{
				if ((this._POUom != value))
				{
					this.OnPOUomChanging(value);
					this.SendPropertyChanging();
					this._POUom = value;
					this.SendPropertyChanged("POUom");
					this.OnPOUomChanged();
				}
			}
		}
		
		[Association(Name="HDODelivery_HDOQuantity", Storage="_HDOQuantities", ThisKey="Company,GRNNO", OtherKey="Company,GRNNO")]
		public EntitySet<HDOQuantity> HDOQuantities
		{
			get
			{
				return this._HDOQuantities;
			}
			set
			{
				this._HDOQuantities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HDOQuantities(HDOQuantity entity)
		{
			this.SendPropertyChanging();
			entity.HDODelivery = this;
		}
		
		private void detach_HDOQuantities(HDOQuantity entity)
		{
			this.SendPropertyChanging();
			entity.HDODelivery = null;
		}
	}
}
#pragma warning restore 1591
