#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.8806
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PH.LWPM.BO
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="PH.LWPM.WP")]
	public partial class RAPLQDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertMedToMcPair(MedToMcPair instance);
    partial void UpdateMedToMcPair(MedToMcPair instance);
    partial void DeleteMedToMcPair(MedToMcPair instance);
    partial void InsertOpSkill(OpSkill instance);
    partial void UpdateOpSkill(OpSkill instance);
    partial void DeleteOpSkill(OpSkill instance);
    partial void InsertOperationSkill(OperationSkill instance);
    partial void UpdateOperationSkill(OperationSkill instance);
    partial void DeleteOperationSkill(OperationSkill instance);
    partial void InsertMachineImg(MachineImg instance);
    partial void UpdateMachineImg(MachineImg instance);
    partial void DeleteMachineImg(MachineImg instance);
    partial void InsertWorkForceImg(WorkForceImg instance);
    partial void UpdateWorkForceImg(WorkForceImg instance);
    partial void DeleteWorkForceImg(WorkForceImg instance);
    partial void InsertCarEfficiency(CarEfficiency instance);
    partial void UpdateCarEfficiency(CarEfficiency instance);
    partial void DeleteCarEfficiency(CarEfficiency instance);
    partial void InsertWorkerAttendance(WorkerAttendance instance);
    partial void UpdateWorkerAttendance(WorkerAttendance instance);
    partial void DeleteWorkerAttendance(WorkerAttendance instance);
    partial void InsertFactoryLines(FactoryLines instance);
    partial void UpdateFactoryLines(FactoryLines instance);
    partial void DeleteFactoryLines(FactoryLines instance);
    partial void InsertLineCode(LineCode instance);
    partial void UpdateLineCode(LineCode instance);
    partial void DeleteLineCode(LineCode instance);
    partial void InsertSub_Section(Sub_Section instance);
    partial void UpdateSub_Section(Sub_Section instance);
    partial void DeleteSub_Section(Sub_Section instance);
    partial void InsertMcClassDetail(McClassDetail instance);
    partial void UpdateMcClassDetail(McClassDetail instance);
    partial void DeleteMcClassDetail(McClassDetail instance);
    partial void InsertQuatationInfo(QuatationInfo instance);
    partial void UpdateQuatationInfo(QuatationInfo instance);
    partial void DeleteQuatationInfo(QuatationInfo instance);
    partial void InsertBuyer(Buyer instance);
    partial void UpdateBuyer(Buyer instance);
    partial void DeleteBuyer(Buyer instance);
    partial void InsertPIDetail(PIDetail instance);
    partial void UpdatePIDetail(PIDetail instance);
    partial void DeletePIDetail(PIDetail instance);
    partial void InsertSecondment(Secondment instance);
    partial void UpdateSecondment(Secondment instance);
    partial void DeleteSecondment(Secondment instance);
    partial void InsertPoolInfo(PoolInfo instance);
    partial void UpdatePoolInfo(PoolInfo instance);
    partial void DeletePoolInfo(PoolInfo instance);
    partial void InsertPoolInfoReason(PoolInfoReason instance);
    partial void UpdatePoolInfoReason(PoolInfoReason instance);
    partial void DeletePoolInfoReason(PoolInfoReason instance);
    partial void InsertItemTool(ItemTool instance);
    partial void UpdateItemTool(ItemTool instance);
    partial void DeleteItemTool(ItemTool instance);
    partial void InsertActionLogDetail(ActionLogDetail instance);
    partial void UpdateActionLogDetail(ActionLogDetail instance);
    partial void DeleteActionLogDetail(ActionLogDetail instance);
    partial void InsertActionLogEmail(ActionLogEmail instance);
    partial void UpdateActionLogEmail(ActionLogEmail instance);
    partial void DeleteActionLogEmail(ActionLogEmail instance);
    partial void InsertEmail(Email instance);
    partial void UpdateEmail(Email instance);
    partial void DeleteEmail(Email instance);
    partial void InsertPODetail_OtherItem(PODetail_OtherItem instance);
    partial void UpdatePODetail_OtherItem(PODetail_OtherItem instance);
    partial void DeletePODetail_OtherItem(PODetail_OtherItem instance);
    partial void InsertPIDetail_OtherItem(PIDetail_OtherItem instance);
    partial void UpdatePIDetail_OtherItem(PIDetail_OtherItem instance);
    partial void DeletePIDetail_OtherItem(PIDetail_OtherItem instance);
    partial void InsertPCDetail(PCDetail instance);
    partial void UpdatePCDetail(PCDetail instance);
    partial void DeletePCDetail(PCDetail instance);
    partial void InsertPCHeader(PCHeader instance);
    partial void UpdatePCHeader(PCHeader instance);
    partial void DeletePCHeader(PCHeader instance);
    partial void InsertPODetail(PODetail instance);
    partial void UpdatePODetail(PODetail instance);
    partial void DeletePODetail(PODetail instance);
    partial void InsertQNDeleteLog(QNDeleteLog instance);
    partial void UpdateQNDeleteLog(QNDeleteLog instance);
    partial void DeleteQNDeleteLog(QNDeleteLog instance);
    partial void InsertExcludeUser(ExcludeUser instance);
    partial void UpdateExcludeUser(ExcludeUser instance);
    partial void DeleteExcludeUser(ExcludeUser instance);
    partial void InsertMatching(Matching instance);
    partial void UpdateMatching(Matching instance);
    partial void DeleteMatching(Matching instance);
    partial void InsertWPMaster(WPMaster instance);
    partial void UpdateWPMaster(WPMaster instance);
    partial void DeleteWPMaster(WPMaster instance);
    partial void InsertBaseCode(BaseCode instance);
    partial void UpdateBaseCode(BaseCode instance);
    partial void DeleteBaseCode(BaseCode instance);
    partial void InsertLb5Matching(Lb5Matching instance);
    partial void UpdateLb5Matching(Lb5Matching instance);
    partial void DeleteLb5Matching(Lb5Matching instance);
    partial void InsertRedQNSendEmailConfig(RedQNSendEmailConfig instance);
    partial void UpdateRedQNSendEmailConfig(RedQNSendEmailConfig instance);
    partial void DeleteRedQNSendEmailConfig(RedQNSendEmailConfig instance);
    partial void InsertLB5MatchingLog(LB5MatchingLog instance);
    partial void UpdateLB5MatchingLog(LB5MatchingLog instance);
    partial void DeleteLB5MatchingLog(LB5MatchingLog instance);
    partial void InsertLastApprovalData(LastApprovalData instance);
    partial void UpdateLastApprovalData(LastApprovalData instance);
    partial void DeleteLastApprovalData(LastApprovalData instance);
    partial void InsertLB5MatchingProposal(LB5MatchingProposal instance);
    partial void UpdateLB5MatchingProposal(LB5MatchingProposal instance);
    partial void DeleteLB5MatchingProposal(LB5MatchingProposal instance);
    partial void InsertRedQN(RedQN instance);
    partial void UpdateRedQN(RedQN instance);
    partial void DeleteRedQN(RedQN instance);
    partial void InsertAlertLogDetail(AlertLogDetail instance);
    partial void UpdateAlertLogDetail(AlertLogDetail instance);
    partial void DeleteAlertLogDetail(AlertLogDetail instance);
    partial void InsertActionLogHeader(ActionLogHeader instance);
    partial void UpdateActionLogHeader(ActionLogHeader instance);
    partial void DeleteActionLogHeader(ActionLogHeader instance);
    partial void InsertAlertLogHeader(AlertLogHeader instance);
    partial void UpdateAlertLogHeader(AlertLogHeader instance);
    partial void DeleteAlertLogHeader(AlertLogHeader instance);
    partial void InsertAlertLogCategory(AlertLogCategory instance);
    partial void UpdateAlertLogCategory(AlertLogCategory instance);
    partial void DeleteAlertLogCategory(AlertLogCategory instance);
    partial void InsertOpsPermitSign(OpsPermitSign instance);
    partial void UpdateOpsPermitSign(OpsPermitSign instance);
    partial void DeleteOpsPermitSign(OpsPermitSign instance);
    partial void InsertDepartalSort(DepartalSort instance);
    partial void UpdateDepartalSort(DepartalSort instance);
    partial void DeleteDepartalSort(DepartalSort instance);
    partial void InsertMaster_data_For_Job_Title(Master_data_For_Job_Title instance);
    partial void UpdateMaster_data_For_Job_Title(Master_data_For_Job_Title instance);
    partial void DeleteMaster_data_For_Job_Title(Master_data_For_Job_Title instance);
    partial void InsertMachine(Machine instance);
    partial void UpdateMachine(Machine instance);
    partial void DeleteMachine(Machine instance);
    partial void InsertTEMP_REGION(TEMP_REGION instance);
    partial void UpdateTEMP_REGION(TEMP_REGION instance);
    partial void DeleteTEMP_REGION(TEMP_REGION instance);
    partial void InsertVendor(Vendor instance);
    partial void UpdateVendor(Vendor instance);
    partial void DeleteVendor(Vendor instance);
    partial void InsertMcBrandImg(McBrandImg instance);
    partial void UpdateMcBrandImg(McBrandImg instance);
    partial void DeleteMcBrandImg(McBrandImg instance);
    partial void InsertPOHeader(POHeader instance);
    partial void UpdatePOHeader(POHeader instance);
    partial void DeletePOHeader(POHeader instance);
    partial void InsertMcBrand(McBrand instance);
    partial void UpdateMcBrand(McBrand instance);
    partial void DeleteMcBrand(McBrand instance);
    partial void InsertPurchasePlanHeader(PurchasePlanHeader instance);
    partial void UpdatePurchasePlanHeader(PurchasePlanHeader instance);
    partial void DeletePurchasePlanHeader(PurchasePlanHeader instance);
    partial void InsertPIHeader(PIHeader instance);
    partial void UpdatePIHeader(PIHeader instance);
    partial void DeletePIHeader(PIHeader instance);
    partial void InsertOSChart(OSChart instance);
    partial void UpdateOSChart(OSChart instance);
    partial void DeleteOSChart(OSChart instance);
    partial void InsertPurchasePlanDetail(PurchasePlanDetail instance);
    partial void UpdatePurchasePlanDetail(PurchasePlanDetail instance);
    partial void DeletePurchasePlanDetail(PurchasePlanDetail instance);
    partial void InsertLCShipmentDate(LCShipmentDate instance);
    partial void UpdateLCShipmentDate(LCShipmentDate instance);
    partial void DeleteLCShipmentDate(LCShipmentDate instance);
    partial void InsertCommittee(Committee instance);
    partial void UpdateCommittee(Committee instance);
    partial void DeleteCommittee(Committee instance);
    partial void InsertCommitteeMember(CommitteeMember instance);
    partial void UpdateCommitteeMember(CommitteeMember instance);
    partial void DeleteCommitteeMember(CommitteeMember instance);
    partial void InsertWorkForce(WorkForce instance);
    partial void UpdateWorkForce(WorkForce instance);
    partial void DeleteWorkForce(WorkForce instance);
    #endregion
		
		public RAPLQDataContext() : 
				base(global::PH.LWPM.BO.Properties.Settings.Default.PH_LWPM_WPConnectionString10, mappingSource)
		{
			OnCreated();
		}
		
		public RAPLQDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RAPLQDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RAPLQDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RAPLQDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<MedToMcPair> MedToMcPairs
		{
			get
			{
				return this.GetTable<MedToMcPair>();
			}
		}
		
		public System.Data.Linq.Table<OpSkill> OpSkills
		{
			get
			{
				return this.GetTable<OpSkill>();
			}
		}
		
		public System.Data.Linq.Table<OperationSkill> OperationSkills
		{
			get
			{
				return this.GetTable<OperationSkill>();
			}
		}
		
		public System.Data.Linq.Table<MachineImg> MachineImgs
		{
			get
			{
				return this.GetTable<MachineImg>();
			}
		}
		
		public System.Data.Linq.Table<WorkForceImg> WorkForceImgs
		{
			get
			{
				return this.GetTable<WorkForceImg>();
			}
		}
		
		public System.Data.Linq.Table<CarEfficiency> CarEfficiencies
		{
			get
			{
				return this.GetTable<CarEfficiency>();
			}
		}
		
		public System.Data.Linq.Table<WorkerAttendance> WorkerAttendances
		{
			get
			{
				return this.GetTable<WorkerAttendance>();
			}
		}
		
		public System.Data.Linq.Table<FactoryLines> FactoryLines
		{
			get
			{
				return this.GetTable<FactoryLines>();
			}
		}
		
		public System.Data.Linq.Table<LineCode> LineCodes
		{
			get
			{
				return this.GetTable<LineCode>();
			}
		}
		
		public System.Data.Linq.Table<Sub_Section> Sub_Sections
		{
			get
			{
				return this.GetTable<Sub_Section>();
			}
		}
		
		public System.Data.Linq.Table<vw_workhistory> vw_workhistories
		{
			get
			{
				return this.GetTable<vw_workhistory>();
			}
		}
		
		public System.Data.Linq.Table<McClassDetail> McClassDetails
		{
			get
			{
				return this.GetTable<McClassDetail>();
			}
		}
		
		public System.Data.Linq.Table<QuatationInfo> QuatationInfos
		{
			get
			{
				return this.GetTable<QuatationInfo>();
			}
		}
		
		public System.Data.Linq.Table<Buyer> Buyers
		{
			get
			{
				return this.GetTable<Buyer>();
			}
		}
		
		public System.Data.Linq.Table<PIDetail> PIDetails
		{
			get
			{
				return this.GetTable<PIDetail>();
			}
		}
		
		public System.Data.Linq.Table<Secondment> Secondments
		{
			get
			{
				return this.GetTable<Secondment>();
			}
		}
		
		public System.Data.Linq.Table<PoolInfo> PoolInfos
		{
			get
			{
				return this.GetTable<PoolInfo>();
			}
		}
		
		public System.Data.Linq.Table<PoolInfoReason> PoolInfoReasons
		{
			get
			{
				return this.GetTable<PoolInfoReason>();
			}
		}
		
		public System.Data.Linq.Table<ItemTool> ItemTools
		{
			get
			{
				return this.GetTable<ItemTool>();
			}
		}
		
		public System.Data.Linq.Table<ActionLogDetail> ActionLogDetails
		{
			get
			{
				return this.GetTable<ActionLogDetail>();
			}
		}
		
		public System.Data.Linq.Table<ActionLogEmail> ActionLogEmails
		{
			get
			{
				return this.GetTable<ActionLogEmail>();
			}
		}
		
		public System.Data.Linq.Table<Email> Emails
		{
			get
			{
				return this.GetTable<Email>();
			}
		}
		
		public System.Data.Linq.Table<PODetail_OtherItem> PODetail_OtherItems
		{
			get
			{
				return this.GetTable<PODetail_OtherItem>();
			}
		}
		
		public System.Data.Linq.Table<PIDetail_OtherItem> PIDetail_OtherItems
		{
			get
			{
				return this.GetTable<PIDetail_OtherItem>();
			}
		}
		
		public System.Data.Linq.Table<PCDetail> PCDetails
		{
			get
			{
				return this.GetTable<PCDetail>();
			}
		}
		
		public System.Data.Linq.Table<PCHeader> PCHeaders
		{
			get
			{
				return this.GetTable<PCHeader>();
			}
		}
		
		public System.Data.Linq.Table<PODetail> PODetails
		{
			get
			{
				return this.GetTable<PODetail>();
			}
		}
		
		public System.Data.Linq.Table<QNDeleteLog> QNDeleteLogs
		{
			get
			{
				return this.GetTable<QNDeleteLog>();
			}
		}
		
		public System.Data.Linq.Table<ExcludeUser> ExcludeUsers
		{
			get
			{
				return this.GetTable<ExcludeUser>();
			}
		}
		
		public System.Data.Linq.Table<Matching> Matchings
		{
			get
			{
				return this.GetTable<Matching>();
			}
		}
		
		public System.Data.Linq.Table<WPMaster> WPMasters
		{
			get
			{
				return this.GetTable<WPMaster>();
			}
		}
		
		public System.Data.Linq.Table<BaseCode> BaseCodes
		{
			get
			{
				return this.GetTable<BaseCode>();
			}
		}
		
		public System.Data.Linq.Table<Lb5Matching> Lb5Matchings
		{
			get
			{
				return this.GetTable<Lb5Matching>();
			}
		}
		
		public System.Data.Linq.Table<RedQNSendEmailConfig> RedQNSendEmailConfigs
		{
			get
			{
				return this.GetTable<RedQNSendEmailConfig>();
			}
		}
		
		public System.Data.Linq.Table<LB5MatchingLog> LB5MatchingLogs
		{
			get
			{
				return this.GetTable<LB5MatchingLog>();
			}
		}
		
		public System.Data.Linq.Table<LastApprovalData> LastApprovalDatas
		{
			get
			{
				return this.GetTable<LastApprovalData>();
			}
		}
		
		public System.Data.Linq.Table<LB5MatchingProposal> LB5MatchingProposals
		{
			get
			{
				return this.GetTable<LB5MatchingProposal>();
			}
		}
		
		public System.Data.Linq.Table<RedQN> RedQNs
		{
			get
			{
				return this.GetTable<RedQN>();
			}
		}
		
		public System.Data.Linq.Table<AlertLogDetail> AlertLogDetails
		{
			get
			{
				return this.GetTable<AlertLogDetail>();
			}
		}
		
		public System.Data.Linq.Table<ActionLogHeader> ActionLogHeaders
		{
			get
			{
				return this.GetTable<ActionLogHeader>();
			}
		}
		
		public System.Data.Linq.Table<AlertLogHeader> AlertLogHeaders
		{
			get
			{
				return this.GetTable<AlertLogHeader>();
			}
		}
		
		public System.Data.Linq.Table<AlertLogCategory> AlertLogCategories
		{
			get
			{
				return this.GetTable<AlertLogCategory>();
			}
		}
		
		public System.Data.Linq.Table<OpsPermitSign> OpsPermitSigns
		{
			get
			{
				return this.GetTable<OpsPermitSign>();
			}
		}
		
		public System.Data.Linq.Table<DepartalSort> DepartalSorts
		{
			get
			{
				return this.GetTable<DepartalSort>();
			}
		}
		
		public System.Data.Linq.Table<Master_data_For_Job_Title> Master_data_For_Job_Titles
		{
			get
			{
				return this.GetTable<Master_data_For_Job_Title>();
			}
		}
		
		public System.Data.Linq.Table<Machine> Machines
		{
			get
			{
				return this.GetTable<Machine>();
			}
		}
		
		public System.Data.Linq.Table<TEMP_REGION> TEMP_REGIONs
		{
			get
			{
				return this.GetTable<TEMP_REGION>();
			}
		}
		
		public System.Data.Linq.Table<Vendor> Vendors
		{
			get
			{
				return this.GetTable<Vendor>();
			}
		}
		
		public System.Data.Linq.Table<McBrandImg> McBrandImgs
		{
			get
			{
				return this.GetTable<McBrandImg>();
			}
		}
		
		public System.Data.Linq.Table<POHeader> POHeaders
		{
			get
			{
				return this.GetTable<POHeader>();
			}
		}
		
		public System.Data.Linq.Table<McBrand> McBrands
		{
			get
			{
				return this.GetTable<McBrand>();
			}
		}
		
		public System.Data.Linq.Table<PurchasePlanHeader> PurchasePlanHeaders
		{
			get
			{
				return this.GetTable<PurchasePlanHeader>();
			}
		}
		
		public System.Data.Linq.Table<PIHeader> PIHeaders
		{
			get
			{
				return this.GetTable<PIHeader>();
			}
		}
		
		public System.Data.Linq.Table<OSChart> OSCharts
		{
			get
			{
				return this.GetTable<OSChart>();
			}
		}
		
		public System.Data.Linq.Table<PurchasePlanDetail> PurchasePlanDetails
		{
			get
			{
				return this.GetTable<PurchasePlanDetail>();
			}
		}
		
		public System.Data.Linq.Table<LCShipmentDate> LCShipmentDates
		{
			get
			{
				return this.GetTable<LCShipmentDate>();
			}
		}
		
		public System.Data.Linq.Table<Committee> Committees
		{
			get
			{
				return this.GetTable<Committee>();
			}
		}
		
		public System.Data.Linq.Table<CommitteeMember> CommitteeMembers
		{
			get
			{
				return this.GetTable<CommitteeMember>();
			}
		}
		
		public System.Data.Linq.Table<WorkForce> WorkForces
		{
			get
			{
				return this.GetTable<WorkForce>();
			}
		}
		
		[Function(Name="dbo.LB4_UPD_ClearMatching")]
		public int LB4_UPD_ClearMatching([Parameter(DbType="NChar(10)")] string factory, [Parameter(DbType="VarChar(50)")] string line, [Parameter(DbType="NChar(15)")] string j_no, [Parameter(DbType="NChar(15)")] string j2_job, [Parameter(DbType="NChar(10)")] string rwo, [Parameter(DbType="NChar(10)")] string qn, [Parameter(DbType="NChar(10)")] string bcolor)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), factory, line, j_no, j2_job, rwo, qn, bcolor);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.LB5_UPD_WFMcSTATE")]
		public int LB5_UPD_WFMcSTATE([Parameter(DbType="VarChar(50)")] string line, [Parameter(DbType="VarChar(25)")] string location, [Parameter(DbType="VarChar(50)")] string workerid, [Parameter(DbType="VarChar(50)")] string addworkerid1, [Parameter(DbType="VarChar(50)")] string addworkerid2, [Parameter(DbType="VarChar(50)")] string addworkerid3, [Parameter(DbType="VarChar(50)")] string mchineid, [Parameter(DbType="VarChar(50)")] string addMachineId1, [Parameter(DbType="VarChar(50)")] string addMachineId2, [Parameter(DbType="VarChar(50)")] string addMachineId3)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), line, location, workerid, addworkerid1, addworkerid2, addworkerid3, mchineid, addMachineId1, addMachineId2, addMachineId3);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.GetLB4Machine")]
		public int GetLB4Machine([Parameter(Name="McID", DbType="VarChar(30)")] string mcID, [Parameter(Name="Rpm", DbType="VarChar(30)")] ref string rpm, [Parameter(Name="Rpm0", DbType="VarChar(30)")] ref string rpm0, [Parameter(Name="Line", DbType="VarChar(30)")] ref string line, [Parameter(Name="Location", DbType="VarChar(30)")] ref string location)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), mcID, rpm, rpm0, line, location);
			rpm = ((string)(result.GetParameterValue(1)));
			rpm0 = ((string)(result.GetParameterValue(2)));
			line = ((string)(result.GetParameterValue(3)));
			location = ((string)(result.GetParameterValue(4)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.GetLB5Machine")]
		public int GetLB5Machine([Parameter(Name="McID", DbType="VarChar(30)")] string mcID, [Parameter(Name="Rpm0", DbType="VarChar(30)")] ref string rpm0, [Parameter(Name="Line", DbType="VarChar(30)")] ref string line, [Parameter(Name="Location", DbType="VarChar(30)")] ref string location)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), mcID, rpm0, line, location);
			rpm0 = ((string)(result.GetParameterValue(1)));
			line = ((string)(result.GetParameterValue(2)));
			location = ((string)(result.GetParameterValue(3)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.GetLBSAH")]
		public int GetLBSAH([Parameter(DbType="NChar(5)")] string fac, [Parameter(DbType="VarChar(50)")] string lincode, [Parameter(DbType="NChar(15)")] string j_no, [Parameter(DbType="NChar(15)")] string j2_job, [Parameter(DbType="NChar(10)")] string rwo, [Parameter(DbType="NChar(10)")] string qn, [Parameter(DbType="NChar(10)")] string bcolor)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fac, lincode, j_no, j2_job, rwo, qn, bcolor);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.GetCount", IsComposable=true)]
		public System.Nullable<int> GetCount([Parameter(DbType="VarChar(20)")] string workid, [Parameter(DbType="VarChar(15)")] string oper)
		{
			return ((System.Nullable<int>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), workid, oper).ReturnValue));
		}
		
		[Function(Name="dbo.GetDidTime", IsComposable=true)]
		public System.Nullable<int> GetDidTime([Parameter(DbType="VarChar(5)")] string fac, [Parameter(DbType="VarChar(15)")] string oper)
		{
			return ((System.Nullable<int>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fac, oper).ReturnValue));
		}
		
		[Function(Name="dbo.GetPastMtm", IsComposable=true)]
		public System.Nullable<decimal> GetPastMtm([Parameter(DbType="VarChar(20)")] string workid, [Parameter(DbType="VarChar(15)")] string oper)
		{
			return ((System.Nullable<decimal>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), workid, oper).ReturnValue));
		}
		
		[Function(Name="dbo.GetPassFirst", IsComposable=true)]
		public System.Nullable<decimal> GetPassFirst([Parameter(DbType="VarChar(20)")] string workid, [Parameter(DbType="VarChar(15)")] string oper)
		{
			return ((System.Nullable<decimal>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), workid, oper).ReturnValue));
		}
		
		[Function(Name="dbo.sp_UpdateLB5MachineWhereToMachineInfo")]
		public int sp_UpdateLB5MachineWhereToMachineInfo([Parameter(Name="Factory", DbType="NChar(5)")] string factory, [Parameter(Name="Line", DbType="VarChar(50)")] string line, [Parameter(Name="Project", DbType="NChar(15)")] string project, [Parameter(Name="WO", DbType="NChar(15)")] string wO, [Parameter(Name="RWO", DbType="NChar(10)")] string rWO, [Parameter(Name="QN", DbType="NChar(100)")] string qN, [Parameter(Name="BColor", DbType="NChar(10)")] string bColor, [Parameter(Name="Date", DbType="DateTime")] System.Nullable<System.DateTime> date, [Parameter(Name="OTN", DbType="NChar(10)")] string oTN)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), factory, line, project, wO, rWO, qN, bColor, date, oTN);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.fn_GetOpsPermitType", IsComposable=true)]
		public System.Nullable<int> fn_GetOpsPermitType([Parameter(Name="HWType", DbType="VarChar(30)")] string hWType, [Parameter(Name="FAE", DbType="VarChar(10)")] string fAE)
		{
			return ((System.Nullable<int>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), hWType, fAE).ReturnValue));
		}
		
		[Function(Name="dbo.sp_UpdateProposalToLB5Matching")]
		public int sp_UpdateProposalToLB5Matching([Parameter(Name="Factory", DbType="NChar(5)")] string factory, [Parameter(Name="Line", DbType="VarChar(50)")] string line, [Parameter(Name="Project", DbType="NChar(15)")] string project, [Parameter(Name="WO", DbType="NChar(15)")] string wO, [Parameter(Name="RWO", DbType="NChar(10)")] string rWO, [Parameter(Name="QN", DbType="NChar(10)")] string qN, [Parameter(Name="BColor", DbType="NChar(10)")] string bColor, [Parameter(Name="Date", DbType="DateTime")] System.Nullable<System.DateTime> date, [Parameter(Name="OTN", DbType="NChar(10)")] string oTN, [Parameter(Name="UpdateTime", DbType="DateTime")] System.Nullable<System.DateTime> updateTime)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), factory, line, project, wO, rWO, qN, bColor, date, oTN, updateTime);
			return ((int)(result.ReturnValue));
		}
	}
	
	[Table(Name="dbo.MedToMcPair")]
	public partial class MedToMcPair : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _McCode;
		
		private string _McDesc;
		
		private string _MedCode;
		
		private string _MedDesc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMcCodeChanging(string value);
    partial void OnMcCodeChanged();
    partial void OnMcDescChanging(string value);
    partial void OnMcDescChanged();
    partial void OnMedCodeChanging(string value);
    partial void OnMedCodeChanged();
    partial void OnMedDescChanging(string value);
    partial void OnMedDescChanged();
    #endregion
		
		public MedToMcPair()
		{
			OnCreated();
		}
		
		[Column(Storage="_McCode", DbType="NChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string McCode
		{
			get
			{
				return this._McCode;
			}
			set
			{
				if ((this._McCode != value))
				{
					this.OnMcCodeChanging(value);
					this.SendPropertyChanging();
					this._McCode = value;
					this.SendPropertyChanged("McCode");
					this.OnMcCodeChanged();
				}
			}
		}
		
		[Column(Storage="_McDesc", DbType="NChar(50)")]
		public string McDesc
		{
			get
			{
				return this._McDesc;
			}
			set
			{
				if ((this._McDesc != value))
				{
					this.OnMcDescChanging(value);
					this.SendPropertyChanging();
					this._McDesc = value;
					this.SendPropertyChanged("McDesc");
					this.OnMcDescChanged();
				}
			}
		}
		
		[Column(Storage="_MedCode", DbType="NChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MedCode
		{
			get
			{
				return this._MedCode;
			}
			set
			{
				if ((this._MedCode != value))
				{
					this.OnMedCodeChanging(value);
					this.SendPropertyChanging();
					this._MedCode = value;
					this.SendPropertyChanged("MedCode");
					this.OnMedCodeChanged();
				}
			}
		}
		
		[Column(Storage="_MedDesc", DbType="NChar(50)")]
		public string MedDesc
		{
			get
			{
				return this._MedDesc;
			}
			set
			{
				if ((this._MedDesc != value))
				{
					this.OnMedDescChanging(value);
					this.SendPropertyChanging();
					this._MedDesc = value;
					this.SendPropertyChanged("MedDesc");
					this.OnMedDescChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.OpSkill")]
	public partial class OpSkill : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Factory;
		
		private string _Id;
		
		private System.Guid _Guid;
		
		private System.Nullable<int> _SEQ;
		
		private string _ThisPartialStyle_Code;
		
		private string _ThisPartialStyle_Name;
		
		private string _Attach;
		
		private string _ThisMed_Code;
		
		private string _DegreeOfDifficult;
		
		private string _ThisMed_Name;
		
		private string _ThisGeneralOpCode;
		
		private string _ThisGeneralOpName;
		
		private string _ThisOp;
		
		private string _ThisOp_Code;
		
		private string _ThisOp_Name;
		
		private System.Nullable<decimal> _GsdSah;
		
		private System.Nullable<int> _TimesForHundredUnits;
		
		private string _OptLineStyle;
		
		private System.Nullable<bool> _LineIsStraight;
		
		private System.Nullable<bool> _LineIsArc;
		
		private System.Nullable<int> _OptLength;
		
		private System.Nullable<int> _OptRaiseAndFall;
		
		private System.Nullable<bool> _FabIsScrolled;
		
		private string _FabThickNess;
		
		private System.Nullable<int> _FabRange;
		
		private System.Nullable<int> _MtmProj;
		
		private System.Nullable<int> _MtmCurr;
		
		private System.Nullable<bool> _IsConfirmed;
		
		private System.Nullable<System.DateTime> _ConfirmTime;
		
		private string _confirmUser;
		
		private EntityRef<WorkForce> _WorkForce;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFactoryChanging(string value);
    partial void OnFactoryChanged();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnGuidChanging(System.Guid value);
    partial void OnGuidChanged();
    partial void OnSEQChanging(System.Nullable<int> value);
    partial void OnSEQChanged();
    partial void OnThisPartialStyle_CodeChanging(string value);
    partial void OnThisPartialStyle_CodeChanged();
    partial void OnThisPartialStyle_NameChanging(string value);
    partial void OnThisPartialStyle_NameChanged();
    partial void OnAttachChanging(string value);
    partial void OnAttachChanged();
    partial void OnThisMed_CodeChanging(string value);
    partial void OnThisMed_CodeChanged();
    partial void OnDegreeOfDifficultChanging(string value);
    partial void OnDegreeOfDifficultChanged();
    partial void OnThisMed_NameChanging(string value);
    partial void OnThisMed_NameChanged();
    partial void OnThisGeneralOpCodeChanging(string value);
    partial void OnThisGeneralOpCodeChanged();
    partial void OnThisGeneralOpNameChanging(string value);
    partial void OnThisGeneralOpNameChanged();
    partial void OnThisOpChanging(string value);
    partial void OnThisOpChanged();
    partial void OnThisOp_CodeChanging(string value);
    partial void OnThisOp_CodeChanged();
    partial void OnThisOp_NameChanging(string value);
    partial void OnThisOp_NameChanged();
    partial void OnGsdSahChanging(System.Nullable<decimal> value);
    partial void OnGsdSahChanged();
    partial void OnTimesForHundredUnitsChanging(System.Nullable<int> value);
    partial void OnTimesForHundredUnitsChanged();
    partial void OnOptLineStyleChanging(string value);
    partial void OnOptLineStyleChanged();
    partial void OnLineIsStraightChanging(System.Nullable<bool> value);
    partial void OnLineIsStraightChanged();
    partial void OnLineIsArcChanging(System.Nullable<bool> value);
    partial void OnLineIsArcChanged();
    partial void OnOptLengthChanging(System.Nullable<int> value);
    partial void OnOptLengthChanged();
    partial void OnOptRaiseAndFallChanging(System.Nullable<int> value);
    partial void OnOptRaiseAndFallChanged();
    partial void OnFabIsScrolledChanging(System.Nullable<bool> value);
    partial void OnFabIsScrolledChanged();
    partial void OnFabThickNessChanging(string value);
    partial void OnFabThickNessChanged();
    partial void OnFabRangeChanging(System.Nullable<int> value);
    partial void OnFabRangeChanged();
    partial void OnMtmProjChanging(System.Nullable<int> value);
    partial void OnMtmProjChanged();
    partial void OnMtmCurrChanging(System.Nullable<int> value);
    partial void OnMtmCurrChanged();
    partial void OnIsConfirmedChanging(System.Nullable<bool> value);
    partial void OnIsConfirmedChanged();
    partial void OnConfirmTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnConfirmTimeChanged();
    partial void OnconfirmUserChanging(string value);
    partial void OnconfirmUserChanged();
    #endregion
		
		public OpSkill()
		{
			this._WorkForce = default(EntityRef<WorkForce>);
			OnCreated();
		}
		
		[Column(Storage="_Factory", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Factory
		{
			get
			{
				return this._Factory;
			}
			set
			{
				if ((this._Factory != value))
				{
					if (this._WorkForce.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFactoryChanging(value);
					this.SendPropertyChanging();
					this._Factory = value;
					this.SendPropertyChanged("Factory");
					this.OnFactoryChanged();
				}
			}
		}
		
		[Column(Storage="_Id", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					if (this._WorkForce.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_Guid", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Guid
		{
			get
			{
				return this._Guid;
			}
			set
			{
				if ((this._Guid != value))
				{
					this.OnGuidChanging(value);
					this.SendPropertyChanging();
					this._Guid = value;
					this.SendPropertyChanged("Guid");
					this.OnGuidChanged();
				}
			}
		}
		
		[Column(Storage="_SEQ", DbType="Int")]
		public System.Nullable<int> SEQ
		{
			get
			{
				return this._SEQ;
			}
			set
			{
				if ((this._SEQ != value))
				{
					this.OnSEQChanging(value);
					this.SendPropertyChanging();
					this._SEQ = value;
					this.SendPropertyChanged("SEQ");
					this.OnSEQChanged();
				}
			}
		}
		
		[Column(Storage="_ThisPartialStyle_Code", DbType="VarChar(15)")]
		public string ThisPartialStyle_Code
		{
			get
			{
				return this._ThisPartialStyle_Code;
			}
			set
			{
				if ((this._ThisPartialStyle_Code != value))
				{
					this.OnThisPartialStyle_CodeChanging(value);
					this.SendPropertyChanging();
					this._ThisPartialStyle_Code = value;
					this.SendPropertyChanged("ThisPartialStyle_Code");
					this.OnThisPartialStyle_CodeChanged();
				}
			}
		}
		
		[Column(Storage="_ThisPartialStyle_Name", DbType="NChar(20)")]
		public string ThisPartialStyle_Name
		{
			get
			{
				return this._ThisPartialStyle_Name;
			}
			set
			{
				if ((this._ThisPartialStyle_Name != value))
				{
					this.OnThisPartialStyle_NameChanging(value);
					this.SendPropertyChanging();
					this._ThisPartialStyle_Name = value;
					this.SendPropertyChanged("ThisPartialStyle_Name");
					this.OnThisPartialStyle_NameChanged();
				}
			}
		}
		
		[Column(Storage="_Attach", DbType="NChar(10)")]
		public string Attach
		{
			get
			{
				return this._Attach;
			}
			set
			{
				if ((this._Attach != value))
				{
					this.OnAttachChanging(value);
					this.SendPropertyChanging();
					this._Attach = value;
					this.SendPropertyChanged("Attach");
					this.OnAttachChanged();
				}
			}
		}
		
		[Column(Storage="_ThisMed_Code", DbType="VarChar(15)")]
		public string ThisMed_Code
		{
			get
			{
				return this._ThisMed_Code;
			}
			set
			{
				if ((this._ThisMed_Code != value))
				{
					this.OnThisMed_CodeChanging(value);
					this.SendPropertyChanging();
					this._ThisMed_Code = value;
					this.SendPropertyChanged("ThisMed_Code");
					this.OnThisMed_CodeChanged();
				}
			}
		}
		
		[Column(Storage="_DegreeOfDifficult", DbType="NChar(10)")]
		public string DegreeOfDifficult
		{
			get
			{
				return this._DegreeOfDifficult;
			}
			set
			{
				if ((this._DegreeOfDifficult != value))
				{
					this.OnDegreeOfDifficultChanging(value);
					this.SendPropertyChanging();
					this._DegreeOfDifficult = value;
					this.SendPropertyChanged("DegreeOfDifficult");
					this.OnDegreeOfDifficultChanged();
				}
			}
		}
		
		[Column(Storage="_ThisMed_Name", DbType="NChar(20)")]
		public string ThisMed_Name
		{
			get
			{
				return this._ThisMed_Name;
			}
			set
			{
				if ((this._ThisMed_Name != value))
				{
					this.OnThisMed_NameChanging(value);
					this.SendPropertyChanging();
					this._ThisMed_Name = value;
					this.SendPropertyChanged("ThisMed_Name");
					this.OnThisMed_NameChanged();
				}
			}
		}
		
		[Column(Storage="_ThisGeneralOpCode", DbType="VarChar(15)")]
		public string ThisGeneralOpCode
		{
			get
			{
				return this._ThisGeneralOpCode;
			}
			set
			{
				if ((this._ThisGeneralOpCode != value))
				{
					this.OnThisGeneralOpCodeChanging(value);
					this.SendPropertyChanging();
					this._ThisGeneralOpCode = value;
					this.SendPropertyChanged("ThisGeneralOpCode");
					this.OnThisGeneralOpCodeChanged();
				}
			}
		}
		
		[Column(Storage="_ThisGeneralOpName", DbType="NChar(20)")]
		public string ThisGeneralOpName
		{
			get
			{
				return this._ThisGeneralOpName;
			}
			set
			{
				if ((this._ThisGeneralOpName != value))
				{
					this.OnThisGeneralOpNameChanging(value);
					this.SendPropertyChanging();
					this._ThisGeneralOpName = value;
					this.SendPropertyChanged("ThisGeneralOpName");
					this.OnThisGeneralOpNameChanged();
				}
			}
		}
		
		[Column(Storage="_ThisOp", DbType="NChar(30)")]
		public string ThisOp
		{
			get
			{
				return this._ThisOp;
			}
			set
			{
				if ((this._ThisOp != value))
				{
					this.OnThisOpChanging(value);
					this.SendPropertyChanging();
					this._ThisOp = value;
					this.SendPropertyChanged("ThisOp");
					this.OnThisOpChanged();
				}
			}
		}
		
		[Column(Storage="_ThisOp_Code", DbType="VarChar(15)")]
		public string ThisOp_Code
		{
			get
			{
				return this._ThisOp_Code;
			}
			set
			{
				if ((this._ThisOp_Code != value))
				{
					this.OnThisOp_CodeChanging(value);
					this.SendPropertyChanging();
					this._ThisOp_Code = value;
					this.SendPropertyChanged("ThisOp_Code");
					this.OnThisOp_CodeChanged();
				}
			}
		}
		
		[Column(Storage="_ThisOp_Name", DbType="NChar(20)")]
		public string ThisOp_Name
		{
			get
			{
				return this._ThisOp_Name;
			}
			set
			{
				if ((this._ThisOp_Name != value))
				{
					this.OnThisOp_NameChanging(value);
					this.SendPropertyChanging();
					this._ThisOp_Name = value;
					this.SendPropertyChanged("ThisOp_Name");
					this.OnThisOp_NameChanged();
				}
			}
		}
		
		[Column(Storage="_GsdSah", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> GsdSah
		{
			get
			{
				return this._GsdSah;
			}
			set
			{
				if ((this._GsdSah != value))
				{
					this.OnGsdSahChanging(value);
					this.SendPropertyChanging();
					this._GsdSah = value;
					this.SendPropertyChanged("GsdSah");
					this.OnGsdSahChanged();
				}
			}
		}
		
		[Column(Storage="_TimesForHundredUnits", DbType="Int")]
		public System.Nullable<int> TimesForHundredUnits
		{
			get
			{
				return this._TimesForHundredUnits;
			}
			set
			{
				if ((this._TimesForHundredUnits != value))
				{
					this.OnTimesForHundredUnitsChanging(value);
					this.SendPropertyChanging();
					this._TimesForHundredUnits = value;
					this.SendPropertyChanged("TimesForHundredUnits");
					this.OnTimesForHundredUnitsChanged();
				}
			}
		}
		
		[Column(Storage="_OptLineStyle", DbType="NChar(20)")]
		public string OptLineStyle
		{
			get
			{
				return this._OptLineStyle;
			}
			set
			{
				if ((this._OptLineStyle != value))
				{
					this.OnOptLineStyleChanging(value);
					this.SendPropertyChanging();
					this._OptLineStyle = value;
					this.SendPropertyChanged("OptLineStyle");
					this.OnOptLineStyleChanged();
				}
			}
		}
		
		[Column(Storage="_LineIsStraight", DbType="Bit")]
		public System.Nullable<bool> LineIsStraight
		{
			get
			{
				return this._LineIsStraight;
			}
			set
			{
				if ((this._LineIsStraight != value))
				{
					this.OnLineIsStraightChanging(value);
					this.SendPropertyChanging();
					this._LineIsStraight = value;
					this.SendPropertyChanged("LineIsStraight");
					this.OnLineIsStraightChanged();
				}
			}
		}
		
		[Column(Storage="_LineIsArc", DbType="Bit")]
		public System.Nullable<bool> LineIsArc
		{
			get
			{
				return this._LineIsArc;
			}
			set
			{
				if ((this._LineIsArc != value))
				{
					this.OnLineIsArcChanging(value);
					this.SendPropertyChanging();
					this._LineIsArc = value;
					this.SendPropertyChanged("LineIsArc");
					this.OnLineIsArcChanged();
				}
			}
		}
		
		[Column(Storage="_OptLength", DbType="Int")]
		public System.Nullable<int> OptLength
		{
			get
			{
				return this._OptLength;
			}
			set
			{
				if ((this._OptLength != value))
				{
					this.OnOptLengthChanging(value);
					this.SendPropertyChanging();
					this._OptLength = value;
					this.SendPropertyChanged("OptLength");
					this.OnOptLengthChanged();
				}
			}
		}
		
		[Column(Storage="_OptRaiseAndFall", DbType="Int")]
		public System.Nullable<int> OptRaiseAndFall
		{
			get
			{
				return this._OptRaiseAndFall;
			}
			set
			{
				if ((this._OptRaiseAndFall != value))
				{
					this.OnOptRaiseAndFallChanging(value);
					this.SendPropertyChanging();
					this._OptRaiseAndFall = value;
					this.SendPropertyChanged("OptRaiseAndFall");
					this.OnOptRaiseAndFallChanged();
				}
			}
		}
		
		[Column(Storage="_FabIsScrolled", DbType="Bit")]
		public System.Nullable<bool> FabIsScrolled
		{
			get
			{
				return this._FabIsScrolled;
			}
			set
			{
				if ((this._FabIsScrolled != value))
				{
					this.OnFabIsScrolledChanging(value);
					this.SendPropertyChanging();
					this._FabIsScrolled = value;
					this.SendPropertyChanged("FabIsScrolled");
					this.OnFabIsScrolledChanged();
				}
			}
		}
		
		[Column(Storage="_FabThickNess", DbType="NChar(10)")]
		public string FabThickNess
		{
			get
			{
				return this._FabThickNess;
			}
			set
			{
				if ((this._FabThickNess != value))
				{
					this.OnFabThickNessChanging(value);
					this.SendPropertyChanging();
					this._FabThickNess = value;
					this.SendPropertyChanged("FabThickNess");
					this.OnFabThickNessChanged();
				}
			}
		}
		
		[Column(Storage="_FabRange", DbType="Int")]
		public System.Nullable<int> FabRange
		{
			get
			{
				return this._FabRange;
			}
			set
			{
				if ((this._FabRange != value))
				{
					this.OnFabRangeChanging(value);
					this.SendPropertyChanging();
					this._FabRange = value;
					this.SendPropertyChanged("FabRange");
					this.OnFabRangeChanged();
				}
			}
		}
		
		[Column(Storage="_MtmProj", DbType="Int")]
		public System.Nullable<int> MtmProj
		{
			get
			{
				return this._MtmProj;
			}
			set
			{
				if ((this._MtmProj != value))
				{
					this.OnMtmProjChanging(value);
					this.SendPropertyChanging();
					this._MtmProj = value;
					this.SendPropertyChanged("MtmProj");
					this.OnMtmProjChanged();
				}
			}
		}
		
		[Column(Storage="_MtmCurr", DbType="Int")]
		public System.Nullable<int> MtmCurr
		{
			get
			{
				return this._MtmCurr;
			}
			set
			{
				if ((this._MtmCurr != value))
				{
					this.OnMtmCurrChanging(value);
					this.SendPropertyChanging();
					this._MtmCurr = value;
					this.SendPropertyChanged("MtmCurr");
					this.OnMtmCurrChanged();
				}
			}
		}
		
		[Column(Storage="_IsConfirmed", DbType="Bit")]
		public System.Nullable<bool> IsConfirmed
		{
			get
			{
				return this._IsConfirmed;
			}
			set
			{
				if ((this._IsConfirmed != value))
				{
					this.OnIsConfirmedChanging(value);
					this.SendPropertyChanging();
					this._IsConfirmed = value;
					this.SendPropertyChanged("IsConfirmed");
					this.OnIsConfirmedChanged();
				}
			}
		}
		
		[Column(Storage="_ConfirmTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ConfirmTime
		{
			get
			{
				return this._ConfirmTime;
			}
			set
			{
				if ((this._ConfirmTime != value))
				{
					this.OnConfirmTimeChanging(value);
					this.SendPropertyChanging();
					this._ConfirmTime = value;
					this.SendPropertyChanged("ConfirmTime");
					this.OnConfirmTimeChanged();
				}
			}
		}
		
		[Column(Storage="_confirmUser", DbType="NChar(12)")]
		public string confirmUser
		{
			get
			{
				return this._confirmUser;
			}
			set
			{
				if ((this._confirmUser != value))
				{
					this.OnconfirmUserChanging(value);
					this.SendPropertyChanging();
					this._confirmUser = value;
					this.SendPropertyChanged("confirmUser");
					this.OnconfirmUserChanged();
				}
			}
		}
		
		[Association(Name="WorkForce_OpSkill", Storage="_WorkForce", ThisKey="Id,Factory", OtherKey="Id,Factory", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public WorkForce WorkForce
		{
			get
			{
				return this._WorkForce.Entity;
			}
			set
			{
				WorkForce previousValue = this._WorkForce.Entity;
				if (((previousValue != value) 
							|| (this._WorkForce.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WorkForce.Entity = null;
						previousValue.OpSkills.Remove(this);
					}
					this._WorkForce.Entity = value;
					if ((value != null))
					{
						value.OpSkills.Add(this);
						this._Id = value.Id;
						this._Factory = value.Factory;
					}
					else
					{
						this._Id = default(string);
						this._Factory = default(string);
					}
					this.SendPropertyChanged("WorkForce");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.OperationSkill")]
	public partial class OperationSkill : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SEQ;
		
		private string _ThisPartialStyle_Code;
		
		private string _ThisPartialStyle_Name;
		
		private string _Attach;
		
		private string _ThisMed_Code;
		
		private string _DegreeOfDifficult;
		
		private string _ThisMed_Name;
		
		private string _ThisGeneralOpCode;
		
		private string _ThisGeneralOpName;
		
		private string _ThisOp;
		
		private string _ThisOp_Code;
		
		private string _ThisOp_Name;
		
		private System.Nullable<decimal> _GsdSah;
		
		private System.Nullable<int> _TimesForHundredUnits;
		
		private string _OptLineStyle;
		
		private System.Nullable<bool> _LineIsStraight;
		
		private System.Nullable<bool> _LineIsArc;
		
		private System.Nullable<int> _OptLength;
		
		private System.Nullable<int> _OptRaiseAndFall;
		
		private System.Nullable<bool> _FabIsScrolled;
		
		private string _FabThickNess;
		
		private System.Nullable<int> _FabRange;
		
		private System.Nullable<int> _MtmProj;
		
		private System.Nullable<int> _MtmCurr;
		
		private System.Nullable<bool> _IsConfirmed;
		
		private System.Nullable<System.DateTime> _ConfirmTime;
		
		private string _confirmUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSEQChanging(int value);
    partial void OnSEQChanged();
    partial void OnThisPartialStyle_CodeChanging(string value);
    partial void OnThisPartialStyle_CodeChanged();
    partial void OnThisPartialStyle_NameChanging(string value);
    partial void OnThisPartialStyle_NameChanged();
    partial void OnAttachChanging(string value);
    partial void OnAttachChanged();
    partial void OnThisMed_CodeChanging(string value);
    partial void OnThisMed_CodeChanged();
    partial void OnDegreeOfDifficultChanging(string value);
    partial void OnDegreeOfDifficultChanged();
    partial void OnThisMed_NameChanging(string value);
    partial void OnThisMed_NameChanged();
    partial void OnThisGeneralOpCodeChanging(string value);
    partial void OnThisGeneralOpCodeChanged();
    partial void OnThisGeneralOpNameChanging(string value);
    partial void OnThisGeneralOpNameChanged();
    partial void OnThisOpChanging(string value);
    partial void OnThisOpChanged();
    partial void OnThisOp_CodeChanging(string value);
    partial void OnThisOp_CodeChanged();
    partial void OnThisOp_NameChanging(string value);
    partial void OnThisOp_NameChanged();
    partial void OnGsdSahChanging(System.Nullable<decimal> value);
    partial void OnGsdSahChanged();
    partial void OnTimesForHundredUnitsChanging(System.Nullable<int> value);
    partial void OnTimesForHundredUnitsChanged();
    partial void OnOptLineStyleChanging(string value);
    partial void OnOptLineStyleChanged();
    partial void OnLineIsStraightChanging(System.Nullable<bool> value);
    partial void OnLineIsStraightChanged();
    partial void OnLineIsArcChanging(System.Nullable<bool> value);
    partial void OnLineIsArcChanged();
    partial void OnOptLengthChanging(System.Nullable<int> value);
    partial void OnOptLengthChanged();
    partial void OnOptRaiseAndFallChanging(System.Nullable<int> value);
    partial void OnOptRaiseAndFallChanged();
    partial void OnFabIsScrolledChanging(System.Nullable<bool> value);
    partial void OnFabIsScrolledChanged();
    partial void OnFabThickNessChanging(string value);
    partial void OnFabThickNessChanged();
    partial void OnFabRangeChanging(System.Nullable<int> value);
    partial void OnFabRangeChanged();
    partial void OnMtmProjChanging(System.Nullable<int> value);
    partial void OnMtmProjChanged();
    partial void OnMtmCurrChanging(System.Nullable<int> value);
    partial void OnMtmCurrChanged();
    partial void OnIsConfirmedChanging(System.Nullable<bool> value);
    partial void OnIsConfirmedChanged();
    partial void OnConfirmTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnConfirmTimeChanged();
    partial void OnconfirmUserChanging(string value);
    partial void OnconfirmUserChanged();
    #endregion
		
		public OperationSkill()
		{
			OnCreated();
		}
		
		[Column(Storage="_SEQ", DbType="Int NOT NULL")]
		public int SEQ
		{
			get
			{
				return this._SEQ;
			}
			set
			{
				if ((this._SEQ != value))
				{
					this.OnSEQChanging(value);
					this.SendPropertyChanging();
					this._SEQ = value;
					this.SendPropertyChanged("SEQ");
					this.OnSEQChanged();
				}
			}
		}
		
		[Column(Storage="_ThisPartialStyle_Code", DbType="NChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ThisPartialStyle_Code
		{
			get
			{
				return this._ThisPartialStyle_Code;
			}
			set
			{
				if ((this._ThisPartialStyle_Code != value))
				{
					this.OnThisPartialStyle_CodeChanging(value);
					this.SendPropertyChanging();
					this._ThisPartialStyle_Code = value;
					this.SendPropertyChanged("ThisPartialStyle_Code");
					this.OnThisPartialStyle_CodeChanged();
				}
			}
		}
		
		[Column(Storage="_ThisPartialStyle_Name", DbType="NChar(20)")]
		public string ThisPartialStyle_Name
		{
			get
			{
				return this._ThisPartialStyle_Name;
			}
			set
			{
				if ((this._ThisPartialStyle_Name != value))
				{
					this.OnThisPartialStyle_NameChanging(value);
					this.SendPropertyChanging();
					this._ThisPartialStyle_Name = value;
					this.SendPropertyChanged("ThisPartialStyle_Name");
					this.OnThisPartialStyle_NameChanged();
				}
			}
		}
		
		[Column(Storage="_Attach", DbType="NChar(10)")]
		public string Attach
		{
			get
			{
				return this._Attach;
			}
			set
			{
				if ((this._Attach != value))
				{
					this.OnAttachChanging(value);
					this.SendPropertyChanging();
					this._Attach = value;
					this.SendPropertyChanged("Attach");
					this.OnAttachChanged();
				}
			}
		}
		
		[Column(Storage="_ThisMed_Code", DbType="NChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ThisMed_Code
		{
			get
			{
				return this._ThisMed_Code;
			}
			set
			{
				if ((this._ThisMed_Code != value))
				{
					this.OnThisMed_CodeChanging(value);
					this.SendPropertyChanging();
					this._ThisMed_Code = value;
					this.SendPropertyChanged("ThisMed_Code");
					this.OnThisMed_CodeChanged();
				}
			}
		}
		
		[Column(Storage="_DegreeOfDifficult", DbType="NChar(10)")]
		public string DegreeOfDifficult
		{
			get
			{
				return this._DegreeOfDifficult;
			}
			set
			{
				if ((this._DegreeOfDifficult != value))
				{
					this.OnDegreeOfDifficultChanging(value);
					this.SendPropertyChanging();
					this._DegreeOfDifficult = value;
					this.SendPropertyChanged("DegreeOfDifficult");
					this.OnDegreeOfDifficultChanged();
				}
			}
		}
		
		[Column(Storage="_ThisMed_Name", DbType="NChar(20)")]
		public string ThisMed_Name
		{
			get
			{
				return this._ThisMed_Name;
			}
			set
			{
				if ((this._ThisMed_Name != value))
				{
					this.OnThisMed_NameChanging(value);
					this.SendPropertyChanging();
					this._ThisMed_Name = value;
					this.SendPropertyChanged("ThisMed_Name");
					this.OnThisMed_NameChanged();
				}
			}
		}
		
		[Column(Storage="_ThisGeneralOpCode", DbType="NChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ThisGeneralOpCode
		{
			get
			{
				return this._ThisGeneralOpCode;
			}
			set
			{
				if ((this._ThisGeneralOpCode != value))
				{
					this.OnThisGeneralOpCodeChanging(value);
					this.SendPropertyChanging();
					this._ThisGeneralOpCode = value;
					this.SendPropertyChanged("ThisGeneralOpCode");
					this.OnThisGeneralOpCodeChanged();
				}
			}
		}
		
		[Column(Storage="_ThisGeneralOpName", DbType="NChar(20)")]
		public string ThisGeneralOpName
		{
			get
			{
				return this._ThisGeneralOpName;
			}
			set
			{
				if ((this._ThisGeneralOpName != value))
				{
					this.OnThisGeneralOpNameChanging(value);
					this.SendPropertyChanging();
					this._ThisGeneralOpName = value;
					this.SendPropertyChanged("ThisGeneralOpName");
					this.OnThisGeneralOpNameChanged();
				}
			}
		}
		
		[Column(Storage="_ThisOp", DbType="NChar(30)")]
		public string ThisOp
		{
			get
			{
				return this._ThisOp;
			}
			set
			{
				if ((this._ThisOp != value))
				{
					this.OnThisOpChanging(value);
					this.SendPropertyChanging();
					this._ThisOp = value;
					this.SendPropertyChanged("ThisOp");
					this.OnThisOpChanged();
				}
			}
		}
		
		[Column(Storage="_ThisOp_Code", DbType="NChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ThisOp_Code
		{
			get
			{
				return this._ThisOp_Code;
			}
			set
			{
				if ((this._ThisOp_Code != value))
				{
					this.OnThisOp_CodeChanging(value);
					this.SendPropertyChanging();
					this._ThisOp_Code = value;
					this.SendPropertyChanged("ThisOp_Code");
					this.OnThisOp_CodeChanged();
				}
			}
		}
		
		[Column(Storage="_ThisOp_Name", DbType="NChar(20)")]
		public string ThisOp_Name
		{
			get
			{
				return this._ThisOp_Name;
			}
			set
			{
				if ((this._ThisOp_Name != value))
				{
					this.OnThisOp_NameChanging(value);
					this.SendPropertyChanging();
					this._ThisOp_Name = value;
					this.SendPropertyChanged("ThisOp_Name");
					this.OnThisOp_NameChanged();
				}
			}
		}
		
		[Column(Storage="_GsdSah", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> GsdSah
		{
			get
			{
				return this._GsdSah;
			}
			set
			{
				if ((this._GsdSah != value))
				{
					this.OnGsdSahChanging(value);
					this.SendPropertyChanging();
					this._GsdSah = value;
					this.SendPropertyChanged("GsdSah");
					this.OnGsdSahChanged();
				}
			}
		}
		
		[Column(Storage="_TimesForHundredUnits", DbType="Int")]
		public System.Nullable<int> TimesForHundredUnits
		{
			get
			{
				return this._TimesForHundredUnits;
			}
			set
			{
				if ((this._TimesForHundredUnits != value))
				{
					this.OnTimesForHundredUnitsChanging(value);
					this.SendPropertyChanging();
					this._TimesForHundredUnits = value;
					this.SendPropertyChanged("TimesForHundredUnits");
					this.OnTimesForHundredUnitsChanged();
				}
			}
		}
		
		[Column(Storage="_OptLineStyle", DbType="NChar(20)")]
		public string OptLineStyle
		{
			get
			{
				return this._OptLineStyle;
			}
			set
			{
				if ((this._OptLineStyle != value))
				{
					this.OnOptLineStyleChanging(value);
					this.SendPropertyChanging();
					this._OptLineStyle = value;
					this.SendPropertyChanged("OptLineStyle");
					this.OnOptLineStyleChanged();
				}
			}
		}
		
		[Column(Storage="_LineIsStraight", DbType="Bit")]
		public System.Nullable<bool> LineIsStraight
		{
			get
			{
				return this._LineIsStraight;
			}
			set
			{
				if ((this._LineIsStraight != value))
				{
					this.OnLineIsStraightChanging(value);
					this.SendPropertyChanging();
					this._LineIsStraight = value;
					this.SendPropertyChanged("LineIsStraight");
					this.OnLineIsStraightChanged();
				}
			}
		}
		
		[Column(Storage="_LineIsArc", DbType="Bit")]
		public System.Nullable<bool> LineIsArc
		{
			get
			{
				return this._LineIsArc;
			}
			set
			{
				if ((this._LineIsArc != value))
				{
					this.OnLineIsArcChanging(value);
					this.SendPropertyChanging();
					this._LineIsArc = value;
					this.SendPropertyChanged("LineIsArc");
					this.OnLineIsArcChanged();
				}
			}
		}
		
		[Column(Storage="_OptLength", DbType="Int")]
		public System.Nullable<int> OptLength
		{
			get
			{
				return this._OptLength;
			}
			set
			{
				if ((this._OptLength != value))
				{
					this.OnOptLengthChanging(value);
					this.SendPropertyChanging();
					this._OptLength = value;
					this.SendPropertyChanged("OptLength");
					this.OnOptLengthChanged();
				}
			}
		}
		
		[Column(Storage="_OptRaiseAndFall", DbType="Int")]
		public System.Nullable<int> OptRaiseAndFall
		{
			get
			{
				return this._OptRaiseAndFall;
			}
			set
			{
				if ((this._OptRaiseAndFall != value))
				{
					this.OnOptRaiseAndFallChanging(value);
					this.SendPropertyChanging();
					this._OptRaiseAndFall = value;
					this.SendPropertyChanged("OptRaiseAndFall");
					this.OnOptRaiseAndFallChanged();
				}
			}
		}
		
		[Column(Storage="_FabIsScrolled", DbType="Bit")]
		public System.Nullable<bool> FabIsScrolled
		{
			get
			{
				return this._FabIsScrolled;
			}
			set
			{
				if ((this._FabIsScrolled != value))
				{
					this.OnFabIsScrolledChanging(value);
					this.SendPropertyChanging();
					this._FabIsScrolled = value;
					this.SendPropertyChanged("FabIsScrolled");
					this.OnFabIsScrolledChanged();
				}
			}
		}
		
		[Column(Storage="_FabThickNess", DbType="NChar(10)")]
		public string FabThickNess
		{
			get
			{
				return this._FabThickNess;
			}
			set
			{
				if ((this._FabThickNess != value))
				{
					this.OnFabThickNessChanging(value);
					this.SendPropertyChanging();
					this._FabThickNess = value;
					this.SendPropertyChanged("FabThickNess");
					this.OnFabThickNessChanged();
				}
			}
		}
		
		[Column(Storage="_FabRange", DbType="Int")]
		public System.Nullable<int> FabRange
		{
			get
			{
				return this._FabRange;
			}
			set
			{
				if ((this._FabRange != value))
				{
					this.OnFabRangeChanging(value);
					this.SendPropertyChanging();
					this._FabRange = value;
					this.SendPropertyChanged("FabRange");
					this.OnFabRangeChanged();
				}
			}
		}
		
		[Column(Storage="_MtmProj", DbType="Int")]
		public System.Nullable<int> MtmProj
		{
			get
			{
				return this._MtmProj;
			}
			set
			{
				if ((this._MtmProj != value))
				{
					this.OnMtmProjChanging(value);
					this.SendPropertyChanging();
					this._MtmProj = value;
					this.SendPropertyChanged("MtmProj");
					this.OnMtmProjChanged();
				}
			}
		}
		
		[Column(Storage="_MtmCurr", DbType="Int")]
		public System.Nullable<int> MtmCurr
		{
			get
			{
				return this._MtmCurr;
			}
			set
			{
				if ((this._MtmCurr != value))
				{
					this.OnMtmCurrChanging(value);
					this.SendPropertyChanging();
					this._MtmCurr = value;
					this.SendPropertyChanged("MtmCurr");
					this.OnMtmCurrChanged();
				}
			}
		}
		
		[Column(Storage="_IsConfirmed", DbType="Bit")]
		public System.Nullable<bool> IsConfirmed
		{
			get
			{
				return this._IsConfirmed;
			}
			set
			{
				if ((this._IsConfirmed != value))
				{
					this.OnIsConfirmedChanging(value);
					this.SendPropertyChanging();
					this._IsConfirmed = value;
					this.SendPropertyChanged("IsConfirmed");
					this.OnIsConfirmedChanged();
				}
			}
		}
		
		[Column(Storage="_ConfirmTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ConfirmTime
		{
			get
			{
				return this._ConfirmTime;
			}
			set
			{
				if ((this._ConfirmTime != value))
				{
					this.OnConfirmTimeChanging(value);
					this.SendPropertyChanging();
					this._ConfirmTime = value;
					this.SendPropertyChanged("ConfirmTime");
					this.OnConfirmTimeChanged();
				}
			}
		}
		
		[Column(Storage="_confirmUser", DbType="NChar(12) NOT NULL", CanBeNull=false)]
		public string confirmUser
		{
			get
			{
				return this._confirmUser;
			}
			set
			{
				if ((this._confirmUser != value))
				{
					this.OnconfirmUserChanging(value);
					this.SendPropertyChanging();
					this._confirmUser = value;
					this.SendPropertyChanged("confirmUser");
					this.OnconfirmUserChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.MachineImg")]
	public partial class MachineImg : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private System.Data.Linq.Binary _Mcimg;
		
		private EntityRef<Machine> _Machine;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnMcimgChanging(System.Data.Linq.Binary value);
    partial void OnMcimgChanged();
    #endregion
		
		public MachineImg()
		{
			this._Machine = default(EntityRef<Machine>);
			OnCreated();
		}
		
		[Column(Storage="_Id", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					if (this._Machine.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_Mcimg", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Mcimg
		{
			get
			{
				return this._Mcimg;
			}
			set
			{
				if ((this._Mcimg != value))
				{
					this.OnMcimgChanging(value);
					this.SendPropertyChanging();
					this._Mcimg = value;
					this.SendPropertyChanged("Mcimg");
					this.OnMcimgChanged();
				}
			}
		}
		
		[Association(Name="Machine_MachineImg", Storage="_Machine", ThisKey="Id", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Machine Machine
		{
			get
			{
				return this._Machine.Entity;
			}
			set
			{
				Machine previousValue = this._Machine.Entity;
				if (((previousValue != value) 
							|| (this._Machine.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Machine.Entity = null;
						previousValue.MachineImg = null;
					}
					this._Machine.Entity = value;
					if ((value != null))
					{
						value.MachineImg = this;
						this._Id = value.Id;
					}
					else
					{
						this._Id = default(string);
					}
					this.SendPropertyChanged("Machine");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.WorkForceImg")]
	public partial class WorkForceImg : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Factory;
		
		private string _Id;
		
		private System.Data.Linq.Binary _img;
		
		private EntityRef<WorkForce> _WorkForce;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFactoryChanging(string value);
    partial void OnFactoryChanged();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnimgChanging(System.Data.Linq.Binary value);
    partial void OnimgChanged();
    #endregion
		
		public WorkForceImg()
		{
			this._WorkForce = default(EntityRef<WorkForce>);
			OnCreated();
		}
		
		[Column(Storage="_Factory", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Factory
		{
			get
			{
				return this._Factory;
			}
			set
			{
				if ((this._Factory != value))
				{
					if (this._WorkForce.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFactoryChanging(value);
					this.SendPropertyChanging();
					this._Factory = value;
					this.SendPropertyChanged("Factory");
					this.OnFactoryChanged();
				}
			}
		}
		
		[Column(Storage="_Id", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					if (this._WorkForce.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_img", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary img
		{
			get
			{
				return this._img;
			}
			set
			{
				if ((this._img != value))
				{
					this.OnimgChanging(value);
					this.SendPropertyChanging();
					this._img = value;
					this.SendPropertyChanged("img");
					this.OnimgChanged();
				}
			}
		}
		
		[Association(Name="WorkForce_WorkForceImg", Storage="_WorkForce", ThisKey="Id,Factory", OtherKey="Id,Factory", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public WorkForce WorkForce
		{
			get
			{
				return this._WorkForce.Entity;
			}
			set
			{
				WorkForce previousValue = this._WorkForce.Entity;
				if (((previousValue != value) 
							|| (this._WorkForce.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WorkForce.Entity = null;
						previousValue.WorkForceImg = null;
					}
					this._WorkForce.Entity = value;
					if ((value != null))
					{
						value.WorkForceImg = this;
						this._Id = value.Id;
						this._Factory = value.Factory;
					}
					else
					{
						this._Id = default(string);
						this._Factory = default(string);
					}
					this.SendPropertyChanged("WorkForce");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.CarEfficiency")]
	public partial class CarEfficiency : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private string _Factory;
		
		private string _NameCN;
		
		private System.Nullable<decimal> _Type_BT;
		
		private System.Nullable<decimal> _Type_SN;
		
		private System.Nullable<decimal> _Type_HD;
		
		private System.Nullable<decimal> _Type_ZZ;
		
		private System.Nullable<decimal> _Type_OV;
		
		private System.Nullable<decimal> _Type_DN;
		
		private System.Nullable<decimal> _Type_CT;
		
		private System.Nullable<decimal> _Type_CS;
		
		private System.Nullable<decimal> _TotalEfiency;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnFactoryChanging(string value);
    partial void OnFactoryChanged();
    partial void OnNameCNChanging(string value);
    partial void OnNameCNChanged();
    partial void OnType_BTChanging(System.Nullable<decimal> value);
    partial void OnType_BTChanged();
    partial void OnType_SNChanging(System.Nullable<decimal> value);
    partial void OnType_SNChanged();
    partial void OnType_HDChanging(System.Nullable<decimal> value);
    partial void OnType_HDChanged();
    partial void OnType_ZZChanging(System.Nullable<decimal> value);
    partial void OnType_ZZChanged();
    partial void OnType_OVChanging(System.Nullable<decimal> value);
    partial void OnType_OVChanged();
    partial void OnType_DNChanging(System.Nullable<decimal> value);
    partial void OnType_DNChanged();
    partial void OnType_CTChanging(System.Nullable<decimal> value);
    partial void OnType_CTChanged();
    partial void OnType_CSChanging(System.Nullable<decimal> value);
    partial void OnType_CSChanged();
    partial void OnTotalEfiencyChanging(System.Nullable<decimal> value);
    partial void OnTotalEfiencyChanged();
    #endregion
		
		public CarEfficiency()
		{
			OnCreated();
		}
		
		[Column(Storage="_Id", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_Factory", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Factory
		{
			get
			{
				return this._Factory;
			}
			set
			{
				if ((this._Factory != value))
				{
					this.OnFactoryChanging(value);
					this.SendPropertyChanging();
					this._Factory = value;
					this.SendPropertyChanged("Factory");
					this.OnFactoryChanged();
				}
			}
		}
		
		[Column(Storage="_NameCN", DbType="NChar(18)")]
		public string NameCN
		{
			get
			{
				return this._NameCN;
			}
			set
			{
				if ((this._NameCN != value))
				{
					this.OnNameCNChanging(value);
					this.SendPropertyChanging();
					this._NameCN = value;
					this.SendPropertyChanged("NameCN");
					this.OnNameCNChanged();
				}
			}
		}
		
		[Column(Storage="_Type_BT", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> Type_BT
		{
			get
			{
				return this._Type_BT;
			}
			set
			{
				if ((this._Type_BT != value))
				{
					this.OnType_BTChanging(value);
					this.SendPropertyChanging();
					this._Type_BT = value;
					this.SendPropertyChanged("Type_BT");
					this.OnType_BTChanged();
				}
			}
		}
		
		[Column(Storage="_Type_SN", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> Type_SN
		{
			get
			{
				return this._Type_SN;
			}
			set
			{
				if ((this._Type_SN != value))
				{
					this.OnType_SNChanging(value);
					this.SendPropertyChanging();
					this._Type_SN = value;
					this.SendPropertyChanged("Type_SN");
					this.OnType_SNChanged();
				}
			}
		}
		
		[Column(Storage="_Type_HD", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> Type_HD
		{
			get
			{
				return this._Type_HD;
			}
			set
			{
				if ((this._Type_HD != value))
				{
					this.OnType_HDChanging(value);
					this.SendPropertyChanging();
					this._Type_HD = value;
					this.SendPropertyChanged("Type_HD");
					this.OnType_HDChanged();
				}
			}
		}
		
		[Column(Storage="_Type_ZZ", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> Type_ZZ
		{
			get
			{
				return this._Type_ZZ;
			}
			set
			{
				if ((this._Type_ZZ != value))
				{
					this.OnType_ZZChanging(value);
					this.SendPropertyChanging();
					this._Type_ZZ = value;
					this.SendPropertyChanged("Type_ZZ");
					this.OnType_ZZChanged();
				}
			}
		}
		
		[Column(Storage="_Type_OV", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> Type_OV
		{
			get
			{
				return this._Type_OV;
			}
			set
			{
				if ((this._Type_OV != value))
				{
					this.OnType_OVChanging(value);
					this.SendPropertyChanging();
					this._Type_OV = value;
					this.SendPropertyChanged("Type_OV");
					this.OnType_OVChanged();
				}
			}
		}
		
		[Column(Storage="_Type_DN", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> Type_DN
		{
			get
			{
				return this._Type_DN;
			}
			set
			{
				if ((this._Type_DN != value))
				{
					this.OnType_DNChanging(value);
					this.SendPropertyChanging();
					this._Type_DN = value;
					this.SendPropertyChanged("Type_DN");
					this.OnType_DNChanged();
				}
			}
		}
		
		[Column(Storage="_Type_CT", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> Type_CT
		{
			get
			{
				return this._Type_CT;
			}
			set
			{
				if ((this._Type_CT != value))
				{
					this.OnType_CTChanging(value);
					this.SendPropertyChanging();
					this._Type_CT = value;
					this.SendPropertyChanged("Type_CT");
					this.OnType_CTChanged();
				}
			}
		}
		
		[Column(Storage="_Type_CS", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> Type_CS
		{
			get
			{
				return this._Type_CS;
			}
			set
			{
				if ((this._Type_CS != value))
				{
					this.OnType_CSChanging(value);
					this.SendPropertyChanging();
					this._Type_CS = value;
					this.SendPropertyChanged("Type_CS");
					this.OnType_CSChanged();
				}
			}
		}
		
		[Column(Storage="_TotalEfiency", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> TotalEfiency
		{
			get
			{
				return this._TotalEfiency;
			}
			set
			{
				if ((this._TotalEfiency != value))
				{
					this.OnTotalEfiencyChanging(value);
					this.SendPropertyChanging();
					this._TotalEfiency = value;
					this.SendPropertyChanged("TotalEfiency");
					this.OnTotalEfiencyChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.WorkerAttendance")]
	public partial class WorkerAttendance : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private System.DateTime _Date;
		
		private System.Nullable<bool> _IsWork;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnIsWorkChanging(System.Nullable<bool> value);
    partial void OnIsWorkChanged();
    #endregion
		
		public WorkerAttendance()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", DbType="VarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_Date", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[Column(Storage="_IsWork", DbType="Bit")]
		public System.Nullable<bool> IsWork
		{
			get
			{
				return this._IsWork;
			}
			set
			{
				if ((this._IsWork != value))
				{
					this.OnIsWorkChanging(value);
					this.SendPropertyChanging();
					this._IsWork = value;
					this.SendPropertyChanged("IsWork");
					this.OnIsWorkChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.FactoryLines")]
	public partial class FactoryLines : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Factory;
		
		private string _Line;
		
		private string _Type;
		
		private string _Description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnFactoryChanging(string value);
    partial void OnFactoryChanged();
    partial void OnLineChanging(string value);
    partial void OnLineChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public FactoryLines()
		{
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_Factory", DbType="NChar(5)")]
		public string Factory
		{
			get
			{
				return this._Factory;
			}
			set
			{
				if ((this._Factory != value))
				{
					this.OnFactoryChanging(value);
					this.SendPropertyChanging();
					this._Factory = value;
					this.SendPropertyChanged("Factory");
					this.OnFactoryChanged();
				}
			}
		}
		
		[Column(Storage="_Line", DbType="VarChar(30)")]
		public string Line
		{
			get
			{
				return this._Line;
			}
			set
			{
				if ((this._Line != value))
				{
					this.OnLineChanging(value);
					this.SendPropertyChanging();
					this._Line = value;
					this.SendPropertyChanged("Line");
					this.OnLineChanged();
				}
			}
		}
		
		[Column(Storage="_Type", DbType="NChar(20)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[Column(Storage="_Description", DbType="VarChar(80)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.LineCode")]
	public partial class LineCode : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _LineCodeName;
		
		private int _Sub_Id;
		
		private EntityRef<Sub_Section> _Sub_Section;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnLineCodeNameChanging(string value);
    partial void OnLineCodeNameChanged();
    partial void OnSub_IdChanging(int value);
    partial void OnSub_IdChanged();
    #endregion
		
		public LineCode()
		{
			this._Sub_Section = default(EntityRef<Sub_Section>);
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_LineCodeName", DbType="NVarChar(MAX)")]
		public string LineCodeName
		{
			get
			{
				return this._LineCodeName;
			}
			set
			{
				if ((this._LineCodeName != value))
				{
					this.OnLineCodeNameChanging(value);
					this.SendPropertyChanging();
					this._LineCodeName = value;
					this.SendPropertyChanged("LineCodeName");
					this.OnLineCodeNameChanged();
				}
			}
		}
		
		[Column(Storage="_Sub_Id", DbType="Int NOT NULL")]
		public int Sub_Id
		{
			get
			{
				return this._Sub_Id;
			}
			set
			{
				if ((this._Sub_Id != value))
				{
					if (this._Sub_Section.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSub_IdChanging(value);
					this.SendPropertyChanging();
					this._Sub_Id = value;
					this.SendPropertyChanged("Sub_Id");
					this.OnSub_IdChanged();
				}
			}
		}
		
		[Association(Name="Sub_Section_LineCode", Storage="_Sub_Section", ThisKey="Sub_Id", OtherKey="Sub_Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Sub_Section Sub_Section
		{
			get
			{
				return this._Sub_Section.Entity;
			}
			set
			{
				Sub_Section previousValue = this._Sub_Section.Entity;
				if (((previousValue != value) 
							|| (this._Sub_Section.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sub_Section.Entity = null;
						previousValue.LineCodes.Remove(this);
					}
					this._Sub_Section.Entity = value;
					if ((value != null))
					{
						value.LineCodes.Add(this);
						this._Sub_Id = value.Sub_Id;
					}
					else
					{
						this._Sub_Id = default(int);
					}
					this.SendPropertyChanged("Sub_Section");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Sub_Section")]
	public partial class Sub_Section : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Sub_Id;
		
		private string _NameEn;
		
		private string _NameCn;
		
		private string _LinkageNameEn;
		
		private string _LinkageNameCn;
		
		private EntitySet<LineCode> _LineCodes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSub_IdChanging(int value);
    partial void OnSub_IdChanged();
    partial void OnNameEnChanging(string value);
    partial void OnNameEnChanged();
    partial void OnNameCnChanging(string value);
    partial void OnNameCnChanged();
    partial void OnLinkageNameEnChanging(string value);
    partial void OnLinkageNameEnChanged();
    partial void OnLinkageNameCnChanging(string value);
    partial void OnLinkageNameCnChanged();
    #endregion
		
		public Sub_Section()
		{
			this._LineCodes = new EntitySet<LineCode>(new Action<LineCode>(this.attach_LineCodes), new Action<LineCode>(this.detach_LineCodes));
			OnCreated();
		}
		
		[Column(Storage="_Sub_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Sub_Id
		{
			get
			{
				return this._Sub_Id;
			}
			set
			{
				if ((this._Sub_Id != value))
				{
					this.OnSub_IdChanging(value);
					this.SendPropertyChanging();
					this._Sub_Id = value;
					this.SendPropertyChanged("Sub_Id");
					this.OnSub_IdChanged();
				}
			}
		}
		
		[Column(Storage="_NameEn", DbType="NVarChar(MAX)")]
		public string NameEn
		{
			get
			{
				return this._NameEn;
			}
			set
			{
				if ((this._NameEn != value))
				{
					this.OnNameEnChanging(value);
					this.SendPropertyChanging();
					this._NameEn = value;
					this.SendPropertyChanged("NameEn");
					this.OnNameEnChanged();
				}
			}
		}
		
		[Column(Storage="_NameCn", DbType="NVarChar(MAX)")]
		public string NameCn
		{
			get
			{
				return this._NameCn;
			}
			set
			{
				if ((this._NameCn != value))
				{
					this.OnNameCnChanging(value);
					this.SendPropertyChanging();
					this._NameCn = value;
					this.SendPropertyChanged("NameCn");
					this.OnNameCnChanged();
				}
			}
		}
		
		[Column(Storage="_LinkageNameEn", DbType="NVarChar(MAX)")]
		public string LinkageNameEn
		{
			get
			{
				return this._LinkageNameEn;
			}
			set
			{
				if ((this._LinkageNameEn != value))
				{
					this.OnLinkageNameEnChanging(value);
					this.SendPropertyChanging();
					this._LinkageNameEn = value;
					this.SendPropertyChanged("LinkageNameEn");
					this.OnLinkageNameEnChanged();
				}
			}
		}
		
		[Column(Storage="_LinkageNameCn", DbType="NVarChar(MAX)")]
		public string LinkageNameCn
		{
			get
			{
				return this._LinkageNameCn;
			}
			set
			{
				if ((this._LinkageNameCn != value))
				{
					this.OnLinkageNameCnChanging(value);
					this.SendPropertyChanging();
					this._LinkageNameCn = value;
					this.SendPropertyChanged("LinkageNameCn");
					this.OnLinkageNameCnChanged();
				}
			}
		}
		
		[Association(Name="Sub_Section_LineCode", Storage="_LineCodes", ThisKey="Sub_Id", OtherKey="Sub_Id")]
		public EntitySet<LineCode> LineCodes
		{
			get
			{
				return this._LineCodes;
			}
			set
			{
				this._LineCodes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LineCodes(LineCode entity)
		{
			this.SendPropertyChanging();
			entity.Sub_Section = this;
		}
		
		private void detach_LineCodes(LineCode entity)
		{
			this.SendPropertyChanging();
			entity.Sub_Section = null;
		}
	}
	
	[Table(Name="dbo.vw_workhistory")]
	public partial class vw_workhistory
	{
		
		private string _workerid;
		
		private string _operationcode;
		
		private string _operationname;
		
		private string _workstyle;
		
		private string _machineid;
		
		private string _machinename;
		
		private string _machinetype;
		
		private System.Nullable<char> _fae;
		
		public vw_workhistory()
		{
		}
		
		[Column(Storage="_workerid", DbType="VarChar(50)")]
		public string workerid
		{
			get
			{
				return this._workerid;
			}
			set
			{
				if ((this._workerid != value))
				{
					this._workerid = value;
				}
			}
		}
		
		[Column(Storage="_operationcode", DbType="NChar(10)")]
		public string operationcode
		{
			get
			{
				return this._operationcode;
			}
			set
			{
				if ((this._operationcode != value))
				{
					this._operationcode = value;
				}
			}
		}
		
		[Column(Storage="_operationname", DbType="NChar(100)")]
		public string operationname
		{
			get
			{
				return this._operationname;
			}
			set
			{
				if ((this._operationname != value))
				{
					this._operationname = value;
				}
			}
		}
		
		[Column(Storage="_workstyle", DbType="VarChar(50)")]
		public string workstyle
		{
			get
			{
				return this._workstyle;
			}
			set
			{
				if ((this._workstyle != value))
				{
					this._workstyle = value;
				}
			}
		}
		
		[Column(Storage="_machineid", DbType="VarChar(50)")]
		public string machineid
		{
			get
			{
				return this._machineid;
			}
			set
			{
				if ((this._machineid != value))
				{
					this._machineid = value;
				}
			}
		}
		
		[Column(Storage="_machinename", DbType="NVarChar(30)")]
		public string machinename
		{
			get
			{
				return this._machinename;
			}
			set
			{
				if ((this._machinename != value))
				{
					this._machinename = value;
				}
			}
		}
		
		[Column(Storage="_machinetype", DbType="NVarChar(200)")]
		public string machinetype
		{
			get
			{
				return this._machinetype;
			}
			set
			{
				if ((this._machinetype != value))
				{
					this._machinetype = value;
				}
			}
		}
		
		[Column(Storage="_fae", DbType="VarChar(1)")]
		public System.Nullable<char> fae
		{
			get
			{
				return this._fae;
			}
			set
			{
				if ((this._fae != value))
				{
					this._fae = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.McClassDetail")]
	public partial class McClassDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RecId;
		
		private string _Code;
		
		private string _SubCode;
		
		private string _Name_en;
		
		private string _Name_cn;
		
		private string _NameBd;
		
		private string _SortID;
		
		private EntityRef<BaseCode> _BaseCode;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRecIdChanging(int value);
    partial void OnRecIdChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnSubCodeChanging(string value);
    partial void OnSubCodeChanged();
    partial void OnName_enChanging(string value);
    partial void OnName_enChanged();
    partial void OnName_cnChanging(string value);
    partial void OnName_cnChanged();
    partial void OnNameBdChanging(string value);
    partial void OnNameBdChanged();
    partial void OnSortIDChanging(string value);
    partial void OnSortIDChanged();
    #endregion
		
		public McClassDetail()
		{
			this._BaseCode = default(EntityRef<BaseCode>);
			OnCreated();
		}
		
		[Column(Storage="_RecId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RecId
		{
			get
			{
				return this._RecId;
			}
			set
			{
				if ((this._RecId != value))
				{
					this.OnRecIdChanging(value);
					this.SendPropertyChanging();
					this._RecId = value;
					this.SendPropertyChanged("RecId");
					this.OnRecIdChanged();
				}
			}
		}
		
		[Column(Storage="_Code", DbType="VarChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					if (this._BaseCode.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[Column(Storage="_SubCode", DbType="VarChar(10)")]
		public string SubCode
		{
			get
			{
				return this._SubCode;
			}
			set
			{
				if ((this._SubCode != value))
				{
					this.OnSubCodeChanging(value);
					this.SendPropertyChanging();
					this._SubCode = value;
					this.SendPropertyChanged("SubCode");
					this.OnSubCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Name_en", DbType="NVarChar(200)")]
		public string Name_en
		{
			get
			{
				return this._Name_en;
			}
			set
			{
				if ((this._Name_en != value))
				{
					this.OnName_enChanging(value);
					this.SendPropertyChanging();
					this._Name_en = value;
					this.SendPropertyChanged("Name_en");
					this.OnName_enChanged();
				}
			}
		}
		
		[Column(Storage="_Name_cn", DbType="NVarChar(200)")]
		public string Name_cn
		{
			get
			{
				return this._Name_cn;
			}
			set
			{
				if ((this._Name_cn != value))
				{
					this.OnName_cnChanging(value);
					this.SendPropertyChanging();
					this._Name_cn = value;
					this.SendPropertyChanged("Name_cn");
					this.OnName_cnChanged();
				}
			}
		}
		
		[Column(Storage="_NameBd", DbType="NVarChar(200)")]
		public string NameBd
		{
			get
			{
				return this._NameBd;
			}
			set
			{
				if ((this._NameBd != value))
				{
					this.OnNameBdChanging(value);
					this.SendPropertyChanging();
					this._NameBd = value;
					this.SendPropertyChanged("NameBd");
					this.OnNameBdChanged();
				}
			}
		}
		
		[Column(Storage="_SortID", DbType="VarChar(10)")]
		public string SortID
		{
			get
			{
				return this._SortID;
			}
			set
			{
				if ((this._SortID != value))
				{
					this.OnSortIDChanging(value);
					this.SendPropertyChanging();
					this._SortID = value;
					this.SendPropertyChanged("SortID");
					this.OnSortIDChanged();
				}
			}
		}
		
		[Association(Name="BaseCode_McClassDetail", Storage="_BaseCode", ThisKey="Code", OtherKey="Code", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public BaseCode BaseCode
		{
			get
			{
				return this._BaseCode.Entity;
			}
			set
			{
				BaseCode previousValue = this._BaseCode.Entity;
				if (((previousValue != value) 
							|| (this._BaseCode.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BaseCode.Entity = null;
						previousValue.McClassDetails.Remove(this);
					}
					this._BaseCode.Entity = value;
					if ((value != null))
					{
						value.McClassDetails.Add(this);
						this._Code = value.Code;
					}
					else
					{
						this._Code = default(string);
					}
					this.SendPropertyChanged("BaseCode");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.QuatationInfo")]
	public partial class QuatationInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RecId;
		
		private string _TypeCode;
		
		private string _QuaNo;
		
		private string _Vendor;
		
		private System.Nullable<decimal> _Price;
		
		private string _Model;
		
		private string _Term_Payment;
		
		private string _Term_Delivery;
		
		private System.Nullable<System.DateTime> _DT_Delivery;
		
		private System.Nullable<System.DateTime> _DT_ETA;
		
		private string _CreateBy;
		
		private System.Nullable<System.DateTime> _CreateTime;
		
		private string _UpdateBy;
		
		private System.Nullable<System.DateTime> _UpdateTime;
		
		private System.Nullable<System.DateTime> _DT_Quatation;
		
		private System.Nullable<bool> _Active;
		
		private string _Factory;
		
		private string _RevNo;
		
		private System.Nullable<System.DateTime> _DT_Effective;
		
		private string _Currency;
		
		private System.Nullable<decimal> _TargetPrice;
		
		private System.Nullable<System.DateTime> _DT_FinalDelivery;
		
		private System.Nullable<System.DateTime> _DT_FinalETA;
		
		private string _Manufacturer;
		
		private System.Nullable<System.DateTime> _DT_TargetETA;
		
		private System.Nullable<System.DateTime> _DT_TargetDelivery;
		
		private System.Nullable<decimal> _AgreePrice;
		
		private string _DeptUsing;
		
		private string _VendorCode;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRecIdChanging(int value);
    partial void OnRecIdChanged();
    partial void OnTypeCodeChanging(string value);
    partial void OnTypeCodeChanged();
    partial void OnQuaNoChanging(string value);
    partial void OnQuaNoChanged();
    partial void OnVendorChanging(string value);
    partial void OnVendorChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnTerm_PaymentChanging(string value);
    partial void OnTerm_PaymentChanged();
    partial void OnTerm_DeliveryChanging(string value);
    partial void OnTerm_DeliveryChanged();
    partial void OnDT_DeliveryChanging(System.Nullable<System.DateTime> value);
    partial void OnDT_DeliveryChanged();
    partial void OnDT_ETAChanging(System.Nullable<System.DateTime> value);
    partial void OnDT_ETAChanged();
    partial void OnCreateByChanging(string value);
    partial void OnCreateByChanged();
    partial void OnCreateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateTimeChanged();
    partial void OnUpdateByChanging(string value);
    partial void OnUpdateByChanged();
    partial void OnUpdateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateTimeChanged();
    partial void OnDT_QuatationChanging(System.Nullable<System.DateTime> value);
    partial void OnDT_QuatationChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnFactoryChanging(string value);
    partial void OnFactoryChanged();
    partial void OnRevNoChanging(string value);
    partial void OnRevNoChanged();
    partial void OnDT_EffectiveChanging(System.Nullable<System.DateTime> value);
    partial void OnDT_EffectiveChanged();
    partial void OnCurrencyChanging(string value);
    partial void OnCurrencyChanged();
    partial void OnTargetPriceChanging(System.Nullable<decimal> value);
    partial void OnTargetPriceChanged();
    partial void OnDT_FinalDeliveryChanging(System.Nullable<System.DateTime> value);
    partial void OnDT_FinalDeliveryChanged();
    partial void OnDT_FinalETAChanging(System.Nullable<System.DateTime> value);
    partial void OnDT_FinalETAChanged();
    partial void OnManufacturerChanging(string value);
    partial void OnManufacturerChanged();
    partial void OnDT_TargetETAChanging(System.Nullable<System.DateTime> value);
    partial void OnDT_TargetETAChanged();
    partial void OnDT_TargetDeliveryChanging(System.Nullable<System.DateTime> value);
    partial void OnDT_TargetDeliveryChanged();
    partial void OnAgreePriceChanging(System.Nullable<decimal> value);
    partial void OnAgreePriceChanged();
    partial void OnDeptUsingChanging(string value);
    partial void OnDeptUsingChanged();
    partial void OnVendorCodeChanging(string value);
    partial void OnVendorCodeChanged();
    #endregion
		
		public QuatationInfo()
		{
			OnCreated();
		}
		
		[Column(Storage="_RecId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RecId
		{
			get
			{
				return this._RecId;
			}
			set
			{
				if ((this._RecId != value))
				{
					this.OnRecIdChanging(value);
					this.SendPropertyChanging();
					this._RecId = value;
					this.SendPropertyChanged("RecId");
					this.OnRecIdChanged();
				}
			}
		}
		
		[Column(Storage="_TypeCode", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string TypeCode
		{
			get
			{
				return this._TypeCode;
			}
			set
			{
				if ((this._TypeCode != value))
				{
					this.OnTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._TypeCode = value;
					this.SendPropertyChanged("TypeCode");
					this.OnTypeCodeChanged();
				}
			}
		}
		
		[Column(Storage="_QuaNo", DbType="VarChar(20)")]
		public string QuaNo
		{
			get
			{
				return this._QuaNo;
			}
			set
			{
				if ((this._QuaNo != value))
				{
					this.OnQuaNoChanging(value);
					this.SendPropertyChanging();
					this._QuaNo = value;
					this.SendPropertyChanged("QuaNo");
					this.OnQuaNoChanged();
				}
			}
		}
		
		[Column(Storage="_Vendor", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
		public string Vendor
		{
			get
			{
				return this._Vendor;
			}
			set
			{
				if ((this._Vendor != value))
				{
					this.OnVendorChanging(value);
					this.SendPropertyChanging();
					this._Vendor = value;
					this.SendPropertyChanged("Vendor");
					this.OnVendorChanged();
				}
			}
		}
		
		[Column(Storage="_Price", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[Column(Storage="_Model", DbType="NVarChar(80)")]
		public string Model
		{
			get
			{
				return this._Model;
			}
			set
			{
				if ((this._Model != value))
				{
					this.OnModelChanging(value);
					this.SendPropertyChanging();
					this._Model = value;
					this.SendPropertyChanged("Model");
					this.OnModelChanged();
				}
			}
		}
		
		[Column(Storage="_Term_Payment", DbType="NVarChar(80)")]
		public string Term_Payment
		{
			get
			{
				return this._Term_Payment;
			}
			set
			{
				if ((this._Term_Payment != value))
				{
					this.OnTerm_PaymentChanging(value);
					this.SendPropertyChanging();
					this._Term_Payment = value;
					this.SendPropertyChanged("Term_Payment");
					this.OnTerm_PaymentChanged();
				}
			}
		}
		
		[Column(Storage="_Term_Delivery", DbType="NVarChar(80)")]
		public string Term_Delivery
		{
			get
			{
				return this._Term_Delivery;
			}
			set
			{
				if ((this._Term_Delivery != value))
				{
					this.OnTerm_DeliveryChanging(value);
					this.SendPropertyChanging();
					this._Term_Delivery = value;
					this.SendPropertyChanged("Term_Delivery");
					this.OnTerm_DeliveryChanged();
				}
			}
		}
		
		[Column(Storage="_DT_Delivery", DbType="DateTime")]
		public System.Nullable<System.DateTime> DT_Delivery
		{
			get
			{
				return this._DT_Delivery;
			}
			set
			{
				if ((this._DT_Delivery != value))
				{
					this.OnDT_DeliveryChanging(value);
					this.SendPropertyChanging();
					this._DT_Delivery = value;
					this.SendPropertyChanged("DT_Delivery");
					this.OnDT_DeliveryChanged();
				}
			}
		}
		
		[Column(Storage="_DT_ETA", DbType="DateTime")]
		public System.Nullable<System.DateTime> DT_ETA
		{
			get
			{
				return this._DT_ETA;
			}
			set
			{
				if ((this._DT_ETA != value))
				{
					this.OnDT_ETAChanging(value);
					this.SendPropertyChanging();
					this._DT_ETA = value;
					this.SendPropertyChanged("DT_ETA");
					this.OnDT_ETAChanged();
				}
			}
		}
		
		[Column(Storage="_CreateBy", DbType="VarChar(15)")]
		public string CreateBy
		{
			get
			{
				return this._CreateBy;
			}
			set
			{
				if ((this._CreateBy != value))
				{
					this.OnCreateByChanging(value);
					this.SendPropertyChanging();
					this._CreateBy = value;
					this.SendPropertyChanged("CreateBy");
					this.OnCreateByChanged();
				}
			}
		}
		
		[Column(Storage="_CreateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[Column(Storage="_UpdateBy", DbType="VarChar(15)")]
		public string UpdateBy
		{
			get
			{
				return this._UpdateBy;
			}
			set
			{
				if ((this._UpdateBy != value))
				{
					this.OnUpdateByChanging(value);
					this.SendPropertyChanging();
					this._UpdateBy = value;
					this.SendPropertyChanged("UpdateBy");
					this.OnUpdateByChanged();
				}
			}
		}
		
		[Column(Storage="_UpdateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateTime
		{
			get
			{
				return this._UpdateTime;
			}
			set
			{
				if ((this._UpdateTime != value))
				{
					this.OnUpdateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdateTime = value;
					this.SendPropertyChanged("UpdateTime");
					this.OnUpdateTimeChanged();
				}
			}
		}
		
		[Column(Storage="_DT_Quatation", DbType="DateTime")]
		public System.Nullable<System.DateTime> DT_Quatation
		{
			get
			{
				return this._DT_Quatation;
			}
			set
			{
				if ((this._DT_Quatation != value))
				{
					this.OnDT_QuatationChanging(value);
					this.SendPropertyChanging();
					this._DT_Quatation = value;
					this.SendPropertyChanged("DT_Quatation");
					this.OnDT_QuatationChanged();
				}
			}
		}
		
		[Column(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[Column(Storage="_Factory", DbType="VarChar(20)")]
		public string Factory
		{
			get
			{
				return this._Factory;
			}
			set
			{
				if ((this._Factory != value))
				{
					this.OnFactoryChanging(value);
					this.SendPropertyChanging();
					this._Factory = value;
					this.SendPropertyChanged("Factory");
					this.OnFactoryChanged();
				}
			}
		}
		
		[Column(Storage="_RevNo", DbType="VarChar(20)")]
		public string RevNo
		{
			get
			{
				return this._RevNo;
			}
			set
			{
				if ((this._RevNo != value))
				{
					this.OnRevNoChanging(value);
					this.SendPropertyChanging();
					this._RevNo = value;
					this.SendPropertyChanged("RevNo");
					this.OnRevNoChanged();
				}
			}
		}
		
		[Column(Storage="_DT_Effective", DbType="DateTime")]
		public System.Nullable<System.DateTime> DT_Effective
		{
			get
			{
				return this._DT_Effective;
			}
			set
			{
				if ((this._DT_Effective != value))
				{
					this.OnDT_EffectiveChanging(value);
					this.SendPropertyChanging();
					this._DT_Effective = value;
					this.SendPropertyChanged("DT_Effective");
					this.OnDT_EffectiveChanged();
				}
			}
		}
		
		[Column(Storage="_Currency", DbType="VarChar(10)")]
		public string Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[Column(Storage="_TargetPrice", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> TargetPrice
		{
			get
			{
				return this._TargetPrice;
			}
			set
			{
				if ((this._TargetPrice != value))
				{
					this.OnTargetPriceChanging(value);
					this.SendPropertyChanging();
					this._TargetPrice = value;
					this.SendPropertyChanged("TargetPrice");
					this.OnTargetPriceChanged();
				}
			}
		}
		
		[Column(Storage="_DT_FinalDelivery", DbType="DateTime")]
		public System.Nullable<System.DateTime> DT_FinalDelivery
		{
			get
			{
				return this._DT_FinalDelivery;
			}
			set
			{
				if ((this._DT_FinalDelivery != value))
				{
					this.OnDT_FinalDeliveryChanging(value);
					this.SendPropertyChanging();
					this._DT_FinalDelivery = value;
					this.SendPropertyChanged("DT_FinalDelivery");
					this.OnDT_FinalDeliveryChanged();
				}
			}
		}
		
		[Column(Storage="_DT_FinalETA", DbType="DateTime")]
		public System.Nullable<System.DateTime> DT_FinalETA
		{
			get
			{
				return this._DT_FinalETA;
			}
			set
			{
				if ((this._DT_FinalETA != value))
				{
					this.OnDT_FinalETAChanging(value);
					this.SendPropertyChanging();
					this._DT_FinalETA = value;
					this.SendPropertyChanged("DT_FinalETA");
					this.OnDT_FinalETAChanged();
				}
			}
		}
		
		[Column(Storage="_Manufacturer", DbType="NVarChar(50)")]
		public string Manufacturer
		{
			get
			{
				return this._Manufacturer;
			}
			set
			{
				if ((this._Manufacturer != value))
				{
					this.OnManufacturerChanging(value);
					this.SendPropertyChanging();
					this._Manufacturer = value;
					this.SendPropertyChanged("Manufacturer");
					this.OnManufacturerChanged();
				}
			}
		}
		
		[Column(Storage="_DT_TargetETA", DbType="DateTime")]
		public System.Nullable<System.DateTime> DT_TargetETA
		{
			get
			{
				return this._DT_TargetETA;
			}
			set
			{
				if ((this._DT_TargetETA != value))
				{
					this.OnDT_TargetETAChanging(value);
					this.SendPropertyChanging();
					this._DT_TargetETA = value;
					this.SendPropertyChanged("DT_TargetETA");
					this.OnDT_TargetETAChanged();
				}
			}
		}
		
		[Column(Storage="_DT_TargetDelivery", DbType="DateTime")]
		public System.Nullable<System.DateTime> DT_TargetDelivery
		{
			get
			{
				return this._DT_TargetDelivery;
			}
			set
			{
				if ((this._DT_TargetDelivery != value))
				{
					this.OnDT_TargetDeliveryChanging(value);
					this.SendPropertyChanging();
					this._DT_TargetDelivery = value;
					this.SendPropertyChanged("DT_TargetDelivery");
					this.OnDT_TargetDeliveryChanged();
				}
			}
		}
		
		[Column(Storage="_AgreePrice", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> AgreePrice
		{
			get
			{
				return this._AgreePrice;
			}
			set
			{
				if ((this._AgreePrice != value))
				{
					this.OnAgreePriceChanging(value);
					this.SendPropertyChanging();
					this._AgreePrice = value;
					this.SendPropertyChanged("AgreePrice");
					this.OnAgreePriceChanged();
				}
			}
		}
		
		[Column(Storage="_DeptUsing", DbType="VarChar(200)")]
		public string DeptUsing
		{
			get
			{
				return this._DeptUsing;
			}
			set
			{
				if ((this._DeptUsing != value))
				{
					this.OnDeptUsingChanging(value);
					this.SendPropertyChanging();
					this._DeptUsing = value;
					this.SendPropertyChanged("DeptUsing");
					this.OnDeptUsingChanged();
				}
			}
		}
		
		[Column(Storage="_VendorCode", DbType="NVarChar(60)")]
		public string VendorCode
		{
			get
			{
				return this._VendorCode;
			}
			set
			{
				if ((this._VendorCode != value))
				{
					this.OnVendorCodeChanging(value);
					this.SendPropertyChanging();
					this._VendorCode = value;
					this.SendPropertyChanged("VendorCode");
					this.OnVendorCodeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Buyer")]
	public partial class Buyer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name_EN;
		
		private string _Address;
		
		private string _Tel;
		
		private string _Attn;
		
		private string _Email;
		
		private string _Fax;
		
		private string _Name_TW;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnName_ENChanging(string value);
    partial void OnName_ENChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnTelChanging(string value);
    partial void OnTelChanged();
    partial void OnAttnChanging(string value);
    partial void OnAttnChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnName_TWChanging(string value);
    partial void OnName_TWChanged();
    #endregion
		
		public Buyer()
		{
			OnCreated();
		}
		
		[Column(Storage="_Code", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Name_EN", DbType="VarChar(300)")]
		public string Name_EN
		{
			get
			{
				return this._Name_EN;
			}
			set
			{
				if ((this._Name_EN != value))
				{
					this.OnName_ENChanging(value);
					this.SendPropertyChanging();
					this._Name_EN = value;
					this.SendPropertyChanged("Name_EN");
					this.OnName_ENChanged();
				}
			}
		}
		
		[Column(Storage="_Address", DbType="VarChar(300)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[Column(Storage="_Tel", DbType="VarChar(100)")]
		public string Tel
		{
			get
			{
				return this._Tel;
			}
			set
			{
				if ((this._Tel != value))
				{
					this.OnTelChanging(value);
					this.SendPropertyChanging();
					this._Tel = value;
					this.SendPropertyChanged("Tel");
					this.OnTelChanged();
				}
			}
		}
		
		[Column(Storage="_Attn", DbType="VarChar(100)")]
		public string Attn
		{
			get
			{
				return this._Attn;
			}
			set
			{
				if ((this._Attn != value))
				{
					this.OnAttnChanging(value);
					this.SendPropertyChanging();
					this._Attn = value;
					this.SendPropertyChanged("Attn");
					this.OnAttnChanged();
				}
			}
		}
		
		[Column(Storage="_Email", DbType="VarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[Column(Storage="_Fax", DbType="VarChar(100)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[Column(Storage="_Name_TW", DbType="VarChar(300)")]
		public string Name_TW
		{
			get
			{
				return this._Name_TW;
			}
			set
			{
				if ((this._Name_TW != value))
				{
					this.OnName_TWChanging(value);
					this.SendPropertyChanging();
					this._Name_TW = value;
					this.SendPropertyChanged("Name_TW");
					this.OnName_TWChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.PIDetail")]
	public partial class PIDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PINO;
		
		private int _OrderLine;
		
		private System.Nullable<int> _Item;
		
		private string _Brand;
		
		private string _ModelNo;
		
		private string _HSCode;
		
		private string _Name;
		
		private System.Nullable<int> _Qty;
		
		private System.Nullable<double> _UnitPrice;
		
		private System.Nullable<int> _SortID;
		
		private string _Description;
		
		private EntityRef<PIHeader> _PIHeader;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPINOChanging(string value);
    partial void OnPINOChanged();
    partial void OnOrderLineChanging(int value);
    partial void OnOrderLineChanged();
    partial void OnItemChanging(System.Nullable<int> value);
    partial void OnItemChanged();
    partial void OnBrandChanging(string value);
    partial void OnBrandChanged();
    partial void OnModelNoChanging(string value);
    partial void OnModelNoChanged();
    partial void OnHSCodeChanging(string value);
    partial void OnHSCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnQtyChanging(System.Nullable<int> value);
    partial void OnQtyChanged();
    partial void OnUnitPriceChanging(System.Nullable<double> value);
    partial void OnUnitPriceChanged();
    partial void OnSortIDChanging(System.Nullable<int> value);
    partial void OnSortIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public PIDetail()
		{
			this._PIHeader = default(EntityRef<PIHeader>);
			OnCreated();
		}
		
		[Column(Storage="_PINO", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PINO
		{
			get
			{
				return this._PINO;
			}
			set
			{
				if ((this._PINO != value))
				{
					if (this._PIHeader.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPINOChanging(value);
					this.SendPropertyChanging();
					this._PINO = value;
					this.SendPropertyChanged("PINO");
					this.OnPINOChanged();
				}
			}
		}
		
		[Column(Storage="_OrderLine", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int OrderLine
		{
			get
			{
				return this._OrderLine;
			}
			set
			{
				if ((this._OrderLine != value))
				{
					this.OnOrderLineChanging(value);
					this.SendPropertyChanging();
					this._OrderLine = value;
					this.SendPropertyChanged("OrderLine");
					this.OnOrderLineChanged();
				}
			}
		}
		
		[Column(Storage="_Item", DbType="Int")]
		public System.Nullable<int> Item
		{
			get
			{
				return this._Item;
			}
			set
			{
				if ((this._Item != value))
				{
					this.OnItemChanging(value);
					this.SendPropertyChanging();
					this._Item = value;
					this.SendPropertyChanged("Item");
					this.OnItemChanged();
				}
			}
		}
		
		[Column(Storage="_Brand", DbType="VarChar(100)")]
		public string Brand
		{
			get
			{
				return this._Brand;
			}
			set
			{
				if ((this._Brand != value))
				{
					this.OnBrandChanging(value);
					this.SendPropertyChanging();
					this._Brand = value;
					this.SendPropertyChanged("Brand");
					this.OnBrandChanged();
				}
			}
		}
		
		[Column(Storage="_ModelNo", DbType="VarChar(200)")]
		public string ModelNo
		{
			get
			{
				return this._ModelNo;
			}
			set
			{
				if ((this._ModelNo != value))
				{
					this.OnModelNoChanging(value);
					this.SendPropertyChanging();
					this._ModelNo = value;
					this.SendPropertyChanged("ModelNo");
					this.OnModelNoChanged();
				}
			}
		}
		
		[Column(Storage="_HSCode", DbType="VarChar(100)")]
		public string HSCode
		{
			get
			{
				return this._HSCode;
			}
			set
			{
				if ((this._HSCode != value))
				{
					this.OnHSCodeChanging(value);
					this.SendPropertyChanging();
					this._HSCode = value;
					this.SendPropertyChanged("HSCode");
					this.OnHSCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Name", DbType="NVarChar(1000)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[Column(Storage="_Qty", DbType="Int")]
		public System.Nullable<int> Qty
		{
			get
			{
				return this._Qty;
			}
			set
			{
				if ((this._Qty != value))
				{
					this.OnQtyChanging(value);
					this.SendPropertyChanging();
					this._Qty = value;
					this.SendPropertyChanged("Qty");
					this.OnQtyChanged();
				}
			}
		}
		
		[Column(Storage="_UnitPrice", DbType="Float")]
		public System.Nullable<double> UnitPrice
		{
			get
			{
				return this._UnitPrice;
			}
			set
			{
				if ((this._UnitPrice != value))
				{
					this.OnUnitPriceChanging(value);
					this.SendPropertyChanging();
					this._UnitPrice = value;
					this.SendPropertyChanged("UnitPrice");
					this.OnUnitPriceChanged();
				}
			}
		}
		
		[Column(Storage="_SortID", DbType="Int")]
		public System.Nullable<int> SortID
		{
			get
			{
				return this._SortID;
			}
			set
			{
				if ((this._SortID != value))
				{
					this.OnSortIDChanging(value);
					this.SendPropertyChanging();
					this._SortID = value;
					this.SendPropertyChanged("SortID");
					this.OnSortIDChanged();
				}
			}
		}
		
		[Column(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Association(Name="PIHeader_PIDetail", Storage="_PIHeader", ThisKey="PINO", OtherKey="PINO", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public PIHeader PIHeader
		{
			get
			{
				return this._PIHeader.Entity;
			}
			set
			{
				PIHeader previousValue = this._PIHeader.Entity;
				if (((previousValue != value) 
							|| (this._PIHeader.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PIHeader.Entity = null;
						previousValue.PIDetails.Remove(this);
					}
					this._PIHeader.Entity = value;
					if ((value != null))
					{
						value.PIDetails.Add(this);
						this._PINO = value.PINO;
					}
					else
					{
						this._PINO = default(string);
					}
					this.SendPropertyChanged("PIHeader");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Secondment")]
	public partial class Secondment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _WorkForceID;
		
		private string _Factory;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _ExpiredDate;
		
		private string _WorkingPlace;
		
		private string _SecondmentTo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnWorkForceIDChanging(string value);
    partial void OnWorkForceIDChanged();
    partial void OnFactoryChanging(string value);
    partial void OnFactoryChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnExpiredDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExpiredDateChanged();
    partial void OnWorkingPlaceChanging(string value);
    partial void OnWorkingPlaceChanged();
    partial void OnSecondmentToChanging(string value);
    partial void OnSecondmentToChanged();
    #endregion
		
		public Secondment()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_WorkForceID", DbType="VarChar(15)")]
		public string WorkForceID
		{
			get
			{
				return this._WorkForceID;
			}
			set
			{
				if ((this._WorkForceID != value))
				{
					this.OnWorkForceIDChanging(value);
					this.SendPropertyChanging();
					this._WorkForceID = value;
					this.SendPropertyChanged("WorkForceID");
					this.OnWorkForceIDChanged();
				}
			}
		}
		
		[Column(Storage="_Factory", DbType="VarChar(10)")]
		public string Factory
		{
			get
			{
				return this._Factory;
			}
			set
			{
				if ((this._Factory != value))
				{
					this.OnFactoryChanging(value);
					this.SendPropertyChanging();
					this._Factory = value;
					this.SendPropertyChanged("Factory");
					this.OnFactoryChanged();
				}
			}
		}
		
		[Column(Storage="_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[Column(Storage="_ExpiredDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ExpiredDate
		{
			get
			{
				return this._ExpiredDate;
			}
			set
			{
				if ((this._ExpiredDate != value))
				{
					this.OnExpiredDateChanging(value);
					this.SendPropertyChanging();
					this._ExpiredDate = value;
					this.SendPropertyChanged("ExpiredDate");
					this.OnExpiredDateChanged();
				}
			}
		}
		
		[Column(Storage="_WorkingPlace", DbType="NVarChar(100)")]
		public string WorkingPlace
		{
			get
			{
				return this._WorkingPlace;
			}
			set
			{
				if ((this._WorkingPlace != value))
				{
					this.OnWorkingPlaceChanging(value);
					this.SendPropertyChanging();
					this._WorkingPlace = value;
					this.SendPropertyChanged("WorkingPlace");
					this.OnWorkingPlaceChanged();
				}
			}
		}
		
		[Column(Storage="_SecondmentTo", DbType="NVarChar(100)")]
		public string SecondmentTo
		{
			get
			{
				return this._SecondmentTo;
			}
			set
			{
				if ((this._SecondmentTo != value))
				{
					this.OnSecondmentToChanging(value);
					this.SendPropertyChanging();
					this._SecondmentTo = value;
					this.SendPropertyChanged("SecondmentTo");
					this.OnSecondmentToChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.PoolInfo")]
	public partial class PoolInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Factory;
		
		private string _LineCode;
		
		private string _j_NO;
		
		private string _J2_job;
		
		private string _Rwo;
		
		private string _Qn;
		
		private System.DateTime _Date;
		
		private string _OTN;
		
		private System.Nullable<bool> _IsConfirmed;
		
		private System.Nullable<System.DateTime> _ConfirmTime;
		
		private string _Bcolor;
		
		private string _Reason;
		
		private EntitySet<Lb5Matching> _Lb5Matchings;
		
		private EntityRef<WPMaster> _WPMaster;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFactoryChanging(string value);
    partial void OnFactoryChanged();
    partial void OnLineCodeChanging(string value);
    partial void OnLineCodeChanged();
    partial void Onj_NOChanging(string value);
    partial void Onj_NOChanged();
    partial void OnJ2_jobChanging(string value);
    partial void OnJ2_jobChanged();
    partial void OnRwoChanging(string value);
    partial void OnRwoChanged();
    partial void OnQnChanging(string value);
    partial void OnQnChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnOTNChanging(string value);
    partial void OnOTNChanged();
    partial void OnIsConfirmedChanging(System.Nullable<bool> value);
    partial void OnIsConfirmedChanged();
    partial void OnConfirmTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnConfirmTimeChanged();
    partial void OnBcolorChanging(string value);
    partial void OnBcolorChanged();
    partial void OnReasonChanging(string value);
    partial void OnReasonChanged();
    #endregion
		
		public PoolInfo()
		{
			this._Lb5Matchings = new EntitySet<Lb5Matching>(new Action<Lb5Matching>(this.attach_Lb5Matchings), new Action<Lb5Matching>(this.detach_Lb5Matchings));
			this._WPMaster = default(EntityRef<WPMaster>);
			OnCreated();
		}
		
		[Column(Storage="_Factory", DbType="NChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Factory
		{
			get
			{
				return this._Factory;
			}
			set
			{
				if ((this._Factory != value))
				{
					if (this._WPMaster.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFactoryChanging(value);
					this.SendPropertyChanging();
					this._Factory = value;
					this.SendPropertyChanged("Factory");
					this.OnFactoryChanged();
				}
			}
		}
		
		[Column(Storage="_LineCode", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string LineCode
		{
			get
			{
				return this._LineCode;
			}
			set
			{
				if ((this._LineCode != value))
				{
					if (this._WPMaster.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLineCodeChanging(value);
					this.SendPropertyChanging();
					this._LineCode = value;
					this.SendPropertyChanged("LineCode");
					this.OnLineCodeChanged();
				}
			}
		}
		
		[Column(Storage="_j_NO", DbType="NChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string j_NO
		{
			get
			{
				return this._j_NO;
			}
			set
			{
				if ((this._j_NO != value))
				{
					if (this._WPMaster.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onj_NOChanging(value);
					this.SendPropertyChanging();
					this._j_NO = value;
					this.SendPropertyChanged("j_NO");
					this.Onj_NOChanged();
				}
			}
		}
		
		[Column(Storage="_J2_job", DbType="NChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string J2_job
		{
			get
			{
				return this._J2_job;
			}
			set
			{
				if ((this._J2_job != value))
				{
					if (this._WPMaster.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJ2_jobChanging(value);
					this.SendPropertyChanging();
					this._J2_job = value;
					this.SendPropertyChanged("J2_job");
					this.OnJ2_jobChanged();
				}
			}
		}
		
		[Column(Storage="_Rwo", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Rwo
		{
			get
			{
				return this._Rwo;
			}
			set
			{
				if ((this._Rwo != value))
				{
					if (this._WPMaster.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRwoChanging(value);
					this.SendPropertyChanging();
					this._Rwo = value;
					this.SendPropertyChanged("Rwo");
					this.OnRwoChanged();
				}
			}
		}
		
		[Column(Storage="_Qn", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Qn
		{
			get
			{
				return this._Qn;
			}
			set
			{
				if ((this._Qn != value))
				{
					if (this._WPMaster.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQnChanging(value);
					this.SendPropertyChanging();
					this._Qn = value;
					this.SendPropertyChanged("Qn");
					this.OnQnChanged();
				}
			}
		}
		
		[Column(Storage="_Date", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[Column(Storage="_OTN", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string OTN
		{
			get
			{
				return this._OTN;
			}
			set
			{
				if ((this._OTN != value))
				{
					this.OnOTNChanging(value);
					this.SendPropertyChanging();
					this._OTN = value;
					this.SendPropertyChanged("OTN");
					this.OnOTNChanged();
				}
			}
		}
		
		[Column(Storage="_IsConfirmed", DbType="Bit")]
		public System.Nullable<bool> IsConfirmed
		{
			get
			{
				return this._IsConfirmed;
			}
			set
			{
				if ((this._IsConfirmed != value))
				{
					this.OnIsConfirmedChanging(value);
					this.SendPropertyChanging();
					this._IsConfirmed = value;
					this.SendPropertyChanged("IsConfirmed");
					this.OnIsConfirmedChanged();
				}
			}
		}
		
		[Column(Storage="_ConfirmTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ConfirmTime
		{
			get
			{
				return this._ConfirmTime;
			}
			set
			{
				if ((this._ConfirmTime != value))
				{
					this.OnConfirmTimeChanging(value);
					this.SendPropertyChanging();
					this._ConfirmTime = value;
					this.SendPropertyChanged("ConfirmTime");
					this.OnConfirmTimeChanged();
				}
			}
		}
		
		[Column(Storage="_Bcolor", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Bcolor
		{
			get
			{
				return this._Bcolor;
			}
			set
			{
				if ((this._Bcolor != value))
				{
					if (this._WPMaster.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBcolorChanging(value);
					this.SendPropertyChanging();
					this._Bcolor = value;
					this.SendPropertyChanged("Bcolor");
					this.OnBcolorChanged();
				}
			}
		}
		
		[Column(Storage="_Reason", DbType="NVarChar(300)")]
		public string Reason
		{
			get
			{
				return this._Reason;
			}
			set
			{
				if ((this._Reason != value))
				{
					this.OnReasonChanging(value);
					this.SendPropertyChanging();
					this._Reason = value;
					this.SendPropertyChanged("Reason");
					this.OnReasonChanged();
				}
			}
		}
		
		[Association(Name="PoolInfo_Lb5Matching", Storage="_Lb5Matchings", ThisKey="Factory,LineCode,j_NO,J2_job,Rwo,Qn,Date,OTN,Bcolor", OtherKey="Factory,LineCode,j_NO,J2_job,Rwo,Qn,Date,OTN,Bcolor")]
		public EntitySet<Lb5Matching> Lb5Matchings
		{
			get
			{
				return this._Lb5Matchings;
			}
			set
			{
				this._Lb5Matchings.Assign(value);
			}
		}
		
		[Association(Name="WPMaster_PoolInfo", Storage="_WPMaster", ThisKey="Factory,LineCode,j_NO,J2_job,Rwo,Qn,Bcolor", OtherKey="Factory,LineCode,j_NO,J2_job,Rwo,Qn,Bcolor", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public WPMaster WPMaster
		{
			get
			{
				return this._WPMaster.Entity;
			}
			set
			{
				WPMaster previousValue = this._WPMaster.Entity;
				if (((previousValue != value) 
							|| (this._WPMaster.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WPMaster.Entity = null;
						previousValue.PoolInfos.Remove(this);
					}
					this._WPMaster.Entity = value;
					if ((value != null))
					{
						value.PoolInfos.Add(this);
						this._Factory = value.Factory;
						this._LineCode = value.LineCode;
						this._j_NO = value.j_NO;
						this._J2_job = value.J2_job;
						this._Rwo = value.Rwo;
						this._Qn = value.Qn;
						this._Bcolor = value.Bcolor;
					}
					else
					{
						this._Factory = default(string);
						this._LineCode = default(string);
						this._j_NO = default(string);
						this._J2_job = default(string);
						this._Rwo = default(string);
						this._Qn = default(string);
						this._Bcolor = default(string);
					}
					this.SendPropertyChanged("WPMaster");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Lb5Matchings(Lb5Matching entity)
		{
			this.SendPropertyChanging();
			entity.PoolInfo = this;
		}
		
		private void detach_Lb5Matchings(Lb5Matching entity)
		{
			this.SendPropertyChanging();
			entity.PoolInfo = null;
		}
	}
	
	[Table(Name="dbo.PoolInfoReason")]
	public partial class PoolInfoReason : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Reason;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnReasonChanging(string value);
    partial void OnReasonChanged();
    #endregion
		
		public PoolInfoReason()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_Reason", DbType="NVarChar(300)")]
		public string Reason
		{
			get
			{
				return this._Reason;
			}
			set
			{
				if ((this._Reason != value))
				{
					this.OnReasonChanging(value);
					this.SendPropertyChanging();
					this._Reason = value;
					this.SendPropertyChanged("Reason");
					this.OnReasonChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.ItemTool")]
	public partial class ItemTool : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ItemCode;
		
		private string _EQGroup;
		
		private string _UserDept;
		
		private string _Item_CN;
		
		private string _Item_EN;
		
		private string _Spec;
		
		private string _ItemCodeVendor;
		
		private string _HSCode;
		
		private System.Nullable<double> _Price;
		
		private System.Nullable<bool> _IsProjection;
		
		private string _Brand;
		
		private string _EQGroupCode;
		
		private string _ItemLevelCode;
		
		private string _ToolsContainerCode;
		
		private string _Flag;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemCodeChanging(string value);
    partial void OnItemCodeChanged();
    partial void OnEQGroupChanging(string value);
    partial void OnEQGroupChanged();
    partial void OnUserDeptChanging(string value);
    partial void OnUserDeptChanged();
    partial void OnItem_CNChanging(string value);
    partial void OnItem_CNChanged();
    partial void OnItem_ENChanging(string value);
    partial void OnItem_ENChanged();
    partial void OnSpecChanging(string value);
    partial void OnSpecChanged();
    partial void OnItemCodeVendorChanging(string value);
    partial void OnItemCodeVendorChanged();
    partial void OnHSCodeChanging(string value);
    partial void OnHSCodeChanged();
    partial void OnPriceChanging(System.Nullable<double> value);
    partial void OnPriceChanged();
    partial void OnIsProjectionChanging(System.Nullable<bool> value);
    partial void OnIsProjectionChanged();
    partial void OnBrandChanging(string value);
    partial void OnBrandChanged();
    partial void OnEQGroupCodeChanging(string value);
    partial void OnEQGroupCodeChanged();
    partial void OnItemLevelCodeChanging(string value);
    partial void OnItemLevelCodeChanged();
    partial void OnToolsContainerCodeChanging(string value);
    partial void OnToolsContainerCodeChanged();
    partial void OnFlagChanging(string value);
    partial void OnFlagChanged();
    #endregion
		
		public ItemTool()
		{
			OnCreated();
		}
		
		[Column(Storage="_ItemCode", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ItemCode
		{
			get
			{
				return this._ItemCode;
			}
			set
			{
				if ((this._ItemCode != value))
				{
					this.OnItemCodeChanging(value);
					this.SendPropertyChanging();
					this._ItemCode = value;
					this.SendPropertyChanged("ItemCode");
					this.OnItemCodeChanged();
				}
			}
		}
		
		[Column(Storage="_EQGroup", DbType="NVarChar(100)")]
		public string EQGroup
		{
			get
			{
				return this._EQGroup;
			}
			set
			{
				if ((this._EQGroup != value))
				{
					this.OnEQGroupChanging(value);
					this.SendPropertyChanging();
					this._EQGroup = value;
					this.SendPropertyChanged("EQGroup");
					this.OnEQGroupChanged();
				}
			}
		}
		
		[Column(Storage="_UserDept", DbType="NVarChar(100)")]
		public string UserDept
		{
			get
			{
				return this._UserDept;
			}
			set
			{
				if ((this._UserDept != value))
				{
					this.OnUserDeptChanging(value);
					this.SendPropertyChanging();
					this._UserDept = value;
					this.SendPropertyChanged("UserDept");
					this.OnUserDeptChanged();
				}
			}
		}
		
		[Column(Storage="_Item_CN", DbType="NVarChar(200)")]
		public string Item_CN
		{
			get
			{
				return this._Item_CN;
			}
			set
			{
				if ((this._Item_CN != value))
				{
					this.OnItem_CNChanging(value);
					this.SendPropertyChanging();
					this._Item_CN = value;
					this.SendPropertyChanged("Item_CN");
					this.OnItem_CNChanged();
				}
			}
		}
		
		[Column(Storage="_Item_EN", DbType="NVarChar(200)")]
		public string Item_EN
		{
			get
			{
				return this._Item_EN;
			}
			set
			{
				if ((this._Item_EN != value))
				{
					this.OnItem_ENChanging(value);
					this.SendPropertyChanging();
					this._Item_EN = value;
					this.SendPropertyChanged("Item_EN");
					this.OnItem_ENChanged();
				}
			}
		}
		
		[Column(Storage="_Spec", DbType="NVarChar(100)")]
		public string Spec
		{
			get
			{
				return this._Spec;
			}
			set
			{
				if ((this._Spec != value))
				{
					this.OnSpecChanging(value);
					this.SendPropertyChanging();
					this._Spec = value;
					this.SendPropertyChanged("Spec");
					this.OnSpecChanged();
				}
			}
		}
		
		[Column(Storage="_ItemCodeVendor", DbType="NVarChar(200)")]
		public string ItemCodeVendor
		{
			get
			{
				return this._ItemCodeVendor;
			}
			set
			{
				if ((this._ItemCodeVendor != value))
				{
					this.OnItemCodeVendorChanging(value);
					this.SendPropertyChanging();
					this._ItemCodeVendor = value;
					this.SendPropertyChanged("ItemCodeVendor");
					this.OnItemCodeVendorChanged();
				}
			}
		}
		
		[Column(Storage="_HSCode", DbType="VarChar(100)")]
		public string HSCode
		{
			get
			{
				return this._HSCode;
			}
			set
			{
				if ((this._HSCode != value))
				{
					this.OnHSCodeChanging(value);
					this.SendPropertyChanging();
					this._HSCode = value;
					this.SendPropertyChanged("HSCode");
					this.OnHSCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Price", DbType="Float")]
		public System.Nullable<double> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[Column(Storage="_IsProjection", DbType="Bit")]
		public System.Nullable<bool> IsProjection
		{
			get
			{
				return this._IsProjection;
			}
			set
			{
				if ((this._IsProjection != value))
				{
					this.OnIsProjectionChanging(value);
					this.SendPropertyChanging();
					this._IsProjection = value;
					this.SendPropertyChanged("IsProjection");
					this.OnIsProjectionChanged();
				}
			}
		}
		
		[Column(Storage="_Brand", DbType="NVarChar(100)")]
		public string Brand
		{
			get
			{
				return this._Brand;
			}
			set
			{
				if ((this._Brand != value))
				{
					this.OnBrandChanging(value);
					this.SendPropertyChanging();
					this._Brand = value;
					this.SendPropertyChanged("Brand");
					this.OnBrandChanged();
				}
			}
		}
		
		[Column(Storage="_EQGroupCode", DbType="VarChar(15)")]
		public string EQGroupCode
		{
			get
			{
				return this._EQGroupCode;
			}
			set
			{
				if ((this._EQGroupCode != value))
				{
					this.OnEQGroupCodeChanging(value);
					this.SendPropertyChanging();
					this._EQGroupCode = value;
					this.SendPropertyChanged("EQGroupCode");
					this.OnEQGroupCodeChanged();
				}
			}
		}
		
		[Column(Storage="_ItemLevelCode", DbType="VarChar(15)")]
		public string ItemLevelCode
		{
			get
			{
				return this._ItemLevelCode;
			}
			set
			{
				if ((this._ItemLevelCode != value))
				{
					this.OnItemLevelCodeChanging(value);
					this.SendPropertyChanging();
					this._ItemLevelCode = value;
					this.SendPropertyChanged("ItemLevelCode");
					this.OnItemLevelCodeChanged();
				}
			}
		}
		
		[Column(Storage="_ToolsContainerCode", DbType="VarChar(15)")]
		public string ToolsContainerCode
		{
			get
			{
				return this._ToolsContainerCode;
			}
			set
			{
				if ((this._ToolsContainerCode != value))
				{
					this.OnToolsContainerCodeChanging(value);
					this.SendPropertyChanging();
					this._ToolsContainerCode = value;
					this.SendPropertyChanged("ToolsContainerCode");
					this.OnToolsContainerCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Flag", DbType="VarChar(20)")]
		public string Flag
		{
			get
			{
				return this._Flag;
			}
			set
			{
				if ((this._Flag != value))
				{
					this.OnFlagChanging(value);
					this.SendPropertyChanging();
					this._Flag = value;
					this.SendPropertyChanged("Flag");
					this.OnFlagChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.ActionLogDetail")]
	public partial class ActionLogDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _LogNO;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private string _Sender;
		
		private string _Summary;
		
		private System.Data.Linq.Binary _Attachment;
		
		private string _AttFileName;
		
		private EntitySet<ActionLogEmail> _ActionLogEmails;
		
		private EntityRef<ActionLogHeader> _ActionLogHeader;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnLogNOChanging(string value);
    partial void OnLogNOChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnSenderChanging(string value);
    partial void OnSenderChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnAttachmentChanging(System.Data.Linq.Binary value);
    partial void OnAttachmentChanged();
    partial void OnAttFileNameChanging(string value);
    partial void OnAttFileNameChanged();
    #endregion
		
		public ActionLogDetail()
		{
			this._ActionLogEmails = new EntitySet<ActionLogEmail>(new Action<ActionLogEmail>(this.attach_ActionLogEmails), new Action<ActionLogEmail>(this.detach_ActionLogEmails));
			this._ActionLogHeader = default(EntityRef<ActionLogHeader>);
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_LogNO", DbType="NVarChar(50)")]
		public string LogNO
		{
			get
			{
				return this._LogNO;
			}
			set
			{
				if ((this._LogNO != value))
				{
					if (this._ActionLogHeader.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLogNOChanging(value);
					this.SendPropertyChanging();
					this._LogNO = value;
					this.SendPropertyChanged("LogNO");
					this.OnLogNOChanged();
				}
			}
		}
		
		[Column(Storage="_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[Column(Storage="_Sender", DbType="NVarChar(50)")]
		public string Sender
		{
			get
			{
				return this._Sender;
			}
			set
			{
				if ((this._Sender != value))
				{
					this.OnSenderChanging(value);
					this.SendPropertyChanging();
					this._Sender = value;
					this.SendPropertyChanged("Sender");
					this.OnSenderChanged();
				}
			}
		}
		
		[Column(Storage="_Summary", DbType="NVarChar(2000)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[Column(Storage="_Attachment", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Attachment
		{
			get
			{
				return this._Attachment;
			}
			set
			{
				if ((this._Attachment != value))
				{
					this.OnAttachmentChanging(value);
					this.SendPropertyChanging();
					this._Attachment = value;
					this.SendPropertyChanged("Attachment");
					this.OnAttachmentChanged();
				}
			}
		}
		
		[Column(Storage="_AttFileName", DbType="NVarChar(200)")]
		public string AttFileName
		{
			get
			{
				return this._AttFileName;
			}
			set
			{
				if ((this._AttFileName != value))
				{
					this.OnAttFileNameChanging(value);
					this.SendPropertyChanging();
					this._AttFileName = value;
					this.SendPropertyChanged("AttFileName");
					this.OnAttFileNameChanged();
				}
			}
		}
		
		[Association(Name="ActionLogDetail_ActionLogEmail", Storage="_ActionLogEmails", ThisKey="ID", OtherKey="DetailID")]
		public EntitySet<ActionLogEmail> ActionLogEmails
		{
			get
			{
				return this._ActionLogEmails;
			}
			set
			{
				this._ActionLogEmails.Assign(value);
			}
		}
		
		[Association(Name="ActionLogHeader_ActionLogDetail", Storage="_ActionLogHeader", ThisKey="LogNO", OtherKey="LogNO", IsForeignKey=true, DeleteRule="CASCADE")]
		public ActionLogHeader ActionLogHeader
		{
			get
			{
				return this._ActionLogHeader.Entity;
			}
			set
			{
				ActionLogHeader previousValue = this._ActionLogHeader.Entity;
				if (((previousValue != value) 
							|| (this._ActionLogHeader.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ActionLogHeader.Entity = null;
						previousValue.ActionLogDetails.Remove(this);
					}
					this._ActionLogHeader.Entity = value;
					if ((value != null))
					{
						value.ActionLogDetails.Add(this);
						this._LogNO = value.LogNO;
					}
					else
					{
						this._LogNO = default(string);
					}
					this.SendPropertyChanged("ActionLogHeader");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ActionLogEmails(ActionLogEmail entity)
		{
			this.SendPropertyChanging();
			entity.ActionLogDetail = this;
		}
		
		private void detach_ActionLogEmails(ActionLogEmail entity)
		{
			this.SendPropertyChanging();
			entity.ActionLogDetail = null;
		}
	}
	
	[Table(Name="dbo.ActionLogEmail")]
	public partial class ActionLogEmail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _From;
		
		private string _To;
		
		private string _cc;
		
		private string _Subject;
		
		private string _Message;
		
		private long _DetailID;
		
		private EntityRef<ActionLogDetail> _ActionLogDetail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnFromChanging(string value);
    partial void OnFromChanged();
    partial void OnToChanging(string value);
    partial void OnToChanged();
    partial void OnccChanging(string value);
    partial void OnccChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnDetailIDChanging(long value);
    partial void OnDetailIDChanged();
    #endregion
		
		public ActionLogEmail()
		{
			this._ActionLogDetail = default(EntityRef<ActionLogDetail>);
			OnCreated();
		}
		
		[Column(Storage="_ID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Name="[From]", Storage="_From", DbType="NVarChar(100)")]
		public string From
		{
			get
			{
				return this._From;
			}
			set
			{
				if ((this._From != value))
				{
					this.OnFromChanging(value);
					this.SendPropertyChanging();
					this._From = value;
					this.SendPropertyChanged("From");
					this.OnFromChanged();
				}
			}
		}
		
		[Column(Name="[To]", Storage="_To", DbType="NVarChar(MAX)")]
		public string To
		{
			get
			{
				return this._To;
			}
			set
			{
				if ((this._To != value))
				{
					this.OnToChanging(value);
					this.SendPropertyChanging();
					this._To = value;
					this.SendPropertyChanged("To");
					this.OnToChanged();
				}
			}
		}
		
		[Column(Storage="_cc", DbType="NVarChar(MAX)")]
		public string cc
		{
			get
			{
				return this._cc;
			}
			set
			{
				if ((this._cc != value))
				{
					this.OnccChanging(value);
					this.SendPropertyChanging();
					this._cc = value;
					this.SendPropertyChanged("cc");
					this.OnccChanged();
				}
			}
		}
		
		[Column(Storage="_Subject", DbType="NVarChar(MAX)")]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged("Subject");
					this.OnSubjectChanged();
				}
			}
		}
		
		[Column(Storage="_Message", DbType="NVarChar(MAX)")]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[Column(Storage="_DetailID", DbType="BigInt NOT NULL")]
		public long DetailID
		{
			get
			{
				return this._DetailID;
			}
			set
			{
				if ((this._DetailID != value))
				{
					if (this._ActionLogDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDetailIDChanging(value);
					this.SendPropertyChanging();
					this._DetailID = value;
					this.SendPropertyChanged("DetailID");
					this.OnDetailIDChanged();
				}
			}
		}
		
		[Association(Name="ActionLogDetail_ActionLogEmail", Storage="_ActionLogDetail", ThisKey="DetailID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public ActionLogDetail ActionLogDetail
		{
			get
			{
				return this._ActionLogDetail.Entity;
			}
			set
			{
				ActionLogDetail previousValue = this._ActionLogDetail.Entity;
				if (((previousValue != value) 
							|| (this._ActionLogDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ActionLogDetail.Entity = null;
						previousValue.ActionLogEmails.Remove(this);
					}
					this._ActionLogDetail.Entity = value;
					if ((value != null))
					{
						value.ActionLogEmails.Add(this);
						this._DetailID = value.ID;
					}
					else
					{
						this._DetailID = default(long);
					}
					this.SendPropertyChanged("ActionLogDetail");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Email")]
	public partial class Email : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UserID;
		
		private string _EmailAddress;
		
		private System.Nullable<int> _SortID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(string value);
    partial void OnUserIDChanged();
    partial void OnEmailAddressChanging(string value);
    partial void OnEmailAddressChanged();
    partial void OnSortIDChanging(System.Nullable<int> value);
    partial void OnSortIDChanged();
    #endregion
		
		public Email()
		{
			OnCreated();
		}
		
		[Column(Storage="_UserID", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[Column(Storage="_EmailAddress", DbType="NVarChar(200)")]
		public string EmailAddress
		{
			get
			{
				return this._EmailAddress;
			}
			set
			{
				if ((this._EmailAddress != value))
				{
					this.OnEmailAddressChanging(value);
					this.SendPropertyChanging();
					this._EmailAddress = value;
					this.SendPropertyChanged("EmailAddress");
					this.OnEmailAddressChanged();
				}
			}
		}
		
		[Column(Storage="_SortID", DbType="Int")]
		public System.Nullable<int> SortID
		{
			get
			{
				return this._SortID;
			}
			set
			{
				if ((this._SortID != value))
				{
					this.OnSortIDChanging(value);
					this.SendPropertyChanging();
					this._SortID = value;
					this.SendPropertyChanged("SortID");
					this.OnSortIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.PODetail_OtherItem")]
	public partial class PODetail_OtherItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _OID;
		
		private string _PONO;
		
		private string _AmendNo;
		
		private string _CarriageDescription;
		
		private string _Description;
		
		private System.Nullable<double> _Amount;
		
		private System.Nullable<int> _SortID;
		
		private EntityRef<POHeader> _POHeader;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOIDChanging(long value);
    partial void OnOIDChanged();
    partial void OnPONOChanging(string value);
    partial void OnPONOChanged();
    partial void OnAmendNoChanging(string value);
    partial void OnAmendNoChanged();
    partial void OnCarriageDescriptionChanging(string value);
    partial void OnCarriageDescriptionChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnAmountChanging(System.Nullable<double> value);
    partial void OnAmountChanged();
    partial void OnSortIDChanging(System.Nullable<int> value);
    partial void OnSortIDChanged();
    #endregion
		
		public PODetail_OtherItem()
		{
			this._POHeader = default(EntityRef<POHeader>);
			OnCreated();
		}
		
		[Column(Storage="_OID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long OID
		{
			get
			{
				return this._OID;
			}
			set
			{
				if ((this._OID != value))
				{
					this.OnOIDChanging(value);
					this.SendPropertyChanging();
					this._OID = value;
					this.SendPropertyChanged("OID");
					this.OnOIDChanged();
				}
			}
		}
		
		[Column(Storage="_PONO", DbType="VarChar(50)")]
		public string PONO
		{
			get
			{
				return this._PONO;
			}
			set
			{
				if ((this._PONO != value))
				{
					if (this._POHeader.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPONOChanging(value);
					this.SendPropertyChanging();
					this._PONO = value;
					this.SendPropertyChanged("PONO");
					this.OnPONOChanged();
				}
			}
		}
		
		[Column(Storage="_AmendNo", DbType="VarChar(50)")]
		public string AmendNo
		{
			get
			{
				return this._AmendNo;
			}
			set
			{
				if ((this._AmendNo != value))
				{
					if (this._POHeader.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAmendNoChanging(value);
					this.SendPropertyChanging();
					this._AmendNo = value;
					this.SendPropertyChanged("AmendNo");
					this.OnAmendNoChanged();
				}
			}
		}
		
		[Column(Storage="_CarriageDescription", DbType="NVarChar(200)")]
		public string CarriageDescription
		{
			get
			{
				return this._CarriageDescription;
			}
			set
			{
				if ((this._CarriageDescription != value))
				{
					this.OnCarriageDescriptionChanging(value);
					this.SendPropertyChanging();
					this._CarriageDescription = value;
					this.SendPropertyChanged("CarriageDescription");
					this.OnCarriageDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_Amount", DbType="Float")]
		public System.Nullable<double> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[Column(Storage="_SortID", DbType="Int")]
		public System.Nullable<int> SortID
		{
			get
			{
				return this._SortID;
			}
			set
			{
				if ((this._SortID != value))
				{
					this.OnSortIDChanging(value);
					this.SendPropertyChanging();
					this._SortID = value;
					this.SendPropertyChanged("SortID");
					this.OnSortIDChanged();
				}
			}
		}
		
		[Association(Name="POHeader_PODetail_OtherItem", Storage="_POHeader", ThisKey="PONO,AmendNo", OtherKey="PONO,AmendNo", IsForeignKey=true, DeleteRule="CASCADE")]
		public POHeader POHeader
		{
			get
			{
				return this._POHeader.Entity;
			}
			set
			{
				POHeader previousValue = this._POHeader.Entity;
				if (((previousValue != value) 
							|| (this._POHeader.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._POHeader.Entity = null;
						previousValue.PODetail_OtherItems.Remove(this);
					}
					this._POHeader.Entity = value;
					if ((value != null))
					{
						value.PODetail_OtherItems.Add(this);
						this._PONO = value.PONO;
						this._AmendNo = value.AmendNo;
					}
					else
					{
						this._PONO = default(string);
						this._AmendNo = default(string);
					}
					this.SendPropertyChanged("POHeader");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.PIDetail_OtherItem")]
	public partial class PIDetail_OtherItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _OID;
		
		private string _PINO;
		
		private string _CarriageDescription;
		
		private string _Description;
		
		private System.Nullable<double> _Amount;
		
		private System.Nullable<int> _SortID;
		
		private EntityRef<PIHeader> _PIHeader;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOIDChanging(long value);
    partial void OnOIDChanged();
    partial void OnPINOChanging(string value);
    partial void OnPINOChanged();
    partial void OnCarriageDescriptionChanging(string value);
    partial void OnCarriageDescriptionChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnAmountChanging(System.Nullable<double> value);
    partial void OnAmountChanged();
    partial void OnSortIDChanging(System.Nullable<int> value);
    partial void OnSortIDChanged();
    #endregion
		
		public PIDetail_OtherItem()
		{
			this._PIHeader = default(EntityRef<PIHeader>);
			OnCreated();
		}
		
		[Column(Storage="_OID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long OID
		{
			get
			{
				return this._OID;
			}
			set
			{
				if ((this._OID != value))
				{
					this.OnOIDChanging(value);
					this.SendPropertyChanging();
					this._OID = value;
					this.SendPropertyChanged("OID");
					this.OnOIDChanged();
				}
			}
		}
		
		[Column(Storage="_PINO", DbType="VarChar(20)")]
		public string PINO
		{
			get
			{
				return this._PINO;
			}
			set
			{
				if ((this._PINO != value))
				{
					if (this._PIHeader.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPINOChanging(value);
					this.SendPropertyChanging();
					this._PINO = value;
					this.SendPropertyChanged("PINO");
					this.OnPINOChanged();
				}
			}
		}
		
		[Column(Storage="_CarriageDescription", DbType="NVarChar(200)")]
		public string CarriageDescription
		{
			get
			{
				return this._CarriageDescription;
			}
			set
			{
				if ((this._CarriageDescription != value))
				{
					this.OnCarriageDescriptionChanging(value);
					this.SendPropertyChanging();
					this._CarriageDescription = value;
					this.SendPropertyChanged("CarriageDescription");
					this.OnCarriageDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_Amount", DbType="Float")]
		public System.Nullable<double> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[Column(Storage="_SortID", DbType="Int")]
		public System.Nullable<int> SortID
		{
			get
			{
				return this._SortID;
			}
			set
			{
				if ((this._SortID != value))
				{
					this.OnSortIDChanging(value);
					this.SendPropertyChanging();
					this._SortID = value;
					this.SendPropertyChanged("SortID");
					this.OnSortIDChanged();
				}
			}
		}
		
		[Association(Name="PIHeader_PIDetail_OtherItem", Storage="_PIHeader", ThisKey="PINO", OtherKey="PINO", IsForeignKey=true, DeleteRule="CASCADE")]
		public PIHeader PIHeader
		{
			get
			{
				return this._PIHeader.Entity;
			}
			set
			{
				PIHeader previousValue = this._PIHeader.Entity;
				if (((previousValue != value) 
							|| (this._PIHeader.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PIHeader.Entity = null;
						previousValue.PIDetail_OtherItems.Remove(this);
					}
					this._PIHeader.Entity = value;
					if ((value != null))
					{
						value.PIDetail_OtherItems.Add(this);
						this._PINO = value.PINO;
					}
					else
					{
						this._PINO = default(string);
					}
					this.SendPropertyChanged("PIHeader");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.PCDetail")]
	public partial class PCDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PCNO;
		
		private string _PONO;
		
		private string _AmendNo;
		
		private System.Nullable<int> _SortID;
		
		private EntityRef<PCHeader> _PCHeader;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPCNOChanging(string value);
    partial void OnPCNOChanged();
    partial void OnPONOChanging(string value);
    partial void OnPONOChanged();
    partial void OnAmendNoChanging(string value);
    partial void OnAmendNoChanged();
    partial void OnSortIDChanging(System.Nullable<int> value);
    partial void OnSortIDChanged();
    #endregion
		
		public PCDetail()
		{
			this._PCHeader = default(EntityRef<PCHeader>);
			OnCreated();
		}
		
		[Column(Storage="_PCNO", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PCNO
		{
			get
			{
				return this._PCNO;
			}
			set
			{
				if ((this._PCNO != value))
				{
					if (this._PCHeader.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPCNOChanging(value);
					this.SendPropertyChanging();
					this._PCNO = value;
					this.SendPropertyChanged("PCNO");
					this.OnPCNOChanged();
				}
			}
		}
		
		[Column(Storage="_PONO", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PONO
		{
			get
			{
				return this._PONO;
			}
			set
			{
				if ((this._PONO != value))
				{
					this.OnPONOChanging(value);
					this.SendPropertyChanging();
					this._PONO = value;
					this.SendPropertyChanged("PONO");
					this.OnPONOChanged();
				}
			}
		}
		
		[Column(Storage="_AmendNo", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AmendNo
		{
			get
			{
				return this._AmendNo;
			}
			set
			{
				if ((this._AmendNo != value))
				{
					this.OnAmendNoChanging(value);
					this.SendPropertyChanging();
					this._AmendNo = value;
					this.SendPropertyChanged("AmendNo");
					this.OnAmendNoChanged();
				}
			}
		}
		
		[Column(Storage="_SortID", DbType="Int")]
		public System.Nullable<int> SortID
		{
			get
			{
				return this._SortID;
			}
			set
			{
				if ((this._SortID != value))
				{
					this.OnSortIDChanging(value);
					this.SendPropertyChanging();
					this._SortID = value;
					this.SendPropertyChanged("SortID");
					this.OnSortIDChanged();
				}
			}
		}
		
		[Association(Name="PCHeader_PCDetail", Storage="_PCHeader", ThisKey="PCNO", OtherKey="PCNO", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public PCHeader PCHeader
		{
			get
			{
				return this._PCHeader.Entity;
			}
			set
			{
				PCHeader previousValue = this._PCHeader.Entity;
				if (((previousValue != value) 
							|| (this._PCHeader.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PCHeader.Entity = null;
						previousValue.PCDetails.Remove(this);
					}
					this._PCHeader.Entity = value;
					if ((value != null))
					{
						value.PCDetails.Add(this);
						this._PCNO = value.PCNO;
					}
					else
					{
						this._PCNO = default(string);
					}
					this.SendPropertyChanged("PCHeader");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.PCHeader")]
	public partial class PCHeader : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PCNO;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _VendorCode;
		
		private string _GoodsDescription;
		
		private string _AmountRemark;
		
		private string _ShipmentMode;
		
		private string _Incoterms;
		
		private string _LoadingPort;
		
		private string _Destination;
		
		private string _PaymentTerms;
		
		private string _OriginsCountry;
		
		private string _PartialShipment;
		
		private EntitySet<PCDetail> _PCDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPCNOChanging(string value);
    partial void OnPCNOChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnVendorCodeChanging(string value);
    partial void OnVendorCodeChanged();
    partial void OnGoodsDescriptionChanging(string value);
    partial void OnGoodsDescriptionChanged();
    partial void OnAmountRemarkChanging(string value);
    partial void OnAmountRemarkChanged();
    partial void OnShipmentModeChanging(string value);
    partial void OnShipmentModeChanged();
    partial void OnIncotermsChanging(string value);
    partial void OnIncotermsChanged();
    partial void OnLoadingPortChanging(string value);
    partial void OnLoadingPortChanged();
    partial void OnDestinationChanging(string value);
    partial void OnDestinationChanged();
    partial void OnPaymentTermsChanging(string value);
    partial void OnPaymentTermsChanged();
    partial void OnOriginsCountryChanging(string value);
    partial void OnOriginsCountryChanged();
    partial void OnPartialShipmentChanging(string value);
    partial void OnPartialShipmentChanged();
    #endregion
		
		public PCHeader()
		{
			this._PCDetails = new EntitySet<PCDetail>(new Action<PCDetail>(this.attach_PCDetails), new Action<PCDetail>(this.detach_PCDetails));
			OnCreated();
		}
		
		[Column(Storage="_PCNO", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PCNO
		{
			get
			{
				return this._PCNO;
			}
			set
			{
				if ((this._PCNO != value))
				{
					this.OnPCNOChanging(value);
					this.SendPropertyChanging();
					this._PCNO = value;
					this.SendPropertyChanged("PCNO");
					this.OnPCNOChanged();
				}
			}
		}
		
		[Column(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[Column(Storage="_VendorCode", DbType="VarChar(50)")]
		public string VendorCode
		{
			get
			{
				return this._VendorCode;
			}
			set
			{
				if ((this._VendorCode != value))
				{
					this.OnVendorCodeChanging(value);
					this.SendPropertyChanging();
					this._VendorCode = value;
					this.SendPropertyChanged("VendorCode");
					this.OnVendorCodeChanged();
				}
			}
		}
		
		[Column(Storage="_GoodsDescription", DbType="NVarChar(MAX)")]
		public string GoodsDescription
		{
			get
			{
				return this._GoodsDescription;
			}
			set
			{
				if ((this._GoodsDescription != value))
				{
					this.OnGoodsDescriptionChanging(value);
					this.SendPropertyChanging();
					this._GoodsDescription = value;
					this.SendPropertyChanged("GoodsDescription");
					this.OnGoodsDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_AmountRemark", DbType="NVarChar(MAX)")]
		public string AmountRemark
		{
			get
			{
				return this._AmountRemark;
			}
			set
			{
				if ((this._AmountRemark != value))
				{
					this.OnAmountRemarkChanging(value);
					this.SendPropertyChanging();
					this._AmountRemark = value;
					this.SendPropertyChanged("AmountRemark");
					this.OnAmountRemarkChanged();
				}
			}
		}
		
		[Column(Storage="_ShipmentMode", DbType="NVarChar(200)")]
		public string ShipmentMode
		{
			get
			{
				return this._ShipmentMode;
			}
			set
			{
				if ((this._ShipmentMode != value))
				{
					this.OnShipmentModeChanging(value);
					this.SendPropertyChanging();
					this._ShipmentMode = value;
					this.SendPropertyChanged("ShipmentMode");
					this.OnShipmentModeChanged();
				}
			}
		}
		
		[Column(Storage="_Incoterms", DbType="NVarChar(200)")]
		public string Incoterms
		{
			get
			{
				return this._Incoterms;
			}
			set
			{
				if ((this._Incoterms != value))
				{
					this.OnIncotermsChanging(value);
					this.SendPropertyChanging();
					this._Incoterms = value;
					this.SendPropertyChanged("Incoterms");
					this.OnIncotermsChanged();
				}
			}
		}
		
		[Column(Storage="_LoadingPort", DbType="NVarChar(200)")]
		public string LoadingPort
		{
			get
			{
				return this._LoadingPort;
			}
			set
			{
				if ((this._LoadingPort != value))
				{
					this.OnLoadingPortChanging(value);
					this.SendPropertyChanging();
					this._LoadingPort = value;
					this.SendPropertyChanged("LoadingPort");
					this.OnLoadingPortChanged();
				}
			}
		}
		
		[Column(Storage="_Destination", DbType="NVarChar(200)")]
		public string Destination
		{
			get
			{
				return this._Destination;
			}
			set
			{
				if ((this._Destination != value))
				{
					this.OnDestinationChanging(value);
					this.SendPropertyChanging();
					this._Destination = value;
					this.SendPropertyChanged("Destination");
					this.OnDestinationChanged();
				}
			}
		}
		
		[Column(Storage="_PaymentTerms", DbType="NVarChar(200)")]
		public string PaymentTerms
		{
			get
			{
				return this._PaymentTerms;
			}
			set
			{
				if ((this._PaymentTerms != value))
				{
					this.OnPaymentTermsChanging(value);
					this.SendPropertyChanging();
					this._PaymentTerms = value;
					this.SendPropertyChanged("PaymentTerms");
					this.OnPaymentTermsChanged();
				}
			}
		}
		
		[Column(Storage="_OriginsCountry", DbType="NVarChar(200)")]
		public string OriginsCountry
		{
			get
			{
				return this._OriginsCountry;
			}
			set
			{
				if ((this._OriginsCountry != value))
				{
					this.OnOriginsCountryChanging(value);
					this.SendPropertyChanging();
					this._OriginsCountry = value;
					this.SendPropertyChanged("OriginsCountry");
					this.OnOriginsCountryChanged();
				}
			}
		}
		
		[Column(Storage="_PartialShipment", DbType="NVarChar(200)")]
		public string PartialShipment
		{
			get
			{
				return this._PartialShipment;
			}
			set
			{
				if ((this._PartialShipment != value))
				{
					this.OnPartialShipmentChanging(value);
					this.SendPropertyChanging();
					this._PartialShipment = value;
					this.SendPropertyChanged("PartialShipment");
					this.OnPartialShipmentChanged();
				}
			}
		}
		
		[Association(Name="PCHeader_PCDetail", Storage="_PCDetails", ThisKey="PCNO", OtherKey="PCNO")]
		public EntitySet<PCDetail> PCDetails
		{
			get
			{
				return this._PCDetails;
			}
			set
			{
				this._PCDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PCDetails(PCDetail entity)
		{
			this.SendPropertyChanging();
			entity.PCHeader = this;
		}
		
		private void detach_PCDetails(PCDetail entity)
		{
			this.SendPropertyChanging();
			entity.PCHeader = null;
		}
	}
	
	[Table(Name="dbo.PODetail")]
	public partial class PODetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PONO;
		
		private string _AmendNo;
		
		private int _OrderLine;
		
		private string _MCType;
		
		private string _ModelNo;
		
		private string _HSCode;
		
		private string _Brand;
		
		private string _Description;
		
		private System.Nullable<int> _Qty;
		
		private string _Unit;
		
		private System.Nullable<double> _UnitPrice;
		
		private System.Nullable<System.DateTime> _DeliveryDate;
		
		private System.Nullable<int> _SortID;
		
		private string _ItemCode;
		
		private string _UserDept;
		
		private string _Item_CN;
		
		private string _Item_EN;
		
		private string _ItemCodeVendor;
		
		private System.Nullable<bool> _IsBigCategory;
		
		private System.Nullable<bool> _InsertPageBreak;
		
		private System.Nullable<bool> _IsSupplement;
		
		private System.Nullable<bool> _IsSpareParts;
		
		private EntityRef<POHeader> _POHeader;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPONOChanging(string value);
    partial void OnPONOChanged();
    partial void OnAmendNoChanging(string value);
    partial void OnAmendNoChanged();
    partial void OnOrderLineChanging(int value);
    partial void OnOrderLineChanged();
    partial void OnMCTypeChanging(string value);
    partial void OnMCTypeChanged();
    partial void OnModelNoChanging(string value);
    partial void OnModelNoChanged();
    partial void OnHSCodeChanging(string value);
    partial void OnHSCodeChanged();
    partial void OnBrandChanging(string value);
    partial void OnBrandChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnQtyChanging(System.Nullable<int> value);
    partial void OnQtyChanged();
    partial void OnUnitChanging(string value);
    partial void OnUnitChanged();
    partial void OnUnitPriceChanging(System.Nullable<double> value);
    partial void OnUnitPriceChanged();
    partial void OnDeliveryDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeliveryDateChanged();
    partial void OnSortIDChanging(System.Nullable<int> value);
    partial void OnSortIDChanged();
    partial void OnItemCodeChanging(string value);
    partial void OnItemCodeChanged();
    partial void OnUserDeptChanging(string value);
    partial void OnUserDeptChanged();
    partial void OnItem_CNChanging(string value);
    partial void OnItem_CNChanged();
    partial void OnItem_ENChanging(string value);
    partial void OnItem_ENChanged();
    partial void OnItemCodeVendorChanging(string value);
    partial void OnItemCodeVendorChanged();
    partial void OnIsBigCategoryChanging(System.Nullable<bool> value);
    partial void OnIsBigCategoryChanged();
    partial void OnInsertPageBreakChanging(System.Nullable<bool> value);
    partial void OnInsertPageBreakChanged();
    partial void OnIsSupplementChanging(System.Nullable<bool> value);
    partial void OnIsSupplementChanged();
    partial void OnIsSparePartsChanging(System.Nullable<bool> value);
    partial void OnIsSparePartsChanged();
    #endregion
		
		public PODetail()
		{
			this._POHeader = default(EntityRef<POHeader>);
			OnCreated();
		}
		
		[Column(Storage="_PONO", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PONO
		{
			get
			{
				return this._PONO;
			}
			set
			{
				if ((this._PONO != value))
				{
					if (this._POHeader.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPONOChanging(value);
					this.SendPropertyChanging();
					this._PONO = value;
					this.SendPropertyChanged("PONO");
					this.OnPONOChanged();
				}
			}
		}
		
		[Column(Storage="_AmendNo", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AmendNo
		{
			get
			{
				return this._AmendNo;
			}
			set
			{
				if ((this._AmendNo != value))
				{
					if (this._POHeader.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAmendNoChanging(value);
					this.SendPropertyChanging();
					this._AmendNo = value;
					this.SendPropertyChanged("AmendNo");
					this.OnAmendNoChanged();
				}
			}
		}
		
		[Column(Storage="_OrderLine", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int OrderLine
		{
			get
			{
				return this._OrderLine;
			}
			set
			{
				if ((this._OrderLine != value))
				{
					this.OnOrderLineChanging(value);
					this.SendPropertyChanging();
					this._OrderLine = value;
					this.SendPropertyChanged("OrderLine");
					this.OnOrderLineChanged();
				}
			}
		}
		
		[Column(Storage="_MCType", DbType="VarChar(200)")]
		public string MCType
		{
			get
			{
				return this._MCType;
			}
			set
			{
				if ((this._MCType != value))
				{
					this.OnMCTypeChanging(value);
					this.SendPropertyChanging();
					this._MCType = value;
					this.SendPropertyChanged("MCType");
					this.OnMCTypeChanged();
				}
			}
		}
		
		[Column(Storage="_ModelNo", DbType="VarChar(200)")]
		public string ModelNo
		{
			get
			{
				return this._ModelNo;
			}
			set
			{
				if ((this._ModelNo != value))
				{
					this.OnModelNoChanging(value);
					this.SendPropertyChanging();
					this._ModelNo = value;
					this.SendPropertyChanged("ModelNo");
					this.OnModelNoChanged();
				}
			}
		}
		
		[Column(Storage="_HSCode", DbType="VarChar(100)")]
		public string HSCode
		{
			get
			{
				return this._HSCode;
			}
			set
			{
				if ((this._HSCode != value))
				{
					this.OnHSCodeChanging(value);
					this.SendPropertyChanging();
					this._HSCode = value;
					this.SendPropertyChanged("HSCode");
					this.OnHSCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Brand", DbType="VarChar(100)")]
		public string Brand
		{
			get
			{
				return this._Brand;
			}
			set
			{
				if ((this._Brand != value))
				{
					this.OnBrandChanging(value);
					this.SendPropertyChanging();
					this._Brand = value;
					this.SendPropertyChanged("Brand");
					this.OnBrandChanged();
				}
			}
		}
		
		[Column(Storage="_Description", DbType="NVarChar(1000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_Qty", DbType="Int")]
		public System.Nullable<int> Qty
		{
			get
			{
				return this._Qty;
			}
			set
			{
				if ((this._Qty != value))
				{
					this.OnQtyChanging(value);
					this.SendPropertyChanging();
					this._Qty = value;
					this.SendPropertyChanged("Qty");
					this.OnQtyChanged();
				}
			}
		}
		
		[Column(Storage="_Unit", DbType="VarChar(50)")]
		public string Unit
		{
			get
			{
				return this._Unit;
			}
			set
			{
				if ((this._Unit != value))
				{
					this.OnUnitChanging(value);
					this.SendPropertyChanging();
					this._Unit = value;
					this.SendPropertyChanged("Unit");
					this.OnUnitChanged();
				}
			}
		}
		
		[Column(Storage="_UnitPrice", DbType="Float")]
		public System.Nullable<double> UnitPrice
		{
			get
			{
				return this._UnitPrice;
			}
			set
			{
				if ((this._UnitPrice != value))
				{
					this.OnUnitPriceChanging(value);
					this.SendPropertyChanging();
					this._UnitPrice = value;
					this.SendPropertyChanged("UnitPrice");
					this.OnUnitPriceChanged();
				}
			}
		}
		
		[Column(Storage="_DeliveryDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DeliveryDate
		{
			get
			{
				return this._DeliveryDate;
			}
			set
			{
				if ((this._DeliveryDate != value))
				{
					this.OnDeliveryDateChanging(value);
					this.SendPropertyChanging();
					this._DeliveryDate = value;
					this.SendPropertyChanged("DeliveryDate");
					this.OnDeliveryDateChanged();
				}
			}
		}
		
		[Column(Storage="_SortID", DbType="Int")]
		public System.Nullable<int> SortID
		{
			get
			{
				return this._SortID;
			}
			set
			{
				if ((this._SortID != value))
				{
					this.OnSortIDChanging(value);
					this.SendPropertyChanging();
					this._SortID = value;
					this.SendPropertyChanged("SortID");
					this.OnSortIDChanged();
				}
			}
		}
		
		[Column(Storage="_ItemCode", DbType="VarChar(20)")]
		public string ItemCode
		{
			get
			{
				return this._ItemCode;
			}
			set
			{
				if ((this._ItemCode != value))
				{
					this.OnItemCodeChanging(value);
					this.SendPropertyChanging();
					this._ItemCode = value;
					this.SendPropertyChanged("ItemCode");
					this.OnItemCodeChanged();
				}
			}
		}
		
		[Column(Storage="_UserDept", DbType="NVarChar(100)")]
		public string UserDept
		{
			get
			{
				return this._UserDept;
			}
			set
			{
				if ((this._UserDept != value))
				{
					this.OnUserDeptChanging(value);
					this.SendPropertyChanging();
					this._UserDept = value;
					this.SendPropertyChanged("UserDept");
					this.OnUserDeptChanged();
				}
			}
		}
		
		[Column(Storage="_Item_CN", DbType="NVarChar(200)")]
		public string Item_CN
		{
			get
			{
				return this._Item_CN;
			}
			set
			{
				if ((this._Item_CN != value))
				{
					this.OnItem_CNChanging(value);
					this.SendPropertyChanging();
					this._Item_CN = value;
					this.SendPropertyChanged("Item_CN");
					this.OnItem_CNChanged();
				}
			}
		}
		
		[Column(Storage="_Item_EN", DbType="NVarChar(200)")]
		public string Item_EN
		{
			get
			{
				return this._Item_EN;
			}
			set
			{
				if ((this._Item_EN != value))
				{
					this.OnItem_ENChanging(value);
					this.SendPropertyChanging();
					this._Item_EN = value;
					this.SendPropertyChanged("Item_EN");
					this.OnItem_ENChanged();
				}
			}
		}
		
		[Column(Storage="_ItemCodeVendor", DbType="NVarChar(200)")]
		public string ItemCodeVendor
		{
			get
			{
				return this._ItemCodeVendor;
			}
			set
			{
				if ((this._ItemCodeVendor != value))
				{
					this.OnItemCodeVendorChanging(value);
					this.SendPropertyChanging();
					this._ItemCodeVendor = value;
					this.SendPropertyChanged("ItemCodeVendor");
					this.OnItemCodeVendorChanged();
				}
			}
		}
		
		[Column(Storage="_IsBigCategory", DbType="Bit")]
		public System.Nullable<bool> IsBigCategory
		{
			get
			{
				return this._IsBigCategory;
			}
			set
			{
				if ((this._IsBigCategory != value))
				{
					this.OnIsBigCategoryChanging(value);
					this.SendPropertyChanging();
					this._IsBigCategory = value;
					this.SendPropertyChanged("IsBigCategory");
					this.OnIsBigCategoryChanged();
				}
			}
		}
		
		[Column(Storage="_InsertPageBreak", DbType="Bit")]
		public System.Nullable<bool> InsertPageBreak
		{
			get
			{
				return this._InsertPageBreak;
			}
			set
			{
				if ((this._InsertPageBreak != value))
				{
					this.OnInsertPageBreakChanging(value);
					this.SendPropertyChanging();
					this._InsertPageBreak = value;
					this.SendPropertyChanged("InsertPageBreak");
					this.OnInsertPageBreakChanged();
				}
			}
		}
		
		[Column(Storage="_IsSupplement", DbType="Bit")]
		public System.Nullable<bool> IsSupplement
		{
			get
			{
				return this._IsSupplement;
			}
			set
			{
				if ((this._IsSupplement != value))
				{
					this.OnIsSupplementChanging(value);
					this.SendPropertyChanging();
					this._IsSupplement = value;
					this.SendPropertyChanged("IsSupplement");
					this.OnIsSupplementChanged();
				}
			}
		}
		
		[Column(Storage="_IsSpareParts", DbType="Bit")]
		public System.Nullable<bool> IsSpareParts
		{
			get
			{
				return this._IsSpareParts;
			}
			set
			{
				if ((this._IsSpareParts != value))
				{
					this.OnIsSparePartsChanging(value);
					this.SendPropertyChanging();
					this._IsSpareParts = value;
					this.SendPropertyChanged("IsSpareParts");
					this.OnIsSparePartsChanged();
				}
			}
		}
		
		[Association(Name="POHeader_PODetail", Storage="_POHeader", ThisKey="PONO,AmendNo", OtherKey="PONO,AmendNo", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public POHeader POHeader
		{
			get
			{
				return this._POHeader.Entity;
			}
			set
			{
				POHeader previousValue = this._POHeader.Entity;
				if (((previousValue != value) 
							|| (this._POHeader.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._POHeader.Entity = null;
						previousValue.PODetails.Remove(this);
					}
					this._POHeader.Entity = value;
					if ((value != null))
					{
						value.PODetails.Add(this);
						this._PONO = value.PONO;
						this._AmendNo = value.AmendNo;
					}
					else
					{
						this._PONO = default(string);
						this._AmendNo = default(string);
					}
					this.SendPropertyChanged("POHeader");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.QNDeleteLog")]
	public partial class QNDeleteLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _SeqNo;
		
		private string _Factory;
		
		private string _LineCode;
		
		private string _j_NO;
		
		private string _J2_job;
		
		private string _Rwo;
		
		private string _Qn;
		
		private string _Bcolor;
		
		private System.Nullable<System.DateTime> _DeleteTime;
		
		private string _DeleterMan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSeqNoChanging(long value);
    partial void OnSeqNoChanged();
    partial void OnFactoryChanging(string value);
    partial void OnFactoryChanged();
    partial void OnLineCodeChanging(string value);
    partial void OnLineCodeChanged();
    partial void Onj_NOChanging(string value);
    partial void Onj_NOChanged();
    partial void OnJ2_jobChanging(string value);
    partial void OnJ2_jobChanged();
    partial void OnRwoChanging(string value);
    partial void OnRwoChanged();
    partial void OnQnChanging(string value);
    partial void OnQnChanged();
    partial void OnBcolorChanging(string value);
    partial void OnBcolorChanged();
    partial void OnDeleteTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnDeleteTimeChanged();
    partial void OnDeleterManChanging(string value);
    partial void OnDeleterManChanged();
    #endregion
		
		public QNDeleteLog()
		{
			OnCreated();
		}
		
		[Column(Storage="_SeqNo", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long SeqNo
		{
			get
			{
				return this._SeqNo;
			}
			set
			{
				if ((this._SeqNo != value))
				{
					this.OnSeqNoChanging(value);
					this.SendPropertyChanging();
					this._SeqNo = value;
					this.SendPropertyChanged("SeqNo");
					this.OnSeqNoChanged();
				}
			}
		}
		
		[Column(Storage="_Factory", DbType="NChar(5)")]
		public string Factory
		{
			get
			{
				return this._Factory;
			}
			set
			{
				if ((this._Factory != value))
				{
					this.OnFactoryChanging(value);
					this.SendPropertyChanging();
					this._Factory = value;
					this.SendPropertyChanged("Factory");
					this.OnFactoryChanged();
				}
			}
		}
		
		[Column(Storage="_LineCode", DbType="VarChar(50)")]
		public string LineCode
		{
			get
			{
				return this._LineCode;
			}
			set
			{
				if ((this._LineCode != value))
				{
					this.OnLineCodeChanging(value);
					this.SendPropertyChanging();
					this._LineCode = value;
					this.SendPropertyChanged("LineCode");
					this.OnLineCodeChanged();
				}
			}
		}
		
		[Column(Storage="_j_NO", DbType="NChar(15)")]
		public string j_NO
		{
			get
			{
				return this._j_NO;
			}
			set
			{
				if ((this._j_NO != value))
				{
					this.Onj_NOChanging(value);
					this.SendPropertyChanging();
					this._j_NO = value;
					this.SendPropertyChanged("j_NO");
					this.Onj_NOChanged();
				}
			}
		}
		
		[Column(Storage="_J2_job", DbType="NChar(15)")]
		public string J2_job
		{
			get
			{
				return this._J2_job;
			}
			set
			{
				if ((this._J2_job != value))
				{
					this.OnJ2_jobChanging(value);
					this.SendPropertyChanging();
					this._J2_job = value;
					this.SendPropertyChanged("J2_job");
					this.OnJ2_jobChanged();
				}
			}
		}
		
		[Column(Storage="_Rwo", DbType="NChar(10)")]
		public string Rwo
		{
			get
			{
				return this._Rwo;
			}
			set
			{
				if ((this._Rwo != value))
				{
					this.OnRwoChanging(value);
					this.SendPropertyChanging();
					this._Rwo = value;
					this.SendPropertyChanged("Rwo");
					this.OnRwoChanged();
				}
			}
		}
		
		[Column(Storage="_Qn", DbType="NChar(10)")]
		public string Qn
		{
			get
			{
				return this._Qn;
			}
			set
			{
				if ((this._Qn != value))
				{
					this.OnQnChanging(value);
					this.SendPropertyChanging();
					this._Qn = value;
					this.SendPropertyChanged("Qn");
					this.OnQnChanged();
				}
			}
		}
		
		[Column(Storage="_Bcolor", DbType="NChar(10)")]
		public string Bcolor
		{
			get
			{
				return this._Bcolor;
			}
			set
			{
				if ((this._Bcolor != value))
				{
					this.OnBcolorChanging(value);
					this.SendPropertyChanging();
					this._Bcolor = value;
					this.SendPropertyChanged("Bcolor");
					this.OnBcolorChanged();
				}
			}
		}
		
		[Column(Storage="_DeleteTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> DeleteTime
		{
			get
			{
				return this._DeleteTime;
			}
			set
			{
				if ((this._DeleteTime != value))
				{
					this.OnDeleteTimeChanging(value);
					this.SendPropertyChanging();
					this._DeleteTime = value;
					this.SendPropertyChanged("DeleteTime");
					this.OnDeleteTimeChanged();
				}
			}
		}
		
		[Column(Storage="_DeleterMan", DbType="VarChar(50)")]
		public string DeleterMan
		{
			get
			{
				return this._DeleterMan;
			}
			set
			{
				if ((this._DeleterMan != value))
				{
					this.OnDeleterManChanging(value);
					this.SendPropertyChanging();
					this._DeleterMan = value;
					this.SendPropertyChanged("DeleterMan");
					this.OnDeleterManChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.ExcludeUser")]
	public partial class ExcludeUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UserID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(string value);
    partial void OnUserIDChanged();
    #endregion
		
		public ExcludeUser()
		{
			OnCreated();
		}
		
		[Column(Storage="_UserID", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Matching")]
	public partial class Matching : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Factory;
		
		private string _LineCode;
		
		private string _j_NO;
		
		private string _J2_job;
		
		private string _Rwo;
		
		private string _Qn;
		
		private System.Nullable<System.DateTime> _Date;
		
		private string _OTN;
		
		private int _WPSN;
		
		private System.Nullable<int> _OperationSN;
		
		private string _OperationGroup;
		
		private string _OperationCode;
		
		private string _OperationName;
		
		private string _MCType;
		
		private System.Nullable<decimal> _GSD_SAH;
		
		private System.Nullable<decimal> _BestSAH;
		
		private System.Nullable<int> _BestMTM;
		
		private System.Nullable<decimal> _WorkforceNum;
		
		private string _Rpm;
		
		private string _WorkerName;
		
		private string _WorkerId;
		
		private string _WorkStyle;
		
		private string _MachineId;
		
		private string _addworker1;
		
		private string _addworkerId1;
		
		private string _addWorkStyle1;
		
		private string _addMachineId1;
		
		private string _addworker2;
		
		private string _addworkerId2;
		
		private string _addWorkStyle2;
		
		private string _addMachineId2;
		
		private string _addworker3;
		
		private string _addworkerId3;
		
		private string _addWorkStyle3;
		
		private string _addMachineId3;
		
		private string _Rpm0;
		
		private string _addRpm1;
		
		private string _addRpm2;
		
		private string _addRpm3;
		
		private string _Bcolor;
		
		private System.Nullable<bool> _mc;
		
		private string _JFlag;
		
		private string _FAE;
		
		private System.Nullable<decimal> _Mtm_Past;
		
		private System.Nullable<decimal> _Mtm_Suggest;
		
		private System.Nullable<int> _WKStaitonCount;
		
		private System.Nullable<int> _WKStaitonSeq;
		
		private System.Nullable<bool> _IsFloater;
		
		private string _BN_Seq;
		
		private string _BN_Seq_LB3;
		
		private System.Nullable<int> _StaitonCount_LB3;
		
		private System.Nullable<int> _WKStaitonSeq_LB3;
		
		private string _WFCode_LB3;
		
		private string _Move;
		
		private System.Nullable<decimal> _CWorkSN;
		
		private System.Nullable<decimal> _JWorkSN;
		
		private System.Nullable<int> _GZW;
		
		private string _Move_LB3;
		
		private System.Nullable<decimal> _CWorkSN_LB3;
		
		private System.Nullable<decimal> _JWorkSN_LB3;
		
		private System.Nullable<int> _GZW_LB3;
		
		private System.Nullable<bool> _IsMachineTable;
		
		private System.Nullable<bool> _Agree;
		
		private EntityRef<WPMaster> _WPMaster;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFactoryChanging(string value);
    partial void OnFactoryChanged();
    partial void OnLineCodeChanging(string value);
    partial void OnLineCodeChanged();
    partial void Onj_NOChanging(string value);
    partial void Onj_NOChanged();
    partial void OnJ2_jobChanging(string value);
    partial void OnJ2_jobChanged();
    partial void OnRwoChanging(string value);
    partial void OnRwoChanged();
    partial void OnQnChanging(string value);
    partial void OnQnChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnOTNChanging(string value);
    partial void OnOTNChanged();
    partial void OnWPSNChanging(int value);
    partial void OnWPSNChanged();
    partial void OnOperationSNChanging(System.Nullable<int> value);
    partial void OnOperationSNChanged();
    partial void OnOperationGroupChanging(string value);
    partial void OnOperationGroupChanged();
    partial void OnOperationCodeChanging(string value);
    partial void OnOperationCodeChanged();
    partial void OnOperationNameChanging(string value);
    partial void OnOperationNameChanged();
    partial void OnMCTypeChanging(string value);
    partial void OnMCTypeChanged();
    partial void OnGSD_SAHChanging(System.Nullable<decimal> value);
    partial void OnGSD_SAHChanged();
    partial void OnBestSAHChanging(System.Nullable<decimal> value);
    partial void OnBestSAHChanged();
    partial void OnBestMTMChanging(System.Nullable<int> value);
    partial void OnBestMTMChanged();
    partial void OnWorkforceNumChanging(System.Nullable<decimal> value);
    partial void OnWorkforceNumChanged();
    partial void OnRpmChanging(string value);
    partial void OnRpmChanged();
    partial void OnWorkerNameChanging(string value);
    partial void OnWorkerNameChanged();
    partial void OnWorkerIdChanging(string value);
    partial void OnWorkerIdChanged();
    partial void OnWorkStyleChanging(string value);
    partial void OnWorkStyleChanged();
    partial void OnMachineIdChanging(string value);
    partial void OnMachineIdChanged();
    partial void Onaddworker1Changing(string value);
    partial void Onaddworker1Changed();
    partial void OnaddworkerId1Changing(string value);
    partial void OnaddworkerId1Changed();
    partial void OnaddWorkStyle1Changing(string value);
    partial void OnaddWorkStyle1Changed();
    partial void OnaddMachineId1Changing(string value);
    partial void OnaddMachineId1Changed();
    partial void Onaddworker2Changing(string value);
    partial void Onaddworker2Changed();
    partial void OnaddworkerId2Changing(string value);
    partial void OnaddworkerId2Changed();
    partial void OnaddWorkStyle2Changing(string value);
    partial void OnaddWorkStyle2Changed();
    partial void OnaddMachineId2Changing(string value);
    partial void OnaddMachineId2Changed();
    partial void Onaddworker3Changing(string value);
    partial void Onaddworker3Changed();
    partial void OnaddworkerId3Changing(string value);
    partial void OnaddworkerId3Changed();
    partial void OnaddWorkStyle3Changing(string value);
    partial void OnaddWorkStyle3Changed();
    partial void OnaddMachineId3Changing(string value);
    partial void OnaddMachineId3Changed();
    partial void OnRpm0Changing(string value);
    partial void OnRpm0Changed();
    partial void OnaddRpm1Changing(string value);
    partial void OnaddRpm1Changed();
    partial void OnaddRpm2Changing(string value);
    partial void OnaddRpm2Changed();
    partial void OnaddRpm3Changing(string value);
    partial void OnaddRpm3Changed();
    partial void OnBcolorChanging(string value);
    partial void OnBcolorChanged();
    partial void OnmcChanging(System.Nullable<bool> value);
    partial void OnmcChanged();
    partial void OnJFlagChanging(string value);
    partial void OnJFlagChanged();
    partial void OnFAEChanging(string value);
    partial void OnFAEChanged();
    partial void OnMtm_PastChanging(System.Nullable<decimal> value);
    partial void OnMtm_PastChanged();
    partial void OnMtm_SuggestChanging(System.Nullable<decimal> value);
    partial void OnMtm_SuggestChanged();
    partial void OnWKStaitonCountChanging(System.Nullable<int> value);
    partial void OnWKStaitonCountChanged();
    partial void OnWKStaitonSeqChanging(System.Nullable<int> value);
    partial void OnWKStaitonSeqChanged();
    partial void OnIsFloaterChanging(System.Nullable<bool> value);
    partial void OnIsFloaterChanged();
    partial void OnBN_SeqChanging(string value);
    partial void OnBN_SeqChanged();
    partial void OnBN_Seq_LB3Changing(string value);
    partial void OnBN_Seq_LB3Changed();
    partial void OnStaitonCount_LB3Changing(System.Nullable<int> value);
    partial void OnStaitonCount_LB3Changed();
    partial void OnWKStaitonSeq_LB3Changing(System.Nullable<int> value);
    partial void OnWKStaitonSeq_LB3Changed();
    partial void OnWFCode_LB3Changing(string value);
    partial void OnWFCode_LB3Changed();
    partial void OnMoveChanging(string value);
    partial void OnMoveChanged();
    partial void OnCWorkSNChanging(System.Nullable<decimal> value);
    partial void OnCWorkSNChanged();
    partial void OnJWorkSNChanging(System.Nullable<decimal> value);
    partial void OnJWorkSNChanged();
    partial void OnGZWChanging(System.Nullable<int> value);
    partial void OnGZWChanged();
    partial void OnMove_LB3Changing(string value);
    partial void OnMove_LB3Changed();
    partial void OnCWorkSN_LB3Changing(System.Nullable<decimal> value);
    partial void OnCWorkSN_LB3Changed();
    partial void OnJWorkSN_LB3Changing(System.Nullable<decimal> value);
    partial void OnJWorkSN_LB3Changed();
    partial void OnGZW_LB3Changing(System.Nullable<int> value);
    partial void OnGZW_LB3Changed();
    partial void OnIsMachineTableChanging(System.Nullable<bool> value);
    partial void OnIsMachineTableChanged();
    partial void OnAgreeChanging(System.Nullable<bool> value);
    partial void OnAgreeChanged();
    #endregion
		
		public Matching()
		{
			this._WPMaster = default(EntityRef<WPMaster>);
			OnCreated();
		}
		
		[Column(Storage="_Factory", DbType="NChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Factory
		{
			get
			{
				return this._Factory;
			}
			set
			{
				if ((this._Factory != value))
				{
					if (this._WPMaster.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFactoryChanging(value);
					this.SendPropertyChanging();
					this._Factory = value;
					this.SendPropertyChanged("Factory");
					this.OnFactoryChanged();
				}
			}
		}
		
		[Column(Storage="_LineCode", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string LineCode
		{
			get
			{
				return this._LineCode;
			}
			set
			{
				if ((this._LineCode != value))
				{
					if (this._WPMaster.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLineCodeChanging(value);
					this.SendPropertyChanging();
					this._LineCode = value;
					this.SendPropertyChanged("LineCode");
					this.OnLineCodeChanged();
				}
			}
		}
		
		[Column(Storage="_j_NO", DbType="NChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string j_NO
		{
			get
			{
				return this._j_NO;
			}
			set
			{
				if ((this._j_NO != value))
				{
					if (this._WPMaster.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onj_NOChanging(value);
					this.SendPropertyChanging();
					this._j_NO = value;
					this.SendPropertyChanged("j_NO");
					this.Onj_NOChanged();
				}
			}
		}
		
		[Column(Storage="_J2_job", DbType="NChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string J2_job
		{
			get
			{
				return this._J2_job;
			}
			set
			{
				if ((this._J2_job != value))
				{
					if (this._WPMaster.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJ2_jobChanging(value);
					this.SendPropertyChanging();
					this._J2_job = value;
					this.SendPropertyChanged("J2_job");
					this.OnJ2_jobChanged();
				}
			}
		}
		
		[Column(Storage="_Rwo", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Rwo
		{
			get
			{
				return this._Rwo;
			}
			set
			{
				if ((this._Rwo != value))
				{
					if (this._WPMaster.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRwoChanging(value);
					this.SendPropertyChanging();
					this._Rwo = value;
					this.SendPropertyChanged("Rwo");
					this.OnRwoChanged();
				}
			}
		}
		
		[Column(Storage="_Qn", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Qn
		{
			get
			{
				return this._Qn;
			}
			set
			{
				if ((this._Qn != value))
				{
					if (this._WPMaster.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQnChanging(value);
					this.SendPropertyChanging();
					this._Qn = value;
					this.SendPropertyChanged("Qn");
					this.OnQnChanged();
				}
			}
		}
		
		[Column(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[Column(Storage="_OTN", DbType="NChar(10)")]
		public string OTN
		{
			get
			{
				return this._OTN;
			}
			set
			{
				if ((this._OTN != value))
				{
					this.OnOTNChanging(value);
					this.SendPropertyChanging();
					this._OTN = value;
					this.SendPropertyChanged("OTN");
					this.OnOTNChanged();
				}
			}
		}
		
		[Column(Storage="_WPSN", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int WPSN
		{
			get
			{
				return this._WPSN;
			}
			set
			{
				if ((this._WPSN != value))
				{
					this.OnWPSNChanging(value);
					this.SendPropertyChanging();
					this._WPSN = value;
					this.SendPropertyChanged("WPSN");
					this.OnWPSNChanged();
				}
			}
		}
		
		[Column(Storage="_OperationSN", DbType="Int")]
		public System.Nullable<int> OperationSN
		{
			get
			{
				return this._OperationSN;
			}
			set
			{
				if ((this._OperationSN != value))
				{
					this.OnOperationSNChanging(value);
					this.SendPropertyChanging();
					this._OperationSN = value;
					this.SendPropertyChanged("OperationSN");
					this.OnOperationSNChanged();
				}
			}
		}
		
		[Column(Storage="_OperationGroup", DbType="NChar(10)")]
		public string OperationGroup
		{
			get
			{
				return this._OperationGroup;
			}
			set
			{
				if ((this._OperationGroup != value))
				{
					this.OnOperationGroupChanging(value);
					this.SendPropertyChanging();
					this._OperationGroup = value;
					this.SendPropertyChanged("OperationGroup");
					this.OnOperationGroupChanged();
				}
			}
		}
		
		[Column(Storage="_OperationCode", DbType="NChar(10)")]
		public string OperationCode
		{
			get
			{
				return this._OperationCode;
			}
			set
			{
				if ((this._OperationCode != value))
				{
					this.OnOperationCodeChanging(value);
					this.SendPropertyChanging();
					this._OperationCode = value;
					this.SendPropertyChanged("OperationCode");
					this.OnOperationCodeChanged();
				}
			}
		}
		
		[Column(Storage="_OperationName", DbType="NChar(100)")]
		public string OperationName
		{
			get
			{
				return this._OperationName;
			}
			set
			{
				if ((this._OperationName != value))
				{
					this.OnOperationNameChanging(value);
					this.SendPropertyChanging();
					this._OperationName = value;
					this.SendPropertyChanged("OperationName");
					this.OnOperationNameChanged();
				}
			}
		}
		
		[Column(Storage="_MCType", DbType="NChar(10)")]
		public string MCType
		{
			get
			{
				return this._MCType;
			}
			set
			{
				if ((this._MCType != value))
				{
					this.OnMCTypeChanging(value);
					this.SendPropertyChanging();
					this._MCType = value;
					this.SendPropertyChanged("MCType");
					this.OnMCTypeChanged();
				}
			}
		}
		
		[Column(Storage="_GSD_SAH", DbType="Decimal(15,4)")]
		public System.Nullable<decimal> GSD_SAH
		{
			get
			{
				return this._GSD_SAH;
			}
			set
			{
				if ((this._GSD_SAH != value))
				{
					this.OnGSD_SAHChanging(value);
					this.SendPropertyChanging();
					this._GSD_SAH = value;
					this.SendPropertyChanged("GSD_SAH");
					this.OnGSD_SAHChanged();
				}
			}
		}
		
		[Column(Storage="_BestSAH", DbType="Decimal(15,4)")]
		public System.Nullable<decimal> BestSAH
		{
			get
			{
				return this._BestSAH;
			}
			set
			{
				if ((this._BestSAH != value))
				{
					this.OnBestSAHChanging(value);
					this.SendPropertyChanging();
					this._BestSAH = value;
					this.SendPropertyChanged("BestSAH");
					this.OnBestSAHChanged();
				}
			}
		}
		
		[Column(Storage="_BestMTM", DbType="Int")]
		public System.Nullable<int> BestMTM
		{
			get
			{
				return this._BestMTM;
			}
			set
			{
				if ((this._BestMTM != value))
				{
					this.OnBestMTMChanging(value);
					this.SendPropertyChanging();
					this._BestMTM = value;
					this.SendPropertyChanged("BestMTM");
					this.OnBestMTMChanged();
				}
			}
		}
		
		[Column(Storage="_WorkforceNum", DbType="Decimal(15,4)")]
		public System.Nullable<decimal> WorkforceNum
		{
			get
			{
				return this._WorkforceNum;
			}
			set
			{
				if ((this._WorkforceNum != value))
				{
					this.OnWorkforceNumChanging(value);
					this.SendPropertyChanging();
					this._WorkforceNum = value;
					this.SendPropertyChanged("WorkforceNum");
					this.OnWorkforceNumChanged();
				}
			}
		}
		
		[Column(Storage="_Rpm", DbType="VarChar(50)")]
		public string Rpm
		{
			get
			{
				return this._Rpm;
			}
			set
			{
				if ((this._Rpm != value))
				{
					this.OnRpmChanging(value);
					this.SendPropertyChanging();
					this._Rpm = value;
					this.SendPropertyChanged("Rpm");
					this.OnRpmChanged();
				}
			}
		}
		
		[Column(Storage="_WorkerName", DbType="NVarChar(50)")]
		public string WorkerName
		{
			get
			{
				return this._WorkerName;
			}
			set
			{
				if ((this._WorkerName != value))
				{
					this.OnWorkerNameChanging(value);
					this.SendPropertyChanging();
					this._WorkerName = value;
					this.SendPropertyChanged("WorkerName");
					this.OnWorkerNameChanged();
				}
			}
		}
		
		[Column(Storage="_WorkerId", DbType="VarChar(50)")]
		public string WorkerId
		{
			get
			{
				return this._WorkerId;
			}
			set
			{
				if ((this._WorkerId != value))
				{
					this.OnWorkerIdChanging(value);
					this.SendPropertyChanging();
					this._WorkerId = value;
					this.SendPropertyChanged("WorkerId");
					this.OnWorkerIdChanged();
				}
			}
		}
		
		[Column(Storage="_WorkStyle", DbType="VarChar(50)")]
		public string WorkStyle
		{
			get
			{
				return this._WorkStyle;
			}
			set
			{
				if ((this._WorkStyle != value))
				{
					this.OnWorkStyleChanging(value);
					this.SendPropertyChanging();
					this._WorkStyle = value;
					this.SendPropertyChanged("WorkStyle");
					this.OnWorkStyleChanged();
				}
			}
		}
		
		[Column(Storage="_MachineId", DbType="VarChar(50)")]
		public string MachineId
		{
			get
			{
				return this._MachineId;
			}
			set
			{
				if ((this._MachineId != value))
				{
					this.OnMachineIdChanging(value);
					this.SendPropertyChanging();
					this._MachineId = value;
					this.SendPropertyChanged("MachineId");
					this.OnMachineIdChanged();
				}
			}
		}
		
		[Column(Storage="_addworker1", DbType="NVarChar(50)")]
		public string addworker1
		{
			get
			{
				return this._addworker1;
			}
			set
			{
				if ((this._addworker1 != value))
				{
					this.Onaddworker1Changing(value);
					this.SendPropertyChanging();
					this._addworker1 = value;
					this.SendPropertyChanged("addworker1");
					this.Onaddworker1Changed();
				}
			}
		}
		
		[Column(Storage="_addworkerId1", DbType="VarChar(50)")]
		public string addworkerId1
		{
			get
			{
				return this._addworkerId1;
			}
			set
			{
				if ((this._addworkerId1 != value))
				{
					this.OnaddworkerId1Changing(value);
					this.SendPropertyChanging();
					this._addworkerId1 = value;
					this.SendPropertyChanged("addworkerId1");
					this.OnaddworkerId1Changed();
				}
			}
		}
		
		[Column(Storage="_addWorkStyle1", DbType="VarChar(50)")]
		public string addWorkStyle1
		{
			get
			{
				return this._addWorkStyle1;
			}
			set
			{
				if ((this._addWorkStyle1 != value))
				{
					this.OnaddWorkStyle1Changing(value);
					this.SendPropertyChanging();
					this._addWorkStyle1 = value;
					this.SendPropertyChanged("addWorkStyle1");
					this.OnaddWorkStyle1Changed();
				}
			}
		}
		
		[Column(Storage="_addMachineId1", DbType="VarChar(50)")]
		public string addMachineId1
		{
			get
			{
				return this._addMachineId1;
			}
			set
			{
				if ((this._addMachineId1 != value))
				{
					this.OnaddMachineId1Changing(value);
					this.SendPropertyChanging();
					this._addMachineId1 = value;
					this.SendPropertyChanged("addMachineId1");
					this.OnaddMachineId1Changed();
				}
			}
		}
		
		[Column(Storage="_addworker2", DbType="NVarChar(50)")]
		public string addworker2
		{
			get
			{
				return this._addworker2;
			}
			set
			{
				if ((this._addworker2 != value))
				{
					this.Onaddworker2Changing(value);
					this.SendPropertyChanging();
					this._addworker2 = value;
					this.SendPropertyChanged("addworker2");
					this.Onaddworker2Changed();
				}
			}
		}
		
		[Column(Storage="_addworkerId2", DbType="VarChar(50)")]
		public string addworkerId2
		{
			get
			{
				return this._addworkerId2;
			}
			set
			{
				if ((this._addworkerId2 != value))
				{
					this.OnaddworkerId2Changing(value);
					this.SendPropertyChanging();
					this._addworkerId2 = value;
					this.SendPropertyChanged("addworkerId2");
					this.OnaddworkerId2Changed();
				}
			}
		}
		
		[Column(Storage="_addWorkStyle2", DbType="VarChar(50)")]
		public string addWorkStyle2
		{
			get
			{
				return this._addWorkStyle2;
			}
			set
			{
				if ((this._addWorkStyle2 != value))
				{
					this.OnaddWorkStyle2Changing(value);
					this.SendPropertyChanging();
					this._addWorkStyle2 = value;
					this.SendPropertyChanged("addWorkStyle2");
					this.OnaddWorkStyle2Changed();
				}
			}
		}
		
		[Column(Storage="_addMachineId2", DbType="VarChar(50)")]
		public string addMachineId2
		{
			get
			{
				return this._addMachineId2;
			}
			set
			{
				if ((this._addMachineId2 != value))
				{
					this.OnaddMachineId2Changing(value);
					this.SendPropertyChanging();
					this._addMachineId2 = value;
					this.SendPropertyChanged("addMachineId2");
					this.OnaddMachineId2Changed();
				}
			}
		}
		
		[Column(Storage="_addworker3", DbType="NVarChar(50)")]
		public string addworker3
		{
			get
			{
				return this._addworker3;
			}
			set
			{
				if ((this._addworker3 != value))
				{
					this.Onaddworker3Changing(value);
					this.SendPropertyChanging();
					this._addworker3 = value;
					this.SendPropertyChanged("addworker3");
					this.Onaddworker3Changed();
				}
			}
		}
		
		[Column(Storage="_addworkerId3", DbType="VarChar(50)")]
		public string addworkerId3
		{
			get
			{
				return this._addworkerId3;
			}
			set
			{
				if ((this._addworkerId3 != value))
				{
					this.OnaddworkerId3Changing(value);
					this.SendPropertyChanging();
					this._addworkerId3 = value;
					this.SendPropertyChanged("addworkerId3");
					this.OnaddworkerId3Changed();
				}
			}
		}
		
		[Column(Storage="_addWorkStyle3", DbType="VarChar(50)")]
		public string addWorkStyle3
		{
			get
			{
				return this._addWorkStyle3;
			}
			set
			{
				if ((this._addWorkStyle3 != value))
				{
					this.OnaddWorkStyle3Changing(value);
					this.SendPropertyChanging();
					this._addWorkStyle3 = value;
					this.SendPropertyChanged("addWorkStyle3");
					this.OnaddWorkStyle3Changed();
				}
			}
		}
		
		[Column(Storage="_addMachineId3", DbType="VarChar(50)")]
		public string addMachineId3
		{
			get
			{
				return this._addMachineId3;
			}
			set
			{
				if ((this._addMachineId3 != value))
				{
					this.OnaddMachineId3Changing(value);
					this.SendPropertyChanging();
					this._addMachineId3 = value;
					this.SendPropertyChanged("addMachineId3");
					this.OnaddMachineId3Changed();
				}
			}
		}
		
		[Column(Storage="_Rpm0", DbType="VarChar(50)")]
		public string Rpm0
		{
			get
			{
				return this._Rpm0;
			}
			set
			{
				if ((this._Rpm0 != value))
				{
					this.OnRpm0Changing(value);
					this.SendPropertyChanging();
					this._Rpm0 = value;
					this.SendPropertyChanged("Rpm0");
					this.OnRpm0Changed();
				}
			}
		}
		
		[Column(Storage="_addRpm1", DbType="VarChar(50)")]
		public string addRpm1
		{
			get
			{
				return this._addRpm1;
			}
			set
			{
				if ((this._addRpm1 != value))
				{
					this.OnaddRpm1Changing(value);
					this.SendPropertyChanging();
					this._addRpm1 = value;
					this.SendPropertyChanged("addRpm1");
					this.OnaddRpm1Changed();
				}
			}
		}
		
		[Column(Storage="_addRpm2", DbType="VarChar(50)")]
		public string addRpm2
		{
			get
			{
				return this._addRpm2;
			}
			set
			{
				if ((this._addRpm2 != value))
				{
					this.OnaddRpm2Changing(value);
					this.SendPropertyChanging();
					this._addRpm2 = value;
					this.SendPropertyChanged("addRpm2");
					this.OnaddRpm2Changed();
				}
			}
		}
		
		[Column(Storage="_addRpm3", DbType="VarChar(50)")]
		public string addRpm3
		{
			get
			{
				return this._addRpm3;
			}
			set
			{
				if ((this._addRpm3 != value))
				{
					this.OnaddRpm3Changing(value);
					this.SendPropertyChanging();
					this._addRpm3 = value;
					this.SendPropertyChanged("addRpm3");
					this.OnaddRpm3Changed();
				}
			}
		}
		
		[Column(Storage="_Bcolor", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Bcolor
		{
			get
			{
				return this._Bcolor;
			}
			set
			{
				if ((this._Bcolor != value))
				{
					if (this._WPMaster.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBcolorChanging(value);
					this.SendPropertyChanging();
					this._Bcolor = value;
					this.SendPropertyChanged("Bcolor");
					this.OnBcolorChanged();
				}
			}
		}
		
		[Column(Storage="_mc", DbType="Bit")]
		public System.Nullable<bool> mc
		{
			get
			{
				return this._mc;
			}
			set
			{
				if ((this._mc != value))
				{
					this.OnmcChanging(value);
					this.SendPropertyChanging();
					this._mc = value;
					this.SendPropertyChanged("mc");
					this.OnmcChanged();
				}
			}
		}
		
		[Column(Storage="_JFlag", DbType="VarChar(50)")]
		public string JFlag
		{
			get
			{
				return this._JFlag;
			}
			set
			{
				if ((this._JFlag != value))
				{
					this.OnJFlagChanging(value);
					this.SendPropertyChanging();
					this._JFlag = value;
					this.SendPropertyChanged("JFlag");
					this.OnJFlagChanged();
				}
			}
		}
		
		[Column(Storage="_FAE", DbType="VarChar(10)")]
		public string FAE
		{
			get
			{
				return this._FAE;
			}
			set
			{
				if ((this._FAE != value))
				{
					this.OnFAEChanging(value);
					this.SendPropertyChanging();
					this._FAE = value;
					this.SendPropertyChanged("FAE");
					this.OnFAEChanged();
				}
			}
		}
		
		[Column(Storage="_Mtm_Past", DbType="Decimal(5,1)")]
		public System.Nullable<decimal> Mtm_Past
		{
			get
			{
				return this._Mtm_Past;
			}
			set
			{
				if ((this._Mtm_Past != value))
				{
					this.OnMtm_PastChanging(value);
					this.SendPropertyChanging();
					this._Mtm_Past = value;
					this.SendPropertyChanged("Mtm_Past");
					this.OnMtm_PastChanged();
				}
			}
		}
		
		[Column(Storage="_Mtm_Suggest", DbType="Decimal(5,1)")]
		public System.Nullable<decimal> Mtm_Suggest
		{
			get
			{
				return this._Mtm_Suggest;
			}
			set
			{
				if ((this._Mtm_Suggest != value))
				{
					this.OnMtm_SuggestChanging(value);
					this.SendPropertyChanging();
					this._Mtm_Suggest = value;
					this.SendPropertyChanged("Mtm_Suggest");
					this.OnMtm_SuggestChanged();
				}
			}
		}
		
		[Column(Storage="_WKStaitonCount", DbType="Int")]
		public System.Nullable<int> WKStaitonCount
		{
			get
			{
				return this._WKStaitonCount;
			}
			set
			{
				if ((this._WKStaitonCount != value))
				{
					this.OnWKStaitonCountChanging(value);
					this.SendPropertyChanging();
					this._WKStaitonCount = value;
					this.SendPropertyChanged("WKStaitonCount");
					this.OnWKStaitonCountChanged();
				}
			}
		}
		
		[Column(Storage="_WKStaitonSeq", DbType="Int")]
		public System.Nullable<int> WKStaitonSeq
		{
			get
			{
				return this._WKStaitonSeq;
			}
			set
			{
				if ((this._WKStaitonSeq != value))
				{
					this.OnWKStaitonSeqChanging(value);
					this.SendPropertyChanging();
					this._WKStaitonSeq = value;
					this.SendPropertyChanged("WKStaitonSeq");
					this.OnWKStaitonSeqChanged();
				}
			}
		}
		
		[Column(Storage="_IsFloater", DbType="Bit")]
		public System.Nullable<bool> IsFloater
		{
			get
			{
				return this._IsFloater;
			}
			set
			{
				if ((this._IsFloater != value))
				{
					this.OnIsFloaterChanging(value);
					this.SendPropertyChanging();
					this._IsFloater = value;
					this.SendPropertyChanged("IsFloater");
					this.OnIsFloaterChanged();
				}
			}
		}
		
		[Column(Storage="_BN_Seq", DbType="VarChar(50)")]
		public string BN_Seq
		{
			get
			{
				return this._BN_Seq;
			}
			set
			{
				if ((this._BN_Seq != value))
				{
					this.OnBN_SeqChanging(value);
					this.SendPropertyChanging();
					this._BN_Seq = value;
					this.SendPropertyChanged("BN_Seq");
					this.OnBN_SeqChanged();
				}
			}
		}
		
		[Column(Storage="_BN_Seq_LB3", DbType="VarChar(50)")]
		public string BN_Seq_LB3
		{
			get
			{
				return this._BN_Seq_LB3;
			}
			set
			{
				if ((this._BN_Seq_LB3 != value))
				{
					this.OnBN_Seq_LB3Changing(value);
					this.SendPropertyChanging();
					this._BN_Seq_LB3 = value;
					this.SendPropertyChanged("BN_Seq_LB3");
					this.OnBN_Seq_LB3Changed();
				}
			}
		}
		
		[Column(Storage="_StaitonCount_LB3", DbType="Int")]
		public System.Nullable<int> StaitonCount_LB3
		{
			get
			{
				return this._StaitonCount_LB3;
			}
			set
			{
				if ((this._StaitonCount_LB3 != value))
				{
					this.OnStaitonCount_LB3Changing(value);
					this.SendPropertyChanging();
					this._StaitonCount_LB3 = value;
					this.SendPropertyChanged("StaitonCount_LB3");
					this.OnStaitonCount_LB3Changed();
				}
			}
		}
		
		[Column(Storage="_WKStaitonSeq_LB3", DbType="Int")]
		public System.Nullable<int> WKStaitonSeq_LB3
		{
			get
			{
				return this._WKStaitonSeq_LB3;
			}
			set
			{
				if ((this._WKStaitonSeq_LB3 != value))
				{
					this.OnWKStaitonSeq_LB3Changing(value);
					this.SendPropertyChanging();
					this._WKStaitonSeq_LB3 = value;
					this.SendPropertyChanged("WKStaitonSeq_LB3");
					this.OnWKStaitonSeq_LB3Changed();
				}
			}
		}
		
		[Column(Storage="_WFCode_LB3", DbType="VarChar(10)")]
		public string WFCode_LB3
		{
			get
			{
				return this._WFCode_LB3;
			}
			set
			{
				if ((this._WFCode_LB3 != value))
				{
					this.OnWFCode_LB3Changing(value);
					this.SendPropertyChanging();
					this._WFCode_LB3 = value;
					this.SendPropertyChanged("WFCode_LB3");
					this.OnWFCode_LB3Changed();
				}
			}
		}
		
		[Column(Storage="_Move", DbType="NVarChar(50)")]
		public string Move
		{
			get
			{
				return this._Move;
			}
			set
			{
				if ((this._Move != value))
				{
					this.OnMoveChanging(value);
					this.SendPropertyChanging();
					this._Move = value;
					this.SendPropertyChanged("Move");
					this.OnMoveChanged();
				}
			}
		}
		
		[Column(Storage="_CWorkSN", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> CWorkSN
		{
			get
			{
				return this._CWorkSN;
			}
			set
			{
				if ((this._CWorkSN != value))
				{
					this.OnCWorkSNChanging(value);
					this.SendPropertyChanging();
					this._CWorkSN = value;
					this.SendPropertyChanged("CWorkSN");
					this.OnCWorkSNChanged();
				}
			}
		}
		
		[Column(Storage="_JWorkSN", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> JWorkSN
		{
			get
			{
				return this._JWorkSN;
			}
			set
			{
				if ((this._JWorkSN != value))
				{
					this.OnJWorkSNChanging(value);
					this.SendPropertyChanging();
					this._JWorkSN = value;
					this.SendPropertyChanged("JWorkSN");
					this.OnJWorkSNChanged();
				}
			}
		}
		
		[Column(Storage="_GZW", DbType="Int")]
		public System.Nullable<int> GZW
		{
			get
			{
				return this._GZW;
			}
			set
			{
				if ((this._GZW != value))
				{
					this.OnGZWChanging(value);
					this.SendPropertyChanging();
					this._GZW = value;
					this.SendPropertyChanged("GZW");
					this.OnGZWChanged();
				}
			}
		}
		
		[Column(Storage="_Move_LB3", DbType="NVarChar(50)")]
		public string Move_LB3
		{
			get
			{
				return this._Move_LB3;
			}
			set
			{
				if ((this._Move_LB3 != value))
				{
					this.OnMove_LB3Changing(value);
					this.SendPropertyChanging();
					this._Move_LB3 = value;
					this.SendPropertyChanged("Move_LB3");
					this.OnMove_LB3Changed();
				}
			}
		}
		
		[Column(Storage="_CWorkSN_LB3", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> CWorkSN_LB3
		{
			get
			{
				return this._CWorkSN_LB3;
			}
			set
			{
				if ((this._CWorkSN_LB3 != value))
				{
					this.OnCWorkSN_LB3Changing(value);
					this.SendPropertyChanging();
					this._CWorkSN_LB3 = value;
					this.SendPropertyChanged("CWorkSN_LB3");
					this.OnCWorkSN_LB3Changed();
				}
			}
		}
		
		[Column(Storage="_JWorkSN_LB3", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> JWorkSN_LB3
		{
			get
			{
				return this._JWorkSN_LB3;
			}
			set
			{
				if ((this._JWorkSN_LB3 != value))
				{
					this.OnJWorkSN_LB3Changing(value);
					this.SendPropertyChanging();
					this._JWorkSN_LB3 = value;
					this.SendPropertyChanged("JWorkSN_LB3");
					this.OnJWorkSN_LB3Changed();
				}
			}
		}
		
		[Column(Storage="_GZW_LB3", DbType="Int")]
		public System.Nullable<int> GZW_LB3
		{
			get
			{
				return this._GZW_LB3;
			}
			set
			{
				if ((this._GZW_LB3 != value))
				{
					this.OnGZW_LB3Changing(value);
					this.SendPropertyChanging();
					this._GZW_LB3 = value;
					this.SendPropertyChanged("GZW_LB3");
					this.OnGZW_LB3Changed();
				}
			}
		}
		
		[Column(Storage="_IsMachineTable", DbType="Bit")]
		public System.Nullable<bool> IsMachineTable
		{
			get
			{
				return this._IsMachineTable;
			}
			set
			{
				if ((this._IsMachineTable != value))
				{
					this.OnIsMachineTableChanging(value);
					this.SendPropertyChanging();
					this._IsMachineTable = value;
					this.SendPropertyChanged("IsMachineTable");
					this.OnIsMachineTableChanged();
				}
			}
		}
		
		[Column(Storage="_Agree", DbType="Bit")]
		public System.Nullable<bool> Agree
		{
			get
			{
				return this._Agree;
			}
			set
			{
				if ((this._Agree != value))
				{
					this.OnAgreeChanging(value);
					this.SendPropertyChanging();
					this._Agree = value;
					this.SendPropertyChanged("Agree");
					this.OnAgreeChanged();
				}
			}
		}
		
		[Association(Name="WPMaster_Matching", Storage="_WPMaster", ThisKey="Factory,LineCode,j_NO,J2_job,Rwo,Qn,Bcolor", OtherKey="Factory,LineCode,j_NO,J2_job,Rwo,Qn,Bcolor", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public WPMaster WPMaster
		{
			get
			{
				return this._WPMaster.Entity;
			}
			set
			{
				WPMaster previousValue = this._WPMaster.Entity;
				if (((previousValue != value) 
							|| (this._WPMaster.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WPMaster.Entity = null;
						previousValue.Matchings.Remove(this);
					}
					this._WPMaster.Entity = value;
					if ((value != null))
					{
						value.Matchings.Add(this);
						this._Factory = value.Factory;
						this._LineCode = value.LineCode;
						this._j_NO = value.j_NO;
						this._J2_job = value.J2_job;
						this._Rwo = value.Rwo;
						this._Qn = value.Qn;
						this._Bcolor = value.Bcolor;
					}
					else
					{
						this._Factory = default(string);
						this._LineCode = default(string);
						this._j_NO = default(string);
						this._J2_job = default(string);
						this._Rwo = default(string);
						this._Qn = default(string);
						this._Bcolor = default(string);
					}
					this.SendPropertyChanged("WPMaster");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.WPMaster")]
	public partial class WPMaster : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Factory;
		
		private string _LineCode;
		
		private string _j_NO;
		
		private string _J2_job;
		
		private string _Rwo;
		
		private string _Qn;
		
		private string _PHStyleCode;
		
		private string _CustStyleCode;
		
		private System.Nullable<int> _Version;
		
		private string _ZH;
		
		private string _Bcolor;
		
		private System.Nullable<System.DateTime> _StartTime;
		
		private System.Nullable<decimal> _STime;
		
		private System.Nullable<System.DateTime> _EndTime;
		
		private System.Nullable<decimal> _ETime;
		
		private System.Nullable<int> _Seq;
		
		private string _Flag;
		
		private System.Nullable<bool> _IsConfirmed;
		
		private System.Nullable<System.DateTime> _ConfirmTime;
		
		private string _Location;
		
		private string _Woc;
		
		private System.Nullable<decimal> _Balance_LB4;
		
		private System.Nullable<bool> _ToBeConfirmedFlag;
		
		private System.Nullable<System.DateTime> _UpdateTime;
		
		private System.Nullable<bool> _IsBatchAdd;
		
		private System.Nullable<bool> _ToBeConfirmedFlag_MC;
		
		private System.Nullable<int> _QNQty;
		
		private string _Confirmer;
		
		private System.Nullable<System.DateTime> _ToBeConfirmedDate;
		
		private System.Nullable<System.DateTime> _ToBeConfirmedDate_MC;
		
		private EntitySet<PoolInfo> _PoolInfos;
		
		private EntitySet<Matching> _Matchings;
		
		private EntitySet<LB5MatchingLog> _LB5MatchingLogs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFactoryChanging(string value);
    partial void OnFactoryChanged();
    partial void OnLineCodeChanging(string value);
    partial void OnLineCodeChanged();
    partial void Onj_NOChanging(string value);
    partial void Onj_NOChanged();
    partial void OnJ2_jobChanging(string value);
    partial void OnJ2_jobChanged();
    partial void OnRwoChanging(string value);
    partial void OnRwoChanged();
    partial void OnQnChanging(string value);
    partial void OnQnChanged();
    partial void OnPHStyleCodeChanging(string value);
    partial void OnPHStyleCodeChanged();
    partial void OnCustStyleCodeChanging(string value);
    partial void OnCustStyleCodeChanged();
    partial void OnVersionChanging(System.Nullable<int> value);
    partial void OnVersionChanged();
    partial void OnZHChanging(string value);
    partial void OnZHChanged();
    partial void OnBcolorChanging(string value);
    partial void OnBcolorChanged();
    partial void OnStartTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnStartTimeChanged();
    partial void OnSTimeChanging(System.Nullable<decimal> value);
    partial void OnSTimeChanged();
    partial void OnEndTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnEndTimeChanged();
    partial void OnETimeChanging(System.Nullable<decimal> value);
    partial void OnETimeChanged();
    partial void OnSeqChanging(System.Nullable<int> value);
    partial void OnSeqChanged();
    partial void OnFlagChanging(string value);
    partial void OnFlagChanged();
    partial void OnIsConfirmedChanging(System.Nullable<bool> value);
    partial void OnIsConfirmedChanged();
    partial void OnConfirmTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnConfirmTimeChanged();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    partial void OnWocChanging(string value);
    partial void OnWocChanged();
    partial void OnBalance_LB4Changing(System.Nullable<decimal> value);
    partial void OnBalance_LB4Changed();
    partial void OnToBeConfirmedFlagChanging(System.Nullable<bool> value);
    partial void OnToBeConfirmedFlagChanged();
    partial void OnUpdateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateTimeChanged();
    partial void OnIsBatchAddChanging(System.Nullable<bool> value);
    partial void OnIsBatchAddChanged();
    partial void OnToBeConfirmedFlag_MCChanging(System.Nullable<bool> value);
    partial void OnToBeConfirmedFlag_MCChanged();
    partial void OnQNQtyChanging(System.Nullable<int> value);
    partial void OnQNQtyChanged();
    partial void OnConfirmerChanging(string value);
    partial void OnConfirmerChanged();
    partial void OnToBeConfirmedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnToBeConfirmedDateChanged();
    partial void OnToBeConfirmedDate_MCChanging(System.Nullable<System.DateTime> value);
    partial void OnToBeConfirmedDate_MCChanged();
    #endregion
		
		public WPMaster()
		{
			this._PoolInfos = new EntitySet<PoolInfo>(new Action<PoolInfo>(this.attach_PoolInfos), new Action<PoolInfo>(this.detach_PoolInfos));
			this._Matchings = new EntitySet<Matching>(new Action<Matching>(this.attach_Matchings), new Action<Matching>(this.detach_Matchings));
			this._LB5MatchingLogs = new EntitySet<LB5MatchingLog>(new Action<LB5MatchingLog>(this.attach_LB5MatchingLogs), new Action<LB5MatchingLog>(this.detach_LB5MatchingLogs));
			OnCreated();
		}
		
		[Column(Storage="_Factory", DbType="NChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Factory
		{
			get
			{
				return this._Factory;
			}
			set
			{
				if ((this._Factory != value))
				{
					this.OnFactoryChanging(value);
					this.SendPropertyChanging();
					this._Factory = value;
					this.SendPropertyChanged("Factory");
					this.OnFactoryChanged();
				}
			}
		}
		
		[Column(Storage="_LineCode", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string LineCode
		{
			get
			{
				return this._LineCode;
			}
			set
			{
				if ((this._LineCode != value))
				{
					this.OnLineCodeChanging(value);
					this.SendPropertyChanging();
					this._LineCode = value;
					this.SendPropertyChanged("LineCode");
					this.OnLineCodeChanged();
				}
			}
		}
		
		[Column(Storage="_j_NO", DbType="NChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string j_NO
		{
			get
			{
				return this._j_NO;
			}
			set
			{
				if ((this._j_NO != value))
				{
					this.Onj_NOChanging(value);
					this.SendPropertyChanging();
					this._j_NO = value;
					this.SendPropertyChanged("j_NO");
					this.Onj_NOChanged();
				}
			}
		}
		
		[Column(Storage="_J2_job", DbType="NChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string J2_job
		{
			get
			{
				return this._J2_job;
			}
			set
			{
				if ((this._J2_job != value))
				{
					this.OnJ2_jobChanging(value);
					this.SendPropertyChanging();
					this._J2_job = value;
					this.SendPropertyChanged("J2_job");
					this.OnJ2_jobChanged();
				}
			}
		}
		
		[Column(Storage="_Rwo", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Rwo
		{
			get
			{
				return this._Rwo;
			}
			set
			{
				if ((this._Rwo != value))
				{
					this.OnRwoChanging(value);
					this.SendPropertyChanging();
					this._Rwo = value;
					this.SendPropertyChanged("Rwo");
					this.OnRwoChanged();
				}
			}
		}
		
		[Column(Storage="_Qn", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Qn
		{
			get
			{
				return this._Qn;
			}
			set
			{
				if ((this._Qn != value))
				{
					this.OnQnChanging(value);
					this.SendPropertyChanging();
					this._Qn = value;
					this.SendPropertyChanged("Qn");
					this.OnQnChanged();
				}
			}
		}
		
		[Column(Storage="_PHStyleCode", DbType="NVarChar(30)")]
		public string PHStyleCode
		{
			get
			{
				return this._PHStyleCode;
			}
			set
			{
				if ((this._PHStyleCode != value))
				{
					this.OnPHStyleCodeChanging(value);
					this.SendPropertyChanging();
					this._PHStyleCode = value;
					this.SendPropertyChanged("PHStyleCode");
					this.OnPHStyleCodeChanged();
				}
			}
		}
		
		[Column(Storage="_CustStyleCode", DbType="VarChar(50)")]
		public string CustStyleCode
		{
			get
			{
				return this._CustStyleCode;
			}
			set
			{
				if ((this._CustStyleCode != value))
				{
					this.OnCustStyleCodeChanging(value);
					this.SendPropertyChanging();
					this._CustStyleCode = value;
					this.SendPropertyChanged("CustStyleCode");
					this.OnCustStyleCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Version", DbType="Int")]
		public System.Nullable<int> Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[Column(Storage="_ZH", DbType="VarChar(100)")]
		public string ZH
		{
			get
			{
				return this._ZH;
			}
			set
			{
				if ((this._ZH != value))
				{
					this.OnZHChanging(value);
					this.SendPropertyChanging();
					this._ZH = value;
					this.SendPropertyChanged("ZH");
					this.OnZHChanged();
				}
			}
		}
		
		[Column(Storage="_Bcolor", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Bcolor
		{
			get
			{
				return this._Bcolor;
			}
			set
			{
				if ((this._Bcolor != value))
				{
					this.OnBcolorChanging(value);
					this.SendPropertyChanging();
					this._Bcolor = value;
					this.SendPropertyChanged("Bcolor");
					this.OnBcolorChanged();
				}
			}
		}
		
		[Column(Storage="_StartTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartTime
		{
			get
			{
				return this._StartTime;
			}
			set
			{
				if ((this._StartTime != value))
				{
					this.OnStartTimeChanging(value);
					this.SendPropertyChanging();
					this._StartTime = value;
					this.SendPropertyChanged("StartTime");
					this.OnStartTimeChanged();
				}
			}
		}
		
		[Column(Storage="_STime", DbType="Decimal(15,1)")]
		public System.Nullable<decimal> STime
		{
			get
			{
				return this._STime;
			}
			set
			{
				if ((this._STime != value))
				{
					this.OnSTimeChanging(value);
					this.SendPropertyChanging();
					this._STime = value;
					this.SendPropertyChanged("STime");
					this.OnSTimeChanged();
				}
			}
		}
		
		[Column(Storage="_EndTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndTime
		{
			get
			{
				return this._EndTime;
			}
			set
			{
				if ((this._EndTime != value))
				{
					this.OnEndTimeChanging(value);
					this.SendPropertyChanging();
					this._EndTime = value;
					this.SendPropertyChanged("EndTime");
					this.OnEndTimeChanged();
				}
			}
		}
		
		[Column(Storage="_ETime", DbType="Decimal(15,1)")]
		public System.Nullable<decimal> ETime
		{
			get
			{
				return this._ETime;
			}
			set
			{
				if ((this._ETime != value))
				{
					this.OnETimeChanging(value);
					this.SendPropertyChanging();
					this._ETime = value;
					this.SendPropertyChanged("ETime");
					this.OnETimeChanged();
				}
			}
		}
		
		[Column(Storage="_Seq", DbType="Int")]
		public System.Nullable<int> Seq
		{
			get
			{
				return this._Seq;
			}
			set
			{
				if ((this._Seq != value))
				{
					this.OnSeqChanging(value);
					this.SendPropertyChanging();
					this._Seq = value;
					this.SendPropertyChanged("Seq");
					this.OnSeqChanged();
				}
			}
		}
		
		[Column(Storage="_Flag", DbType="NChar(10)")]
		public string Flag
		{
			get
			{
				return this._Flag;
			}
			set
			{
				if ((this._Flag != value))
				{
					this.OnFlagChanging(value);
					this.SendPropertyChanging();
					this._Flag = value;
					this.SendPropertyChanged("Flag");
					this.OnFlagChanged();
				}
			}
		}
		
		[Column(Storage="_IsConfirmed", DbType="Bit")]
		public System.Nullable<bool> IsConfirmed
		{
			get
			{
				return this._IsConfirmed;
			}
			set
			{
				if ((this._IsConfirmed != value))
				{
					this.OnIsConfirmedChanging(value);
					this.SendPropertyChanging();
					this._IsConfirmed = value;
					this.SendPropertyChanged("IsConfirmed");
					this.OnIsConfirmedChanged();
				}
			}
		}
		
		[Column(Storage="_ConfirmTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ConfirmTime
		{
			get
			{
				return this._ConfirmTime;
			}
			set
			{
				if ((this._ConfirmTime != value))
				{
					this.OnConfirmTimeChanging(value);
					this.SendPropertyChanging();
					this._ConfirmTime = value;
					this.SendPropertyChanged("ConfirmTime");
					this.OnConfirmTimeChanged();
				}
			}
		}
		
		[Column(Storage="_Location", DbType="NChar(10)")]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[Column(Storage="_Woc", DbType="NChar(10)")]
		public string Woc
		{
			get
			{
				return this._Woc;
			}
			set
			{
				if ((this._Woc != value))
				{
					this.OnWocChanging(value);
					this.SendPropertyChanging();
					this._Woc = value;
					this.SendPropertyChanged("Woc");
					this.OnWocChanged();
				}
			}
		}
		
		[Column(Storage="_Balance_LB4", DbType="Decimal(15,4)")]
		public System.Nullable<decimal> Balance_LB4
		{
			get
			{
				return this._Balance_LB4;
			}
			set
			{
				if ((this._Balance_LB4 != value))
				{
					this.OnBalance_LB4Changing(value);
					this.SendPropertyChanging();
					this._Balance_LB4 = value;
					this.SendPropertyChanged("Balance_LB4");
					this.OnBalance_LB4Changed();
				}
			}
		}
		
		[Column(Storage="_ToBeConfirmedFlag", DbType="Bit")]
		public System.Nullable<bool> ToBeConfirmedFlag
		{
			get
			{
				return this._ToBeConfirmedFlag;
			}
			set
			{
				if ((this._ToBeConfirmedFlag != value))
				{
					this.OnToBeConfirmedFlagChanging(value);
					this.SendPropertyChanging();
					this._ToBeConfirmedFlag = value;
					this.SendPropertyChanged("ToBeConfirmedFlag");
					this.OnToBeConfirmedFlagChanged();
				}
			}
		}
		
		[Column(Storage="_UpdateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateTime
		{
			get
			{
				return this._UpdateTime;
			}
			set
			{
				if ((this._UpdateTime != value))
				{
					this.OnUpdateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdateTime = value;
					this.SendPropertyChanged("UpdateTime");
					this.OnUpdateTimeChanged();
				}
			}
		}
		
		[Column(Storage="_IsBatchAdd", DbType="Bit")]
		public System.Nullable<bool> IsBatchAdd
		{
			get
			{
				return this._IsBatchAdd;
			}
			set
			{
				if ((this._IsBatchAdd != value))
				{
					this.OnIsBatchAddChanging(value);
					this.SendPropertyChanging();
					this._IsBatchAdd = value;
					this.SendPropertyChanged("IsBatchAdd");
					this.OnIsBatchAddChanged();
				}
			}
		}
		
		[Column(Storage="_ToBeConfirmedFlag_MC", DbType="Bit")]
		public System.Nullable<bool> ToBeConfirmedFlag_MC
		{
			get
			{
				return this._ToBeConfirmedFlag_MC;
			}
			set
			{
				if ((this._ToBeConfirmedFlag_MC != value))
				{
					this.OnToBeConfirmedFlag_MCChanging(value);
					this.SendPropertyChanging();
					this._ToBeConfirmedFlag_MC = value;
					this.SendPropertyChanged("ToBeConfirmedFlag_MC");
					this.OnToBeConfirmedFlag_MCChanged();
				}
			}
		}
		
		[Column(Storage="_QNQty", DbType="Int")]
		public System.Nullable<int> QNQty
		{
			get
			{
				return this._QNQty;
			}
			set
			{
				if ((this._QNQty != value))
				{
					this.OnQNQtyChanging(value);
					this.SendPropertyChanging();
					this._QNQty = value;
					this.SendPropertyChanged("QNQty");
					this.OnQNQtyChanged();
				}
			}
		}
		
		[Column(Storage="_Confirmer", DbType="VarChar(60)")]
		public string Confirmer
		{
			get
			{
				return this._Confirmer;
			}
			set
			{
				if ((this._Confirmer != value))
				{
					this.OnConfirmerChanging(value);
					this.SendPropertyChanging();
					this._Confirmer = value;
					this.SendPropertyChanged("Confirmer");
					this.OnConfirmerChanged();
				}
			}
		}
		
		[Column(Storage="_ToBeConfirmedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ToBeConfirmedDate
		{
			get
			{
				return this._ToBeConfirmedDate;
			}
			set
			{
				if ((this._ToBeConfirmedDate != value))
				{
					this.OnToBeConfirmedDateChanging(value);
					this.SendPropertyChanging();
					this._ToBeConfirmedDate = value;
					this.SendPropertyChanged("ToBeConfirmedDate");
					this.OnToBeConfirmedDateChanged();
				}
			}
		}
		
		[Column(Storage="_ToBeConfirmedDate_MC", DbType="DateTime")]
		public System.Nullable<System.DateTime> ToBeConfirmedDate_MC
		{
			get
			{
				return this._ToBeConfirmedDate_MC;
			}
			set
			{
				if ((this._ToBeConfirmedDate_MC != value))
				{
					this.OnToBeConfirmedDate_MCChanging(value);
					this.SendPropertyChanging();
					this._ToBeConfirmedDate_MC = value;
					this.SendPropertyChanged("ToBeConfirmedDate_MC");
					this.OnToBeConfirmedDate_MCChanged();
				}
			}
		}
		
		[Association(Name="WPMaster_PoolInfo", Storage="_PoolInfos", ThisKey="Factory,LineCode,j_NO,J2_job,Rwo,Qn,Bcolor", OtherKey="Factory,LineCode,j_NO,J2_job,Rwo,Qn,Bcolor")]
		public EntitySet<PoolInfo> PoolInfos
		{
			get
			{
				return this._PoolInfos;
			}
			set
			{
				this._PoolInfos.Assign(value);
			}
		}
		
		[Association(Name="WPMaster_Matching", Storage="_Matchings", ThisKey="Factory,LineCode,j_NO,J2_job,Rwo,Qn,Bcolor", OtherKey="Factory,LineCode,j_NO,J2_job,Rwo,Qn,Bcolor")]
		public EntitySet<Matching> Matchings
		{
			get
			{
				return this._Matchings;
			}
			set
			{
				this._Matchings.Assign(value);
			}
		}
		
		[Association(Name="WPMaster_LB5MatchingLog", Storage="_LB5MatchingLogs", ThisKey="Factory,LineCode,j_NO,J2_job,Rwo,Qn,Bcolor", OtherKey="Factory,LineCode,j_NO,J2_job,Rwo,Qn,Bcolor")]
		public EntitySet<LB5MatchingLog> LB5MatchingLogs
		{
			get
			{
				return this._LB5MatchingLogs;
			}
			set
			{
				this._LB5MatchingLogs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PoolInfos(PoolInfo entity)
		{
			this.SendPropertyChanging();
			entity.WPMaster = this;
		}
		
		private void detach_PoolInfos(PoolInfo entity)
		{
			this.SendPropertyChanging();
			entity.WPMaster = null;
		}
		
		private void attach_Matchings(Matching entity)
		{
			this.SendPropertyChanging();
			entity.WPMaster = this;
		}
		
		private void detach_Matchings(Matching entity)
		{
			this.SendPropertyChanging();
			entity.WPMaster = null;
		}
		
		private void attach_LB5MatchingLogs(LB5MatchingLog entity)
		{
			this.SendPropertyChanging();
			entity.WPMaster = this;
		}
		
		private void detach_LB5MatchingLogs(LB5MatchingLog entity)
		{
			this.SendPropertyChanging();
			entity.WPMaster = null;
		}
	}
	
	[Table(Name="dbo.BaseCode")]
	public partial class BaseCode : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Type;
		
		private string _Code;
		
		private string _Name;
		
		private string _Description;
		
		private string _Lang;
		
		private string _NameBd;
		
		private string _ParentCode;
		
		private string _SortID;
		
		private string _HSCode;
		
		private string _NameEN;
		
		private string _ExtraField1;
		
		private EntitySet<McClassDetail> _McClassDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnLangChanging(string value);
    partial void OnLangChanged();
    partial void OnNameBdChanging(string value);
    partial void OnNameBdChanged();
    partial void OnParentCodeChanging(string value);
    partial void OnParentCodeChanged();
    partial void OnSortIDChanging(string value);
    partial void OnSortIDChanged();
    partial void OnHSCodeChanging(string value);
    partial void OnHSCodeChanged();
    partial void OnNameENChanging(string value);
    partial void OnNameENChanged();
    partial void OnExtraField1Changing(string value);
    partial void OnExtraField1Changed();
    #endregion
		
		public BaseCode()
		{
			this._McClassDetails = new EntitySet<McClassDetail>(new Action<McClassDetail>(this.attach_McClassDetails), new Action<McClassDetail>(this.detach_McClassDetails));
			OnCreated();
		}
		
		[Column(Storage="_Type", DbType="NVarChar(50)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[Column(Storage="_Code", DbType="VarChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Name", DbType="NVarChar(200)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[Column(Storage="_Description", DbType="NVarChar(150)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_Lang", DbType="NVarChar(30)")]
		public string Lang
		{
			get
			{
				return this._Lang;
			}
			set
			{
				if ((this._Lang != value))
				{
					this.OnLangChanging(value);
					this.SendPropertyChanging();
					this._Lang = value;
					this.SendPropertyChanged("Lang");
					this.OnLangChanged();
				}
			}
		}
		
		[Column(Storage="_NameBd", DbType="NVarChar(200)")]
		public string NameBd
		{
			get
			{
				return this._NameBd;
			}
			set
			{
				if ((this._NameBd != value))
				{
					this.OnNameBdChanging(value);
					this.SendPropertyChanging();
					this._NameBd = value;
					this.SendPropertyChanged("NameBd");
					this.OnNameBdChanged();
				}
			}
		}
		
		[Column(Storage="_ParentCode", DbType="VarChar(15)")]
		public string ParentCode
		{
			get
			{
				return this._ParentCode;
			}
			set
			{
				if ((this._ParentCode != value))
				{
					this.OnParentCodeChanging(value);
					this.SendPropertyChanging();
					this._ParentCode = value;
					this.SendPropertyChanged("ParentCode");
					this.OnParentCodeChanged();
				}
			}
		}
		
		[Column(Storage="_SortID", DbType="VarChar(10)")]
		public string SortID
		{
			get
			{
				return this._SortID;
			}
			set
			{
				if ((this._SortID != value))
				{
					this.OnSortIDChanging(value);
					this.SendPropertyChanging();
					this._SortID = value;
					this.SendPropertyChanged("SortID");
					this.OnSortIDChanged();
				}
			}
		}
		
		[Column(Storage="_HSCode", DbType="NVarChar(100)")]
		public string HSCode
		{
			get
			{
				return this._HSCode;
			}
			set
			{
				if ((this._HSCode != value))
				{
					this.OnHSCodeChanging(value);
					this.SendPropertyChanging();
					this._HSCode = value;
					this.SendPropertyChanged("HSCode");
					this.OnHSCodeChanged();
				}
			}
		}
		
		[Column(Storage="_NameEN", DbType="NVarChar(300)")]
		public string NameEN
		{
			get
			{
				return this._NameEN;
			}
			set
			{
				if ((this._NameEN != value))
				{
					this.OnNameENChanging(value);
					this.SendPropertyChanging();
					this._NameEN = value;
					this.SendPropertyChanged("NameEN");
					this.OnNameENChanged();
				}
			}
		}
		
		[Column(Storage="_ExtraField1", DbType="NVarChar(300)")]
		public string ExtraField1
		{
			get
			{
				return this._ExtraField1;
			}
			set
			{
				if ((this._ExtraField1 != value))
				{
					this.OnExtraField1Changing(value);
					this.SendPropertyChanging();
					this._ExtraField1 = value;
					this.SendPropertyChanged("ExtraField1");
					this.OnExtraField1Changed();
				}
			}
		}
		
		[Association(Name="BaseCode_McClassDetail", Storage="_McClassDetails", ThisKey="Code", OtherKey="Code")]
		public EntitySet<McClassDetail> McClassDetails
		{
			get
			{
				return this._McClassDetails;
			}
			set
			{
				this._McClassDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_McClassDetails(McClassDetail entity)
		{
			this.SendPropertyChanging();
			entity.BaseCode = this;
		}
		
		private void detach_McClassDetails(McClassDetail entity)
		{
			this.SendPropertyChanging();
			entity.BaseCode = null;
		}
	}
	
	[Table(Name="dbo.Lb5Matching")]
	public partial class Lb5Matching : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Factory;
		
		private string _LineCode;
		
		private string _j_NO;
		
		private string _J2_job;
		
		private string _Rwo;
		
		private string _Qn;
		
		private System.DateTime _Date;
		
		private string _OTN;
		
		private int _WPSN;
		
		private System.Nullable<int> _OperationSN;
		
		private string _OperationGroup;
		
		private string _OperationCode;
		
		private string _OperationName;
		
		private string _MCType;
		
		private System.Nullable<decimal> _GSD_SAH;
		
		private System.Nullable<decimal> _BestSAH;
		
		private System.Nullable<int> _BestMTM;
		
		private System.Nullable<decimal> _WorkforceNum;
		
		private string _Rpm;
		
		private string _WorkerName;
		
		private string _WorkerId;
		
		private string _WorkStyle;
		
		private string _MachineId;
		
		private string _addworker1;
		
		private string _addworkerId1;
		
		private string _addWorkStyle1;
		
		private string _addMachineId1;
		
		private string _addworker2;
		
		private string _addworkerId2;
		
		private string _addWorkStyle2;
		
		private string _addMachineId2;
		
		private string _addworker3;
		
		private string _addworkerId3;
		
		private string _addWorkStyle3;
		
		private string _addMachineId3;
		
		private string _Rpm0;
		
		private string _addRpm1;
		
		private string _addRpm2;
		
		private string _addRpm3;
		
		private string _Bcolor;
		
		private System.Nullable<bool> _mc;
		
		private string _JFlag;
		
		private System.Nullable<System.DateTime> _UpdateTime;
		
		private string _oldFactory;
		
		private string _oldMachineId;
		
		private string _FAE;
		
		private System.Nullable<decimal> _Mtm_Past;
		
		private System.Nullable<decimal> _Mtm_Suggest;
		
		private System.Nullable<int> _WKStaitonCount;
		
		private System.Nullable<int> _WKStaitonSeq;
		
		private System.Nullable<bool> _IsFloater;
		
		private string _BN_Seq;
		
		private string _BN_Seq_LB3;
		
		private System.Nullable<int> _StaitonCount_LB3;
		
		private System.Nullable<int> _WKStaitonSeq_LB3;
		
		private string _WFCode_LB3;
		
		private string _Move;
		
		private System.Nullable<decimal> _CWorkSN;
		
		private System.Nullable<decimal> _JWorkSN;
		
		private System.Nullable<int> _GZW;
		
		private string _Move_LB3;
		
		private System.Nullable<decimal> _CWorkSN_LB3;
		
		private System.Nullable<decimal> _JWorkSN_LB3;
		
		private System.Nullable<int> _GZW_LB3;
		
		private System.Nullable<bool> _Agree;
		
		private EntityRef<LB5MatchingProposal> _LB5MatchingProposal;
		
		private EntityRef<PoolInfo> _PoolInfo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFactoryChanging(string value);
    partial void OnFactoryChanged();
    partial void OnLineCodeChanging(string value);
    partial void OnLineCodeChanged();
    partial void Onj_NOChanging(string value);
    partial void Onj_NOChanged();
    partial void OnJ2_jobChanging(string value);
    partial void OnJ2_jobChanged();
    partial void OnRwoChanging(string value);
    partial void OnRwoChanged();
    partial void OnQnChanging(string value);
    partial void OnQnChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnOTNChanging(string value);
    partial void OnOTNChanged();
    partial void OnWPSNChanging(int value);
    partial void OnWPSNChanged();
    partial void OnOperationSNChanging(System.Nullable<int> value);
    partial void OnOperationSNChanged();
    partial void OnOperationGroupChanging(string value);
    partial void OnOperationGroupChanged();
    partial void OnOperationCodeChanging(string value);
    partial void OnOperationCodeChanged();
    partial void OnOperationNameChanging(string value);
    partial void OnOperationNameChanged();
    partial void OnMCTypeChanging(string value);
    partial void OnMCTypeChanged();
    partial void OnGSD_SAHChanging(System.Nullable<decimal> value);
    partial void OnGSD_SAHChanged();
    partial void OnBestSAHChanging(System.Nullable<decimal> value);
    partial void OnBestSAHChanged();
    partial void OnBestMTMChanging(System.Nullable<int> value);
    partial void OnBestMTMChanged();
    partial void OnWorkforceNumChanging(System.Nullable<decimal> value);
    partial void OnWorkforceNumChanged();
    partial void OnRpmChanging(string value);
    partial void OnRpmChanged();
    partial void OnWorkerNameChanging(string value);
    partial void OnWorkerNameChanged();
    partial void OnWorkerIdChanging(string value);
    partial void OnWorkerIdChanged();
    partial void OnWorkStyleChanging(string value);
    partial void OnWorkStyleChanged();
    partial void OnMachineIdChanging(string value);
    partial void OnMachineIdChanged();
    partial void Onaddworker1Changing(string value);
    partial void Onaddworker1Changed();
    partial void OnaddworkerId1Changing(string value);
    partial void OnaddworkerId1Changed();
    partial void OnaddWorkStyle1Changing(string value);
    partial void OnaddWorkStyle1Changed();
    partial void OnaddMachineId1Changing(string value);
    partial void OnaddMachineId1Changed();
    partial void Onaddworker2Changing(string value);
    partial void Onaddworker2Changed();
    partial void OnaddworkerId2Changing(string value);
    partial void OnaddworkerId2Changed();
    partial void OnaddWorkStyle2Changing(string value);
    partial void OnaddWorkStyle2Changed();
    partial void OnaddMachineId2Changing(string value);
    partial void OnaddMachineId2Changed();
    partial void Onaddworker3Changing(string value);
    partial void Onaddworker3Changed();
    partial void OnaddworkerId3Changing(string value);
    partial void OnaddworkerId3Changed();
    partial void OnaddWorkStyle3Changing(string value);
    partial void OnaddWorkStyle3Changed();
    partial void OnaddMachineId3Changing(string value);
    partial void OnaddMachineId3Changed();
    partial void OnRpm0Changing(string value);
    partial void OnRpm0Changed();
    partial void OnaddRpm1Changing(string value);
    partial void OnaddRpm1Changed();
    partial void OnaddRpm2Changing(string value);
    partial void OnaddRpm2Changed();
    partial void OnaddRpm3Changing(string value);
    partial void OnaddRpm3Changed();
    partial void OnBcolorChanging(string value);
    partial void OnBcolorChanged();
    partial void OnmcChanging(System.Nullable<bool> value);
    partial void OnmcChanged();
    partial void OnJFlagChanging(string value);
    partial void OnJFlagChanged();
    partial void OnUpdateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateTimeChanged();
    partial void OnoldFactoryChanging(string value);
    partial void OnoldFactoryChanged();
    partial void OnoldMachineIdChanging(string value);
    partial void OnoldMachineIdChanged();
    partial void OnFAEChanging(string value);
    partial void OnFAEChanged();
    partial void OnMtm_PastChanging(System.Nullable<decimal> value);
    partial void OnMtm_PastChanged();
    partial void OnMtm_SuggestChanging(System.Nullable<decimal> value);
    partial void OnMtm_SuggestChanged();
    partial void OnWKStaitonCountChanging(System.Nullable<int> value);
    partial void OnWKStaitonCountChanged();
    partial void OnWKStaitonSeqChanging(System.Nullable<int> value);
    partial void OnWKStaitonSeqChanged();
    partial void OnIsFloaterChanging(System.Nullable<bool> value);
    partial void OnIsFloaterChanged();
    partial void OnBN_SeqChanging(string value);
    partial void OnBN_SeqChanged();
    partial void OnBN_Seq_LB3Changing(string value);
    partial void OnBN_Seq_LB3Changed();
    partial void OnStaitonCount_LB3Changing(System.Nullable<int> value);
    partial void OnStaitonCount_LB3Changed();
    partial void OnWKStaitonSeq_LB3Changing(System.Nullable<int> value);
    partial void OnWKStaitonSeq_LB3Changed();
    partial void OnWFCode_LB3Changing(string value);
    partial void OnWFCode_LB3Changed();
    partial void OnMoveChanging(string value);
    partial void OnMoveChanged();
    partial void OnCWorkSNChanging(System.Nullable<decimal> value);
    partial void OnCWorkSNChanged();
    partial void OnJWorkSNChanging(System.Nullable<decimal> value);
    partial void OnJWorkSNChanged();
    partial void OnGZWChanging(System.Nullable<int> value);
    partial void OnGZWChanged();
    partial void OnMove_LB3Changing(string value);
    partial void OnMove_LB3Changed();
    partial void OnCWorkSN_LB3Changing(System.Nullable<decimal> value);
    partial void OnCWorkSN_LB3Changed();
    partial void OnJWorkSN_LB3Changing(System.Nullable<decimal> value);
    partial void OnJWorkSN_LB3Changed();
    partial void OnGZW_LB3Changing(System.Nullable<int> value);
    partial void OnGZW_LB3Changed();
    partial void OnAgreeChanging(System.Nullable<bool> value);
    partial void OnAgreeChanged();
    #endregion
		
		public Lb5Matching()
		{
			this._LB5MatchingProposal = default(EntityRef<LB5MatchingProposal>);
			this._PoolInfo = default(EntityRef<PoolInfo>);
			OnCreated();
		}
		
		[Column(Storage="_Factory", DbType="NChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Factory
		{
			get
			{
				return this._Factory;
			}
			set
			{
				if ((this._Factory != value))
				{
					if (this._PoolInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFactoryChanging(value);
					this.SendPropertyChanging();
					this._Factory = value;
					this.SendPropertyChanged("Factory");
					this.OnFactoryChanged();
				}
			}
		}
		
		[Column(Storage="_LineCode", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string LineCode
		{
			get
			{
				return this._LineCode;
			}
			set
			{
				if ((this._LineCode != value))
				{
					if (this._PoolInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLineCodeChanging(value);
					this.SendPropertyChanging();
					this._LineCode = value;
					this.SendPropertyChanged("LineCode");
					this.OnLineCodeChanged();
				}
			}
		}
		
		[Column(Storage="_j_NO", DbType="NChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string j_NO
		{
			get
			{
				return this._j_NO;
			}
			set
			{
				if ((this._j_NO != value))
				{
					if (this._PoolInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onj_NOChanging(value);
					this.SendPropertyChanging();
					this._j_NO = value;
					this.SendPropertyChanged("j_NO");
					this.Onj_NOChanged();
				}
			}
		}
		
		[Column(Storage="_J2_job", DbType="NChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string J2_job
		{
			get
			{
				return this._J2_job;
			}
			set
			{
				if ((this._J2_job != value))
				{
					if (this._PoolInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJ2_jobChanging(value);
					this.SendPropertyChanging();
					this._J2_job = value;
					this.SendPropertyChanged("J2_job");
					this.OnJ2_jobChanged();
				}
			}
		}
		
		[Column(Storage="_Rwo", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Rwo
		{
			get
			{
				return this._Rwo;
			}
			set
			{
				if ((this._Rwo != value))
				{
					if (this._PoolInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRwoChanging(value);
					this.SendPropertyChanging();
					this._Rwo = value;
					this.SendPropertyChanged("Rwo");
					this.OnRwoChanged();
				}
			}
		}
		
		[Column(Storage="_Qn", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Qn
		{
			get
			{
				return this._Qn;
			}
			set
			{
				if ((this._Qn != value))
				{
					if (this._PoolInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQnChanging(value);
					this.SendPropertyChanging();
					this._Qn = value;
					this.SendPropertyChanged("Qn");
					this.OnQnChanged();
				}
			}
		}
		
		[Column(Storage="_Date", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					if (this._PoolInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[Column(Storage="_OTN", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string OTN
		{
			get
			{
				return this._OTN;
			}
			set
			{
				if ((this._OTN != value))
				{
					if (this._PoolInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOTNChanging(value);
					this.SendPropertyChanging();
					this._OTN = value;
					this.SendPropertyChanged("OTN");
					this.OnOTNChanged();
				}
			}
		}
		
		[Column(Storage="_WPSN", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int WPSN
		{
			get
			{
				return this._WPSN;
			}
			set
			{
				if ((this._WPSN != value))
				{
					this.OnWPSNChanging(value);
					this.SendPropertyChanging();
					this._WPSN = value;
					this.SendPropertyChanged("WPSN");
					this.OnWPSNChanged();
				}
			}
		}
		
		[Column(Storage="_OperationSN", DbType="Int")]
		public System.Nullable<int> OperationSN
		{
			get
			{
				return this._OperationSN;
			}
			set
			{
				if ((this._OperationSN != value))
				{
					this.OnOperationSNChanging(value);
					this.SendPropertyChanging();
					this._OperationSN = value;
					this.SendPropertyChanged("OperationSN");
					this.OnOperationSNChanged();
				}
			}
		}
		
		[Column(Storage="_OperationGroup", DbType="NChar(10)")]
		public string OperationGroup
		{
			get
			{
				return this._OperationGroup;
			}
			set
			{
				if ((this._OperationGroup != value))
				{
					this.OnOperationGroupChanging(value);
					this.SendPropertyChanging();
					this._OperationGroup = value;
					this.SendPropertyChanged("OperationGroup");
					this.OnOperationGroupChanged();
				}
			}
		}
		
		[Column(Storage="_OperationCode", DbType="NChar(10)")]
		public string OperationCode
		{
			get
			{
				return this._OperationCode;
			}
			set
			{
				if ((this._OperationCode != value))
				{
					this.OnOperationCodeChanging(value);
					this.SendPropertyChanging();
					this._OperationCode = value;
					this.SendPropertyChanged("OperationCode");
					this.OnOperationCodeChanged();
				}
			}
		}
		
		[Column(Storage="_OperationName", DbType="NChar(100)")]
		public string OperationName
		{
			get
			{
				return this._OperationName;
			}
			set
			{
				if ((this._OperationName != value))
				{
					this.OnOperationNameChanging(value);
					this.SendPropertyChanging();
					this._OperationName = value;
					this.SendPropertyChanged("OperationName");
					this.OnOperationNameChanged();
				}
			}
		}
		
		[Column(Storage="_MCType", DbType="NChar(10)")]
		public string MCType
		{
			get
			{
				return this._MCType;
			}
			set
			{
				if ((this._MCType != value))
				{
					this.OnMCTypeChanging(value);
					this.SendPropertyChanging();
					this._MCType = value;
					this.SendPropertyChanged("MCType");
					this.OnMCTypeChanged();
				}
			}
		}
		
		[Column(Storage="_GSD_SAH", DbType="Decimal(15,4)")]
		public System.Nullable<decimal> GSD_SAH
		{
			get
			{
				return this._GSD_SAH;
			}
			set
			{
				if ((this._GSD_SAH != value))
				{
					this.OnGSD_SAHChanging(value);
					this.SendPropertyChanging();
					this._GSD_SAH = value;
					this.SendPropertyChanged("GSD_SAH");
					this.OnGSD_SAHChanged();
				}
			}
		}
		
		[Column(Storage="_BestSAH", DbType="Decimal(15,4)")]
		public System.Nullable<decimal> BestSAH
		{
			get
			{
				return this._BestSAH;
			}
			set
			{
				if ((this._BestSAH != value))
				{
					this.OnBestSAHChanging(value);
					this.SendPropertyChanging();
					this._BestSAH = value;
					this.SendPropertyChanged("BestSAH");
					this.OnBestSAHChanged();
				}
			}
		}
		
		[Column(Storage="_BestMTM", DbType="Int")]
		public System.Nullable<int> BestMTM
		{
			get
			{
				return this._BestMTM;
			}
			set
			{
				if ((this._BestMTM != value))
				{
					this.OnBestMTMChanging(value);
					this.SendPropertyChanging();
					this._BestMTM = value;
					this.SendPropertyChanged("BestMTM");
					this.OnBestMTMChanged();
				}
			}
		}
		
		[Column(Storage="_WorkforceNum", DbType="Decimal(15,4)")]
		public System.Nullable<decimal> WorkforceNum
		{
			get
			{
				return this._WorkforceNum;
			}
			set
			{
				if ((this._WorkforceNum != value))
				{
					this.OnWorkforceNumChanging(value);
					this.SendPropertyChanging();
					this._WorkforceNum = value;
					this.SendPropertyChanged("WorkforceNum");
					this.OnWorkforceNumChanged();
				}
			}
		}
		
		[Column(Storage="_Rpm", DbType="VarChar(50)")]
		public string Rpm
		{
			get
			{
				return this._Rpm;
			}
			set
			{
				if ((this._Rpm != value))
				{
					this.OnRpmChanging(value);
					this.SendPropertyChanging();
					this._Rpm = value;
					this.SendPropertyChanged("Rpm");
					this.OnRpmChanged();
				}
			}
		}
		
		[Column(Storage="_WorkerName", DbType="NVarChar(50)")]
		public string WorkerName
		{
			get
			{
				return this._WorkerName;
			}
			set
			{
				if ((this._WorkerName != value))
				{
					this.OnWorkerNameChanging(value);
					this.SendPropertyChanging();
					this._WorkerName = value;
					this.SendPropertyChanged("WorkerName");
					this.OnWorkerNameChanged();
				}
			}
		}
		
		[Column(Storage="_WorkerId", DbType="VarChar(50)")]
		public string WorkerId
		{
			get
			{
				return this._WorkerId;
			}
			set
			{
				if ((this._WorkerId != value))
				{
					this.OnWorkerIdChanging(value);
					this.SendPropertyChanging();
					this._WorkerId = value;
					this.SendPropertyChanged("WorkerId");
					this.OnWorkerIdChanged();
				}
			}
		}
		
		[Column(Storage="_WorkStyle", DbType="VarChar(50)")]
		public string WorkStyle
		{
			get
			{
				return this._WorkStyle;
			}
			set
			{
				if ((this._WorkStyle != value))
				{
					this.OnWorkStyleChanging(value);
					this.SendPropertyChanging();
					this._WorkStyle = value;
					this.SendPropertyChanged("WorkStyle");
					this.OnWorkStyleChanged();
				}
			}
		}
		
		[Column(Storage="_MachineId", DbType="VarChar(50)")]
		public string MachineId
		{
			get
			{
				return this._MachineId;
			}
			set
			{
				if ((this._MachineId != value))
				{
					this.OnMachineIdChanging(value);
					this.SendPropertyChanging();
					this._MachineId = value;
					this.SendPropertyChanged("MachineId");
					this.OnMachineIdChanged();
				}
			}
		}
		
		[Column(Storage="_addworker1", DbType="NVarChar(50)")]
		public string addworker1
		{
			get
			{
				return this._addworker1;
			}
			set
			{
				if ((this._addworker1 != value))
				{
					this.Onaddworker1Changing(value);
					this.SendPropertyChanging();
					this._addworker1 = value;
					this.SendPropertyChanged("addworker1");
					this.Onaddworker1Changed();
				}
			}
		}
		
		[Column(Storage="_addworkerId1", DbType="VarChar(50)")]
		public string addworkerId1
		{
			get
			{
				return this._addworkerId1;
			}
			set
			{
				if ((this._addworkerId1 != value))
				{
					this.OnaddworkerId1Changing(value);
					this.SendPropertyChanging();
					this._addworkerId1 = value;
					this.SendPropertyChanged("addworkerId1");
					this.OnaddworkerId1Changed();
				}
			}
		}
		
		[Column(Storage="_addWorkStyle1", DbType="VarChar(50)")]
		public string addWorkStyle1
		{
			get
			{
				return this._addWorkStyle1;
			}
			set
			{
				if ((this._addWorkStyle1 != value))
				{
					this.OnaddWorkStyle1Changing(value);
					this.SendPropertyChanging();
					this._addWorkStyle1 = value;
					this.SendPropertyChanged("addWorkStyle1");
					this.OnaddWorkStyle1Changed();
				}
			}
		}
		
		[Column(Storage="_addMachineId1", DbType="VarChar(50)")]
		public string addMachineId1
		{
			get
			{
				return this._addMachineId1;
			}
			set
			{
				if ((this._addMachineId1 != value))
				{
					this.OnaddMachineId1Changing(value);
					this.SendPropertyChanging();
					this._addMachineId1 = value;
					this.SendPropertyChanged("addMachineId1");
					this.OnaddMachineId1Changed();
				}
			}
		}
		
		[Column(Storage="_addworker2", DbType="NVarChar(50)")]
		public string addworker2
		{
			get
			{
				return this._addworker2;
			}
			set
			{
				if ((this._addworker2 != value))
				{
					this.Onaddworker2Changing(value);
					this.SendPropertyChanging();
					this._addworker2 = value;
					this.SendPropertyChanged("addworker2");
					this.Onaddworker2Changed();
				}
			}
		}
		
		[Column(Storage="_addworkerId2", DbType="VarChar(50)")]
		public string addworkerId2
		{
			get
			{
				return this._addworkerId2;
			}
			set
			{
				if ((this._addworkerId2 != value))
				{
					this.OnaddworkerId2Changing(value);
					this.SendPropertyChanging();
					this._addworkerId2 = value;
					this.SendPropertyChanged("addworkerId2");
					this.OnaddworkerId2Changed();
				}
			}
		}
		
		[Column(Storage="_addWorkStyle2", DbType="VarChar(50)")]
		public string addWorkStyle2
		{
			get
			{
				return this._addWorkStyle2;
			}
			set
			{
				if ((this._addWorkStyle2 != value))
				{
					this.OnaddWorkStyle2Changing(value);
					this.SendPropertyChanging();
					this._addWorkStyle2 = value;
					this.SendPropertyChanged("addWorkStyle2");
					this.OnaddWorkStyle2Changed();
				}
			}
		}
		
		[Column(Storage="_addMachineId2", DbType="VarChar(50)")]
		public string addMachineId2
		{
			get
			{
				return this._addMachineId2;
			}
			set
			{
				if ((this._addMachineId2 != value))
				{
					this.OnaddMachineId2Changing(value);
					this.SendPropertyChanging();
					this._addMachineId2 = value;
					this.SendPropertyChanged("addMachineId2");
					this.OnaddMachineId2Changed();
				}
			}
		}
		
		[Column(Storage="_addworker3", DbType="NVarChar(50)")]
		public string addworker3
		{
			get
			{
				return this._addworker3;
			}
			set
			{
				if ((this._addworker3 != value))
				{
					this.Onaddworker3Changing(value);
					this.SendPropertyChanging();
					this._addworker3 = value;
					this.SendPropertyChanged("addworker3");
					this.Onaddworker3Changed();
				}
			}
		}
		
		[Column(Storage="_addworkerId3", DbType="VarChar(50)")]
		public string addworkerId3
		{
			get
			{
				return this._addworkerId3;
			}
			set
			{
				if ((this._addworkerId3 != value))
				{
					this.OnaddworkerId3Changing(value);
					this.SendPropertyChanging();
					this._addworkerId3 = value;
					this.SendPropertyChanged("addworkerId3");
					this.OnaddworkerId3Changed();
				}
			}
		}
		
		[Column(Storage="_addWorkStyle3", DbType="VarChar(50)")]
		public string addWorkStyle3
		{
			get
			{
				return this._addWorkStyle3;
			}
			set
			{
				if ((this._addWorkStyle3 != value))
				{
					this.OnaddWorkStyle3Changing(value);
					this.SendPropertyChanging();
					this._addWorkStyle3 = value;
					this.SendPropertyChanged("addWorkStyle3");
					this.OnaddWorkStyle3Changed();
				}
			}
		}
		
		[Column(Storage="_addMachineId3", DbType="VarChar(50)")]
		public string addMachineId3
		{
			get
			{
				return this._addMachineId3;
			}
			set
			{
				if ((this._addMachineId3 != value))
				{
					this.OnaddMachineId3Changing(value);
					this.SendPropertyChanging();
					this._addMachineId3 = value;
					this.SendPropertyChanged("addMachineId3");
					this.OnaddMachineId3Changed();
				}
			}
		}
		
		[Column(Storage="_Rpm0", DbType="VarChar(50)")]
		public string Rpm0
		{
			get
			{
				return this._Rpm0;
			}
			set
			{
				if ((this._Rpm0 != value))
				{
					this.OnRpm0Changing(value);
					this.SendPropertyChanging();
					this._Rpm0 = value;
					this.SendPropertyChanged("Rpm0");
					this.OnRpm0Changed();
				}
			}
		}
		
		[Column(Storage="_addRpm1", DbType="VarChar(50)")]
		public string addRpm1
		{
			get
			{
				return this._addRpm1;
			}
			set
			{
				if ((this._addRpm1 != value))
				{
					this.OnaddRpm1Changing(value);
					this.SendPropertyChanging();
					this._addRpm1 = value;
					this.SendPropertyChanged("addRpm1");
					this.OnaddRpm1Changed();
				}
			}
		}
		
		[Column(Storage="_addRpm2", DbType="VarChar(50)")]
		public string addRpm2
		{
			get
			{
				return this._addRpm2;
			}
			set
			{
				if ((this._addRpm2 != value))
				{
					this.OnaddRpm2Changing(value);
					this.SendPropertyChanging();
					this._addRpm2 = value;
					this.SendPropertyChanged("addRpm2");
					this.OnaddRpm2Changed();
				}
			}
		}
		
		[Column(Storage="_addRpm3", DbType="VarChar(50)")]
		public string addRpm3
		{
			get
			{
				return this._addRpm3;
			}
			set
			{
				if ((this._addRpm3 != value))
				{
					this.OnaddRpm3Changing(value);
					this.SendPropertyChanging();
					this._addRpm3 = value;
					this.SendPropertyChanged("addRpm3");
					this.OnaddRpm3Changed();
				}
			}
		}
		
		[Column(Storage="_Bcolor", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Bcolor
		{
			get
			{
				return this._Bcolor;
			}
			set
			{
				if ((this._Bcolor != value))
				{
					if (this._PoolInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBcolorChanging(value);
					this.SendPropertyChanging();
					this._Bcolor = value;
					this.SendPropertyChanged("Bcolor");
					this.OnBcolorChanged();
				}
			}
		}
		
		[Column(Storage="_mc", DbType="Bit")]
		public System.Nullable<bool> mc
		{
			get
			{
				return this._mc;
			}
			set
			{
				if ((this._mc != value))
				{
					this.OnmcChanging(value);
					this.SendPropertyChanging();
					this._mc = value;
					this.SendPropertyChanged("mc");
					this.OnmcChanged();
				}
			}
		}
		
		[Column(Storage="_JFlag", DbType="VarChar(50)")]
		public string JFlag
		{
			get
			{
				return this._JFlag;
			}
			set
			{
				if ((this._JFlag != value))
				{
					this.OnJFlagChanging(value);
					this.SendPropertyChanging();
					this._JFlag = value;
					this.SendPropertyChanged("JFlag");
					this.OnJFlagChanged();
				}
			}
		}
		
		[Column(Storage="_UpdateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateTime
		{
			get
			{
				return this._UpdateTime;
			}
			set
			{
				if ((this._UpdateTime != value))
				{
					this.OnUpdateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdateTime = value;
					this.SendPropertyChanged("UpdateTime");
					this.OnUpdateTimeChanged();
				}
			}
		}
		
		[Column(Storage="_oldFactory", DbType="NChar(5)")]
		public string oldFactory
		{
			get
			{
				return this._oldFactory;
			}
			set
			{
				if ((this._oldFactory != value))
				{
					this.OnoldFactoryChanging(value);
					this.SendPropertyChanging();
					this._oldFactory = value;
					this.SendPropertyChanged("oldFactory");
					this.OnoldFactoryChanged();
				}
			}
		}
		
		[Column(Storage="_oldMachineId", DbType="VarChar(50)")]
		public string oldMachineId
		{
			get
			{
				return this._oldMachineId;
			}
			set
			{
				if ((this._oldMachineId != value))
				{
					this.OnoldMachineIdChanging(value);
					this.SendPropertyChanging();
					this._oldMachineId = value;
					this.SendPropertyChanged("oldMachineId");
					this.OnoldMachineIdChanged();
				}
			}
		}
		
		[Column(Storage="_FAE", DbType="VarChar(10)")]
		public string FAE
		{
			get
			{
				return this._FAE;
			}
			set
			{
				if ((this._FAE != value))
				{
					this.OnFAEChanging(value);
					this.SendPropertyChanging();
					this._FAE = value;
					this.SendPropertyChanged("FAE");
					this.OnFAEChanged();
				}
			}
		}
		
		[Column(Storage="_Mtm_Past", DbType="Decimal(5,1)")]
		public System.Nullable<decimal> Mtm_Past
		{
			get
			{
				return this._Mtm_Past;
			}
			set
			{
				if ((this._Mtm_Past != value))
				{
					this.OnMtm_PastChanging(value);
					this.SendPropertyChanging();
					this._Mtm_Past = value;
					this.SendPropertyChanged("Mtm_Past");
					this.OnMtm_PastChanged();
				}
			}
		}
		
		[Column(Storage="_Mtm_Suggest", DbType="Decimal(5,1)")]
		public System.Nullable<decimal> Mtm_Suggest
		{
			get
			{
				return this._Mtm_Suggest;
			}
			set
			{
				if ((this._Mtm_Suggest != value))
				{
					this.OnMtm_SuggestChanging(value);
					this.SendPropertyChanging();
					this._Mtm_Suggest = value;
					this.SendPropertyChanged("Mtm_Suggest");
					this.OnMtm_SuggestChanged();
				}
			}
		}
		
		[Column(Storage="_WKStaitonCount", DbType="Int")]
		public System.Nullable<int> WKStaitonCount
		{
			get
			{
				return this._WKStaitonCount;
			}
			set
			{
				if ((this._WKStaitonCount != value))
				{
					this.OnWKStaitonCountChanging(value);
					this.SendPropertyChanging();
					this._WKStaitonCount = value;
					this.SendPropertyChanged("WKStaitonCount");
					this.OnWKStaitonCountChanged();
				}
			}
		}
		
		[Column(Storage="_WKStaitonSeq", DbType="Int")]
		public System.Nullable<int> WKStaitonSeq
		{
			get
			{
				return this._WKStaitonSeq;
			}
			set
			{
				if ((this._WKStaitonSeq != value))
				{
					this.OnWKStaitonSeqChanging(value);
					this.SendPropertyChanging();
					this._WKStaitonSeq = value;
					this.SendPropertyChanged("WKStaitonSeq");
					this.OnWKStaitonSeqChanged();
				}
			}
		}
		
		[Column(Storage="_IsFloater", DbType="Bit")]
		public System.Nullable<bool> IsFloater
		{
			get
			{
				return this._IsFloater;
			}
			set
			{
				if ((this._IsFloater != value))
				{
					this.OnIsFloaterChanging(value);
					this.SendPropertyChanging();
					this._IsFloater = value;
					this.SendPropertyChanged("IsFloater");
					this.OnIsFloaterChanged();
				}
			}
		}
		
		[Column(Storage="_BN_Seq", DbType="VarChar(50)")]
		public string BN_Seq
		{
			get
			{
				return this._BN_Seq;
			}
			set
			{
				if ((this._BN_Seq != value))
				{
					this.OnBN_SeqChanging(value);
					this.SendPropertyChanging();
					this._BN_Seq = value;
					this.SendPropertyChanged("BN_Seq");
					this.OnBN_SeqChanged();
				}
			}
		}
		
		[Column(Storage="_BN_Seq_LB3", DbType="VarChar(50)")]
		public string BN_Seq_LB3
		{
			get
			{
				return this._BN_Seq_LB3;
			}
			set
			{
				if ((this._BN_Seq_LB3 != value))
				{
					this.OnBN_Seq_LB3Changing(value);
					this.SendPropertyChanging();
					this._BN_Seq_LB3 = value;
					this.SendPropertyChanged("BN_Seq_LB3");
					this.OnBN_Seq_LB3Changed();
				}
			}
		}
		
		[Column(Storage="_StaitonCount_LB3", DbType="Int")]
		public System.Nullable<int> StaitonCount_LB3
		{
			get
			{
				return this._StaitonCount_LB3;
			}
			set
			{
				if ((this._StaitonCount_LB3 != value))
				{
					this.OnStaitonCount_LB3Changing(value);
					this.SendPropertyChanging();
					this._StaitonCount_LB3 = value;
					this.SendPropertyChanged("StaitonCount_LB3");
					this.OnStaitonCount_LB3Changed();
				}
			}
		}
		
		[Column(Storage="_WKStaitonSeq_LB3", DbType="Int")]
		public System.Nullable<int> WKStaitonSeq_LB3
		{
			get
			{
				return this._WKStaitonSeq_LB3;
			}
			set
			{
				if ((this._WKStaitonSeq_LB3 != value))
				{
					this.OnWKStaitonSeq_LB3Changing(value);
					this.SendPropertyChanging();
					this._WKStaitonSeq_LB3 = value;
					this.SendPropertyChanged("WKStaitonSeq_LB3");
					this.OnWKStaitonSeq_LB3Changed();
				}
			}
		}
		
		[Column(Storage="_WFCode_LB3", DbType="VarChar(10)")]
		public string WFCode_LB3
		{
			get
			{
				return this._WFCode_LB3;
			}
			set
			{
				if ((this._WFCode_LB3 != value))
				{
					this.OnWFCode_LB3Changing(value);
					this.SendPropertyChanging();
					this._WFCode_LB3 = value;
					this.SendPropertyChanged("WFCode_LB3");
					this.OnWFCode_LB3Changed();
				}
			}
		}
		
		[Column(Storage="_Move", DbType="NVarChar(50)")]
		public string Move
		{
			get
			{
				return this._Move;
			}
			set
			{
				if ((this._Move != value))
				{
					this.OnMoveChanging(value);
					this.SendPropertyChanging();
					this._Move = value;
					this.SendPropertyChanged("Move");
					this.OnMoveChanged();
				}
			}
		}
		
		[Column(Storage="_CWorkSN", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> CWorkSN
		{
			get
			{
				return this._CWorkSN;
			}
			set
			{
				if ((this._CWorkSN != value))
				{
					this.OnCWorkSNChanging(value);
					this.SendPropertyChanging();
					this._CWorkSN = value;
					this.SendPropertyChanged("CWorkSN");
					this.OnCWorkSNChanged();
				}
			}
		}
		
		[Column(Storage="_JWorkSN", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> JWorkSN
		{
			get
			{
				return this._JWorkSN;
			}
			set
			{
				if ((this._JWorkSN != value))
				{
					this.OnJWorkSNChanging(value);
					this.SendPropertyChanging();
					this._JWorkSN = value;
					this.SendPropertyChanged("JWorkSN");
					this.OnJWorkSNChanged();
				}
			}
		}
		
		[Column(Storage="_GZW", DbType="Int")]
		public System.Nullable<int> GZW
		{
			get
			{
				return this._GZW;
			}
			set
			{
				if ((this._GZW != value))
				{
					this.OnGZWChanging(value);
					this.SendPropertyChanging();
					this._GZW = value;
					this.SendPropertyChanged("GZW");
					this.OnGZWChanged();
				}
			}
		}
		
		[Column(Storage="_Move_LB3", DbType="NVarChar(50)")]
		public string Move_LB3
		{
			get
			{
				return this._Move_LB3;
			}
			set
			{
				if ((this._Move_LB3 != value))
				{
					this.OnMove_LB3Changing(value);
					this.SendPropertyChanging();
					this._Move_LB3 = value;
					this.SendPropertyChanged("Move_LB3");
					this.OnMove_LB3Changed();
				}
			}
		}
		
		[Column(Storage="_CWorkSN_LB3", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> CWorkSN_LB3
		{
			get
			{
				return this._CWorkSN_LB3;
			}
			set
			{
				if ((this._CWorkSN_LB3 != value))
				{
					this.OnCWorkSN_LB3Changing(value);
					this.SendPropertyChanging();
					this._CWorkSN_LB3 = value;
					this.SendPropertyChanged("CWorkSN_LB3");
					this.OnCWorkSN_LB3Changed();
				}
			}
		}
		
		[Column(Storage="_JWorkSN_LB3", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> JWorkSN_LB3
		{
			get
			{
				return this._JWorkSN_LB3;
			}
			set
			{
				if ((this._JWorkSN_LB3 != value))
				{
					this.OnJWorkSN_LB3Changing(value);
					this.SendPropertyChanging();
					this._JWorkSN_LB3 = value;
					this.SendPropertyChanged("JWorkSN_LB3");
					this.OnJWorkSN_LB3Changed();
				}
			}
		}
		
		[Column(Storage="_GZW_LB3", DbType="Int")]
		public System.Nullable<int> GZW_LB3
		{
			get
			{
				return this._GZW_LB3;
			}
			set
			{
				if ((this._GZW_LB3 != value))
				{
					this.OnGZW_LB3Changing(value);
					this.SendPropertyChanging();
					this._GZW_LB3 = value;
					this.SendPropertyChanged("GZW_LB3");
					this.OnGZW_LB3Changed();
				}
			}
		}
		
		[Column(Storage="_Agree", DbType="Bit")]
		public System.Nullable<bool> Agree
		{
			get
			{
				return this._Agree;
			}
			set
			{
				if ((this._Agree != value))
				{
					this.OnAgreeChanging(value);
					this.SendPropertyChanging();
					this._Agree = value;
					this.SendPropertyChanged("Agree");
					this.OnAgreeChanged();
				}
			}
		}
		
		[Association(Name="Lb5Matching_LB5MatchingProposal", Storage="_LB5MatchingProposal", ThisKey="Factory,LineCode,j_NO,J2_job,Rwo,Qn,Date,OTN,WPSN,Bcolor", OtherKey="Factory,LineCode,j_NO,J2_job,Rwo,Qn,Date,OTN,WPSN,Bcolor", IsUnique=true, IsForeignKey=false)]
		public LB5MatchingProposal LB5MatchingProposal
		{
			get
			{
				return this._LB5MatchingProposal.Entity;
			}
			set
			{
				LB5MatchingProposal previousValue = this._LB5MatchingProposal.Entity;
				if (((previousValue != value) 
							|| (this._LB5MatchingProposal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LB5MatchingProposal.Entity = null;
						previousValue.Lb5Matching = null;
					}
					this._LB5MatchingProposal.Entity = value;
					if ((value != null))
					{
						value.Lb5Matching = this;
					}
					this.SendPropertyChanged("LB5MatchingProposal");
				}
			}
		}
		
		[Association(Name="PoolInfo_Lb5Matching", Storage="_PoolInfo", ThisKey="Factory,LineCode,j_NO,J2_job,Rwo,Qn,Date,OTN,Bcolor", OtherKey="Factory,LineCode,j_NO,J2_job,Rwo,Qn,Date,OTN,Bcolor", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public PoolInfo PoolInfo
		{
			get
			{
				return this._PoolInfo.Entity;
			}
			set
			{
				PoolInfo previousValue = this._PoolInfo.Entity;
				if (((previousValue != value) 
							|| (this._PoolInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PoolInfo.Entity = null;
						previousValue.Lb5Matchings.Remove(this);
					}
					this._PoolInfo.Entity = value;
					if ((value != null))
					{
						value.Lb5Matchings.Add(this);
						this._Factory = value.Factory;
						this._LineCode = value.LineCode;
						this._j_NO = value.j_NO;
						this._J2_job = value.J2_job;
						this._Rwo = value.Rwo;
						this._Qn = value.Qn;
						this._Date = value.Date;
						this._OTN = value.OTN;
						this._Bcolor = value.Bcolor;
					}
					else
					{
						this._Factory = default(string);
						this._LineCode = default(string);
						this._j_NO = default(string);
						this._J2_job = default(string);
						this._Rwo = default(string);
						this._Qn = default(string);
						this._Date = default(System.DateTime);
						this._OTN = default(string);
						this._Bcolor = default(string);
					}
					this.SendPropertyChanged("PoolInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.RedQNSendEmailConfig")]
	public partial class RedQNSendEmailConfig : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Seq;
		
		private string _From;
		
		private string _cc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSeqChanging(int value);
    partial void OnSeqChanged();
    partial void OnFromChanging(string value);
    partial void OnFromChanged();
    partial void OnccChanging(string value);
    partial void OnccChanged();
    #endregion
		
		public RedQNSendEmailConfig()
		{
			OnCreated();
		}
		
		[Column(Storage="_Seq", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Seq
		{
			get
			{
				return this._Seq;
			}
			set
			{
				if ((this._Seq != value))
				{
					this.OnSeqChanging(value);
					this.SendPropertyChanging();
					this._Seq = value;
					this.SendPropertyChanged("Seq");
					this.OnSeqChanged();
				}
			}
		}
		
		[Column(Name="[From]", Storage="_From", DbType="NVarChar(MAX)")]
		public string From
		{
			get
			{
				return this._From;
			}
			set
			{
				if ((this._From != value))
				{
					this.OnFromChanging(value);
					this.SendPropertyChanging();
					this._From = value;
					this.SendPropertyChanged("From");
					this.OnFromChanged();
				}
			}
		}
		
		[Column(Storage="_cc", DbType="NVarChar(MAX)")]
		public string cc
		{
			get
			{
				return this._cc;
			}
			set
			{
				if ((this._cc != value))
				{
					this.OnccChanging(value);
					this.SendPropertyChanging();
					this._cc = value;
					this.SendPropertyChanged("cc");
					this.OnccChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.LB5MatchingLog")]
	public partial class LB5MatchingLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Factory;
		
		private string _LineCode;
		
		private string _j_NO;
		
		private string _J2_job;
		
		private string _Rwo;
		
		private string _Qn;
		
		private string _Bcolor;
		
		private long _Seq;
		
		private int _OperationSN;
		
		private string _OperationCode;
		
		private string _OperationName;
		
		private string _OriginalWF;
		
		private string _CurrentWF;
		
		private string _Flag;
		
		private System.Nullable<int> _WFColumn;
		
		private string _LogType;
		
		private System.Nullable<System.DateTime> _UpdateTime;
		
		private EntityRef<WPMaster> _WPMaster;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFactoryChanging(string value);
    partial void OnFactoryChanged();
    partial void OnLineCodeChanging(string value);
    partial void OnLineCodeChanged();
    partial void Onj_NOChanging(string value);
    partial void Onj_NOChanged();
    partial void OnJ2_jobChanging(string value);
    partial void OnJ2_jobChanged();
    partial void OnRwoChanging(string value);
    partial void OnRwoChanged();
    partial void OnQnChanging(string value);
    partial void OnQnChanged();
    partial void OnBcolorChanging(string value);
    partial void OnBcolorChanged();
    partial void OnSeqChanging(long value);
    partial void OnSeqChanged();
    partial void OnOperationSNChanging(int value);
    partial void OnOperationSNChanged();
    partial void OnOperationCodeChanging(string value);
    partial void OnOperationCodeChanged();
    partial void OnOperationNameChanging(string value);
    partial void OnOperationNameChanged();
    partial void OnOriginalWFChanging(string value);
    partial void OnOriginalWFChanged();
    partial void OnCurrentWFChanging(string value);
    partial void OnCurrentWFChanged();
    partial void OnFlagChanging(string value);
    partial void OnFlagChanged();
    partial void OnWFColumnChanging(System.Nullable<int> value);
    partial void OnWFColumnChanged();
    partial void OnLogTypeChanging(string value);
    partial void OnLogTypeChanged();
    partial void OnUpdateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateTimeChanged();
    #endregion
		
		public LB5MatchingLog()
		{
			this._WPMaster = default(EntityRef<WPMaster>);
			OnCreated();
		}
		
		[Column(Storage="_Factory", DbType="NChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Factory
		{
			get
			{
				return this._Factory;
			}
			set
			{
				if ((this._Factory != value))
				{
					if (this._WPMaster.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFactoryChanging(value);
					this.SendPropertyChanging();
					this._Factory = value;
					this.SendPropertyChanged("Factory");
					this.OnFactoryChanged();
				}
			}
		}
		
		[Column(Storage="_LineCode", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string LineCode
		{
			get
			{
				return this._LineCode;
			}
			set
			{
				if ((this._LineCode != value))
				{
					if (this._WPMaster.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLineCodeChanging(value);
					this.SendPropertyChanging();
					this._LineCode = value;
					this.SendPropertyChanged("LineCode");
					this.OnLineCodeChanged();
				}
			}
		}
		
		[Column(Storage="_j_NO", DbType="NChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string j_NO
		{
			get
			{
				return this._j_NO;
			}
			set
			{
				if ((this._j_NO != value))
				{
					if (this._WPMaster.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onj_NOChanging(value);
					this.SendPropertyChanging();
					this._j_NO = value;
					this.SendPropertyChanged("j_NO");
					this.Onj_NOChanged();
				}
			}
		}
		
		[Column(Storage="_J2_job", DbType="NChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string J2_job
		{
			get
			{
				return this._J2_job;
			}
			set
			{
				if ((this._J2_job != value))
				{
					if (this._WPMaster.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJ2_jobChanging(value);
					this.SendPropertyChanging();
					this._J2_job = value;
					this.SendPropertyChanged("J2_job");
					this.OnJ2_jobChanged();
				}
			}
		}
		
		[Column(Storage="_Rwo", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Rwo
		{
			get
			{
				return this._Rwo;
			}
			set
			{
				if ((this._Rwo != value))
				{
					if (this._WPMaster.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRwoChanging(value);
					this.SendPropertyChanging();
					this._Rwo = value;
					this.SendPropertyChanged("Rwo");
					this.OnRwoChanged();
				}
			}
		}
		
		[Column(Storage="_Qn", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Qn
		{
			get
			{
				return this._Qn;
			}
			set
			{
				if ((this._Qn != value))
				{
					if (this._WPMaster.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQnChanging(value);
					this.SendPropertyChanging();
					this._Qn = value;
					this.SendPropertyChanged("Qn");
					this.OnQnChanged();
				}
			}
		}
		
		[Column(Storage="_Bcolor", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Bcolor
		{
			get
			{
				return this._Bcolor;
			}
			set
			{
				if ((this._Bcolor != value))
				{
					if (this._WPMaster.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBcolorChanging(value);
					this.SendPropertyChanging();
					this._Bcolor = value;
					this.SendPropertyChanged("Bcolor");
					this.OnBcolorChanged();
				}
			}
		}
		
		[Column(Storage="_Seq", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Seq
		{
			get
			{
				return this._Seq;
			}
			set
			{
				if ((this._Seq != value))
				{
					this.OnSeqChanging(value);
					this.SendPropertyChanging();
					this._Seq = value;
					this.SendPropertyChanged("Seq");
					this.OnSeqChanged();
				}
			}
		}
		
		[Column(Storage="_OperationSN", DbType="Int NOT NULL")]
		public int OperationSN
		{
			get
			{
				return this._OperationSN;
			}
			set
			{
				if ((this._OperationSN != value))
				{
					this.OnOperationSNChanging(value);
					this.SendPropertyChanging();
					this._OperationSN = value;
					this.SendPropertyChanged("OperationSN");
					this.OnOperationSNChanged();
				}
			}
		}
		
		[Column(Storage="_OperationCode", DbType="NChar(10)")]
		public string OperationCode
		{
			get
			{
				return this._OperationCode;
			}
			set
			{
				if ((this._OperationCode != value))
				{
					this.OnOperationCodeChanging(value);
					this.SendPropertyChanging();
					this._OperationCode = value;
					this.SendPropertyChanged("OperationCode");
					this.OnOperationCodeChanged();
				}
			}
		}
		
		[Column(Storage="_OperationName", DbType="NChar(100)")]
		public string OperationName
		{
			get
			{
				return this._OperationName;
			}
			set
			{
				if ((this._OperationName != value))
				{
					this.OnOperationNameChanging(value);
					this.SendPropertyChanging();
					this._OperationName = value;
					this.SendPropertyChanged("OperationName");
					this.OnOperationNameChanged();
				}
			}
		}
		
		[Column(Storage="_OriginalWF", DbType="VarChar(50)")]
		public string OriginalWF
		{
			get
			{
				return this._OriginalWF;
			}
			set
			{
				if ((this._OriginalWF != value))
				{
					this.OnOriginalWFChanging(value);
					this.SendPropertyChanging();
					this._OriginalWF = value;
					this.SendPropertyChanged("OriginalWF");
					this.OnOriginalWFChanged();
				}
			}
		}
		
		[Column(Storage="_CurrentWF", DbType="VarChar(50)")]
		public string CurrentWF
		{
			get
			{
				return this._CurrentWF;
			}
			set
			{
				if ((this._CurrentWF != value))
				{
					this.OnCurrentWFChanging(value);
					this.SendPropertyChanging();
					this._CurrentWF = value;
					this.SendPropertyChanged("CurrentWF");
					this.OnCurrentWFChanged();
				}
			}
		}
		
		[Column(Storage="_Flag", DbType="VarChar(50)")]
		public string Flag
		{
			get
			{
				return this._Flag;
			}
			set
			{
				if ((this._Flag != value))
				{
					this.OnFlagChanging(value);
					this.SendPropertyChanging();
					this._Flag = value;
					this.SendPropertyChanged("Flag");
					this.OnFlagChanged();
				}
			}
		}
		
		[Column(Storage="_WFColumn", DbType="Int")]
		public System.Nullable<int> WFColumn
		{
			get
			{
				return this._WFColumn;
			}
			set
			{
				if ((this._WFColumn != value))
				{
					this.OnWFColumnChanging(value);
					this.SendPropertyChanging();
					this._WFColumn = value;
					this.SendPropertyChanged("WFColumn");
					this.OnWFColumnChanged();
				}
			}
		}
		
		[Column(Storage="_LogType", DbType="VarChar(10)")]
		public string LogType
		{
			get
			{
				return this._LogType;
			}
			set
			{
				if ((this._LogType != value))
				{
					this.OnLogTypeChanging(value);
					this.SendPropertyChanging();
					this._LogType = value;
					this.SendPropertyChanged("LogType");
					this.OnLogTypeChanged();
				}
			}
		}
		
		[Column(Storage="_UpdateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateTime
		{
			get
			{
				return this._UpdateTime;
			}
			set
			{
				if ((this._UpdateTime != value))
				{
					this.OnUpdateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdateTime = value;
					this.SendPropertyChanged("UpdateTime");
					this.OnUpdateTimeChanged();
				}
			}
		}
		
		[Association(Name="WPMaster_LB5MatchingLog", Storage="_WPMaster", ThisKey="Factory,LineCode,j_NO,J2_job,Rwo,Qn,Bcolor", OtherKey="Factory,LineCode,j_NO,J2_job,Rwo,Qn,Bcolor", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public WPMaster WPMaster
		{
			get
			{
				return this._WPMaster.Entity;
			}
			set
			{
				WPMaster previousValue = this._WPMaster.Entity;
				if (((previousValue != value) 
							|| (this._WPMaster.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WPMaster.Entity = null;
						previousValue.LB5MatchingLogs.Remove(this);
					}
					this._WPMaster.Entity = value;
					if ((value != null))
					{
						value.LB5MatchingLogs.Add(this);
						this._Factory = value.Factory;
						this._LineCode = value.LineCode;
						this._j_NO = value.j_NO;
						this._J2_job = value.J2_job;
						this._Rwo = value.Rwo;
						this._Qn = value.Qn;
						this._Bcolor = value.Bcolor;
					}
					else
					{
						this._Factory = default(string);
						this._LineCode = default(string);
						this._j_NO = default(string);
						this._J2_job = default(string);
						this._Rwo = default(string);
						this._Qn = default(string);
						this._Bcolor = default(string);
					}
					this.SendPropertyChanged("WPMaster");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.LastApprovalData")]
	public partial class LastApprovalData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Seq;
		
		private string _Factory;
		
		private string _Line;
		
		private string _CustStyle;
		
		private string _QN;
		
		private System.Nullable<int> _TotalDesk;
		
		private string _RFlag;
		
		private string _ProcessingStage;
		
		private System.Nullable<int> _OptsCount;
		
		private string _OptsSN;
		
		private string _WFID;
		
		private string _WFName;
		
		private string _HWID;
		
		private string _HWName;
		
		private System.Nullable<System.DateTime> _UpdateTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSeqChanging(long value);
    partial void OnSeqChanged();
    partial void OnFactoryChanging(string value);
    partial void OnFactoryChanged();
    partial void OnLineChanging(string value);
    partial void OnLineChanged();
    partial void OnCustStyleChanging(string value);
    partial void OnCustStyleChanged();
    partial void OnQNChanging(string value);
    partial void OnQNChanged();
    partial void OnTotalDeskChanging(System.Nullable<int> value);
    partial void OnTotalDeskChanged();
    partial void OnRFlagChanging(string value);
    partial void OnRFlagChanged();
    partial void OnProcessingStageChanging(string value);
    partial void OnProcessingStageChanged();
    partial void OnOptsCountChanging(System.Nullable<int> value);
    partial void OnOptsCountChanged();
    partial void OnOptsSNChanging(string value);
    partial void OnOptsSNChanged();
    partial void OnWFIDChanging(string value);
    partial void OnWFIDChanged();
    partial void OnWFNameChanging(string value);
    partial void OnWFNameChanged();
    partial void OnHWIDChanging(string value);
    partial void OnHWIDChanged();
    partial void OnHWNameChanging(string value);
    partial void OnHWNameChanged();
    partial void OnUpdateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateTimeChanged();
    #endregion
		
		public LastApprovalData()
		{
			OnCreated();
		}
		
		[Column(Storage="_Seq", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Seq
		{
			get
			{
				return this._Seq;
			}
			set
			{
				if ((this._Seq != value))
				{
					this.OnSeqChanging(value);
					this.SendPropertyChanging();
					this._Seq = value;
					this.SendPropertyChanged("Seq");
					this.OnSeqChanged();
				}
			}
		}
		
		[Column(Storage="_Factory", DbType="VarChar(50)")]
		public string Factory
		{
			get
			{
				return this._Factory;
			}
			set
			{
				if ((this._Factory != value))
				{
					this.OnFactoryChanging(value);
					this.SendPropertyChanging();
					this._Factory = value;
					this.SendPropertyChanged("Factory");
					this.OnFactoryChanged();
				}
			}
		}
		
		[Column(Storage="_Line", DbType="VarChar(50)")]
		public string Line
		{
			get
			{
				return this._Line;
			}
			set
			{
				if ((this._Line != value))
				{
					this.OnLineChanging(value);
					this.SendPropertyChanging();
					this._Line = value;
					this.SendPropertyChanged("Line");
					this.OnLineChanged();
				}
			}
		}
		
		[Column(Storage="_CustStyle", DbType="VarChar(50)")]
		public string CustStyle
		{
			get
			{
				return this._CustStyle;
			}
			set
			{
				if ((this._CustStyle != value))
				{
					this.OnCustStyleChanging(value);
					this.SendPropertyChanging();
					this._CustStyle = value;
					this.SendPropertyChanged("CustStyle");
					this.OnCustStyleChanged();
				}
			}
		}
		
		[Column(Storage="_QN", DbType="VarChar(50)")]
		public string QN
		{
			get
			{
				return this._QN;
			}
			set
			{
				if ((this._QN != value))
				{
					this.OnQNChanging(value);
					this.SendPropertyChanging();
					this._QN = value;
					this.SendPropertyChanged("QN");
					this.OnQNChanged();
				}
			}
		}
		
		[Column(Storage="_TotalDesk", DbType="Int")]
		public System.Nullable<int> TotalDesk
		{
			get
			{
				return this._TotalDesk;
			}
			set
			{
				if ((this._TotalDesk != value))
				{
					this.OnTotalDeskChanging(value);
					this.SendPropertyChanging();
					this._TotalDesk = value;
					this.SendPropertyChanged("TotalDesk");
					this.OnTotalDeskChanged();
				}
			}
		}
		
		[Column(Storage="_RFlag", DbType="VarChar(10)")]
		public string RFlag
		{
			get
			{
				return this._RFlag;
			}
			set
			{
				if ((this._RFlag != value))
				{
					this.OnRFlagChanging(value);
					this.SendPropertyChanging();
					this._RFlag = value;
					this.SendPropertyChanged("RFlag");
					this.OnRFlagChanged();
				}
			}
		}
		
		[Column(Storage="_ProcessingStage", DbType="VarChar(10)")]
		public string ProcessingStage
		{
			get
			{
				return this._ProcessingStage;
			}
			set
			{
				if ((this._ProcessingStage != value))
				{
					this.OnProcessingStageChanging(value);
					this.SendPropertyChanging();
					this._ProcessingStage = value;
					this.SendPropertyChanged("ProcessingStage");
					this.OnProcessingStageChanged();
				}
			}
		}
		
		[Column(Storage="_OptsCount", DbType="Int")]
		public System.Nullable<int> OptsCount
		{
			get
			{
				return this._OptsCount;
			}
			set
			{
				if ((this._OptsCount != value))
				{
					this.OnOptsCountChanging(value);
					this.SendPropertyChanging();
					this._OptsCount = value;
					this.SendPropertyChanged("OptsCount");
					this.OnOptsCountChanged();
				}
			}
		}
		
		[Column(Storage="_OptsSN", DbType="VarChar(200)")]
		public string OptsSN
		{
			get
			{
				return this._OptsSN;
			}
			set
			{
				if ((this._OptsSN != value))
				{
					this.OnOptsSNChanging(value);
					this.SendPropertyChanging();
					this._OptsSN = value;
					this.SendPropertyChanged("OptsSN");
					this.OnOptsSNChanged();
				}
			}
		}
		
		[Column(Storage="_WFID", DbType="VarChar(20)")]
		public string WFID
		{
			get
			{
				return this._WFID;
			}
			set
			{
				if ((this._WFID != value))
				{
					this.OnWFIDChanging(value);
					this.SendPropertyChanging();
					this._WFID = value;
					this.SendPropertyChanged("WFID");
					this.OnWFIDChanged();
				}
			}
		}
		
		[Column(Storage="_WFName", DbType="VarChar(600)")]
		public string WFName
		{
			get
			{
				return this._WFName;
			}
			set
			{
				if ((this._WFName != value))
				{
					this.OnWFNameChanging(value);
					this.SendPropertyChanging();
					this._WFName = value;
					this.SendPropertyChanged("WFName");
					this.OnWFNameChanged();
				}
			}
		}
		
		[Column(Storage="_HWID", DbType="VarChar(20)")]
		public string HWID
		{
			get
			{
				return this._HWID;
			}
			set
			{
				if ((this._HWID != value))
				{
					this.OnHWIDChanging(value);
					this.SendPropertyChanging();
					this._HWID = value;
					this.SendPropertyChanged("HWID");
					this.OnHWIDChanged();
				}
			}
		}
		
		[Column(Storage="_HWName", DbType="VarChar(600)")]
		public string HWName
		{
			get
			{
				return this._HWName;
			}
			set
			{
				if ((this._HWName != value))
				{
					this.OnHWNameChanging(value);
					this.SendPropertyChanging();
					this._HWName = value;
					this.SendPropertyChanged("HWName");
					this.OnHWNameChanged();
				}
			}
		}
		
		[Column(Storage="_UpdateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateTime
		{
			get
			{
				return this._UpdateTime;
			}
			set
			{
				if ((this._UpdateTime != value))
				{
					this.OnUpdateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdateTime = value;
					this.SendPropertyChanged("UpdateTime");
					this.OnUpdateTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.LB5MatchingProposal")]
	public partial class LB5MatchingProposal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Factory;
		
		private string _LineCode;
		
		private string _j_NO;
		
		private string _J2_job;
		
		private string _Rwo;
		
		private string _Qn;
		
		private string _Bcolor;
		
		private System.DateTime _Date;
		
		private string _OTN;
		
		private int _WPSN;
		
		private System.Nullable<int> _OperationSN;
		
		private string _OperationCode;
		
		private string _OperationName;
		
		private string _WorkerId;
		
		private string _WorkerName;
		
		private string _MachineId;
		
		private string _addworkerId1;
		
		private string _addworker1;
		
		private string _addMachineId1;
		
		private string _addworkerId2;
		
		private string _addworker2;
		
		private string _addMachineId2;
		
		private string _RFlag;
		
		private string _OriginalWF;
		
		private string _ProposalWF;
		
		private string _ProposalWFName;
		
		private string _OriginalHW;
		
		private string _ProposalHW;
		
		private string _RFlag1;
		
		private string _OriginalWF1;
		
		private string _ProposalWF1;
		
		private string _ProposalWFName1;
		
		private string _OriginalHW1;
		
		private string _ProposalHW1;
		
		private string _RFlag2;
		
		private string _OriginalWF2;
		
		private string _ProposalWF2;
		
		private string _ProposalWFName2;
		
		private string _OriginalHW2;
		
		private string _ProposalHW2;
		
		private System.Nullable<bool> _Tick1;
		
		private System.Nullable<bool> _Tick2;
		
		private System.Nullable<bool> _Tick3;
		
		private System.Nullable<bool> _Tick4;
		
		private System.Nullable<bool> _Tick5;
		
		private System.Nullable<bool> _Tick6;
		
		private string _FAE;
		
		private string _PlanOrActual;
		
		private string _PlanOrActual1;
		
		private string _PlanOrActual2;
		
		private System.Nullable<bool> _Completed;
		
		private EntityRef<Lb5Matching> _Lb5Matching;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFactoryChanging(string value);
    partial void OnFactoryChanged();
    partial void OnLineCodeChanging(string value);
    partial void OnLineCodeChanged();
    partial void Onj_NOChanging(string value);
    partial void Onj_NOChanged();
    partial void OnJ2_jobChanging(string value);
    partial void OnJ2_jobChanged();
    partial void OnRwoChanging(string value);
    partial void OnRwoChanged();
    partial void OnQnChanging(string value);
    partial void OnQnChanged();
    partial void OnBcolorChanging(string value);
    partial void OnBcolorChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnOTNChanging(string value);
    partial void OnOTNChanged();
    partial void OnWPSNChanging(int value);
    partial void OnWPSNChanged();
    partial void OnOperationSNChanging(System.Nullable<int> value);
    partial void OnOperationSNChanged();
    partial void OnOperationCodeChanging(string value);
    partial void OnOperationCodeChanged();
    partial void OnOperationNameChanging(string value);
    partial void OnOperationNameChanged();
    partial void OnWorkerIdChanging(string value);
    partial void OnWorkerIdChanged();
    partial void OnWorkerNameChanging(string value);
    partial void OnWorkerNameChanged();
    partial void OnMachineIdChanging(string value);
    partial void OnMachineIdChanged();
    partial void OnaddworkerId1Changing(string value);
    partial void OnaddworkerId1Changed();
    partial void Onaddworker1Changing(string value);
    partial void Onaddworker1Changed();
    partial void OnaddMachineId1Changing(string value);
    partial void OnaddMachineId1Changed();
    partial void OnaddworkerId2Changing(string value);
    partial void OnaddworkerId2Changed();
    partial void Onaddworker2Changing(string value);
    partial void Onaddworker2Changed();
    partial void OnaddMachineId2Changing(string value);
    partial void OnaddMachineId2Changed();
    partial void OnRFlagChanging(string value);
    partial void OnRFlagChanged();
    partial void OnOriginalWFChanging(string value);
    partial void OnOriginalWFChanged();
    partial void OnProposalWFChanging(string value);
    partial void OnProposalWFChanged();
    partial void OnProposalWFNameChanging(string value);
    partial void OnProposalWFNameChanged();
    partial void OnOriginalHWChanging(string value);
    partial void OnOriginalHWChanged();
    partial void OnProposalHWChanging(string value);
    partial void OnProposalHWChanged();
    partial void OnRFlag1Changing(string value);
    partial void OnRFlag1Changed();
    partial void OnOriginalWF1Changing(string value);
    partial void OnOriginalWF1Changed();
    partial void OnProposalWF1Changing(string value);
    partial void OnProposalWF1Changed();
    partial void OnProposalWFName1Changing(string value);
    partial void OnProposalWFName1Changed();
    partial void OnOriginalHW1Changing(string value);
    partial void OnOriginalHW1Changed();
    partial void OnProposalHW1Changing(string value);
    partial void OnProposalHW1Changed();
    partial void OnRFlag2Changing(string value);
    partial void OnRFlag2Changed();
    partial void OnOriginalWF2Changing(string value);
    partial void OnOriginalWF2Changed();
    partial void OnProposalWF2Changing(string value);
    partial void OnProposalWF2Changed();
    partial void OnProposalWFName2Changing(string value);
    partial void OnProposalWFName2Changed();
    partial void OnOriginalHW2Changing(string value);
    partial void OnOriginalHW2Changed();
    partial void OnProposalHW2Changing(string value);
    partial void OnProposalHW2Changed();
    partial void OnTick1Changing(System.Nullable<bool> value);
    partial void OnTick1Changed();
    partial void OnTick2Changing(System.Nullable<bool> value);
    partial void OnTick2Changed();
    partial void OnTick3Changing(System.Nullable<bool> value);
    partial void OnTick3Changed();
    partial void OnTick4Changing(System.Nullable<bool> value);
    partial void OnTick4Changed();
    partial void OnTick5Changing(System.Nullable<bool> value);
    partial void OnTick5Changed();
    partial void OnTick6Changing(System.Nullable<bool> value);
    partial void OnTick6Changed();
    partial void OnFAEChanging(string value);
    partial void OnFAEChanged();
    partial void OnPlanOrActualChanging(string value);
    partial void OnPlanOrActualChanged();
    partial void OnPlanOrActual1Changing(string value);
    partial void OnPlanOrActual1Changed();
    partial void OnPlanOrActual2Changing(string value);
    partial void OnPlanOrActual2Changed();
    partial void OnCompletedChanging(System.Nullable<bool> value);
    partial void OnCompletedChanged();
    #endregion
		
		public LB5MatchingProposal()
		{
			this._Lb5Matching = default(EntityRef<Lb5Matching>);
			OnCreated();
		}
		
		[Column(Storage="_Factory", DbType="NChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Factory
		{
			get
			{
				return this._Factory;
			}
			set
			{
				if ((this._Factory != value))
				{
					if (this._Lb5Matching.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFactoryChanging(value);
					this.SendPropertyChanging();
					this._Factory = value;
					this.SendPropertyChanged("Factory");
					this.OnFactoryChanged();
				}
			}
		}
		
		[Column(Storage="_LineCode", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string LineCode
		{
			get
			{
				return this._LineCode;
			}
			set
			{
				if ((this._LineCode != value))
				{
					if (this._Lb5Matching.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLineCodeChanging(value);
					this.SendPropertyChanging();
					this._LineCode = value;
					this.SendPropertyChanged("LineCode");
					this.OnLineCodeChanged();
				}
			}
		}
		
		[Column(Storage="_j_NO", DbType="NChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string j_NO
		{
			get
			{
				return this._j_NO;
			}
			set
			{
				if ((this._j_NO != value))
				{
					if (this._Lb5Matching.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onj_NOChanging(value);
					this.SendPropertyChanging();
					this._j_NO = value;
					this.SendPropertyChanged("j_NO");
					this.Onj_NOChanged();
				}
			}
		}
		
		[Column(Storage="_J2_job", DbType="NChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string J2_job
		{
			get
			{
				return this._J2_job;
			}
			set
			{
				if ((this._J2_job != value))
				{
					if (this._Lb5Matching.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJ2_jobChanging(value);
					this.SendPropertyChanging();
					this._J2_job = value;
					this.SendPropertyChanged("J2_job");
					this.OnJ2_jobChanged();
				}
			}
		}
		
		[Column(Storage="_Rwo", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Rwo
		{
			get
			{
				return this._Rwo;
			}
			set
			{
				if ((this._Rwo != value))
				{
					if (this._Lb5Matching.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRwoChanging(value);
					this.SendPropertyChanging();
					this._Rwo = value;
					this.SendPropertyChanged("Rwo");
					this.OnRwoChanged();
				}
			}
		}
		
		[Column(Storage="_Qn", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Qn
		{
			get
			{
				return this._Qn;
			}
			set
			{
				if ((this._Qn != value))
				{
					if (this._Lb5Matching.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQnChanging(value);
					this.SendPropertyChanging();
					this._Qn = value;
					this.SendPropertyChanged("Qn");
					this.OnQnChanged();
				}
			}
		}
		
		[Column(Storage="_Bcolor", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Bcolor
		{
			get
			{
				return this._Bcolor;
			}
			set
			{
				if ((this._Bcolor != value))
				{
					if (this._Lb5Matching.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBcolorChanging(value);
					this.SendPropertyChanging();
					this._Bcolor = value;
					this.SendPropertyChanged("Bcolor");
					this.OnBcolorChanged();
				}
			}
		}
		
		[Column(Storage="_Date", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					if (this._Lb5Matching.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[Column(Storage="_OTN", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string OTN
		{
			get
			{
				return this._OTN;
			}
			set
			{
				if ((this._OTN != value))
				{
					if (this._Lb5Matching.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOTNChanging(value);
					this.SendPropertyChanging();
					this._OTN = value;
					this.SendPropertyChanged("OTN");
					this.OnOTNChanged();
				}
			}
		}
		
		[Column(Storage="_WPSN", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int WPSN
		{
			get
			{
				return this._WPSN;
			}
			set
			{
				if ((this._WPSN != value))
				{
					if (this._Lb5Matching.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWPSNChanging(value);
					this.SendPropertyChanging();
					this._WPSN = value;
					this.SendPropertyChanged("WPSN");
					this.OnWPSNChanged();
				}
			}
		}
		
		[Column(Storage="_OperationSN", DbType="Int")]
		public System.Nullable<int> OperationSN
		{
			get
			{
				return this._OperationSN;
			}
			set
			{
				if ((this._OperationSN != value))
				{
					this.OnOperationSNChanging(value);
					this.SendPropertyChanging();
					this._OperationSN = value;
					this.SendPropertyChanged("OperationSN");
					this.OnOperationSNChanged();
				}
			}
		}
		
		[Column(Storage="_OperationCode", DbType="NChar(10)")]
		public string OperationCode
		{
			get
			{
				return this._OperationCode;
			}
			set
			{
				if ((this._OperationCode != value))
				{
					this.OnOperationCodeChanging(value);
					this.SendPropertyChanging();
					this._OperationCode = value;
					this.SendPropertyChanged("OperationCode");
					this.OnOperationCodeChanged();
				}
			}
		}
		
		[Column(Storage="_OperationName", DbType="NChar(100)")]
		public string OperationName
		{
			get
			{
				return this._OperationName;
			}
			set
			{
				if ((this._OperationName != value))
				{
					this.OnOperationNameChanging(value);
					this.SendPropertyChanging();
					this._OperationName = value;
					this.SendPropertyChanged("OperationName");
					this.OnOperationNameChanged();
				}
			}
		}
		
		[Column(Storage="_WorkerId", DbType="VarChar(50)")]
		public string WorkerId
		{
			get
			{
				return this._WorkerId;
			}
			set
			{
				if ((this._WorkerId != value))
				{
					this.OnWorkerIdChanging(value);
					this.SendPropertyChanging();
					this._WorkerId = value;
					this.SendPropertyChanged("WorkerId");
					this.OnWorkerIdChanged();
				}
			}
		}
		
		[Column(Storage="_WorkerName", DbType="NVarChar(50)")]
		public string WorkerName
		{
			get
			{
				return this._WorkerName;
			}
			set
			{
				if ((this._WorkerName != value))
				{
					this.OnWorkerNameChanging(value);
					this.SendPropertyChanging();
					this._WorkerName = value;
					this.SendPropertyChanged("WorkerName");
					this.OnWorkerNameChanged();
				}
			}
		}
		
		[Column(Storage="_MachineId", DbType="VarChar(50)")]
		public string MachineId
		{
			get
			{
				return this._MachineId;
			}
			set
			{
				if ((this._MachineId != value))
				{
					this.OnMachineIdChanging(value);
					this.SendPropertyChanging();
					this._MachineId = value;
					this.SendPropertyChanged("MachineId");
					this.OnMachineIdChanged();
				}
			}
		}
		
		[Column(Storage="_addworkerId1", DbType="VarChar(50)")]
		public string addworkerId1
		{
			get
			{
				return this._addworkerId1;
			}
			set
			{
				if ((this._addworkerId1 != value))
				{
					this.OnaddworkerId1Changing(value);
					this.SendPropertyChanging();
					this._addworkerId1 = value;
					this.SendPropertyChanged("addworkerId1");
					this.OnaddworkerId1Changed();
				}
			}
		}
		
		[Column(Storage="_addworker1", DbType="NVarChar(50)")]
		public string addworker1
		{
			get
			{
				return this._addworker1;
			}
			set
			{
				if ((this._addworker1 != value))
				{
					this.Onaddworker1Changing(value);
					this.SendPropertyChanging();
					this._addworker1 = value;
					this.SendPropertyChanged("addworker1");
					this.Onaddworker1Changed();
				}
			}
		}
		
		[Column(Storage="_addMachineId1", DbType="VarChar(50)")]
		public string addMachineId1
		{
			get
			{
				return this._addMachineId1;
			}
			set
			{
				if ((this._addMachineId1 != value))
				{
					this.OnaddMachineId1Changing(value);
					this.SendPropertyChanging();
					this._addMachineId1 = value;
					this.SendPropertyChanged("addMachineId1");
					this.OnaddMachineId1Changed();
				}
			}
		}
		
		[Column(Storage="_addworkerId2", DbType="VarChar(50)")]
		public string addworkerId2
		{
			get
			{
				return this._addworkerId2;
			}
			set
			{
				if ((this._addworkerId2 != value))
				{
					this.OnaddworkerId2Changing(value);
					this.SendPropertyChanging();
					this._addworkerId2 = value;
					this.SendPropertyChanged("addworkerId2");
					this.OnaddworkerId2Changed();
				}
			}
		}
		
		[Column(Storage="_addworker2", DbType="NVarChar(50)")]
		public string addworker2
		{
			get
			{
				return this._addworker2;
			}
			set
			{
				if ((this._addworker2 != value))
				{
					this.Onaddworker2Changing(value);
					this.SendPropertyChanging();
					this._addworker2 = value;
					this.SendPropertyChanged("addworker2");
					this.Onaddworker2Changed();
				}
			}
		}
		
		[Column(Storage="_addMachineId2", DbType="VarChar(50)")]
		public string addMachineId2
		{
			get
			{
				return this._addMachineId2;
			}
			set
			{
				if ((this._addMachineId2 != value))
				{
					this.OnaddMachineId2Changing(value);
					this.SendPropertyChanging();
					this._addMachineId2 = value;
					this.SendPropertyChanged("addMachineId2");
					this.OnaddMachineId2Changed();
				}
			}
		}
		
		[Column(Storage="_RFlag", DbType="VarChar(20)")]
		public string RFlag
		{
			get
			{
				return this._RFlag;
			}
			set
			{
				if ((this._RFlag != value))
				{
					this.OnRFlagChanging(value);
					this.SendPropertyChanging();
					this._RFlag = value;
					this.SendPropertyChanged("RFlag");
					this.OnRFlagChanged();
				}
			}
		}
		
		[Column(Storage="_OriginalWF", DbType="VarChar(50)")]
		public string OriginalWF
		{
			get
			{
				return this._OriginalWF;
			}
			set
			{
				if ((this._OriginalWF != value))
				{
					this.OnOriginalWFChanging(value);
					this.SendPropertyChanging();
					this._OriginalWF = value;
					this.SendPropertyChanged("OriginalWF");
					this.OnOriginalWFChanged();
				}
			}
		}
		
		[Column(Storage="_ProposalWF", DbType="VarChar(50)")]
		public string ProposalWF
		{
			get
			{
				return this._ProposalWF;
			}
			set
			{
				if ((this._ProposalWF != value))
				{
					this.OnProposalWFChanging(value);
					this.SendPropertyChanging();
					this._ProposalWF = value;
					this.SendPropertyChanged("ProposalWF");
					this.OnProposalWFChanged();
				}
			}
		}
		
		[Column(Storage="_ProposalWFName", DbType="VarChar(50)")]
		public string ProposalWFName
		{
			get
			{
				return this._ProposalWFName;
			}
			set
			{
				if ((this._ProposalWFName != value))
				{
					this.OnProposalWFNameChanging(value);
					this.SendPropertyChanging();
					this._ProposalWFName = value;
					this.SendPropertyChanged("ProposalWFName");
					this.OnProposalWFNameChanged();
				}
			}
		}
		
		[Column(Storage="_OriginalHW", DbType="VarChar(50)")]
		public string OriginalHW
		{
			get
			{
				return this._OriginalHW;
			}
			set
			{
				if ((this._OriginalHW != value))
				{
					this.OnOriginalHWChanging(value);
					this.SendPropertyChanging();
					this._OriginalHW = value;
					this.SendPropertyChanged("OriginalHW");
					this.OnOriginalHWChanged();
				}
			}
		}
		
		[Column(Storage="_ProposalHW", DbType="VarChar(50)")]
		public string ProposalHW
		{
			get
			{
				return this._ProposalHW;
			}
			set
			{
				if ((this._ProposalHW != value))
				{
					this.OnProposalHWChanging(value);
					this.SendPropertyChanging();
					this._ProposalHW = value;
					this.SendPropertyChanged("ProposalHW");
					this.OnProposalHWChanged();
				}
			}
		}
		
		[Column(Storage="_RFlag1", DbType="VarChar(20)")]
		public string RFlag1
		{
			get
			{
				return this._RFlag1;
			}
			set
			{
				if ((this._RFlag1 != value))
				{
					this.OnRFlag1Changing(value);
					this.SendPropertyChanging();
					this._RFlag1 = value;
					this.SendPropertyChanged("RFlag1");
					this.OnRFlag1Changed();
				}
			}
		}
		
		[Column(Storage="_OriginalWF1", DbType="VarChar(50)")]
		public string OriginalWF1
		{
			get
			{
				return this._OriginalWF1;
			}
			set
			{
				if ((this._OriginalWF1 != value))
				{
					this.OnOriginalWF1Changing(value);
					this.SendPropertyChanging();
					this._OriginalWF1 = value;
					this.SendPropertyChanged("OriginalWF1");
					this.OnOriginalWF1Changed();
				}
			}
		}
		
		[Column(Storage="_ProposalWF1", DbType="VarChar(50)")]
		public string ProposalWF1
		{
			get
			{
				return this._ProposalWF1;
			}
			set
			{
				if ((this._ProposalWF1 != value))
				{
					this.OnProposalWF1Changing(value);
					this.SendPropertyChanging();
					this._ProposalWF1 = value;
					this.SendPropertyChanged("ProposalWF1");
					this.OnProposalWF1Changed();
				}
			}
		}
		
		[Column(Storage="_ProposalWFName1", DbType="VarChar(50)")]
		public string ProposalWFName1
		{
			get
			{
				return this._ProposalWFName1;
			}
			set
			{
				if ((this._ProposalWFName1 != value))
				{
					this.OnProposalWFName1Changing(value);
					this.SendPropertyChanging();
					this._ProposalWFName1 = value;
					this.SendPropertyChanged("ProposalWFName1");
					this.OnProposalWFName1Changed();
				}
			}
		}
		
		[Column(Storage="_OriginalHW1", DbType="VarChar(50)")]
		public string OriginalHW1
		{
			get
			{
				return this._OriginalHW1;
			}
			set
			{
				if ((this._OriginalHW1 != value))
				{
					this.OnOriginalHW1Changing(value);
					this.SendPropertyChanging();
					this._OriginalHW1 = value;
					this.SendPropertyChanged("OriginalHW1");
					this.OnOriginalHW1Changed();
				}
			}
		}
		
		[Column(Storage="_ProposalHW1", DbType="VarChar(50)")]
		public string ProposalHW1
		{
			get
			{
				return this._ProposalHW1;
			}
			set
			{
				if ((this._ProposalHW1 != value))
				{
					this.OnProposalHW1Changing(value);
					this.SendPropertyChanging();
					this._ProposalHW1 = value;
					this.SendPropertyChanged("ProposalHW1");
					this.OnProposalHW1Changed();
				}
			}
		}
		
		[Column(Storage="_RFlag2", DbType="VarChar(20)")]
		public string RFlag2
		{
			get
			{
				return this._RFlag2;
			}
			set
			{
				if ((this._RFlag2 != value))
				{
					this.OnRFlag2Changing(value);
					this.SendPropertyChanging();
					this._RFlag2 = value;
					this.SendPropertyChanged("RFlag2");
					this.OnRFlag2Changed();
				}
			}
		}
		
		[Column(Storage="_OriginalWF2", DbType="VarChar(50)")]
		public string OriginalWF2
		{
			get
			{
				return this._OriginalWF2;
			}
			set
			{
				if ((this._OriginalWF2 != value))
				{
					this.OnOriginalWF2Changing(value);
					this.SendPropertyChanging();
					this._OriginalWF2 = value;
					this.SendPropertyChanged("OriginalWF2");
					this.OnOriginalWF2Changed();
				}
			}
		}
		
		[Column(Storage="_ProposalWF2", DbType="VarChar(50)")]
		public string ProposalWF2
		{
			get
			{
				return this._ProposalWF2;
			}
			set
			{
				if ((this._ProposalWF2 != value))
				{
					this.OnProposalWF2Changing(value);
					this.SendPropertyChanging();
					this._ProposalWF2 = value;
					this.SendPropertyChanged("ProposalWF2");
					this.OnProposalWF2Changed();
				}
			}
		}
		
		[Column(Storage="_ProposalWFName2", DbType="VarChar(50)")]
		public string ProposalWFName2
		{
			get
			{
				return this._ProposalWFName2;
			}
			set
			{
				if ((this._ProposalWFName2 != value))
				{
					this.OnProposalWFName2Changing(value);
					this.SendPropertyChanging();
					this._ProposalWFName2 = value;
					this.SendPropertyChanged("ProposalWFName2");
					this.OnProposalWFName2Changed();
				}
			}
		}
		
		[Column(Storage="_OriginalHW2", DbType="VarChar(50)")]
		public string OriginalHW2
		{
			get
			{
				return this._OriginalHW2;
			}
			set
			{
				if ((this._OriginalHW2 != value))
				{
					this.OnOriginalHW2Changing(value);
					this.SendPropertyChanging();
					this._OriginalHW2 = value;
					this.SendPropertyChanged("OriginalHW2");
					this.OnOriginalHW2Changed();
				}
			}
		}
		
		[Column(Storage="_ProposalHW2", DbType="VarChar(50)")]
		public string ProposalHW2
		{
			get
			{
				return this._ProposalHW2;
			}
			set
			{
				if ((this._ProposalHW2 != value))
				{
					this.OnProposalHW2Changing(value);
					this.SendPropertyChanging();
					this._ProposalHW2 = value;
					this.SendPropertyChanged("ProposalHW2");
					this.OnProposalHW2Changed();
				}
			}
		}
		
		[Column(Storage="_Tick1", DbType="Bit")]
		public System.Nullable<bool> Tick1
		{
			get
			{
				return this._Tick1;
			}
			set
			{
				if ((this._Tick1 != value))
				{
					this.OnTick1Changing(value);
					this.SendPropertyChanging();
					this._Tick1 = value;
					this.SendPropertyChanged("Tick1");
					this.OnTick1Changed();
				}
			}
		}
		
		[Column(Storage="_Tick2", DbType="Bit")]
		public System.Nullable<bool> Tick2
		{
			get
			{
				return this._Tick2;
			}
			set
			{
				if ((this._Tick2 != value))
				{
					this.OnTick2Changing(value);
					this.SendPropertyChanging();
					this._Tick2 = value;
					this.SendPropertyChanged("Tick2");
					this.OnTick2Changed();
				}
			}
		}
		
		[Column(Storage="_Tick3", DbType="Bit")]
		public System.Nullable<bool> Tick3
		{
			get
			{
				return this._Tick3;
			}
			set
			{
				if ((this._Tick3 != value))
				{
					this.OnTick3Changing(value);
					this.SendPropertyChanging();
					this._Tick3 = value;
					this.SendPropertyChanged("Tick3");
					this.OnTick3Changed();
				}
			}
		}
		
		[Column(Storage="_Tick4", DbType="Bit")]
		public System.Nullable<bool> Tick4
		{
			get
			{
				return this._Tick4;
			}
			set
			{
				if ((this._Tick4 != value))
				{
					this.OnTick4Changing(value);
					this.SendPropertyChanging();
					this._Tick4 = value;
					this.SendPropertyChanged("Tick4");
					this.OnTick4Changed();
				}
			}
		}
		
		[Column(Storage="_Tick5", DbType="Bit")]
		public System.Nullable<bool> Tick5
		{
			get
			{
				return this._Tick5;
			}
			set
			{
				if ((this._Tick5 != value))
				{
					this.OnTick5Changing(value);
					this.SendPropertyChanging();
					this._Tick5 = value;
					this.SendPropertyChanged("Tick5");
					this.OnTick5Changed();
				}
			}
		}
		
		[Column(Storage="_Tick6", DbType="Bit")]
		public System.Nullable<bool> Tick6
		{
			get
			{
				return this._Tick6;
			}
			set
			{
				if ((this._Tick6 != value))
				{
					this.OnTick6Changing(value);
					this.SendPropertyChanging();
					this._Tick6 = value;
					this.SendPropertyChanged("Tick6");
					this.OnTick6Changed();
				}
			}
		}
		
		[Column(Storage="_FAE", DbType="VarChar(10)")]
		public string FAE
		{
			get
			{
				return this._FAE;
			}
			set
			{
				if ((this._FAE != value))
				{
					this.OnFAEChanging(value);
					this.SendPropertyChanging();
					this._FAE = value;
					this.SendPropertyChanged("FAE");
					this.OnFAEChanged();
				}
			}
		}
		
		[Column(Storage="_PlanOrActual", DbType="VarChar(10)")]
		public string PlanOrActual
		{
			get
			{
				return this._PlanOrActual;
			}
			set
			{
				if ((this._PlanOrActual != value))
				{
					this.OnPlanOrActualChanging(value);
					this.SendPropertyChanging();
					this._PlanOrActual = value;
					this.SendPropertyChanged("PlanOrActual");
					this.OnPlanOrActualChanged();
				}
			}
		}
		
		[Column(Storage="_PlanOrActual1", DbType="VarChar(10)")]
		public string PlanOrActual1
		{
			get
			{
				return this._PlanOrActual1;
			}
			set
			{
				if ((this._PlanOrActual1 != value))
				{
					this.OnPlanOrActual1Changing(value);
					this.SendPropertyChanging();
					this._PlanOrActual1 = value;
					this.SendPropertyChanged("PlanOrActual1");
					this.OnPlanOrActual1Changed();
				}
			}
		}
		
		[Column(Storage="_PlanOrActual2", DbType="VarChar(10)")]
		public string PlanOrActual2
		{
			get
			{
				return this._PlanOrActual2;
			}
			set
			{
				if ((this._PlanOrActual2 != value))
				{
					this.OnPlanOrActual2Changing(value);
					this.SendPropertyChanging();
					this._PlanOrActual2 = value;
					this.SendPropertyChanged("PlanOrActual2");
					this.OnPlanOrActual2Changed();
				}
			}
		}
		
		[Column(Storage="_Completed", DbType="Bit")]
		public System.Nullable<bool> Completed
		{
			get
			{
				return this._Completed;
			}
			set
			{
				if ((this._Completed != value))
				{
					this.OnCompletedChanging(value);
					this.SendPropertyChanging();
					this._Completed = value;
					this.SendPropertyChanged("Completed");
					this.OnCompletedChanged();
				}
			}
		}
		
		[Association(Name="Lb5Matching_LB5MatchingProposal", Storage="_Lb5Matching", ThisKey="Factory,LineCode,j_NO,J2_job,Rwo,Qn,Date,OTN,WPSN,Bcolor", OtherKey="Factory,LineCode,j_NO,J2_job,Rwo,Qn,Date,OTN,WPSN,Bcolor", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Lb5Matching Lb5Matching
		{
			get
			{
				return this._Lb5Matching.Entity;
			}
			set
			{
				Lb5Matching previousValue = this._Lb5Matching.Entity;
				if (((previousValue != value) 
							|| (this._Lb5Matching.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Lb5Matching.Entity = null;
						previousValue.LB5MatchingProposal = null;
					}
					this._Lb5Matching.Entity = value;
					if ((value != null))
					{
						value.LB5MatchingProposal = this;
						this._Factory = value.Factory;
						this._LineCode = value.LineCode;
						this._j_NO = value.j_NO;
						this._J2_job = value.J2_job;
						this._Rwo = value.Rwo;
						this._Qn = value.Qn;
						this._Date = value.Date;
						this._OTN = value.OTN;
						this._WPSN = value.WPSN;
						this._Bcolor = value.Bcolor;
					}
					else
					{
						this._Factory = default(string);
						this._LineCode = default(string);
						this._j_NO = default(string);
						this._J2_job = default(string);
						this._Rwo = default(string);
						this._Qn = default(string);
						this._Date = default(System.DateTime);
						this._OTN = default(string);
						this._WPSN = default(int);
						this._Bcolor = default(string);
					}
					this.SendPropertyChanged("Lb5Matching");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.RedQN")]
	public partial class RedQN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Seq;
		
		private string _Factory;
		
		private string _LineCode;
		
		private string _j_NO;
		
		private string _J2_job;
		
		private string _Rwo;
		
		private string _Qn;
		
		private string _Bcolor;
		
		private string _RDProcessing;
		
		private string _Woc;
		
		private string _WsLocation;
		
		private string _PHStyleCode;
		
		private string _CustStyleCode;
		
		private System.Nullable<int> _QNQty;
		
		private System.Nullable<int> _Version;
		
		private string _OptWs;
		
		private System.Nullable<int> _WDeskQty;
		
		private string _StartTime;
		
		private string _EndTime;
		
		private System.Nullable<System.DateTime> _UpdateTime;
		
		private string _WsRDProcessing_WF;
		
		private string _WsRDProcessing_HW;
		
		private string _Step;
		
		private System.Nullable<int> _TotalDesk;
		
		private System.Nullable<int> _TotalWs;
		
		private System.Nullable<System.DateTime> _StartAlertTime;
		
		private string _Class;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSeqChanging(long value);
    partial void OnSeqChanged();
    partial void OnFactoryChanging(string value);
    partial void OnFactoryChanged();
    partial void OnLineCodeChanging(string value);
    partial void OnLineCodeChanged();
    partial void Onj_NOChanging(string value);
    partial void Onj_NOChanged();
    partial void OnJ2_jobChanging(string value);
    partial void OnJ2_jobChanged();
    partial void OnRwoChanging(string value);
    partial void OnRwoChanged();
    partial void OnQnChanging(string value);
    partial void OnQnChanged();
    partial void OnBcolorChanging(string value);
    partial void OnBcolorChanged();
    partial void OnRDProcessingChanging(string value);
    partial void OnRDProcessingChanged();
    partial void OnWocChanging(string value);
    partial void OnWocChanged();
    partial void OnWsLocationChanging(string value);
    partial void OnWsLocationChanged();
    partial void OnPHStyleCodeChanging(string value);
    partial void OnPHStyleCodeChanged();
    partial void OnCustStyleCodeChanging(string value);
    partial void OnCustStyleCodeChanged();
    partial void OnQNQtyChanging(System.Nullable<int> value);
    partial void OnQNQtyChanged();
    partial void OnVersionChanging(System.Nullable<int> value);
    partial void OnVersionChanged();
    partial void OnOptWsChanging(string value);
    partial void OnOptWsChanged();
    partial void OnWDeskQtyChanging(System.Nullable<int> value);
    partial void OnWDeskQtyChanged();
    partial void OnStartTimeChanging(string value);
    partial void OnStartTimeChanged();
    partial void OnEndTimeChanging(string value);
    partial void OnEndTimeChanged();
    partial void OnUpdateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateTimeChanged();
    partial void OnWsRDProcessing_WFChanging(string value);
    partial void OnWsRDProcessing_WFChanged();
    partial void OnWsRDProcessing_HWChanging(string value);
    partial void OnWsRDProcessing_HWChanged();
    partial void OnStepChanging(string value);
    partial void OnStepChanged();
    partial void OnTotalDeskChanging(System.Nullable<int> value);
    partial void OnTotalDeskChanged();
    partial void OnTotalWsChanging(System.Nullable<int> value);
    partial void OnTotalWsChanged();
    partial void OnStartAlertTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnStartAlertTimeChanged();
    partial void OnClassChanging(string value);
    partial void OnClassChanged();
    #endregion
		
		public RedQN()
		{
			OnCreated();
		}
		
		[Column(Storage="_Seq", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Seq
		{
			get
			{
				return this._Seq;
			}
			set
			{
				if ((this._Seq != value))
				{
					this.OnSeqChanging(value);
					this.SendPropertyChanging();
					this._Seq = value;
					this.SendPropertyChanged("Seq");
					this.OnSeqChanged();
				}
			}
		}
		
		[Column(Storage="_Factory", DbType="VarChar(5)")]
		public string Factory
		{
			get
			{
				return this._Factory;
			}
			set
			{
				if ((this._Factory != value))
				{
					this.OnFactoryChanging(value);
					this.SendPropertyChanging();
					this._Factory = value;
					this.SendPropertyChanged("Factory");
					this.OnFactoryChanged();
				}
			}
		}
		
		[Column(Storage="_LineCode", DbType="VarChar(50)")]
		public string LineCode
		{
			get
			{
				return this._LineCode;
			}
			set
			{
				if ((this._LineCode != value))
				{
					this.OnLineCodeChanging(value);
					this.SendPropertyChanging();
					this._LineCode = value;
					this.SendPropertyChanged("LineCode");
					this.OnLineCodeChanged();
				}
			}
		}
		
		[Column(Storage="_j_NO", DbType="VarChar(15)")]
		public string j_NO
		{
			get
			{
				return this._j_NO;
			}
			set
			{
				if ((this._j_NO != value))
				{
					this.Onj_NOChanging(value);
					this.SendPropertyChanging();
					this._j_NO = value;
					this.SendPropertyChanged("j_NO");
					this.Onj_NOChanged();
				}
			}
		}
		
		[Column(Storage="_J2_job", DbType="VarChar(15)")]
		public string J2_job
		{
			get
			{
				return this._J2_job;
			}
			set
			{
				if ((this._J2_job != value))
				{
					this.OnJ2_jobChanging(value);
					this.SendPropertyChanging();
					this._J2_job = value;
					this.SendPropertyChanged("J2_job");
					this.OnJ2_jobChanged();
				}
			}
		}
		
		[Column(Storage="_Rwo", DbType="VarChar(10)")]
		public string Rwo
		{
			get
			{
				return this._Rwo;
			}
			set
			{
				if ((this._Rwo != value))
				{
					this.OnRwoChanging(value);
					this.SendPropertyChanging();
					this._Rwo = value;
					this.SendPropertyChanged("Rwo");
					this.OnRwoChanged();
				}
			}
		}
		
		[Column(Storage="_Qn", DbType="VarChar(10)")]
		public string Qn
		{
			get
			{
				return this._Qn;
			}
			set
			{
				if ((this._Qn != value))
				{
					this.OnQnChanging(value);
					this.SendPropertyChanging();
					this._Qn = value;
					this.SendPropertyChanged("Qn");
					this.OnQnChanged();
				}
			}
		}
		
		[Column(Storage="_Bcolor", DbType="VarChar(10)")]
		public string Bcolor
		{
			get
			{
				return this._Bcolor;
			}
			set
			{
				if ((this._Bcolor != value))
				{
					this.OnBcolorChanging(value);
					this.SendPropertyChanging();
					this._Bcolor = value;
					this.SendPropertyChanged("Bcolor");
					this.OnBcolorChanged();
				}
			}
		}
		
		[Column(Storage="_RDProcessing", DbType="VarChar(100)")]
		public string RDProcessing
		{
			get
			{
				return this._RDProcessing;
			}
			set
			{
				if ((this._RDProcessing != value))
				{
					this.OnRDProcessingChanging(value);
					this.SendPropertyChanging();
					this._RDProcessing = value;
					this.SendPropertyChanged("RDProcessing");
					this.OnRDProcessingChanged();
				}
			}
		}
		
		[Column(Storage="_Woc", DbType="VarChar(10)")]
		public string Woc
		{
			get
			{
				return this._Woc;
			}
			set
			{
				if ((this._Woc != value))
				{
					this.OnWocChanging(value);
					this.SendPropertyChanging();
					this._Woc = value;
					this.SendPropertyChanged("Woc");
					this.OnWocChanged();
				}
			}
		}
		
		[Column(Storage="_WsLocation", DbType="VarChar(10)")]
		public string WsLocation
		{
			get
			{
				return this._WsLocation;
			}
			set
			{
				if ((this._WsLocation != value))
				{
					this.OnWsLocationChanging(value);
					this.SendPropertyChanging();
					this._WsLocation = value;
					this.SendPropertyChanged("WsLocation");
					this.OnWsLocationChanged();
				}
			}
		}
		
		[Column(Storage="_PHStyleCode", DbType="VarChar(30)")]
		public string PHStyleCode
		{
			get
			{
				return this._PHStyleCode;
			}
			set
			{
				if ((this._PHStyleCode != value))
				{
					this.OnPHStyleCodeChanging(value);
					this.SendPropertyChanging();
					this._PHStyleCode = value;
					this.SendPropertyChanged("PHStyleCode");
					this.OnPHStyleCodeChanged();
				}
			}
		}
		
		[Column(Storage="_CustStyleCode", DbType="VarChar(50)")]
		public string CustStyleCode
		{
			get
			{
				return this._CustStyleCode;
			}
			set
			{
				if ((this._CustStyleCode != value))
				{
					this.OnCustStyleCodeChanging(value);
					this.SendPropertyChanging();
					this._CustStyleCode = value;
					this.SendPropertyChanged("CustStyleCode");
					this.OnCustStyleCodeChanged();
				}
			}
		}
		
		[Column(Storage="_QNQty", DbType="Int")]
		public System.Nullable<int> QNQty
		{
			get
			{
				return this._QNQty;
			}
			set
			{
				if ((this._QNQty != value))
				{
					this.OnQNQtyChanging(value);
					this.SendPropertyChanging();
					this._QNQty = value;
					this.SendPropertyChanged("QNQty");
					this.OnQNQtyChanged();
				}
			}
		}
		
		[Column(Storage="_Version", DbType="Int")]
		public System.Nullable<int> Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[Column(Storage="_OptWs", DbType="VarChar(30)")]
		public string OptWs
		{
			get
			{
				return this._OptWs;
			}
			set
			{
				if ((this._OptWs != value))
				{
					this.OnOptWsChanging(value);
					this.SendPropertyChanging();
					this._OptWs = value;
					this.SendPropertyChanged("OptWs");
					this.OnOptWsChanged();
				}
			}
		}
		
		[Column(Storage="_WDeskQty", DbType="Int")]
		public System.Nullable<int> WDeskQty
		{
			get
			{
				return this._WDeskQty;
			}
			set
			{
				if ((this._WDeskQty != value))
				{
					this.OnWDeskQtyChanging(value);
					this.SendPropertyChanging();
					this._WDeskQty = value;
					this.SendPropertyChanged("WDeskQty");
					this.OnWDeskQtyChanged();
				}
			}
		}
		
		[Column(Storage="_StartTime", DbType="VarChar(100)")]
		public string StartTime
		{
			get
			{
				return this._StartTime;
			}
			set
			{
				if ((this._StartTime != value))
				{
					this.OnStartTimeChanging(value);
					this.SendPropertyChanging();
					this._StartTime = value;
					this.SendPropertyChanged("StartTime");
					this.OnStartTimeChanged();
				}
			}
		}
		
		[Column(Storage="_EndTime", DbType="VarChar(100)")]
		public string EndTime
		{
			get
			{
				return this._EndTime;
			}
			set
			{
				if ((this._EndTime != value))
				{
					this.OnEndTimeChanging(value);
					this.SendPropertyChanging();
					this._EndTime = value;
					this.SendPropertyChanged("EndTime");
					this.OnEndTimeChanged();
				}
			}
		}
		
		[Column(Storage="_UpdateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateTime
		{
			get
			{
				return this._UpdateTime;
			}
			set
			{
				if ((this._UpdateTime != value))
				{
					this.OnUpdateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdateTime = value;
					this.SendPropertyChanged("UpdateTime");
					this.OnUpdateTimeChanged();
				}
			}
		}
		
		[Column(Storage="_WsRDProcessing_WF", DbType="VarChar(100)")]
		public string WsRDProcessing_WF
		{
			get
			{
				return this._WsRDProcessing_WF;
			}
			set
			{
				if ((this._WsRDProcessing_WF != value))
				{
					this.OnWsRDProcessing_WFChanging(value);
					this.SendPropertyChanging();
					this._WsRDProcessing_WF = value;
					this.SendPropertyChanged("WsRDProcessing_WF");
					this.OnWsRDProcessing_WFChanged();
				}
			}
		}
		
		[Column(Storage="_WsRDProcessing_HW", DbType="VarChar(100)")]
		public string WsRDProcessing_HW
		{
			get
			{
				return this._WsRDProcessing_HW;
			}
			set
			{
				if ((this._WsRDProcessing_HW != value))
				{
					this.OnWsRDProcessing_HWChanging(value);
					this.SendPropertyChanging();
					this._WsRDProcessing_HW = value;
					this.SendPropertyChanged("WsRDProcessing_HW");
					this.OnWsRDProcessing_HWChanged();
				}
			}
		}
		
		[Column(Storage="_Step", DbType="VarChar(10)")]
		public string Step
		{
			get
			{
				return this._Step;
			}
			set
			{
				if ((this._Step != value))
				{
					this.OnStepChanging(value);
					this.SendPropertyChanging();
					this._Step = value;
					this.SendPropertyChanged("Step");
					this.OnStepChanged();
				}
			}
		}
		
		[Column(Storage="_TotalDesk", DbType="Int")]
		public System.Nullable<int> TotalDesk
		{
			get
			{
				return this._TotalDesk;
			}
			set
			{
				if ((this._TotalDesk != value))
				{
					this.OnTotalDeskChanging(value);
					this.SendPropertyChanging();
					this._TotalDesk = value;
					this.SendPropertyChanged("TotalDesk");
					this.OnTotalDeskChanged();
				}
			}
		}
		
		[Column(Storage="_TotalWs", DbType="Int")]
		public System.Nullable<int> TotalWs
		{
			get
			{
				return this._TotalWs;
			}
			set
			{
				if ((this._TotalWs != value))
				{
					this.OnTotalWsChanging(value);
					this.SendPropertyChanging();
					this._TotalWs = value;
					this.SendPropertyChanged("TotalWs");
					this.OnTotalWsChanged();
				}
			}
		}
		
		[Column(Storage="_StartAlertTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartAlertTime
		{
			get
			{
				return this._StartAlertTime;
			}
			set
			{
				if ((this._StartAlertTime != value))
				{
					this.OnStartAlertTimeChanging(value);
					this.SendPropertyChanging();
					this._StartAlertTime = value;
					this.SendPropertyChanged("StartAlertTime");
					this.OnStartAlertTimeChanged();
				}
			}
		}
		
		[Column(Storage="_Class", DbType="VarChar(20)")]
		public string Class
		{
			get
			{
				return this._Class;
			}
			set
			{
				if ((this._Class != value))
				{
					this.OnClassChanging(value);
					this.SendPropertyChanging();
					this._Class = value;
					this.SendPropertyChanged("Class");
					this.OnClassChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.AlertLogDetail")]
	public partial class AlertLogDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _OID;
		
		private long _AlertLogHeaderOID;
		
		private System.Nullable<System.DateTime> _StartFollowDate;
		
		private System.Nullable<int> _FollowCount;
		
		private string _Sender;
		
		private string _FollowSummary;
		
		private System.Data.Linq.Binary _Attachment;
		
		private string _AttFileName;
		
		private EntityRef<AlertLogHeader> _AlertLogHeader;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOIDChanging(long value);
    partial void OnOIDChanged();
    partial void OnAlertLogHeaderOIDChanging(long value);
    partial void OnAlertLogHeaderOIDChanged();
    partial void OnStartFollowDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartFollowDateChanged();
    partial void OnFollowCountChanging(System.Nullable<int> value);
    partial void OnFollowCountChanged();
    partial void OnSenderChanging(string value);
    partial void OnSenderChanged();
    partial void OnFollowSummaryChanging(string value);
    partial void OnFollowSummaryChanged();
    partial void OnAttachmentChanging(System.Data.Linq.Binary value);
    partial void OnAttachmentChanged();
    partial void OnAttFileNameChanging(string value);
    partial void OnAttFileNameChanged();
    #endregion
		
		public AlertLogDetail()
		{
			this._AlertLogHeader = default(EntityRef<AlertLogHeader>);
			OnCreated();
		}
		
		[Column(Storage="_OID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long OID
		{
			get
			{
				return this._OID;
			}
			set
			{
				if ((this._OID != value))
				{
					this.OnOIDChanging(value);
					this.SendPropertyChanging();
					this._OID = value;
					this.SendPropertyChanged("OID");
					this.OnOIDChanged();
				}
			}
		}
		
		[Column(Storage="_AlertLogHeaderOID", DbType="BigInt NOT NULL")]
		public long AlertLogHeaderOID
		{
			get
			{
				return this._AlertLogHeaderOID;
			}
			set
			{
				if ((this._AlertLogHeaderOID != value))
				{
					if (this._AlertLogHeader.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAlertLogHeaderOIDChanging(value);
					this.SendPropertyChanging();
					this._AlertLogHeaderOID = value;
					this.SendPropertyChanged("AlertLogHeaderOID");
					this.OnAlertLogHeaderOIDChanged();
				}
			}
		}
		
		[Column(Storage="_StartFollowDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartFollowDate
		{
			get
			{
				return this._StartFollowDate;
			}
			set
			{
				if ((this._StartFollowDate != value))
				{
					this.OnStartFollowDateChanging(value);
					this.SendPropertyChanging();
					this._StartFollowDate = value;
					this.SendPropertyChanged("StartFollowDate");
					this.OnStartFollowDateChanged();
				}
			}
		}
		
		[Column(Storage="_FollowCount", DbType="Int")]
		public System.Nullable<int> FollowCount
		{
			get
			{
				return this._FollowCount;
			}
			set
			{
				if ((this._FollowCount != value))
				{
					this.OnFollowCountChanging(value);
					this.SendPropertyChanging();
					this._FollowCount = value;
					this.SendPropertyChanged("FollowCount");
					this.OnFollowCountChanged();
				}
			}
		}
		
		[Column(Storage="_Sender", DbType="NVarChar(100)")]
		public string Sender
		{
			get
			{
				return this._Sender;
			}
			set
			{
				if ((this._Sender != value))
				{
					this.OnSenderChanging(value);
					this.SendPropertyChanging();
					this._Sender = value;
					this.SendPropertyChanged("Sender");
					this.OnSenderChanged();
				}
			}
		}
		
		[Column(Storage="_FollowSummary", DbType="NVarChar(MAX)")]
		public string FollowSummary
		{
			get
			{
				return this._FollowSummary;
			}
			set
			{
				if ((this._FollowSummary != value))
				{
					this.OnFollowSummaryChanging(value);
					this.SendPropertyChanging();
					this._FollowSummary = value;
					this.SendPropertyChanged("FollowSummary");
					this.OnFollowSummaryChanged();
				}
			}
		}
		
		[Column(Storage="_Attachment", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Attachment
		{
			get
			{
				return this._Attachment;
			}
			set
			{
				if ((this._Attachment != value))
				{
					this.OnAttachmentChanging(value);
					this.SendPropertyChanging();
					this._Attachment = value;
					this.SendPropertyChanged("Attachment");
					this.OnAttachmentChanged();
				}
			}
		}
		
		[Column(Storage="_AttFileName", DbType="NVarChar(200)")]
		public string AttFileName
		{
			get
			{
				return this._AttFileName;
			}
			set
			{
				if ((this._AttFileName != value))
				{
					this.OnAttFileNameChanging(value);
					this.SendPropertyChanging();
					this._AttFileName = value;
					this.SendPropertyChanged("AttFileName");
					this.OnAttFileNameChanged();
				}
			}
		}
		
		[Association(Name="AlertLogHeader_AlertLogDetail", Storage="_AlertLogHeader", ThisKey="AlertLogHeaderOID", OtherKey="OID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public AlertLogHeader AlertLogHeader
		{
			get
			{
				return this._AlertLogHeader.Entity;
			}
			set
			{
				AlertLogHeader previousValue = this._AlertLogHeader.Entity;
				if (((previousValue != value) 
							|| (this._AlertLogHeader.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AlertLogHeader.Entity = null;
						previousValue.AlertLogDetails.Remove(this);
					}
					this._AlertLogHeader.Entity = value;
					if ((value != null))
					{
						value.AlertLogDetails.Add(this);
						this._AlertLogHeaderOID = value.OID;
					}
					else
					{
						this._AlertLogHeaderOID = default(long);
					}
					this.SendPropertyChanged("AlertLogHeader");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.ActionLogHeader")]
	public partial class ActionLogHeader : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _LogNO;
		
		private string _LogType;
		
		private string _Subject;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _PlanCompleteDate;
		
		private string _Sender;
		
		private System.Nullable<bool> _IsCompleted;
		
		private string _Factory;
		
		private string _Workshop;
		
		private string _Line;
		
		private EntitySet<ActionLogDetail> _ActionLogDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLogNOChanging(string value);
    partial void OnLogNOChanged();
    partial void OnLogTypeChanging(string value);
    partial void OnLogTypeChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnPlanCompleteDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPlanCompleteDateChanged();
    partial void OnSenderChanging(string value);
    partial void OnSenderChanged();
    partial void OnIsCompletedChanging(System.Nullable<bool> value);
    partial void OnIsCompletedChanged();
    partial void OnFactoryChanging(string value);
    partial void OnFactoryChanged();
    partial void OnWorkshopChanging(string value);
    partial void OnWorkshopChanged();
    partial void OnLineChanging(string value);
    partial void OnLineChanged();
    #endregion
		
		public ActionLogHeader()
		{
			this._ActionLogDetails = new EntitySet<ActionLogDetail>(new Action<ActionLogDetail>(this.attach_ActionLogDetails), new Action<ActionLogDetail>(this.detach_ActionLogDetails));
			OnCreated();
		}
		
		[Column(Storage="_LogNO", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string LogNO
		{
			get
			{
				return this._LogNO;
			}
			set
			{
				if ((this._LogNO != value))
				{
					this.OnLogNOChanging(value);
					this.SendPropertyChanging();
					this._LogNO = value;
					this.SendPropertyChanged("LogNO");
					this.OnLogNOChanged();
				}
			}
		}
		
		[Column(Storage="_LogType", DbType="NVarChar(20)")]
		public string LogType
		{
			get
			{
				return this._LogType;
			}
			set
			{
				if ((this._LogType != value))
				{
					this.OnLogTypeChanging(value);
					this.SendPropertyChanging();
					this._LogType = value;
					this.SendPropertyChanged("LogType");
					this.OnLogTypeChanged();
				}
			}
		}
		
		[Column(Storage="_Subject", DbType="NVarChar(1000)")]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged("Subject");
					this.OnSubjectChanged();
				}
			}
		}
		
		[Column(Storage="_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[Column(Storage="_PlanCompleteDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PlanCompleteDate
		{
			get
			{
				return this._PlanCompleteDate;
			}
			set
			{
				if ((this._PlanCompleteDate != value))
				{
					this.OnPlanCompleteDateChanging(value);
					this.SendPropertyChanging();
					this._PlanCompleteDate = value;
					this.SendPropertyChanged("PlanCompleteDate");
					this.OnPlanCompleteDateChanged();
				}
			}
		}
		
		[Column(Storage="_Sender", DbType="NVarChar(50)")]
		public string Sender
		{
			get
			{
				return this._Sender;
			}
			set
			{
				if ((this._Sender != value))
				{
					this.OnSenderChanging(value);
					this.SendPropertyChanging();
					this._Sender = value;
					this.SendPropertyChanged("Sender");
					this.OnSenderChanged();
				}
			}
		}
		
		[Column(Storage="_IsCompleted", DbType="Bit")]
		public System.Nullable<bool> IsCompleted
		{
			get
			{
				return this._IsCompleted;
			}
			set
			{
				if ((this._IsCompleted != value))
				{
					this.OnIsCompletedChanging(value);
					this.SendPropertyChanging();
					this._IsCompleted = value;
					this.SendPropertyChanged("IsCompleted");
					this.OnIsCompletedChanged();
				}
			}
		}
		
		[Column(Storage="_Factory", DbType="NVarChar(20)")]
		public string Factory
		{
			get
			{
				return this._Factory;
			}
			set
			{
				if ((this._Factory != value))
				{
					this.OnFactoryChanging(value);
					this.SendPropertyChanging();
					this._Factory = value;
					this.SendPropertyChanged("Factory");
					this.OnFactoryChanged();
				}
			}
		}
		
		[Column(Storage="_Workshop", DbType="NVarChar(20)")]
		public string Workshop
		{
			get
			{
				return this._Workshop;
			}
			set
			{
				if ((this._Workshop != value))
				{
					this.OnWorkshopChanging(value);
					this.SendPropertyChanging();
					this._Workshop = value;
					this.SendPropertyChanged("Workshop");
					this.OnWorkshopChanged();
				}
			}
		}
		
		[Column(Storage="_Line", DbType="NVarChar(20)")]
		public string Line
		{
			get
			{
				return this._Line;
			}
			set
			{
				if ((this._Line != value))
				{
					this.OnLineChanging(value);
					this.SendPropertyChanging();
					this._Line = value;
					this.SendPropertyChanged("Line");
					this.OnLineChanged();
				}
			}
		}
		
		[Association(Name="ActionLogHeader_ActionLogDetail", Storage="_ActionLogDetails", ThisKey="LogNO", OtherKey="LogNO")]
		public EntitySet<ActionLogDetail> ActionLogDetails
		{
			get
			{
				return this._ActionLogDetails;
			}
			set
			{
				this._ActionLogDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ActionLogDetails(ActionLogDetail entity)
		{
			this.SendPropertyChanging();
			entity.ActionLogHeader = this;
		}
		
		private void detach_ActionLogDetails(ActionLogDetail entity)
		{
			this.SendPropertyChanging();
			entity.ActionLogHeader = null;
		}
	}
	
	[Table(Name="dbo.AlertLogHeader")]
	public partial class AlertLogHeader : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _OID;
		
		private string _Factory;
		
		private string _LineCode;
		
		private string _j_NO;
		
		private string _J2_job;
		
		private string _Rwo;
		
		private string _Qn;
		
		private string _Bcolor;
		
		private string _AcitonID;
		
		private string _ItemNo;
		
		private string _ItemSubject;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _PlanEndDate;
		
		private System.Nullable<bool> _IsCompleted;
		
		private System.Nullable<System.DateTime> _CompletedDate;
		
		private EntitySet<AlertLogDetail> _AlertLogDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOIDChanging(long value);
    partial void OnOIDChanged();
    partial void OnFactoryChanging(string value);
    partial void OnFactoryChanged();
    partial void OnLineCodeChanging(string value);
    partial void OnLineCodeChanged();
    partial void Onj_NOChanging(string value);
    partial void Onj_NOChanged();
    partial void OnJ2_jobChanging(string value);
    partial void OnJ2_jobChanged();
    partial void OnRwoChanging(string value);
    partial void OnRwoChanged();
    partial void OnQnChanging(string value);
    partial void OnQnChanged();
    partial void OnBcolorChanging(string value);
    partial void OnBcolorChanged();
    partial void OnAcitonIDChanging(string value);
    partial void OnAcitonIDChanged();
    partial void OnItemNoChanging(string value);
    partial void OnItemNoChanged();
    partial void OnItemSubjectChanging(string value);
    partial void OnItemSubjectChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnPlanEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPlanEndDateChanged();
    partial void OnIsCompletedChanging(System.Nullable<bool> value);
    partial void OnIsCompletedChanged();
    partial void OnCompletedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCompletedDateChanged();
    #endregion
		
		public AlertLogHeader()
		{
			this._AlertLogDetails = new EntitySet<AlertLogDetail>(new Action<AlertLogDetail>(this.attach_AlertLogDetails), new Action<AlertLogDetail>(this.detach_AlertLogDetails));
			OnCreated();
		}
		
		[Column(Storage="_OID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long OID
		{
			get
			{
				return this._OID;
			}
			set
			{
				if ((this._OID != value))
				{
					this.OnOIDChanging(value);
					this.SendPropertyChanging();
					this._OID = value;
					this.SendPropertyChanged("OID");
					this.OnOIDChanged();
				}
			}
		}
		
		[Column(Storage="_Factory", DbType="VarChar(5)")]
		public string Factory
		{
			get
			{
				return this._Factory;
			}
			set
			{
				if ((this._Factory != value))
				{
					this.OnFactoryChanging(value);
					this.SendPropertyChanging();
					this._Factory = value;
					this.SendPropertyChanged("Factory");
					this.OnFactoryChanged();
				}
			}
		}
		
		[Column(Storage="_LineCode", DbType="VarChar(50)")]
		public string LineCode
		{
			get
			{
				return this._LineCode;
			}
			set
			{
				if ((this._LineCode != value))
				{
					this.OnLineCodeChanging(value);
					this.SendPropertyChanging();
					this._LineCode = value;
					this.SendPropertyChanged("LineCode");
					this.OnLineCodeChanged();
				}
			}
		}
		
		[Column(Storage="_j_NO", DbType="VarChar(15)")]
		public string j_NO
		{
			get
			{
				return this._j_NO;
			}
			set
			{
				if ((this._j_NO != value))
				{
					this.Onj_NOChanging(value);
					this.SendPropertyChanging();
					this._j_NO = value;
					this.SendPropertyChanged("j_NO");
					this.Onj_NOChanged();
				}
			}
		}
		
		[Column(Storage="_J2_job", DbType="VarChar(15)")]
		public string J2_job
		{
			get
			{
				return this._J2_job;
			}
			set
			{
				if ((this._J2_job != value))
				{
					this.OnJ2_jobChanging(value);
					this.SendPropertyChanging();
					this._J2_job = value;
					this.SendPropertyChanged("J2_job");
					this.OnJ2_jobChanged();
				}
			}
		}
		
		[Column(Storage="_Rwo", DbType="VarChar(10)")]
		public string Rwo
		{
			get
			{
				return this._Rwo;
			}
			set
			{
				if ((this._Rwo != value))
				{
					this.OnRwoChanging(value);
					this.SendPropertyChanging();
					this._Rwo = value;
					this.SendPropertyChanged("Rwo");
					this.OnRwoChanged();
				}
			}
		}
		
		[Column(Storage="_Qn", DbType="VarChar(10)")]
		public string Qn
		{
			get
			{
				return this._Qn;
			}
			set
			{
				if ((this._Qn != value))
				{
					this.OnQnChanging(value);
					this.SendPropertyChanging();
					this._Qn = value;
					this.SendPropertyChanged("Qn");
					this.OnQnChanged();
				}
			}
		}
		
		[Column(Storage="_Bcolor", DbType="VarChar(10)")]
		public string Bcolor
		{
			get
			{
				return this._Bcolor;
			}
			set
			{
				if ((this._Bcolor != value))
				{
					this.OnBcolorChanging(value);
					this.SendPropertyChanging();
					this._Bcolor = value;
					this.SendPropertyChanged("Bcolor");
					this.OnBcolorChanged();
				}
			}
		}
		
		[Column(Storage="_AcitonID", DbType="VarChar(20)")]
		public string AcitonID
		{
			get
			{
				return this._AcitonID;
			}
			set
			{
				if ((this._AcitonID != value))
				{
					this.OnAcitonIDChanging(value);
					this.SendPropertyChanging();
					this._AcitonID = value;
					this.SendPropertyChanged("AcitonID");
					this.OnAcitonIDChanged();
				}
			}
		}
		
		[Column(Storage="_ItemNo", DbType="NVarChar(100)")]
		public string ItemNo
		{
			get
			{
				return this._ItemNo;
			}
			set
			{
				if ((this._ItemNo != value))
				{
					this.OnItemNoChanging(value);
					this.SendPropertyChanging();
					this._ItemNo = value;
					this.SendPropertyChanged("ItemNo");
					this.OnItemNoChanged();
				}
			}
		}
		
		[Column(Storage="_ItemSubject", DbType="NVarChar(MAX)")]
		public string ItemSubject
		{
			get
			{
				return this._ItemSubject;
			}
			set
			{
				if ((this._ItemSubject != value))
				{
					this.OnItemSubjectChanging(value);
					this.SendPropertyChanging();
					this._ItemSubject = value;
					this.SendPropertyChanged("ItemSubject");
					this.OnItemSubjectChanged();
				}
			}
		}
		
		[Column(Storage="_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[Column(Storage="_PlanEndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PlanEndDate
		{
			get
			{
				return this._PlanEndDate;
			}
			set
			{
				if ((this._PlanEndDate != value))
				{
					this.OnPlanEndDateChanging(value);
					this.SendPropertyChanging();
					this._PlanEndDate = value;
					this.SendPropertyChanged("PlanEndDate");
					this.OnPlanEndDateChanged();
				}
			}
		}
		
		[Column(Storage="_IsCompleted", DbType="Bit")]
		public System.Nullable<bool> IsCompleted
		{
			get
			{
				return this._IsCompleted;
			}
			set
			{
				if ((this._IsCompleted != value))
				{
					this.OnIsCompletedChanging(value);
					this.SendPropertyChanging();
					this._IsCompleted = value;
					this.SendPropertyChanged("IsCompleted");
					this.OnIsCompletedChanged();
				}
			}
		}
		
		[Column(Storage="_CompletedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompletedDate
		{
			get
			{
				return this._CompletedDate;
			}
			set
			{
				if ((this._CompletedDate != value))
				{
					this.OnCompletedDateChanging(value);
					this.SendPropertyChanging();
					this._CompletedDate = value;
					this.SendPropertyChanged("CompletedDate");
					this.OnCompletedDateChanged();
				}
			}
		}
		
		[Association(Name="AlertLogHeader_AlertLogDetail", Storage="_AlertLogDetails", ThisKey="OID", OtherKey="AlertLogHeaderOID")]
		public EntitySet<AlertLogDetail> AlertLogDetails
		{
			get
			{
				return this._AlertLogDetails;
			}
			set
			{
				this._AlertLogDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AlertLogDetails(AlertLogDetail entity)
		{
			this.SendPropertyChanging();
			entity.AlertLogHeader = this;
		}
		
		private void detach_AlertLogDetails(AlertLogDetail entity)
		{
			this.SendPropertyChanging();
			entity.AlertLogHeader = null;
		}
	}
	
	[Table(Name="dbo.AlertLogCategory")]
	public partial class AlertLogCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _BigCategory;
		
		private string _Category;
		
		private string _Description;
		
		private string _Description_EN;
		
		private string _Description_BD;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnBigCategoryChanging(string value);
    partial void OnBigCategoryChanged();
    partial void OnCategoryChanging(string value);
    partial void OnCategoryChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDescription_ENChanging(string value);
    partial void OnDescription_ENChanged();
    partial void OnDescription_BDChanging(string value);
    partial void OnDescription_BDChanged();
    #endregion
		
		public AlertLogCategory()
		{
			OnCreated();
		}
		
		[Column(Storage="_Code", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[Column(Storage="_BigCategory", DbType="NVarChar(100)")]
		public string BigCategory
		{
			get
			{
				return this._BigCategory;
			}
			set
			{
				if ((this._BigCategory != value))
				{
					this.OnBigCategoryChanging(value);
					this.SendPropertyChanging();
					this._BigCategory = value;
					this.SendPropertyChanged("BigCategory");
					this.OnBigCategoryChanged();
				}
			}
		}
		
		[Column(Storage="_Category", DbType="NVarChar(100)")]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		[Column(Storage="_Description", DbType="NVarChar(1000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_Description_EN", DbType="NVarChar(1000)")]
		public string Description_EN
		{
			get
			{
				return this._Description_EN;
			}
			set
			{
				if ((this._Description_EN != value))
				{
					this.OnDescription_ENChanging(value);
					this.SendPropertyChanging();
					this._Description_EN = value;
					this.SendPropertyChanged("Description_EN");
					this.OnDescription_ENChanged();
				}
			}
		}
		
		[Column(Storage="_Description_BD", DbType="NVarChar(1000)")]
		public string Description_BD
		{
			get
			{
				return this._Description_BD;
			}
			set
			{
				if ((this._Description_BD != value))
				{
					this.OnDescription_BDChanging(value);
					this.SendPropertyChanging();
					this._Description_BD = value;
					this.SendPropertyChanged("Description_BD");
					this.OnDescription_BDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.OpsPermitSign")]
	public partial class OpsPermitSign : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OID;
		
		private string _Factory;
		
		private string _Line;
		
		private string _QualAuditor_P;
		
		private string _QualAuditor_B;
		
		private string _QualAuditor_F;
		
		private string _QualAuditor_A;
		
		private string _QualAuditor_E;
		
		private string _Mechanic_P;
		
		private string _Mechanic_B;
		
		private string _Mechanic_F;
		
		private string _Mechanic_A;
		
		private string _Mechanic_E;
		
		private string _LineLeader_P;
		
		private string _LineLeader_B;
		
		private string _LineLeader_F;
		
		private string _LineLeader_A;
		
		private string _LineLeader_E;
		
		private string _Supervisor_P;
		
		private string _Supervisor_B;
		
		private string _Supervisor_F;
		
		private string _Supervisor_A;
		
		private string _Supervisor_E;
		
		private string _Superintendent_P;
		
		private string _Superintendent_B;
		
		private string _Superintendent_F;
		
		private string _Superintendent_A;
		
		private string _Superintendent_E;
		
		private string _Approval1;
		
		private string _Approval2;
		
		private string _MobileAuditor_P;
		
		private string _MobileAuditor_B;
		
		private string _MobileAuditor_F;
		
		private string _MobileAuditor_A;
		
		private string _MobileAuditor_E;
		
		private string _InlineInspector;
		
		private string _EndlineInspector;
		
		private EntityRef<OpsPermitSign> _OpsPermitSign2;
		
		private EntityRef<OpsPermitSign> _OpsPermitSign1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOIDChanging(int value);
    partial void OnOIDChanged();
    partial void OnFactoryChanging(string value);
    partial void OnFactoryChanged();
    partial void OnLineChanging(string value);
    partial void OnLineChanged();
    partial void OnQualAuditor_PChanging(string value);
    partial void OnQualAuditor_PChanged();
    partial void OnQualAuditor_BChanging(string value);
    partial void OnQualAuditor_BChanged();
    partial void OnQualAuditor_FChanging(string value);
    partial void OnQualAuditor_FChanged();
    partial void OnQualAuditor_AChanging(string value);
    partial void OnQualAuditor_AChanged();
    partial void OnQualAuditor_EChanging(string value);
    partial void OnQualAuditor_EChanged();
    partial void OnMechanic_PChanging(string value);
    partial void OnMechanic_PChanged();
    partial void OnMechanic_BChanging(string value);
    partial void OnMechanic_BChanged();
    partial void OnMechanic_FChanging(string value);
    partial void OnMechanic_FChanged();
    partial void OnMechanic_AChanging(string value);
    partial void OnMechanic_AChanged();
    partial void OnMechanic_EChanging(string value);
    partial void OnMechanic_EChanged();
    partial void OnLineLeader_PChanging(string value);
    partial void OnLineLeader_PChanged();
    partial void OnLineLeader_BChanging(string value);
    partial void OnLineLeader_BChanged();
    partial void OnLineLeader_FChanging(string value);
    partial void OnLineLeader_FChanged();
    partial void OnLineLeader_AChanging(string value);
    partial void OnLineLeader_AChanged();
    partial void OnLineLeader_EChanging(string value);
    partial void OnLineLeader_EChanged();
    partial void OnSupervisor_PChanging(string value);
    partial void OnSupervisor_PChanged();
    partial void OnSupervisor_BChanging(string value);
    partial void OnSupervisor_BChanged();
    partial void OnSupervisor_FChanging(string value);
    partial void OnSupervisor_FChanged();
    partial void OnSupervisor_AChanging(string value);
    partial void OnSupervisor_AChanged();
    partial void OnSupervisor_EChanging(string value);
    partial void OnSupervisor_EChanged();
    partial void OnSuperintendent_PChanging(string value);
    partial void OnSuperintendent_PChanged();
    partial void OnSuperintendent_BChanging(string value);
    partial void OnSuperintendent_BChanged();
    partial void OnSuperintendent_FChanging(string value);
    partial void OnSuperintendent_FChanged();
    partial void OnSuperintendent_AChanging(string value);
    partial void OnSuperintendent_AChanged();
    partial void OnSuperintendent_EChanging(string value);
    partial void OnSuperintendent_EChanged();
    partial void OnApproval1Changing(string value);
    partial void OnApproval1Changed();
    partial void OnApproval2Changing(string value);
    partial void OnApproval2Changed();
    partial void OnMobileAuditor_PChanging(string value);
    partial void OnMobileAuditor_PChanged();
    partial void OnMobileAuditor_BChanging(string value);
    partial void OnMobileAuditor_BChanged();
    partial void OnMobileAuditor_FChanging(string value);
    partial void OnMobileAuditor_FChanged();
    partial void OnMobileAuditor_AChanging(string value);
    partial void OnMobileAuditor_AChanged();
    partial void OnMobileAuditor_EChanging(string value);
    partial void OnMobileAuditor_EChanged();
    partial void OnInlineInspectorChanging(string value);
    partial void OnInlineInspectorChanged();
    partial void OnEndlineInspectorChanging(string value);
    partial void OnEndlineInspectorChanged();
    #endregion
		
		public OpsPermitSign()
		{
			this._OpsPermitSign2 = default(EntityRef<OpsPermitSign>);
			this._OpsPermitSign1 = default(EntityRef<OpsPermitSign>);
			OnCreated();
		}
		
		[Column(Storage="_OID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int OID
		{
			get
			{
				return this._OID;
			}
			set
			{
				if ((this._OID != value))
				{
					if (this._OpsPermitSign1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOIDChanging(value);
					this.SendPropertyChanging();
					this._OID = value;
					this.SendPropertyChanged("OID");
					this.OnOIDChanged();
				}
			}
		}
		
		[Column(Storage="_Factory", DbType="NVarChar(20)")]
		public string Factory
		{
			get
			{
				return this._Factory;
			}
			set
			{
				if ((this._Factory != value))
				{
					this.OnFactoryChanging(value);
					this.SendPropertyChanging();
					this._Factory = value;
					this.SendPropertyChanged("Factory");
					this.OnFactoryChanged();
				}
			}
		}
		
		[Column(Storage="_Line", DbType="NVarChar(20)")]
		public string Line
		{
			get
			{
				return this._Line;
			}
			set
			{
				if ((this._Line != value))
				{
					this.OnLineChanging(value);
					this.SendPropertyChanging();
					this._Line = value;
					this.SendPropertyChanged("Line");
					this.OnLineChanged();
				}
			}
		}
		
		[Column(Storage="_QualAuditor_P", DbType="NVarChar(100)")]
		public string QualAuditor_P
		{
			get
			{
				return this._QualAuditor_P;
			}
			set
			{
				if ((this._QualAuditor_P != value))
				{
					this.OnQualAuditor_PChanging(value);
					this.SendPropertyChanging();
					this._QualAuditor_P = value;
					this.SendPropertyChanged("QualAuditor_P");
					this.OnQualAuditor_PChanged();
				}
			}
		}
		
		[Column(Storage="_QualAuditor_B", DbType="NVarChar(100)")]
		public string QualAuditor_B
		{
			get
			{
				return this._QualAuditor_B;
			}
			set
			{
				if ((this._QualAuditor_B != value))
				{
					this.OnQualAuditor_BChanging(value);
					this.SendPropertyChanging();
					this._QualAuditor_B = value;
					this.SendPropertyChanged("QualAuditor_B");
					this.OnQualAuditor_BChanged();
				}
			}
		}
		
		[Column(Storage="_QualAuditor_F", DbType="NVarChar(100)")]
		public string QualAuditor_F
		{
			get
			{
				return this._QualAuditor_F;
			}
			set
			{
				if ((this._QualAuditor_F != value))
				{
					this.OnQualAuditor_FChanging(value);
					this.SendPropertyChanging();
					this._QualAuditor_F = value;
					this.SendPropertyChanged("QualAuditor_F");
					this.OnQualAuditor_FChanged();
				}
			}
		}
		
		[Column(Storage="_QualAuditor_A", DbType="NVarChar(100)")]
		public string QualAuditor_A
		{
			get
			{
				return this._QualAuditor_A;
			}
			set
			{
				if ((this._QualAuditor_A != value))
				{
					this.OnQualAuditor_AChanging(value);
					this.SendPropertyChanging();
					this._QualAuditor_A = value;
					this.SendPropertyChanged("QualAuditor_A");
					this.OnQualAuditor_AChanged();
				}
			}
		}
		
		[Column(Storage="_QualAuditor_E", DbType="NVarChar(100)")]
		public string QualAuditor_E
		{
			get
			{
				return this._QualAuditor_E;
			}
			set
			{
				if ((this._QualAuditor_E != value))
				{
					this.OnQualAuditor_EChanging(value);
					this.SendPropertyChanging();
					this._QualAuditor_E = value;
					this.SendPropertyChanged("QualAuditor_E");
					this.OnQualAuditor_EChanged();
				}
			}
		}
		
		[Column(Storage="_Mechanic_P", DbType="NVarChar(100)")]
		public string Mechanic_P
		{
			get
			{
				return this._Mechanic_P;
			}
			set
			{
				if ((this._Mechanic_P != value))
				{
					this.OnMechanic_PChanging(value);
					this.SendPropertyChanging();
					this._Mechanic_P = value;
					this.SendPropertyChanged("Mechanic_P");
					this.OnMechanic_PChanged();
				}
			}
		}
		
		[Column(Storage="_Mechanic_B", DbType="NVarChar(100)")]
		public string Mechanic_B
		{
			get
			{
				return this._Mechanic_B;
			}
			set
			{
				if ((this._Mechanic_B != value))
				{
					this.OnMechanic_BChanging(value);
					this.SendPropertyChanging();
					this._Mechanic_B = value;
					this.SendPropertyChanged("Mechanic_B");
					this.OnMechanic_BChanged();
				}
			}
		}
		
		[Column(Storage="_Mechanic_F", DbType="NVarChar(100)")]
		public string Mechanic_F
		{
			get
			{
				return this._Mechanic_F;
			}
			set
			{
				if ((this._Mechanic_F != value))
				{
					this.OnMechanic_FChanging(value);
					this.SendPropertyChanging();
					this._Mechanic_F = value;
					this.SendPropertyChanged("Mechanic_F");
					this.OnMechanic_FChanged();
				}
			}
		}
		
		[Column(Storage="_Mechanic_A", DbType="NVarChar(100)")]
		public string Mechanic_A
		{
			get
			{
				return this._Mechanic_A;
			}
			set
			{
				if ((this._Mechanic_A != value))
				{
					this.OnMechanic_AChanging(value);
					this.SendPropertyChanging();
					this._Mechanic_A = value;
					this.SendPropertyChanged("Mechanic_A");
					this.OnMechanic_AChanged();
				}
			}
		}
		
		[Column(Storage="_Mechanic_E", DbType="NVarChar(100)")]
		public string Mechanic_E
		{
			get
			{
				return this._Mechanic_E;
			}
			set
			{
				if ((this._Mechanic_E != value))
				{
					this.OnMechanic_EChanging(value);
					this.SendPropertyChanging();
					this._Mechanic_E = value;
					this.SendPropertyChanged("Mechanic_E");
					this.OnMechanic_EChanged();
				}
			}
		}
		
		[Column(Storage="_LineLeader_P", DbType="NVarChar(100)")]
		public string LineLeader_P
		{
			get
			{
				return this._LineLeader_P;
			}
			set
			{
				if ((this._LineLeader_P != value))
				{
					this.OnLineLeader_PChanging(value);
					this.SendPropertyChanging();
					this._LineLeader_P = value;
					this.SendPropertyChanged("LineLeader_P");
					this.OnLineLeader_PChanged();
				}
			}
		}
		
		[Column(Storage="_LineLeader_B", DbType="NVarChar(100)")]
		public string LineLeader_B
		{
			get
			{
				return this._LineLeader_B;
			}
			set
			{
				if ((this._LineLeader_B != value))
				{
					this.OnLineLeader_BChanging(value);
					this.SendPropertyChanging();
					this._LineLeader_B = value;
					this.SendPropertyChanged("LineLeader_B");
					this.OnLineLeader_BChanged();
				}
			}
		}
		
		[Column(Storage="_LineLeader_F", DbType="NVarChar(100)")]
		public string LineLeader_F
		{
			get
			{
				return this._LineLeader_F;
			}
			set
			{
				if ((this._LineLeader_F != value))
				{
					this.OnLineLeader_FChanging(value);
					this.SendPropertyChanging();
					this._LineLeader_F = value;
					this.SendPropertyChanged("LineLeader_F");
					this.OnLineLeader_FChanged();
				}
			}
		}
		
		[Column(Storage="_LineLeader_A", DbType="NVarChar(100)")]
		public string LineLeader_A
		{
			get
			{
				return this._LineLeader_A;
			}
			set
			{
				if ((this._LineLeader_A != value))
				{
					this.OnLineLeader_AChanging(value);
					this.SendPropertyChanging();
					this._LineLeader_A = value;
					this.SendPropertyChanged("LineLeader_A");
					this.OnLineLeader_AChanged();
				}
			}
		}
		
		[Column(Storage="_LineLeader_E", DbType="NVarChar(100)")]
		public string LineLeader_E
		{
			get
			{
				return this._LineLeader_E;
			}
			set
			{
				if ((this._LineLeader_E != value))
				{
					this.OnLineLeader_EChanging(value);
					this.SendPropertyChanging();
					this._LineLeader_E = value;
					this.SendPropertyChanged("LineLeader_E");
					this.OnLineLeader_EChanged();
				}
			}
		}
		
		[Column(Storage="_Supervisor_P", DbType="NVarChar(100)")]
		public string Supervisor_P
		{
			get
			{
				return this._Supervisor_P;
			}
			set
			{
				if ((this._Supervisor_P != value))
				{
					this.OnSupervisor_PChanging(value);
					this.SendPropertyChanging();
					this._Supervisor_P = value;
					this.SendPropertyChanged("Supervisor_P");
					this.OnSupervisor_PChanged();
				}
			}
		}
		
		[Column(Storage="_Supervisor_B", DbType="NVarChar(100)")]
		public string Supervisor_B
		{
			get
			{
				return this._Supervisor_B;
			}
			set
			{
				if ((this._Supervisor_B != value))
				{
					this.OnSupervisor_BChanging(value);
					this.SendPropertyChanging();
					this._Supervisor_B = value;
					this.SendPropertyChanged("Supervisor_B");
					this.OnSupervisor_BChanged();
				}
			}
		}
		
		[Column(Storage="_Supervisor_F", DbType="NVarChar(100)")]
		public string Supervisor_F
		{
			get
			{
				return this._Supervisor_F;
			}
			set
			{
				if ((this._Supervisor_F != value))
				{
					this.OnSupervisor_FChanging(value);
					this.SendPropertyChanging();
					this._Supervisor_F = value;
					this.SendPropertyChanged("Supervisor_F");
					this.OnSupervisor_FChanged();
				}
			}
		}
		
		[Column(Storage="_Supervisor_A", DbType="NVarChar(100)")]
		public string Supervisor_A
		{
			get
			{
				return this._Supervisor_A;
			}
			set
			{
				if ((this._Supervisor_A != value))
				{
					this.OnSupervisor_AChanging(value);
					this.SendPropertyChanging();
					this._Supervisor_A = value;
					this.SendPropertyChanged("Supervisor_A");
					this.OnSupervisor_AChanged();
				}
			}
		}
		
		[Column(Storage="_Supervisor_E", DbType="NVarChar(100)")]
		public string Supervisor_E
		{
			get
			{
				return this._Supervisor_E;
			}
			set
			{
				if ((this._Supervisor_E != value))
				{
					this.OnSupervisor_EChanging(value);
					this.SendPropertyChanging();
					this._Supervisor_E = value;
					this.SendPropertyChanged("Supervisor_E");
					this.OnSupervisor_EChanged();
				}
			}
		}
		
		[Column(Storage="_Superintendent_P", DbType="NVarChar(100)")]
		public string Superintendent_P
		{
			get
			{
				return this._Superintendent_P;
			}
			set
			{
				if ((this._Superintendent_P != value))
				{
					this.OnSuperintendent_PChanging(value);
					this.SendPropertyChanging();
					this._Superintendent_P = value;
					this.SendPropertyChanged("Superintendent_P");
					this.OnSuperintendent_PChanged();
				}
			}
		}
		
		[Column(Storage="_Superintendent_B", DbType="NVarChar(100)")]
		public string Superintendent_B
		{
			get
			{
				return this._Superintendent_B;
			}
			set
			{
				if ((this._Superintendent_B != value))
				{
					this.OnSuperintendent_BChanging(value);
					this.SendPropertyChanging();
					this._Superintendent_B = value;
					this.SendPropertyChanged("Superintendent_B");
					this.OnSuperintendent_BChanged();
				}
			}
		}
		
		[Column(Storage="_Superintendent_F", DbType="NVarChar(100)")]
		public string Superintendent_F
		{
			get
			{
				return this._Superintendent_F;
			}
			set
			{
				if ((this._Superintendent_F != value))
				{
					this.OnSuperintendent_FChanging(value);
					this.SendPropertyChanging();
					this._Superintendent_F = value;
					this.SendPropertyChanged("Superintendent_F");
					this.OnSuperintendent_FChanged();
				}
			}
		}
		
		[Column(Storage="_Superintendent_A", DbType="NVarChar(100)")]
		public string Superintendent_A
		{
			get
			{
				return this._Superintendent_A;
			}
			set
			{
				if ((this._Superintendent_A != value))
				{
					this.OnSuperintendent_AChanging(value);
					this.SendPropertyChanging();
					this._Superintendent_A = value;
					this.SendPropertyChanged("Superintendent_A");
					this.OnSuperintendent_AChanged();
				}
			}
		}
		
		[Column(Storage="_Superintendent_E", DbType="NVarChar(100)")]
		public string Superintendent_E
		{
			get
			{
				return this._Superintendent_E;
			}
			set
			{
				if ((this._Superintendent_E != value))
				{
					this.OnSuperintendent_EChanging(value);
					this.SendPropertyChanging();
					this._Superintendent_E = value;
					this.SendPropertyChanged("Superintendent_E");
					this.OnSuperintendent_EChanged();
				}
			}
		}
		
		[Column(Storage="_Approval1", DbType="NVarChar(100)")]
		public string Approval1
		{
			get
			{
				return this._Approval1;
			}
			set
			{
				if ((this._Approval1 != value))
				{
					this.OnApproval1Changing(value);
					this.SendPropertyChanging();
					this._Approval1 = value;
					this.SendPropertyChanged("Approval1");
					this.OnApproval1Changed();
				}
			}
		}
		
		[Column(Storage="_Approval2", DbType="NVarChar(100)")]
		public string Approval2
		{
			get
			{
				return this._Approval2;
			}
			set
			{
				if ((this._Approval2 != value))
				{
					this.OnApproval2Changing(value);
					this.SendPropertyChanging();
					this._Approval2 = value;
					this.SendPropertyChanged("Approval2");
					this.OnApproval2Changed();
				}
			}
		}
		
		[Column(Storage="_MobileAuditor_P", DbType="NVarChar(100)")]
		public string MobileAuditor_P
		{
			get
			{
				return this._MobileAuditor_P;
			}
			set
			{
				if ((this._MobileAuditor_P != value))
				{
					this.OnMobileAuditor_PChanging(value);
					this.SendPropertyChanging();
					this._MobileAuditor_P = value;
					this.SendPropertyChanged("MobileAuditor_P");
					this.OnMobileAuditor_PChanged();
				}
			}
		}
		
		[Column(Storage="_MobileAuditor_B", DbType="NVarChar(100)")]
		public string MobileAuditor_B
		{
			get
			{
				return this._MobileAuditor_B;
			}
			set
			{
				if ((this._MobileAuditor_B != value))
				{
					this.OnMobileAuditor_BChanging(value);
					this.SendPropertyChanging();
					this._MobileAuditor_B = value;
					this.SendPropertyChanged("MobileAuditor_B");
					this.OnMobileAuditor_BChanged();
				}
			}
		}
		
		[Column(Storage="_MobileAuditor_F", DbType="NVarChar(100)")]
		public string MobileAuditor_F
		{
			get
			{
				return this._MobileAuditor_F;
			}
			set
			{
				if ((this._MobileAuditor_F != value))
				{
					this.OnMobileAuditor_FChanging(value);
					this.SendPropertyChanging();
					this._MobileAuditor_F = value;
					this.SendPropertyChanged("MobileAuditor_F");
					this.OnMobileAuditor_FChanged();
				}
			}
		}
		
		[Column(Storage="_MobileAuditor_A", DbType="NVarChar(100)")]
		public string MobileAuditor_A
		{
			get
			{
				return this._MobileAuditor_A;
			}
			set
			{
				if ((this._MobileAuditor_A != value))
				{
					this.OnMobileAuditor_AChanging(value);
					this.SendPropertyChanging();
					this._MobileAuditor_A = value;
					this.SendPropertyChanged("MobileAuditor_A");
					this.OnMobileAuditor_AChanged();
				}
			}
		}
		
		[Column(Storage="_MobileAuditor_E", DbType="NVarChar(100)")]
		public string MobileAuditor_E
		{
			get
			{
				return this._MobileAuditor_E;
			}
			set
			{
				if ((this._MobileAuditor_E != value))
				{
					this.OnMobileAuditor_EChanging(value);
					this.SendPropertyChanging();
					this._MobileAuditor_E = value;
					this.SendPropertyChanged("MobileAuditor_E");
					this.OnMobileAuditor_EChanged();
				}
			}
		}
		
		[Column(Storage="_InlineInspector", DbType="NVarChar(100)")]
		public string InlineInspector
		{
			get
			{
				return this._InlineInspector;
			}
			set
			{
				if ((this._InlineInspector != value))
				{
					this.OnInlineInspectorChanging(value);
					this.SendPropertyChanging();
					this._InlineInspector = value;
					this.SendPropertyChanged("InlineInspector");
					this.OnInlineInspectorChanged();
				}
			}
		}
		
		[Column(Storage="_EndlineInspector", DbType="NVarChar(100)")]
		public string EndlineInspector
		{
			get
			{
				return this._EndlineInspector;
			}
			set
			{
				if ((this._EndlineInspector != value))
				{
					this.OnEndlineInspectorChanging(value);
					this.SendPropertyChanging();
					this._EndlineInspector = value;
					this.SendPropertyChanged("EndlineInspector");
					this.OnEndlineInspectorChanged();
				}
			}
		}
		
		[Association(Name="OpsPermitSign_OpsPermitSign", Storage="_OpsPermitSign2", ThisKey="OID", OtherKey="OID", IsUnique=true, IsForeignKey=false)]
		public OpsPermitSign OpsPermitSign2
		{
			get
			{
				return this._OpsPermitSign2.Entity;
			}
			set
			{
				OpsPermitSign previousValue = this._OpsPermitSign2.Entity;
				if (((previousValue != value) 
							|| (this._OpsPermitSign2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OpsPermitSign2.Entity = null;
						previousValue.OpsPermitSign1 = null;
					}
					this._OpsPermitSign2.Entity = value;
					if ((value != null))
					{
						value.OpsPermitSign1 = this;
					}
					this.SendPropertyChanged("OpsPermitSign2");
				}
			}
		}
		
		[Association(Name="OpsPermitSign_OpsPermitSign", Storage="_OpsPermitSign1", ThisKey="OID", OtherKey="OID", IsForeignKey=true)]
		public OpsPermitSign OpsPermitSign1
		{
			get
			{
				return this._OpsPermitSign1.Entity;
			}
			set
			{
				OpsPermitSign previousValue = this._OpsPermitSign1.Entity;
				if (((previousValue != value) 
							|| (this._OpsPermitSign1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OpsPermitSign1.Entity = null;
						previousValue.OpsPermitSign2 = null;
					}
					this._OpsPermitSign1.Entity = value;
					if ((value != null))
					{
						value.OpsPermitSign2 = this;
						this._OID = value.OID;
					}
					else
					{
						this._OID = default(int);
					}
					this.SendPropertyChanged("OpsPermitSign1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.DepartalSort")]
	public partial class DepartalSort : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowID;
		
		private string _SeqNo;
		
		private string _Deptmental_EN;
		
		private string _Section_EN;
		
		private string _Team_EN;
		
		private string _Class_EN;
		
		private string _DeptType;
		
		private System.Nullable<bool> _IsCludeAll;
		
		private System.Nullable<bool> _IsStaffOnly;
		
		private string _DepartalCode;
		
		private string _Division_EN;
		
		private System.Nullable<bool> _HKOFFICE;
		
		private System.Nullable<bool> _SLSALES;
		
		private System.Nullable<bool> _SLMAIN;
		
		private System.Nullable<bool> _GGSALES;
		
		private System.Nullable<bool> _GGFACT;
		
		private System.Nullable<bool> _RXFACT;
		
		private System.Nullable<bool> _CGSALES;
		
		private System.Nullable<bool> _CGFACT;
		
		private string _WorkRegion;
		
		private string _Location;
		
		private System.Nullable<bool> _CCFACT;
		
		private System.Nullable<bool> _RXSALES;
		
		private bool _Active;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowIDChanging(int value);
    partial void OnRowIDChanged();
    partial void OnSeqNoChanging(string value);
    partial void OnSeqNoChanged();
    partial void OnDeptmental_ENChanging(string value);
    partial void OnDeptmental_ENChanged();
    partial void OnSection_ENChanging(string value);
    partial void OnSection_ENChanged();
    partial void OnTeam_ENChanging(string value);
    partial void OnTeam_ENChanged();
    partial void OnClass_ENChanging(string value);
    partial void OnClass_ENChanged();
    partial void OnDeptTypeChanging(string value);
    partial void OnDeptTypeChanged();
    partial void OnIsCludeAllChanging(System.Nullable<bool> value);
    partial void OnIsCludeAllChanged();
    partial void OnIsStaffOnlyChanging(System.Nullable<bool> value);
    partial void OnIsStaffOnlyChanged();
    partial void OnDepartalCodeChanging(string value);
    partial void OnDepartalCodeChanged();
    partial void OnDivision_ENChanging(string value);
    partial void OnDivision_ENChanged();
    partial void OnHKOFFICEChanging(System.Nullable<bool> value);
    partial void OnHKOFFICEChanged();
    partial void OnSLSALESChanging(System.Nullable<bool> value);
    partial void OnSLSALESChanged();
    partial void OnSLMAINChanging(System.Nullable<bool> value);
    partial void OnSLMAINChanged();
    partial void OnGGSALESChanging(System.Nullable<bool> value);
    partial void OnGGSALESChanged();
    partial void OnGGFACTChanging(System.Nullable<bool> value);
    partial void OnGGFACTChanged();
    partial void OnRXFACTChanging(System.Nullable<bool> value);
    partial void OnRXFACTChanged();
    partial void OnCGSALESChanging(System.Nullable<bool> value);
    partial void OnCGSALESChanged();
    partial void OnCGFACTChanging(System.Nullable<bool> value);
    partial void OnCGFACTChanged();
    partial void OnWorkRegionChanging(string value);
    partial void OnWorkRegionChanged();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    partial void OnCCFACTChanging(System.Nullable<bool> value);
    partial void OnCCFACTChanged();
    partial void OnRXSALESChanging(System.Nullable<bool> value);
    partial void OnRXSALESChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public DepartalSort()
		{
			OnCreated();
		}
		
		[Column(Storage="_RowID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RowID
		{
			get
			{
				return this._RowID;
			}
			set
			{
				if ((this._RowID != value))
				{
					this.OnRowIDChanging(value);
					this.SendPropertyChanging();
					this._RowID = value;
					this.SendPropertyChanged("RowID");
					this.OnRowIDChanged();
				}
			}
		}
		
		[Column(Storage="_SeqNo", DbType="VarChar(12)")]
		public string SeqNo
		{
			get
			{
				return this._SeqNo;
			}
			set
			{
				if ((this._SeqNo != value))
				{
					this.OnSeqNoChanging(value);
					this.SendPropertyChanging();
					this._SeqNo = value;
					this.SendPropertyChanged("SeqNo");
					this.OnSeqNoChanged();
				}
			}
		}
		
		[Column(Storage="_Deptmental_EN", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Deptmental_EN
		{
			get
			{
				return this._Deptmental_EN;
			}
			set
			{
				if ((this._Deptmental_EN != value))
				{
					this.OnDeptmental_ENChanging(value);
					this.SendPropertyChanging();
					this._Deptmental_EN = value;
					this.SendPropertyChanged("Deptmental_EN");
					this.OnDeptmental_ENChanged();
				}
			}
		}
		
		[Column(Storage="_Section_EN", DbType="NVarChar(150)")]
		public string Section_EN
		{
			get
			{
				return this._Section_EN;
			}
			set
			{
				if ((this._Section_EN != value))
				{
					this.OnSection_ENChanging(value);
					this.SendPropertyChanging();
					this._Section_EN = value;
					this.SendPropertyChanged("Section_EN");
					this.OnSection_ENChanged();
				}
			}
		}
		
		[Column(Storage="_Team_EN", DbType="NVarChar(150)")]
		public string Team_EN
		{
			get
			{
				return this._Team_EN;
			}
			set
			{
				if ((this._Team_EN != value))
				{
					this.OnTeam_ENChanging(value);
					this.SendPropertyChanging();
					this._Team_EN = value;
					this.SendPropertyChanged("Team_EN");
					this.OnTeam_ENChanged();
				}
			}
		}
		
		[Column(Storage="_Class_EN", DbType="NVarChar(150)")]
		public string Class_EN
		{
			get
			{
				return this._Class_EN;
			}
			set
			{
				if ((this._Class_EN != value))
				{
					this.OnClass_ENChanging(value);
					this.SendPropertyChanging();
					this._Class_EN = value;
					this.SendPropertyChanged("Class_EN");
					this.OnClass_ENChanged();
				}
			}
		}
		
		[Column(Storage="_DeptType", DbType="VarChar(4)")]
		public string DeptType
		{
			get
			{
				return this._DeptType;
			}
			set
			{
				if ((this._DeptType != value))
				{
					this.OnDeptTypeChanging(value);
					this.SendPropertyChanging();
					this._DeptType = value;
					this.SendPropertyChanged("DeptType");
					this.OnDeptTypeChanged();
				}
			}
		}
		
		[Column(Storage="_IsCludeAll", DbType="Bit")]
		public System.Nullable<bool> IsCludeAll
		{
			get
			{
				return this._IsCludeAll;
			}
			set
			{
				if ((this._IsCludeAll != value))
				{
					this.OnIsCludeAllChanging(value);
					this.SendPropertyChanging();
					this._IsCludeAll = value;
					this.SendPropertyChanged("IsCludeAll");
					this.OnIsCludeAllChanged();
				}
			}
		}
		
		[Column(Storage="_IsStaffOnly", DbType="Bit")]
		public System.Nullable<bool> IsStaffOnly
		{
			get
			{
				return this._IsStaffOnly;
			}
			set
			{
				if ((this._IsStaffOnly != value))
				{
					this.OnIsStaffOnlyChanging(value);
					this.SendPropertyChanging();
					this._IsStaffOnly = value;
					this.SendPropertyChanged("IsStaffOnly");
					this.OnIsStaffOnlyChanged();
				}
			}
		}
		
		[Column(Storage="_DepartalCode", DbType="VarChar(20)")]
		public string DepartalCode
		{
			get
			{
				return this._DepartalCode;
			}
			set
			{
				if ((this._DepartalCode != value))
				{
					this.OnDepartalCodeChanging(value);
					this.SendPropertyChanging();
					this._DepartalCode = value;
					this.SendPropertyChanged("DepartalCode");
					this.OnDepartalCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Division_EN", DbType="NVarChar(150)")]
		public string Division_EN
		{
			get
			{
				return this._Division_EN;
			}
			set
			{
				if ((this._Division_EN != value))
				{
					this.OnDivision_ENChanging(value);
					this.SendPropertyChanging();
					this._Division_EN = value;
					this.SendPropertyChanged("Division_EN");
					this.OnDivision_ENChanged();
				}
			}
		}
		
		[Column(Storage="_HKOFFICE", DbType="Bit")]
		public System.Nullable<bool> HKOFFICE
		{
			get
			{
				return this._HKOFFICE;
			}
			set
			{
				if ((this._HKOFFICE != value))
				{
					this.OnHKOFFICEChanging(value);
					this.SendPropertyChanging();
					this._HKOFFICE = value;
					this.SendPropertyChanged("HKOFFICE");
					this.OnHKOFFICEChanged();
				}
			}
		}
		
		[Column(Storage="_SLSALES", DbType="Bit")]
		public System.Nullable<bool> SLSALES
		{
			get
			{
				return this._SLSALES;
			}
			set
			{
				if ((this._SLSALES != value))
				{
					this.OnSLSALESChanging(value);
					this.SendPropertyChanging();
					this._SLSALES = value;
					this.SendPropertyChanged("SLSALES");
					this.OnSLSALESChanged();
				}
			}
		}
		
		[Column(Storage="_SLMAIN", DbType="Bit")]
		public System.Nullable<bool> SLMAIN
		{
			get
			{
				return this._SLMAIN;
			}
			set
			{
				if ((this._SLMAIN != value))
				{
					this.OnSLMAINChanging(value);
					this.SendPropertyChanging();
					this._SLMAIN = value;
					this.SendPropertyChanged("SLMAIN");
					this.OnSLMAINChanged();
				}
			}
		}
		
		[Column(Storage="_GGSALES", DbType="Bit")]
		public System.Nullable<bool> GGSALES
		{
			get
			{
				return this._GGSALES;
			}
			set
			{
				if ((this._GGSALES != value))
				{
					this.OnGGSALESChanging(value);
					this.SendPropertyChanging();
					this._GGSALES = value;
					this.SendPropertyChanged("GGSALES");
					this.OnGGSALESChanged();
				}
			}
		}
		
		[Column(Storage="_GGFACT", DbType="Bit")]
		public System.Nullable<bool> GGFACT
		{
			get
			{
				return this._GGFACT;
			}
			set
			{
				if ((this._GGFACT != value))
				{
					this.OnGGFACTChanging(value);
					this.SendPropertyChanging();
					this._GGFACT = value;
					this.SendPropertyChanged("GGFACT");
					this.OnGGFACTChanged();
				}
			}
		}
		
		[Column(Storage="_RXFACT", DbType="Bit")]
		public System.Nullable<bool> RXFACT
		{
			get
			{
				return this._RXFACT;
			}
			set
			{
				if ((this._RXFACT != value))
				{
					this.OnRXFACTChanging(value);
					this.SendPropertyChanging();
					this._RXFACT = value;
					this.SendPropertyChanged("RXFACT");
					this.OnRXFACTChanged();
				}
			}
		}
		
		[Column(Storage="_CGSALES", DbType="Bit")]
		public System.Nullable<bool> CGSALES
		{
			get
			{
				return this._CGSALES;
			}
			set
			{
				if ((this._CGSALES != value))
				{
					this.OnCGSALESChanging(value);
					this.SendPropertyChanging();
					this._CGSALES = value;
					this.SendPropertyChanged("CGSALES");
					this.OnCGSALESChanged();
				}
			}
		}
		
		[Column(Storage="_CGFACT", DbType="Bit")]
		public System.Nullable<bool> CGFACT
		{
			get
			{
				return this._CGFACT;
			}
			set
			{
				if ((this._CGFACT != value))
				{
					this.OnCGFACTChanging(value);
					this.SendPropertyChanging();
					this._CGFACT = value;
					this.SendPropertyChanged("CGFACT");
					this.OnCGFACTChanged();
				}
			}
		}
		
		[Column(Storage="_WorkRegion", DbType="NVarChar(20)")]
		public string WorkRegion
		{
			get
			{
				return this._WorkRegion;
			}
			set
			{
				if ((this._WorkRegion != value))
				{
					this.OnWorkRegionChanging(value);
					this.SendPropertyChanging();
					this._WorkRegion = value;
					this.SendPropertyChanged("WorkRegion");
					this.OnWorkRegionChanged();
				}
			}
		}
		
		[Column(Storage="_Location", DbType="NVarChar(100)")]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[Column(Storage="_CCFACT", DbType="Bit")]
		public System.Nullable<bool> CCFACT
		{
			get
			{
				return this._CCFACT;
			}
			set
			{
				if ((this._CCFACT != value))
				{
					this.OnCCFACTChanging(value);
					this.SendPropertyChanging();
					this._CCFACT = value;
					this.SendPropertyChanged("CCFACT");
					this.OnCCFACTChanged();
				}
			}
		}
		
		[Column(Storage="_RXSALES", DbType="Bit")]
		public System.Nullable<bool> RXSALES
		{
			get
			{
				return this._RXSALES;
			}
			set
			{
				if ((this._RXSALES != value))
				{
					this.OnRXSALESChanging(value);
					this.SendPropertyChanging();
					this._RXSALES = value;
					this.SendPropertyChanged("RXSALES");
					this.OnRXSALESChanged();
				}
			}
		}
		
		[Column(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Master_data_For_Job_Title")]
	public partial class Master_data_For_Job_Title : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _TitleTypeEn;
		
		private string _TitleTypeCn;
		
		private string _JTCode;
		
		private string _JobTitleEn;
		
		private string _JobTitleCn;
		
		private string _JobTitleBd;
		
		private System.Nullable<bool> _SewingDirect;
		
		private System.Nullable<bool> _ProductionIndirect;
		
		private System.Nullable<bool> _NonProduction;
		
		private System.Nullable<bool> _SalesSL_HeadOfficeCost;
		
		private string _TitleTypeBd;
		
		private string _WageCode;
		
		private string _Departmentals;
		
		private bool _IsStaff;
		
		private string _SeqNo;
		
		private string _GradeCode;
		
		private string _GradingSeq;
		
		private int _ID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnTitleTypeEnChanging(string value);
    partial void OnTitleTypeEnChanged();
    partial void OnTitleTypeCnChanging(string value);
    partial void OnTitleTypeCnChanged();
    partial void OnJTCodeChanging(string value);
    partial void OnJTCodeChanged();
    partial void OnJobTitleEnChanging(string value);
    partial void OnJobTitleEnChanged();
    partial void OnJobTitleCnChanging(string value);
    partial void OnJobTitleCnChanged();
    partial void OnJobTitleBdChanging(string value);
    partial void OnJobTitleBdChanged();
    partial void OnSewingDirectChanging(System.Nullable<bool> value);
    partial void OnSewingDirectChanged();
    partial void OnProductionIndirectChanging(System.Nullable<bool> value);
    partial void OnProductionIndirectChanged();
    partial void OnNonProductionChanging(System.Nullable<bool> value);
    partial void OnNonProductionChanged();
    partial void OnSalesSL_HeadOfficeCostChanging(System.Nullable<bool> value);
    partial void OnSalesSL_HeadOfficeCostChanged();
    partial void OnTitleTypeBdChanging(string value);
    partial void OnTitleTypeBdChanged();
    partial void OnWageCodeChanging(string value);
    partial void OnWageCodeChanged();
    partial void OnDepartmentalsChanging(string value);
    partial void OnDepartmentalsChanged();
    partial void OnIsStaffChanging(bool value);
    partial void OnIsStaffChanged();
    partial void OnSeqNoChanging(string value);
    partial void OnSeqNoChanged();
    partial void OnGradeCodeChanging(string value);
    partial void OnGradeCodeChanged();
    partial void OnGradingSeqChanging(string value);
    partial void OnGradingSeqChanged();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    #endregion
		
		public Master_data_For_Job_Title()
		{
			OnCreated();
		}
		
		[Column(Storage="_Code", DbType="NVarChar(100)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[Column(Storage="_TitleTypeEn", DbType="NVarChar(100)")]
		public string TitleTypeEn
		{
			get
			{
				return this._TitleTypeEn;
			}
			set
			{
				if ((this._TitleTypeEn != value))
				{
					this.OnTitleTypeEnChanging(value);
					this.SendPropertyChanging();
					this._TitleTypeEn = value;
					this.SendPropertyChanged("TitleTypeEn");
					this.OnTitleTypeEnChanged();
				}
			}
		}
		
		[Column(Storage="_TitleTypeCn", DbType="NVarChar(100)")]
		public string TitleTypeCn
		{
			get
			{
				return this._TitleTypeCn;
			}
			set
			{
				if ((this._TitleTypeCn != value))
				{
					this.OnTitleTypeCnChanging(value);
					this.SendPropertyChanging();
					this._TitleTypeCn = value;
					this.SendPropertyChanged("TitleTypeCn");
					this.OnTitleTypeCnChanged();
				}
			}
		}
		
		[Column(Storage="_JTCode", DbType="NVarChar(100)")]
		public string JTCode
		{
			get
			{
				return this._JTCode;
			}
			set
			{
				if ((this._JTCode != value))
				{
					this.OnJTCodeChanging(value);
					this.SendPropertyChanging();
					this._JTCode = value;
					this.SendPropertyChanged("JTCode");
					this.OnJTCodeChanged();
				}
			}
		}
		
		[Column(Storage="_JobTitleEn", DbType="NVarChar(150)")]
		public string JobTitleEn
		{
			get
			{
				return this._JobTitleEn;
			}
			set
			{
				if ((this._JobTitleEn != value))
				{
					this.OnJobTitleEnChanging(value);
					this.SendPropertyChanging();
					this._JobTitleEn = value;
					this.SendPropertyChanged("JobTitleEn");
					this.OnJobTitleEnChanged();
				}
			}
		}
		
		[Column(Storage="_JobTitleCn", DbType="NVarChar(150)")]
		public string JobTitleCn
		{
			get
			{
				return this._JobTitleCn;
			}
			set
			{
				if ((this._JobTitleCn != value))
				{
					this.OnJobTitleCnChanging(value);
					this.SendPropertyChanging();
					this._JobTitleCn = value;
					this.SendPropertyChanged("JobTitleCn");
					this.OnJobTitleCnChanged();
				}
			}
		}
		
		[Column(Storage="_JobTitleBd", DbType="NVarChar(100)")]
		public string JobTitleBd
		{
			get
			{
				return this._JobTitleBd;
			}
			set
			{
				if ((this._JobTitleBd != value))
				{
					this.OnJobTitleBdChanging(value);
					this.SendPropertyChanging();
					this._JobTitleBd = value;
					this.SendPropertyChanged("JobTitleBd");
					this.OnJobTitleBdChanged();
				}
			}
		}
		
		[Column(Storage="_SewingDirect", DbType="Bit")]
		public System.Nullable<bool> SewingDirect
		{
			get
			{
				return this._SewingDirect;
			}
			set
			{
				if ((this._SewingDirect != value))
				{
					this.OnSewingDirectChanging(value);
					this.SendPropertyChanging();
					this._SewingDirect = value;
					this.SendPropertyChanged("SewingDirect");
					this.OnSewingDirectChanged();
				}
			}
		}
		
		[Column(Storage="_ProductionIndirect", DbType="Bit")]
		public System.Nullable<bool> ProductionIndirect
		{
			get
			{
				return this._ProductionIndirect;
			}
			set
			{
				if ((this._ProductionIndirect != value))
				{
					this.OnProductionIndirectChanging(value);
					this.SendPropertyChanging();
					this._ProductionIndirect = value;
					this.SendPropertyChanged("ProductionIndirect");
					this.OnProductionIndirectChanged();
				}
			}
		}
		
		[Column(Storage="_NonProduction", DbType="Bit")]
		public System.Nullable<bool> NonProduction
		{
			get
			{
				return this._NonProduction;
			}
			set
			{
				if ((this._NonProduction != value))
				{
					this.OnNonProductionChanging(value);
					this.SendPropertyChanging();
					this._NonProduction = value;
					this.SendPropertyChanged("NonProduction");
					this.OnNonProductionChanged();
				}
			}
		}
		
		[Column(Storage="_SalesSL_HeadOfficeCost", DbType="Bit")]
		public System.Nullable<bool> SalesSL_HeadOfficeCost
		{
			get
			{
				return this._SalesSL_HeadOfficeCost;
			}
			set
			{
				if ((this._SalesSL_HeadOfficeCost != value))
				{
					this.OnSalesSL_HeadOfficeCostChanging(value);
					this.SendPropertyChanging();
					this._SalesSL_HeadOfficeCost = value;
					this.SendPropertyChanged("SalesSL_HeadOfficeCost");
					this.OnSalesSL_HeadOfficeCostChanged();
				}
			}
		}
		
		[Column(Storage="_TitleTypeBd", DbType="NVarChar(100)")]
		public string TitleTypeBd
		{
			get
			{
				return this._TitleTypeBd;
			}
			set
			{
				if ((this._TitleTypeBd != value))
				{
					this.OnTitleTypeBdChanging(value);
					this.SendPropertyChanging();
					this._TitleTypeBd = value;
					this.SendPropertyChanged("TitleTypeBd");
					this.OnTitleTypeBdChanged();
				}
			}
		}
		
		[Column(Storage="_WageCode", DbType="VarChar(100)")]
		public string WageCode
		{
			get
			{
				return this._WageCode;
			}
			set
			{
				if ((this._WageCode != value))
				{
					this.OnWageCodeChanging(value);
					this.SendPropertyChanging();
					this._WageCode = value;
					this.SendPropertyChanged("WageCode");
					this.OnWageCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Departmentals", DbType="NVarChar(200)")]
		public string Departmentals
		{
			get
			{
				return this._Departmentals;
			}
			set
			{
				if ((this._Departmentals != value))
				{
					this.OnDepartmentalsChanging(value);
					this.SendPropertyChanging();
					this._Departmentals = value;
					this.SendPropertyChanged("Departmentals");
					this.OnDepartmentalsChanged();
				}
			}
		}
		
		[Column(Storage="_IsStaff", DbType="Bit NOT NULL")]
		public bool IsStaff
		{
			get
			{
				return this._IsStaff;
			}
			set
			{
				if ((this._IsStaff != value))
				{
					this.OnIsStaffChanging(value);
					this.SendPropertyChanging();
					this._IsStaff = value;
					this.SendPropertyChanged("IsStaff");
					this.OnIsStaffChanged();
				}
			}
		}
		
		[Column(Storage="_SeqNo", DbType="VarChar(10)")]
		public string SeqNo
		{
			get
			{
				return this._SeqNo;
			}
			set
			{
				if ((this._SeqNo != value))
				{
					this.OnSeqNoChanging(value);
					this.SendPropertyChanging();
					this._SeqNo = value;
					this.SendPropertyChanged("SeqNo");
					this.OnSeqNoChanged();
				}
			}
		}
		
		[Column(Storage="_GradeCode", DbType="NVarChar(100)")]
		public string GradeCode
		{
			get
			{
				return this._GradeCode;
			}
			set
			{
				if ((this._GradeCode != value))
				{
					this.OnGradeCodeChanging(value);
					this.SendPropertyChanging();
					this._GradeCode = value;
					this.SendPropertyChanged("GradeCode");
					this.OnGradeCodeChanged();
				}
			}
		}
		
		[Column(Storage="_GradingSeq", DbType="NVarChar(10)")]
		public string GradingSeq
		{
			get
			{
				return this._GradingSeq;
			}
			set
			{
				if ((this._GradingSeq != value))
				{
					this.OnGradingSeqChanging(value);
					this.SendPropertyChanging();
					this._GradingSeq = value;
					this.SendPropertyChanged("GradingSeq");
					this.OnGradingSeqChanged();
				}
			}
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Machine")]
	public partial class Machine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private string _Name;
		
		private string _Location;
		
		private string _NextLocation;
		
		private string _Factory;
		
		private string _Line;
		
		private string _NextLine;
		
		private string _Type;
		
		private System.Nullable<System.DateTime> _Bdt;
		
		private string _Vndr;
		
		private System.Nullable<decimal> _UYear;
		
		private string _Type1;
		
		private string _Buyer;
		
		private string _Grp;
		
		private string _Type2;
		
		private string _Type3;
		
		private string _Shop;
		
		private string _NextShop;
		
		private string _ShopName;
		
		private string _BOI_Proj1;
		
		private string _BOI_Proj2;
		
		private string _Rpm;
		
		private string _Borrow;
		
		private string _Own;
		
		private string _TypeOfNeedle;
		
		private string _NeedleGauge;
		
		private string _SewingSpeed;
		
		private string _Marks;
		
		private string _Class;
		
		private string _McRating;
		
		private System.Nullable<System.DateTime> _UpdateTime;
		
		private string _oldFactory;
		
		private string _TemperatureRange;
		
		private string _PressureRange;
		
		private string _oldLine;
		
		private string _TimeRange;
		
		private string _MachineClass;
		
		private string _MachineWhere;
		
		private string _MachineState;
		
		private System.Nullable<bool> _IsRelated;
		
		private string _DepartmentEn;
		
		private string _DepartmentCn;
		
		private string _SectionEn;
		
		private string _SectionCn;
		
		private string _SubSectionEn;
		
		private string _SubSectionCn;
		
		private string _TeamEn;
		
		private string _TeamCn;
		
		private string _MCClassEn;
		
		private string _MCClassCn;
		
		private string _MCPartEn;
		
		private string _MCPartCn;
		
		private string _PrepanedByName;
		
		private System.Nullable<System.DateTime> _PrepanedByDate;
		
		private string _Confirm_1Name;
		
		private System.Nullable<System.DateTime> _Confirm_1Date;
		
		private string _Confirm_2Name;
		
		private System.Nullable<System.DateTime> _Confirm_2Date;
		
		private string _DepartmentBd;
		
		private string _SectionBd;
		
		private string _SubSectionBd;
		
		private string _TeamBd;
		
		private string _MCClassBd;
		
		private string _MCPartBd;
		
		private string _RecEn;
		
		private string _RecCn;
		
		private string _RecBd;
		
		private string _SerialNo;
		
		private string _RecRole_chn;
		
		private System.Nullable<System.DateTime> _ProjectionDate;
		
		private System.Nullable<bool> _IsFix;
		
		private System.Nullable<bool> _IsProjection;
		
		private string _Manufacturer;
		
		private System.Nullable<decimal> _KVA;
		
		private System.Nullable<decimal> _KW;
		
		private System.Nullable<decimal> _Per_Online;
		
		private System.Nullable<decimal> _Per_JieNeng;
		
		private System.Nullable<bool> _IsEngine;
		
		private System.Nullable<decimal> _SafeBuff;
		
		private System.Nullable<System.DateTime> _McRatingDate;
		
		private System.Nullable<System.DateTime> _TransferDate;
		
		private System.Nullable<bool> _IsWriteOff;
		
		private System.Nullable<System.DateTime> _DeadStoreInDate;
		
		private System.Nullable<System.DateTime> _WriteOffDate;
		
		private string _DeliveryStage;
		
		private string _AssetNO;
		
		private System.Nullable<bool> _IsDeployment;
		
		private string _OldMachineID;
		
		private EntityRef<MachineImg> _MachineImg;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    partial void OnNextLocationChanging(string value);
    partial void OnNextLocationChanged();
    partial void OnFactoryChanging(string value);
    partial void OnFactoryChanged();
    partial void OnLineChanging(string value);
    partial void OnLineChanged();
    partial void OnNextLineChanging(string value);
    partial void OnNextLineChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnBdtChanging(System.Nullable<System.DateTime> value);
    partial void OnBdtChanged();
    partial void OnVndrChanging(string value);
    partial void OnVndrChanged();
    partial void OnUYearChanging(System.Nullable<decimal> value);
    partial void OnUYearChanged();
    partial void OnType1Changing(string value);
    partial void OnType1Changed();
    partial void OnBuyerChanging(string value);
    partial void OnBuyerChanged();
    partial void OnGrpChanging(string value);
    partial void OnGrpChanged();
    partial void OnType2Changing(string value);
    partial void OnType2Changed();
    partial void OnType3Changing(string value);
    partial void OnType3Changed();
    partial void OnShopChanging(string value);
    partial void OnShopChanged();
    partial void OnNextShopChanging(string value);
    partial void OnNextShopChanged();
    partial void OnShopNameChanging(string value);
    partial void OnShopNameChanged();
    partial void OnBOI_Proj1Changing(string value);
    partial void OnBOI_Proj1Changed();
    partial void OnBOI_Proj2Changing(string value);
    partial void OnBOI_Proj2Changed();
    partial void OnRpmChanging(string value);
    partial void OnRpmChanged();
    partial void OnBorrowChanging(string value);
    partial void OnBorrowChanged();
    partial void OnOwnChanging(string value);
    partial void OnOwnChanged();
    partial void OnTypeOfNeedleChanging(string value);
    partial void OnTypeOfNeedleChanged();
    partial void OnNeedleGaugeChanging(string value);
    partial void OnNeedleGaugeChanged();
    partial void OnSewingSpeedChanging(string value);
    partial void OnSewingSpeedChanged();
    partial void OnMarksChanging(string value);
    partial void OnMarksChanged();
    partial void OnClassChanging(string value);
    partial void OnClassChanged();
    partial void OnMcRatingChanging(string value);
    partial void OnMcRatingChanged();
    partial void OnUpdateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateTimeChanged();
    partial void OnoldFactoryChanging(string value);
    partial void OnoldFactoryChanged();
    partial void OnTemperatureRangeChanging(string value);
    partial void OnTemperatureRangeChanged();
    partial void OnPressureRangeChanging(string value);
    partial void OnPressureRangeChanged();
    partial void OnoldLineChanging(string value);
    partial void OnoldLineChanged();
    partial void OnTimeRangeChanging(string value);
    partial void OnTimeRangeChanged();
    partial void OnMachineClassChanging(string value);
    partial void OnMachineClassChanged();
    partial void OnMachineWhereChanging(string value);
    partial void OnMachineWhereChanged();
    partial void OnMachineStateChanging(string value);
    partial void OnMachineStateChanged();
    partial void OnIsRelatedChanging(System.Nullable<bool> value);
    partial void OnIsRelatedChanged();
    partial void OnDepartmentEnChanging(string value);
    partial void OnDepartmentEnChanged();
    partial void OnDepartmentCnChanging(string value);
    partial void OnDepartmentCnChanged();
    partial void OnSectionEnChanging(string value);
    partial void OnSectionEnChanged();
    partial void OnSectionCnChanging(string value);
    partial void OnSectionCnChanged();
    partial void OnSubSectionEnChanging(string value);
    partial void OnSubSectionEnChanged();
    partial void OnSubSectionCnChanging(string value);
    partial void OnSubSectionCnChanged();
    partial void OnTeamEnChanging(string value);
    partial void OnTeamEnChanged();
    partial void OnTeamCnChanging(string value);
    partial void OnTeamCnChanged();
    partial void OnMCClassEnChanging(string value);
    partial void OnMCClassEnChanged();
    partial void OnMCClassCnChanging(string value);
    partial void OnMCClassCnChanged();
    partial void OnMCPartEnChanging(string value);
    partial void OnMCPartEnChanged();
    partial void OnMCPartCnChanging(string value);
    partial void OnMCPartCnChanged();
    partial void OnPrepanedByNameChanging(string value);
    partial void OnPrepanedByNameChanged();
    partial void OnPrepanedByDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPrepanedByDateChanged();
    partial void OnConfirm_1NameChanging(string value);
    partial void OnConfirm_1NameChanged();
    partial void OnConfirm_1DateChanging(System.Nullable<System.DateTime> value);
    partial void OnConfirm_1DateChanged();
    partial void OnConfirm_2NameChanging(string value);
    partial void OnConfirm_2NameChanged();
    partial void OnConfirm_2DateChanging(System.Nullable<System.DateTime> value);
    partial void OnConfirm_2DateChanged();
    partial void OnDepartmentBdChanging(string value);
    partial void OnDepartmentBdChanged();
    partial void OnSectionBdChanging(string value);
    partial void OnSectionBdChanged();
    partial void OnSubSectionBdChanging(string value);
    partial void OnSubSectionBdChanged();
    partial void OnTeamBdChanging(string value);
    partial void OnTeamBdChanged();
    partial void OnMCClassBdChanging(string value);
    partial void OnMCClassBdChanged();
    partial void OnMCPartBdChanging(string value);
    partial void OnMCPartBdChanged();
    partial void OnRecEnChanging(string value);
    partial void OnRecEnChanged();
    partial void OnRecCnChanging(string value);
    partial void OnRecCnChanged();
    partial void OnRecBdChanging(string value);
    partial void OnRecBdChanged();
    partial void OnSerialNoChanging(string value);
    partial void OnSerialNoChanged();
    partial void OnRecRole_chnChanging(string value);
    partial void OnRecRole_chnChanged();
    partial void OnProjectionDateChanging(System.Nullable<System.DateTime> value);
    partial void OnProjectionDateChanged();
    partial void OnIsFixChanging(System.Nullable<bool> value);
    partial void OnIsFixChanged();
    partial void OnIsProjectionChanging(System.Nullable<bool> value);
    partial void OnIsProjectionChanged();
    partial void OnManufacturerChanging(string value);
    partial void OnManufacturerChanged();
    partial void OnKVAChanging(System.Nullable<decimal> value);
    partial void OnKVAChanged();
    partial void OnKWChanging(System.Nullable<decimal> value);
    partial void OnKWChanged();
    partial void OnPer_OnlineChanging(System.Nullable<decimal> value);
    partial void OnPer_OnlineChanged();
    partial void OnPer_JieNengChanging(System.Nullable<decimal> value);
    partial void OnPer_JieNengChanged();
    partial void OnIsEngineChanging(System.Nullable<bool> value);
    partial void OnIsEngineChanged();
    partial void OnSafeBuffChanging(System.Nullable<decimal> value);
    partial void OnSafeBuffChanged();
    partial void OnMcRatingDateChanging(System.Nullable<System.DateTime> value);
    partial void OnMcRatingDateChanged();
    partial void OnTransferDateChanging(System.Nullable<System.DateTime> value);
    partial void OnTransferDateChanged();
    partial void OnIsWriteOffChanging(System.Nullable<bool> value);
    partial void OnIsWriteOffChanged();
    partial void OnDeadStoreInDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeadStoreInDateChanged();
    partial void OnWriteOffDateChanging(System.Nullable<System.DateTime> value);
    partial void OnWriteOffDateChanged();
    partial void OnDeliveryStageChanging(string value);
    partial void OnDeliveryStageChanged();
    partial void OnAssetNOChanging(string value);
    partial void OnAssetNOChanged();
    partial void OnIsDeploymentChanging(System.Nullable<bool> value);
    partial void OnIsDeploymentChanged();
    partial void OnOldMachineIDChanging(string value);
    partial void OnOldMachineIDChanged();
    #endregion
		
		public Machine()
		{
			this._MachineImg = default(EntityRef<MachineImg>);
			OnCreated();
		}
		
		[Column(Storage="_Id", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_Name", DbType="NVarChar(30)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[Column(Storage="_Location", DbType="NVarChar(30)")]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[Column(Storage="_NextLocation", DbType="NVarChar(10)")]
		public string NextLocation
		{
			get
			{
				return this._NextLocation;
			}
			set
			{
				if ((this._NextLocation != value))
				{
					this.OnNextLocationChanging(value);
					this.SendPropertyChanging();
					this._NextLocation = value;
					this.SendPropertyChanged("NextLocation");
					this.OnNextLocationChanged();
				}
			}
		}
		
		[Column(Storage="_Factory", DbType="VarChar(20)")]
		public string Factory
		{
			get
			{
				return this._Factory;
			}
			set
			{
				if ((this._Factory != value))
				{
					this.OnFactoryChanging(value);
					this.SendPropertyChanging();
					this._Factory = value;
					this.SendPropertyChanged("Factory");
					this.OnFactoryChanged();
				}
			}
		}
		
		[Column(Storage="_Line", DbType="NVarChar(50)")]
		public string Line
		{
			get
			{
				return this._Line;
			}
			set
			{
				if ((this._Line != value))
				{
					this.OnLineChanging(value);
					this.SendPropertyChanging();
					this._Line = value;
					this.SendPropertyChanged("Line");
					this.OnLineChanged();
				}
			}
		}
		
		[Column(Storage="_NextLine", DbType="NVarChar(15)")]
		public string NextLine
		{
			get
			{
				return this._NextLine;
			}
			set
			{
				if ((this._NextLine != value))
				{
					this.OnNextLineChanging(value);
					this.SendPropertyChanging();
					this._NextLine = value;
					this.SendPropertyChanged("NextLine");
					this.OnNextLineChanged();
				}
			}
		}
		
		[Column(Storage="_Type", DbType="NVarChar(200)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[Column(Storage="_Bdt", DbType="DateTime")]
		public System.Nullable<System.DateTime> Bdt
		{
			get
			{
				return this._Bdt;
			}
			set
			{
				if ((this._Bdt != value))
				{
					this.OnBdtChanging(value);
					this.SendPropertyChanging();
					this._Bdt = value;
					this.SendPropertyChanged("Bdt");
					this.OnBdtChanged();
				}
			}
		}
		
		[Column(Storage="_Vndr", DbType="NVarChar(300)")]
		public string Vndr
		{
			get
			{
				return this._Vndr;
			}
			set
			{
				if ((this._Vndr != value))
				{
					this.OnVndrChanging(value);
					this.SendPropertyChanging();
					this._Vndr = value;
					this.SendPropertyChanged("Vndr");
					this.OnVndrChanged();
				}
			}
		}
		
		[Column(Storage="_UYear", DbType="Decimal(15,1)")]
		public System.Nullable<decimal> UYear
		{
			get
			{
				return this._UYear;
			}
			set
			{
				if ((this._UYear != value))
				{
					this.OnUYearChanging(value);
					this.SendPropertyChanging();
					this._UYear = value;
					this.SendPropertyChanged("UYear");
					this.OnUYearChanged();
				}
			}
		}
		
		[Column(Storage="_Type1", DbType="NVarChar(30)")]
		public string Type1
		{
			get
			{
				return this._Type1;
			}
			set
			{
				if ((this._Type1 != value))
				{
					this.OnType1Changing(value);
					this.SendPropertyChanging();
					this._Type1 = value;
					this.SendPropertyChanged("Type1");
					this.OnType1Changed();
				}
			}
		}
		
		[Column(Storage="_Buyer", DbType="NVarChar(20)")]
		public string Buyer
		{
			get
			{
				return this._Buyer;
			}
			set
			{
				if ((this._Buyer != value))
				{
					this.OnBuyerChanging(value);
					this.SendPropertyChanging();
					this._Buyer = value;
					this.SendPropertyChanged("Buyer");
					this.OnBuyerChanged();
				}
			}
		}
		
		[Column(Storage="_Grp", DbType="NVarChar(50)")]
		public string Grp
		{
			get
			{
				return this._Grp;
			}
			set
			{
				if ((this._Grp != value))
				{
					this.OnGrpChanging(value);
					this.SendPropertyChanging();
					this._Grp = value;
					this.SendPropertyChanged("Grp");
					this.OnGrpChanged();
				}
			}
		}
		
		[Column(Storage="_Type2", DbType="NVarChar(200)")]
		public string Type2
		{
			get
			{
				return this._Type2;
			}
			set
			{
				if ((this._Type2 != value))
				{
					this.OnType2Changing(value);
					this.SendPropertyChanging();
					this._Type2 = value;
					this.SendPropertyChanged("Type2");
					this.OnType2Changed();
				}
			}
		}
		
		[Column(Storage="_Type3", DbType="NVarChar(200)")]
		public string Type3
		{
			get
			{
				return this._Type3;
			}
			set
			{
				if ((this._Type3 != value))
				{
					this.OnType3Changing(value);
					this.SendPropertyChanging();
					this._Type3 = value;
					this.SendPropertyChanged("Type3");
					this.OnType3Changed();
				}
			}
		}
		
		[Column(Storage="_Shop", DbType="NVarChar(50)")]
		public string Shop
		{
			get
			{
				return this._Shop;
			}
			set
			{
				if ((this._Shop != value))
				{
					this.OnShopChanging(value);
					this.SendPropertyChanging();
					this._Shop = value;
					this.SendPropertyChanged("Shop");
					this.OnShopChanged();
				}
			}
		}
		
		[Column(Storage="_NextShop", DbType="NVarChar(50)")]
		public string NextShop
		{
			get
			{
				return this._NextShop;
			}
			set
			{
				if ((this._NextShop != value))
				{
					this.OnNextShopChanging(value);
					this.SendPropertyChanging();
					this._NextShop = value;
					this.SendPropertyChanged("NextShop");
					this.OnNextShopChanged();
				}
			}
		}
		
		[Column(Storage="_ShopName", DbType="NVarChar(30)")]
		public string ShopName
		{
			get
			{
				return this._ShopName;
			}
			set
			{
				if ((this._ShopName != value))
				{
					this.OnShopNameChanging(value);
					this.SendPropertyChanging();
					this._ShopName = value;
					this.SendPropertyChanged("ShopName");
					this.OnShopNameChanged();
				}
			}
		}
		
		[Column(Storage="_BOI_Proj1", DbType="NVarChar(50)")]
		public string BOI_Proj1
		{
			get
			{
				return this._BOI_Proj1;
			}
			set
			{
				if ((this._BOI_Proj1 != value))
				{
					this.OnBOI_Proj1Changing(value);
					this.SendPropertyChanging();
					this._BOI_Proj1 = value;
					this.SendPropertyChanged("BOI_Proj1");
					this.OnBOI_Proj1Changed();
				}
			}
		}
		
		[Column(Storage="_BOI_Proj2", DbType="NVarChar(50)")]
		public string BOI_Proj2
		{
			get
			{
				return this._BOI_Proj2;
			}
			set
			{
				if ((this._BOI_Proj2 != value))
				{
					this.OnBOI_Proj2Changing(value);
					this.SendPropertyChanging();
					this._BOI_Proj2 = value;
					this.SendPropertyChanged("BOI_Proj2");
					this.OnBOI_Proj2Changed();
				}
			}
		}
		
		[Column(Storage="_Rpm", DbType="NVarChar(10)")]
		public string Rpm
		{
			get
			{
				return this._Rpm;
			}
			set
			{
				if ((this._Rpm != value))
				{
					this.OnRpmChanging(value);
					this.SendPropertyChanging();
					this._Rpm = value;
					this.SendPropertyChanged("Rpm");
					this.OnRpmChanged();
				}
			}
		}
		
		[Column(Storage="_Borrow", DbType="NVarChar(20)")]
		public string Borrow
		{
			get
			{
				return this._Borrow;
			}
			set
			{
				if ((this._Borrow != value))
				{
					this.OnBorrowChanging(value);
					this.SendPropertyChanging();
					this._Borrow = value;
					this.SendPropertyChanged("Borrow");
					this.OnBorrowChanged();
				}
			}
		}
		
		[Column(Storage="_Own", DbType="NVarChar(50)")]
		public string Own
		{
			get
			{
				return this._Own;
			}
			set
			{
				if ((this._Own != value))
				{
					this.OnOwnChanging(value);
					this.SendPropertyChanging();
					this._Own = value;
					this.SendPropertyChanged("Own");
					this.OnOwnChanged();
				}
			}
		}
		
		[Column(Storage="_TypeOfNeedle", DbType="NVarChar(10)")]
		public string TypeOfNeedle
		{
			get
			{
				return this._TypeOfNeedle;
			}
			set
			{
				if ((this._TypeOfNeedle != value))
				{
					this.OnTypeOfNeedleChanging(value);
					this.SendPropertyChanging();
					this._TypeOfNeedle = value;
					this.SendPropertyChanged("TypeOfNeedle");
					this.OnTypeOfNeedleChanged();
				}
			}
		}
		
		[Column(Storage="_NeedleGauge", DbType="NVarChar(10)")]
		public string NeedleGauge
		{
			get
			{
				return this._NeedleGauge;
			}
			set
			{
				if ((this._NeedleGauge != value))
				{
					this.OnNeedleGaugeChanging(value);
					this.SendPropertyChanging();
					this._NeedleGauge = value;
					this.SendPropertyChanged("NeedleGauge");
					this.OnNeedleGaugeChanged();
				}
			}
		}
		
		[Column(Storage="_SewingSpeed", DbType="NVarChar(10)")]
		public string SewingSpeed
		{
			get
			{
				return this._SewingSpeed;
			}
			set
			{
				if ((this._SewingSpeed != value))
				{
					this.OnSewingSpeedChanging(value);
					this.SendPropertyChanging();
					this._SewingSpeed = value;
					this.SendPropertyChanged("SewingSpeed");
					this.OnSewingSpeedChanged();
				}
			}
		}
		
		[Column(Storage="_Marks", DbType="NVarChar(300)")]
		public string Marks
		{
			get
			{
				return this._Marks;
			}
			set
			{
				if ((this._Marks != value))
				{
					this.OnMarksChanging(value);
					this.SendPropertyChanging();
					this._Marks = value;
					this.SendPropertyChanged("Marks");
					this.OnMarksChanged();
				}
			}
		}
		
		[Column(Storage="_Class", DbType="NVarChar(30)")]
		public string Class
		{
			get
			{
				return this._Class;
			}
			set
			{
				if ((this._Class != value))
				{
					this.OnClassChanging(value);
					this.SendPropertyChanging();
					this._Class = value;
					this.SendPropertyChanged("Class");
					this.OnClassChanged();
				}
			}
		}
		
		[Column(Storage="_McRating", DbType="NVarChar(30)")]
		public string McRating
		{
			get
			{
				return this._McRating;
			}
			set
			{
				if ((this._McRating != value))
				{
					this.OnMcRatingChanging(value);
					this.SendPropertyChanging();
					this._McRating = value;
					this.SendPropertyChanged("McRating");
					this.OnMcRatingChanged();
				}
			}
		}
		
		[Column(Storage="_UpdateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateTime
		{
			get
			{
				return this._UpdateTime;
			}
			set
			{
				if ((this._UpdateTime != value))
				{
					this.OnUpdateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdateTime = value;
					this.SendPropertyChanged("UpdateTime");
					this.OnUpdateTimeChanged();
				}
			}
		}
		
		[Column(Storage="_oldFactory", DbType="VarChar(20)")]
		public string oldFactory
		{
			get
			{
				return this._oldFactory;
			}
			set
			{
				if ((this._oldFactory != value))
				{
					this.OnoldFactoryChanging(value);
					this.SendPropertyChanging();
					this._oldFactory = value;
					this.SendPropertyChanged("oldFactory");
					this.OnoldFactoryChanged();
				}
			}
		}
		
		[Column(Storage="_TemperatureRange", DbType="VarChar(50)")]
		public string TemperatureRange
		{
			get
			{
				return this._TemperatureRange;
			}
			set
			{
				if ((this._TemperatureRange != value))
				{
					this.OnTemperatureRangeChanging(value);
					this.SendPropertyChanging();
					this._TemperatureRange = value;
					this.SendPropertyChanged("TemperatureRange");
					this.OnTemperatureRangeChanged();
				}
			}
		}
		
		[Column(Storage="_PressureRange", DbType="VarChar(50)")]
		public string PressureRange
		{
			get
			{
				return this._PressureRange;
			}
			set
			{
				if ((this._PressureRange != value))
				{
					this.OnPressureRangeChanging(value);
					this.SendPropertyChanging();
					this._PressureRange = value;
					this.SendPropertyChanged("PressureRange");
					this.OnPressureRangeChanged();
				}
			}
		}
		
		[Column(Storage="_oldLine", DbType="VarChar(20)")]
		public string oldLine
		{
			get
			{
				return this._oldLine;
			}
			set
			{
				if ((this._oldLine != value))
				{
					this.OnoldLineChanging(value);
					this.SendPropertyChanging();
					this._oldLine = value;
					this.SendPropertyChanged("oldLine");
					this.OnoldLineChanged();
				}
			}
		}
		
		[Column(Storage="_TimeRange", DbType="VarChar(50)")]
		public string TimeRange
		{
			get
			{
				return this._TimeRange;
			}
			set
			{
				if ((this._TimeRange != value))
				{
					this.OnTimeRangeChanging(value);
					this.SendPropertyChanging();
					this._TimeRange = value;
					this.SendPropertyChanged("TimeRange");
					this.OnTimeRangeChanged();
				}
			}
		}
		
		[Column(Storage="_MachineClass", DbType="VarChar(30)")]
		public string MachineClass
		{
			get
			{
				return this._MachineClass;
			}
			set
			{
				if ((this._MachineClass != value))
				{
					this.OnMachineClassChanging(value);
					this.SendPropertyChanging();
					this._MachineClass = value;
					this.SendPropertyChanged("MachineClass");
					this.OnMachineClassChanged();
				}
			}
		}
		
		[Column(Storage="_MachineWhere", DbType="VarChar(50)")]
		public string MachineWhere
		{
			get
			{
				return this._MachineWhere;
			}
			set
			{
				if ((this._MachineWhere != value))
				{
					this.OnMachineWhereChanging(value);
					this.SendPropertyChanging();
					this._MachineWhere = value;
					this.SendPropertyChanged("MachineWhere");
					this.OnMachineWhereChanged();
				}
			}
		}
		
		[Column(Storage="_MachineState", DbType="VarChar(30)")]
		public string MachineState
		{
			get
			{
				return this._MachineState;
			}
			set
			{
				if ((this._MachineState != value))
				{
					this.OnMachineStateChanging(value);
					this.SendPropertyChanging();
					this._MachineState = value;
					this.SendPropertyChanged("MachineState");
					this.OnMachineStateChanged();
				}
			}
		}
		
		[Column(Storage="_IsRelated", DbType="Bit")]
		public System.Nullable<bool> IsRelated
		{
			get
			{
				return this._IsRelated;
			}
			set
			{
				if ((this._IsRelated != value))
				{
					this.OnIsRelatedChanging(value);
					this.SendPropertyChanging();
					this._IsRelated = value;
					this.SendPropertyChanged("IsRelated");
					this.OnIsRelatedChanged();
				}
			}
		}
		
		[Column(Storage="_DepartmentEn", DbType="NVarChar(200)")]
		public string DepartmentEn
		{
			get
			{
				return this._DepartmentEn;
			}
			set
			{
				if ((this._DepartmentEn != value))
				{
					this.OnDepartmentEnChanging(value);
					this.SendPropertyChanging();
					this._DepartmentEn = value;
					this.SendPropertyChanged("DepartmentEn");
					this.OnDepartmentEnChanged();
				}
			}
		}
		
		[Column(Storage="_DepartmentCn", DbType="NVarChar(200)")]
		public string DepartmentCn
		{
			get
			{
				return this._DepartmentCn;
			}
			set
			{
				if ((this._DepartmentCn != value))
				{
					this.OnDepartmentCnChanging(value);
					this.SendPropertyChanging();
					this._DepartmentCn = value;
					this.SendPropertyChanged("DepartmentCn");
					this.OnDepartmentCnChanged();
				}
			}
		}
		
		[Column(Storage="_SectionEn", DbType="NVarChar(200)")]
		public string SectionEn
		{
			get
			{
				return this._SectionEn;
			}
			set
			{
				if ((this._SectionEn != value))
				{
					this.OnSectionEnChanging(value);
					this.SendPropertyChanging();
					this._SectionEn = value;
					this.SendPropertyChanged("SectionEn");
					this.OnSectionEnChanged();
				}
			}
		}
		
		[Column(Storage="_SectionCn", DbType="NVarChar(200)")]
		public string SectionCn
		{
			get
			{
				return this._SectionCn;
			}
			set
			{
				if ((this._SectionCn != value))
				{
					this.OnSectionCnChanging(value);
					this.SendPropertyChanging();
					this._SectionCn = value;
					this.SendPropertyChanged("SectionCn");
					this.OnSectionCnChanged();
				}
			}
		}
		
		[Column(Storage="_SubSectionEn", DbType="NVarChar(200)")]
		public string SubSectionEn
		{
			get
			{
				return this._SubSectionEn;
			}
			set
			{
				if ((this._SubSectionEn != value))
				{
					this.OnSubSectionEnChanging(value);
					this.SendPropertyChanging();
					this._SubSectionEn = value;
					this.SendPropertyChanged("SubSectionEn");
					this.OnSubSectionEnChanged();
				}
			}
		}
		
		[Column(Storage="_SubSectionCn", DbType="NVarChar(200)")]
		public string SubSectionCn
		{
			get
			{
				return this._SubSectionCn;
			}
			set
			{
				if ((this._SubSectionCn != value))
				{
					this.OnSubSectionCnChanging(value);
					this.SendPropertyChanging();
					this._SubSectionCn = value;
					this.SendPropertyChanged("SubSectionCn");
					this.OnSubSectionCnChanged();
				}
			}
		}
		
		[Column(Storage="_TeamEn", DbType="NVarChar(200)")]
		public string TeamEn
		{
			get
			{
				return this._TeamEn;
			}
			set
			{
				if ((this._TeamEn != value))
				{
					this.OnTeamEnChanging(value);
					this.SendPropertyChanging();
					this._TeamEn = value;
					this.SendPropertyChanged("TeamEn");
					this.OnTeamEnChanged();
				}
			}
		}
		
		[Column(Storage="_TeamCn", DbType="NVarChar(200)")]
		public string TeamCn
		{
			get
			{
				return this._TeamCn;
			}
			set
			{
				if ((this._TeamCn != value))
				{
					this.OnTeamCnChanging(value);
					this.SendPropertyChanging();
					this._TeamCn = value;
					this.SendPropertyChanged("TeamCn");
					this.OnTeamCnChanged();
				}
			}
		}
		
		[Column(Storage="_MCClassEn", DbType="NVarChar(200)")]
		public string MCClassEn
		{
			get
			{
				return this._MCClassEn;
			}
			set
			{
				if ((this._MCClassEn != value))
				{
					this.OnMCClassEnChanging(value);
					this.SendPropertyChanging();
					this._MCClassEn = value;
					this.SendPropertyChanged("MCClassEn");
					this.OnMCClassEnChanged();
				}
			}
		}
		
		[Column(Storage="_MCClassCn", DbType="NVarChar(200)")]
		public string MCClassCn
		{
			get
			{
				return this._MCClassCn;
			}
			set
			{
				if ((this._MCClassCn != value))
				{
					this.OnMCClassCnChanging(value);
					this.SendPropertyChanging();
					this._MCClassCn = value;
					this.SendPropertyChanged("MCClassCn");
					this.OnMCClassCnChanged();
				}
			}
		}
		
		[Column(Storage="_MCPartEn", DbType="NVarChar(150)")]
		public string MCPartEn
		{
			get
			{
				return this._MCPartEn;
			}
			set
			{
				if ((this._MCPartEn != value))
				{
					this.OnMCPartEnChanging(value);
					this.SendPropertyChanging();
					this._MCPartEn = value;
					this.SendPropertyChanged("MCPartEn");
					this.OnMCPartEnChanged();
				}
			}
		}
		
		[Column(Storage="_MCPartCn", DbType="NVarChar(150)")]
		public string MCPartCn
		{
			get
			{
				return this._MCPartCn;
			}
			set
			{
				if ((this._MCPartCn != value))
				{
					this.OnMCPartCnChanging(value);
					this.SendPropertyChanging();
					this._MCPartCn = value;
					this.SendPropertyChanged("MCPartCn");
					this.OnMCPartCnChanged();
				}
			}
		}
		
		[Column(Storage="_PrepanedByName", DbType="NVarChar(30)")]
		public string PrepanedByName
		{
			get
			{
				return this._PrepanedByName;
			}
			set
			{
				if ((this._PrepanedByName != value))
				{
					this.OnPrepanedByNameChanging(value);
					this.SendPropertyChanging();
					this._PrepanedByName = value;
					this.SendPropertyChanged("PrepanedByName");
					this.OnPrepanedByNameChanged();
				}
			}
		}
		
		[Column(Storage="_PrepanedByDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PrepanedByDate
		{
			get
			{
				return this._PrepanedByDate;
			}
			set
			{
				if ((this._PrepanedByDate != value))
				{
					this.OnPrepanedByDateChanging(value);
					this.SendPropertyChanging();
					this._PrepanedByDate = value;
					this.SendPropertyChanged("PrepanedByDate");
					this.OnPrepanedByDateChanged();
				}
			}
		}
		
		[Column(Storage="_Confirm_1Name", DbType="NVarChar(30)")]
		public string Confirm_1Name
		{
			get
			{
				return this._Confirm_1Name;
			}
			set
			{
				if ((this._Confirm_1Name != value))
				{
					this.OnConfirm_1NameChanging(value);
					this.SendPropertyChanging();
					this._Confirm_1Name = value;
					this.SendPropertyChanged("Confirm_1Name");
					this.OnConfirm_1NameChanged();
				}
			}
		}
		
		[Column(Storage="_Confirm_1Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Confirm_1Date
		{
			get
			{
				return this._Confirm_1Date;
			}
			set
			{
				if ((this._Confirm_1Date != value))
				{
					this.OnConfirm_1DateChanging(value);
					this.SendPropertyChanging();
					this._Confirm_1Date = value;
					this.SendPropertyChanged("Confirm_1Date");
					this.OnConfirm_1DateChanged();
				}
			}
		}
		
		[Column(Storage="_Confirm_2Name", DbType="NVarChar(30)")]
		public string Confirm_2Name
		{
			get
			{
				return this._Confirm_2Name;
			}
			set
			{
				if ((this._Confirm_2Name != value))
				{
					this.OnConfirm_2NameChanging(value);
					this.SendPropertyChanging();
					this._Confirm_2Name = value;
					this.SendPropertyChanged("Confirm_2Name");
					this.OnConfirm_2NameChanged();
				}
			}
		}
		
		[Column(Storage="_Confirm_2Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Confirm_2Date
		{
			get
			{
				return this._Confirm_2Date;
			}
			set
			{
				if ((this._Confirm_2Date != value))
				{
					this.OnConfirm_2DateChanging(value);
					this.SendPropertyChanging();
					this._Confirm_2Date = value;
					this.SendPropertyChanged("Confirm_2Date");
					this.OnConfirm_2DateChanged();
				}
			}
		}
		
		[Column(Storage="_DepartmentBd", DbType="NVarChar(200)")]
		public string DepartmentBd
		{
			get
			{
				return this._DepartmentBd;
			}
			set
			{
				if ((this._DepartmentBd != value))
				{
					this.OnDepartmentBdChanging(value);
					this.SendPropertyChanging();
					this._DepartmentBd = value;
					this.SendPropertyChanged("DepartmentBd");
					this.OnDepartmentBdChanged();
				}
			}
		}
		
		[Column(Storage="_SectionBd", DbType="NVarChar(200)")]
		public string SectionBd
		{
			get
			{
				return this._SectionBd;
			}
			set
			{
				if ((this._SectionBd != value))
				{
					this.OnSectionBdChanging(value);
					this.SendPropertyChanging();
					this._SectionBd = value;
					this.SendPropertyChanged("SectionBd");
					this.OnSectionBdChanged();
				}
			}
		}
		
		[Column(Storage="_SubSectionBd", DbType="NVarChar(200)")]
		public string SubSectionBd
		{
			get
			{
				return this._SubSectionBd;
			}
			set
			{
				if ((this._SubSectionBd != value))
				{
					this.OnSubSectionBdChanging(value);
					this.SendPropertyChanging();
					this._SubSectionBd = value;
					this.SendPropertyChanged("SubSectionBd");
					this.OnSubSectionBdChanged();
				}
			}
		}
		
		[Column(Storage="_TeamBd", DbType="NVarChar(200)")]
		public string TeamBd
		{
			get
			{
				return this._TeamBd;
			}
			set
			{
				if ((this._TeamBd != value))
				{
					this.OnTeamBdChanging(value);
					this.SendPropertyChanging();
					this._TeamBd = value;
					this.SendPropertyChanged("TeamBd");
					this.OnTeamBdChanged();
				}
			}
		}
		
		[Column(Storage="_MCClassBd", DbType="NVarChar(200)")]
		public string MCClassBd
		{
			get
			{
				return this._MCClassBd;
			}
			set
			{
				if ((this._MCClassBd != value))
				{
					this.OnMCClassBdChanging(value);
					this.SendPropertyChanging();
					this._MCClassBd = value;
					this.SendPropertyChanged("MCClassBd");
					this.OnMCClassBdChanged();
				}
			}
		}
		
		[Column(Storage="_MCPartBd", DbType="NVarChar(200)")]
		public string MCPartBd
		{
			get
			{
				return this._MCPartBd;
			}
			set
			{
				if ((this._MCPartBd != value))
				{
					this.OnMCPartBdChanging(value);
					this.SendPropertyChanging();
					this._MCPartBd = value;
					this.SendPropertyChanged("MCPartBd");
					this.OnMCPartBdChanged();
				}
			}
		}
		
		[Column(Storage="_RecEn", DbType="NVarChar(200)")]
		public string RecEn
		{
			get
			{
				return this._RecEn;
			}
			set
			{
				if ((this._RecEn != value))
				{
					this.OnRecEnChanging(value);
					this.SendPropertyChanging();
					this._RecEn = value;
					this.SendPropertyChanged("RecEn");
					this.OnRecEnChanged();
				}
			}
		}
		
		[Column(Storage="_RecCn", DbType="NVarChar(200)")]
		public string RecCn
		{
			get
			{
				return this._RecCn;
			}
			set
			{
				if ((this._RecCn != value))
				{
					this.OnRecCnChanging(value);
					this.SendPropertyChanging();
					this._RecCn = value;
					this.SendPropertyChanged("RecCn");
					this.OnRecCnChanged();
				}
			}
		}
		
		[Column(Storage="_RecBd", DbType="NVarChar(200)")]
		public string RecBd
		{
			get
			{
				return this._RecBd;
			}
			set
			{
				if ((this._RecBd != value))
				{
					this.OnRecBdChanging(value);
					this.SendPropertyChanging();
					this._RecBd = value;
					this.SendPropertyChanged("RecBd");
					this.OnRecBdChanged();
				}
			}
		}
		
		[Column(Storage="_SerialNo", DbType="NVarChar(30)")]
		public string SerialNo
		{
			get
			{
				return this._SerialNo;
			}
			set
			{
				if ((this._SerialNo != value))
				{
					this.OnSerialNoChanging(value);
					this.SendPropertyChanging();
					this._SerialNo = value;
					this.SendPropertyChanged("SerialNo");
					this.OnSerialNoChanged();
				}
			}
		}
		
		[Column(Storage="_RecRole_chn", DbType="NVarChar(200)")]
		public string RecRole_chn
		{
			get
			{
				return this._RecRole_chn;
			}
			set
			{
				if ((this._RecRole_chn != value))
				{
					this.OnRecRole_chnChanging(value);
					this.SendPropertyChanging();
					this._RecRole_chn = value;
					this.SendPropertyChanged("RecRole_chn");
					this.OnRecRole_chnChanged();
				}
			}
		}
		
		[Column(Storage="_ProjectionDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ProjectionDate
		{
			get
			{
				return this._ProjectionDate;
			}
			set
			{
				if ((this._ProjectionDate != value))
				{
					this.OnProjectionDateChanging(value);
					this.SendPropertyChanging();
					this._ProjectionDate = value;
					this.SendPropertyChanged("ProjectionDate");
					this.OnProjectionDateChanged();
				}
			}
		}
		
		[Column(Storage="_IsFix", DbType="Bit")]
		public System.Nullable<bool> IsFix
		{
			get
			{
				return this._IsFix;
			}
			set
			{
				if ((this._IsFix != value))
				{
					this.OnIsFixChanging(value);
					this.SendPropertyChanging();
					this._IsFix = value;
					this.SendPropertyChanged("IsFix");
					this.OnIsFixChanged();
				}
			}
		}
		
		[Column(Storage="_IsProjection", DbType="Bit")]
		public System.Nullable<bool> IsProjection
		{
			get
			{
				return this._IsProjection;
			}
			set
			{
				if ((this._IsProjection != value))
				{
					this.OnIsProjectionChanging(value);
					this.SendPropertyChanging();
					this._IsProjection = value;
					this.SendPropertyChanged("IsProjection");
					this.OnIsProjectionChanged();
				}
			}
		}
		
		[Column(Storage="_Manufacturer", DbType="NVarChar(50)")]
		public string Manufacturer
		{
			get
			{
				return this._Manufacturer;
			}
			set
			{
				if ((this._Manufacturer != value))
				{
					this.OnManufacturerChanging(value);
					this.SendPropertyChanging();
					this._Manufacturer = value;
					this.SendPropertyChanged("Manufacturer");
					this.OnManufacturerChanged();
				}
			}
		}
		
		[Column(Storage="_KVA", DbType="Decimal(10,4)")]
		public System.Nullable<decimal> KVA
		{
			get
			{
				return this._KVA;
			}
			set
			{
				if ((this._KVA != value))
				{
					this.OnKVAChanging(value);
					this.SendPropertyChanging();
					this._KVA = value;
					this.SendPropertyChanged("KVA");
					this.OnKVAChanged();
				}
			}
		}
		
		[Column(Storage="_KW", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> KW
		{
			get
			{
				return this._KW;
			}
			set
			{
				if ((this._KW != value))
				{
					this.OnKWChanging(value);
					this.SendPropertyChanging();
					this._KW = value;
					this.SendPropertyChanged("KW");
					this.OnKWChanged();
				}
			}
		}
		
		[Column(Storage="_Per_Online", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> Per_Online
		{
			get
			{
				return this._Per_Online;
			}
			set
			{
				if ((this._Per_Online != value))
				{
					this.OnPer_OnlineChanging(value);
					this.SendPropertyChanging();
					this._Per_Online = value;
					this.SendPropertyChanged("Per_Online");
					this.OnPer_OnlineChanged();
				}
			}
		}
		
		[Column(Storage="_Per_JieNeng", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> Per_JieNeng
		{
			get
			{
				return this._Per_JieNeng;
			}
			set
			{
				if ((this._Per_JieNeng != value))
				{
					this.OnPer_JieNengChanging(value);
					this.SendPropertyChanging();
					this._Per_JieNeng = value;
					this.SendPropertyChanged("Per_JieNeng");
					this.OnPer_JieNengChanged();
				}
			}
		}
		
		[Column(Storage="_IsEngine", DbType="Bit")]
		public System.Nullable<bool> IsEngine
		{
			get
			{
				return this._IsEngine;
			}
			set
			{
				if ((this._IsEngine != value))
				{
					this.OnIsEngineChanging(value);
					this.SendPropertyChanging();
					this._IsEngine = value;
					this.SendPropertyChanged("IsEngine");
					this.OnIsEngineChanged();
				}
			}
		}
		
		[Column(Storage="_SafeBuff", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> SafeBuff
		{
			get
			{
				return this._SafeBuff;
			}
			set
			{
				if ((this._SafeBuff != value))
				{
					this.OnSafeBuffChanging(value);
					this.SendPropertyChanging();
					this._SafeBuff = value;
					this.SendPropertyChanged("SafeBuff");
					this.OnSafeBuffChanged();
				}
			}
		}
		
		[Column(Storage="_McRatingDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> McRatingDate
		{
			get
			{
				return this._McRatingDate;
			}
			set
			{
				if ((this._McRatingDate != value))
				{
					this.OnMcRatingDateChanging(value);
					this.SendPropertyChanging();
					this._McRatingDate = value;
					this.SendPropertyChanged("McRatingDate");
					this.OnMcRatingDateChanged();
				}
			}
		}
		
		[Column(Storage="_TransferDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> TransferDate
		{
			get
			{
				return this._TransferDate;
			}
			set
			{
				if ((this._TransferDate != value))
				{
					this.OnTransferDateChanging(value);
					this.SendPropertyChanging();
					this._TransferDate = value;
					this.SendPropertyChanged("TransferDate");
					this.OnTransferDateChanged();
				}
			}
		}
		
		[Column(Storage="_IsWriteOff", DbType="Bit")]
		public System.Nullable<bool> IsWriteOff
		{
			get
			{
				return this._IsWriteOff;
			}
			set
			{
				if ((this._IsWriteOff != value))
				{
					this.OnIsWriteOffChanging(value);
					this.SendPropertyChanging();
					this._IsWriteOff = value;
					this.SendPropertyChanged("IsWriteOff");
					this.OnIsWriteOffChanged();
				}
			}
		}
		
		[Column(Storage="_DeadStoreInDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DeadStoreInDate
		{
			get
			{
				return this._DeadStoreInDate;
			}
			set
			{
				if ((this._DeadStoreInDate != value))
				{
					this.OnDeadStoreInDateChanging(value);
					this.SendPropertyChanging();
					this._DeadStoreInDate = value;
					this.SendPropertyChanged("DeadStoreInDate");
					this.OnDeadStoreInDateChanged();
				}
			}
		}
		
		[Column(Storage="_WriteOffDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> WriteOffDate
		{
			get
			{
				return this._WriteOffDate;
			}
			set
			{
				if ((this._WriteOffDate != value))
				{
					this.OnWriteOffDateChanging(value);
					this.SendPropertyChanging();
					this._WriteOffDate = value;
					this.SendPropertyChanged("WriteOffDate");
					this.OnWriteOffDateChanged();
				}
			}
		}
		
		[Column(Storage="_DeliveryStage", DbType="NVarChar(200)")]
		public string DeliveryStage
		{
			get
			{
				return this._DeliveryStage;
			}
			set
			{
				if ((this._DeliveryStage != value))
				{
					this.OnDeliveryStageChanging(value);
					this.SendPropertyChanging();
					this._DeliveryStage = value;
					this.SendPropertyChanged("DeliveryStage");
					this.OnDeliveryStageChanged();
				}
			}
		}
		
		[Column(Storage="_AssetNO", DbType="VarChar(100)")]
		public string AssetNO
		{
			get
			{
				return this._AssetNO;
			}
			set
			{
				if ((this._AssetNO != value))
				{
					this.OnAssetNOChanging(value);
					this.SendPropertyChanging();
					this._AssetNO = value;
					this.SendPropertyChanged("AssetNO");
					this.OnAssetNOChanged();
				}
			}
		}
		
		[Column(Storage="_IsDeployment", DbType="Bit")]
		public System.Nullable<bool> IsDeployment
		{
			get
			{
				return this._IsDeployment;
			}
			set
			{
				if ((this._IsDeployment != value))
				{
					this.OnIsDeploymentChanging(value);
					this.SendPropertyChanging();
					this._IsDeployment = value;
					this.SendPropertyChanged("IsDeployment");
					this.OnIsDeploymentChanged();
				}
			}
		}
		
		[Column(Storage="_OldMachineID", DbType="VarChar(20)")]
		public string OldMachineID
		{
			get
			{
				return this._OldMachineID;
			}
			set
			{
				if ((this._OldMachineID != value))
				{
					this.OnOldMachineIDChanging(value);
					this.SendPropertyChanging();
					this._OldMachineID = value;
					this.SendPropertyChanged("OldMachineID");
					this.OnOldMachineIDChanged();
				}
			}
		}
		
		[Association(Name="Machine_MachineImg", Storage="_MachineImg", ThisKey="Id", OtherKey="Id", IsUnique=true, IsForeignKey=false)]
		public MachineImg MachineImg
		{
			get
			{
				return this._MachineImg.Entity;
			}
			set
			{
				MachineImg previousValue = this._MachineImg.Entity;
				if (((previousValue != value) 
							|| (this._MachineImg.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MachineImg.Entity = null;
						previousValue.Machine = null;
					}
					this._MachineImg.Entity = value;
					if ((value != null))
					{
						value.Machine = this;
					}
					this.SendPropertyChanged("MachineImg");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.TEMP_REGION")]
	public partial class TEMP_REGION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _FTY;
		
		private string _REGION;
		
		private string _JobNature;
		
		private string _JobType;
		
		private int _TEMP_REGION_ID;
		
		private string _ActualJobNature;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFTYChanging(string value);
    partial void OnFTYChanged();
    partial void OnREGIONChanging(string value);
    partial void OnREGIONChanged();
    partial void OnJobNatureChanging(string value);
    partial void OnJobNatureChanged();
    partial void OnJobTypeChanging(string value);
    partial void OnJobTypeChanged();
    partial void OnTEMP_REGION_IDChanging(int value);
    partial void OnTEMP_REGION_IDChanged();
    partial void OnActualJobNatureChanging(string value);
    partial void OnActualJobNatureChanged();
    #endregion
		
		public TEMP_REGION()
		{
			OnCreated();
		}
		
		[Column(Storage="_FTY", DbType="VarChar(50)")]
		public string FTY
		{
			get
			{
				return this._FTY;
			}
			set
			{
				if ((this._FTY != value))
				{
					this.OnFTYChanging(value);
					this.SendPropertyChanging();
					this._FTY = value;
					this.SendPropertyChanged("FTY");
					this.OnFTYChanged();
				}
			}
		}
		
		[Column(Storage="_REGION", DbType="NChar(50)")]
		public string REGION
		{
			get
			{
				return this._REGION;
			}
			set
			{
				if ((this._REGION != value))
				{
					this.OnREGIONChanging(value);
					this.SendPropertyChanging();
					this._REGION = value;
					this.SendPropertyChanged("REGION");
					this.OnREGIONChanged();
				}
			}
		}
		
		[Column(Storage="_JobNature", DbType="VarChar(50)")]
		public string JobNature
		{
			get
			{
				return this._JobNature;
			}
			set
			{
				if ((this._JobNature != value))
				{
					this.OnJobNatureChanging(value);
					this.SendPropertyChanging();
					this._JobNature = value;
					this.SendPropertyChanged("JobNature");
					this.OnJobNatureChanged();
				}
			}
		}
		
		[Column(Storage="_JobType", DbType="NChar(50)")]
		public string JobType
		{
			get
			{
				return this._JobType;
			}
			set
			{
				if ((this._JobType != value))
				{
					this.OnJobTypeChanging(value);
					this.SendPropertyChanging();
					this._JobType = value;
					this.SendPropertyChanged("JobType");
					this.OnJobTypeChanged();
				}
			}
		}
		
		[Column(Storage="_TEMP_REGION_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TEMP_REGION_ID
		{
			get
			{
				return this._TEMP_REGION_ID;
			}
			set
			{
				if ((this._TEMP_REGION_ID != value))
				{
					this.OnTEMP_REGION_IDChanging(value);
					this.SendPropertyChanging();
					this._TEMP_REGION_ID = value;
					this.SendPropertyChanged("TEMP_REGION_ID");
					this.OnTEMP_REGION_IDChanged();
				}
			}
		}
		
		[Column(Storage="_ActualJobNature", DbType="VarChar(1000)")]
		public string ActualJobNature
		{
			get
			{
				return this._ActualJobNature;
			}
			set
			{
				if ((this._ActualJobNature != value))
				{
					this.OnActualJobNatureChanging(value);
					this.SendPropertyChanging();
					this._ActualJobNature = value;
					this.SendPropertyChanged("ActualJobNature");
					this.OnActualJobNatureChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Vendor")]
	public partial class Vendor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name_TW;
		
		private string _Beneficiary;
		
		private string _Remark;
		
		private string _Name_EN;
		
		private string _Manufacturer;
		
		private string _Address;
		
		private string _Attn;
		
		private string _Email;
		
		private string _Tel;
		
		private string _Fax;
		
		private string _Origin;
		
		private string _PaymentTerm;
		
		private string _Incoterms;
		
		private string _PrepareMan;
		
		private System.Nullable<System.DateTime> _PrepareDate;
		
		private string _ConfirmMan;
		
		private System.Nullable<System.DateTime> _ConfirmDate;
		
		private string _AcceptMan;
		
		private System.Nullable<System.DateTime> _AcceptDate;
		
		private System.Nullable<int> _Status;
		
		private string _Flag;
		
		private string _ShortName;
		
		private string _Coordinator;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnName_TWChanging(string value);
    partial void OnName_TWChanged();
    partial void OnBeneficiaryChanging(string value);
    partial void OnBeneficiaryChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnName_ENChanging(string value);
    partial void OnName_ENChanged();
    partial void OnManufacturerChanging(string value);
    partial void OnManufacturerChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnAttnChanging(string value);
    partial void OnAttnChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnTelChanging(string value);
    partial void OnTelChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnOriginChanging(string value);
    partial void OnOriginChanged();
    partial void OnPaymentTermChanging(string value);
    partial void OnPaymentTermChanged();
    partial void OnIncotermsChanging(string value);
    partial void OnIncotermsChanged();
    partial void OnPrepareManChanging(string value);
    partial void OnPrepareManChanged();
    partial void OnPrepareDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPrepareDateChanged();
    partial void OnConfirmManChanging(string value);
    partial void OnConfirmManChanged();
    partial void OnConfirmDateChanging(System.Nullable<System.DateTime> value);
    partial void OnConfirmDateChanged();
    partial void OnAcceptManChanging(string value);
    partial void OnAcceptManChanged();
    partial void OnAcceptDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAcceptDateChanged();
    partial void OnStatusChanging(System.Nullable<int> value);
    partial void OnStatusChanged();
    partial void OnFlagChanging(string value);
    partial void OnFlagChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnCoordinatorChanging(string value);
    partial void OnCoordinatorChanged();
    #endregion
		
		public Vendor()
		{
			OnCreated();
		}
		
		[Column(Storage="_Code", DbType="NVarChar(60) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Name_TW", DbType="NVarChar(300)")]
		public string Name_TW
		{
			get
			{
				return this._Name_TW;
			}
			set
			{
				if ((this._Name_TW != value))
				{
					this.OnName_TWChanging(value);
					this.SendPropertyChanging();
					this._Name_TW = value;
					this.SendPropertyChanged("Name_TW");
					this.OnName_TWChanged();
				}
			}
		}
		
		[Column(Storage="_Beneficiary", DbType="NVarChar(300)")]
		public string Beneficiary
		{
			get
			{
				return this._Beneficiary;
			}
			set
			{
				if ((this._Beneficiary != value))
				{
					this.OnBeneficiaryChanging(value);
					this.SendPropertyChanging();
					this._Beneficiary = value;
					this.SendPropertyChanged("Beneficiary");
					this.OnBeneficiaryChanged();
				}
			}
		}
		
		[Column(Storage="_Remark", DbType="NVarChar(300)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[Column(Storage="_Name_EN", DbType="NVarChar(300)")]
		public string Name_EN
		{
			get
			{
				return this._Name_EN;
			}
			set
			{
				if ((this._Name_EN != value))
				{
					this.OnName_ENChanging(value);
					this.SendPropertyChanging();
					this._Name_EN = value;
					this.SendPropertyChanged("Name_EN");
					this.OnName_ENChanged();
				}
			}
		}
		
		[Column(Storage="_Manufacturer", DbType="NVarChar(MAX)")]
		public string Manufacturer
		{
			get
			{
				return this._Manufacturer;
			}
			set
			{
				if ((this._Manufacturer != value))
				{
					this.OnManufacturerChanging(value);
					this.SendPropertyChanging();
					this._Manufacturer = value;
					this.SendPropertyChanged("Manufacturer");
					this.OnManufacturerChanged();
				}
			}
		}
		
		[Column(Storage="_Address", DbType="NVarChar(600)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[Column(Storage="_Attn", DbType="NVarChar(100)")]
		public string Attn
		{
			get
			{
				return this._Attn;
			}
			set
			{
				if ((this._Attn != value))
				{
					this.OnAttnChanging(value);
					this.SendPropertyChanging();
					this._Attn = value;
					this.SendPropertyChanged("Attn");
					this.OnAttnChanged();
				}
			}
		}
		
		[Column(Storage="_Email", DbType="NVarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[Column(Storage="_Tel", DbType="NVarChar(100)")]
		public string Tel
		{
			get
			{
				return this._Tel;
			}
			set
			{
				if ((this._Tel != value))
				{
					this.OnTelChanging(value);
					this.SendPropertyChanging();
					this._Tel = value;
					this.SendPropertyChanged("Tel");
					this.OnTelChanged();
				}
			}
		}
		
		[Column(Storage="_Fax", DbType="NVarChar(100)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[Column(Storage="_Origin", DbType="NVarChar(20)")]
		public string Origin
		{
			get
			{
				return this._Origin;
			}
			set
			{
				if ((this._Origin != value))
				{
					this.OnOriginChanging(value);
					this.SendPropertyChanging();
					this._Origin = value;
					this.SendPropertyChanged("Origin");
					this.OnOriginChanged();
				}
			}
		}
		
		[Column(Storage="_PaymentTerm", DbType="NVarChar(600)")]
		public string PaymentTerm
		{
			get
			{
				return this._PaymentTerm;
			}
			set
			{
				if ((this._PaymentTerm != value))
				{
					this.OnPaymentTermChanging(value);
					this.SendPropertyChanging();
					this._PaymentTerm = value;
					this.SendPropertyChanged("PaymentTerm");
					this.OnPaymentTermChanged();
				}
			}
		}
		
		[Column(Storage="_Incoterms", DbType="NVarChar(600)")]
		public string Incoterms
		{
			get
			{
				return this._Incoterms;
			}
			set
			{
				if ((this._Incoterms != value))
				{
					this.OnIncotermsChanging(value);
					this.SendPropertyChanging();
					this._Incoterms = value;
					this.SendPropertyChanged("Incoterms");
					this.OnIncotermsChanged();
				}
			}
		}
		
		[Column(Storage="_PrepareMan", DbType="NVarChar(60)")]
		public string PrepareMan
		{
			get
			{
				return this._PrepareMan;
			}
			set
			{
				if ((this._PrepareMan != value))
				{
					this.OnPrepareManChanging(value);
					this.SendPropertyChanging();
					this._PrepareMan = value;
					this.SendPropertyChanged("PrepareMan");
					this.OnPrepareManChanged();
				}
			}
		}
		
		[Column(Storage="_PrepareDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PrepareDate
		{
			get
			{
				return this._PrepareDate;
			}
			set
			{
				if ((this._PrepareDate != value))
				{
					this.OnPrepareDateChanging(value);
					this.SendPropertyChanging();
					this._PrepareDate = value;
					this.SendPropertyChanged("PrepareDate");
					this.OnPrepareDateChanged();
				}
			}
		}
		
		[Column(Storage="_ConfirmMan", DbType="NVarChar(60)")]
		public string ConfirmMan
		{
			get
			{
				return this._ConfirmMan;
			}
			set
			{
				if ((this._ConfirmMan != value))
				{
					this.OnConfirmManChanging(value);
					this.SendPropertyChanging();
					this._ConfirmMan = value;
					this.SendPropertyChanged("ConfirmMan");
					this.OnConfirmManChanged();
				}
			}
		}
		
		[Column(Storage="_ConfirmDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ConfirmDate
		{
			get
			{
				return this._ConfirmDate;
			}
			set
			{
				if ((this._ConfirmDate != value))
				{
					this.OnConfirmDateChanging(value);
					this.SendPropertyChanging();
					this._ConfirmDate = value;
					this.SendPropertyChanged("ConfirmDate");
					this.OnConfirmDateChanged();
				}
			}
		}
		
		[Column(Storage="_AcceptMan", DbType="NVarChar(60)")]
		public string AcceptMan
		{
			get
			{
				return this._AcceptMan;
			}
			set
			{
				if ((this._AcceptMan != value))
				{
					this.OnAcceptManChanging(value);
					this.SendPropertyChanging();
					this._AcceptMan = value;
					this.SendPropertyChanged("AcceptMan");
					this.OnAcceptManChanged();
				}
			}
		}
		
		[Column(Storage="_AcceptDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AcceptDate
		{
			get
			{
				return this._AcceptDate;
			}
			set
			{
				if ((this._AcceptDate != value))
				{
					this.OnAcceptDateChanging(value);
					this.SendPropertyChanging();
					this._AcceptDate = value;
					this.SendPropertyChanged("AcceptDate");
					this.OnAcceptDateChanged();
				}
			}
		}
		
		[Column(Storage="_Status", DbType="Int")]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[Column(Storage="_Flag", DbType="NVarChar(100)")]
		public string Flag
		{
			get
			{
				return this._Flag;
			}
			set
			{
				if ((this._Flag != value))
				{
					this.OnFlagChanging(value);
					this.SendPropertyChanging();
					this._Flag = value;
					this.SendPropertyChanged("Flag");
					this.OnFlagChanged();
				}
			}
		}
		
		[Column(Storage="_ShortName", DbType="NVarChar(300)")]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[Column(Storage="_Coordinator", DbType="NVarChar(100)")]
		public string Coordinator
		{
			get
			{
				return this._Coordinator;
			}
			set
			{
				if ((this._Coordinator != value))
				{
					this.OnCoordinatorChanging(value);
					this.SendPropertyChanging();
					this._Coordinator = value;
					this.SendPropertyChanged("Coordinator");
					this.OnCoordinatorChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.McBrandImg")]
	public partial class McBrandImg : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _BrandName;
		
		private System.Data.Linq.Binary _BrandImg;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBrandNameChanging(string value);
    partial void OnBrandNameChanged();
    partial void OnBrandImgChanging(System.Data.Linq.Binary value);
    partial void OnBrandImgChanged();
    #endregion
		
		public McBrandImg()
		{
			OnCreated();
		}
		
		[Column(Storage="_BrandName", DbType="NChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string BrandName
		{
			get
			{
				return this._BrandName;
			}
			set
			{
				if ((this._BrandName != value))
				{
					this.OnBrandNameChanging(value);
					this.SendPropertyChanging();
					this._BrandName = value;
					this.SendPropertyChanged("BrandName");
					this.OnBrandNameChanged();
				}
			}
		}
		
		[Column(Storage="_BrandImg", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary BrandImg
		{
			get
			{
				return this._BrandImg;
			}
			set
			{
				if ((this._BrandImg != value))
				{
					this.OnBrandImgChanging(value);
					this.SendPropertyChanging();
					this._BrandImg = value;
					this.SendPropertyChanged("BrandImg");
					this.OnBrandImgChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.POHeader")]
	public partial class POHeader : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PONO;
		
		private string _AmendNo;
		
		private System.Nullable<System.DateTime> _IssueDate;
		
		private string _PaymentTerm;
		
		private string _Incoterms;
		
		private string _TransitMode;
		
		private string _Coordinator;
		
		private string _Attn;
		
		private string _Email;
		
		private string _Tel;
		
		private string _Fax;
		
		private string _TransitPoint;
		
		private string _SpecialNote;
		
		private string _Remark1;
		
		private string _Remark2;
		
		private string _VendorCode;
		
		private string _BuyerCode;
		
		private string _FinalVendorCode;
		
		private string _Currency;
		
		private string _Notepad;
		
		private System.Nullable<System.DateTime> _ProjectionDate;
		
		private string _POStatus;
		
		private System.Nullable<int> _POType;
		
		private string _AmountRemark;
		
		private string _Notepad_CN;
		
		private string _GoodsDescription_EN;
		
		private string _GoodsDescription_CN;
		
		private string _PartialShipment;
		
		private string _OriginsCountry;
		
		private string _LoadingPort;
		
		private string _Destination;
		
		private string _DischargePort;
		
		private string _Consignee;
		
		private System.Nullable<System.DateTime> _ActualStockInDate;
		
		private System.Nullable<bool> _IsFinalVendor;
		
		private EntitySet<PODetail_OtherItem> _PODetail_OtherItems;
		
		private EntitySet<PODetail> _PODetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPONOChanging(string value);
    partial void OnPONOChanged();
    partial void OnAmendNoChanging(string value);
    partial void OnAmendNoChanged();
    partial void OnIssueDateChanging(System.Nullable<System.DateTime> value);
    partial void OnIssueDateChanged();
    partial void OnPaymentTermChanging(string value);
    partial void OnPaymentTermChanged();
    partial void OnIncotermsChanging(string value);
    partial void OnIncotermsChanged();
    partial void OnTransitModeChanging(string value);
    partial void OnTransitModeChanged();
    partial void OnCoordinatorChanging(string value);
    partial void OnCoordinatorChanged();
    partial void OnAttnChanging(string value);
    partial void OnAttnChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnTelChanging(string value);
    partial void OnTelChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnTransitPointChanging(string value);
    partial void OnTransitPointChanged();
    partial void OnSpecialNoteChanging(string value);
    partial void OnSpecialNoteChanged();
    partial void OnRemark1Changing(string value);
    partial void OnRemark1Changed();
    partial void OnRemark2Changing(string value);
    partial void OnRemark2Changed();
    partial void OnVendorCodeChanging(string value);
    partial void OnVendorCodeChanged();
    partial void OnBuyerCodeChanging(string value);
    partial void OnBuyerCodeChanged();
    partial void OnFinalVendorCodeChanging(string value);
    partial void OnFinalVendorCodeChanged();
    partial void OnCurrencyChanging(string value);
    partial void OnCurrencyChanged();
    partial void OnNotepadChanging(string value);
    partial void OnNotepadChanged();
    partial void OnProjectionDateChanging(System.Nullable<System.DateTime> value);
    partial void OnProjectionDateChanged();
    partial void OnPOStatusChanging(string value);
    partial void OnPOStatusChanged();
    partial void OnPOTypeChanging(System.Nullable<int> value);
    partial void OnPOTypeChanged();
    partial void OnAmountRemarkChanging(string value);
    partial void OnAmountRemarkChanged();
    partial void OnNotepad_CNChanging(string value);
    partial void OnNotepad_CNChanged();
    partial void OnGoodsDescription_ENChanging(string value);
    partial void OnGoodsDescription_ENChanged();
    partial void OnGoodsDescription_CNChanging(string value);
    partial void OnGoodsDescription_CNChanged();
    partial void OnPartialShipmentChanging(string value);
    partial void OnPartialShipmentChanged();
    partial void OnOriginsCountryChanging(string value);
    partial void OnOriginsCountryChanged();
    partial void OnLoadingPortChanging(string value);
    partial void OnLoadingPortChanged();
    partial void OnDestinationChanging(string value);
    partial void OnDestinationChanged();
    partial void OnDischargePortChanging(string value);
    partial void OnDischargePortChanged();
    partial void OnConsigneeChanging(string value);
    partial void OnConsigneeChanged();
    partial void OnActualStockInDateChanging(System.Nullable<System.DateTime> value);
    partial void OnActualStockInDateChanged();
    partial void OnIsFinalVendorChanging(System.Nullable<bool> value);
    partial void OnIsFinalVendorChanged();
    #endregion
		
		public POHeader()
		{
			this._PODetail_OtherItems = new EntitySet<PODetail_OtherItem>(new Action<PODetail_OtherItem>(this.attach_PODetail_OtherItems), new Action<PODetail_OtherItem>(this.detach_PODetail_OtherItems));
			this._PODetails = new EntitySet<PODetail>(new Action<PODetail>(this.attach_PODetails), new Action<PODetail>(this.detach_PODetails));
			OnCreated();
		}
		
		[Column(Storage="_PONO", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PONO
		{
			get
			{
				return this._PONO;
			}
			set
			{
				if ((this._PONO != value))
				{
					this.OnPONOChanging(value);
					this.SendPropertyChanging();
					this._PONO = value;
					this.SendPropertyChanged("PONO");
					this.OnPONOChanged();
				}
			}
		}
		
		[Column(Storage="_AmendNo", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AmendNo
		{
			get
			{
				return this._AmendNo;
			}
			set
			{
				if ((this._AmendNo != value))
				{
					this.OnAmendNoChanging(value);
					this.SendPropertyChanging();
					this._AmendNo = value;
					this.SendPropertyChanged("AmendNo");
					this.OnAmendNoChanged();
				}
			}
		}
		
		[Column(Storage="_IssueDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> IssueDate
		{
			get
			{
				return this._IssueDate;
			}
			set
			{
				if ((this._IssueDate != value))
				{
					this.OnIssueDateChanging(value);
					this.SendPropertyChanging();
					this._IssueDate = value;
					this.SendPropertyChanged("IssueDate");
					this.OnIssueDateChanged();
				}
			}
		}
		
		[Column(Storage="_PaymentTerm", DbType="VarChar(1000)")]
		public string PaymentTerm
		{
			get
			{
				return this._PaymentTerm;
			}
			set
			{
				if ((this._PaymentTerm != value))
				{
					this.OnPaymentTermChanging(value);
					this.SendPropertyChanging();
					this._PaymentTerm = value;
					this.SendPropertyChanged("PaymentTerm");
					this.OnPaymentTermChanged();
				}
			}
		}
		
		[Column(Storage="_Incoterms", DbType="VarChar(300)")]
		public string Incoterms
		{
			get
			{
				return this._Incoterms;
			}
			set
			{
				if ((this._Incoterms != value))
				{
					this.OnIncotermsChanging(value);
					this.SendPropertyChanging();
					this._Incoterms = value;
					this.SendPropertyChanged("Incoterms");
					this.OnIncotermsChanged();
				}
			}
		}
		
		[Column(Storage="_TransitMode", DbType="VarChar(200)")]
		public string TransitMode
		{
			get
			{
				return this._TransitMode;
			}
			set
			{
				if ((this._TransitMode != value))
				{
					this.OnTransitModeChanging(value);
					this.SendPropertyChanging();
					this._TransitMode = value;
					this.SendPropertyChanged("TransitMode");
					this.OnTransitModeChanged();
				}
			}
		}
		
		[Column(Storage="_Coordinator", DbType="VarChar(50)")]
		public string Coordinator
		{
			get
			{
				return this._Coordinator;
			}
			set
			{
				if ((this._Coordinator != value))
				{
					this.OnCoordinatorChanging(value);
					this.SendPropertyChanging();
					this._Coordinator = value;
					this.SendPropertyChanged("Coordinator");
					this.OnCoordinatorChanged();
				}
			}
		}
		
		[Column(Storage="_Attn", DbType="VarChar(60)")]
		public string Attn
		{
			get
			{
				return this._Attn;
			}
			set
			{
				if ((this._Attn != value))
				{
					this.OnAttnChanging(value);
					this.SendPropertyChanging();
					this._Attn = value;
					this.SendPropertyChanged("Attn");
					this.OnAttnChanged();
				}
			}
		}
		
		[Column(Storage="_Email", DbType="VarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[Column(Storage="_Tel", DbType="VarChar(50)")]
		public string Tel
		{
			get
			{
				return this._Tel;
			}
			set
			{
				if ((this._Tel != value))
				{
					this.OnTelChanging(value);
					this.SendPropertyChanging();
					this._Tel = value;
					this.SendPropertyChanged("Tel");
					this.OnTelChanged();
				}
			}
		}
		
		[Column(Storage="_Fax", DbType="VarChar(50)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[Column(Storage="_TransitPoint", DbType="VarChar(1000)")]
		public string TransitPoint
		{
			get
			{
				return this._TransitPoint;
			}
			set
			{
				if ((this._TransitPoint != value))
				{
					this.OnTransitPointChanging(value);
					this.SendPropertyChanging();
					this._TransitPoint = value;
					this.SendPropertyChanged("TransitPoint");
					this.OnTransitPointChanged();
				}
			}
		}
		
		[Column(Storage="_SpecialNote", DbType="VarChar(1000)")]
		public string SpecialNote
		{
			get
			{
				return this._SpecialNote;
			}
			set
			{
				if ((this._SpecialNote != value))
				{
					this.OnSpecialNoteChanging(value);
					this.SendPropertyChanging();
					this._SpecialNote = value;
					this.SendPropertyChanged("SpecialNote");
					this.OnSpecialNoteChanged();
				}
			}
		}
		
		[Column(Storage="_Remark1", DbType="VarChar(MAX)")]
		public string Remark1
		{
			get
			{
				return this._Remark1;
			}
			set
			{
				if ((this._Remark1 != value))
				{
					this.OnRemark1Changing(value);
					this.SendPropertyChanging();
					this._Remark1 = value;
					this.SendPropertyChanged("Remark1");
					this.OnRemark1Changed();
				}
			}
		}
		
		[Column(Storage="_Remark2", DbType="VarChar(MAX)")]
		public string Remark2
		{
			get
			{
				return this._Remark2;
			}
			set
			{
				if ((this._Remark2 != value))
				{
					this.OnRemark2Changing(value);
					this.SendPropertyChanging();
					this._Remark2 = value;
					this.SendPropertyChanged("Remark2");
					this.OnRemark2Changed();
				}
			}
		}
		
		[Column(Storage="_VendorCode", DbType="VarChar(50)")]
		public string VendorCode
		{
			get
			{
				return this._VendorCode;
			}
			set
			{
				if ((this._VendorCode != value))
				{
					this.OnVendorCodeChanging(value);
					this.SendPropertyChanging();
					this._VendorCode = value;
					this.SendPropertyChanged("VendorCode");
					this.OnVendorCodeChanged();
				}
			}
		}
		
		[Column(Storage="_BuyerCode", DbType="VarChar(50)")]
		public string BuyerCode
		{
			get
			{
				return this._BuyerCode;
			}
			set
			{
				if ((this._BuyerCode != value))
				{
					this.OnBuyerCodeChanging(value);
					this.SendPropertyChanging();
					this._BuyerCode = value;
					this.SendPropertyChanged("BuyerCode");
					this.OnBuyerCodeChanged();
				}
			}
		}
		
		[Column(Storage="_FinalVendorCode", DbType="VarChar(50)")]
		public string FinalVendorCode
		{
			get
			{
				return this._FinalVendorCode;
			}
			set
			{
				if ((this._FinalVendorCode != value))
				{
					this.OnFinalVendorCodeChanging(value);
					this.SendPropertyChanging();
					this._FinalVendorCode = value;
					this.SendPropertyChanged("FinalVendorCode");
					this.OnFinalVendorCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Currency", DbType="NVarChar(20)")]
		public string Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[Column(Storage="_Notepad", DbType="NVarChar(MAX)")]
		public string Notepad
		{
			get
			{
				return this._Notepad;
			}
			set
			{
				if ((this._Notepad != value))
				{
					this.OnNotepadChanging(value);
					this.SendPropertyChanging();
					this._Notepad = value;
					this.SendPropertyChanged("Notepad");
					this.OnNotepadChanged();
				}
			}
		}
		
		[Column(Storage="_ProjectionDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ProjectionDate
		{
			get
			{
				return this._ProjectionDate;
			}
			set
			{
				if ((this._ProjectionDate != value))
				{
					this.OnProjectionDateChanging(value);
					this.SendPropertyChanging();
					this._ProjectionDate = value;
					this.SendPropertyChanged("ProjectionDate");
					this.OnProjectionDateChanged();
				}
			}
		}
		
		[Column(Storage="_POStatus", DbType="VarChar(15)")]
		public string POStatus
		{
			get
			{
				return this._POStatus;
			}
			set
			{
				if ((this._POStatus != value))
				{
					this.OnPOStatusChanging(value);
					this.SendPropertyChanging();
					this._POStatus = value;
					this.SendPropertyChanged("POStatus");
					this.OnPOStatusChanged();
				}
			}
		}
		
		[Column(Storage="_POType", DbType="Int")]
		public System.Nullable<int> POType
		{
			get
			{
				return this._POType;
			}
			set
			{
				if ((this._POType != value))
				{
					this.OnPOTypeChanging(value);
					this.SendPropertyChanging();
					this._POType = value;
					this.SendPropertyChanged("POType");
					this.OnPOTypeChanged();
				}
			}
		}
		
		[Column(Storage="_AmountRemark", DbType="VarChar(MAX)")]
		public string AmountRemark
		{
			get
			{
				return this._AmountRemark;
			}
			set
			{
				if ((this._AmountRemark != value))
				{
					this.OnAmountRemarkChanging(value);
					this.SendPropertyChanging();
					this._AmountRemark = value;
					this.SendPropertyChanged("AmountRemark");
					this.OnAmountRemarkChanged();
				}
			}
		}
		
		[Column(Storage="_Notepad_CN", DbType="NVarChar(MAX)")]
		public string Notepad_CN
		{
			get
			{
				return this._Notepad_CN;
			}
			set
			{
				if ((this._Notepad_CN != value))
				{
					this.OnNotepad_CNChanging(value);
					this.SendPropertyChanging();
					this._Notepad_CN = value;
					this.SendPropertyChanged("Notepad_CN");
					this.OnNotepad_CNChanged();
				}
			}
		}
		
		[Column(Storage="_GoodsDescription_EN", DbType="NVarChar(1000)")]
		public string GoodsDescription_EN
		{
			get
			{
				return this._GoodsDescription_EN;
			}
			set
			{
				if ((this._GoodsDescription_EN != value))
				{
					this.OnGoodsDescription_ENChanging(value);
					this.SendPropertyChanging();
					this._GoodsDescription_EN = value;
					this.SendPropertyChanged("GoodsDescription_EN");
					this.OnGoodsDescription_ENChanged();
				}
			}
		}
		
		[Column(Storage="_GoodsDescription_CN", DbType="NVarChar(1000)")]
		public string GoodsDescription_CN
		{
			get
			{
				return this._GoodsDescription_CN;
			}
			set
			{
				if ((this._GoodsDescription_CN != value))
				{
					this.OnGoodsDescription_CNChanging(value);
					this.SendPropertyChanging();
					this._GoodsDescription_CN = value;
					this.SendPropertyChanged("GoodsDescription_CN");
					this.OnGoodsDescription_CNChanged();
				}
			}
		}
		
		[Column(Storage="_PartialShipment", DbType="NVarChar(200)")]
		public string PartialShipment
		{
			get
			{
				return this._PartialShipment;
			}
			set
			{
				if ((this._PartialShipment != value))
				{
					this.OnPartialShipmentChanging(value);
					this.SendPropertyChanging();
					this._PartialShipment = value;
					this.SendPropertyChanged("PartialShipment");
					this.OnPartialShipmentChanged();
				}
			}
		}
		
		[Column(Storage="_OriginsCountry", DbType="NVarChar(200)")]
		public string OriginsCountry
		{
			get
			{
				return this._OriginsCountry;
			}
			set
			{
				if ((this._OriginsCountry != value))
				{
					this.OnOriginsCountryChanging(value);
					this.SendPropertyChanging();
					this._OriginsCountry = value;
					this.SendPropertyChanged("OriginsCountry");
					this.OnOriginsCountryChanged();
				}
			}
		}
		
		[Column(Storage="_LoadingPort", DbType="NVarChar(200)")]
		public string LoadingPort
		{
			get
			{
				return this._LoadingPort;
			}
			set
			{
				if ((this._LoadingPort != value))
				{
					this.OnLoadingPortChanging(value);
					this.SendPropertyChanging();
					this._LoadingPort = value;
					this.SendPropertyChanged("LoadingPort");
					this.OnLoadingPortChanged();
				}
			}
		}
		
		[Column(Storage="_Destination", DbType="NVarChar(200)")]
		public string Destination
		{
			get
			{
				return this._Destination;
			}
			set
			{
				if ((this._Destination != value))
				{
					this.OnDestinationChanging(value);
					this.SendPropertyChanging();
					this._Destination = value;
					this.SendPropertyChanged("Destination");
					this.OnDestinationChanged();
				}
			}
		}
		
		[Column(Storage="_DischargePort", DbType="NVarChar(600)")]
		public string DischargePort
		{
			get
			{
				return this._DischargePort;
			}
			set
			{
				if ((this._DischargePort != value))
				{
					this.OnDischargePortChanging(value);
					this.SendPropertyChanging();
					this._DischargePort = value;
					this.SendPropertyChanged("DischargePort");
					this.OnDischargePortChanged();
				}
			}
		}
		
		[Column(Storage="_Consignee", DbType="NVarChar(600)")]
		public string Consignee
		{
			get
			{
				return this._Consignee;
			}
			set
			{
				if ((this._Consignee != value))
				{
					this.OnConsigneeChanging(value);
					this.SendPropertyChanging();
					this._Consignee = value;
					this.SendPropertyChanged("Consignee");
					this.OnConsigneeChanged();
				}
			}
		}
		
		[Column(Storage="_ActualStockInDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ActualStockInDate
		{
			get
			{
				return this._ActualStockInDate;
			}
			set
			{
				if ((this._ActualStockInDate != value))
				{
					this.OnActualStockInDateChanging(value);
					this.SendPropertyChanging();
					this._ActualStockInDate = value;
					this.SendPropertyChanged("ActualStockInDate");
					this.OnActualStockInDateChanged();
				}
			}
		}
		
		[Column(Storage="_IsFinalVendor", DbType="Bit")]
		public System.Nullable<bool> IsFinalVendor
		{
			get
			{
				return this._IsFinalVendor;
			}
			set
			{
				if ((this._IsFinalVendor != value))
				{
					this.OnIsFinalVendorChanging(value);
					this.SendPropertyChanging();
					this._IsFinalVendor = value;
					this.SendPropertyChanged("IsFinalVendor");
					this.OnIsFinalVendorChanged();
				}
			}
		}
		
		[Association(Name="POHeader_PODetail_OtherItem", Storage="_PODetail_OtherItems", ThisKey="PONO,AmendNo", OtherKey="PONO,AmendNo")]
		public EntitySet<PODetail_OtherItem> PODetail_OtherItems
		{
			get
			{
				return this._PODetail_OtherItems;
			}
			set
			{
				this._PODetail_OtherItems.Assign(value);
			}
		}
		
		[Association(Name="POHeader_PODetail", Storage="_PODetails", ThisKey="PONO,AmendNo", OtherKey="PONO,AmendNo")]
		public EntitySet<PODetail> PODetails
		{
			get
			{
				return this._PODetails;
			}
			set
			{
				this._PODetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PODetail_OtherItems(PODetail_OtherItem entity)
		{
			this.SendPropertyChanging();
			entity.POHeader = this;
		}
		
		private void detach_PODetail_OtherItems(PODetail_OtherItem entity)
		{
			this.SendPropertyChanging();
			entity.POHeader = null;
		}
		
		private void attach_PODetails(PODetail entity)
		{
			this.SendPropertyChanging();
			entity.POHeader = this;
		}
		
		private void detach_PODetails(PODetail entity)
		{
			this.SendPropertyChanging();
			entity.POHeader = null;
		}
	}
	
	[Table(Name="dbo.McBrand")]
	public partial class McBrand : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _BrandName;
		
		private string _MaxSpeed;
		
		private string _ASpeed;
		
		private string _CurSpeed;
		
		private string _MaxNeedle;
		
		private string _MaxFeed;
		
		private string _ThrTimer;
		
		private string _WfLift;
		
		private string _Stitch;
		
		private string _Luboil;
		
		private string _BNeedle;
		
		private string _TNeedle;
		
		private string _CurTNeedle;
		
		private string _GNeedle;
		
		private string _curGNeedle;
		
		private string _Overedge;
		
		private string _pfLift;
		
		private string _DiffRatio;
		
		private string _DiffRatio1;
		
		private System.Nullable<int> _Thread;
		
		private string _SewArea;
		
		private string _SewArea1;
		
		private string _Memo1;
		
		private string _Memo2;
		
		private string _NLift;
		
		private string _HWTypeCode;
		
		private long _OID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBrandNameChanging(string value);
    partial void OnBrandNameChanged();
    partial void OnMaxSpeedChanging(string value);
    partial void OnMaxSpeedChanged();
    partial void OnASpeedChanging(string value);
    partial void OnASpeedChanged();
    partial void OnCurSpeedChanging(string value);
    partial void OnCurSpeedChanged();
    partial void OnMaxNeedleChanging(string value);
    partial void OnMaxNeedleChanged();
    partial void OnMaxFeedChanging(string value);
    partial void OnMaxFeedChanged();
    partial void OnThrTimerChanging(string value);
    partial void OnThrTimerChanged();
    partial void OnWfLiftChanging(string value);
    partial void OnWfLiftChanged();
    partial void OnStitchChanging(string value);
    partial void OnStitchChanged();
    partial void OnLuboilChanging(string value);
    partial void OnLuboilChanged();
    partial void OnBNeedleChanging(string value);
    partial void OnBNeedleChanged();
    partial void OnTNeedleChanging(string value);
    partial void OnTNeedleChanged();
    partial void OnCurTNeedleChanging(string value);
    partial void OnCurTNeedleChanged();
    partial void OnGNeedleChanging(string value);
    partial void OnGNeedleChanged();
    partial void OncurGNeedleChanging(string value);
    partial void OncurGNeedleChanged();
    partial void OnOveredgeChanging(string value);
    partial void OnOveredgeChanged();
    partial void OnpfLiftChanging(string value);
    partial void OnpfLiftChanged();
    partial void OnDiffRatioChanging(string value);
    partial void OnDiffRatioChanged();
    partial void OnDiffRatio1Changing(string value);
    partial void OnDiffRatio1Changed();
    partial void OnThreadChanging(System.Nullable<int> value);
    partial void OnThreadChanged();
    partial void OnSewAreaChanging(string value);
    partial void OnSewAreaChanged();
    partial void OnSewArea1Changing(string value);
    partial void OnSewArea1Changed();
    partial void OnMemo1Changing(string value);
    partial void OnMemo1Changed();
    partial void OnMemo2Changing(string value);
    partial void OnMemo2Changed();
    partial void OnNLiftChanging(string value);
    partial void OnNLiftChanged();
    partial void OnHWTypeCodeChanging(string value);
    partial void OnHWTypeCodeChanged();
    partial void OnOIDChanging(long value);
    partial void OnOIDChanged();
    #endregion
		
		public McBrand()
		{
			OnCreated();
		}
		
		[Column(Storage="_BrandName", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string BrandName
		{
			get
			{
				return this._BrandName;
			}
			set
			{
				if ((this._BrandName != value))
				{
					this.OnBrandNameChanging(value);
					this.SendPropertyChanging();
					this._BrandName = value;
					this.SendPropertyChanged("BrandName");
					this.OnBrandNameChanged();
				}
			}
		}
		
		[Column(Storage="_MaxSpeed", DbType="NVarChar(15)")]
		public string MaxSpeed
		{
			get
			{
				return this._MaxSpeed;
			}
			set
			{
				if ((this._MaxSpeed != value))
				{
					this.OnMaxSpeedChanging(value);
					this.SendPropertyChanging();
					this._MaxSpeed = value;
					this.SendPropertyChanged("MaxSpeed");
					this.OnMaxSpeedChanged();
				}
			}
		}
		
		[Column(Storage="_ASpeed", DbType="NVarChar(100)")]
		public string ASpeed
		{
			get
			{
				return this._ASpeed;
			}
			set
			{
				if ((this._ASpeed != value))
				{
					this.OnASpeedChanging(value);
					this.SendPropertyChanging();
					this._ASpeed = value;
					this.SendPropertyChanged("ASpeed");
					this.OnASpeedChanged();
				}
			}
		}
		
		[Column(Storage="_CurSpeed", DbType="NVarChar(10)")]
		public string CurSpeed
		{
			get
			{
				return this._CurSpeed;
			}
			set
			{
				if ((this._CurSpeed != value))
				{
					this.OnCurSpeedChanging(value);
					this.SendPropertyChanging();
					this._CurSpeed = value;
					this.SendPropertyChanged("CurSpeed");
					this.OnCurSpeedChanged();
				}
			}
		}
		
		[Column(Storage="_MaxNeedle", DbType="NVarChar(10)")]
		public string MaxNeedle
		{
			get
			{
				return this._MaxNeedle;
			}
			set
			{
				if ((this._MaxNeedle != value))
				{
					this.OnMaxNeedleChanging(value);
					this.SendPropertyChanging();
					this._MaxNeedle = value;
					this.SendPropertyChanged("MaxNeedle");
					this.OnMaxNeedleChanged();
				}
			}
		}
		
		[Column(Storage="_MaxFeed", DbType="NVarChar(50)")]
		public string MaxFeed
		{
			get
			{
				return this._MaxFeed;
			}
			set
			{
				if ((this._MaxFeed != value))
				{
					this.OnMaxFeedChanging(value);
					this.SendPropertyChanging();
					this._MaxFeed = value;
					this.SendPropertyChanged("MaxFeed");
					this.OnMaxFeedChanged();
				}
			}
		}
		
		[Column(Storage="_ThrTimer", DbType="NVarChar(10)")]
		public string ThrTimer
		{
			get
			{
				return this._ThrTimer;
			}
			set
			{
				if ((this._ThrTimer != value))
				{
					this.OnThrTimerChanging(value);
					this.SendPropertyChanging();
					this._ThrTimer = value;
					this.SendPropertyChanged("ThrTimer");
					this.OnThrTimerChanged();
				}
			}
		}
		
		[Column(Storage="_WfLift", DbType="NVarChar(50)")]
		public string WfLift
		{
			get
			{
				return this._WfLift;
			}
			set
			{
				if ((this._WfLift != value))
				{
					this.OnWfLiftChanging(value);
					this.SendPropertyChanging();
					this._WfLift = value;
					this.SendPropertyChanged("WfLift");
					this.OnWfLiftChanged();
				}
			}
		}
		
		[Column(Storage="_Stitch", DbType="NVarChar(50)")]
		public string Stitch
		{
			get
			{
				return this._Stitch;
			}
			set
			{
				if ((this._Stitch != value))
				{
					this.OnStitchChanging(value);
					this.SendPropertyChanging();
					this._Stitch = value;
					this.SendPropertyChanged("Stitch");
					this.OnStitchChanged();
				}
			}
		}
		
		[Column(Storage="_Luboil", DbType="NVarChar(80)")]
		public string Luboil
		{
			get
			{
				return this._Luboil;
			}
			set
			{
				if ((this._Luboil != value))
				{
					this.OnLuboilChanging(value);
					this.SendPropertyChanging();
					this._Luboil = value;
					this.SendPropertyChanged("Luboil");
					this.OnLuboilChanged();
				}
			}
		}
		
		[Column(Storage="_BNeedle", DbType="NVarChar(100)")]
		public string BNeedle
		{
			get
			{
				return this._BNeedle;
			}
			set
			{
				if ((this._BNeedle != value))
				{
					this.OnBNeedleChanging(value);
					this.SendPropertyChanging();
					this._BNeedle = value;
					this.SendPropertyChanged("BNeedle");
					this.OnBNeedleChanged();
				}
			}
		}
		
		[Column(Storage="_TNeedle", DbType="NVarChar(50)")]
		public string TNeedle
		{
			get
			{
				return this._TNeedle;
			}
			set
			{
				if ((this._TNeedle != value))
				{
					this.OnTNeedleChanging(value);
					this.SendPropertyChanging();
					this._TNeedle = value;
					this.SendPropertyChanged("TNeedle");
					this.OnTNeedleChanged();
				}
			}
		}
		
		[Column(Storage="_CurTNeedle", DbType="NVarChar(10)")]
		public string CurTNeedle
		{
			get
			{
				return this._CurTNeedle;
			}
			set
			{
				if ((this._CurTNeedle != value))
				{
					this.OnCurTNeedleChanging(value);
					this.SendPropertyChanging();
					this._CurTNeedle = value;
					this.SendPropertyChanged("CurTNeedle");
					this.OnCurTNeedleChanged();
				}
			}
		}
		
		[Column(Storage="_GNeedle", DbType="NVarChar(30)")]
		public string GNeedle
		{
			get
			{
				return this._GNeedle;
			}
			set
			{
				if ((this._GNeedle != value))
				{
					this.OnGNeedleChanging(value);
					this.SendPropertyChanging();
					this._GNeedle = value;
					this.SendPropertyChanged("GNeedle");
					this.OnGNeedleChanged();
				}
			}
		}
		
		[Column(Storage="_curGNeedle", DbType="NVarChar(30)")]
		public string curGNeedle
		{
			get
			{
				return this._curGNeedle;
			}
			set
			{
				if ((this._curGNeedle != value))
				{
					this.OncurGNeedleChanging(value);
					this.SendPropertyChanging();
					this._curGNeedle = value;
					this.SendPropertyChanged("curGNeedle");
					this.OncurGNeedleChanged();
				}
			}
		}
		
		[Column(Storage="_Overedge", DbType="NVarChar(50)")]
		public string Overedge
		{
			get
			{
				return this._Overedge;
			}
			set
			{
				if ((this._Overedge != value))
				{
					this.OnOveredgeChanging(value);
					this.SendPropertyChanging();
					this._Overedge = value;
					this.SendPropertyChanged("Overedge");
					this.OnOveredgeChanged();
				}
			}
		}
		
		[Column(Storage="_pfLift", DbType="NVarChar(100)")]
		public string pfLift
		{
			get
			{
				return this._pfLift;
			}
			set
			{
				if ((this._pfLift != value))
				{
					this.OnpfLiftChanging(value);
					this.SendPropertyChanging();
					this._pfLift = value;
					this.SendPropertyChanged("pfLift");
					this.OnpfLiftChanged();
				}
			}
		}
		
		[Column(Storage="_DiffRatio", DbType="NVarChar(10)")]
		public string DiffRatio
		{
			get
			{
				return this._DiffRatio;
			}
			set
			{
				if ((this._DiffRatio != value))
				{
					this.OnDiffRatioChanging(value);
					this.SendPropertyChanging();
					this._DiffRatio = value;
					this.SendPropertyChanged("DiffRatio");
					this.OnDiffRatioChanged();
				}
			}
		}
		
		[Column(Storage="_DiffRatio1", DbType="NVarChar(10)")]
		public string DiffRatio1
		{
			get
			{
				return this._DiffRatio1;
			}
			set
			{
				if ((this._DiffRatio1 != value))
				{
					this.OnDiffRatio1Changing(value);
					this.SendPropertyChanging();
					this._DiffRatio1 = value;
					this.SendPropertyChanged("DiffRatio1");
					this.OnDiffRatio1Changed();
				}
			}
		}
		
		[Column(Storage="_Thread", DbType="Int")]
		public System.Nullable<int> Thread
		{
			get
			{
				return this._Thread;
			}
			set
			{
				if ((this._Thread != value))
				{
					this.OnThreadChanging(value);
					this.SendPropertyChanging();
					this._Thread = value;
					this.SendPropertyChanged("Thread");
					this.OnThreadChanged();
				}
			}
		}
		
		[Column(Storage="_SewArea", DbType="NVarChar(10)")]
		public string SewArea
		{
			get
			{
				return this._SewArea;
			}
			set
			{
				if ((this._SewArea != value))
				{
					this.OnSewAreaChanging(value);
					this.SendPropertyChanging();
					this._SewArea = value;
					this.SendPropertyChanged("SewArea");
					this.OnSewAreaChanged();
				}
			}
		}
		
		[Column(Storage="_SewArea1", DbType="NVarChar(10)")]
		public string SewArea1
		{
			get
			{
				return this._SewArea1;
			}
			set
			{
				if ((this._SewArea1 != value))
				{
					this.OnSewArea1Changing(value);
					this.SendPropertyChanging();
					this._SewArea1 = value;
					this.SendPropertyChanged("SewArea1");
					this.OnSewArea1Changed();
				}
			}
		}
		
		[Column(Storage="_Memo1", DbType="NVarChar(MAX)")]
		public string Memo1
		{
			get
			{
				return this._Memo1;
			}
			set
			{
				if ((this._Memo1 != value))
				{
					this.OnMemo1Changing(value);
					this.SendPropertyChanging();
					this._Memo1 = value;
					this.SendPropertyChanged("Memo1");
					this.OnMemo1Changed();
				}
			}
		}
		
		[Column(Storage="_Memo2", DbType="NVarChar(MAX)")]
		public string Memo2
		{
			get
			{
				return this._Memo2;
			}
			set
			{
				if ((this._Memo2 != value))
				{
					this.OnMemo2Changing(value);
					this.SendPropertyChanging();
					this._Memo2 = value;
					this.SendPropertyChanged("Memo2");
					this.OnMemo2Changed();
				}
			}
		}
		
		[Column(Storage="_NLift", DbType="NVarChar(150)")]
		public string NLift
		{
			get
			{
				return this._NLift;
			}
			set
			{
				if ((this._NLift != value))
				{
					this.OnNLiftChanging(value);
					this.SendPropertyChanging();
					this._NLift = value;
					this.SendPropertyChanged("NLift");
					this.OnNLiftChanged();
				}
			}
		}
		
		[Column(Storage="_HWTypeCode", DbType="VarChar(15)")]
		public string HWTypeCode
		{
			get
			{
				return this._HWTypeCode;
			}
			set
			{
				if ((this._HWTypeCode != value))
				{
					this.OnHWTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._HWTypeCode = value;
					this.SendPropertyChanged("HWTypeCode");
					this.OnHWTypeCodeChanged();
				}
			}
		}
		
		[Column(Storage="_OID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long OID
		{
			get
			{
				return this._OID;
			}
			set
			{
				if ((this._OID != value))
				{
					this.OnOIDChanging(value);
					this.SendPropertyChanging();
					this._OID = value;
					this.SendPropertyChanged("OID");
					this.OnOIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.PurchasePlanHeader")]
	public partial class PurchasePlanHeader : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _OID;
		
		private string _PurchaseNo;
		
		private System.Nullable<System.DateTime> _PurchaseDate;
		
		private EntitySet<PurchasePlanDetail> _PurchasePlanDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOIDChanging(long value);
    partial void OnOIDChanged();
    partial void OnPurchaseNoChanging(string value);
    partial void OnPurchaseNoChanged();
    partial void OnPurchaseDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPurchaseDateChanged();
    #endregion
		
		public PurchasePlanHeader()
		{
			this._PurchasePlanDetails = new EntitySet<PurchasePlanDetail>(new Action<PurchasePlanDetail>(this.attach_PurchasePlanDetails), new Action<PurchasePlanDetail>(this.detach_PurchasePlanDetails));
			OnCreated();
		}
		
		[Column(Storage="_OID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long OID
		{
			get
			{
				return this._OID;
			}
			set
			{
				if ((this._OID != value))
				{
					this.OnOIDChanging(value);
					this.SendPropertyChanging();
					this._OID = value;
					this.SendPropertyChanged("OID");
					this.OnOIDChanged();
				}
			}
		}
		
		[Column(Storage="_PurchaseNo", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string PurchaseNo
		{
			get
			{
				return this._PurchaseNo;
			}
			set
			{
				if ((this._PurchaseNo != value))
				{
					this.OnPurchaseNoChanging(value);
					this.SendPropertyChanging();
					this._PurchaseNo = value;
					this.SendPropertyChanged("PurchaseNo");
					this.OnPurchaseNoChanged();
				}
			}
		}
		
		[Column(Storage="_PurchaseDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PurchaseDate
		{
			get
			{
				return this._PurchaseDate;
			}
			set
			{
				if ((this._PurchaseDate != value))
				{
					this.OnPurchaseDateChanging(value);
					this.SendPropertyChanging();
					this._PurchaseDate = value;
					this.SendPropertyChanged("PurchaseDate");
					this.OnPurchaseDateChanged();
				}
			}
		}
		
		[Association(Name="PurchasePlanHeader_PurchasePlanDetail", Storage="_PurchasePlanDetails", ThisKey="OID", OtherKey="HeaderOID")]
		public EntitySet<PurchasePlanDetail> PurchasePlanDetails
		{
			get
			{
				return this._PurchasePlanDetails;
			}
			set
			{
				this._PurchasePlanDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PurchasePlanDetails(PurchasePlanDetail entity)
		{
			this.SendPropertyChanging();
			entity.PurchasePlanHeader = this;
		}
		
		private void detach_PurchasePlanDetails(PurchasePlanDetail entity)
		{
			this.SendPropertyChanging();
			entity.PurchasePlanHeader = null;
		}
	}
	
	[Table(Name="dbo.PIHeader")]
	public partial class PIHeader : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PINO;
		
		private System.Nullable<System.DateTime> _PIDate;
		
		private string _VendorCode;
		
		private string _BuyerCode;
		
		private string _ProjectNO;
		
		private string _ShipMode;
		
		private string _PortOfLoading;
		
		private string _PortOfDischarge;
		
		private string _VesselFlight;
		
		private System.Nullable<System.DateTime> _SailingDeparture;
		
		private System.Nullable<System.DateTime> _ETA;
		
		private string _Marks;
		
		private string _Reference;
		
		private string _Description;
		
		private string _IncotermTerm;
		
		private string _PaymentTerm;
		
		private string _OriginCountry;
		
		private string _Quality;
		
		private string _Remark;
		
		private string _GoodsDescription;
		
		private string _ShipmentRemark;
		
		private string _PONO;
		
		private string _FinalVendorCode;
		
		private string _PCNO;
		
		private System.Nullable<System.DateTime> _PCDate;
		
		private System.Nullable<int> _Type;
		
		private string _SellerCode;
		
		private EntitySet<PIDetail> _PIDetails;
		
		private EntitySet<PIDetail_OtherItem> _PIDetail_OtherItems;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPINOChanging(string value);
    partial void OnPINOChanged();
    partial void OnPIDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPIDateChanged();
    partial void OnVendorCodeChanging(string value);
    partial void OnVendorCodeChanged();
    partial void OnBuyerCodeChanging(string value);
    partial void OnBuyerCodeChanged();
    partial void OnProjectNOChanging(string value);
    partial void OnProjectNOChanged();
    partial void OnShipModeChanging(string value);
    partial void OnShipModeChanged();
    partial void OnPortOfLoadingChanging(string value);
    partial void OnPortOfLoadingChanged();
    partial void OnPortOfDischargeChanging(string value);
    partial void OnPortOfDischargeChanged();
    partial void OnVesselFlightChanging(string value);
    partial void OnVesselFlightChanged();
    partial void OnSailingDepartureChanging(System.Nullable<System.DateTime> value);
    partial void OnSailingDepartureChanged();
    partial void OnETAChanging(System.Nullable<System.DateTime> value);
    partial void OnETAChanged();
    partial void OnMarksChanging(string value);
    partial void OnMarksChanged();
    partial void OnReferenceChanging(string value);
    partial void OnReferenceChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIncotermTermChanging(string value);
    partial void OnIncotermTermChanged();
    partial void OnPaymentTermChanging(string value);
    partial void OnPaymentTermChanged();
    partial void OnOriginCountryChanging(string value);
    partial void OnOriginCountryChanged();
    partial void OnQualityChanging(string value);
    partial void OnQualityChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnGoodsDescriptionChanging(string value);
    partial void OnGoodsDescriptionChanged();
    partial void OnShipmentRemarkChanging(string value);
    partial void OnShipmentRemarkChanged();
    partial void OnPONOChanging(string value);
    partial void OnPONOChanged();
    partial void OnFinalVendorCodeChanging(string value);
    partial void OnFinalVendorCodeChanged();
    partial void OnPCNOChanging(string value);
    partial void OnPCNOChanged();
    partial void OnPCDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPCDateChanged();
    partial void OnTypeChanging(System.Nullable<int> value);
    partial void OnTypeChanged();
    partial void OnSellerCodeChanging(string value);
    partial void OnSellerCodeChanged();
    #endregion
		
		public PIHeader()
		{
			this._PIDetails = new EntitySet<PIDetail>(new Action<PIDetail>(this.attach_PIDetails), new Action<PIDetail>(this.detach_PIDetails));
			this._PIDetail_OtherItems = new EntitySet<PIDetail_OtherItem>(new Action<PIDetail_OtherItem>(this.attach_PIDetail_OtherItems), new Action<PIDetail_OtherItem>(this.detach_PIDetail_OtherItems));
			OnCreated();
		}
		
		[Column(Storage="_PINO", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PINO
		{
			get
			{
				return this._PINO;
			}
			set
			{
				if ((this._PINO != value))
				{
					this.OnPINOChanging(value);
					this.SendPropertyChanging();
					this._PINO = value;
					this.SendPropertyChanged("PINO");
					this.OnPINOChanged();
				}
			}
		}
		
		[Column(Storage="_PIDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PIDate
		{
			get
			{
				return this._PIDate;
			}
			set
			{
				if ((this._PIDate != value))
				{
					this.OnPIDateChanging(value);
					this.SendPropertyChanging();
					this._PIDate = value;
					this.SendPropertyChanged("PIDate");
					this.OnPIDateChanged();
				}
			}
		}
		
		[Column(Storage="_VendorCode", DbType="VarChar(50)")]
		public string VendorCode
		{
			get
			{
				return this._VendorCode;
			}
			set
			{
				if ((this._VendorCode != value))
				{
					this.OnVendorCodeChanging(value);
					this.SendPropertyChanging();
					this._VendorCode = value;
					this.SendPropertyChanged("VendorCode");
					this.OnVendorCodeChanged();
				}
			}
		}
		
		[Column(Storage="_BuyerCode", DbType="VarChar(50)")]
		public string BuyerCode
		{
			get
			{
				return this._BuyerCode;
			}
			set
			{
				if ((this._BuyerCode != value))
				{
					this.OnBuyerCodeChanging(value);
					this.SendPropertyChanging();
					this._BuyerCode = value;
					this.SendPropertyChanged("BuyerCode");
					this.OnBuyerCodeChanged();
				}
			}
		}
		
		[Column(Storage="_ProjectNO", DbType="VarChar(100)")]
		public string ProjectNO
		{
			get
			{
				return this._ProjectNO;
			}
			set
			{
				if ((this._ProjectNO != value))
				{
					this.OnProjectNOChanging(value);
					this.SendPropertyChanging();
					this._ProjectNO = value;
					this.SendPropertyChanged("ProjectNO");
					this.OnProjectNOChanged();
				}
			}
		}
		
		[Column(Storage="_ShipMode", DbType="VarChar(100)")]
		public string ShipMode
		{
			get
			{
				return this._ShipMode;
			}
			set
			{
				if ((this._ShipMode != value))
				{
					this.OnShipModeChanging(value);
					this.SendPropertyChanging();
					this._ShipMode = value;
					this.SendPropertyChanged("ShipMode");
					this.OnShipModeChanged();
				}
			}
		}
		
		[Column(Storage="_PortOfLoading", DbType="VarChar(200)")]
		public string PortOfLoading
		{
			get
			{
				return this._PortOfLoading;
			}
			set
			{
				if ((this._PortOfLoading != value))
				{
					this.OnPortOfLoadingChanging(value);
					this.SendPropertyChanging();
					this._PortOfLoading = value;
					this.SendPropertyChanged("PortOfLoading");
					this.OnPortOfLoadingChanged();
				}
			}
		}
		
		[Column(Storage="_PortOfDischarge", DbType="VarChar(200)")]
		public string PortOfDischarge
		{
			get
			{
				return this._PortOfDischarge;
			}
			set
			{
				if ((this._PortOfDischarge != value))
				{
					this.OnPortOfDischargeChanging(value);
					this.SendPropertyChanging();
					this._PortOfDischarge = value;
					this.SendPropertyChanged("PortOfDischarge");
					this.OnPortOfDischargeChanged();
				}
			}
		}
		
		[Column(Storage="_VesselFlight", DbType="VarChar(100)")]
		public string VesselFlight
		{
			get
			{
				return this._VesselFlight;
			}
			set
			{
				if ((this._VesselFlight != value))
				{
					this.OnVesselFlightChanging(value);
					this.SendPropertyChanging();
					this._VesselFlight = value;
					this.SendPropertyChanged("VesselFlight");
					this.OnVesselFlightChanged();
				}
			}
		}
		
		[Column(Storage="_SailingDeparture", DbType="DateTime")]
		public System.Nullable<System.DateTime> SailingDeparture
		{
			get
			{
				return this._SailingDeparture;
			}
			set
			{
				if ((this._SailingDeparture != value))
				{
					this.OnSailingDepartureChanging(value);
					this.SendPropertyChanging();
					this._SailingDeparture = value;
					this.SendPropertyChanged("SailingDeparture");
					this.OnSailingDepartureChanged();
				}
			}
		}
		
		[Column(Storage="_ETA", DbType="DateTime")]
		public System.Nullable<System.DateTime> ETA
		{
			get
			{
				return this._ETA;
			}
			set
			{
				if ((this._ETA != value))
				{
					this.OnETAChanging(value);
					this.SendPropertyChanging();
					this._ETA = value;
					this.SendPropertyChanged("ETA");
					this.OnETAChanged();
				}
			}
		}
		
		[Column(Storage="_Marks", DbType="NVarChar(300)")]
		public string Marks
		{
			get
			{
				return this._Marks;
			}
			set
			{
				if ((this._Marks != value))
				{
					this.OnMarksChanging(value);
					this.SendPropertyChanging();
					this._Marks = value;
					this.SendPropertyChanged("Marks");
					this.OnMarksChanged();
				}
			}
		}
		
		[Column(Storage="_Reference", DbType="NVarChar(300)")]
		public string Reference
		{
			get
			{
				return this._Reference;
			}
			set
			{
				if ((this._Reference != value))
				{
					this.OnReferenceChanging(value);
					this.SendPropertyChanging();
					this._Reference = value;
					this.SendPropertyChanged("Reference");
					this.OnReferenceChanged();
				}
			}
		}
		
		[Column(Storage="_Description", DbType="VarChar(600)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_IncotermTerm", DbType="NVarChar(300)")]
		public string IncotermTerm
		{
			get
			{
				return this._IncotermTerm;
			}
			set
			{
				if ((this._IncotermTerm != value))
				{
					this.OnIncotermTermChanging(value);
					this.SendPropertyChanging();
					this._IncotermTerm = value;
					this.SendPropertyChanged("IncotermTerm");
					this.OnIncotermTermChanged();
				}
			}
		}
		
		[Column(Storage="_PaymentTerm", DbType="NVarChar(300)")]
		public string PaymentTerm
		{
			get
			{
				return this._PaymentTerm;
			}
			set
			{
				if ((this._PaymentTerm != value))
				{
					this.OnPaymentTermChanging(value);
					this.SendPropertyChanging();
					this._PaymentTerm = value;
					this.SendPropertyChanged("PaymentTerm");
					this.OnPaymentTermChanged();
				}
			}
		}
		
		[Column(Storage="_OriginCountry", DbType="NVarChar(100)")]
		public string OriginCountry
		{
			get
			{
				return this._OriginCountry;
			}
			set
			{
				if ((this._OriginCountry != value))
				{
					this.OnOriginCountryChanging(value);
					this.SendPropertyChanging();
					this._OriginCountry = value;
					this.SendPropertyChanged("OriginCountry");
					this.OnOriginCountryChanged();
				}
			}
		}
		
		[Column(Storage="_Quality", DbType="NVarChar(300)")]
		public string Quality
		{
			get
			{
				return this._Quality;
			}
			set
			{
				if ((this._Quality != value))
				{
					this.OnQualityChanging(value);
					this.SendPropertyChanging();
					this._Quality = value;
					this.SendPropertyChanged("Quality");
					this.OnQualityChanged();
				}
			}
		}
		
		[Column(Storage="_Remark", DbType="NVarChar(600)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[Column(Storage="_GoodsDescription", DbType="NVarChar(600)")]
		public string GoodsDescription
		{
			get
			{
				return this._GoodsDescription;
			}
			set
			{
				if ((this._GoodsDescription != value))
				{
					this.OnGoodsDescriptionChanging(value);
					this.SendPropertyChanging();
					this._GoodsDescription = value;
					this.SendPropertyChanged("GoodsDescription");
					this.OnGoodsDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_ShipmentRemark", DbType="NVarChar(600)")]
		public string ShipmentRemark
		{
			get
			{
				return this._ShipmentRemark;
			}
			set
			{
				if ((this._ShipmentRemark != value))
				{
					this.OnShipmentRemarkChanging(value);
					this.SendPropertyChanging();
					this._ShipmentRemark = value;
					this.SendPropertyChanged("ShipmentRemark");
					this.OnShipmentRemarkChanged();
				}
			}
		}
		
		[Column(Storage="_PONO", DbType="VarChar(50)")]
		public string PONO
		{
			get
			{
				return this._PONO;
			}
			set
			{
				if ((this._PONO != value))
				{
					this.OnPONOChanging(value);
					this.SendPropertyChanging();
					this._PONO = value;
					this.SendPropertyChanged("PONO");
					this.OnPONOChanged();
				}
			}
		}
		
		[Column(Storage="_FinalVendorCode", DbType="VarChar(50)")]
		public string FinalVendorCode
		{
			get
			{
				return this._FinalVendorCode;
			}
			set
			{
				if ((this._FinalVendorCode != value))
				{
					this.OnFinalVendorCodeChanging(value);
					this.SendPropertyChanging();
					this._FinalVendorCode = value;
					this.SendPropertyChanged("FinalVendorCode");
					this.OnFinalVendorCodeChanged();
				}
			}
		}
		
		[Column(Storage="_PCNO", DbType="VarChar(100)")]
		public string PCNO
		{
			get
			{
				return this._PCNO;
			}
			set
			{
				if ((this._PCNO != value))
				{
					this.OnPCNOChanging(value);
					this.SendPropertyChanging();
					this._PCNO = value;
					this.SendPropertyChanged("PCNO");
					this.OnPCNOChanged();
				}
			}
		}
		
		[Column(Storage="_PCDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PCDate
		{
			get
			{
				return this._PCDate;
			}
			set
			{
				if ((this._PCDate != value))
				{
					this.OnPCDateChanging(value);
					this.SendPropertyChanging();
					this._PCDate = value;
					this.SendPropertyChanged("PCDate");
					this.OnPCDateChanged();
				}
			}
		}
		
		[Column(Storage="_Type", DbType="Int")]
		public System.Nullable<int> Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[Column(Storage="_SellerCode", DbType="VarChar(50)")]
		public string SellerCode
		{
			get
			{
				return this._SellerCode;
			}
			set
			{
				if ((this._SellerCode != value))
				{
					this.OnSellerCodeChanging(value);
					this.SendPropertyChanging();
					this._SellerCode = value;
					this.SendPropertyChanged("SellerCode");
					this.OnSellerCodeChanged();
				}
			}
		}
		
		[Association(Name="PIHeader_PIDetail", Storage="_PIDetails", ThisKey="PINO", OtherKey="PINO")]
		public EntitySet<PIDetail> PIDetails
		{
			get
			{
				return this._PIDetails;
			}
			set
			{
				this._PIDetails.Assign(value);
			}
		}
		
		[Association(Name="PIHeader_PIDetail_OtherItem", Storage="_PIDetail_OtherItems", ThisKey="PINO", OtherKey="PINO")]
		public EntitySet<PIDetail_OtherItem> PIDetail_OtherItems
		{
			get
			{
				return this._PIDetail_OtherItems;
			}
			set
			{
				this._PIDetail_OtherItems.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PIDetails(PIDetail entity)
		{
			this.SendPropertyChanging();
			entity.PIHeader = this;
		}
		
		private void detach_PIDetails(PIDetail entity)
		{
			this.SendPropertyChanging();
			entity.PIHeader = null;
		}
		
		private void attach_PIDetail_OtherItems(PIDetail_OtherItem entity)
		{
			this.SendPropertyChanging();
			entity.PIHeader = this;
		}
		
		private void detach_PIDetail_OtherItems(PIDetail_OtherItem entity)
		{
			this.SendPropertyChanging();
			entity.PIHeader = null;
		}
	}
	
	[Table(Name="dbo.OSChart")]
	public partial class OSChart : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Uploader;
		
		private System.Nullable<System.DateTime> _UploadTime;
		
		private System.Data.Linq.Binary _OSImg;
		
		private string _FileName;
		
		private string _Remark;
		
		private string _Flag;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUploaderChanging(string value);
    partial void OnUploaderChanged();
    partial void OnUploadTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnUploadTimeChanged();
    partial void OnOSImgChanging(System.Data.Linq.Binary value);
    partial void OnOSImgChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnFlagChanging(string value);
    partial void OnFlagChanged();
    #endregion
		
		public OSChart()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_Uploader", DbType="NVarChar(60)")]
		public string Uploader
		{
			get
			{
				return this._Uploader;
			}
			set
			{
				if ((this._Uploader != value))
				{
					this.OnUploaderChanging(value);
					this.SendPropertyChanging();
					this._Uploader = value;
					this.SendPropertyChanged("Uploader");
					this.OnUploaderChanged();
				}
			}
		}
		
		[Column(Storage="_UploadTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> UploadTime
		{
			get
			{
				return this._UploadTime;
			}
			set
			{
				if ((this._UploadTime != value))
				{
					this.OnUploadTimeChanging(value);
					this.SendPropertyChanging();
					this._UploadTime = value;
					this.SendPropertyChanged("UploadTime");
					this.OnUploadTimeChanged();
				}
			}
		}
		
		[Column(Storage="_OSImg", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary OSImg
		{
			get
			{
				return this._OSImg;
			}
			set
			{
				if ((this._OSImg != value))
				{
					this.OnOSImgChanging(value);
					this.SendPropertyChanging();
					this._OSImg = value;
					this.SendPropertyChanged("OSImg");
					this.OnOSImgChanged();
				}
			}
		}
		
		[Column(Storage="_FileName", DbType="NVarChar(100)")]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[Column(Storage="_Remark", DbType="NVarChar(1000)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[Column(Storage="_Flag", DbType="VarChar(10)")]
		public string Flag
		{
			get
			{
				return this._Flag;
			}
			set
			{
				if ((this._Flag != value))
				{
					this.OnFlagChanging(value);
					this.SendPropertyChanging();
					this._Flag = value;
					this.SendPropertyChanged("Flag");
					this.OnFlagChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.PurchasePlanDetail")]
	public partial class PurchasePlanDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _OID;
		
		private System.Nullable<long> _HeaderOID;
		
		private string _VendorCode;
		
		private string _HWTypeCode;
		
		private string _Model;
		
		private string _Department;
		
		private System.Nullable<int> _TotalQty;
		
		private System.Nullable<int> _ShipmentCount;
		
		private System.Nullable<System.DateTime> _IssueDate;
		
		private string _QuatationNO;
		
		private string _Currency;
		
		private System.Nullable<double> _UnitPrice;
		
		private System.Nullable<System.DateTime> _EffectiveDate;
		
		private System.Nullable<int> _Qty1;
		
		private System.Nullable<System.DateTime> _ProjectStockInDate1;
		
		private System.Nullable<bool> _IsPOConfirm1;
		
		private System.Nullable<int> _Qty2;
		
		private System.Nullable<System.DateTime> _ProjectStockInDate2;
		
		private System.Nullable<bool> _IsPOConfirm2;
		
		private System.Nullable<int> _Qty3;
		
		private System.Nullable<System.DateTime> _ProjectStockInDate3;
		
		private System.Nullable<bool> _IsPOConfirm3;
		
		private System.Nullable<int> _Qty4;
		
		private System.Nullable<System.DateTime> _ProjectStockInDate4;
		
		private System.Nullable<bool> _IsPOConfirm4;
		
		private string _SellerCode;
		
		private EntityRef<PurchasePlanHeader> _PurchasePlanHeader;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOIDChanging(long value);
    partial void OnOIDChanged();
    partial void OnHeaderOIDChanging(System.Nullable<long> value);
    partial void OnHeaderOIDChanged();
    partial void OnVendorCodeChanging(string value);
    partial void OnVendorCodeChanged();
    partial void OnHWTypeCodeChanging(string value);
    partial void OnHWTypeCodeChanged();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnDepartmentChanging(string value);
    partial void OnDepartmentChanged();
    partial void OnTotalQtyChanging(System.Nullable<int> value);
    partial void OnTotalQtyChanged();
    partial void OnShipmentCountChanging(System.Nullable<int> value);
    partial void OnShipmentCountChanged();
    partial void OnIssueDateChanging(System.Nullable<System.DateTime> value);
    partial void OnIssueDateChanged();
    partial void OnQuatationNOChanging(string value);
    partial void OnQuatationNOChanged();
    partial void OnCurrencyChanging(string value);
    partial void OnCurrencyChanged();
    partial void OnUnitPriceChanging(System.Nullable<double> value);
    partial void OnUnitPriceChanged();
    partial void OnEffectiveDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEffectiveDateChanged();
    partial void OnQty1Changing(System.Nullable<int> value);
    partial void OnQty1Changed();
    partial void OnProjectStockInDate1Changing(System.Nullable<System.DateTime> value);
    partial void OnProjectStockInDate1Changed();
    partial void OnIsPOConfirm1Changing(System.Nullable<bool> value);
    partial void OnIsPOConfirm1Changed();
    partial void OnQty2Changing(System.Nullable<int> value);
    partial void OnQty2Changed();
    partial void OnProjectStockInDate2Changing(System.Nullable<System.DateTime> value);
    partial void OnProjectStockInDate2Changed();
    partial void OnIsPOConfirm2Changing(System.Nullable<bool> value);
    partial void OnIsPOConfirm2Changed();
    partial void OnQty3Changing(System.Nullable<int> value);
    partial void OnQty3Changed();
    partial void OnProjectStockInDate3Changing(System.Nullable<System.DateTime> value);
    partial void OnProjectStockInDate3Changed();
    partial void OnIsPOConfirm3Changing(System.Nullable<bool> value);
    partial void OnIsPOConfirm3Changed();
    partial void OnQty4Changing(System.Nullable<int> value);
    partial void OnQty4Changed();
    partial void OnProjectStockInDate4Changing(System.Nullable<System.DateTime> value);
    partial void OnProjectStockInDate4Changed();
    partial void OnIsPOConfirm4Changing(System.Nullable<bool> value);
    partial void OnIsPOConfirm4Changed();
    partial void OnSellerCodeChanging(string value);
    partial void OnSellerCodeChanged();
    #endregion
		
		public PurchasePlanDetail()
		{
			this._PurchasePlanHeader = default(EntityRef<PurchasePlanHeader>);
			OnCreated();
		}
		
		[Column(Storage="_OID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long OID
		{
			get
			{
				return this._OID;
			}
			set
			{
				if ((this._OID != value))
				{
					this.OnOIDChanging(value);
					this.SendPropertyChanging();
					this._OID = value;
					this.SendPropertyChanged("OID");
					this.OnOIDChanged();
				}
			}
		}
		
		[Column(Storage="_HeaderOID", DbType="BigInt")]
		public System.Nullable<long> HeaderOID
		{
			get
			{
				return this._HeaderOID;
			}
			set
			{
				if ((this._HeaderOID != value))
				{
					if (this._PurchasePlanHeader.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHeaderOIDChanging(value);
					this.SendPropertyChanging();
					this._HeaderOID = value;
					this.SendPropertyChanged("HeaderOID");
					this.OnHeaderOIDChanged();
				}
			}
		}
		
		[Column(Storage="_VendorCode", DbType="NVarChar(60) NOT NULL", CanBeNull=false)]
		public string VendorCode
		{
			get
			{
				return this._VendorCode;
			}
			set
			{
				if ((this._VendorCode != value))
				{
					this.OnVendorCodeChanging(value);
					this.SendPropertyChanging();
					this._VendorCode = value;
					this.SendPropertyChanged("VendorCode");
					this.OnVendorCodeChanged();
				}
			}
		}
		
		[Column(Storage="_HWTypeCode", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string HWTypeCode
		{
			get
			{
				return this._HWTypeCode;
			}
			set
			{
				if ((this._HWTypeCode != value))
				{
					this.OnHWTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._HWTypeCode = value;
					this.SendPropertyChanged("HWTypeCode");
					this.OnHWTypeCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Model", DbType="NVarChar(600)")]
		public string Model
		{
			get
			{
				return this._Model;
			}
			set
			{
				if ((this._Model != value))
				{
					this.OnModelChanging(value);
					this.SendPropertyChanging();
					this._Model = value;
					this.SendPropertyChanged("Model");
					this.OnModelChanged();
				}
			}
		}
		
		[Column(Storage="_Department", DbType="NVarChar(200)")]
		public string Department
		{
			get
			{
				return this._Department;
			}
			set
			{
				if ((this._Department != value))
				{
					this.OnDepartmentChanging(value);
					this.SendPropertyChanging();
					this._Department = value;
					this.SendPropertyChanged("Department");
					this.OnDepartmentChanged();
				}
			}
		}
		
		[Column(Storage="_TotalQty", DbType="Int")]
		public System.Nullable<int> TotalQty
		{
			get
			{
				return this._TotalQty;
			}
			set
			{
				if ((this._TotalQty != value))
				{
					this.OnTotalQtyChanging(value);
					this.SendPropertyChanging();
					this._TotalQty = value;
					this.SendPropertyChanged("TotalQty");
					this.OnTotalQtyChanged();
				}
			}
		}
		
		[Column(Storage="_ShipmentCount", DbType="Int")]
		public System.Nullable<int> ShipmentCount
		{
			get
			{
				return this._ShipmentCount;
			}
			set
			{
				if ((this._ShipmentCount != value))
				{
					this.OnShipmentCountChanging(value);
					this.SendPropertyChanging();
					this._ShipmentCount = value;
					this.SendPropertyChanged("ShipmentCount");
					this.OnShipmentCountChanged();
				}
			}
		}
		
		[Column(Storage="_IssueDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> IssueDate
		{
			get
			{
				return this._IssueDate;
			}
			set
			{
				if ((this._IssueDate != value))
				{
					this.OnIssueDateChanging(value);
					this.SendPropertyChanging();
					this._IssueDate = value;
					this.SendPropertyChanged("IssueDate");
					this.OnIssueDateChanged();
				}
			}
		}
		
		[Column(Storage="_QuatationNO", DbType="VarChar(60)")]
		public string QuatationNO
		{
			get
			{
				return this._QuatationNO;
			}
			set
			{
				if ((this._QuatationNO != value))
				{
					this.OnQuatationNOChanging(value);
					this.SendPropertyChanging();
					this._QuatationNO = value;
					this.SendPropertyChanged("QuatationNO");
					this.OnQuatationNOChanged();
				}
			}
		}
		
		[Column(Storage="_Currency", DbType="VarChar(20)")]
		public string Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[Column(Storage="_UnitPrice", DbType="Float")]
		public System.Nullable<double> UnitPrice
		{
			get
			{
				return this._UnitPrice;
			}
			set
			{
				if ((this._UnitPrice != value))
				{
					this.OnUnitPriceChanging(value);
					this.SendPropertyChanging();
					this._UnitPrice = value;
					this.SendPropertyChanged("UnitPrice");
					this.OnUnitPriceChanged();
				}
			}
		}
		
		[Column(Storage="_EffectiveDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EffectiveDate
		{
			get
			{
				return this._EffectiveDate;
			}
			set
			{
				if ((this._EffectiveDate != value))
				{
					this.OnEffectiveDateChanging(value);
					this.SendPropertyChanging();
					this._EffectiveDate = value;
					this.SendPropertyChanged("EffectiveDate");
					this.OnEffectiveDateChanged();
				}
			}
		}
		
		[Column(Storage="_Qty1", DbType="Int")]
		public System.Nullable<int> Qty1
		{
			get
			{
				return this._Qty1;
			}
			set
			{
				if ((this._Qty1 != value))
				{
					this.OnQty1Changing(value);
					this.SendPropertyChanging();
					this._Qty1 = value;
					this.SendPropertyChanged("Qty1");
					this.OnQty1Changed();
				}
			}
		}
		
		[Column(Storage="_ProjectStockInDate1", DbType="DateTime")]
		public System.Nullable<System.DateTime> ProjectStockInDate1
		{
			get
			{
				return this._ProjectStockInDate1;
			}
			set
			{
				if ((this._ProjectStockInDate1 != value))
				{
					this.OnProjectStockInDate1Changing(value);
					this.SendPropertyChanging();
					this._ProjectStockInDate1 = value;
					this.SendPropertyChanged("ProjectStockInDate1");
					this.OnProjectStockInDate1Changed();
				}
			}
		}
		
		[Column(Storage="_IsPOConfirm1", DbType="Bit")]
		public System.Nullable<bool> IsPOConfirm1
		{
			get
			{
				return this._IsPOConfirm1;
			}
			set
			{
				if ((this._IsPOConfirm1 != value))
				{
					this.OnIsPOConfirm1Changing(value);
					this.SendPropertyChanging();
					this._IsPOConfirm1 = value;
					this.SendPropertyChanged("IsPOConfirm1");
					this.OnIsPOConfirm1Changed();
				}
			}
		}
		
		[Column(Storage="_Qty2", DbType="Int")]
		public System.Nullable<int> Qty2
		{
			get
			{
				return this._Qty2;
			}
			set
			{
				if ((this._Qty2 != value))
				{
					this.OnQty2Changing(value);
					this.SendPropertyChanging();
					this._Qty2 = value;
					this.SendPropertyChanged("Qty2");
					this.OnQty2Changed();
				}
			}
		}
		
		[Column(Storage="_ProjectStockInDate2", DbType="DateTime")]
		public System.Nullable<System.DateTime> ProjectStockInDate2
		{
			get
			{
				return this._ProjectStockInDate2;
			}
			set
			{
				if ((this._ProjectStockInDate2 != value))
				{
					this.OnProjectStockInDate2Changing(value);
					this.SendPropertyChanging();
					this._ProjectStockInDate2 = value;
					this.SendPropertyChanged("ProjectStockInDate2");
					this.OnProjectStockInDate2Changed();
				}
			}
		}
		
		[Column(Storage="_IsPOConfirm2", DbType="Bit")]
		public System.Nullable<bool> IsPOConfirm2
		{
			get
			{
				return this._IsPOConfirm2;
			}
			set
			{
				if ((this._IsPOConfirm2 != value))
				{
					this.OnIsPOConfirm2Changing(value);
					this.SendPropertyChanging();
					this._IsPOConfirm2 = value;
					this.SendPropertyChanged("IsPOConfirm2");
					this.OnIsPOConfirm2Changed();
				}
			}
		}
		
		[Column(Storage="_Qty3", DbType="Int")]
		public System.Nullable<int> Qty3
		{
			get
			{
				return this._Qty3;
			}
			set
			{
				if ((this._Qty3 != value))
				{
					this.OnQty3Changing(value);
					this.SendPropertyChanging();
					this._Qty3 = value;
					this.SendPropertyChanged("Qty3");
					this.OnQty3Changed();
				}
			}
		}
		
		[Column(Storage="_ProjectStockInDate3", DbType="DateTime")]
		public System.Nullable<System.DateTime> ProjectStockInDate3
		{
			get
			{
				return this._ProjectStockInDate3;
			}
			set
			{
				if ((this._ProjectStockInDate3 != value))
				{
					this.OnProjectStockInDate3Changing(value);
					this.SendPropertyChanging();
					this._ProjectStockInDate3 = value;
					this.SendPropertyChanged("ProjectStockInDate3");
					this.OnProjectStockInDate3Changed();
				}
			}
		}
		
		[Column(Storage="_IsPOConfirm3", DbType="Bit")]
		public System.Nullable<bool> IsPOConfirm3
		{
			get
			{
				return this._IsPOConfirm3;
			}
			set
			{
				if ((this._IsPOConfirm3 != value))
				{
					this.OnIsPOConfirm3Changing(value);
					this.SendPropertyChanging();
					this._IsPOConfirm3 = value;
					this.SendPropertyChanged("IsPOConfirm3");
					this.OnIsPOConfirm3Changed();
				}
			}
		}
		
		[Column(Storage="_Qty4", DbType="Int")]
		public System.Nullable<int> Qty4
		{
			get
			{
				return this._Qty4;
			}
			set
			{
				if ((this._Qty4 != value))
				{
					this.OnQty4Changing(value);
					this.SendPropertyChanging();
					this._Qty4 = value;
					this.SendPropertyChanged("Qty4");
					this.OnQty4Changed();
				}
			}
		}
		
		[Column(Storage="_ProjectStockInDate4", DbType="DateTime")]
		public System.Nullable<System.DateTime> ProjectStockInDate4
		{
			get
			{
				return this._ProjectStockInDate4;
			}
			set
			{
				if ((this._ProjectStockInDate4 != value))
				{
					this.OnProjectStockInDate4Changing(value);
					this.SendPropertyChanging();
					this._ProjectStockInDate4 = value;
					this.SendPropertyChanged("ProjectStockInDate4");
					this.OnProjectStockInDate4Changed();
				}
			}
		}
		
		[Column(Storage="_IsPOConfirm4", DbType="Bit")]
		public System.Nullable<bool> IsPOConfirm4
		{
			get
			{
				return this._IsPOConfirm4;
			}
			set
			{
				if ((this._IsPOConfirm4 != value))
				{
					this.OnIsPOConfirm4Changing(value);
					this.SendPropertyChanging();
					this._IsPOConfirm4 = value;
					this.SendPropertyChanged("IsPOConfirm4");
					this.OnIsPOConfirm4Changed();
				}
			}
		}
		
		[Column(Storage="_SellerCode", DbType="VarChar(50)")]
		public string SellerCode
		{
			get
			{
				return this._SellerCode;
			}
			set
			{
				if ((this._SellerCode != value))
				{
					this.OnSellerCodeChanging(value);
					this.SendPropertyChanging();
					this._SellerCode = value;
					this.SendPropertyChanged("SellerCode");
					this.OnSellerCodeChanged();
				}
			}
		}
		
		[Association(Name="PurchasePlanHeader_PurchasePlanDetail", Storage="_PurchasePlanHeader", ThisKey="HeaderOID", OtherKey="OID", IsForeignKey=true, DeleteRule="CASCADE")]
		public PurchasePlanHeader PurchasePlanHeader
		{
			get
			{
				return this._PurchasePlanHeader.Entity;
			}
			set
			{
				PurchasePlanHeader previousValue = this._PurchasePlanHeader.Entity;
				if (((previousValue != value) 
							|| (this._PurchasePlanHeader.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PurchasePlanHeader.Entity = null;
						previousValue.PurchasePlanDetails.Remove(this);
					}
					this._PurchasePlanHeader.Entity = value;
					if ((value != null))
					{
						value.PurchasePlanDetails.Add(this);
						this._HeaderOID = value.OID;
					}
					else
					{
						this._HeaderOID = default(Nullable<long>);
					}
					this.SendPropertyChanged("PurchasePlanHeader");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.LCShipmentDate")]
	public partial class LCShipmentDate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Oid;
		
		private string _VendorCode;
		
		private string _ProjectionDate;
		
		private string _ShipmentDate;
		
		private string _MCType;
		
		private System.Nullable<decimal> _Price;
		
		private System.Nullable<int> _Qty;
		
		private string _Remark;
		
		private string _Currency;
		
		private string _PONO;
		
		private System.Nullable<int> _POType;
		
		private System.Nullable<System.DateTime> _ActualStockInDate;
		
		private System.Nullable<System.DateTime> _ProjectStockInDate;
		
		private System.Nullable<System.DateTime> _ETD;
		
		private System.Nullable<System.DateTime> _POIssueDate;
		
		private string _HWCategoryCode;
		
		private string _HWGroupCode;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOidChanging(long value);
    partial void OnOidChanged();
    partial void OnVendorCodeChanging(string value);
    partial void OnVendorCodeChanged();
    partial void OnProjectionDateChanging(string value);
    partial void OnProjectionDateChanged();
    partial void OnShipmentDateChanging(string value);
    partial void OnShipmentDateChanged();
    partial void OnMCTypeChanging(string value);
    partial void OnMCTypeChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    partial void OnQtyChanging(System.Nullable<int> value);
    partial void OnQtyChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnCurrencyChanging(string value);
    partial void OnCurrencyChanged();
    partial void OnPONOChanging(string value);
    partial void OnPONOChanged();
    partial void OnPOTypeChanging(System.Nullable<int> value);
    partial void OnPOTypeChanged();
    partial void OnActualStockInDateChanging(System.Nullable<System.DateTime> value);
    partial void OnActualStockInDateChanged();
    partial void OnProjectStockInDateChanging(System.Nullable<System.DateTime> value);
    partial void OnProjectStockInDateChanged();
    partial void OnETDChanging(System.Nullable<System.DateTime> value);
    partial void OnETDChanged();
    partial void OnPOIssueDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPOIssueDateChanged();
    partial void OnHWCategoryCodeChanging(string value);
    partial void OnHWCategoryCodeChanged();
    partial void OnHWGroupCodeChanging(string value);
    partial void OnHWGroupCodeChanged();
    #endregion
		
		public LCShipmentDate()
		{
			OnCreated();
		}
		
		[Column(Storage="_Oid", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Oid
		{
			get
			{
				return this._Oid;
			}
			set
			{
				if ((this._Oid != value))
				{
					this.OnOidChanging(value);
					this.SendPropertyChanging();
					this._Oid = value;
					this.SendPropertyChanged("Oid");
					this.OnOidChanged();
				}
			}
		}
		
		[Column(Storage="_VendorCode", DbType="NVarChar(60)")]
		public string VendorCode
		{
			get
			{
				return this._VendorCode;
			}
			set
			{
				if ((this._VendorCode != value))
				{
					this.OnVendorCodeChanging(value);
					this.SendPropertyChanging();
					this._VendorCode = value;
					this.SendPropertyChanged("VendorCode");
					this.OnVendorCodeChanged();
				}
			}
		}
		
		[Column(Storage="_ProjectionDate", DbType="VarChar(20)")]
		public string ProjectionDate
		{
			get
			{
				return this._ProjectionDate;
			}
			set
			{
				if ((this._ProjectionDate != value))
				{
					this.OnProjectionDateChanging(value);
					this.SendPropertyChanging();
					this._ProjectionDate = value;
					this.SendPropertyChanged("ProjectionDate");
					this.OnProjectionDateChanged();
				}
			}
		}
		
		[Column(Storage="_ShipmentDate", DbType="VarChar(20)")]
		public string ShipmentDate
		{
			get
			{
				return this._ShipmentDate;
			}
			set
			{
				if ((this._ShipmentDate != value))
				{
					this.OnShipmentDateChanging(value);
					this.SendPropertyChanging();
					this._ShipmentDate = value;
					this.SendPropertyChanged("ShipmentDate");
					this.OnShipmentDateChanged();
				}
			}
		}
		
		[Column(Storage="_MCType", DbType="NVarChar(200)")]
		public string MCType
		{
			get
			{
				return this._MCType;
			}
			set
			{
				if ((this._MCType != value))
				{
					this.OnMCTypeChanging(value);
					this.SendPropertyChanging();
					this._MCType = value;
					this.SendPropertyChanged("MCType");
					this.OnMCTypeChanged();
				}
			}
		}
		
		[Column(Storage="_Price", DbType="Decimal(10,3)")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[Column(Storage="_Qty", DbType="Int")]
		public System.Nullable<int> Qty
		{
			get
			{
				return this._Qty;
			}
			set
			{
				if ((this._Qty != value))
				{
					this.OnQtyChanging(value);
					this.SendPropertyChanging();
					this._Qty = value;
					this.SendPropertyChanged("Qty");
					this.OnQtyChanged();
				}
			}
		}
		
		[Column(Storage="_Remark", DbType="NVarChar(1000)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[Column(Storage="_Currency", DbType="NVarChar(20)")]
		public string Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[Column(Storage="_PONO", DbType="VarChar(50)")]
		public string PONO
		{
			get
			{
				return this._PONO;
			}
			set
			{
				if ((this._PONO != value))
				{
					this.OnPONOChanging(value);
					this.SendPropertyChanging();
					this._PONO = value;
					this.SendPropertyChanged("PONO");
					this.OnPONOChanged();
				}
			}
		}
		
		[Column(Storage="_POType", DbType="Int")]
		public System.Nullable<int> POType
		{
			get
			{
				return this._POType;
			}
			set
			{
				if ((this._POType != value))
				{
					this.OnPOTypeChanging(value);
					this.SendPropertyChanging();
					this._POType = value;
					this.SendPropertyChanged("POType");
					this.OnPOTypeChanged();
				}
			}
		}
		
		[Column(Storage="_ActualStockInDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ActualStockInDate
		{
			get
			{
				return this._ActualStockInDate;
			}
			set
			{
				if ((this._ActualStockInDate != value))
				{
					this.OnActualStockInDateChanging(value);
					this.SendPropertyChanging();
					this._ActualStockInDate = value;
					this.SendPropertyChanged("ActualStockInDate");
					this.OnActualStockInDateChanged();
				}
			}
		}
		
		[Column(Storage="_ProjectStockInDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ProjectStockInDate
		{
			get
			{
				return this._ProjectStockInDate;
			}
			set
			{
				if ((this._ProjectStockInDate != value))
				{
					this.OnProjectStockInDateChanging(value);
					this.SendPropertyChanging();
					this._ProjectStockInDate = value;
					this.SendPropertyChanged("ProjectStockInDate");
					this.OnProjectStockInDateChanged();
				}
			}
		}
		
		[Column(Storage="_ETD", DbType="DateTime")]
		public System.Nullable<System.DateTime> ETD
		{
			get
			{
				return this._ETD;
			}
			set
			{
				if ((this._ETD != value))
				{
					this.OnETDChanging(value);
					this.SendPropertyChanging();
					this._ETD = value;
					this.SendPropertyChanged("ETD");
					this.OnETDChanged();
				}
			}
		}
		
		[Column(Storage="_POIssueDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> POIssueDate
		{
			get
			{
				return this._POIssueDate;
			}
			set
			{
				if ((this._POIssueDate != value))
				{
					this.OnPOIssueDateChanging(value);
					this.SendPropertyChanging();
					this._POIssueDate = value;
					this.SendPropertyChanged("POIssueDate");
					this.OnPOIssueDateChanged();
				}
			}
		}
		
		[Column(Storage="_HWCategoryCode", DbType="NVarChar(100)")]
		public string HWCategoryCode
		{
			get
			{
				return this._HWCategoryCode;
			}
			set
			{
				if ((this._HWCategoryCode != value))
				{
					this.OnHWCategoryCodeChanging(value);
					this.SendPropertyChanging();
					this._HWCategoryCode = value;
					this.SendPropertyChanged("HWCategoryCode");
					this.OnHWCategoryCodeChanged();
				}
			}
		}
		
		[Column(Storage="_HWGroupCode", DbType="NVarChar(100)")]
		public string HWGroupCode
		{
			get
			{
				return this._HWGroupCode;
			}
			set
			{
				if ((this._HWGroupCode != value))
				{
					this.OnHWGroupCodeChanging(value);
					this.SendPropertyChanging();
					this._HWGroupCode = value;
					this.SendPropertyChanged("HWGroupCode");
					this.OnHWGroupCodeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Committee")]
	public partial class Committee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _OID;
		
		private string _SeqNo;
		
		private string _Name;
		
		private string _Region;
		
		private EntitySet<CommitteeMember> _CommitteeMembers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOIDChanging(long value);
    partial void OnOIDChanged();
    partial void OnSeqNoChanging(string value);
    partial void OnSeqNoChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnRegionChanging(string value);
    partial void OnRegionChanged();
    #endregion
		
		public Committee()
		{
			this._CommitteeMembers = new EntitySet<CommitteeMember>(new Action<CommitteeMember>(this.attach_CommitteeMembers), new Action<CommitteeMember>(this.detach_CommitteeMembers));
			OnCreated();
		}
		
		[Column(Storage="_OID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long OID
		{
			get
			{
				return this._OID;
			}
			set
			{
				if ((this._OID != value))
				{
					this.OnOIDChanging(value);
					this.SendPropertyChanging();
					this._OID = value;
					this.SendPropertyChanged("OID");
					this.OnOIDChanged();
				}
			}
		}
		
		[Column(Storage="_SeqNo", DbType="VarChar(30)")]
		public string SeqNo
		{
			get
			{
				return this._SeqNo;
			}
			set
			{
				if ((this._SeqNo != value))
				{
					this.OnSeqNoChanging(value);
					this.SendPropertyChanging();
					this._SeqNo = value;
					this.SendPropertyChanged("SeqNo");
					this.OnSeqNoChanged();
				}
			}
		}
		
		[Column(Storage="_Name", DbType="NVarChar(300)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[Column(Storage="_Region", DbType="VarChar(20)")]
		public string Region
		{
			get
			{
				return this._Region;
			}
			set
			{
				if ((this._Region != value))
				{
					this.OnRegionChanging(value);
					this.SendPropertyChanging();
					this._Region = value;
					this.SendPropertyChanged("Region");
					this.OnRegionChanged();
				}
			}
		}
		
		[Association(Name="Committee_CommitteeMember", Storage="_CommitteeMembers", ThisKey="OID", OtherKey="CommitteeOID")]
		public EntitySet<CommitteeMember> CommitteeMembers
		{
			get
			{
				return this._CommitteeMembers;
			}
			set
			{
				this._CommitteeMembers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CommitteeMembers(CommitteeMember entity)
		{
			this.SendPropertyChanging();
			entity.Committee = this;
		}
		
		private void detach_CommitteeMembers(CommitteeMember entity)
		{
			this.SendPropertyChanging();
			entity.Committee = null;
		}
	}
	
	[Table(Name="dbo.CommitteeMember")]
	public partial class CommitteeMember : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _OID;
		
		private System.Nullable<long> _CommitteeOID;
		
		private string _SeqNo;
		
		private string _EmployeeID;
		
		private string _CommitteeTitle;
		
		private EntityRef<Committee> _Committee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOIDChanging(long value);
    partial void OnOIDChanged();
    partial void OnCommitteeOIDChanging(System.Nullable<long> value);
    partial void OnCommitteeOIDChanged();
    partial void OnSeqNoChanging(string value);
    partial void OnSeqNoChanged();
    partial void OnEmployeeIDChanging(string value);
    partial void OnEmployeeIDChanged();
    partial void OnCommitteeTitleChanging(string value);
    partial void OnCommitteeTitleChanged();
    #endregion
		
		public CommitteeMember()
		{
			this._Committee = default(EntityRef<Committee>);
			OnCreated();
		}
		
		[Column(Storage="_OID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long OID
		{
			get
			{
				return this._OID;
			}
			set
			{
				if ((this._OID != value))
				{
					this.OnOIDChanging(value);
					this.SendPropertyChanging();
					this._OID = value;
					this.SendPropertyChanged("OID");
					this.OnOIDChanged();
				}
			}
		}
		
		[Column(Storage="_CommitteeOID", DbType="BigInt")]
		public System.Nullable<long> CommitteeOID
		{
			get
			{
				return this._CommitteeOID;
			}
			set
			{
				if ((this._CommitteeOID != value))
				{
					if (this._Committee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCommitteeOIDChanging(value);
					this.SendPropertyChanging();
					this._CommitteeOID = value;
					this.SendPropertyChanged("CommitteeOID");
					this.OnCommitteeOIDChanged();
				}
			}
		}
		
		[Column(Storage="_SeqNo", DbType="VarChar(30)")]
		public string SeqNo
		{
			get
			{
				return this._SeqNo;
			}
			set
			{
				if ((this._SeqNo != value))
				{
					this.OnSeqNoChanging(value);
					this.SendPropertyChanging();
					this._SeqNo = value;
					this.SendPropertyChanged("SeqNo");
					this.OnSeqNoChanged();
				}
			}
		}
		
		[Column(Storage="_EmployeeID", DbType="VarChar(15)")]
		public string EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					this.OnEmployeeIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeID = value;
					this.SendPropertyChanged("EmployeeID");
					this.OnEmployeeIDChanged();
				}
			}
		}
		
		[Column(Storage="_CommitteeTitle", DbType="NVarChar(300)")]
		public string CommitteeTitle
		{
			get
			{
				return this._CommitteeTitle;
			}
			set
			{
				if ((this._CommitteeTitle != value))
				{
					this.OnCommitteeTitleChanging(value);
					this.SendPropertyChanging();
					this._CommitteeTitle = value;
					this.SendPropertyChanged("CommitteeTitle");
					this.OnCommitteeTitleChanged();
				}
			}
		}
		
		[Association(Name="Committee_CommitteeMember", Storage="_Committee", ThisKey="CommitteeOID", OtherKey="OID", IsForeignKey=true, DeleteRule="CASCADE")]
		public Committee Committee
		{
			get
			{
				return this._Committee.Entity;
			}
			set
			{
				Committee previousValue = this._Committee.Entity;
				if (((previousValue != value) 
							|| (this._Committee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Committee.Entity = null;
						previousValue.CommitteeMembers.Remove(this);
					}
					this._Committee.Entity = value;
					if ((value != null))
					{
						value.CommitteeMembers.Add(this);
						this._CommitteeOID = value.OID;
					}
					else
					{
						this._CommitteeOID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Committee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.WorkForce")]
	public partial class WorkForce : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private string _NameCn;
		
		private string _NameEn;
		
		private string _Sex;
		
		private string _Factory;
		
		private string _Dept;
		
		private string _NextDept;
		
		private string _DeptName;
		
		private string _LineCode;
		
		private string _NextLineCode;
		
		private string _Location;
		
		private string _NextLocation;
		
		private System.Nullable<System.DateTime> _JPDate;
		
		private System.Nullable<System.DateTime> _JLDate;
		
		private System.Nullable<System.DateTime> _REDate;
		
		private string _ClsName;
		
		private string _ShortClass;
		
		private string _WorkerType;
		
		private string _WFLevel;
		
		private string _Region;
		
		private string _Area;
		
		private System.Nullable<decimal> _Seniority;
		
		private string _JobTitleEn;
		
		private string _JobTitleCn;
		
		private System.Nullable<bool> _dWF;
		
		private System.Nullable<bool> _InActive;
		
		private System.Nullable<bool> _IsRegistAuxiliary;
		
		private string _AuxiliaryJobTitle;
		
		private System.Nullable<decimal> _Matrix_Skill;
		
		private System.Nullable<decimal> _Matrix_Attendance;
		
		private System.Nullable<decimal> _Matrix_Adaptability;
		
		private System.Nullable<decimal> _Matrix_Adoptability;
		
		private System.Nullable<decimal> _Matrix_Speed;
		
		private System.Nullable<decimal> _Matrix_Strength;
		
		private System.Nullable<decimal> _Matrix_Staminal;
		
		private System.Nullable<decimal> _Matrix_Teamplayer;
		
		private System.Nullable<bool> _MTM;
		
		private System.Nullable<bool> _LongLeave;
		
		private System.Nullable<decimal> _Matrix_Quality;
		
		private System.Nullable<System.DateTime> _LongLeaveStartDate;
		
		private System.Nullable<System.DateTime> _LongLeaveEndDate;
		
		private string _TechType;
		
		private string _WFWhere;
		
		private string _WFState;
		
		private string _WFPart;
		
		private string _WFPartCn;
		
		private string _WorkerTypeCn;
		
		private string _WorkForceTyEn;
		
		private string _WorkForceTyCn;
		
		private System.Nullable<bool> _CrossRole;
		
		private string _CrossRoleDcrp;
		
		private string _Grade;
		
		private string _Country;
		
		private System.Nullable<bool> _HeadCount;
		
		private string _Sub_Section_FAE;
		
		private string _DeptNameCn;
		
		private string _WFWhere_1;
		
		private string _WFWhere_2;
		
		private string _WFWhere_1Cn;
		
		private string _WFWhere_2Cn;
		
		private string _WFWhereCn;
		
		private string _Sub_Section_FAECn;
		
		private string _Co_Team;
		
		private string _Co_TeamCn;
		
		private string _CountryCn;
		
		private string _RegionCn;
		
		private string _AreaCn;
		
		private string _Town;
		
		private string _TownCn;
		
		private string _Stationed_at;
		
		private string _Standby;
		
		private System.Nullable<bool> _IsRelated;
		
		private string _WorkHour;
		
		private string _PrepanedByName;
		
		private System.Nullable<System.DateTime> _PrepanedByDate;
		
		private string _ConfirmName;
		
		private System.Nullable<System.DateTime> _ConfirmDate;
		
		private string _ConfirmDeptHead;
		
		private System.Nullable<System.DateTime> _ConfirmDeptHeadDate;
		
		private string _AuditedName;
		
		private System.Nullable<System.DateTime> _AuditedDate;
		
		private string _RecEn;
		
		private string _RecCn;
		
		private System.Nullable<bool> _IsRec;
		
		private string _SecondOffice;
		
		private string _ControlOrSupport;
		
		private string _NameBd;
		
		private string _RegionBd;
		
		private string _AreaBd;
		
		private string _JobTitleBd;
		
		private string _WFPartBd;
		
		private string _WorkerTypeBd;
		
		private string _WorkForceTyBd;
		
		private string _DeptNameBd;
		
		private string _WFWhere_1Bd;
		
		private string _WFWhere_2Bd;
		
		private string _WFWhereBd;
		
		private string _Sub_Section_FAEBd;
		
		private string _Co_TeamBd;
		
		private string _CountryBd;
		
		private string _TownBd;
		
		private string _RecBd;
		
		private string _Vacancy;
		
		private System.Nullable<System.DateTime> _VacancyDate;
		
		private string _Grp;
		
		private string _ApprovalEnterByDept;
		
		private string _ApprovalEnterByHR;
		
		private string _ApprovalExitByDept;
		
		private string _ApprovalExitByHR;
		
		private string _ApprovalTransferByDept;
		
		private string _ApprovalTransferByHR;
		
		private string _RecRole_chn;
		
		private string _SeqNo;
		
		private string _WageType;
		
		private string _JobTitleCode;
		
		private string _TitleTypeCode;
		
		private System.Nullable<bool> _IsStaff;
		
		private string _jobtitle_SeqNo;
		
		private string _WorkRegion;
		
		private System.Nullable<bool> _IsProjection;
		
		private System.Nullable<bool> _RemoteFuncControl;
		
		private System.Nullable<bool> _RemoteFuncSupport;
		
		private string _FAERef;
		
		private System.Nullable<bool> _IsDeployment;
		
		private EntitySet<OpSkill> _OpSkills;
		
		private EntityRef<WorkForceImg> _WorkForceImg;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnNameCnChanging(string value);
    partial void OnNameCnChanged();
    partial void OnNameEnChanging(string value);
    partial void OnNameEnChanged();
    partial void OnSexChanging(string value);
    partial void OnSexChanged();
    partial void OnFactoryChanging(string value);
    partial void OnFactoryChanged();
    partial void OnDeptChanging(string value);
    partial void OnDeptChanged();
    partial void OnNextDeptChanging(string value);
    partial void OnNextDeptChanged();
    partial void OnDeptNameChanging(string value);
    partial void OnDeptNameChanged();
    partial void OnLineCodeChanging(string value);
    partial void OnLineCodeChanged();
    partial void OnNextLineCodeChanging(string value);
    partial void OnNextLineCodeChanged();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    partial void OnNextLocationChanging(string value);
    partial void OnNextLocationChanged();
    partial void OnJPDateChanging(System.Nullable<System.DateTime> value);
    partial void OnJPDateChanged();
    partial void OnJLDateChanging(System.Nullable<System.DateTime> value);
    partial void OnJLDateChanged();
    partial void OnREDateChanging(System.Nullable<System.DateTime> value);
    partial void OnREDateChanged();
    partial void OnClsNameChanging(string value);
    partial void OnClsNameChanged();
    partial void OnShortClassChanging(string value);
    partial void OnShortClassChanged();
    partial void OnWorkerTypeChanging(string value);
    partial void OnWorkerTypeChanged();
    partial void OnWFLevelChanging(string value);
    partial void OnWFLevelChanged();
    partial void OnRegionChanging(string value);
    partial void OnRegionChanged();
    partial void OnAreaChanging(string value);
    partial void OnAreaChanged();
    partial void OnSeniorityChanging(System.Nullable<decimal> value);
    partial void OnSeniorityChanged();
    partial void OnJobTitleEnChanging(string value);
    partial void OnJobTitleEnChanged();
    partial void OnJobTitleCnChanging(string value);
    partial void OnJobTitleCnChanged();
    partial void OndWFChanging(System.Nullable<bool> value);
    partial void OndWFChanged();
    partial void OnInActiveChanging(System.Nullable<bool> value);
    partial void OnInActiveChanged();
    partial void OnIsRegistAuxiliaryChanging(System.Nullable<bool> value);
    partial void OnIsRegistAuxiliaryChanged();
    partial void OnAuxiliaryJobTitleChanging(string value);
    partial void OnAuxiliaryJobTitleChanged();
    partial void OnMatrix_SkillChanging(System.Nullable<decimal> value);
    partial void OnMatrix_SkillChanged();
    partial void OnMatrix_AttendanceChanging(System.Nullable<decimal> value);
    partial void OnMatrix_AttendanceChanged();
    partial void OnMatrix_AdaptabilityChanging(System.Nullable<decimal> value);
    partial void OnMatrix_AdaptabilityChanged();
    partial void OnMatrix_AdoptabilityChanging(System.Nullable<decimal> value);
    partial void OnMatrix_AdoptabilityChanged();
    partial void OnMatrix_SpeedChanging(System.Nullable<decimal> value);
    partial void OnMatrix_SpeedChanged();
    partial void OnMatrix_StrengthChanging(System.Nullable<decimal> value);
    partial void OnMatrix_StrengthChanged();
    partial void OnMatrix_StaminalChanging(System.Nullable<decimal> value);
    partial void OnMatrix_StaminalChanged();
    partial void OnMatrix_TeamplayerChanging(System.Nullable<decimal> value);
    partial void OnMatrix_TeamplayerChanged();
    partial void OnMTMChanging(System.Nullable<bool> value);
    partial void OnMTMChanged();
    partial void OnLongLeaveChanging(System.Nullable<bool> value);
    partial void OnLongLeaveChanged();
    partial void OnMatrix_QualityChanging(System.Nullable<decimal> value);
    partial void OnMatrix_QualityChanged();
    partial void OnLongLeaveStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLongLeaveStartDateChanged();
    partial void OnLongLeaveEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLongLeaveEndDateChanged();
    partial void OnTechTypeChanging(string value);
    partial void OnTechTypeChanged();
    partial void OnWFWhereChanging(string value);
    partial void OnWFWhereChanged();
    partial void OnWFStateChanging(string value);
    partial void OnWFStateChanged();
    partial void OnWFPartChanging(string value);
    partial void OnWFPartChanged();
    partial void OnWFPartCnChanging(string value);
    partial void OnWFPartCnChanged();
    partial void OnWorkerTypeCnChanging(string value);
    partial void OnWorkerTypeCnChanged();
    partial void OnWorkForceTyEnChanging(string value);
    partial void OnWorkForceTyEnChanged();
    partial void OnWorkForceTyCnChanging(string value);
    partial void OnWorkForceTyCnChanged();
    partial void OnCrossRoleChanging(System.Nullable<bool> value);
    partial void OnCrossRoleChanged();
    partial void OnCrossRoleDcrpChanging(string value);
    partial void OnCrossRoleDcrpChanged();
    partial void OnGradeChanging(string value);
    partial void OnGradeChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnHeadCountChanging(System.Nullable<bool> value);
    partial void OnHeadCountChanged();
    partial void OnSub_Section_FAEChanging(string value);
    partial void OnSub_Section_FAEChanged();
    partial void OnDeptNameCnChanging(string value);
    partial void OnDeptNameCnChanged();
    partial void OnWFWhere_1Changing(string value);
    partial void OnWFWhere_1Changed();
    partial void OnWFWhere_2Changing(string value);
    partial void OnWFWhere_2Changed();
    partial void OnWFWhere_1CnChanging(string value);
    partial void OnWFWhere_1CnChanged();
    partial void OnWFWhere_2CnChanging(string value);
    partial void OnWFWhere_2CnChanged();
    partial void OnWFWhereCnChanging(string value);
    partial void OnWFWhereCnChanged();
    partial void OnSub_Section_FAECnChanging(string value);
    partial void OnSub_Section_FAECnChanged();
    partial void OnCo_TeamChanging(string value);
    partial void OnCo_TeamChanged();
    partial void OnCo_TeamCnChanging(string value);
    partial void OnCo_TeamCnChanged();
    partial void OnCountryCnChanging(string value);
    partial void OnCountryCnChanged();
    partial void OnRegionCnChanging(string value);
    partial void OnRegionCnChanged();
    partial void OnAreaCnChanging(string value);
    partial void OnAreaCnChanged();
    partial void OnTownChanging(string value);
    partial void OnTownChanged();
    partial void OnTownCnChanging(string value);
    partial void OnTownCnChanged();
    partial void OnStationed_atChanging(string value);
    partial void OnStationed_atChanged();
    partial void OnStandbyChanging(string value);
    partial void OnStandbyChanged();
    partial void OnIsRelatedChanging(System.Nullable<bool> value);
    partial void OnIsRelatedChanged();
    partial void OnWorkHourChanging(string value);
    partial void OnWorkHourChanged();
    partial void OnPrepanedByNameChanging(string value);
    partial void OnPrepanedByNameChanged();
    partial void OnPrepanedByDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPrepanedByDateChanged();
    partial void OnConfirmNameChanging(string value);
    partial void OnConfirmNameChanged();
    partial void OnConfirmDateChanging(System.Nullable<System.DateTime> value);
    partial void OnConfirmDateChanged();
    partial void OnConfirmDeptHeadChanging(string value);
    partial void OnConfirmDeptHeadChanged();
    partial void OnConfirmDeptHeadDateChanging(System.Nullable<System.DateTime> value);
    partial void OnConfirmDeptHeadDateChanged();
    partial void OnAuditedNameChanging(string value);
    partial void OnAuditedNameChanged();
    partial void OnAuditedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAuditedDateChanged();
    partial void OnRecEnChanging(string value);
    partial void OnRecEnChanged();
    partial void OnRecCnChanging(string value);
    partial void OnRecCnChanged();
    partial void OnIsRecChanging(System.Nullable<bool> value);
    partial void OnIsRecChanged();
    partial void OnSecondOfficeChanging(string value);
    partial void OnSecondOfficeChanged();
    partial void OnControlOrSupportChanging(string value);
    partial void OnControlOrSupportChanged();
    partial void OnNameBdChanging(string value);
    partial void OnNameBdChanged();
    partial void OnRegionBdChanging(string value);
    partial void OnRegionBdChanged();
    partial void OnAreaBdChanging(string value);
    partial void OnAreaBdChanged();
    partial void OnJobTitleBdChanging(string value);
    partial void OnJobTitleBdChanged();
    partial void OnWFPartBdChanging(string value);
    partial void OnWFPartBdChanged();
    partial void OnWorkerTypeBdChanging(string value);
    partial void OnWorkerTypeBdChanged();
    partial void OnWorkForceTyBdChanging(string value);
    partial void OnWorkForceTyBdChanged();
    partial void OnDeptNameBdChanging(string value);
    partial void OnDeptNameBdChanged();
    partial void OnWFWhere_1BdChanging(string value);
    partial void OnWFWhere_1BdChanged();
    partial void OnWFWhere_2BdChanging(string value);
    partial void OnWFWhere_2BdChanged();
    partial void OnWFWhereBdChanging(string value);
    partial void OnWFWhereBdChanged();
    partial void OnSub_Section_FAEBdChanging(string value);
    partial void OnSub_Section_FAEBdChanged();
    partial void OnCo_TeamBdChanging(string value);
    partial void OnCo_TeamBdChanged();
    partial void OnCountryBdChanging(string value);
    partial void OnCountryBdChanged();
    partial void OnTownBdChanging(string value);
    partial void OnTownBdChanged();
    partial void OnRecBdChanging(string value);
    partial void OnRecBdChanged();
    partial void OnVacancyChanging(string value);
    partial void OnVacancyChanged();
    partial void OnVacancyDateChanging(System.Nullable<System.DateTime> value);
    partial void OnVacancyDateChanged();
    partial void OnGrpChanging(string value);
    partial void OnGrpChanged();
    partial void OnApprovalEnterByDeptChanging(string value);
    partial void OnApprovalEnterByDeptChanged();
    partial void OnApprovalEnterByHRChanging(string value);
    partial void OnApprovalEnterByHRChanged();
    partial void OnApprovalExitByDeptChanging(string value);
    partial void OnApprovalExitByDeptChanged();
    partial void OnApprovalExitByHRChanging(string value);
    partial void OnApprovalExitByHRChanged();
    partial void OnApprovalTransferByDeptChanging(string value);
    partial void OnApprovalTransferByDeptChanged();
    partial void OnApprovalTransferByHRChanging(string value);
    partial void OnApprovalTransferByHRChanged();
    partial void OnRecRole_chnChanging(string value);
    partial void OnRecRole_chnChanged();
    partial void OnSeqNoChanging(string value);
    partial void OnSeqNoChanged();
    partial void OnWageTypeChanging(string value);
    partial void OnWageTypeChanged();
    partial void OnJobTitleCodeChanging(string value);
    partial void OnJobTitleCodeChanged();
    partial void OnTitleTypeCodeChanging(string value);
    partial void OnTitleTypeCodeChanged();
    partial void OnIsStaffChanging(System.Nullable<bool> value);
    partial void OnIsStaffChanged();
    partial void Onjobtitle_SeqNoChanging(string value);
    partial void Onjobtitle_SeqNoChanged();
    partial void OnWorkRegionChanging(string value);
    partial void OnWorkRegionChanged();
    partial void OnIsProjectionChanging(System.Nullable<bool> value);
    partial void OnIsProjectionChanged();
    partial void OnRemoteFuncControlChanging(System.Nullable<bool> value);
    partial void OnRemoteFuncControlChanged();
    partial void OnRemoteFuncSupportChanging(System.Nullable<bool> value);
    partial void OnRemoteFuncSupportChanged();
    partial void OnFAERefChanging(string value);
    partial void OnFAERefChanged();
    partial void OnIsDeploymentChanging(System.Nullable<bool> value);
    partial void OnIsDeploymentChanged();
    #endregion
		
		public WorkForce()
		{
			this._OpSkills = new EntitySet<OpSkill>(new Action<OpSkill>(this.attach_OpSkills), new Action<OpSkill>(this.detach_OpSkills));
			this._WorkForceImg = default(EntityRef<WorkForceImg>);
			OnCreated();
		}
		
		[Column(Storage="_Id", DbType="VarChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_NameCn", DbType="NVarChar(25)")]
		public string NameCn
		{
			get
			{
				return this._NameCn;
			}
			set
			{
				if ((this._NameCn != value))
				{
					this.OnNameCnChanging(value);
					this.SendPropertyChanging();
					this._NameCn = value;
					this.SendPropertyChanged("NameCn");
					this.OnNameCnChanged();
				}
			}
		}
		
		[Column(Storage="_NameEn", DbType="NVarChar(25)")]
		public string NameEn
		{
			get
			{
				return this._NameEn;
			}
			set
			{
				if ((this._NameEn != value))
				{
					this.OnNameEnChanging(value);
					this.SendPropertyChanging();
					this._NameEn = value;
					this.SendPropertyChanged("NameEn");
					this.OnNameEnChanged();
				}
			}
		}
		
		[Column(Storage="_Sex", DbType="NVarChar(10)")]
		public string Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this.OnSexChanging(value);
					this.SendPropertyChanging();
					this._Sex = value;
					this.SendPropertyChanged("Sex");
					this.OnSexChanged();
				}
			}
		}
		
		[Column(Storage="_Factory", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Factory
		{
			get
			{
				return this._Factory;
			}
			set
			{
				if ((this._Factory != value))
				{
					this.OnFactoryChanging(value);
					this.SendPropertyChanging();
					this._Factory = value;
					this.SendPropertyChanged("Factory");
					this.OnFactoryChanged();
				}
			}
		}
		
		[Column(Storage="_Dept", DbType="NVarChar(30)")]
		public string Dept
		{
			get
			{
				return this._Dept;
			}
			set
			{
				if ((this._Dept != value))
				{
					this.OnDeptChanging(value);
					this.SendPropertyChanging();
					this._Dept = value;
					this.SendPropertyChanged("Dept");
					this.OnDeptChanged();
				}
			}
		}
		
		[Column(Storage="_NextDept", DbType="NVarChar(100)")]
		public string NextDept
		{
			get
			{
				return this._NextDept;
			}
			set
			{
				if ((this._NextDept != value))
				{
					this.OnNextDeptChanging(value);
					this.SendPropertyChanging();
					this._NextDept = value;
					this.SendPropertyChanged("NextDept");
					this.OnNextDeptChanged();
				}
			}
		}
		
		[Column(Storage="_DeptName", DbType="NVarChar(150)")]
		public string DeptName
		{
			get
			{
				return this._DeptName;
			}
			set
			{
				if ((this._DeptName != value))
				{
					this.OnDeptNameChanging(value);
					this.SendPropertyChanging();
					this._DeptName = value;
					this.SendPropertyChanged("DeptName");
					this.OnDeptNameChanged();
				}
			}
		}
		
		[Column(Storage="_LineCode", DbType="NVarChar(40)")]
		public string LineCode
		{
			get
			{
				return this._LineCode;
			}
			set
			{
				if ((this._LineCode != value))
				{
					this.OnLineCodeChanging(value);
					this.SendPropertyChanging();
					this._LineCode = value;
					this.SendPropertyChanged("LineCode");
					this.OnLineCodeChanged();
				}
			}
		}
		
		[Column(Storage="_NextLineCode", DbType="NVarChar(20)")]
		public string NextLineCode
		{
			get
			{
				return this._NextLineCode;
			}
			set
			{
				if ((this._NextLineCode != value))
				{
					this.OnNextLineCodeChanging(value);
					this.SendPropertyChanging();
					this._NextLineCode = value;
					this.SendPropertyChanged("NextLineCode");
					this.OnNextLineCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Location", DbType="NVarChar(100)")]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[Column(Storage="_NextLocation", DbType="NVarChar(25)")]
		public string NextLocation
		{
			get
			{
				return this._NextLocation;
			}
			set
			{
				if ((this._NextLocation != value))
				{
					this.OnNextLocationChanging(value);
					this.SendPropertyChanging();
					this._NextLocation = value;
					this.SendPropertyChanged("NextLocation");
					this.OnNextLocationChanged();
				}
			}
		}
		
		[Column(Storage="_JPDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> JPDate
		{
			get
			{
				return this._JPDate;
			}
			set
			{
				if ((this._JPDate != value))
				{
					this.OnJPDateChanging(value);
					this.SendPropertyChanging();
					this._JPDate = value;
					this.SendPropertyChanged("JPDate");
					this.OnJPDateChanged();
				}
			}
		}
		
		[Column(Storage="_JLDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> JLDate
		{
			get
			{
				return this._JLDate;
			}
			set
			{
				if ((this._JLDate != value))
				{
					this.OnJLDateChanging(value);
					this.SendPropertyChanging();
					this._JLDate = value;
					this.SendPropertyChanged("JLDate");
					this.OnJLDateChanged();
				}
			}
		}
		
		[Column(Storage="_REDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> REDate
		{
			get
			{
				return this._REDate;
			}
			set
			{
				if ((this._REDate != value))
				{
					this.OnREDateChanging(value);
					this.SendPropertyChanging();
					this._REDate = value;
					this.SendPropertyChanged("REDate");
					this.OnREDateChanged();
				}
			}
		}
		
		[Column(Storage="_ClsName", DbType="NVarChar(50)")]
		public string ClsName
		{
			get
			{
				return this._ClsName;
			}
			set
			{
				if ((this._ClsName != value))
				{
					this.OnClsNameChanging(value);
					this.SendPropertyChanging();
					this._ClsName = value;
					this.SendPropertyChanged("ClsName");
					this.OnClsNameChanged();
				}
			}
		}
		
		[Column(Storage="_ShortClass", DbType="NVarChar(10)")]
		public string ShortClass
		{
			get
			{
				return this._ShortClass;
			}
			set
			{
				if ((this._ShortClass != value))
				{
					this.OnShortClassChanging(value);
					this.SendPropertyChanging();
					this._ShortClass = value;
					this.SendPropertyChanged("ShortClass");
					this.OnShortClassChanged();
				}
			}
		}
		
		[Column(Storage="_WorkerType", DbType="NVarChar(100)")]
		public string WorkerType
		{
			get
			{
				return this._WorkerType;
			}
			set
			{
				if ((this._WorkerType != value))
				{
					this.OnWorkerTypeChanging(value);
					this.SendPropertyChanging();
					this._WorkerType = value;
					this.SendPropertyChanged("WorkerType");
					this.OnWorkerTypeChanged();
				}
			}
		}
		
		[Column(Storage="_WFLevel", DbType="NVarChar(15)")]
		public string WFLevel
		{
			get
			{
				return this._WFLevel;
			}
			set
			{
				if ((this._WFLevel != value))
				{
					this.OnWFLevelChanging(value);
					this.SendPropertyChanging();
					this._WFLevel = value;
					this.SendPropertyChanged("WFLevel");
					this.OnWFLevelChanged();
				}
			}
		}
		
		[Column(Storage="_Region", DbType="NVarChar(40)")]
		public string Region
		{
			get
			{
				return this._Region;
			}
			set
			{
				if ((this._Region != value))
				{
					this.OnRegionChanging(value);
					this.SendPropertyChanging();
					this._Region = value;
					this.SendPropertyChanged("Region");
					this.OnRegionChanged();
				}
			}
		}
		
		[Column(Storage="_Area", DbType="NVarChar(40)")]
		public string Area
		{
			get
			{
				return this._Area;
			}
			set
			{
				if ((this._Area != value))
				{
					this.OnAreaChanging(value);
					this.SendPropertyChanging();
					this._Area = value;
					this.SendPropertyChanged("Area");
					this.OnAreaChanged();
				}
			}
		}
		
		[Column(Storage="_Seniority", DbType="Decimal(15,1)")]
		public System.Nullable<decimal> Seniority
		{
			get
			{
				return this._Seniority;
			}
			set
			{
				if ((this._Seniority != value))
				{
					this.OnSeniorityChanging(value);
					this.SendPropertyChanging();
					this._Seniority = value;
					this.SendPropertyChanged("Seniority");
					this.OnSeniorityChanged();
				}
			}
		}
		
		[Column(Storage="_JobTitleEn", DbType="NVarChar(150)")]
		public string JobTitleEn
		{
			get
			{
				return this._JobTitleEn;
			}
			set
			{
				if ((this._JobTitleEn != value))
				{
					this.OnJobTitleEnChanging(value);
					this.SendPropertyChanging();
					this._JobTitleEn = value;
					this.SendPropertyChanged("JobTitleEn");
					this.OnJobTitleEnChanged();
				}
			}
		}
		
		[Column(Storage="_JobTitleCn", DbType="NVarChar(150)")]
		public string JobTitleCn
		{
			get
			{
				return this._JobTitleCn;
			}
			set
			{
				if ((this._JobTitleCn != value))
				{
					this.OnJobTitleCnChanging(value);
					this.SendPropertyChanging();
					this._JobTitleCn = value;
					this.SendPropertyChanged("JobTitleCn");
					this.OnJobTitleCnChanged();
				}
			}
		}
		
		[Column(Storage="_dWF", DbType="Bit")]
		public System.Nullable<bool> dWF
		{
			get
			{
				return this._dWF;
			}
			set
			{
				if ((this._dWF != value))
				{
					this.OndWFChanging(value);
					this.SendPropertyChanging();
					this._dWF = value;
					this.SendPropertyChanged("dWF");
					this.OndWFChanged();
				}
			}
		}
		
		[Column(Storage="_InActive", DbType="Bit")]
		public System.Nullable<bool> InActive
		{
			get
			{
				return this._InActive;
			}
			set
			{
				if ((this._InActive != value))
				{
					this.OnInActiveChanging(value);
					this.SendPropertyChanging();
					this._InActive = value;
					this.SendPropertyChanged("InActive");
					this.OnInActiveChanged();
				}
			}
		}
		
		[Column(Storage="_IsRegistAuxiliary", DbType="Bit")]
		public System.Nullable<bool> IsRegistAuxiliary
		{
			get
			{
				return this._IsRegistAuxiliary;
			}
			set
			{
				if ((this._IsRegistAuxiliary != value))
				{
					this.OnIsRegistAuxiliaryChanging(value);
					this.SendPropertyChanging();
					this._IsRegistAuxiliary = value;
					this.SendPropertyChanged("IsRegistAuxiliary");
					this.OnIsRegistAuxiliaryChanged();
				}
			}
		}
		
		[Column(Storage="_AuxiliaryJobTitle", DbType="NVarChar(150)")]
		public string AuxiliaryJobTitle
		{
			get
			{
				return this._AuxiliaryJobTitle;
			}
			set
			{
				if ((this._AuxiliaryJobTitle != value))
				{
					this.OnAuxiliaryJobTitleChanging(value);
					this.SendPropertyChanging();
					this._AuxiliaryJobTitle = value;
					this.SendPropertyChanged("AuxiliaryJobTitle");
					this.OnAuxiliaryJobTitleChanged();
				}
			}
		}
		
		[Column(Storage="_Matrix_Skill", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Matrix_Skill
		{
			get
			{
				return this._Matrix_Skill;
			}
			set
			{
				if ((this._Matrix_Skill != value))
				{
					this.OnMatrix_SkillChanging(value);
					this.SendPropertyChanging();
					this._Matrix_Skill = value;
					this.SendPropertyChanged("Matrix_Skill");
					this.OnMatrix_SkillChanged();
				}
			}
		}
		
		[Column(Storage="_Matrix_Attendance", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Matrix_Attendance
		{
			get
			{
				return this._Matrix_Attendance;
			}
			set
			{
				if ((this._Matrix_Attendance != value))
				{
					this.OnMatrix_AttendanceChanging(value);
					this.SendPropertyChanging();
					this._Matrix_Attendance = value;
					this.SendPropertyChanged("Matrix_Attendance");
					this.OnMatrix_AttendanceChanged();
				}
			}
		}
		
		[Column(Storage="_Matrix_Adaptability", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Matrix_Adaptability
		{
			get
			{
				return this._Matrix_Adaptability;
			}
			set
			{
				if ((this._Matrix_Adaptability != value))
				{
					this.OnMatrix_AdaptabilityChanging(value);
					this.SendPropertyChanging();
					this._Matrix_Adaptability = value;
					this.SendPropertyChanged("Matrix_Adaptability");
					this.OnMatrix_AdaptabilityChanged();
				}
			}
		}
		
		[Column(Storage="_Matrix_Adoptability", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Matrix_Adoptability
		{
			get
			{
				return this._Matrix_Adoptability;
			}
			set
			{
				if ((this._Matrix_Adoptability != value))
				{
					this.OnMatrix_AdoptabilityChanging(value);
					this.SendPropertyChanging();
					this._Matrix_Adoptability = value;
					this.SendPropertyChanged("Matrix_Adoptability");
					this.OnMatrix_AdoptabilityChanged();
				}
			}
		}
		
		[Column(Storage="_Matrix_Speed", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Matrix_Speed
		{
			get
			{
				return this._Matrix_Speed;
			}
			set
			{
				if ((this._Matrix_Speed != value))
				{
					this.OnMatrix_SpeedChanging(value);
					this.SendPropertyChanging();
					this._Matrix_Speed = value;
					this.SendPropertyChanged("Matrix_Speed");
					this.OnMatrix_SpeedChanged();
				}
			}
		}
		
		[Column(Storage="_Matrix_Strength", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Matrix_Strength
		{
			get
			{
				return this._Matrix_Strength;
			}
			set
			{
				if ((this._Matrix_Strength != value))
				{
					this.OnMatrix_StrengthChanging(value);
					this.SendPropertyChanging();
					this._Matrix_Strength = value;
					this.SendPropertyChanged("Matrix_Strength");
					this.OnMatrix_StrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Matrix_Staminal", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Matrix_Staminal
		{
			get
			{
				return this._Matrix_Staminal;
			}
			set
			{
				if ((this._Matrix_Staminal != value))
				{
					this.OnMatrix_StaminalChanging(value);
					this.SendPropertyChanging();
					this._Matrix_Staminal = value;
					this.SendPropertyChanged("Matrix_Staminal");
					this.OnMatrix_StaminalChanged();
				}
			}
		}
		
		[Column(Storage="_Matrix_Teamplayer", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Matrix_Teamplayer
		{
			get
			{
				return this._Matrix_Teamplayer;
			}
			set
			{
				if ((this._Matrix_Teamplayer != value))
				{
					this.OnMatrix_TeamplayerChanging(value);
					this.SendPropertyChanging();
					this._Matrix_Teamplayer = value;
					this.SendPropertyChanged("Matrix_Teamplayer");
					this.OnMatrix_TeamplayerChanged();
				}
			}
		}
		
		[Column(Storage="_MTM", DbType="Bit")]
		public System.Nullable<bool> MTM
		{
			get
			{
				return this._MTM;
			}
			set
			{
				if ((this._MTM != value))
				{
					this.OnMTMChanging(value);
					this.SendPropertyChanging();
					this._MTM = value;
					this.SendPropertyChanged("MTM");
					this.OnMTMChanged();
				}
			}
		}
		
		[Column(Storage="_LongLeave", DbType="Bit")]
		public System.Nullable<bool> LongLeave
		{
			get
			{
				return this._LongLeave;
			}
			set
			{
				if ((this._LongLeave != value))
				{
					this.OnLongLeaveChanging(value);
					this.SendPropertyChanging();
					this._LongLeave = value;
					this.SendPropertyChanged("LongLeave");
					this.OnLongLeaveChanged();
				}
			}
		}
		
		[Column(Storage="_Matrix_Quality", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Matrix_Quality
		{
			get
			{
				return this._Matrix_Quality;
			}
			set
			{
				if ((this._Matrix_Quality != value))
				{
					this.OnMatrix_QualityChanging(value);
					this.SendPropertyChanging();
					this._Matrix_Quality = value;
					this.SendPropertyChanged("Matrix_Quality");
					this.OnMatrix_QualityChanged();
				}
			}
		}
		
		[Column(Storage="_LongLeaveStartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LongLeaveStartDate
		{
			get
			{
				return this._LongLeaveStartDate;
			}
			set
			{
				if ((this._LongLeaveStartDate != value))
				{
					this.OnLongLeaveStartDateChanging(value);
					this.SendPropertyChanging();
					this._LongLeaveStartDate = value;
					this.SendPropertyChanged("LongLeaveStartDate");
					this.OnLongLeaveStartDateChanged();
				}
			}
		}
		
		[Column(Storage="_LongLeaveEndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LongLeaveEndDate
		{
			get
			{
				return this._LongLeaveEndDate;
			}
			set
			{
				if ((this._LongLeaveEndDate != value))
				{
					this.OnLongLeaveEndDateChanging(value);
					this.SendPropertyChanging();
					this._LongLeaveEndDate = value;
					this.SendPropertyChanged("LongLeaveEndDate");
					this.OnLongLeaveEndDateChanged();
				}
			}
		}
		
		[Column(Storage="_TechType", DbType="NVarChar(50)")]
		public string TechType
		{
			get
			{
				return this._TechType;
			}
			set
			{
				if ((this._TechType != value))
				{
					this.OnTechTypeChanging(value);
					this.SendPropertyChanging();
					this._TechType = value;
					this.SendPropertyChanged("TechType");
					this.OnTechTypeChanged();
				}
			}
		}
		
		[Column(Storage="_WFWhere", DbType="NVarChar(100)")]
		public string WFWhere
		{
			get
			{
				return this._WFWhere;
			}
			set
			{
				if ((this._WFWhere != value))
				{
					this.OnWFWhereChanging(value);
					this.SendPropertyChanging();
					this._WFWhere = value;
					this.SendPropertyChanged("WFWhere");
					this.OnWFWhereChanged();
				}
			}
		}
		
		[Column(Storage="_WFState", DbType="NVarChar(30)")]
		public string WFState
		{
			get
			{
				return this._WFState;
			}
			set
			{
				if ((this._WFState != value))
				{
					this.OnWFStateChanging(value);
					this.SendPropertyChanging();
					this._WFState = value;
					this.SendPropertyChanged("WFState");
					this.OnWFStateChanged();
				}
			}
		}
		
		[Column(Storage="_WFPart", DbType="NVarChar(70)")]
		public string WFPart
		{
			get
			{
				return this._WFPart;
			}
			set
			{
				if ((this._WFPart != value))
				{
					this.OnWFPartChanging(value);
					this.SendPropertyChanging();
					this._WFPart = value;
					this.SendPropertyChanged("WFPart");
					this.OnWFPartChanged();
				}
			}
		}
		
		[Column(Storage="_WFPartCn", DbType="NVarChar(100)")]
		public string WFPartCn
		{
			get
			{
				return this._WFPartCn;
			}
			set
			{
				if ((this._WFPartCn != value))
				{
					this.OnWFPartCnChanging(value);
					this.SendPropertyChanging();
					this._WFPartCn = value;
					this.SendPropertyChanged("WFPartCn");
					this.OnWFPartCnChanged();
				}
			}
		}
		
		[Column(Storage="_WorkerTypeCn", DbType="NVarChar(100)")]
		public string WorkerTypeCn
		{
			get
			{
				return this._WorkerTypeCn;
			}
			set
			{
				if ((this._WorkerTypeCn != value))
				{
					this.OnWorkerTypeCnChanging(value);
					this.SendPropertyChanging();
					this._WorkerTypeCn = value;
					this.SendPropertyChanged("WorkerTypeCn");
					this.OnWorkerTypeCnChanged();
				}
			}
		}
		
		[Column(Storage="_WorkForceTyEn", DbType="NVarChar(100)")]
		public string WorkForceTyEn
		{
			get
			{
				return this._WorkForceTyEn;
			}
			set
			{
				if ((this._WorkForceTyEn != value))
				{
					this.OnWorkForceTyEnChanging(value);
					this.SendPropertyChanging();
					this._WorkForceTyEn = value;
					this.SendPropertyChanged("WorkForceTyEn");
					this.OnWorkForceTyEnChanged();
				}
			}
		}
		
		[Column(Storage="_WorkForceTyCn", DbType="NVarChar(100)")]
		public string WorkForceTyCn
		{
			get
			{
				return this._WorkForceTyCn;
			}
			set
			{
				if ((this._WorkForceTyCn != value))
				{
					this.OnWorkForceTyCnChanging(value);
					this.SendPropertyChanging();
					this._WorkForceTyCn = value;
					this.SendPropertyChanged("WorkForceTyCn");
					this.OnWorkForceTyCnChanged();
				}
			}
		}
		
		[Column(Storage="_CrossRole", DbType="Bit")]
		public System.Nullable<bool> CrossRole
		{
			get
			{
				return this._CrossRole;
			}
			set
			{
				if ((this._CrossRole != value))
				{
					this.OnCrossRoleChanging(value);
					this.SendPropertyChanging();
					this._CrossRole = value;
					this.SendPropertyChanged("CrossRole");
					this.OnCrossRoleChanged();
				}
			}
		}
		
		[Column(Storage="_CrossRoleDcrp", DbType="NVarChar(100)")]
		public string CrossRoleDcrp
		{
			get
			{
				return this._CrossRoleDcrp;
			}
			set
			{
				if ((this._CrossRoleDcrp != value))
				{
					this.OnCrossRoleDcrpChanging(value);
					this.SendPropertyChanging();
					this._CrossRoleDcrp = value;
					this.SendPropertyChanged("CrossRoleDcrp");
					this.OnCrossRoleDcrpChanged();
				}
			}
		}
		
		[Column(Storage="_Grade", DbType="NVarChar(10)")]
		public string Grade
		{
			get
			{
				return this._Grade;
			}
			set
			{
				if ((this._Grade != value))
				{
					this.OnGradeChanging(value);
					this.SendPropertyChanging();
					this._Grade = value;
					this.SendPropertyChanged("Grade");
					this.OnGradeChanged();
				}
			}
		}
		
		[Column(Storage="_Country", DbType="NVarChar(50)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[Column(Storage="_HeadCount", DbType="Bit")]
		public System.Nullable<bool> HeadCount
		{
			get
			{
				return this._HeadCount;
			}
			set
			{
				if ((this._HeadCount != value))
				{
					this.OnHeadCountChanging(value);
					this.SendPropertyChanging();
					this._HeadCount = value;
					this.SendPropertyChanged("HeadCount");
					this.OnHeadCountChanged();
				}
			}
		}
		
		[Column(Storage="_Sub_Section_FAE", DbType="NVarChar(100)")]
		public string Sub_Section_FAE
		{
			get
			{
				return this._Sub_Section_FAE;
			}
			set
			{
				if ((this._Sub_Section_FAE != value))
				{
					this.OnSub_Section_FAEChanging(value);
					this.SendPropertyChanging();
					this._Sub_Section_FAE = value;
					this.SendPropertyChanged("Sub_Section_FAE");
					this.OnSub_Section_FAEChanged();
				}
			}
		}
		
		[Column(Storage="_DeptNameCn", DbType="NVarChar(100)")]
		public string DeptNameCn
		{
			get
			{
				return this._DeptNameCn;
			}
			set
			{
				if ((this._DeptNameCn != value))
				{
					this.OnDeptNameCnChanging(value);
					this.SendPropertyChanging();
					this._DeptNameCn = value;
					this.SendPropertyChanged("DeptNameCn");
					this.OnDeptNameCnChanged();
				}
			}
		}
		
		[Column(Storage="_WFWhere_1", DbType="NVarChar(150)")]
		public string WFWhere_1
		{
			get
			{
				return this._WFWhere_1;
			}
			set
			{
				if ((this._WFWhere_1 != value))
				{
					this.OnWFWhere_1Changing(value);
					this.SendPropertyChanging();
					this._WFWhere_1 = value;
					this.SendPropertyChanged("WFWhere_1");
					this.OnWFWhere_1Changed();
				}
			}
		}
		
		[Column(Storage="_WFWhere_2", DbType="NVarChar(150)")]
		public string WFWhere_2
		{
			get
			{
				return this._WFWhere_2;
			}
			set
			{
				if ((this._WFWhere_2 != value))
				{
					this.OnWFWhere_2Changing(value);
					this.SendPropertyChanging();
					this._WFWhere_2 = value;
					this.SendPropertyChanged("WFWhere_2");
					this.OnWFWhere_2Changed();
				}
			}
		}
		
		[Column(Storage="_WFWhere_1Cn", DbType="NVarChar(150)")]
		public string WFWhere_1Cn
		{
			get
			{
				return this._WFWhere_1Cn;
			}
			set
			{
				if ((this._WFWhere_1Cn != value))
				{
					this.OnWFWhere_1CnChanging(value);
					this.SendPropertyChanging();
					this._WFWhere_1Cn = value;
					this.SendPropertyChanged("WFWhere_1Cn");
					this.OnWFWhere_1CnChanged();
				}
			}
		}
		
		[Column(Storage="_WFWhere_2Cn", DbType="NVarChar(150)")]
		public string WFWhere_2Cn
		{
			get
			{
				return this._WFWhere_2Cn;
			}
			set
			{
				if ((this._WFWhere_2Cn != value))
				{
					this.OnWFWhere_2CnChanging(value);
					this.SendPropertyChanging();
					this._WFWhere_2Cn = value;
					this.SendPropertyChanged("WFWhere_2Cn");
					this.OnWFWhere_2CnChanged();
				}
			}
		}
		
		[Column(Storage="_WFWhereCn", DbType="NVarChar(100)")]
		public string WFWhereCn
		{
			get
			{
				return this._WFWhereCn;
			}
			set
			{
				if ((this._WFWhereCn != value))
				{
					this.OnWFWhereCnChanging(value);
					this.SendPropertyChanging();
					this._WFWhereCn = value;
					this.SendPropertyChanged("WFWhereCn");
					this.OnWFWhereCnChanged();
				}
			}
		}
		
		[Column(Storage="_Sub_Section_FAECn", DbType="NVarChar(100)")]
		public string Sub_Section_FAECn
		{
			get
			{
				return this._Sub_Section_FAECn;
			}
			set
			{
				if ((this._Sub_Section_FAECn != value))
				{
					this.OnSub_Section_FAECnChanging(value);
					this.SendPropertyChanging();
					this._Sub_Section_FAECn = value;
					this.SendPropertyChanged("Sub_Section_FAECn");
					this.OnSub_Section_FAECnChanged();
				}
			}
		}
		
		[Column(Storage="_Co_Team", DbType="NVarChar(100)")]
		public string Co_Team
		{
			get
			{
				return this._Co_Team;
			}
			set
			{
				if ((this._Co_Team != value))
				{
					this.OnCo_TeamChanging(value);
					this.SendPropertyChanging();
					this._Co_Team = value;
					this.SendPropertyChanged("Co_Team");
					this.OnCo_TeamChanged();
				}
			}
		}
		
		[Column(Storage="_Co_TeamCn", DbType="NVarChar(100)")]
		public string Co_TeamCn
		{
			get
			{
				return this._Co_TeamCn;
			}
			set
			{
				if ((this._Co_TeamCn != value))
				{
					this.OnCo_TeamCnChanging(value);
					this.SendPropertyChanging();
					this._Co_TeamCn = value;
					this.SendPropertyChanged("Co_TeamCn");
					this.OnCo_TeamCnChanged();
				}
			}
		}
		
		[Column(Storage="_CountryCn", DbType="NVarChar(50)")]
		public string CountryCn
		{
			get
			{
				return this._CountryCn;
			}
			set
			{
				if ((this._CountryCn != value))
				{
					this.OnCountryCnChanging(value);
					this.SendPropertyChanging();
					this._CountryCn = value;
					this.SendPropertyChanged("CountryCn");
					this.OnCountryCnChanged();
				}
			}
		}
		
		[Column(Storage="_RegionCn", DbType="NVarChar(50)")]
		public string RegionCn
		{
			get
			{
				return this._RegionCn;
			}
			set
			{
				if ((this._RegionCn != value))
				{
					this.OnRegionCnChanging(value);
					this.SendPropertyChanging();
					this._RegionCn = value;
					this.SendPropertyChanged("RegionCn");
					this.OnRegionCnChanged();
				}
			}
		}
		
		[Column(Storage="_AreaCn", DbType="NVarChar(50)")]
		public string AreaCn
		{
			get
			{
				return this._AreaCn;
			}
			set
			{
				if ((this._AreaCn != value))
				{
					this.OnAreaCnChanging(value);
					this.SendPropertyChanging();
					this._AreaCn = value;
					this.SendPropertyChanged("AreaCn");
					this.OnAreaCnChanged();
				}
			}
		}
		
		[Column(Storage="_Town", DbType="NVarChar(50)")]
		public string Town
		{
			get
			{
				return this._Town;
			}
			set
			{
				if ((this._Town != value))
				{
					this.OnTownChanging(value);
					this.SendPropertyChanging();
					this._Town = value;
					this.SendPropertyChanged("Town");
					this.OnTownChanged();
				}
			}
		}
		
		[Column(Storage="_TownCn", DbType="NVarChar(50)")]
		public string TownCn
		{
			get
			{
				return this._TownCn;
			}
			set
			{
				if ((this._TownCn != value))
				{
					this.OnTownCnChanging(value);
					this.SendPropertyChanging();
					this._TownCn = value;
					this.SendPropertyChanged("TownCn");
					this.OnTownCnChanged();
				}
			}
		}
		
		[Column(Storage="_Stationed_at", DbType="NVarChar(80)")]
		public string Stationed_at
		{
			get
			{
				return this._Stationed_at;
			}
			set
			{
				if ((this._Stationed_at != value))
				{
					this.OnStationed_atChanging(value);
					this.SendPropertyChanging();
					this._Stationed_at = value;
					this.SendPropertyChanged("Stationed_at");
					this.OnStationed_atChanged();
				}
			}
		}
		
		[Column(Storage="_Standby", DbType="NVarChar(80)")]
		public string Standby
		{
			get
			{
				return this._Standby;
			}
			set
			{
				if ((this._Standby != value))
				{
					this.OnStandbyChanging(value);
					this.SendPropertyChanging();
					this._Standby = value;
					this.SendPropertyChanged("Standby");
					this.OnStandbyChanged();
				}
			}
		}
		
		[Column(Storage="_IsRelated", DbType="Bit")]
		public System.Nullable<bool> IsRelated
		{
			get
			{
				return this._IsRelated;
			}
			set
			{
				if ((this._IsRelated != value))
				{
					this.OnIsRelatedChanging(value);
					this.SendPropertyChanging();
					this._IsRelated = value;
					this.SendPropertyChanged("IsRelated");
					this.OnIsRelatedChanged();
				}
			}
		}
		
		[Column(Storage="_WorkHour", DbType="NVarChar(10)")]
		public string WorkHour
		{
			get
			{
				return this._WorkHour;
			}
			set
			{
				if ((this._WorkHour != value))
				{
					this.OnWorkHourChanging(value);
					this.SendPropertyChanging();
					this._WorkHour = value;
					this.SendPropertyChanged("WorkHour");
					this.OnWorkHourChanged();
				}
			}
		}
		
		[Column(Storage="_PrepanedByName", DbType="NVarChar(30)")]
		public string PrepanedByName
		{
			get
			{
				return this._PrepanedByName;
			}
			set
			{
				if ((this._PrepanedByName != value))
				{
					this.OnPrepanedByNameChanging(value);
					this.SendPropertyChanging();
					this._PrepanedByName = value;
					this.SendPropertyChanged("PrepanedByName");
					this.OnPrepanedByNameChanged();
				}
			}
		}
		
		[Column(Storage="_PrepanedByDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PrepanedByDate
		{
			get
			{
				return this._PrepanedByDate;
			}
			set
			{
				if ((this._PrepanedByDate != value))
				{
					this.OnPrepanedByDateChanging(value);
					this.SendPropertyChanging();
					this._PrepanedByDate = value;
					this.SendPropertyChanged("PrepanedByDate");
					this.OnPrepanedByDateChanged();
				}
			}
		}
		
		[Column(Storage="_ConfirmName", DbType="NVarChar(30)")]
		public string ConfirmName
		{
			get
			{
				return this._ConfirmName;
			}
			set
			{
				if ((this._ConfirmName != value))
				{
					this.OnConfirmNameChanging(value);
					this.SendPropertyChanging();
					this._ConfirmName = value;
					this.SendPropertyChanged("ConfirmName");
					this.OnConfirmNameChanged();
				}
			}
		}
		
		[Column(Storage="_ConfirmDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ConfirmDate
		{
			get
			{
				return this._ConfirmDate;
			}
			set
			{
				if ((this._ConfirmDate != value))
				{
					this.OnConfirmDateChanging(value);
					this.SendPropertyChanging();
					this._ConfirmDate = value;
					this.SendPropertyChanged("ConfirmDate");
					this.OnConfirmDateChanged();
				}
			}
		}
		
		[Column(Storage="_ConfirmDeptHead", DbType="NVarChar(30)")]
		public string ConfirmDeptHead
		{
			get
			{
				return this._ConfirmDeptHead;
			}
			set
			{
				if ((this._ConfirmDeptHead != value))
				{
					this.OnConfirmDeptHeadChanging(value);
					this.SendPropertyChanging();
					this._ConfirmDeptHead = value;
					this.SendPropertyChanged("ConfirmDeptHead");
					this.OnConfirmDeptHeadChanged();
				}
			}
		}
		
		[Column(Storage="_ConfirmDeptHeadDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ConfirmDeptHeadDate
		{
			get
			{
				return this._ConfirmDeptHeadDate;
			}
			set
			{
				if ((this._ConfirmDeptHeadDate != value))
				{
					this.OnConfirmDeptHeadDateChanging(value);
					this.SendPropertyChanging();
					this._ConfirmDeptHeadDate = value;
					this.SendPropertyChanged("ConfirmDeptHeadDate");
					this.OnConfirmDeptHeadDateChanged();
				}
			}
		}
		
		[Column(Storage="_AuditedName", DbType="NVarChar(30)")]
		public string AuditedName
		{
			get
			{
				return this._AuditedName;
			}
			set
			{
				if ((this._AuditedName != value))
				{
					this.OnAuditedNameChanging(value);
					this.SendPropertyChanging();
					this._AuditedName = value;
					this.SendPropertyChanged("AuditedName");
					this.OnAuditedNameChanged();
				}
			}
		}
		
		[Column(Storage="_AuditedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AuditedDate
		{
			get
			{
				return this._AuditedDate;
			}
			set
			{
				if ((this._AuditedDate != value))
				{
					this.OnAuditedDateChanging(value);
					this.SendPropertyChanging();
					this._AuditedDate = value;
					this.SendPropertyChanged("AuditedDate");
					this.OnAuditedDateChanged();
				}
			}
		}
		
		[Column(Storage="_RecEn", DbType="NVarChar(200)")]
		public string RecEn
		{
			get
			{
				return this._RecEn;
			}
			set
			{
				if ((this._RecEn != value))
				{
					this.OnRecEnChanging(value);
					this.SendPropertyChanging();
					this._RecEn = value;
					this.SendPropertyChanged("RecEn");
					this.OnRecEnChanged();
				}
			}
		}
		
		[Column(Storage="_RecCn", DbType="NVarChar(200)")]
		public string RecCn
		{
			get
			{
				return this._RecCn;
			}
			set
			{
				if ((this._RecCn != value))
				{
					this.OnRecCnChanging(value);
					this.SendPropertyChanging();
					this._RecCn = value;
					this.SendPropertyChanged("RecCn");
					this.OnRecCnChanged();
				}
			}
		}
		
		[Column(Storage="_IsRec", DbType="Bit")]
		public System.Nullable<bool> IsRec
		{
			get
			{
				return this._IsRec;
			}
			set
			{
				if ((this._IsRec != value))
				{
					this.OnIsRecChanging(value);
					this.SendPropertyChanging();
					this._IsRec = value;
					this.SendPropertyChanged("IsRec");
					this.OnIsRecChanged();
				}
			}
		}
		
		[Column(Storage="_SecondOffice", DbType="NVarChar(150)")]
		public string SecondOffice
		{
			get
			{
				return this._SecondOffice;
			}
			set
			{
				if ((this._SecondOffice != value))
				{
					this.OnSecondOfficeChanging(value);
					this.SendPropertyChanging();
					this._SecondOffice = value;
					this.SendPropertyChanged("SecondOffice");
					this.OnSecondOfficeChanged();
				}
			}
		}
		
		[Column(Storage="_ControlOrSupport", DbType="NVarChar(150)")]
		public string ControlOrSupport
		{
			get
			{
				return this._ControlOrSupport;
			}
			set
			{
				if ((this._ControlOrSupport != value))
				{
					this.OnControlOrSupportChanging(value);
					this.SendPropertyChanging();
					this._ControlOrSupport = value;
					this.SendPropertyChanged("ControlOrSupport");
					this.OnControlOrSupportChanged();
				}
			}
		}
		
		[Column(Storage="_NameBd", DbType="NVarChar(25)")]
		public string NameBd
		{
			get
			{
				return this._NameBd;
			}
			set
			{
				if ((this._NameBd != value))
				{
					this.OnNameBdChanging(value);
					this.SendPropertyChanging();
					this._NameBd = value;
					this.SendPropertyChanged("NameBd");
					this.OnNameBdChanged();
				}
			}
		}
		
		[Column(Storage="_RegionBd", DbType="NVarChar(40)")]
		public string RegionBd
		{
			get
			{
				return this._RegionBd;
			}
			set
			{
				if ((this._RegionBd != value))
				{
					this.OnRegionBdChanging(value);
					this.SendPropertyChanging();
					this._RegionBd = value;
					this.SendPropertyChanged("RegionBd");
					this.OnRegionBdChanged();
				}
			}
		}
		
		[Column(Storage="_AreaBd", DbType="NVarChar(40)")]
		public string AreaBd
		{
			get
			{
				return this._AreaBd;
			}
			set
			{
				if ((this._AreaBd != value))
				{
					this.OnAreaBdChanging(value);
					this.SendPropertyChanging();
					this._AreaBd = value;
					this.SendPropertyChanged("AreaBd");
					this.OnAreaBdChanged();
				}
			}
		}
		
		[Column(Storage="_JobTitleBd", DbType="NVarChar(150)")]
		public string JobTitleBd
		{
			get
			{
				return this._JobTitleBd;
			}
			set
			{
				if ((this._JobTitleBd != value))
				{
					this.OnJobTitleBdChanging(value);
					this.SendPropertyChanging();
					this._JobTitleBd = value;
					this.SendPropertyChanged("JobTitleBd");
					this.OnJobTitleBdChanged();
				}
			}
		}
		
		[Column(Storage="_WFPartBd", DbType="NVarChar(100)")]
		public string WFPartBd
		{
			get
			{
				return this._WFPartBd;
			}
			set
			{
				if ((this._WFPartBd != value))
				{
					this.OnWFPartBdChanging(value);
					this.SendPropertyChanging();
					this._WFPartBd = value;
					this.SendPropertyChanged("WFPartBd");
					this.OnWFPartBdChanged();
				}
			}
		}
		
		[Column(Storage="_WorkerTypeBd", DbType="NVarChar(100)")]
		public string WorkerTypeBd
		{
			get
			{
				return this._WorkerTypeBd;
			}
			set
			{
				if ((this._WorkerTypeBd != value))
				{
					this.OnWorkerTypeBdChanging(value);
					this.SendPropertyChanging();
					this._WorkerTypeBd = value;
					this.SendPropertyChanged("WorkerTypeBd");
					this.OnWorkerTypeBdChanged();
				}
			}
		}
		
		[Column(Storage="_WorkForceTyBd", DbType="NVarChar(100)")]
		public string WorkForceTyBd
		{
			get
			{
				return this._WorkForceTyBd;
			}
			set
			{
				if ((this._WorkForceTyBd != value))
				{
					this.OnWorkForceTyBdChanging(value);
					this.SendPropertyChanging();
					this._WorkForceTyBd = value;
					this.SendPropertyChanged("WorkForceTyBd");
					this.OnWorkForceTyBdChanged();
				}
			}
		}
		
		[Column(Storage="_DeptNameBd", DbType="NVarChar(100)")]
		public string DeptNameBd
		{
			get
			{
				return this._DeptNameBd;
			}
			set
			{
				if ((this._DeptNameBd != value))
				{
					this.OnDeptNameBdChanging(value);
					this.SendPropertyChanging();
					this._DeptNameBd = value;
					this.SendPropertyChanged("DeptNameBd");
					this.OnDeptNameBdChanged();
				}
			}
		}
		
		[Column(Storage="_WFWhere_1Bd", DbType="NVarChar(100)")]
		public string WFWhere_1Bd
		{
			get
			{
				return this._WFWhere_1Bd;
			}
			set
			{
				if ((this._WFWhere_1Bd != value))
				{
					this.OnWFWhere_1BdChanging(value);
					this.SendPropertyChanging();
					this._WFWhere_1Bd = value;
					this.SendPropertyChanged("WFWhere_1Bd");
					this.OnWFWhere_1BdChanged();
				}
			}
		}
		
		[Column(Storage="_WFWhere_2Bd", DbType="NVarChar(100)")]
		public string WFWhere_2Bd
		{
			get
			{
				return this._WFWhere_2Bd;
			}
			set
			{
				if ((this._WFWhere_2Bd != value))
				{
					this.OnWFWhere_2BdChanging(value);
					this.SendPropertyChanging();
					this._WFWhere_2Bd = value;
					this.SendPropertyChanged("WFWhere_2Bd");
					this.OnWFWhere_2BdChanged();
				}
			}
		}
		
		[Column(Storage="_WFWhereBd", DbType="NVarChar(100)")]
		public string WFWhereBd
		{
			get
			{
				return this._WFWhereBd;
			}
			set
			{
				if ((this._WFWhereBd != value))
				{
					this.OnWFWhereBdChanging(value);
					this.SendPropertyChanging();
					this._WFWhereBd = value;
					this.SendPropertyChanged("WFWhereBd");
					this.OnWFWhereBdChanged();
				}
			}
		}
		
		[Column(Storage="_Sub_Section_FAEBd", DbType="NVarChar(100)")]
		public string Sub_Section_FAEBd
		{
			get
			{
				return this._Sub_Section_FAEBd;
			}
			set
			{
				if ((this._Sub_Section_FAEBd != value))
				{
					this.OnSub_Section_FAEBdChanging(value);
					this.SendPropertyChanging();
					this._Sub_Section_FAEBd = value;
					this.SendPropertyChanged("Sub_Section_FAEBd");
					this.OnSub_Section_FAEBdChanged();
				}
			}
		}
		
		[Column(Storage="_Co_TeamBd", DbType="NVarChar(100)")]
		public string Co_TeamBd
		{
			get
			{
				return this._Co_TeamBd;
			}
			set
			{
				if ((this._Co_TeamBd != value))
				{
					this.OnCo_TeamBdChanging(value);
					this.SendPropertyChanging();
					this._Co_TeamBd = value;
					this.SendPropertyChanged("Co_TeamBd");
					this.OnCo_TeamBdChanged();
				}
			}
		}
		
		[Column(Storage="_CountryBd", DbType="NVarChar(50)")]
		public string CountryBd
		{
			get
			{
				return this._CountryBd;
			}
			set
			{
				if ((this._CountryBd != value))
				{
					this.OnCountryBdChanging(value);
					this.SendPropertyChanging();
					this._CountryBd = value;
					this.SendPropertyChanged("CountryBd");
					this.OnCountryBdChanged();
				}
			}
		}
		
		[Column(Storage="_TownBd", DbType="NVarChar(50)")]
		public string TownBd
		{
			get
			{
				return this._TownBd;
			}
			set
			{
				if ((this._TownBd != value))
				{
					this.OnTownBdChanging(value);
					this.SendPropertyChanging();
					this._TownBd = value;
					this.SendPropertyChanged("TownBd");
					this.OnTownBdChanged();
				}
			}
		}
		
		[Column(Storage="_RecBd", DbType="NVarChar(200)")]
		public string RecBd
		{
			get
			{
				return this._RecBd;
			}
			set
			{
				if ((this._RecBd != value))
				{
					this.OnRecBdChanging(value);
					this.SendPropertyChanging();
					this._RecBd = value;
					this.SendPropertyChanged("RecBd");
					this.OnRecBdChanged();
				}
			}
		}
		
		[Column(Storage="_Vacancy", DbType="NVarChar(100)")]
		public string Vacancy
		{
			get
			{
				return this._Vacancy;
			}
			set
			{
				if ((this._Vacancy != value))
				{
					this.OnVacancyChanging(value);
					this.SendPropertyChanging();
					this._Vacancy = value;
					this.SendPropertyChanged("Vacancy");
					this.OnVacancyChanged();
				}
			}
		}
		
		[Column(Storage="_VacancyDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> VacancyDate
		{
			get
			{
				return this._VacancyDate;
			}
			set
			{
				if ((this._VacancyDate != value))
				{
					this.OnVacancyDateChanging(value);
					this.SendPropertyChanging();
					this._VacancyDate = value;
					this.SendPropertyChanged("VacancyDate");
					this.OnVacancyDateChanged();
				}
			}
		}
		
		[Column(Storage="_Grp", DbType="NVarChar(50)")]
		public string Grp
		{
			get
			{
				return this._Grp;
			}
			set
			{
				if ((this._Grp != value))
				{
					this.OnGrpChanging(value);
					this.SendPropertyChanging();
					this._Grp = value;
					this.SendPropertyChanged("Grp");
					this.OnGrpChanged();
				}
			}
		}
		
		[Column(Storage="_ApprovalEnterByDept", DbType="NVarChar(50)")]
		public string ApprovalEnterByDept
		{
			get
			{
				return this._ApprovalEnterByDept;
			}
			set
			{
				if ((this._ApprovalEnterByDept != value))
				{
					this.OnApprovalEnterByDeptChanging(value);
					this.SendPropertyChanging();
					this._ApprovalEnterByDept = value;
					this.SendPropertyChanged("ApprovalEnterByDept");
					this.OnApprovalEnterByDeptChanged();
				}
			}
		}
		
		[Column(Storage="_ApprovalEnterByHR", DbType="NVarChar(50)")]
		public string ApprovalEnterByHR
		{
			get
			{
				return this._ApprovalEnterByHR;
			}
			set
			{
				if ((this._ApprovalEnterByHR != value))
				{
					this.OnApprovalEnterByHRChanging(value);
					this.SendPropertyChanging();
					this._ApprovalEnterByHR = value;
					this.SendPropertyChanged("ApprovalEnterByHR");
					this.OnApprovalEnterByHRChanged();
				}
			}
		}
		
		[Column(Storage="_ApprovalExitByDept", DbType="NVarChar(50)")]
		public string ApprovalExitByDept
		{
			get
			{
				return this._ApprovalExitByDept;
			}
			set
			{
				if ((this._ApprovalExitByDept != value))
				{
					this.OnApprovalExitByDeptChanging(value);
					this.SendPropertyChanging();
					this._ApprovalExitByDept = value;
					this.SendPropertyChanged("ApprovalExitByDept");
					this.OnApprovalExitByDeptChanged();
				}
			}
		}
		
		[Column(Storage="_ApprovalExitByHR", DbType="NVarChar(50)")]
		public string ApprovalExitByHR
		{
			get
			{
				return this._ApprovalExitByHR;
			}
			set
			{
				if ((this._ApprovalExitByHR != value))
				{
					this.OnApprovalExitByHRChanging(value);
					this.SendPropertyChanging();
					this._ApprovalExitByHR = value;
					this.SendPropertyChanged("ApprovalExitByHR");
					this.OnApprovalExitByHRChanged();
				}
			}
		}
		
		[Column(Storage="_ApprovalTransferByDept", DbType="NVarChar(50)")]
		public string ApprovalTransferByDept
		{
			get
			{
				return this._ApprovalTransferByDept;
			}
			set
			{
				if ((this._ApprovalTransferByDept != value))
				{
					this.OnApprovalTransferByDeptChanging(value);
					this.SendPropertyChanging();
					this._ApprovalTransferByDept = value;
					this.SendPropertyChanged("ApprovalTransferByDept");
					this.OnApprovalTransferByDeptChanged();
				}
			}
		}
		
		[Column(Storage="_ApprovalTransferByHR", DbType="NVarChar(50)")]
		public string ApprovalTransferByHR
		{
			get
			{
				return this._ApprovalTransferByHR;
			}
			set
			{
				if ((this._ApprovalTransferByHR != value))
				{
					this.OnApprovalTransferByHRChanging(value);
					this.SendPropertyChanging();
					this._ApprovalTransferByHR = value;
					this.SendPropertyChanged("ApprovalTransferByHR");
					this.OnApprovalTransferByHRChanged();
				}
			}
		}
		
		[Column(Storage="_RecRole_chn", DbType="NVarChar(200)")]
		public string RecRole_chn
		{
			get
			{
				return this._RecRole_chn;
			}
			set
			{
				if ((this._RecRole_chn != value))
				{
					this.OnRecRole_chnChanging(value);
					this.SendPropertyChanging();
					this._RecRole_chn = value;
					this.SendPropertyChanged("RecRole_chn");
					this.OnRecRole_chnChanged();
				}
			}
		}
		
		[Column(Storage="_SeqNo", DbType="VarChar(12)")]
		public string SeqNo
		{
			get
			{
				return this._SeqNo;
			}
			set
			{
				if ((this._SeqNo != value))
				{
					this.OnSeqNoChanging(value);
					this.SendPropertyChanging();
					this._SeqNo = value;
					this.SendPropertyChanged("SeqNo");
					this.OnSeqNoChanged();
				}
			}
		}
		
		[Column(Storage="_WageType", DbType="VarChar(10)")]
		public string WageType
		{
			get
			{
				return this._WageType;
			}
			set
			{
				if ((this._WageType != value))
				{
					this.OnWageTypeChanging(value);
					this.SendPropertyChanging();
					this._WageType = value;
					this.SendPropertyChanged("WageType");
					this.OnWageTypeChanged();
				}
			}
		}
		
		[Column(Storage="_JobTitleCode", DbType="NVarChar(100)")]
		public string JobTitleCode
		{
			get
			{
				return this._JobTitleCode;
			}
			set
			{
				if ((this._JobTitleCode != value))
				{
					this.OnJobTitleCodeChanging(value);
					this.SendPropertyChanging();
					this._JobTitleCode = value;
					this.SendPropertyChanged("JobTitleCode");
					this.OnJobTitleCodeChanged();
				}
			}
		}
		
		[Column(Storage="_TitleTypeCode", DbType="NVarChar(100)")]
		public string TitleTypeCode
		{
			get
			{
				return this._TitleTypeCode;
			}
			set
			{
				if ((this._TitleTypeCode != value))
				{
					this.OnTitleTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._TitleTypeCode = value;
					this.SendPropertyChanged("TitleTypeCode");
					this.OnTitleTypeCodeChanged();
				}
			}
		}
		
		[Column(Storage="_IsStaff", DbType="Bit")]
		public System.Nullable<bool> IsStaff
		{
			get
			{
				return this._IsStaff;
			}
			set
			{
				if ((this._IsStaff != value))
				{
					this.OnIsStaffChanging(value);
					this.SendPropertyChanging();
					this._IsStaff = value;
					this.SendPropertyChanged("IsStaff");
					this.OnIsStaffChanged();
				}
			}
		}
		
		[Column(Storage="_jobtitle_SeqNo", DbType="VarChar(10)")]
		public string jobtitle_SeqNo
		{
			get
			{
				return this._jobtitle_SeqNo;
			}
			set
			{
				if ((this._jobtitle_SeqNo != value))
				{
					this.Onjobtitle_SeqNoChanging(value);
					this.SendPropertyChanging();
					this._jobtitle_SeqNo = value;
					this.SendPropertyChanged("jobtitle_SeqNo");
					this.Onjobtitle_SeqNoChanged();
				}
			}
		}
		
		[Column(Storage="_WorkRegion", DbType="NVarChar(20)")]
		public string WorkRegion
		{
			get
			{
				return this._WorkRegion;
			}
			set
			{
				if ((this._WorkRegion != value))
				{
					this.OnWorkRegionChanging(value);
					this.SendPropertyChanging();
					this._WorkRegion = value;
					this.SendPropertyChanged("WorkRegion");
					this.OnWorkRegionChanged();
				}
			}
		}
		
		[Column(Storage="_IsProjection", DbType="Bit")]
		public System.Nullable<bool> IsProjection
		{
			get
			{
				return this._IsProjection;
			}
			set
			{
				if ((this._IsProjection != value))
				{
					this.OnIsProjectionChanging(value);
					this.SendPropertyChanging();
					this._IsProjection = value;
					this.SendPropertyChanged("IsProjection");
					this.OnIsProjectionChanged();
				}
			}
		}
		
		[Column(Storage="_RemoteFuncControl", DbType="Bit")]
		public System.Nullable<bool> RemoteFuncControl
		{
			get
			{
				return this._RemoteFuncControl;
			}
			set
			{
				if ((this._RemoteFuncControl != value))
				{
					this.OnRemoteFuncControlChanging(value);
					this.SendPropertyChanging();
					this._RemoteFuncControl = value;
					this.SendPropertyChanged("RemoteFuncControl");
					this.OnRemoteFuncControlChanged();
				}
			}
		}
		
		[Column(Storage="_RemoteFuncSupport", DbType="Bit")]
		public System.Nullable<bool> RemoteFuncSupport
		{
			get
			{
				return this._RemoteFuncSupport;
			}
			set
			{
				if ((this._RemoteFuncSupport != value))
				{
					this.OnRemoteFuncSupportChanging(value);
					this.SendPropertyChanging();
					this._RemoteFuncSupport = value;
					this.SendPropertyChanged("RemoteFuncSupport");
					this.OnRemoteFuncSupportChanged();
				}
			}
		}
		
		[Column(Storage="_FAERef", DbType="NVarChar(1000)")]
		public string FAERef
		{
			get
			{
				return this._FAERef;
			}
			set
			{
				if ((this._FAERef != value))
				{
					this.OnFAERefChanging(value);
					this.SendPropertyChanging();
					this._FAERef = value;
					this.SendPropertyChanged("FAERef");
					this.OnFAERefChanged();
				}
			}
		}
		
		[Column(Storage="_IsDeployment", DbType="Bit")]
		public System.Nullable<bool> IsDeployment
		{
			get
			{
				return this._IsDeployment;
			}
			set
			{
				if ((this._IsDeployment != value))
				{
					this.OnIsDeploymentChanging(value);
					this.SendPropertyChanging();
					this._IsDeployment = value;
					this.SendPropertyChanged("IsDeployment");
					this.OnIsDeploymentChanged();
				}
			}
		}
		
		[Association(Name="WorkForce_OpSkill", Storage="_OpSkills", ThisKey="Id,Factory", OtherKey="Id,Factory")]
		public EntitySet<OpSkill> OpSkills
		{
			get
			{
				return this._OpSkills;
			}
			set
			{
				this._OpSkills.Assign(value);
			}
		}
		
		[Association(Name="WorkForce_WorkForceImg", Storage="_WorkForceImg", ThisKey="Id,Factory", OtherKey="Id,Factory", IsUnique=true, IsForeignKey=false)]
		public WorkForceImg WorkForceImg
		{
			get
			{
				return this._WorkForceImg.Entity;
			}
			set
			{
				WorkForceImg previousValue = this._WorkForceImg.Entity;
				if (((previousValue != value) 
							|| (this._WorkForceImg.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WorkForceImg.Entity = null;
						previousValue.WorkForce = null;
					}
					this._WorkForceImg.Entity = value;
					if ((value != null))
					{
						value.WorkForce = this;
					}
					this.SendPropertyChanged("WorkForceImg");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OpSkills(OpSkill entity)
		{
			this.SendPropertyChanging();
			entity.WorkForce = this;
		}
		
		private void detach_OpSkills(OpSkill entity)
		{
			this.SendPropertyChanging();
			entity.WorkForce = null;
		}
	}
}
#pragma warning restore 1591
