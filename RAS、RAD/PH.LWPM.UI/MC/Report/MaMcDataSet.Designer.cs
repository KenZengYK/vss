//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace PH.LWPM.UI.MC.Report {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("MaMcDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class MaMcDataSet : global::System.Data.DataSet {
        
        private VWMaMcDataTable tableVWMaMc;
        
        private MachineDataTable tableMachine;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public MaMcDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected MaMcDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["VWMaMc"] != null)) {
                    base.Tables.Add(new VWMaMcDataTable(ds.Tables["VWMaMc"]));
                }
                if ((ds.Tables["Machine"] != null)) {
                    base.Tables.Add(new MachineDataTable(ds.Tables["Machine"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public VWMaMcDataTable VWMaMc {
            get {
                return this.tableVWMaMc;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MachineDataTable Machine {
            get {
                return this.tableMachine;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            MaMcDataSet cln = ((MaMcDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["VWMaMc"] != null)) {
                    base.Tables.Add(new VWMaMcDataTable(ds.Tables["VWMaMc"]));
                }
                if ((ds.Tables["Machine"] != null)) {
                    base.Tables.Add(new MachineDataTable(ds.Tables["Machine"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableVWMaMc = ((VWMaMcDataTable)(base.Tables["VWMaMc"]));
            if ((initTable == true)) {
                if ((this.tableVWMaMc != null)) {
                    this.tableVWMaMc.InitVars();
                }
            }
            this.tableMachine = ((MachineDataTable)(base.Tables["Machine"]));
            if ((initTable == true)) {
                if ((this.tableMachine != null)) {
                    this.tableMachine.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "MaMcDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/MaMcDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableVWMaMc = new VWMaMcDataTable();
            base.Tables.Add(this.tableVWMaMc);
            this.tableMachine = new MachineDataTable();
            base.Tables.Add(this.tableMachine);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeVWMaMc() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMachine() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            MaMcDataSet ds = new MaMcDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void VWMaMcRowChangeEventHandler(object sender, VWMaMcRowChangeEvent e);
        
        public delegate void MachineRowChangeEventHandler(object sender, MachineRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class VWMaMcDataTable : global::System.Data.TypedTableBase<VWMaMcRow> {
            
            private global::System.Data.DataColumn columnId;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnLocation;
            
            private global::System.Data.DataColumn columnNextLocation;
            
            private global::System.Data.DataColumn columnFactory;
            
            private global::System.Data.DataColumn columnLine;
            
            private global::System.Data.DataColumn columnNextLine;
            
            private global::System.Data.DataColumn columnType;
            
            private global::System.Data.DataColumn columnBdt;
            
            private global::System.Data.DataColumn columnVndr;
            
            private global::System.Data.DataColumn columnUYear;
            
            private global::System.Data.DataColumn columnType1;
            
            private global::System.Data.DataColumn columnBuyer;
            
            private global::System.Data.DataColumn columnGrp;
            
            private global::System.Data.DataColumn columnType2;
            
            private global::System.Data.DataColumn columnType3;
            
            private global::System.Data.DataColumn columnShop;
            
            private global::System.Data.DataColumn columnNextShop;
            
            private global::System.Data.DataColumn columnShopName;
            
            private global::System.Data.DataColumn columnBOI_Proj1;
            
            private global::System.Data.DataColumn columnBOI_Proj2;
            
            private global::System.Data.DataColumn columnRpm;
            
            private global::System.Data.DataColumn columnBorrow;
            
            private global::System.Data.DataColumn columnOwn;
            
            private global::System.Data.DataColumn columnTypeOfNeedle;
            
            private global::System.Data.DataColumn columnNeedleGauge;
            
            private global::System.Data.DataColumn columnSewingSpeed;
            
            private global::System.Data.DataColumn columnImg;
            
            private global::System.Data.DataColumn columnMarks;
            
            private global::System.Data.DataColumn columnClass;
            
            private global::System.Data.DataColumn columnMcimg;
            
            private global::System.Data.DataColumn columnBrandImg;
            
            private global::System.Data.DataColumn columnMaxSpeed;
            
            private global::System.Data.DataColumn columnASpeed;
            
            private global::System.Data.DataColumn columnCurSpeed;
            
            private global::System.Data.DataColumn columnMaxNeedle;
            
            private global::System.Data.DataColumn columnMaxFeed;
            
            private global::System.Data.DataColumn columnThrTimer;
            
            private global::System.Data.DataColumn columnWfLift;
            
            private global::System.Data.DataColumn columnStitch;
            
            private global::System.Data.DataColumn columnLuboil;
            
            private global::System.Data.DataColumn columnBNeedle;
            
            private global::System.Data.DataColumn columnTNeedle;
            
            private global::System.Data.DataColumn columnCurTNeedle;
            
            private global::System.Data.DataColumn columnGNeedle;
            
            private global::System.Data.DataColumn columncurGNeedle;
            
            private global::System.Data.DataColumn columnOveredge;
            
            private global::System.Data.DataColumn columnpfLift;
            
            private global::System.Data.DataColumn columnDiffRatio;
            
            private global::System.Data.DataColumn columnDiffRatio1;
            
            private global::System.Data.DataColumn columnThread;
            
            private global::System.Data.DataColumn columnSewArea;
            
            private global::System.Data.DataColumn columnSewArea1;
            
            private global::System.Data.DataColumn columnMemo1;
            
            private global::System.Data.DataColumn columnMemo2;
            
            private global::System.Data.DataColumn columnNLift;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VWMaMcDataTable() {
                this.TableName = "VWMaMc";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal VWMaMcDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected VWMaMcDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IdColumn {
                get {
                    return this.columnId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocationColumn {
                get {
                    return this.columnLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NextLocationColumn {
                get {
                    return this.columnNextLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FactoryColumn {
                get {
                    return this.columnFactory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LineColumn {
                get {
                    return this.columnLine;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NextLineColumn {
                get {
                    return this.columnNextLine;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TypeColumn {
                get {
                    return this.columnType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BdtColumn {
                get {
                    return this.columnBdt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VndrColumn {
                get {
                    return this.columnVndr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UYearColumn {
                get {
                    return this.columnUYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Type1Column {
                get {
                    return this.columnType1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BuyerColumn {
                get {
                    return this.columnBuyer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GrpColumn {
                get {
                    return this.columnGrp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Type2Column {
                get {
                    return this.columnType2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Type3Column {
                get {
                    return this.columnType3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShopColumn {
                get {
                    return this.columnShop;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NextShopColumn {
                get {
                    return this.columnNextShop;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShopNameColumn {
                get {
                    return this.columnShopName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BOI_Proj1Column {
                get {
                    return this.columnBOI_Proj1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BOI_Proj2Column {
                get {
                    return this.columnBOI_Proj2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RpmColumn {
                get {
                    return this.columnRpm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BorrowColumn {
                get {
                    return this.columnBorrow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OwnColumn {
                get {
                    return this.columnOwn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TypeOfNeedleColumn {
                get {
                    return this.columnTypeOfNeedle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NeedleGaugeColumn {
                get {
                    return this.columnNeedleGauge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SewingSpeedColumn {
                get {
                    return this.columnSewingSpeed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ImgColumn {
                get {
                    return this.columnImg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MarksColumn {
                get {
                    return this.columnMarks;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClassColumn {
                get {
                    return this.columnClass;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn McimgColumn {
                get {
                    return this.columnMcimg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BrandImgColumn {
                get {
                    return this.columnBrandImg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MaxSpeedColumn {
                get {
                    return this.columnMaxSpeed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ASpeedColumn {
                get {
                    return this.columnASpeed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CurSpeedColumn {
                get {
                    return this.columnCurSpeed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MaxNeedleColumn {
                get {
                    return this.columnMaxNeedle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MaxFeedColumn {
                get {
                    return this.columnMaxFeed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ThrTimerColumn {
                get {
                    return this.columnThrTimer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WfLiftColumn {
                get {
                    return this.columnWfLift;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StitchColumn {
                get {
                    return this.columnStitch;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LuboilColumn {
                get {
                    return this.columnLuboil;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BNeedleColumn {
                get {
                    return this.columnBNeedle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TNeedleColumn {
                get {
                    return this.columnTNeedle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CurTNeedleColumn {
                get {
                    return this.columnCurTNeedle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GNeedleColumn {
                get {
                    return this.columnGNeedle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn curGNeedleColumn {
                get {
                    return this.columncurGNeedle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OveredgeColumn {
                get {
                    return this.columnOveredge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pfLiftColumn {
                get {
                    return this.columnpfLift;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DiffRatioColumn {
                get {
                    return this.columnDiffRatio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DiffRatio1Column {
                get {
                    return this.columnDiffRatio1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ThreadColumn {
                get {
                    return this.columnThread;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SewAreaColumn {
                get {
                    return this.columnSewArea;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SewArea1Column {
                get {
                    return this.columnSewArea1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Memo1Column {
                get {
                    return this.columnMemo1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Memo2Column {
                get {
                    return this.columnMemo2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NLiftColumn {
                get {
                    return this.columnNLift;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VWMaMcRow this[int index] {
                get {
                    return ((VWMaMcRow)(this.Rows[index]));
                }
            }
            
            public event VWMaMcRowChangeEventHandler VWMaMcRowChanging;
            
            public event VWMaMcRowChangeEventHandler VWMaMcRowChanged;
            
            public event VWMaMcRowChangeEventHandler VWMaMcRowDeleting;
            
            public event VWMaMcRowChangeEventHandler VWMaMcRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddVWMaMcRow(VWMaMcRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VWMaMcRow AddVWMaMcRow(
                        string Id, 
                        string Name, 
                        string Location, 
                        string NextLocation, 
                        string Factory, 
                        string Line, 
                        string NextLine, 
                        string Type, 
                        System.DateTime Bdt, 
                        string Vndr, 
                        decimal UYear, 
                        string Type1, 
                        string Buyer, 
                        string Grp, 
                        string Type2, 
                        string Type3, 
                        string Shop, 
                        string NextShop, 
                        string ShopName, 
                        string BOI_Proj1, 
                        string BOI_Proj2, 
                        string Rpm, 
                        string Borrow, 
                        string Own, 
                        string TypeOfNeedle, 
                        string NeedleGauge, 
                        string SewingSpeed, 
                        string Img, 
                        string Marks, 
                        string Class, 
                        byte[] Mcimg, 
                        byte[] BrandImg, 
                        string MaxSpeed, 
                        string ASpeed, 
                        string CurSpeed, 
                        string MaxNeedle, 
                        string MaxFeed, 
                        string ThrTimer, 
                        string WfLift, 
                        string Stitch, 
                        string Luboil, 
                        string BNeedle, 
                        string TNeedle, 
                        string CurTNeedle, 
                        string GNeedle, 
                        string curGNeedle, 
                        string Overedge, 
                        string pfLift, 
                        string DiffRatio, 
                        string DiffRatio1, 
                        int Thread, 
                        string SewArea, 
                        string SewArea1, 
                        string Memo1, 
                        string Memo2, 
                        string NLift) {
                VWMaMcRow rowVWMaMcRow = ((VWMaMcRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Id,
                        Name,
                        Location,
                        NextLocation,
                        Factory,
                        Line,
                        NextLine,
                        Type,
                        Bdt,
                        Vndr,
                        UYear,
                        Type1,
                        Buyer,
                        Grp,
                        Type2,
                        Type3,
                        Shop,
                        NextShop,
                        ShopName,
                        BOI_Proj1,
                        BOI_Proj2,
                        Rpm,
                        Borrow,
                        Own,
                        TypeOfNeedle,
                        NeedleGauge,
                        SewingSpeed,
                        Img,
                        Marks,
                        Class,
                        Mcimg,
                        BrandImg,
                        MaxSpeed,
                        ASpeed,
                        CurSpeed,
                        MaxNeedle,
                        MaxFeed,
                        ThrTimer,
                        WfLift,
                        Stitch,
                        Luboil,
                        BNeedle,
                        TNeedle,
                        CurTNeedle,
                        GNeedle,
                        curGNeedle,
                        Overedge,
                        pfLift,
                        DiffRatio,
                        DiffRatio1,
                        Thread,
                        SewArea,
                        SewArea1,
                        Memo1,
                        Memo2,
                        NLift};
                rowVWMaMcRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowVWMaMcRow);
                return rowVWMaMcRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                VWMaMcDataTable cln = ((VWMaMcDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new VWMaMcDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnId = base.Columns["Id"];
                this.columnName = base.Columns["Name"];
                this.columnLocation = base.Columns["Location"];
                this.columnNextLocation = base.Columns["NextLocation"];
                this.columnFactory = base.Columns["Factory"];
                this.columnLine = base.Columns["Line"];
                this.columnNextLine = base.Columns["NextLine"];
                this.columnType = base.Columns["Type"];
                this.columnBdt = base.Columns["Bdt"];
                this.columnVndr = base.Columns["Vndr"];
                this.columnUYear = base.Columns["UYear"];
                this.columnType1 = base.Columns["Type1"];
                this.columnBuyer = base.Columns["Buyer"];
                this.columnGrp = base.Columns["Grp"];
                this.columnType2 = base.Columns["Type2"];
                this.columnType3 = base.Columns["Type3"];
                this.columnShop = base.Columns["Shop"];
                this.columnNextShop = base.Columns["NextShop"];
                this.columnShopName = base.Columns["ShopName"];
                this.columnBOI_Proj1 = base.Columns["BOI_Proj1"];
                this.columnBOI_Proj2 = base.Columns["BOI_Proj2"];
                this.columnRpm = base.Columns["Rpm"];
                this.columnBorrow = base.Columns["Borrow"];
                this.columnOwn = base.Columns["Own"];
                this.columnTypeOfNeedle = base.Columns["TypeOfNeedle"];
                this.columnNeedleGauge = base.Columns["NeedleGauge"];
                this.columnSewingSpeed = base.Columns["SewingSpeed"];
                this.columnImg = base.Columns["Img"];
                this.columnMarks = base.Columns["Marks"];
                this.columnClass = base.Columns["Class"];
                this.columnMcimg = base.Columns["Mcimg"];
                this.columnBrandImg = base.Columns["BrandImg"];
                this.columnMaxSpeed = base.Columns["MaxSpeed"];
                this.columnASpeed = base.Columns["ASpeed"];
                this.columnCurSpeed = base.Columns["CurSpeed"];
                this.columnMaxNeedle = base.Columns["MaxNeedle"];
                this.columnMaxFeed = base.Columns["MaxFeed"];
                this.columnThrTimer = base.Columns["ThrTimer"];
                this.columnWfLift = base.Columns["WfLift"];
                this.columnStitch = base.Columns["Stitch"];
                this.columnLuboil = base.Columns["Luboil"];
                this.columnBNeedle = base.Columns["BNeedle"];
                this.columnTNeedle = base.Columns["TNeedle"];
                this.columnCurTNeedle = base.Columns["CurTNeedle"];
                this.columnGNeedle = base.Columns["GNeedle"];
                this.columncurGNeedle = base.Columns["curGNeedle"];
                this.columnOveredge = base.Columns["Overedge"];
                this.columnpfLift = base.Columns["pfLift"];
                this.columnDiffRatio = base.Columns["DiffRatio"];
                this.columnDiffRatio1 = base.Columns["DiffRatio1"];
                this.columnThread = base.Columns["Thread"];
                this.columnSewArea = base.Columns["SewArea"];
                this.columnSewArea1 = base.Columns["SewArea1"];
                this.columnMemo1 = base.Columns["Memo1"];
                this.columnMemo2 = base.Columns["Memo2"];
                this.columnNLift = base.Columns["NLift"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnId = new global::System.Data.DataColumn("Id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnLocation = new global::System.Data.DataColumn("Location", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocation);
                this.columnNextLocation = new global::System.Data.DataColumn("NextLocation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNextLocation);
                this.columnFactory = new global::System.Data.DataColumn("Factory", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFactory);
                this.columnLine = new global::System.Data.DataColumn("Line", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLine);
                this.columnNextLine = new global::System.Data.DataColumn("NextLine", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNextLine);
                this.columnType = new global::System.Data.DataColumn("Type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnType);
                this.columnBdt = new global::System.Data.DataColumn("Bdt", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBdt);
                this.columnVndr = new global::System.Data.DataColumn("Vndr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVndr);
                this.columnUYear = new global::System.Data.DataColumn("UYear", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUYear);
                this.columnType1 = new global::System.Data.DataColumn("Type1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnType1);
                this.columnBuyer = new global::System.Data.DataColumn("Buyer", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBuyer);
                this.columnGrp = new global::System.Data.DataColumn("Grp", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrp);
                this.columnType2 = new global::System.Data.DataColumn("Type2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnType2);
                this.columnType3 = new global::System.Data.DataColumn("Type3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnType3);
                this.columnShop = new global::System.Data.DataColumn("Shop", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShop);
                this.columnNextShop = new global::System.Data.DataColumn("NextShop", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNextShop);
                this.columnShopName = new global::System.Data.DataColumn("ShopName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShopName);
                this.columnBOI_Proj1 = new global::System.Data.DataColumn("BOI_Proj1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBOI_Proj1);
                this.columnBOI_Proj2 = new global::System.Data.DataColumn("BOI_Proj2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBOI_Proj2);
                this.columnRpm = new global::System.Data.DataColumn("Rpm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRpm);
                this.columnBorrow = new global::System.Data.DataColumn("Borrow", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBorrow);
                this.columnOwn = new global::System.Data.DataColumn("Own", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOwn);
                this.columnTypeOfNeedle = new global::System.Data.DataColumn("TypeOfNeedle", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTypeOfNeedle);
                this.columnNeedleGauge = new global::System.Data.DataColumn("NeedleGauge", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNeedleGauge);
                this.columnSewingSpeed = new global::System.Data.DataColumn("SewingSpeed", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSewingSpeed);
                this.columnImg = new global::System.Data.DataColumn("Img", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImg);
                this.columnMarks = new global::System.Data.DataColumn("Marks", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMarks);
                this.columnClass = new global::System.Data.DataColumn("Class", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClass);
                this.columnMcimg = new global::System.Data.DataColumn("Mcimg", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMcimg);
                this.columnBrandImg = new global::System.Data.DataColumn("BrandImg", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBrandImg);
                this.columnMaxSpeed = new global::System.Data.DataColumn("MaxSpeed", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaxSpeed);
                this.columnASpeed = new global::System.Data.DataColumn("ASpeed", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnASpeed);
                this.columnCurSpeed = new global::System.Data.DataColumn("CurSpeed", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurSpeed);
                this.columnMaxNeedle = new global::System.Data.DataColumn("MaxNeedle", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaxNeedle);
                this.columnMaxFeed = new global::System.Data.DataColumn("MaxFeed", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaxFeed);
                this.columnThrTimer = new global::System.Data.DataColumn("ThrTimer", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnThrTimer);
                this.columnWfLift = new global::System.Data.DataColumn("WfLift", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWfLift);
                this.columnStitch = new global::System.Data.DataColumn("Stitch", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStitch);
                this.columnLuboil = new global::System.Data.DataColumn("Luboil", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLuboil);
                this.columnBNeedle = new global::System.Data.DataColumn("BNeedle", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBNeedle);
                this.columnTNeedle = new global::System.Data.DataColumn("TNeedle", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTNeedle);
                this.columnCurTNeedle = new global::System.Data.DataColumn("CurTNeedle", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurTNeedle);
                this.columnGNeedle = new global::System.Data.DataColumn("GNeedle", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGNeedle);
                this.columncurGNeedle = new global::System.Data.DataColumn("curGNeedle", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncurGNeedle);
                this.columnOveredge = new global::System.Data.DataColumn("Overedge", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOveredge);
                this.columnpfLift = new global::System.Data.DataColumn("pfLift", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpfLift);
                this.columnDiffRatio = new global::System.Data.DataColumn("DiffRatio", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiffRatio);
                this.columnDiffRatio1 = new global::System.Data.DataColumn("DiffRatio1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiffRatio1);
                this.columnThread = new global::System.Data.DataColumn("Thread", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnThread);
                this.columnSewArea = new global::System.Data.DataColumn("SewArea", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSewArea);
                this.columnSewArea1 = new global::System.Data.DataColumn("SewArea1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSewArea1);
                this.columnMemo1 = new global::System.Data.DataColumn("Memo1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMemo1);
                this.columnMemo2 = new global::System.Data.DataColumn("Memo2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMemo2);
                this.columnNLift = new global::System.Data.DataColumn("NLift", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNLift);
                this.columnId.MaxLength = 10;
                this.columnName.MaxLength = 30;
                this.columnLocation.MaxLength = 10;
                this.columnNextLocation.MaxLength = 10;
                this.columnFactory.MaxLength = 5;
                this.columnLine.MaxLength = 15;
                this.columnNextLine.MaxLength = 15;
                this.columnType.MaxLength = 30;
                this.columnVndr.MaxLength = 20;
                this.columnType1.MaxLength = 30;
                this.columnBuyer.MaxLength = 20;
                this.columnGrp.MaxLength = 50;
                this.columnType2.MaxLength = 50;
                this.columnType3.MaxLength = 50;
                this.columnShop.MaxLength = 10;
                this.columnNextShop.MaxLength = 10;
                this.columnShopName.MaxLength = 30;
                this.columnBOI_Proj1.MaxLength = 50;
                this.columnBOI_Proj2.MaxLength = 50;
                this.columnRpm.MaxLength = 10;
                this.columnBorrow.MaxLength = 20;
                this.columnOwn.MaxLength = 50;
                this.columnTypeOfNeedle.MaxLength = 10;
                this.columnNeedleGauge.MaxLength = 10;
                this.columnSewingSpeed.MaxLength = 10;
                this.columnImg.MaxLength = 80;
                this.columnMarks.MaxLength = 300;
                this.columnClass.MaxLength = 30;
                this.columnMaxSpeed.MaxLength = 15;
                this.columnASpeed.MaxLength = 100;
                this.columnCurSpeed.MaxLength = 10;
                this.columnMaxNeedle.MaxLength = 10;
                this.columnMaxFeed.MaxLength = 50;
                this.columnThrTimer.MaxLength = 10;
                this.columnWfLift.MaxLength = 50;
                this.columnStitch.MaxLength = 50;
                this.columnLuboil.MaxLength = 80;
                this.columnBNeedle.MaxLength = 100;
                this.columnTNeedle.MaxLength = 50;
                this.columnCurTNeedle.MaxLength = 10;
                this.columnGNeedle.MaxLength = 30;
                this.columncurGNeedle.MaxLength = 10;
                this.columnOveredge.MaxLength = 50;
                this.columnpfLift.MaxLength = 100;
                this.columnDiffRatio.MaxLength = 10;
                this.columnDiffRatio1.MaxLength = 10;
                this.columnSewArea.MaxLength = 10;
                this.columnSewArea1.MaxLength = 10;
                this.columnMemo1.MaxLength = 2147483647;
                this.columnMemo2.MaxLength = 2147483647;
                this.columnNLift.MaxLength = 150;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VWMaMcRow NewVWMaMcRow() {
                return ((VWMaMcRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new VWMaMcRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(VWMaMcRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.VWMaMcRowChanged != null)) {
                    this.VWMaMcRowChanged(this, new VWMaMcRowChangeEvent(((VWMaMcRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.VWMaMcRowChanging != null)) {
                    this.VWMaMcRowChanging(this, new VWMaMcRowChangeEvent(((VWMaMcRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.VWMaMcRowDeleted != null)) {
                    this.VWMaMcRowDeleted(this, new VWMaMcRowChangeEvent(((VWMaMcRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.VWMaMcRowDeleting != null)) {
                    this.VWMaMcRowDeleting(this, new VWMaMcRowChangeEvent(((VWMaMcRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveVWMaMcRow(VWMaMcRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MaMcDataSet ds = new MaMcDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "VWMaMcDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MachineDataTable : global::System.Data.TypedTableBase<MachineRow> {
            
            private global::System.Data.DataColumn columnId;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnLocation;
            
            private global::System.Data.DataColumn columnNextLocation;
            
            private global::System.Data.DataColumn columnFactory;
            
            private global::System.Data.DataColumn columnLine;
            
            private global::System.Data.DataColumn columnNextLine;
            
            private global::System.Data.DataColumn columnType;
            
            private global::System.Data.DataColumn columnBdt;
            
            private global::System.Data.DataColumn columnVndr;
            
            private global::System.Data.DataColumn columnUYear;
            
            private global::System.Data.DataColumn columnType1;
            
            private global::System.Data.DataColumn columnBuyer;
            
            private global::System.Data.DataColumn columnGrp;
            
            private global::System.Data.DataColumn columnType2;
            
            private global::System.Data.DataColumn columnType3;
            
            private global::System.Data.DataColumn columnShop;
            
            private global::System.Data.DataColumn columnNextShop;
            
            private global::System.Data.DataColumn columnShopName;
            
            private global::System.Data.DataColumn columnBOI_Proj1;
            
            private global::System.Data.DataColumn columnBOI_Proj2;
            
            private global::System.Data.DataColumn columnRpm;
            
            private global::System.Data.DataColumn columnBorrow;
            
            private global::System.Data.DataColumn columnOwn;
            
            private global::System.Data.DataColumn columnTypeOfNeedle;
            
            private global::System.Data.DataColumn columnNeedleGauge;
            
            private global::System.Data.DataColumn columnSewingSpeed;
            
            private global::System.Data.DataColumn columnImg;
            
            private global::System.Data.DataColumn columnMarks;
            
            private global::System.Data.DataColumn columnClass;
            
            private global::System.Data.DataColumn columnLB3;
            
            private global::System.Data.DataColumn columnLB4;
            
            private global::System.Data.DataColumn columnLB3LB4Sub;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MachineDataTable() {
                this.TableName = "Machine";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MachineDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MachineDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IdColumn {
                get {
                    return this.columnId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocationColumn {
                get {
                    return this.columnLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NextLocationColumn {
                get {
                    return this.columnNextLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FactoryColumn {
                get {
                    return this.columnFactory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LineColumn {
                get {
                    return this.columnLine;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NextLineColumn {
                get {
                    return this.columnNextLine;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TypeColumn {
                get {
                    return this.columnType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BdtColumn {
                get {
                    return this.columnBdt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VndrColumn {
                get {
                    return this.columnVndr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UYearColumn {
                get {
                    return this.columnUYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Type1Column {
                get {
                    return this.columnType1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BuyerColumn {
                get {
                    return this.columnBuyer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GrpColumn {
                get {
                    return this.columnGrp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Type2Column {
                get {
                    return this.columnType2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Type3Column {
                get {
                    return this.columnType3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShopColumn {
                get {
                    return this.columnShop;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NextShopColumn {
                get {
                    return this.columnNextShop;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShopNameColumn {
                get {
                    return this.columnShopName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BOI_Proj1Column {
                get {
                    return this.columnBOI_Proj1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BOI_Proj2Column {
                get {
                    return this.columnBOI_Proj2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RpmColumn {
                get {
                    return this.columnRpm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BorrowColumn {
                get {
                    return this.columnBorrow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OwnColumn {
                get {
                    return this.columnOwn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TypeOfNeedleColumn {
                get {
                    return this.columnTypeOfNeedle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NeedleGaugeColumn {
                get {
                    return this.columnNeedleGauge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SewingSpeedColumn {
                get {
                    return this.columnSewingSpeed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ImgColumn {
                get {
                    return this.columnImg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MarksColumn {
                get {
                    return this.columnMarks;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClassColumn {
                get {
                    return this.columnClass;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LB3Column {
                get {
                    return this.columnLB3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LB4Column {
                get {
                    return this.columnLB4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LB3LB4SubColumn {
                get {
                    return this.columnLB3LB4Sub;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MachineRow this[int index] {
                get {
                    return ((MachineRow)(this.Rows[index]));
                }
            }
            
            public event MachineRowChangeEventHandler MachineRowChanging;
            
            public event MachineRowChangeEventHandler MachineRowChanged;
            
            public event MachineRowChangeEventHandler MachineRowDeleting;
            
            public event MachineRowChangeEventHandler MachineRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMachineRow(MachineRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MachineRow AddMachineRow(
                        string Id, 
                        string Name, 
                        string Location, 
                        string NextLocation, 
                        string Factory, 
                        string Line, 
                        string NextLine, 
                        string Type, 
                        System.DateTime Bdt, 
                        string Vndr, 
                        decimal UYear, 
                        string Type1, 
                        string Buyer, 
                        string Grp, 
                        string Type2, 
                        string Type3, 
                        string Shop, 
                        string NextShop, 
                        string ShopName, 
                        string BOI_Proj1, 
                        string BOI_Proj2, 
                        string Rpm, 
                        string Borrow, 
                        string Own, 
                        string TypeOfNeedle, 
                        string NeedleGauge, 
                        string SewingSpeed, 
                        string Img, 
                        string Marks, 
                        string Class, 
                        int LB3, 
                        int LB4, 
                        string LB3LB4Sub) {
                MachineRow rowMachineRow = ((MachineRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Id,
                        Name,
                        Location,
                        NextLocation,
                        Factory,
                        Line,
                        NextLine,
                        Type,
                        Bdt,
                        Vndr,
                        UYear,
                        Type1,
                        Buyer,
                        Grp,
                        Type2,
                        Type3,
                        Shop,
                        NextShop,
                        ShopName,
                        BOI_Proj1,
                        BOI_Proj2,
                        Rpm,
                        Borrow,
                        Own,
                        TypeOfNeedle,
                        NeedleGauge,
                        SewingSpeed,
                        Img,
                        Marks,
                        Class,
                        LB3,
                        LB4,
                        LB3LB4Sub};
                rowMachineRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMachineRow);
                return rowMachineRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                MachineDataTable cln = ((MachineDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MachineDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnId = base.Columns["Id"];
                this.columnName = base.Columns["Name"];
                this.columnLocation = base.Columns["Location"];
                this.columnNextLocation = base.Columns["NextLocation"];
                this.columnFactory = base.Columns["Factory"];
                this.columnLine = base.Columns["Line"];
                this.columnNextLine = base.Columns["NextLine"];
                this.columnType = base.Columns["Type"];
                this.columnBdt = base.Columns["Bdt"];
                this.columnVndr = base.Columns["Vndr"];
                this.columnUYear = base.Columns["UYear"];
                this.columnType1 = base.Columns["Type1"];
                this.columnBuyer = base.Columns["Buyer"];
                this.columnGrp = base.Columns["Grp"];
                this.columnType2 = base.Columns["Type2"];
                this.columnType3 = base.Columns["Type3"];
                this.columnShop = base.Columns["Shop"];
                this.columnNextShop = base.Columns["NextShop"];
                this.columnShopName = base.Columns["ShopName"];
                this.columnBOI_Proj1 = base.Columns["BOI_Proj1"];
                this.columnBOI_Proj2 = base.Columns["BOI_Proj2"];
                this.columnRpm = base.Columns["Rpm"];
                this.columnBorrow = base.Columns["Borrow"];
                this.columnOwn = base.Columns["Own"];
                this.columnTypeOfNeedle = base.Columns["TypeOfNeedle"];
                this.columnNeedleGauge = base.Columns["NeedleGauge"];
                this.columnSewingSpeed = base.Columns["SewingSpeed"];
                this.columnImg = base.Columns["Img"];
                this.columnMarks = base.Columns["Marks"];
                this.columnClass = base.Columns["Class"];
                this.columnLB3 = base.Columns["LB3"];
                this.columnLB4 = base.Columns["LB4"];
                this.columnLB3LB4Sub = base.Columns["LB3LB4Sub"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnId = new global::System.Data.DataColumn("Id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnLocation = new global::System.Data.DataColumn("Location", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocation);
                this.columnNextLocation = new global::System.Data.DataColumn("NextLocation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNextLocation);
                this.columnFactory = new global::System.Data.DataColumn("Factory", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFactory);
                this.columnLine = new global::System.Data.DataColumn("Line", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLine);
                this.columnNextLine = new global::System.Data.DataColumn("NextLine", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNextLine);
                this.columnType = new global::System.Data.DataColumn("Type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnType);
                this.columnBdt = new global::System.Data.DataColumn("Bdt", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBdt);
                this.columnVndr = new global::System.Data.DataColumn("Vndr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVndr);
                this.columnUYear = new global::System.Data.DataColumn("UYear", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUYear);
                this.columnType1 = new global::System.Data.DataColumn("Type1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnType1);
                this.columnBuyer = new global::System.Data.DataColumn("Buyer", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBuyer);
                this.columnGrp = new global::System.Data.DataColumn("Grp", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrp);
                this.columnType2 = new global::System.Data.DataColumn("Type2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnType2);
                this.columnType3 = new global::System.Data.DataColumn("Type3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnType3);
                this.columnShop = new global::System.Data.DataColumn("Shop", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShop);
                this.columnNextShop = new global::System.Data.DataColumn("NextShop", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNextShop);
                this.columnShopName = new global::System.Data.DataColumn("ShopName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShopName);
                this.columnBOI_Proj1 = new global::System.Data.DataColumn("BOI_Proj1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBOI_Proj1);
                this.columnBOI_Proj2 = new global::System.Data.DataColumn("BOI_Proj2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBOI_Proj2);
                this.columnRpm = new global::System.Data.DataColumn("Rpm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRpm);
                this.columnBorrow = new global::System.Data.DataColumn("Borrow", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBorrow);
                this.columnOwn = new global::System.Data.DataColumn("Own", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOwn);
                this.columnTypeOfNeedle = new global::System.Data.DataColumn("TypeOfNeedle", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTypeOfNeedle);
                this.columnNeedleGauge = new global::System.Data.DataColumn("NeedleGauge", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNeedleGauge);
                this.columnSewingSpeed = new global::System.Data.DataColumn("SewingSpeed", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSewingSpeed);
                this.columnImg = new global::System.Data.DataColumn("Img", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImg);
                this.columnMarks = new global::System.Data.DataColumn("Marks", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMarks);
                this.columnClass = new global::System.Data.DataColumn("Class", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClass);
                this.columnLB3 = new global::System.Data.DataColumn("LB3", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLB3);
                this.columnLB4 = new global::System.Data.DataColumn("LB4", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLB4);
                this.columnLB3LB4Sub = new global::System.Data.DataColumn("LB3LB4Sub", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLB3LB4Sub);
                this.columnId.AllowDBNull = false;
                this.columnId.MaxLength = 10;
                this.columnName.MaxLength = 30;
                this.columnLocation.MaxLength = 10;
                this.columnNextLocation.MaxLength = 10;
                this.columnFactory.MaxLength = 5;
                this.columnLine.MaxLength = 15;
                this.columnNextLine.MaxLength = 15;
                this.columnType.MaxLength = 30;
                this.columnVndr.MaxLength = 20;
                this.columnType1.MaxLength = 30;
                this.columnBuyer.MaxLength = 20;
                this.columnGrp.MaxLength = 50;
                this.columnType2.MaxLength = 50;
                this.columnType3.MaxLength = 50;
                this.columnShop.MaxLength = 10;
                this.columnNextShop.MaxLength = 10;
                this.columnShopName.MaxLength = 30;
                this.columnBOI_Proj1.MaxLength = 50;
                this.columnBOI_Proj2.MaxLength = 50;
                this.columnRpm.MaxLength = 10;
                this.columnBorrow.MaxLength = 20;
                this.columnOwn.MaxLength = 50;
                this.columnTypeOfNeedle.MaxLength = 10;
                this.columnNeedleGauge.MaxLength = 10;
                this.columnSewingSpeed.MaxLength = 10;
                this.columnImg.MaxLength = 80;
                this.columnMarks.MaxLength = 300;
                this.columnClass.MaxLength = 30;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MachineRow NewMachineRow() {
                return ((MachineRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MachineRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(MachineRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MachineRowChanged != null)) {
                    this.MachineRowChanged(this, new MachineRowChangeEvent(((MachineRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MachineRowChanging != null)) {
                    this.MachineRowChanging(this, new MachineRowChangeEvent(((MachineRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MachineRowDeleted != null)) {
                    this.MachineRowDeleted(this, new MachineRowChangeEvent(((MachineRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MachineRowDeleting != null)) {
                    this.MachineRowDeleting(this, new MachineRowChangeEvent(((MachineRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMachineRow(MachineRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MaMcDataSet ds = new MaMcDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MachineDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class VWMaMcRow : global::System.Data.DataRow {
            
            private VWMaMcDataTable tableVWMaMc;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal VWMaMcRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableVWMaMc = ((VWMaMcDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Id {
                get {
                    try {
                        return ((string)(this[this.tableVWMaMc.IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Id\' in table \'VWMaMc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVWMaMc.IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableVWMaMc.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name\' in table \'VWMaMc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVWMaMc.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Location {
                get {
                    try {
                        return ((string)(this[this.tableVWMaMc.LocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Location\' in table \'VWMaMc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVWMaMc.LocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NextLocation {
                get {
                    try {
                        return ((string)(this[this.tableVWMaMc.NextLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NextLocation\' in table \'VWMaMc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVWMaMc.NextLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Factory {
                get {
                    try {
                        return ((string)(this[this.tableVWMaMc.FactoryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Factory\' in table \'VWMaMc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVWMaMc.FactoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Line {
                get {
                    try {
                        return ((string)(this[this.tableVWMaMc.LineColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Line\' in table \'VWMaMc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVWMaMc.LineColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NextLine {
                get {
                    try {
                        return ((string)(this[this.tableVWMaMc.NextLineColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NextLine\' in table \'VWMaMc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVWMaMc.NextLineColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Type {
                get {
                    try {
                        return ((string)(this[this.tableVWMaMc.TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Type\' in table \'VWMaMc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVWMaMc.TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Bdt {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableVWMaMc.BdtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bdt\' in table \'VWMaMc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVWMaMc.BdtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Vndr {
                get {
                    try {
                        return ((string)(this[this.tableVWMaMc.VndrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Vndr\' in table \'VWMaMc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVWMaMc.VndrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal UYear {
                get {
                    try {
                        return ((decimal)(this[this.tableVWMaMc.UYearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UYear\' in table \'VWMaMc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVWMaMc.UYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Type1 {
                get {
                    try {
                        return ((string)(this[this.tableVWMaMc.Type1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Type1\' in table \'VWMaMc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVWMaMc.Type1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Buyer {
                get {
                    try {
                        return ((string)(this[this.tableVWMaMc.BuyerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Buyer\' in table \'VWMaMc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVWMaMc.BuyerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Grp {
                get {
                    try {
                        return ((string)(this[this.tableVWMaMc.GrpColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Grp\' in table \'VWMaMc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVWMaMc.GrpColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Type2 {
                get {
                    try {
                        return ((string)(this[this.tableVWMaMc.Type2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Type2\' in table \'VWMaMc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVWMaMc.Type2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Type3 {
                get {
                    try {
                        return ((string)(this[this.tableVWMaMc.Type3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Type3\' in table \'VWMaMc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVWMaMc.Type3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Shop {
                get {
                    try {
                        return ((string)(this[this.tableVWMaMc.ShopColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Shop\' in table \'VWMaMc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVWMaMc.ShopColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NextShop {
                get {
                    try {
                        return ((string)(this[this.tableVWMaMc.NextShopColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NextShop\' in table \'VWMaMc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVWMaMc.NextShopColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ShopName {
                get {
                    try {
                        return ((string)(this[this.tableVWMaMc.ShopNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShopName\' in table \'VWMaMc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVWMaMc.ShopNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BOI_Proj1 {
                get {
                    try {
                        return ((string)(this[this.tableVWMaMc.BOI_Proj1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BOI_Proj1\' in table \'VWMaMc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVWMaMc.BOI_Proj1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BOI_Proj2 {
                get {
                    try {
                        return ((string)(this[this.tableVWMaMc.BOI_Proj2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BOI_Proj2\' in table \'VWMaMc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVWMaMc.BOI_Proj2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Rpm {
                get {
                    try {
                        return ((string)(this[this.tableVWMaMc.RpmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Rpm\' in table \'VWMaMc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVWMaMc.RpmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Borrow {
                get {
                    try {
                        return ((string)(this[this.tableVWMaMc.BorrowColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Borrow\' in table \'VWMaMc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVWMaMc.BorrowColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Own {
                get {
                    try {
                        return ((string)(this[this.tableVWMaMc.OwnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Own\' in table \'VWMaMc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVWMaMc.OwnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TypeOfNeedle {
                get {
                    try {
                        return ((string)(this[this.tableVWMaMc.TypeOfNeedleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TypeOfNeedle\' in table \'VWMaMc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVWMaMc.TypeOfNeedleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NeedleGauge {
                get {
                    try {
                        return ((string)(this[this.tableVWMaMc.NeedleGaugeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NeedleGauge\' in table \'VWMaMc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVWMaMc.NeedleGaugeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SewingSpeed {
                get {
                    try {
                        return ((string)(this[this.tableVWMaMc.SewingSpeedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SewingSpeed\' in table \'VWMaMc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVWMaMc.SewingSpeedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Img {
                get {
                    try {
                        return ((string)(this[this.tableVWMaMc.ImgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Img\' in table \'VWMaMc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVWMaMc.ImgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Marks {
                get {
                    try {
                        return ((string)(this[this.tableVWMaMc.MarksColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Marks\' in table \'VWMaMc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVWMaMc.MarksColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Class {
                get {
                    try {
                        return ((string)(this[this.tableVWMaMc.ClassColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Class\' in table \'VWMaMc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVWMaMc.ClassColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] Mcimg {
                get {
                    try {
                        return ((byte[])(this[this.tableVWMaMc.McimgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Mcimg\' in table \'VWMaMc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVWMaMc.McimgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] BrandImg {
                get {
                    try {
                        return ((byte[])(this[this.tableVWMaMc.BrandImgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BrandImg\' in table \'VWMaMc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVWMaMc.BrandImgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaxSpeed {
                get {
                    try {
                        return ((string)(this[this.tableVWMaMc.MaxSpeedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaxSpeed\' in table \'VWMaMc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVWMaMc.MaxSpeedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ASpeed {
                get {
                    try {
                        return ((string)(this[this.tableVWMaMc.ASpeedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ASpeed\' in table \'VWMaMc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVWMaMc.ASpeedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CurSpeed {
                get {
                    try {
                        return ((string)(this[this.tableVWMaMc.CurSpeedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurSpeed\' in table \'VWMaMc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVWMaMc.CurSpeedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaxNeedle {
                get {
                    try {
                        return ((string)(this[this.tableVWMaMc.MaxNeedleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaxNeedle\' in table \'VWMaMc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVWMaMc.MaxNeedleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaxFeed {
                get {
                    try {
                        return ((string)(this[this.tableVWMaMc.MaxFeedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaxFeed\' in table \'VWMaMc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVWMaMc.MaxFeedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ThrTimer {
                get {
                    try {
                        return ((string)(this[this.tableVWMaMc.ThrTimerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ThrTimer\' in table \'VWMaMc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVWMaMc.ThrTimerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WfLift {
                get {
                    try {
                        return ((string)(this[this.tableVWMaMc.WfLiftColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WfLift\' in table \'VWMaMc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVWMaMc.WfLiftColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Stitch {
                get {
                    try {
                        return ((string)(this[this.tableVWMaMc.StitchColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Stitch\' in table \'VWMaMc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVWMaMc.StitchColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Luboil {
                get {
                    try {
                        return ((string)(this[this.tableVWMaMc.LuboilColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Luboil\' in table \'VWMaMc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVWMaMc.LuboilColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BNeedle {
                get {
                    try {
                        return ((string)(this[this.tableVWMaMc.BNeedleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BNeedle\' in table \'VWMaMc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVWMaMc.BNeedleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TNeedle {
                get {
                    try {
                        return ((string)(this[this.tableVWMaMc.TNeedleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TNeedle\' in table \'VWMaMc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVWMaMc.TNeedleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CurTNeedle {
                get {
                    try {
                        return ((string)(this[this.tableVWMaMc.CurTNeedleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurTNeedle\' in table \'VWMaMc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVWMaMc.CurTNeedleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GNeedle {
                get {
                    try {
                        return ((string)(this[this.tableVWMaMc.GNeedleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GNeedle\' in table \'VWMaMc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVWMaMc.GNeedleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string curGNeedle {
                get {
                    try {
                        return ((string)(this[this.tableVWMaMc.curGNeedleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'curGNeedle\' in table \'VWMaMc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVWMaMc.curGNeedleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Overedge {
                get {
                    try {
                        return ((string)(this[this.tableVWMaMc.OveredgeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Overedge\' in table \'VWMaMc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVWMaMc.OveredgeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string pfLift {
                get {
                    try {
                        return ((string)(this[this.tableVWMaMc.pfLiftColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'pfLift\' in table \'VWMaMc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVWMaMc.pfLiftColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DiffRatio {
                get {
                    try {
                        return ((string)(this[this.tableVWMaMc.DiffRatioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DiffRatio\' in table \'VWMaMc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVWMaMc.DiffRatioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DiffRatio1 {
                get {
                    try {
                        return ((string)(this[this.tableVWMaMc.DiffRatio1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DiffRatio1\' in table \'VWMaMc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVWMaMc.DiffRatio1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Thread {
                get {
                    try {
                        return ((int)(this[this.tableVWMaMc.ThreadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Thread\' in table \'VWMaMc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVWMaMc.ThreadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SewArea {
                get {
                    try {
                        return ((string)(this[this.tableVWMaMc.SewAreaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SewArea\' in table \'VWMaMc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVWMaMc.SewAreaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SewArea1 {
                get {
                    try {
                        return ((string)(this[this.tableVWMaMc.SewArea1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SewArea1\' in table \'VWMaMc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVWMaMc.SewArea1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Memo1 {
                get {
                    try {
                        return ((string)(this[this.tableVWMaMc.Memo1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Memo1\' in table \'VWMaMc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVWMaMc.Memo1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Memo2 {
                get {
                    try {
                        return ((string)(this[this.tableVWMaMc.Memo2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Memo2\' in table \'VWMaMc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVWMaMc.Memo2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NLift {
                get {
                    try {
                        return ((string)(this[this.tableVWMaMc.NLiftColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NLift\' in table \'VWMaMc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVWMaMc.NLiftColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIdNull() {
                return this.IsNull(this.tableVWMaMc.IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIdNull() {
                this[this.tableVWMaMc.IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNameNull() {
                return this.IsNull(this.tableVWMaMc.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNameNull() {
                this[this.tableVWMaMc.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocationNull() {
                return this.IsNull(this.tableVWMaMc.LocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocationNull() {
                this[this.tableVWMaMc.LocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNextLocationNull() {
                return this.IsNull(this.tableVWMaMc.NextLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNextLocationNull() {
                this[this.tableVWMaMc.NextLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFactoryNull() {
                return this.IsNull(this.tableVWMaMc.FactoryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFactoryNull() {
                this[this.tableVWMaMc.FactoryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLineNull() {
                return this.IsNull(this.tableVWMaMc.LineColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLineNull() {
                this[this.tableVWMaMc.LineColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNextLineNull() {
                return this.IsNull(this.tableVWMaMc.NextLineColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNextLineNull() {
                this[this.tableVWMaMc.NextLineColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTypeNull() {
                return this.IsNull(this.tableVWMaMc.TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTypeNull() {
                this[this.tableVWMaMc.TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBdtNull() {
                return this.IsNull(this.tableVWMaMc.BdtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBdtNull() {
                this[this.tableVWMaMc.BdtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVndrNull() {
                return this.IsNull(this.tableVWMaMc.VndrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVndrNull() {
                this[this.tableVWMaMc.VndrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUYearNull() {
                return this.IsNull(this.tableVWMaMc.UYearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUYearNull() {
                this[this.tableVWMaMc.UYearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsType1Null() {
                return this.IsNull(this.tableVWMaMc.Type1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetType1Null() {
                this[this.tableVWMaMc.Type1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBuyerNull() {
                return this.IsNull(this.tableVWMaMc.BuyerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBuyerNull() {
                this[this.tableVWMaMc.BuyerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGrpNull() {
                return this.IsNull(this.tableVWMaMc.GrpColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGrpNull() {
                this[this.tableVWMaMc.GrpColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsType2Null() {
                return this.IsNull(this.tableVWMaMc.Type2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetType2Null() {
                this[this.tableVWMaMc.Type2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsType3Null() {
                return this.IsNull(this.tableVWMaMc.Type3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetType3Null() {
                this[this.tableVWMaMc.Type3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShopNull() {
                return this.IsNull(this.tableVWMaMc.ShopColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShopNull() {
                this[this.tableVWMaMc.ShopColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNextShopNull() {
                return this.IsNull(this.tableVWMaMc.NextShopColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNextShopNull() {
                this[this.tableVWMaMc.NextShopColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShopNameNull() {
                return this.IsNull(this.tableVWMaMc.ShopNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShopNameNull() {
                this[this.tableVWMaMc.ShopNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBOI_Proj1Null() {
                return this.IsNull(this.tableVWMaMc.BOI_Proj1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBOI_Proj1Null() {
                this[this.tableVWMaMc.BOI_Proj1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBOI_Proj2Null() {
                return this.IsNull(this.tableVWMaMc.BOI_Proj2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBOI_Proj2Null() {
                this[this.tableVWMaMc.BOI_Proj2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRpmNull() {
                return this.IsNull(this.tableVWMaMc.RpmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRpmNull() {
                this[this.tableVWMaMc.RpmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBorrowNull() {
                return this.IsNull(this.tableVWMaMc.BorrowColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBorrowNull() {
                this[this.tableVWMaMc.BorrowColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOwnNull() {
                return this.IsNull(this.tableVWMaMc.OwnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOwnNull() {
                this[this.tableVWMaMc.OwnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTypeOfNeedleNull() {
                return this.IsNull(this.tableVWMaMc.TypeOfNeedleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTypeOfNeedleNull() {
                this[this.tableVWMaMc.TypeOfNeedleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNeedleGaugeNull() {
                return this.IsNull(this.tableVWMaMc.NeedleGaugeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNeedleGaugeNull() {
                this[this.tableVWMaMc.NeedleGaugeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSewingSpeedNull() {
                return this.IsNull(this.tableVWMaMc.SewingSpeedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSewingSpeedNull() {
                this[this.tableVWMaMc.SewingSpeedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsImgNull() {
                return this.IsNull(this.tableVWMaMc.ImgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetImgNull() {
                this[this.tableVWMaMc.ImgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMarksNull() {
                return this.IsNull(this.tableVWMaMc.MarksColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMarksNull() {
                this[this.tableVWMaMc.MarksColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClassNull() {
                return this.IsNull(this.tableVWMaMc.ClassColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClassNull() {
                this[this.tableVWMaMc.ClassColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMcimgNull() {
                return this.IsNull(this.tableVWMaMc.McimgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMcimgNull() {
                this[this.tableVWMaMc.McimgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBrandImgNull() {
                return this.IsNull(this.tableVWMaMc.BrandImgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBrandImgNull() {
                this[this.tableVWMaMc.BrandImgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMaxSpeedNull() {
                return this.IsNull(this.tableVWMaMc.MaxSpeedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMaxSpeedNull() {
                this[this.tableVWMaMc.MaxSpeedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsASpeedNull() {
                return this.IsNull(this.tableVWMaMc.ASpeedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetASpeedNull() {
                this[this.tableVWMaMc.ASpeedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCurSpeedNull() {
                return this.IsNull(this.tableVWMaMc.CurSpeedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCurSpeedNull() {
                this[this.tableVWMaMc.CurSpeedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMaxNeedleNull() {
                return this.IsNull(this.tableVWMaMc.MaxNeedleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMaxNeedleNull() {
                this[this.tableVWMaMc.MaxNeedleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMaxFeedNull() {
                return this.IsNull(this.tableVWMaMc.MaxFeedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMaxFeedNull() {
                this[this.tableVWMaMc.MaxFeedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsThrTimerNull() {
                return this.IsNull(this.tableVWMaMc.ThrTimerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetThrTimerNull() {
                this[this.tableVWMaMc.ThrTimerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWfLiftNull() {
                return this.IsNull(this.tableVWMaMc.WfLiftColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWfLiftNull() {
                this[this.tableVWMaMc.WfLiftColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStitchNull() {
                return this.IsNull(this.tableVWMaMc.StitchColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStitchNull() {
                this[this.tableVWMaMc.StitchColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLuboilNull() {
                return this.IsNull(this.tableVWMaMc.LuboilColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLuboilNull() {
                this[this.tableVWMaMc.LuboilColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBNeedleNull() {
                return this.IsNull(this.tableVWMaMc.BNeedleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBNeedleNull() {
                this[this.tableVWMaMc.BNeedleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTNeedleNull() {
                return this.IsNull(this.tableVWMaMc.TNeedleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTNeedleNull() {
                this[this.tableVWMaMc.TNeedleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCurTNeedleNull() {
                return this.IsNull(this.tableVWMaMc.CurTNeedleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCurTNeedleNull() {
                this[this.tableVWMaMc.CurTNeedleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGNeedleNull() {
                return this.IsNull(this.tableVWMaMc.GNeedleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGNeedleNull() {
                this[this.tableVWMaMc.GNeedleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscurGNeedleNull() {
                return this.IsNull(this.tableVWMaMc.curGNeedleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcurGNeedleNull() {
                this[this.tableVWMaMc.curGNeedleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOveredgeNull() {
                return this.IsNull(this.tableVWMaMc.OveredgeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOveredgeNull() {
                this[this.tableVWMaMc.OveredgeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspfLiftNull() {
                return this.IsNull(this.tableVWMaMc.pfLiftColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpfLiftNull() {
                this[this.tableVWMaMc.pfLiftColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDiffRatioNull() {
                return this.IsNull(this.tableVWMaMc.DiffRatioColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDiffRatioNull() {
                this[this.tableVWMaMc.DiffRatioColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDiffRatio1Null() {
                return this.IsNull(this.tableVWMaMc.DiffRatio1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDiffRatio1Null() {
                this[this.tableVWMaMc.DiffRatio1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsThreadNull() {
                return this.IsNull(this.tableVWMaMc.ThreadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetThreadNull() {
                this[this.tableVWMaMc.ThreadColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSewAreaNull() {
                return this.IsNull(this.tableVWMaMc.SewAreaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSewAreaNull() {
                this[this.tableVWMaMc.SewAreaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSewArea1Null() {
                return this.IsNull(this.tableVWMaMc.SewArea1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSewArea1Null() {
                this[this.tableVWMaMc.SewArea1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMemo1Null() {
                return this.IsNull(this.tableVWMaMc.Memo1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMemo1Null() {
                this[this.tableVWMaMc.Memo1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMemo2Null() {
                return this.IsNull(this.tableVWMaMc.Memo2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMemo2Null() {
                this[this.tableVWMaMc.Memo2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNLiftNull() {
                return this.IsNull(this.tableVWMaMc.NLiftColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNLiftNull() {
                this[this.tableVWMaMc.NLiftColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MachineRow : global::System.Data.DataRow {
            
            private MachineDataTable tableMachine;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MachineRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMachine = ((MachineDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Id {
                get {
                    return ((string)(this[this.tableMachine.IdColumn]));
                }
                set {
                    this[this.tableMachine.IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableMachine.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name\' in table \'Machine\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachine.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Location {
                get {
                    try {
                        return ((string)(this[this.tableMachine.LocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Location\' in table \'Machine\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachine.LocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NextLocation {
                get {
                    try {
                        return ((string)(this[this.tableMachine.NextLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NextLocation\' in table \'Machine\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachine.NextLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Factory {
                get {
                    try {
                        return ((string)(this[this.tableMachine.FactoryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Factory\' in table \'Machine\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachine.FactoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Line {
                get {
                    try {
                        return ((string)(this[this.tableMachine.LineColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Line\' in table \'Machine\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachine.LineColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NextLine {
                get {
                    try {
                        return ((string)(this[this.tableMachine.NextLineColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NextLine\' in table \'Machine\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachine.NextLineColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Type {
                get {
                    try {
                        return ((string)(this[this.tableMachine.TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Type\' in table \'Machine\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachine.TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Bdt {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMachine.BdtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bdt\' in table \'Machine\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachine.BdtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Vndr {
                get {
                    try {
                        return ((string)(this[this.tableMachine.VndrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Vndr\' in table \'Machine\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachine.VndrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal UYear {
                get {
                    try {
                        return ((decimal)(this[this.tableMachine.UYearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UYear\' in table \'Machine\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachine.UYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Type1 {
                get {
                    try {
                        return ((string)(this[this.tableMachine.Type1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Type1\' in table \'Machine\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachine.Type1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Buyer {
                get {
                    try {
                        return ((string)(this[this.tableMachine.BuyerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Buyer\' in table \'Machine\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachine.BuyerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Grp {
                get {
                    try {
                        return ((string)(this[this.tableMachine.GrpColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Grp\' in table \'Machine\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachine.GrpColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Type2 {
                get {
                    try {
                        return ((string)(this[this.tableMachine.Type2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Type2\' in table \'Machine\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachine.Type2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Type3 {
                get {
                    try {
                        return ((string)(this[this.tableMachine.Type3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Type3\' in table \'Machine\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachine.Type3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Shop {
                get {
                    try {
                        return ((string)(this[this.tableMachine.ShopColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Shop\' in table \'Machine\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachine.ShopColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NextShop {
                get {
                    try {
                        return ((string)(this[this.tableMachine.NextShopColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NextShop\' in table \'Machine\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachine.NextShopColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ShopName {
                get {
                    try {
                        return ((string)(this[this.tableMachine.ShopNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShopName\' in table \'Machine\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachine.ShopNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BOI_Proj1 {
                get {
                    try {
                        return ((string)(this[this.tableMachine.BOI_Proj1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BOI_Proj1\' in table \'Machine\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachine.BOI_Proj1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BOI_Proj2 {
                get {
                    try {
                        return ((string)(this[this.tableMachine.BOI_Proj2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BOI_Proj2\' in table \'Machine\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachine.BOI_Proj2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Rpm {
                get {
                    try {
                        return ((string)(this[this.tableMachine.RpmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Rpm\' in table \'Machine\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachine.RpmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Borrow {
                get {
                    try {
                        return ((string)(this[this.tableMachine.BorrowColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Borrow\' in table \'Machine\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachine.BorrowColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Own {
                get {
                    try {
                        return ((string)(this[this.tableMachine.OwnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Own\' in table \'Machine\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachine.OwnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TypeOfNeedle {
                get {
                    try {
                        return ((string)(this[this.tableMachine.TypeOfNeedleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TypeOfNeedle\' in table \'Machine\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachine.TypeOfNeedleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NeedleGauge {
                get {
                    try {
                        return ((string)(this[this.tableMachine.NeedleGaugeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NeedleGauge\' in table \'Machine\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachine.NeedleGaugeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SewingSpeed {
                get {
                    try {
                        return ((string)(this[this.tableMachine.SewingSpeedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SewingSpeed\' in table \'Machine\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachine.SewingSpeedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Img {
                get {
                    try {
                        return ((string)(this[this.tableMachine.ImgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Img\' in table \'Machine\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachine.ImgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Marks {
                get {
                    try {
                        return ((string)(this[this.tableMachine.MarksColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Marks\' in table \'Machine\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachine.MarksColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Class {
                get {
                    try {
                        return ((string)(this[this.tableMachine.ClassColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Class\' in table \'Machine\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachine.ClassColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LB3 {
                get {
                    try {
                        return ((int)(this[this.tableMachine.LB3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LB3\' in table \'Machine\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachine.LB3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LB4 {
                get {
                    try {
                        return ((int)(this[this.tableMachine.LB4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LB4\' in table \'Machine\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachine.LB4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LB3LB4Sub {
                get {
                    try {
                        return ((string)(this[this.tableMachine.LB3LB4SubColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LB3LB4Sub\' in table \'Machine\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachine.LB3LB4SubColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNameNull() {
                return this.IsNull(this.tableMachine.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNameNull() {
                this[this.tableMachine.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocationNull() {
                return this.IsNull(this.tableMachine.LocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocationNull() {
                this[this.tableMachine.LocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNextLocationNull() {
                return this.IsNull(this.tableMachine.NextLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNextLocationNull() {
                this[this.tableMachine.NextLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFactoryNull() {
                return this.IsNull(this.tableMachine.FactoryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFactoryNull() {
                this[this.tableMachine.FactoryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLineNull() {
                return this.IsNull(this.tableMachine.LineColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLineNull() {
                this[this.tableMachine.LineColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNextLineNull() {
                return this.IsNull(this.tableMachine.NextLineColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNextLineNull() {
                this[this.tableMachine.NextLineColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTypeNull() {
                return this.IsNull(this.tableMachine.TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTypeNull() {
                this[this.tableMachine.TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBdtNull() {
                return this.IsNull(this.tableMachine.BdtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBdtNull() {
                this[this.tableMachine.BdtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVndrNull() {
                return this.IsNull(this.tableMachine.VndrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVndrNull() {
                this[this.tableMachine.VndrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUYearNull() {
                return this.IsNull(this.tableMachine.UYearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUYearNull() {
                this[this.tableMachine.UYearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsType1Null() {
                return this.IsNull(this.tableMachine.Type1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetType1Null() {
                this[this.tableMachine.Type1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBuyerNull() {
                return this.IsNull(this.tableMachine.BuyerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBuyerNull() {
                this[this.tableMachine.BuyerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGrpNull() {
                return this.IsNull(this.tableMachine.GrpColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGrpNull() {
                this[this.tableMachine.GrpColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsType2Null() {
                return this.IsNull(this.tableMachine.Type2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetType2Null() {
                this[this.tableMachine.Type2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsType3Null() {
                return this.IsNull(this.tableMachine.Type3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetType3Null() {
                this[this.tableMachine.Type3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShopNull() {
                return this.IsNull(this.tableMachine.ShopColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShopNull() {
                this[this.tableMachine.ShopColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNextShopNull() {
                return this.IsNull(this.tableMachine.NextShopColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNextShopNull() {
                this[this.tableMachine.NextShopColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShopNameNull() {
                return this.IsNull(this.tableMachine.ShopNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShopNameNull() {
                this[this.tableMachine.ShopNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBOI_Proj1Null() {
                return this.IsNull(this.tableMachine.BOI_Proj1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBOI_Proj1Null() {
                this[this.tableMachine.BOI_Proj1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBOI_Proj2Null() {
                return this.IsNull(this.tableMachine.BOI_Proj2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBOI_Proj2Null() {
                this[this.tableMachine.BOI_Proj2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRpmNull() {
                return this.IsNull(this.tableMachine.RpmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRpmNull() {
                this[this.tableMachine.RpmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBorrowNull() {
                return this.IsNull(this.tableMachine.BorrowColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBorrowNull() {
                this[this.tableMachine.BorrowColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOwnNull() {
                return this.IsNull(this.tableMachine.OwnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOwnNull() {
                this[this.tableMachine.OwnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTypeOfNeedleNull() {
                return this.IsNull(this.tableMachine.TypeOfNeedleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTypeOfNeedleNull() {
                this[this.tableMachine.TypeOfNeedleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNeedleGaugeNull() {
                return this.IsNull(this.tableMachine.NeedleGaugeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNeedleGaugeNull() {
                this[this.tableMachine.NeedleGaugeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSewingSpeedNull() {
                return this.IsNull(this.tableMachine.SewingSpeedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSewingSpeedNull() {
                this[this.tableMachine.SewingSpeedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsImgNull() {
                return this.IsNull(this.tableMachine.ImgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetImgNull() {
                this[this.tableMachine.ImgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMarksNull() {
                return this.IsNull(this.tableMachine.MarksColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMarksNull() {
                this[this.tableMachine.MarksColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClassNull() {
                return this.IsNull(this.tableMachine.ClassColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClassNull() {
                this[this.tableMachine.ClassColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLB3Null() {
                return this.IsNull(this.tableMachine.LB3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLB3Null() {
                this[this.tableMachine.LB3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLB4Null() {
                return this.IsNull(this.tableMachine.LB4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLB4Null() {
                this[this.tableMachine.LB4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLB3LB4SubNull() {
                return this.IsNull(this.tableMachine.LB3LB4SubColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLB3LB4SubNull() {
                this[this.tableMachine.LB3LB4SubColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class VWMaMcRowChangeEvent : global::System.EventArgs {
            
            private VWMaMcRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VWMaMcRowChangeEvent(VWMaMcRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VWMaMcRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MachineRowChangeEvent : global::System.EventArgs {
            
            private MachineRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MachineRowChangeEvent(MachineRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MachineRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591