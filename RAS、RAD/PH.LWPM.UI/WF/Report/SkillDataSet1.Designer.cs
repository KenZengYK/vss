//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5485
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace PH.LWPM.UI.WF.Report {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("SkillDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class SkillDataSet : global::System.Data.DataSet {
        
        private WorkForceDataTable tableWorkForce;
        
        private OpSkillDataTable tableOpSkill;
        
        private global::System.Data.DataRelation relationFK_OpSkill_WorkForce;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public SkillDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected SkillDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["WorkForce"] != null)) {
                    base.Tables.Add(new WorkForceDataTable(ds.Tables["WorkForce"]));
                }
                if ((ds.Tables["OpSkill"] != null)) {
                    base.Tables.Add(new OpSkillDataTable(ds.Tables["OpSkill"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public WorkForceDataTable WorkForce {
            get {
                return this.tableWorkForce;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public OpSkillDataTable OpSkill {
            get {
                return this.tableOpSkill;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            SkillDataSet cln = ((SkillDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["WorkForce"] != null)) {
                    base.Tables.Add(new WorkForceDataTable(ds.Tables["WorkForce"]));
                }
                if ((ds.Tables["OpSkill"] != null)) {
                    base.Tables.Add(new OpSkillDataTable(ds.Tables["OpSkill"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableWorkForce = ((WorkForceDataTable)(base.Tables["WorkForce"]));
            if ((initTable == true)) {
                if ((this.tableWorkForce != null)) {
                    this.tableWorkForce.InitVars();
                }
            }
            this.tableOpSkill = ((OpSkillDataTable)(base.Tables["OpSkill"]));
            if ((initTable == true)) {
                if ((this.tableOpSkill != null)) {
                    this.tableOpSkill.InitVars();
                }
            }
            this.relationFK_OpSkill_WorkForce = this.Relations["FK_OpSkill_WorkForce"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "SkillDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/SkillDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableWorkForce = new WorkForceDataTable();
            base.Tables.Add(this.tableWorkForce);
            this.tableOpSkill = new OpSkillDataTable();
            base.Tables.Add(this.tableOpSkill);
            this.relationFK_OpSkill_WorkForce = new global::System.Data.DataRelation("FK_OpSkill_WorkForce", new global::System.Data.DataColumn[] {
                        this.tableWorkForce.IdColumn,
                        this.tableWorkForce.FactoryColumn}, new global::System.Data.DataColumn[] {
                        this.tableOpSkill.IdColumn,
                        this.tableOpSkill.FactoryColumn}, false);
            this.Relations.Add(this.relationFK_OpSkill_WorkForce);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeWorkForce() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeOpSkill() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            SkillDataSet ds = new SkillDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void WorkForceRowChangeEventHandler(object sender, WorkForceRowChangeEvent e);
        
        public delegate void OpSkillRowChangeEventHandler(object sender, OpSkillRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class WorkForceDataTable : global::System.Data.TypedTableBase<WorkForceRow> {
            
            private global::System.Data.DataColumn columnId;
            
            private global::System.Data.DataColumn columnNameCn;
            
            private global::System.Data.DataColumn columnNameEn;
            
            private global::System.Data.DataColumn columnSex;
            
            private global::System.Data.DataColumn columnFactory;
            
            private global::System.Data.DataColumn columnDept;
            
            private global::System.Data.DataColumn columnNextDept;
            
            private global::System.Data.DataColumn columnDeptName;
            
            private global::System.Data.DataColumn columnLineCode;
            
            private global::System.Data.DataColumn columnNextLineCode;
            
            private global::System.Data.DataColumn columnLocation;
            
            private global::System.Data.DataColumn columnNextLocation;
            
            private global::System.Data.DataColumn columnJPDate;
            
            private global::System.Data.DataColumn columnJLDate;
            
            private global::System.Data.DataColumn columnREDate;
            
            private global::System.Data.DataColumn columnClsName;
            
            private global::System.Data.DataColumn columnShortClass;
            
            private global::System.Data.DataColumn columnWorkerType;
            
            private global::System.Data.DataColumn columnWFLevel;
            
            private global::System.Data.DataColumn columnRegion;
            
            private global::System.Data.DataColumn columnArea;
            
            private global::System.Data.DataColumn columnSeniority;
            
            private global::System.Data.DataColumn columnJobTitleEn;
            
            private global::System.Data.DataColumn columnJobTitleCn;
            
            private global::System.Data.DataColumn columndWF;
            
            private global::System.Data.DataColumn columnInActive;
            
            private global::System.Data.DataColumn columnIsRegistAuxiliary;
            
            private global::System.Data.DataColumn columnAuxiliaryJobTitle;
            
            private global::System.Data.DataColumn columnMatrix_Skill;
            
            private global::System.Data.DataColumn columnMatrix_Attendance;
            
            private global::System.Data.DataColumn columnMatrix_Adaptability;
            
            private global::System.Data.DataColumn columnMatrix_Adoptability;
            
            private global::System.Data.DataColumn columnMatrix_Speed;
            
            private global::System.Data.DataColumn columnMatrix_Strength;
            
            private global::System.Data.DataColumn columnMatrix_Staminal;
            
            private global::System.Data.DataColumn columnMatrix_Teamplayer;
            
            private global::System.Data.DataColumn columnMatrix_Quality;
            
            private global::System.Data.DataColumn columnMTM;
            
            private global::System.Data.DataColumn columnLongLeave;
            
            private global::System.Data.DataColumn columnLongLeaveStartDate;
            
            private global::System.Data.DataColumn columnLongLeaveEndDate;
            
            private global::System.Data.DataColumn columnTechType;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WorkForceDataTable() {
                this.TableName = "WorkForce";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal WorkForceDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected WorkForceDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IdColumn {
                get {
                    return this.columnId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NameCnColumn {
                get {
                    return this.columnNameCn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NameEnColumn {
                get {
                    return this.columnNameEn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SexColumn {
                get {
                    return this.columnSex;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FactoryColumn {
                get {
                    return this.columnFactory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeptColumn {
                get {
                    return this.columnDept;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NextDeptColumn {
                get {
                    return this.columnNextDept;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeptNameColumn {
                get {
                    return this.columnDeptName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LineCodeColumn {
                get {
                    return this.columnLineCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NextLineCodeColumn {
                get {
                    return this.columnNextLineCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocationColumn {
                get {
                    return this.columnLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NextLocationColumn {
                get {
                    return this.columnNextLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JPDateColumn {
                get {
                    return this.columnJPDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JLDateColumn {
                get {
                    return this.columnJLDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn REDateColumn {
                get {
                    return this.columnREDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClsNameColumn {
                get {
                    return this.columnClsName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShortClassColumn {
                get {
                    return this.columnShortClass;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WorkerTypeColumn {
                get {
                    return this.columnWorkerType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WFLevelColumn {
                get {
                    return this.columnWFLevel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RegionColumn {
                get {
                    return this.columnRegion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AreaColumn {
                get {
                    return this.columnArea;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SeniorityColumn {
                get {
                    return this.columnSeniority;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JobTitleEnColumn {
                get {
                    return this.columnJobTitleEn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JobTitleCnColumn {
                get {
                    return this.columnJobTitleCn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dWFColumn {
                get {
                    return this.columndWF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InActiveColumn {
                get {
                    return this.columnInActive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsRegistAuxiliaryColumn {
                get {
                    return this.columnIsRegistAuxiliary;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AuxiliaryJobTitleColumn {
                get {
                    return this.columnAuxiliaryJobTitle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Matrix_SkillColumn {
                get {
                    return this.columnMatrix_Skill;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Matrix_AttendanceColumn {
                get {
                    return this.columnMatrix_Attendance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Matrix_AdaptabilityColumn {
                get {
                    return this.columnMatrix_Adaptability;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Matrix_AdoptabilityColumn {
                get {
                    return this.columnMatrix_Adoptability;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Matrix_SpeedColumn {
                get {
                    return this.columnMatrix_Speed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Matrix_StrengthColumn {
                get {
                    return this.columnMatrix_Strength;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Matrix_StaminalColumn {
                get {
                    return this.columnMatrix_Staminal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Matrix_TeamplayerColumn {
                get {
                    return this.columnMatrix_Teamplayer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Matrix_QualityColumn {
                get {
                    return this.columnMatrix_Quality;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MTMColumn {
                get {
                    return this.columnMTM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LongLeaveColumn {
                get {
                    return this.columnLongLeave;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LongLeaveStartDateColumn {
                get {
                    return this.columnLongLeaveStartDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LongLeaveEndDateColumn {
                get {
                    return this.columnLongLeaveEndDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TechTypeColumn {
                get {
                    return this.columnTechType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WorkForceRow this[int index] {
                get {
                    return ((WorkForceRow)(this.Rows[index]));
                }
            }
            
            public event WorkForceRowChangeEventHandler WorkForceRowChanging;
            
            public event WorkForceRowChangeEventHandler WorkForceRowChanged;
            
            public event WorkForceRowChangeEventHandler WorkForceRowDeleting;
            
            public event WorkForceRowChangeEventHandler WorkForceRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddWorkForceRow(WorkForceRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WorkForceRow AddWorkForceRow(
                        string Id, 
                        string NameCn, 
                        string NameEn, 
                        string Sex, 
                        string Factory, 
                        string Dept, 
                        string NextDept, 
                        string DeptName, 
                        string LineCode, 
                        string NextLineCode, 
                        string Location, 
                        string NextLocation, 
                        System.DateTime JPDate, 
                        System.DateTime JLDate, 
                        System.DateTime REDate, 
                        string ClsName, 
                        string ShortClass, 
                        string WorkerType, 
                        string WFLevel, 
                        string Region, 
                        string Area, 
                        decimal Seniority, 
                        string JobTitleEn, 
                        string JobTitleCn, 
                        bool dWF, 
                        bool InActive, 
                        bool IsRegistAuxiliary, 
                        string AuxiliaryJobTitle, 
                        decimal Matrix_Skill, 
                        decimal Matrix_Attendance, 
                        decimal Matrix_Adaptability, 
                        decimal Matrix_Adoptability, 
                        decimal Matrix_Speed, 
                        decimal Matrix_Strength, 
                        decimal Matrix_Staminal, 
                        decimal Matrix_Teamplayer, 
                        decimal Matrix_Quality, 
                        bool MTM, 
                        bool LongLeave, 
                        System.DateTime LongLeaveStartDate, 
                        System.DateTime LongLeaveEndDate, 
                        string TechType) {
                WorkForceRow rowWorkForceRow = ((WorkForceRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Id,
                        NameCn,
                        NameEn,
                        Sex,
                        Factory,
                        Dept,
                        NextDept,
                        DeptName,
                        LineCode,
                        NextLineCode,
                        Location,
                        NextLocation,
                        JPDate,
                        JLDate,
                        REDate,
                        ClsName,
                        ShortClass,
                        WorkerType,
                        WFLevel,
                        Region,
                        Area,
                        Seniority,
                        JobTitleEn,
                        JobTitleCn,
                        dWF,
                        InActive,
                        IsRegistAuxiliary,
                        AuxiliaryJobTitle,
                        Matrix_Skill,
                        Matrix_Attendance,
                        Matrix_Adaptability,
                        Matrix_Adoptability,
                        Matrix_Speed,
                        Matrix_Strength,
                        Matrix_Staminal,
                        Matrix_Teamplayer,
                        Matrix_Quality,
                        MTM,
                        LongLeave,
                        LongLeaveStartDate,
                        LongLeaveEndDate,
                        TechType};
                rowWorkForceRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowWorkForceRow);
                return rowWorkForceRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WorkForceRow FindByIdFactory(string Id, string Factory) {
                return ((WorkForceRow)(this.Rows.Find(new object[] {
                            Id,
                            Factory})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                WorkForceDataTable cln = ((WorkForceDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new WorkForceDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnId = base.Columns["Id"];
                this.columnNameCn = base.Columns["NameCn"];
                this.columnNameEn = base.Columns["NameEn"];
                this.columnSex = base.Columns["Sex"];
                this.columnFactory = base.Columns["Factory"];
                this.columnDept = base.Columns["Dept"];
                this.columnNextDept = base.Columns["NextDept"];
                this.columnDeptName = base.Columns["DeptName"];
                this.columnLineCode = base.Columns["LineCode"];
                this.columnNextLineCode = base.Columns["NextLineCode"];
                this.columnLocation = base.Columns["Location"];
                this.columnNextLocation = base.Columns["NextLocation"];
                this.columnJPDate = base.Columns["JPDate"];
                this.columnJLDate = base.Columns["JLDate"];
                this.columnREDate = base.Columns["REDate"];
                this.columnClsName = base.Columns["ClsName"];
                this.columnShortClass = base.Columns["ShortClass"];
                this.columnWorkerType = base.Columns["WorkerType"];
                this.columnWFLevel = base.Columns["WFLevel"];
                this.columnRegion = base.Columns["Region"];
                this.columnArea = base.Columns["Area"];
                this.columnSeniority = base.Columns["Seniority"];
                this.columnJobTitleEn = base.Columns["JobTitleEn"];
                this.columnJobTitleCn = base.Columns["JobTitleCn"];
                this.columndWF = base.Columns["dWF"];
                this.columnInActive = base.Columns["InActive"];
                this.columnIsRegistAuxiliary = base.Columns["IsRegistAuxiliary"];
                this.columnAuxiliaryJobTitle = base.Columns["AuxiliaryJobTitle"];
                this.columnMatrix_Skill = base.Columns["Matrix_Skill"];
                this.columnMatrix_Attendance = base.Columns["Matrix_Attendance"];
                this.columnMatrix_Adaptability = base.Columns["Matrix_Adaptability"];
                this.columnMatrix_Adoptability = base.Columns["Matrix_Adoptability"];
                this.columnMatrix_Speed = base.Columns["Matrix_Speed"];
                this.columnMatrix_Strength = base.Columns["Matrix_Strength"];
                this.columnMatrix_Staminal = base.Columns["Matrix_Staminal"];
                this.columnMatrix_Teamplayer = base.Columns["Matrix_Teamplayer"];
                this.columnMatrix_Quality = base.Columns["Matrix_Quality"];
                this.columnMTM = base.Columns["MTM"];
                this.columnLongLeave = base.Columns["LongLeave"];
                this.columnLongLeaveStartDate = base.Columns["LongLeaveStartDate"];
                this.columnLongLeaveEndDate = base.Columns["LongLeaveEndDate"];
                this.columnTechType = base.Columns["TechType"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnId = new global::System.Data.DataColumn("Id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnNameCn = new global::System.Data.DataColumn("NameCn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNameCn);
                this.columnNameEn = new global::System.Data.DataColumn("NameEn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNameEn);
                this.columnSex = new global::System.Data.DataColumn("Sex", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSex);
                this.columnFactory = new global::System.Data.DataColumn("Factory", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFactory);
                this.columnDept = new global::System.Data.DataColumn("Dept", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDept);
                this.columnNextDept = new global::System.Data.DataColumn("NextDept", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNextDept);
                this.columnDeptName = new global::System.Data.DataColumn("DeptName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeptName);
                this.columnLineCode = new global::System.Data.DataColumn("LineCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLineCode);
                this.columnNextLineCode = new global::System.Data.DataColumn("NextLineCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNextLineCode);
                this.columnLocation = new global::System.Data.DataColumn("Location", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocation);
                this.columnNextLocation = new global::System.Data.DataColumn("NextLocation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNextLocation);
                this.columnJPDate = new global::System.Data.DataColumn("JPDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJPDate);
                this.columnJLDate = new global::System.Data.DataColumn("JLDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJLDate);
                this.columnREDate = new global::System.Data.DataColumn("REDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREDate);
                this.columnClsName = new global::System.Data.DataColumn("ClsName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClsName);
                this.columnShortClass = new global::System.Data.DataColumn("ShortClass", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShortClass);
                this.columnWorkerType = new global::System.Data.DataColumn("WorkerType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkerType);
                this.columnWFLevel = new global::System.Data.DataColumn("WFLevel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWFLevel);
                this.columnRegion = new global::System.Data.DataColumn("Region", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegion);
                this.columnArea = new global::System.Data.DataColumn("Area", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArea);
                this.columnSeniority = new global::System.Data.DataColumn("Seniority", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSeniority);
                this.columnJobTitleEn = new global::System.Data.DataColumn("JobTitleEn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJobTitleEn);
                this.columnJobTitleCn = new global::System.Data.DataColumn("JobTitleCn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJobTitleCn);
                this.columndWF = new global::System.Data.DataColumn("dWF", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndWF);
                this.columnInActive = new global::System.Data.DataColumn("InActive", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInActive);
                this.columnIsRegistAuxiliary = new global::System.Data.DataColumn("IsRegistAuxiliary", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsRegistAuxiliary);
                this.columnAuxiliaryJobTitle = new global::System.Data.DataColumn("AuxiliaryJobTitle", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAuxiliaryJobTitle);
                this.columnMatrix_Skill = new global::System.Data.DataColumn("Matrix_Skill", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMatrix_Skill);
                this.columnMatrix_Attendance = new global::System.Data.DataColumn("Matrix_Attendance", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMatrix_Attendance);
                this.columnMatrix_Adaptability = new global::System.Data.DataColumn("Matrix_Adaptability", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMatrix_Adaptability);
                this.columnMatrix_Adoptability = new global::System.Data.DataColumn("Matrix_Adoptability", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMatrix_Adoptability);
                this.columnMatrix_Speed = new global::System.Data.DataColumn("Matrix_Speed", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMatrix_Speed);
                this.columnMatrix_Strength = new global::System.Data.DataColumn("Matrix_Strength", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMatrix_Strength);
                this.columnMatrix_Staminal = new global::System.Data.DataColumn("Matrix_Staminal", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMatrix_Staminal);
                this.columnMatrix_Teamplayer = new global::System.Data.DataColumn("Matrix_Teamplayer", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMatrix_Teamplayer);
                this.columnMatrix_Quality = new global::System.Data.DataColumn("Matrix_Quality", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMatrix_Quality);
                this.columnMTM = new global::System.Data.DataColumn("MTM", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMTM);
                this.columnLongLeave = new global::System.Data.DataColumn("LongLeave", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLongLeave);
                this.columnLongLeaveStartDate = new global::System.Data.DataColumn("LongLeaveStartDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLongLeaveStartDate);
                this.columnLongLeaveEndDate = new global::System.Data.DataColumn("LongLeaveEndDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLongLeaveEndDate);
                this.columnTechType = new global::System.Data.DataColumn("TechType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTechType);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnId,
                                this.columnFactory}, true));
                this.columnId.AllowDBNull = false;
                this.columnId.MaxLength = 10;
                this.columnNameCn.MaxLength = 18;
                this.columnNameEn.MaxLength = 15;
                this.columnSex.MaxLength = 10;
                this.columnFactory.AllowDBNull = false;
                this.columnFactory.MaxLength = 10;
                this.columnDept.MaxLength = 30;
                this.columnNextDept.MaxLength = 10;
                this.columnDeptName.MaxLength = 40;
                this.columnLineCode.MaxLength = 40;
                this.columnNextLineCode.MaxLength = 20;
                this.columnLocation.MaxLength = 25;
                this.columnNextLocation.MaxLength = 25;
                this.columnClsName.MaxLength = 50;
                this.columnShortClass.MaxLength = 10;
                this.columnWorkerType.MaxLength = 30;
                this.columnWFLevel.MaxLength = 15;
                this.columnRegion.MaxLength = 40;
                this.columnArea.MaxLength = 40;
                this.columnJobTitleEn.MaxLength = 80;
                this.columnJobTitleCn.MaxLength = 80;
                this.columnAuxiliaryJobTitle.MaxLength = 20;
                this.columnTechType.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WorkForceRow NewWorkForceRow() {
                return ((WorkForceRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new WorkForceRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(WorkForceRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.WorkForceRowChanged != null)) {
                    this.WorkForceRowChanged(this, new WorkForceRowChangeEvent(((WorkForceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.WorkForceRowChanging != null)) {
                    this.WorkForceRowChanging(this, new WorkForceRowChangeEvent(((WorkForceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.WorkForceRowDeleted != null)) {
                    this.WorkForceRowDeleted(this, new WorkForceRowChangeEvent(((WorkForceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.WorkForceRowDeleting != null)) {
                    this.WorkForceRowDeleting(this, new WorkForceRowChangeEvent(((WorkForceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveWorkForceRow(WorkForceRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SkillDataSet ds = new SkillDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "WorkForceDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class OpSkillDataTable : global::System.Data.TypedTableBase<OpSkillRow> {
            
            private global::System.Data.DataColumn columnFactory;
            
            private global::System.Data.DataColumn columnId;
            
            private global::System.Data.DataColumn columnGuid;
            
            private global::System.Data.DataColumn columnSEQ;
            
            private global::System.Data.DataColumn columnThisPartialStyle_Code;
            
            private global::System.Data.DataColumn columnThisPartialStyle_Name;
            
            private global::System.Data.DataColumn columnAttach;
            
            private global::System.Data.DataColumn columnThisMed_Code;
            
            private global::System.Data.DataColumn columnDegreeOfDifficult;
            
            private global::System.Data.DataColumn columnThisMed_Name;
            
            private global::System.Data.DataColumn columnThisGeneralOpCode;
            
            private global::System.Data.DataColumn columnThisGeneralOpName;
            
            private global::System.Data.DataColumn columnThisOp;
            
            private global::System.Data.DataColumn columnThisOp_Code;
            
            private global::System.Data.DataColumn columnThisOp_Name;
            
            private global::System.Data.DataColumn columnGsdSah;
            
            private global::System.Data.DataColumn columnTimesForHundredUnits;
            
            private global::System.Data.DataColumn columnOptLineStyle;
            
            private global::System.Data.DataColumn columnLineIsStraight;
            
            private global::System.Data.DataColumn columnLineIsArc;
            
            private global::System.Data.DataColumn columnOptLength;
            
            private global::System.Data.DataColumn columnOptRaiseAndFall;
            
            private global::System.Data.DataColumn columnFabIsScrolled;
            
            private global::System.Data.DataColumn columnFabThickNess;
            
            private global::System.Data.DataColumn columnFabRange;
            
            private global::System.Data.DataColumn columnMtmProj;
            
            private global::System.Data.DataColumn columnMtmCurr;
            
            private global::System.Data.DataColumn columnIsConfirmed;
            
            private global::System.Data.DataColumn columnConfirmTime;
            
            private global::System.Data.DataColumn columnconfirmUser;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OpSkillDataTable() {
                this.TableName = "OpSkill";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal OpSkillDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected OpSkillDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FactoryColumn {
                get {
                    return this.columnFactory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IdColumn {
                get {
                    return this.columnId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GuidColumn {
                get {
                    return this.columnGuid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SEQColumn {
                get {
                    return this.columnSEQ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ThisPartialStyle_CodeColumn {
                get {
                    return this.columnThisPartialStyle_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ThisPartialStyle_NameColumn {
                get {
                    return this.columnThisPartialStyle_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AttachColumn {
                get {
                    return this.columnAttach;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ThisMed_CodeColumn {
                get {
                    return this.columnThisMed_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DegreeOfDifficultColumn {
                get {
                    return this.columnDegreeOfDifficult;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ThisMed_NameColumn {
                get {
                    return this.columnThisMed_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ThisGeneralOpCodeColumn {
                get {
                    return this.columnThisGeneralOpCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ThisGeneralOpNameColumn {
                get {
                    return this.columnThisGeneralOpName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ThisOpColumn {
                get {
                    return this.columnThisOp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ThisOp_CodeColumn {
                get {
                    return this.columnThisOp_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ThisOp_NameColumn {
                get {
                    return this.columnThisOp_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GsdSahColumn {
                get {
                    return this.columnGsdSah;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TimesForHundredUnitsColumn {
                get {
                    return this.columnTimesForHundredUnits;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OptLineStyleColumn {
                get {
                    return this.columnOptLineStyle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LineIsStraightColumn {
                get {
                    return this.columnLineIsStraight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LineIsArcColumn {
                get {
                    return this.columnLineIsArc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OptLengthColumn {
                get {
                    return this.columnOptLength;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OptRaiseAndFallColumn {
                get {
                    return this.columnOptRaiseAndFall;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FabIsScrolledColumn {
                get {
                    return this.columnFabIsScrolled;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FabThickNessColumn {
                get {
                    return this.columnFabThickNess;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FabRangeColumn {
                get {
                    return this.columnFabRange;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MtmProjColumn {
                get {
                    return this.columnMtmProj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MtmCurrColumn {
                get {
                    return this.columnMtmCurr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsConfirmedColumn {
                get {
                    return this.columnIsConfirmed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ConfirmTimeColumn {
                get {
                    return this.columnConfirmTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn confirmUserColumn {
                get {
                    return this.columnconfirmUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OpSkillRow this[int index] {
                get {
                    return ((OpSkillRow)(this.Rows[index]));
                }
            }
            
            public event OpSkillRowChangeEventHandler OpSkillRowChanging;
            
            public event OpSkillRowChangeEventHandler OpSkillRowChanged;
            
            public event OpSkillRowChangeEventHandler OpSkillRowDeleting;
            
            public event OpSkillRowChangeEventHandler OpSkillRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddOpSkillRow(OpSkillRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OpSkillRow AddOpSkillRow(
                        string Factory, 
                        string Id, 
                        System.Guid Guid, 
                        int SEQ, 
                        string ThisPartialStyle_Code, 
                        string ThisPartialStyle_Name, 
                        string Attach, 
                        string ThisMed_Code, 
                        string DegreeOfDifficult, 
                        string ThisMed_Name, 
                        string ThisGeneralOpCode, 
                        string ThisGeneralOpName, 
                        string ThisOp, 
                        string ThisOp_Code, 
                        string ThisOp_Name, 
                        decimal GsdSah, 
                        int TimesForHundredUnits, 
                        string OptLineStyle, 
                        bool LineIsStraight, 
                        bool LineIsArc, 
                        int OptLength, 
                        int OptRaiseAndFall, 
                        bool FabIsScrolled, 
                        string FabThickNess, 
                        int FabRange, 
                        int MtmProj, 
                        int MtmCurr, 
                        bool IsConfirmed, 
                        System.DateTime ConfirmTime, 
                        string confirmUser) {
                OpSkillRow rowOpSkillRow = ((OpSkillRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Factory,
                        Id,
                        Guid,
                        SEQ,
                        ThisPartialStyle_Code,
                        ThisPartialStyle_Name,
                        Attach,
                        ThisMed_Code,
                        DegreeOfDifficult,
                        ThisMed_Name,
                        ThisGeneralOpCode,
                        ThisGeneralOpName,
                        ThisOp,
                        ThisOp_Code,
                        ThisOp_Name,
                        GsdSah,
                        TimesForHundredUnits,
                        OptLineStyle,
                        LineIsStraight,
                        LineIsArc,
                        OptLength,
                        OptRaiseAndFall,
                        FabIsScrolled,
                        FabThickNess,
                        FabRange,
                        MtmProj,
                        MtmCurr,
                        IsConfirmed,
                        ConfirmTime,
                        confirmUser};
                rowOpSkillRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowOpSkillRow);
                return rowOpSkillRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OpSkillRow FindByFactoryIdGuid(string Factory, string Id, System.Guid Guid) {
                return ((OpSkillRow)(this.Rows.Find(new object[] {
                            Factory,
                            Id,
                            Guid})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                OpSkillDataTable cln = ((OpSkillDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new OpSkillDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnFactory = base.Columns["Factory"];
                this.columnId = base.Columns["Id"];
                this.columnGuid = base.Columns["Guid"];
                this.columnSEQ = base.Columns["SEQ"];
                this.columnThisPartialStyle_Code = base.Columns["ThisPartialStyle_Code"];
                this.columnThisPartialStyle_Name = base.Columns["ThisPartialStyle_Name"];
                this.columnAttach = base.Columns["Attach"];
                this.columnThisMed_Code = base.Columns["ThisMed_Code"];
                this.columnDegreeOfDifficult = base.Columns["DegreeOfDifficult"];
                this.columnThisMed_Name = base.Columns["ThisMed_Name"];
                this.columnThisGeneralOpCode = base.Columns["ThisGeneralOpCode"];
                this.columnThisGeneralOpName = base.Columns["ThisGeneralOpName"];
                this.columnThisOp = base.Columns["ThisOp"];
                this.columnThisOp_Code = base.Columns["ThisOp_Code"];
                this.columnThisOp_Name = base.Columns["ThisOp_Name"];
                this.columnGsdSah = base.Columns["GsdSah"];
                this.columnTimesForHundredUnits = base.Columns["TimesForHundredUnits"];
                this.columnOptLineStyle = base.Columns["OptLineStyle"];
                this.columnLineIsStraight = base.Columns["LineIsStraight"];
                this.columnLineIsArc = base.Columns["LineIsArc"];
                this.columnOptLength = base.Columns["OptLength"];
                this.columnOptRaiseAndFall = base.Columns["OptRaiseAndFall"];
                this.columnFabIsScrolled = base.Columns["FabIsScrolled"];
                this.columnFabThickNess = base.Columns["FabThickNess"];
                this.columnFabRange = base.Columns["FabRange"];
                this.columnMtmProj = base.Columns["MtmProj"];
                this.columnMtmCurr = base.Columns["MtmCurr"];
                this.columnIsConfirmed = base.Columns["IsConfirmed"];
                this.columnConfirmTime = base.Columns["ConfirmTime"];
                this.columnconfirmUser = base.Columns["confirmUser"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnFactory = new global::System.Data.DataColumn("Factory", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFactory);
                this.columnId = new global::System.Data.DataColumn("Id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnGuid = new global::System.Data.DataColumn("Guid", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGuid);
                this.columnSEQ = new global::System.Data.DataColumn("SEQ", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEQ);
                this.columnThisPartialStyle_Code = new global::System.Data.DataColumn("ThisPartialStyle_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnThisPartialStyle_Code);
                this.columnThisPartialStyle_Name = new global::System.Data.DataColumn("ThisPartialStyle_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnThisPartialStyle_Name);
                this.columnAttach = new global::System.Data.DataColumn("Attach", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAttach);
                this.columnThisMed_Code = new global::System.Data.DataColumn("ThisMed_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnThisMed_Code);
                this.columnDegreeOfDifficult = new global::System.Data.DataColumn("DegreeOfDifficult", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDegreeOfDifficult);
                this.columnThisMed_Name = new global::System.Data.DataColumn("ThisMed_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnThisMed_Name);
                this.columnThisGeneralOpCode = new global::System.Data.DataColumn("ThisGeneralOpCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnThisGeneralOpCode);
                this.columnThisGeneralOpName = new global::System.Data.DataColumn("ThisGeneralOpName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnThisGeneralOpName);
                this.columnThisOp = new global::System.Data.DataColumn("ThisOp", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnThisOp);
                this.columnThisOp_Code = new global::System.Data.DataColumn("ThisOp_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnThisOp_Code);
                this.columnThisOp_Name = new global::System.Data.DataColumn("ThisOp_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnThisOp_Name);
                this.columnGsdSah = new global::System.Data.DataColumn("GsdSah", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGsdSah);
                this.columnTimesForHundredUnits = new global::System.Data.DataColumn("TimesForHundredUnits", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTimesForHundredUnits);
                this.columnOptLineStyle = new global::System.Data.DataColumn("OptLineStyle", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOptLineStyle);
                this.columnLineIsStraight = new global::System.Data.DataColumn("LineIsStraight", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLineIsStraight);
                this.columnLineIsArc = new global::System.Data.DataColumn("LineIsArc", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLineIsArc);
                this.columnOptLength = new global::System.Data.DataColumn("OptLength", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOptLength);
                this.columnOptRaiseAndFall = new global::System.Data.DataColumn("OptRaiseAndFall", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOptRaiseAndFall);
                this.columnFabIsScrolled = new global::System.Data.DataColumn("FabIsScrolled", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFabIsScrolled);
                this.columnFabThickNess = new global::System.Data.DataColumn("FabThickNess", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFabThickNess);
                this.columnFabRange = new global::System.Data.DataColumn("FabRange", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFabRange);
                this.columnMtmProj = new global::System.Data.DataColumn("MtmProj", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMtmProj);
                this.columnMtmCurr = new global::System.Data.DataColumn("MtmCurr", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMtmCurr);
                this.columnIsConfirmed = new global::System.Data.DataColumn("IsConfirmed", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsConfirmed);
                this.columnConfirmTime = new global::System.Data.DataColumn("ConfirmTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConfirmTime);
                this.columnconfirmUser = new global::System.Data.DataColumn("confirmUser", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnconfirmUser);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnFactory,
                                this.columnId,
                                this.columnGuid}, true));
                this.columnFactory.AllowDBNull = false;
                this.columnFactory.MaxLength = 10;
                this.columnId.AllowDBNull = false;
                this.columnId.MaxLength = 10;
                this.columnGuid.AllowDBNull = false;
                this.columnThisPartialStyle_Code.MaxLength = 15;
                this.columnThisPartialStyle_Name.MaxLength = 20;
                this.columnAttach.MaxLength = 10;
                this.columnThisMed_Code.MaxLength = 15;
                this.columnDegreeOfDifficult.MaxLength = 10;
                this.columnThisMed_Name.MaxLength = 20;
                this.columnThisGeneralOpCode.MaxLength = 15;
                this.columnThisGeneralOpName.MaxLength = 20;
                this.columnThisOp.MaxLength = 30;
                this.columnThisOp_Code.MaxLength = 15;
                this.columnThisOp_Name.MaxLength = 400;
                this.columnOptLineStyle.MaxLength = 20;
                this.columnFabThickNess.MaxLength = 10;
                this.columnconfirmUser.MaxLength = 12;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OpSkillRow NewOpSkillRow() {
                return ((OpSkillRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new OpSkillRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(OpSkillRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.OpSkillRowChanged != null)) {
                    this.OpSkillRowChanged(this, new OpSkillRowChangeEvent(((OpSkillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.OpSkillRowChanging != null)) {
                    this.OpSkillRowChanging(this, new OpSkillRowChangeEvent(((OpSkillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.OpSkillRowDeleted != null)) {
                    this.OpSkillRowDeleted(this, new OpSkillRowChangeEvent(((OpSkillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.OpSkillRowDeleting != null)) {
                    this.OpSkillRowDeleting(this, new OpSkillRowChangeEvent(((OpSkillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveOpSkillRow(OpSkillRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SkillDataSet ds = new SkillDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "OpSkillDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class WorkForceRow : global::System.Data.DataRow {
            
            private WorkForceDataTable tableWorkForce;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal WorkForceRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableWorkForce = ((WorkForceDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Id {
                get {
                    return ((string)(this[this.tableWorkForce.IdColumn]));
                }
                set {
                    this[this.tableWorkForce.IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NameCn {
                get {
                    try {
                        return ((string)(this[this.tableWorkForce.NameCnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NameCn\' in table \'WorkForce\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkForce.NameCnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NameEn {
                get {
                    try {
                        return ((string)(this[this.tableWorkForce.NameEnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NameEn\' in table \'WorkForce\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkForce.NameEnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Sex {
                get {
                    try {
                        return ((string)(this[this.tableWorkForce.SexColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sex\' in table \'WorkForce\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkForce.SexColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Factory {
                get {
                    return ((string)(this[this.tableWorkForce.FactoryColumn]));
                }
                set {
                    this[this.tableWorkForce.FactoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Dept {
                get {
                    try {
                        return ((string)(this[this.tableWorkForce.DeptColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Dept\' in table \'WorkForce\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkForce.DeptColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NextDept {
                get {
                    try {
                        return ((string)(this[this.tableWorkForce.NextDeptColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NextDept\' in table \'WorkForce\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkForce.NextDeptColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DeptName {
                get {
                    try {
                        return ((string)(this[this.tableWorkForce.DeptNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeptName\' in table \'WorkForce\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkForce.DeptNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LineCode {
                get {
                    try {
                        return ((string)(this[this.tableWorkForce.LineCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LineCode\' in table \'WorkForce\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkForce.LineCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NextLineCode {
                get {
                    try {
                        return ((string)(this[this.tableWorkForce.NextLineCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NextLineCode\' in table \'WorkForce\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkForce.NextLineCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Location {
                get {
                    try {
                        return ((string)(this[this.tableWorkForce.LocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Location\' in table \'WorkForce\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkForce.LocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NextLocation {
                get {
                    try {
                        return ((string)(this[this.tableWorkForce.NextLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NextLocation\' in table \'WorkForce\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkForce.NextLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime JPDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableWorkForce.JPDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JPDate\' in table \'WorkForce\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkForce.JPDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime JLDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableWorkForce.JLDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JLDate\' in table \'WorkForce\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkForce.JLDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime REDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableWorkForce.REDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'REDate\' in table \'WorkForce\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkForce.REDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ClsName {
                get {
                    try {
                        return ((string)(this[this.tableWorkForce.ClsNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClsName\' in table \'WorkForce\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkForce.ClsNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ShortClass {
                get {
                    try {
                        return ((string)(this[this.tableWorkForce.ShortClassColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShortClass\' in table \'WorkForce\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkForce.ShortClassColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WorkerType {
                get {
                    try {
                        return ((string)(this[this.tableWorkForce.WorkerTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WorkerType\' in table \'WorkForce\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkForce.WorkerTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WFLevel {
                get {
                    try {
                        return ((string)(this[this.tableWorkForce.WFLevelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WFLevel\' in table \'WorkForce\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkForce.WFLevelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Region {
                get {
                    try {
                        return ((string)(this[this.tableWorkForce.RegionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Region\' in table \'WorkForce\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkForce.RegionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Area {
                get {
                    try {
                        return ((string)(this[this.tableWorkForce.AreaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Area\' in table \'WorkForce\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkForce.AreaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Seniority {
                get {
                    try {
                        return ((decimal)(this[this.tableWorkForce.SeniorityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Seniority\' in table \'WorkForce\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkForce.SeniorityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JobTitleEn {
                get {
                    try {
                        return ((string)(this[this.tableWorkForce.JobTitleEnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JobTitleEn\' in table \'WorkForce\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkForce.JobTitleEnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JobTitleCn {
                get {
                    try {
                        return ((string)(this[this.tableWorkForce.JobTitleCnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JobTitleCn\' in table \'WorkForce\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkForce.JobTitleCnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool dWF {
                get {
                    try {
                        return ((bool)(this[this.tableWorkForce.dWFColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dWF\' in table \'WorkForce\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkForce.dWFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool InActive {
                get {
                    try {
                        return ((bool)(this[this.tableWorkForce.InActiveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InActive\' in table \'WorkForce\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkForce.InActiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRegistAuxiliary {
                get {
                    try {
                        return ((bool)(this[this.tableWorkForce.IsRegistAuxiliaryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsRegistAuxiliary\' in table \'WorkForce\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkForce.IsRegistAuxiliaryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AuxiliaryJobTitle {
                get {
                    try {
                        return ((string)(this[this.tableWorkForce.AuxiliaryJobTitleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AuxiliaryJobTitle\' in table \'WorkForce\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkForce.AuxiliaryJobTitleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Matrix_Skill {
                get {
                    try {
                        return ((decimal)(this[this.tableWorkForce.Matrix_SkillColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Matrix_Skill\' in table \'WorkForce\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkForce.Matrix_SkillColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Matrix_Attendance {
                get {
                    try {
                        return ((decimal)(this[this.tableWorkForce.Matrix_AttendanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Matrix_Attendance\' in table \'WorkForce\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkForce.Matrix_AttendanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Matrix_Adaptability {
                get {
                    try {
                        return ((decimal)(this[this.tableWorkForce.Matrix_AdaptabilityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Matrix_Adaptability\' in table \'WorkForce\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkForce.Matrix_AdaptabilityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Matrix_Adoptability {
                get {
                    try {
                        return ((decimal)(this[this.tableWorkForce.Matrix_AdoptabilityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Matrix_Adoptability\' in table \'WorkForce\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkForce.Matrix_AdoptabilityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Matrix_Speed {
                get {
                    try {
                        return ((decimal)(this[this.tableWorkForce.Matrix_SpeedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Matrix_Speed\' in table \'WorkForce\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkForce.Matrix_SpeedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Matrix_Strength {
                get {
                    try {
                        return ((decimal)(this[this.tableWorkForce.Matrix_StrengthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Matrix_Strength\' in table \'WorkForce\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkForce.Matrix_StrengthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Matrix_Staminal {
                get {
                    try {
                        return ((decimal)(this[this.tableWorkForce.Matrix_StaminalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Matrix_Staminal\' in table \'WorkForce\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkForce.Matrix_StaminalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Matrix_Teamplayer {
                get {
                    try {
                        return ((decimal)(this[this.tableWorkForce.Matrix_TeamplayerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Matrix_Teamplayer\' in table \'WorkForce\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkForce.Matrix_TeamplayerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Matrix_Quality {
                get {
                    try {
                        return ((decimal)(this[this.tableWorkForce.Matrix_QualityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Matrix_Quality\' in table \'WorkForce\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkForce.Matrix_QualityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool MTM {
                get {
                    try {
                        return ((bool)(this[this.tableWorkForce.MTMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MTM\' in table \'WorkForce\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkForce.MTMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool LongLeave {
                get {
                    try {
                        return ((bool)(this[this.tableWorkForce.LongLeaveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LongLeave\' in table \'WorkForce\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkForce.LongLeaveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime LongLeaveStartDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableWorkForce.LongLeaveStartDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LongLeaveStartDate\' in table \'WorkForce\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkForce.LongLeaveStartDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime LongLeaveEndDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableWorkForce.LongLeaveEndDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LongLeaveEndDate\' in table \'WorkForce\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkForce.LongLeaveEndDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TechType {
                get {
                    try {
                        return ((string)(this[this.tableWorkForce.TechTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TechType\' in table \'WorkForce\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkForce.TechTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNameCnNull() {
                return this.IsNull(this.tableWorkForce.NameCnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNameCnNull() {
                this[this.tableWorkForce.NameCnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNameEnNull() {
                return this.IsNull(this.tableWorkForce.NameEnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNameEnNull() {
                this[this.tableWorkForce.NameEnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSexNull() {
                return this.IsNull(this.tableWorkForce.SexColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSexNull() {
                this[this.tableWorkForce.SexColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeptNull() {
                return this.IsNull(this.tableWorkForce.DeptColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeptNull() {
                this[this.tableWorkForce.DeptColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNextDeptNull() {
                return this.IsNull(this.tableWorkForce.NextDeptColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNextDeptNull() {
                this[this.tableWorkForce.NextDeptColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeptNameNull() {
                return this.IsNull(this.tableWorkForce.DeptNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeptNameNull() {
                this[this.tableWorkForce.DeptNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLineCodeNull() {
                return this.IsNull(this.tableWorkForce.LineCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLineCodeNull() {
                this[this.tableWorkForce.LineCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNextLineCodeNull() {
                return this.IsNull(this.tableWorkForce.NextLineCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNextLineCodeNull() {
                this[this.tableWorkForce.NextLineCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocationNull() {
                return this.IsNull(this.tableWorkForce.LocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocationNull() {
                this[this.tableWorkForce.LocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNextLocationNull() {
                return this.IsNull(this.tableWorkForce.NextLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNextLocationNull() {
                this[this.tableWorkForce.NextLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJPDateNull() {
                return this.IsNull(this.tableWorkForce.JPDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJPDateNull() {
                this[this.tableWorkForce.JPDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJLDateNull() {
                return this.IsNull(this.tableWorkForce.JLDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJLDateNull() {
                this[this.tableWorkForce.JLDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsREDateNull() {
                return this.IsNull(this.tableWorkForce.REDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetREDateNull() {
                this[this.tableWorkForce.REDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClsNameNull() {
                return this.IsNull(this.tableWorkForce.ClsNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClsNameNull() {
                this[this.tableWorkForce.ClsNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShortClassNull() {
                return this.IsNull(this.tableWorkForce.ShortClassColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShortClassNull() {
                this[this.tableWorkForce.ShortClassColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWorkerTypeNull() {
                return this.IsNull(this.tableWorkForce.WorkerTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWorkerTypeNull() {
                this[this.tableWorkForce.WorkerTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWFLevelNull() {
                return this.IsNull(this.tableWorkForce.WFLevelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWFLevelNull() {
                this[this.tableWorkForce.WFLevelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRegionNull() {
                return this.IsNull(this.tableWorkForce.RegionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRegionNull() {
                this[this.tableWorkForce.RegionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAreaNull() {
                return this.IsNull(this.tableWorkForce.AreaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAreaNull() {
                this[this.tableWorkForce.AreaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSeniorityNull() {
                return this.IsNull(this.tableWorkForce.SeniorityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSeniorityNull() {
                this[this.tableWorkForce.SeniorityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJobTitleEnNull() {
                return this.IsNull(this.tableWorkForce.JobTitleEnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJobTitleEnNull() {
                this[this.tableWorkForce.JobTitleEnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJobTitleCnNull() {
                return this.IsNull(this.tableWorkForce.JobTitleCnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJobTitleCnNull() {
                this[this.tableWorkForce.JobTitleCnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdWFNull() {
                return this.IsNull(this.tableWorkForce.dWFColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdWFNull() {
                this[this.tableWorkForce.dWFColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInActiveNull() {
                return this.IsNull(this.tableWorkForce.InActiveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInActiveNull() {
                this[this.tableWorkForce.InActiveColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsRegistAuxiliaryNull() {
                return this.IsNull(this.tableWorkForce.IsRegistAuxiliaryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsRegistAuxiliaryNull() {
                this[this.tableWorkForce.IsRegistAuxiliaryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAuxiliaryJobTitleNull() {
                return this.IsNull(this.tableWorkForce.AuxiliaryJobTitleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAuxiliaryJobTitleNull() {
                this[this.tableWorkForce.AuxiliaryJobTitleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMatrix_SkillNull() {
                return this.IsNull(this.tableWorkForce.Matrix_SkillColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMatrix_SkillNull() {
                this[this.tableWorkForce.Matrix_SkillColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMatrix_AttendanceNull() {
                return this.IsNull(this.tableWorkForce.Matrix_AttendanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMatrix_AttendanceNull() {
                this[this.tableWorkForce.Matrix_AttendanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMatrix_AdaptabilityNull() {
                return this.IsNull(this.tableWorkForce.Matrix_AdaptabilityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMatrix_AdaptabilityNull() {
                this[this.tableWorkForce.Matrix_AdaptabilityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMatrix_AdoptabilityNull() {
                return this.IsNull(this.tableWorkForce.Matrix_AdoptabilityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMatrix_AdoptabilityNull() {
                this[this.tableWorkForce.Matrix_AdoptabilityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMatrix_SpeedNull() {
                return this.IsNull(this.tableWorkForce.Matrix_SpeedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMatrix_SpeedNull() {
                this[this.tableWorkForce.Matrix_SpeedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMatrix_StrengthNull() {
                return this.IsNull(this.tableWorkForce.Matrix_StrengthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMatrix_StrengthNull() {
                this[this.tableWorkForce.Matrix_StrengthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMatrix_StaminalNull() {
                return this.IsNull(this.tableWorkForce.Matrix_StaminalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMatrix_StaminalNull() {
                this[this.tableWorkForce.Matrix_StaminalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMatrix_TeamplayerNull() {
                return this.IsNull(this.tableWorkForce.Matrix_TeamplayerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMatrix_TeamplayerNull() {
                this[this.tableWorkForce.Matrix_TeamplayerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMatrix_QualityNull() {
                return this.IsNull(this.tableWorkForce.Matrix_QualityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMatrix_QualityNull() {
                this[this.tableWorkForce.Matrix_QualityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMTMNull() {
                return this.IsNull(this.tableWorkForce.MTMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMTMNull() {
                this[this.tableWorkForce.MTMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLongLeaveNull() {
                return this.IsNull(this.tableWorkForce.LongLeaveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLongLeaveNull() {
                this[this.tableWorkForce.LongLeaveColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLongLeaveStartDateNull() {
                return this.IsNull(this.tableWorkForce.LongLeaveStartDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLongLeaveStartDateNull() {
                this[this.tableWorkForce.LongLeaveStartDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLongLeaveEndDateNull() {
                return this.IsNull(this.tableWorkForce.LongLeaveEndDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLongLeaveEndDateNull() {
                this[this.tableWorkForce.LongLeaveEndDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTechTypeNull() {
                return this.IsNull(this.tableWorkForce.TechTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTechTypeNull() {
                this[this.tableWorkForce.TechTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OpSkillRow[] GetOpSkillRows() {
                if ((this.Table.ChildRelations["FK_OpSkill_WorkForce"] == null)) {
                    return new OpSkillRow[0];
                }
                else {
                    return ((OpSkillRow[])(base.GetChildRows(this.Table.ChildRelations["FK_OpSkill_WorkForce"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class OpSkillRow : global::System.Data.DataRow {
            
            private OpSkillDataTable tableOpSkill;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal OpSkillRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableOpSkill = ((OpSkillDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Factory {
                get {
                    return ((string)(this[this.tableOpSkill.FactoryColumn]));
                }
                set {
                    this[this.tableOpSkill.FactoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Id {
                get {
                    return ((string)(this[this.tableOpSkill.IdColumn]));
                }
                set {
                    this[this.tableOpSkill.IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid Guid {
                get {
                    return ((global::System.Guid)(this[this.tableOpSkill.GuidColumn]));
                }
                set {
                    this[this.tableOpSkill.GuidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SEQ {
                get {
                    try {
                        return ((int)(this[this.tableOpSkill.SEQColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SEQ\' in table \'OpSkill\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOpSkill.SEQColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ThisPartialStyle_Code {
                get {
                    try {
                        return ((string)(this[this.tableOpSkill.ThisPartialStyle_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ThisPartialStyle_Code\' in table \'OpSkill\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOpSkill.ThisPartialStyle_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ThisPartialStyle_Name {
                get {
                    try {
                        return ((string)(this[this.tableOpSkill.ThisPartialStyle_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ThisPartialStyle_Name\' in table \'OpSkill\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOpSkill.ThisPartialStyle_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Attach {
                get {
                    try {
                        return ((string)(this[this.tableOpSkill.AttachColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Attach\' in table \'OpSkill\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOpSkill.AttachColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ThisMed_Code {
                get {
                    try {
                        return ((string)(this[this.tableOpSkill.ThisMed_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ThisMed_Code\' in table \'OpSkill\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOpSkill.ThisMed_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DegreeOfDifficult {
                get {
                    try {
                        return ((string)(this[this.tableOpSkill.DegreeOfDifficultColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DegreeOfDifficult\' in table \'OpSkill\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOpSkill.DegreeOfDifficultColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ThisMed_Name {
                get {
                    try {
                        return ((string)(this[this.tableOpSkill.ThisMed_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ThisMed_Name\' in table \'OpSkill\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOpSkill.ThisMed_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ThisGeneralOpCode {
                get {
                    try {
                        return ((string)(this[this.tableOpSkill.ThisGeneralOpCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ThisGeneralOpCode\' in table \'OpSkill\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOpSkill.ThisGeneralOpCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ThisGeneralOpName {
                get {
                    try {
                        return ((string)(this[this.tableOpSkill.ThisGeneralOpNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ThisGeneralOpName\' in table \'OpSkill\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOpSkill.ThisGeneralOpNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ThisOp {
                get {
                    try {
                        return ((string)(this[this.tableOpSkill.ThisOpColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ThisOp\' in table \'OpSkill\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOpSkill.ThisOpColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ThisOp_Code {
                get {
                    try {
                        return ((string)(this[this.tableOpSkill.ThisOp_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ThisOp_Code\' in table \'OpSkill\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOpSkill.ThisOp_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ThisOp_Name {
                get {
                    try {
                        return ((string)(this[this.tableOpSkill.ThisOp_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ThisOp_Name\' in table \'OpSkill\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOpSkill.ThisOp_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal GsdSah {
                get {
                    try {
                        return ((decimal)(this[this.tableOpSkill.GsdSahColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GsdSah\' in table \'OpSkill\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOpSkill.GsdSahColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TimesForHundredUnits {
                get {
                    try {
                        return ((int)(this[this.tableOpSkill.TimesForHundredUnitsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TimesForHundredUnits\' in table \'OpSkill\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOpSkill.TimesForHundredUnitsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OptLineStyle {
                get {
                    try {
                        return ((string)(this[this.tableOpSkill.OptLineStyleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OptLineStyle\' in table \'OpSkill\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOpSkill.OptLineStyleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool LineIsStraight {
                get {
                    try {
                        return ((bool)(this[this.tableOpSkill.LineIsStraightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LineIsStraight\' in table \'OpSkill\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOpSkill.LineIsStraightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool LineIsArc {
                get {
                    try {
                        return ((bool)(this[this.tableOpSkill.LineIsArcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LineIsArc\' in table \'OpSkill\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOpSkill.LineIsArcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OptLength {
                get {
                    try {
                        return ((int)(this[this.tableOpSkill.OptLengthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OptLength\' in table \'OpSkill\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOpSkill.OptLengthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OptRaiseAndFall {
                get {
                    try {
                        return ((int)(this[this.tableOpSkill.OptRaiseAndFallColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OptRaiseAndFall\' in table \'OpSkill\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOpSkill.OptRaiseAndFallColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool FabIsScrolled {
                get {
                    try {
                        return ((bool)(this[this.tableOpSkill.FabIsScrolledColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FabIsScrolled\' in table \'OpSkill\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOpSkill.FabIsScrolledColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FabThickNess {
                get {
                    try {
                        return ((string)(this[this.tableOpSkill.FabThickNessColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FabThickNess\' in table \'OpSkill\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOpSkill.FabThickNessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int FabRange {
                get {
                    try {
                        return ((int)(this[this.tableOpSkill.FabRangeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FabRange\' in table \'OpSkill\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOpSkill.FabRangeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MtmProj {
                get {
                    try {
                        return ((int)(this[this.tableOpSkill.MtmProjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MtmProj\' in table \'OpSkill\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOpSkill.MtmProjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MtmCurr {
                get {
                    try {
                        return ((int)(this[this.tableOpSkill.MtmCurrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MtmCurr\' in table \'OpSkill\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOpSkill.MtmCurrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsConfirmed {
                get {
                    try {
                        return ((bool)(this[this.tableOpSkill.IsConfirmedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsConfirmed\' in table \'OpSkill\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOpSkill.IsConfirmedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ConfirmTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableOpSkill.ConfirmTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConfirmTime\' in table \'OpSkill\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOpSkill.ConfirmTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string confirmUser {
                get {
                    try {
                        return ((string)(this[this.tableOpSkill.confirmUserColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'confirmUser\' in table \'OpSkill\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOpSkill.confirmUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WorkForceRow WorkForceRowParent {
                get {
                    return ((WorkForceRow)(this.GetParentRow(this.Table.ParentRelations["FK_OpSkill_WorkForce"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_OpSkill_WorkForce"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSEQNull() {
                return this.IsNull(this.tableOpSkill.SEQColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSEQNull() {
                this[this.tableOpSkill.SEQColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsThisPartialStyle_CodeNull() {
                return this.IsNull(this.tableOpSkill.ThisPartialStyle_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetThisPartialStyle_CodeNull() {
                this[this.tableOpSkill.ThisPartialStyle_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsThisPartialStyle_NameNull() {
                return this.IsNull(this.tableOpSkill.ThisPartialStyle_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetThisPartialStyle_NameNull() {
                this[this.tableOpSkill.ThisPartialStyle_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAttachNull() {
                return this.IsNull(this.tableOpSkill.AttachColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAttachNull() {
                this[this.tableOpSkill.AttachColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsThisMed_CodeNull() {
                return this.IsNull(this.tableOpSkill.ThisMed_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetThisMed_CodeNull() {
                this[this.tableOpSkill.ThisMed_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDegreeOfDifficultNull() {
                return this.IsNull(this.tableOpSkill.DegreeOfDifficultColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDegreeOfDifficultNull() {
                this[this.tableOpSkill.DegreeOfDifficultColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsThisMed_NameNull() {
                return this.IsNull(this.tableOpSkill.ThisMed_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetThisMed_NameNull() {
                this[this.tableOpSkill.ThisMed_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsThisGeneralOpCodeNull() {
                return this.IsNull(this.tableOpSkill.ThisGeneralOpCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetThisGeneralOpCodeNull() {
                this[this.tableOpSkill.ThisGeneralOpCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsThisGeneralOpNameNull() {
                return this.IsNull(this.tableOpSkill.ThisGeneralOpNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetThisGeneralOpNameNull() {
                this[this.tableOpSkill.ThisGeneralOpNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsThisOpNull() {
                return this.IsNull(this.tableOpSkill.ThisOpColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetThisOpNull() {
                this[this.tableOpSkill.ThisOpColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsThisOp_CodeNull() {
                return this.IsNull(this.tableOpSkill.ThisOp_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetThisOp_CodeNull() {
                this[this.tableOpSkill.ThisOp_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsThisOp_NameNull() {
                return this.IsNull(this.tableOpSkill.ThisOp_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetThisOp_NameNull() {
                this[this.tableOpSkill.ThisOp_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGsdSahNull() {
                return this.IsNull(this.tableOpSkill.GsdSahColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGsdSahNull() {
                this[this.tableOpSkill.GsdSahColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTimesForHundredUnitsNull() {
                return this.IsNull(this.tableOpSkill.TimesForHundredUnitsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTimesForHundredUnitsNull() {
                this[this.tableOpSkill.TimesForHundredUnitsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOptLineStyleNull() {
                return this.IsNull(this.tableOpSkill.OptLineStyleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOptLineStyleNull() {
                this[this.tableOpSkill.OptLineStyleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLineIsStraightNull() {
                return this.IsNull(this.tableOpSkill.LineIsStraightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLineIsStraightNull() {
                this[this.tableOpSkill.LineIsStraightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLineIsArcNull() {
                return this.IsNull(this.tableOpSkill.LineIsArcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLineIsArcNull() {
                this[this.tableOpSkill.LineIsArcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOptLengthNull() {
                return this.IsNull(this.tableOpSkill.OptLengthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOptLengthNull() {
                this[this.tableOpSkill.OptLengthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOptRaiseAndFallNull() {
                return this.IsNull(this.tableOpSkill.OptRaiseAndFallColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOptRaiseAndFallNull() {
                this[this.tableOpSkill.OptRaiseAndFallColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFabIsScrolledNull() {
                return this.IsNull(this.tableOpSkill.FabIsScrolledColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFabIsScrolledNull() {
                this[this.tableOpSkill.FabIsScrolledColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFabThickNessNull() {
                return this.IsNull(this.tableOpSkill.FabThickNessColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFabThickNessNull() {
                this[this.tableOpSkill.FabThickNessColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFabRangeNull() {
                return this.IsNull(this.tableOpSkill.FabRangeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFabRangeNull() {
                this[this.tableOpSkill.FabRangeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMtmProjNull() {
                return this.IsNull(this.tableOpSkill.MtmProjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMtmProjNull() {
                this[this.tableOpSkill.MtmProjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMtmCurrNull() {
                return this.IsNull(this.tableOpSkill.MtmCurrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMtmCurrNull() {
                this[this.tableOpSkill.MtmCurrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsConfirmedNull() {
                return this.IsNull(this.tableOpSkill.IsConfirmedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsConfirmedNull() {
                this[this.tableOpSkill.IsConfirmedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsConfirmTimeNull() {
                return this.IsNull(this.tableOpSkill.ConfirmTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetConfirmTimeNull() {
                this[this.tableOpSkill.ConfirmTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsconfirmUserNull() {
                return this.IsNull(this.tableOpSkill.confirmUserColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetconfirmUserNull() {
                this[this.tableOpSkill.confirmUserColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class WorkForceRowChangeEvent : global::System.EventArgs {
            
            private WorkForceRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WorkForceRowChangeEvent(WorkForceRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WorkForceRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class OpSkillRowChangeEvent : global::System.EventArgs {
            
            private OpSkillRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OpSkillRowChangeEvent(OpSkillRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OpSkillRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace PH.LWPM.UI.WF.Report.SkillDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class WorkForceTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public WorkForceTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "WorkForce";
            tableMapping.ColumnMappings.Add("Id", "Id");
            tableMapping.ColumnMappings.Add("NameCn", "NameCn");
            tableMapping.ColumnMappings.Add("NameEn", "NameEn");
            tableMapping.ColumnMappings.Add("Sex", "Sex");
            tableMapping.ColumnMappings.Add("Factory", "Factory");
            tableMapping.ColumnMappings.Add("Dept", "Dept");
            tableMapping.ColumnMappings.Add("NextDept", "NextDept");
            tableMapping.ColumnMappings.Add("DeptName", "DeptName");
            tableMapping.ColumnMappings.Add("LineCode", "LineCode");
            tableMapping.ColumnMappings.Add("NextLineCode", "NextLineCode");
            tableMapping.ColumnMappings.Add("Location", "Location");
            tableMapping.ColumnMappings.Add("NextLocation", "NextLocation");
            tableMapping.ColumnMappings.Add("JPDate", "JPDate");
            tableMapping.ColumnMappings.Add("JLDate", "JLDate");
            tableMapping.ColumnMappings.Add("REDate", "REDate");
            tableMapping.ColumnMappings.Add("ClsName", "ClsName");
            tableMapping.ColumnMappings.Add("ShortClass", "ShortClass");
            tableMapping.ColumnMappings.Add("WorkerType", "WorkerType");
            tableMapping.ColumnMappings.Add("WFLevel", "WFLevel");
            tableMapping.ColumnMappings.Add("Region", "Region");
            tableMapping.ColumnMappings.Add("Area", "Area");
            tableMapping.ColumnMappings.Add("Seniority", "Seniority");
            tableMapping.ColumnMappings.Add("JobTitleEn", "JobTitleEn");
            tableMapping.ColumnMappings.Add("JobTitleCn", "JobTitleCn");
            tableMapping.ColumnMappings.Add("dWF", "dWF");
            tableMapping.ColumnMappings.Add("InActive", "InActive");
            tableMapping.ColumnMappings.Add("IsRegistAuxiliary", "IsRegistAuxiliary");
            tableMapping.ColumnMappings.Add("AuxiliaryJobTitle", "AuxiliaryJobTitle");
            tableMapping.ColumnMappings.Add("Matrix_Skill", "Matrix_Skill");
            tableMapping.ColumnMappings.Add("Matrix_Attendance", "Matrix_Attendance");
            tableMapping.ColumnMappings.Add("Matrix_Adaptability", "Matrix_Adaptability");
            tableMapping.ColumnMappings.Add("Matrix_Adoptability", "Matrix_Adoptability");
            tableMapping.ColumnMappings.Add("Matrix_Speed", "Matrix_Speed");
            tableMapping.ColumnMappings.Add("Matrix_Strength", "Matrix_Strength");
            tableMapping.ColumnMappings.Add("Matrix_Staminal", "Matrix_Staminal");
            tableMapping.ColumnMappings.Add("Matrix_Teamplayer", "Matrix_Teamplayer");
            tableMapping.ColumnMappings.Add("Matrix_Quality", "Matrix_Quality");
            tableMapping.ColumnMappings.Add("MTM", "MTM");
            tableMapping.ColumnMappings.Add("LongLeave", "LongLeave");
            tableMapping.ColumnMappings.Add("LongLeaveStartDate", "LongLeaveStartDate");
            tableMapping.ColumnMappings.Add("LongLeaveEndDate", "LongLeaveEndDate");
            tableMapping.ColumnMappings.Add("TechType", "TechType");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::PH.LWPM.UI.Properties.Settings.Default.PH_LWPM_WPConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT Id, NameCn, NameEn, Sex, Factory, Dept, NextDept, DeptName, LineCode, NextLineCode, Location, NextLocation, JPDate, JLDate, REDate, ClsName, ShortClass, WorkerType, WFLevel, Region, Area, Seniority, JobTitleEn, JobTitleCn, dWF, InActive, IsRegistAuxiliary, AuxiliaryJobTitle, Matrix_Skill, Matrix_Attendance, Matrix_Adaptability, Matrix_Adoptability, Matrix_Speed, Matrix_Strength, Matrix_Staminal, Matrix_Teamplayer, Matrix_Quality, MTM, LongLeave, LongLeaveStartDate, LongLeaveEndDate, TechType FROM dbo.WorkForce";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SkillDataSet.WorkForceDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SkillDataSet.WorkForceDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            SkillDataSet.WorkForceDataTable dataTable = new SkillDataSet.WorkForceDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class OpSkillTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public OpSkillTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "OpSkill";
            tableMapping.ColumnMappings.Add("Factory", "Factory");
            tableMapping.ColumnMappings.Add("Id", "Id");
            tableMapping.ColumnMappings.Add("Guid", "Guid");
            tableMapping.ColumnMappings.Add("SEQ", "SEQ");
            tableMapping.ColumnMappings.Add("ThisPartialStyle_Code", "ThisPartialStyle_Code");
            tableMapping.ColumnMappings.Add("ThisPartialStyle_Name", "ThisPartialStyle_Name");
            tableMapping.ColumnMappings.Add("Attach", "Attach");
            tableMapping.ColumnMappings.Add("ThisMed_Code", "ThisMed_Code");
            tableMapping.ColumnMappings.Add("DegreeOfDifficult", "DegreeOfDifficult");
            tableMapping.ColumnMappings.Add("ThisMed_Name", "ThisMed_Name");
            tableMapping.ColumnMappings.Add("ThisGeneralOpCode", "ThisGeneralOpCode");
            tableMapping.ColumnMappings.Add("ThisGeneralOpName", "ThisGeneralOpName");
            tableMapping.ColumnMappings.Add("ThisOp", "ThisOp");
            tableMapping.ColumnMappings.Add("ThisOp_Code", "ThisOp_Code");
            tableMapping.ColumnMappings.Add("ThisOp_Name", "ThisOp_Name");
            tableMapping.ColumnMappings.Add("GsdSah", "GsdSah");
            tableMapping.ColumnMappings.Add("TimesForHundredUnits", "TimesForHundredUnits");
            tableMapping.ColumnMappings.Add("OptLineStyle", "OptLineStyle");
            tableMapping.ColumnMappings.Add("LineIsStraight", "LineIsStraight");
            tableMapping.ColumnMappings.Add("LineIsArc", "LineIsArc");
            tableMapping.ColumnMappings.Add("OptLength", "OptLength");
            tableMapping.ColumnMappings.Add("OptRaiseAndFall", "OptRaiseAndFall");
            tableMapping.ColumnMappings.Add("FabIsScrolled", "FabIsScrolled");
            tableMapping.ColumnMappings.Add("FabThickNess", "FabThickNess");
            tableMapping.ColumnMappings.Add("FabRange", "FabRange");
            tableMapping.ColumnMappings.Add("MtmProj", "MtmProj");
            tableMapping.ColumnMappings.Add("MtmCurr", "MtmCurr");
            tableMapping.ColumnMappings.Add("IsConfirmed", "IsConfirmed");
            tableMapping.ColumnMappings.Add("ConfirmTime", "ConfirmTime");
            tableMapping.ColumnMappings.Add("confirmUser", "confirmUser");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[OpSkill] WHERE (([Factory] = @Original_Factory) AND ([Id] = @O" +
                "riginal_Id) AND ([Guid] = @Original_Guid) AND ((@IsNull_SEQ = 1 AND [SEQ] IS NUL" +
                "L) OR ([SEQ] = @Original_SEQ)) AND ((@IsNull_ThisPartialStyle_Code = 1 AND [This" +
                "PartialStyle_Code] IS NULL) OR ([ThisPartialStyle_Code] = @Original_ThisPartialS" +
                "tyle_Code)) AND ((@IsNull_ThisPartialStyle_Name = 1 AND [ThisPartialStyle_Name] " +
                "IS NULL) OR ([ThisPartialStyle_Name] = @Original_ThisPartialStyle_Name)) AND ((@" +
                "IsNull_Attach = 1 AND [Attach] IS NULL) OR ([Attach] = @Original_Attach)) AND ((" +
                "@IsNull_ThisMed_Code = 1 AND [ThisMed_Code] IS NULL) OR ([ThisMed_Code] = @Origi" +
                "nal_ThisMed_Code)) AND ((@IsNull_DegreeOfDifficult = 1 AND [DegreeOfDifficult] I" +
                "S NULL) OR ([DegreeOfDifficult] = @Original_DegreeOfDifficult)) AND ((@IsNull_Th" +
                "isMed_Name = 1 AND [ThisMed_Name] IS NULL) OR ([ThisMed_Name] = @Original_ThisMe" +
                "d_Name)) AND ((@IsNull_ThisGeneralOpCode = 1 AND [ThisGeneralOpCode] IS NULL) OR" +
                " ([ThisGeneralOpCode] = @Original_ThisGeneralOpCode)) AND ((@IsNull_ThisGeneralO" +
                "pName = 1 AND [ThisGeneralOpName] IS NULL) OR ([ThisGeneralOpName] = @Original_T" +
                "hisGeneralOpName)) AND ((@IsNull_ThisOp = 1 AND [ThisOp] IS NULL) OR ([ThisOp] =" +
                " @Original_ThisOp)) AND ((@IsNull_ThisOp_Code = 1 AND [ThisOp_Code] IS NULL) OR " +
                "([ThisOp_Code] = @Original_ThisOp_Code)) AND ((@IsNull_ThisOp_Name = 1 AND [This" +
                "Op_Name] IS NULL) OR ([ThisOp_Name] = @Original_ThisOp_Name)) AND ((@IsNull_GsdS" +
                "ah = 1 AND [GsdSah] IS NULL) OR ([GsdSah] = @Original_GsdSah)) AND ((@IsNull_Tim" +
                "esForHundredUnits = 1 AND [TimesForHundredUnits] IS NULL) OR ([TimesForHundredUn" +
                "its] = @Original_TimesForHundredUnits)) AND ((@IsNull_OptLineStyle = 1 AND [OptL" +
                "ineStyle] IS NULL) OR ([OptLineStyle] = @Original_OptLineStyle)) AND ((@IsNull_L" +
                "ineIsStraight = 1 AND [LineIsStraight] IS NULL) OR ([LineIsStraight] = @Original" +
                "_LineIsStraight)) AND ((@IsNull_LineIsArc = 1 AND [LineIsArc] IS NULL) OR ([Line" +
                "IsArc] = @Original_LineIsArc)) AND ((@IsNull_OptLength = 1 AND [OptLength] IS NU" +
                "LL) OR ([OptLength] = @Original_OptLength)) AND ((@IsNull_OptRaiseAndFall = 1 AN" +
                "D [OptRaiseAndFall] IS NULL) OR ([OptRaiseAndFall] = @Original_OptRaiseAndFall))" +
                " AND ((@IsNull_FabIsScrolled = 1 AND [FabIsScrolled] IS NULL) OR ([FabIsScrolled" +
                "] = @Original_FabIsScrolled)) AND ((@IsNull_FabThickNess = 1 AND [FabThickNess] " +
                "IS NULL) OR ([FabThickNess] = @Original_FabThickNess)) AND ((@IsNull_FabRange = " +
                "1 AND [FabRange] IS NULL) OR ([FabRange] = @Original_FabRange)) AND ((@IsNull_Mt" +
                "mProj = 1 AND [MtmProj] IS NULL) OR ([MtmProj] = @Original_MtmProj)) AND ((@IsNu" +
                "ll_MtmCurr = 1 AND [MtmCurr] IS NULL) OR ([MtmCurr] = @Original_MtmCurr)) AND ((" +
                "@IsNull_IsConfirmed = 1 AND [IsConfirmed] IS NULL) OR ([IsConfirmed] = @Original" +
                "_IsConfirmed)) AND ((@IsNull_ConfirmTime = 1 AND [ConfirmTime] IS NULL) OR ([Con" +
                "firmTime] = @Original_ConfirmTime)) AND ((@IsNull_confirmUser = 1 AND [confirmUs" +
                "er] IS NULL) OR ([confirmUser] = @Original_confirmUser)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Factory", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Factory", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Guid", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Guid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SEQ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEQ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SEQ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEQ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ThisPartialStyle_Code", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ThisPartialStyle_Code", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ThisPartialStyle_Code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ThisPartialStyle_Code", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ThisPartialStyle_Name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ThisPartialStyle_Name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ThisPartialStyle_Name", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ThisPartialStyle_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Attach", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Attach", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Attach", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Attach", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ThisMed_Code", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ThisMed_Code", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ThisMed_Code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ThisMed_Code", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DegreeOfDifficult", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DegreeOfDifficult", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DegreeOfDifficult", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DegreeOfDifficult", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ThisMed_Name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ThisMed_Name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ThisMed_Name", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ThisMed_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ThisGeneralOpCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ThisGeneralOpCode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ThisGeneralOpCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ThisGeneralOpCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ThisGeneralOpName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ThisGeneralOpName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ThisGeneralOpName", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ThisGeneralOpName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ThisOp", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ThisOp", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ThisOp", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ThisOp", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ThisOp_Code", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ThisOp_Code", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ThisOp_Code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ThisOp_Code", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ThisOp_Name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ThisOp_Name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ThisOp_Name", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ThisOp_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_GsdSah", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GsdSah", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GsdSah", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 15, 2, "GsdSah", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TimesForHundredUnits", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TimesForHundredUnits", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TimesForHundredUnits", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TimesForHundredUnits", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OptLineStyle", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OptLineStyle", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OptLineStyle", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OptLineStyle", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LineIsStraight", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LineIsStraight", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LineIsStraight", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LineIsStraight", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LineIsArc", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LineIsArc", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LineIsArc", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LineIsArc", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OptLength", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OptLength", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OptLength", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OptLength", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OptRaiseAndFall", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OptRaiseAndFall", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OptRaiseAndFall", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OptRaiseAndFall", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FabIsScrolled", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FabIsScrolled", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FabIsScrolled", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FabIsScrolled", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FabThickNess", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FabThickNess", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FabThickNess", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FabThickNess", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FabRange", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FabRange", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FabRange", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FabRange", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MtmProj", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MtmProj", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MtmProj", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MtmProj", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MtmCurr", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MtmCurr", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MtmCurr", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MtmCurr", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IsConfirmed", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsConfirmed", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsConfirmed", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsConfirmed", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ConfirmTime", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConfirmTime", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConfirmTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConfirmTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_confirmUser", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "confirmUser", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_confirmUser", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "confirmUser", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[OpSkill] ([Factory], [Id], [Guid], [SEQ], [ThisPartialStyle_Code], [ThisPartialStyle_Name], [Attach], [ThisMed_Code], [DegreeOfDifficult], [ThisMed_Name], [ThisGeneralOpCode], [ThisGeneralOpName], [ThisOp], [ThisOp_Code], [ThisOp_Name], [GsdSah], [TimesForHundredUnits], [OptLineStyle], [LineIsStraight], [LineIsArc], [OptLength], [OptRaiseAndFall], [FabIsScrolled], [FabThickNess], [FabRange], [MtmProj], [MtmCurr], [IsConfirmed], [ConfirmTime], [confirmUser]) VALUES (@Factory, @Id, @Guid, @SEQ, @ThisPartialStyle_Code, @ThisPartialStyle_Name, @Attach, @ThisMed_Code, @DegreeOfDifficult, @ThisMed_Name, @ThisGeneralOpCode, @ThisGeneralOpName, @ThisOp, @ThisOp_Code, @ThisOp_Name, @GsdSah, @TimesForHundredUnits, @OptLineStyle, @LineIsStraight, @LineIsArc, @OptLength, @OptRaiseAndFall, @FabIsScrolled, @FabThickNess, @FabRange, @MtmProj, @MtmCurr, @IsConfirmed, @ConfirmTime, @confirmUser);
SELECT Factory, Id, Guid, SEQ, ThisPartialStyle_Code, ThisPartialStyle_Name, Attach, ThisMed_Code, DegreeOfDifficult, ThisMed_Name, ThisGeneralOpCode, ThisGeneralOpName, ThisOp, ThisOp_Code, ThisOp_Name, GsdSah, TimesForHundredUnits, OptLineStyle, LineIsStraight, LineIsArc, OptLength, OptRaiseAndFall, FabIsScrolled, FabThickNess, FabRange, MtmProj, MtmCurr, IsConfirmed, ConfirmTime, confirmUser FROM OpSkill WHERE (Factory = @Factory) AND (Guid = @Guid) AND (Id = @Id)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Factory", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Factory", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Guid", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Guid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SEQ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEQ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ThisPartialStyle_Code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ThisPartialStyle_Code", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ThisPartialStyle_Name", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ThisPartialStyle_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Attach", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Attach", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ThisMed_Code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ThisMed_Code", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DegreeOfDifficult", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DegreeOfDifficult", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ThisMed_Name", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ThisMed_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ThisGeneralOpCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ThisGeneralOpCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ThisGeneralOpName", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ThisGeneralOpName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ThisOp", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ThisOp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ThisOp_Code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ThisOp_Code", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ThisOp_Name", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ThisOp_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GsdSah", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 15, 2, "GsdSah", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TimesForHundredUnits", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TimesForHundredUnits", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OptLineStyle", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OptLineStyle", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LineIsStraight", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LineIsStraight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LineIsArc", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LineIsArc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OptLength", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OptLength", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OptRaiseAndFall", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OptRaiseAndFall", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FabIsScrolled", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FabIsScrolled", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FabThickNess", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FabThickNess", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FabRange", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FabRange", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MtmProj", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MtmProj", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MtmCurr", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MtmCurr", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsConfirmed", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsConfirmed", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConfirmTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConfirmTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@confirmUser", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "confirmUser", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[OpSkill] SET [Factory] = @Factory, [Id] = @Id, [Guid] = @Guid, [SEQ" +
                "] = @SEQ, [ThisPartialStyle_Code] = @ThisPartialStyle_Code, [ThisPartialStyle_Na" +
                "me] = @ThisPartialStyle_Name, [Attach] = @Attach, [ThisMed_Code] = @ThisMed_Code" +
                ", [DegreeOfDifficult] = @DegreeOfDifficult, [ThisMed_Name] = @ThisMed_Name, [Thi" +
                "sGeneralOpCode] = @ThisGeneralOpCode, [ThisGeneralOpName] = @ThisGeneralOpName, " +
                "[ThisOp] = @ThisOp, [ThisOp_Code] = @ThisOp_Code, [ThisOp_Name] = @ThisOp_Name, " +
                "[GsdSah] = @GsdSah, [TimesForHundredUnits] = @TimesForHundredUnits, [OptLineStyl" +
                "e] = @OptLineStyle, [LineIsStraight] = @LineIsStraight, [LineIsArc] = @LineIsArc" +
                ", [OptLength] = @OptLength, [OptRaiseAndFall] = @OptRaiseAndFall, [FabIsScrolled" +
                "] = @FabIsScrolled, [FabThickNess] = @FabThickNess, [FabRange] = @FabRange, [Mtm" +
                "Proj] = @MtmProj, [MtmCurr] = @MtmCurr, [IsConfirmed] = @IsConfirmed, [ConfirmTi" +
                "me] = @ConfirmTime, [confirmUser] = @confirmUser WHERE (([Factory] = @Original_F" +
                "actory) AND ([Id] = @Original_Id) AND ([Guid] = @Original_Guid) AND ((@IsNull_SE" +
                "Q = 1 AND [SEQ] IS NULL) OR ([SEQ] = @Original_SEQ)) AND ((@IsNull_ThisPartialSt" +
                "yle_Code = 1 AND [ThisPartialStyle_Code] IS NULL) OR ([ThisPartialStyle_Code] = " +
                "@Original_ThisPartialStyle_Code)) AND ((@IsNull_ThisPartialStyle_Name = 1 AND [T" +
                "hisPartialStyle_Name] IS NULL) OR ([ThisPartialStyle_Name] = @Original_ThisParti" +
                "alStyle_Name)) AND ((@IsNull_Attach = 1 AND [Attach] IS NULL) OR ([Attach] = @Or" +
                "iginal_Attach)) AND ((@IsNull_ThisMed_Code = 1 AND [ThisMed_Code] IS NULL) OR ([" +
                "ThisMed_Code] = @Original_ThisMed_Code)) AND ((@IsNull_DegreeOfDifficult = 1 AND" +
                " [DegreeOfDifficult] IS NULL) OR ([DegreeOfDifficult] = @Original_DegreeOfDiffic" +
                "ult)) AND ((@IsNull_ThisMed_Name = 1 AND [ThisMed_Name] IS NULL) OR ([ThisMed_Na" +
                "me] = @Original_ThisMed_Name)) AND ((@IsNull_ThisGeneralOpCode = 1 AND [ThisGene" +
                "ralOpCode] IS NULL) OR ([ThisGeneralOpCode] = @Original_ThisGeneralOpCode)) AND " +
                "((@IsNull_ThisGeneralOpName = 1 AND [ThisGeneralOpName] IS NULL) OR ([ThisGenera" +
                "lOpName] = @Original_ThisGeneralOpName)) AND ((@IsNull_ThisOp = 1 AND [ThisOp] I" +
                "S NULL) OR ([ThisOp] = @Original_ThisOp)) AND ((@IsNull_ThisOp_Code = 1 AND [Thi" +
                "sOp_Code] IS NULL) OR ([ThisOp_Code] = @Original_ThisOp_Code)) AND ((@IsNull_Thi" +
                "sOp_Name = 1 AND [ThisOp_Name] IS NULL) OR ([ThisOp_Name] = @Original_ThisOp_Nam" +
                "e)) AND ((@IsNull_GsdSah = 1 AND [GsdSah] IS NULL) OR ([GsdSah] = @Original_GsdS" +
                "ah)) AND ((@IsNull_TimesForHundredUnits = 1 AND [TimesForHundredUnits] IS NULL) " +
                "OR ([TimesForHundredUnits] = @Original_TimesForHundredUnits)) AND ((@IsNull_OptL" +
                "ineStyle = 1 AND [OptLineStyle] IS NULL) OR ([OptLineStyle] = @Original_OptLineS" +
                "tyle)) AND ((@IsNull_LineIsStraight = 1 AND [LineIsStraight] IS NULL) OR ([LineI" +
                "sStraight] = @Original_LineIsStraight)) AND ((@IsNull_LineIsArc = 1 AND [LineIsA" +
                "rc] IS NULL) OR ([LineIsArc] = @Original_LineIsArc)) AND ((@IsNull_OptLength = 1" +
                " AND [OptLength] IS NULL) OR ([OptLength] = @Original_OptLength)) AND ((@IsNull_" +
                "OptRaiseAndFall = 1 AND [OptRaiseAndFall] IS NULL) OR ([OptRaiseAndFall] = @Orig" +
                "inal_OptRaiseAndFall)) AND ((@IsNull_FabIsScrolled = 1 AND [FabIsScrolled] IS NU" +
                "LL) OR ([FabIsScrolled] = @Original_FabIsScrolled)) AND ((@IsNull_FabThickNess =" +
                " 1 AND [FabThickNess] IS NULL) OR ([FabThickNess] = @Original_FabThickNess)) AND" +
                " ((@IsNull_FabRange = 1 AND [FabRange] IS NULL) OR ([FabRange] = @Original_FabRa" +
                "nge)) AND ((@IsNull_MtmProj = 1 AND [MtmProj] IS NULL) OR ([MtmProj] = @Original" +
                "_MtmProj)) AND ((@IsNull_MtmCurr = 1 AND [MtmCurr] IS NULL) OR ([MtmCurr] = @Ori" +
                "ginal_MtmCurr)) AND ((@IsNull_IsConfirmed = 1 AND [IsConfirmed] IS NULL) OR ([Is" +
                "Confirmed] = @Original_IsConfirmed)) AND ((@IsNull_ConfirmTime = 1 AND [ConfirmT" +
                "ime] IS NULL) OR ([ConfirmTime] = @Original_ConfirmTime)) AND ((@IsNull_confirmU" +
                "ser = 1 AND [confirmUser] IS NULL) OR ([confirmUser] = @Original_confirmUser)));" +
                "\r\nSELECT Factory, Id, Guid, SEQ, ThisPartialStyle_Code, ThisPartialStyle_Name, A" +
                "ttach, ThisMed_Code, DegreeOfDifficult, ThisMed_Name, ThisGeneralOpCode, ThisGen" +
                "eralOpName, ThisOp, ThisOp_Code, ThisOp_Name, GsdSah, TimesForHundredUnits, OptL" +
                "ineStyle, LineIsStraight, LineIsArc, OptLength, OptRaiseAndFall, FabIsScrolled, " +
                "FabThickNess, FabRange, MtmProj, MtmCurr, IsConfirmed, ConfirmTime, confirmUser " +
                "FROM OpSkill WHERE (Factory = @Factory) AND (Guid = @Guid) AND (Id = @Id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Factory", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Factory", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Guid", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Guid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SEQ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEQ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ThisPartialStyle_Code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ThisPartialStyle_Code", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ThisPartialStyle_Name", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ThisPartialStyle_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Attach", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Attach", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ThisMed_Code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ThisMed_Code", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DegreeOfDifficult", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DegreeOfDifficult", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ThisMed_Name", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ThisMed_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ThisGeneralOpCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ThisGeneralOpCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ThisGeneralOpName", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ThisGeneralOpName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ThisOp", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ThisOp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ThisOp_Code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ThisOp_Code", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ThisOp_Name", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ThisOp_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GsdSah", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 15, 2, "GsdSah", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TimesForHundredUnits", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TimesForHundredUnits", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OptLineStyle", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OptLineStyle", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LineIsStraight", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LineIsStraight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LineIsArc", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LineIsArc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OptLength", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OptLength", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OptRaiseAndFall", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OptRaiseAndFall", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FabIsScrolled", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FabIsScrolled", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FabThickNess", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FabThickNess", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FabRange", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FabRange", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MtmProj", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MtmProj", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MtmCurr", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MtmCurr", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsConfirmed", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsConfirmed", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConfirmTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConfirmTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@confirmUser", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "confirmUser", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Factory", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Factory", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Guid", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Guid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SEQ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEQ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SEQ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEQ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ThisPartialStyle_Code", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ThisPartialStyle_Code", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ThisPartialStyle_Code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ThisPartialStyle_Code", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ThisPartialStyle_Name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ThisPartialStyle_Name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ThisPartialStyle_Name", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ThisPartialStyle_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Attach", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Attach", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Attach", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Attach", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ThisMed_Code", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ThisMed_Code", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ThisMed_Code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ThisMed_Code", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DegreeOfDifficult", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DegreeOfDifficult", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DegreeOfDifficult", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DegreeOfDifficult", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ThisMed_Name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ThisMed_Name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ThisMed_Name", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ThisMed_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ThisGeneralOpCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ThisGeneralOpCode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ThisGeneralOpCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ThisGeneralOpCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ThisGeneralOpName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ThisGeneralOpName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ThisGeneralOpName", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ThisGeneralOpName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ThisOp", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ThisOp", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ThisOp", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ThisOp", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ThisOp_Code", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ThisOp_Code", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ThisOp_Code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ThisOp_Code", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ThisOp_Name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ThisOp_Name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ThisOp_Name", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ThisOp_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_GsdSah", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GsdSah", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GsdSah", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 15, 2, "GsdSah", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TimesForHundredUnits", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TimesForHundredUnits", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TimesForHundredUnits", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TimesForHundredUnits", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OptLineStyle", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OptLineStyle", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OptLineStyle", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OptLineStyle", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LineIsStraight", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LineIsStraight", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LineIsStraight", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LineIsStraight", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LineIsArc", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LineIsArc", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LineIsArc", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LineIsArc", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OptLength", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OptLength", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OptLength", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OptLength", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OptRaiseAndFall", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OptRaiseAndFall", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OptRaiseAndFall", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OptRaiseAndFall", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FabIsScrolled", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FabIsScrolled", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FabIsScrolled", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FabIsScrolled", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FabThickNess", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FabThickNess", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FabThickNess", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FabThickNess", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FabRange", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FabRange", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FabRange", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FabRange", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MtmProj", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MtmProj", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MtmProj", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MtmProj", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MtmCurr", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MtmCurr", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MtmCurr", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MtmCurr", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IsConfirmed", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsConfirmed", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsConfirmed", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsConfirmed", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ConfirmTime", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConfirmTime", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConfirmTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConfirmTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_confirmUser", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "confirmUser", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_confirmUser", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "confirmUser", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::PH.LWPM.UI.Properties.Settings.Default.PH_LWPM_WPConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT Factory, Id, Guid, SEQ, ThisPartialStyle_Code, ThisPartialStyle_Name, Attach, ThisMed_Code, DegreeOfDifficult, ThisMed_Name, ThisGeneralOpCode, ThisGeneralOpName, ThisOp, ThisOp_Code, ThisOp_Name, GsdSah, TimesForHundredUnits, OptLineStyle, LineIsStraight, LineIsArc, OptLength, OptRaiseAndFall, FabIsScrolled, FabThickNess, FabRange, MtmProj, MtmCurr, IsConfirmed, ConfirmTime, confirmUser FROM dbo.OpSkill";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SkillDataSet.OpSkillDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SkillDataSet.OpSkillDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            SkillDataSet.OpSkillDataTable dataTable = new SkillDataSet.OpSkillDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SkillDataSet.OpSkillDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SkillDataSet dataSet) {
            return this.Adapter.Update(dataSet, "OpSkill");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    string Original_Factory, 
                    string Original_Id, 
                    System.Guid Original_Guid, 
                    global::System.Nullable<int> Original_SEQ, 
                    string Original_ThisPartialStyle_Code, 
                    string Original_ThisPartialStyle_Name, 
                    string Original_Attach, 
                    string Original_ThisMed_Code, 
                    string Original_DegreeOfDifficult, 
                    string Original_ThisMed_Name, 
                    string Original_ThisGeneralOpCode, 
                    string Original_ThisGeneralOpName, 
                    string Original_ThisOp, 
                    string Original_ThisOp_Code, 
                    string Original_ThisOp_Name, 
                    global::System.Nullable<decimal> Original_GsdSah, 
                    global::System.Nullable<int> Original_TimesForHundredUnits, 
                    string Original_OptLineStyle, 
                    global::System.Nullable<bool> Original_LineIsStraight, 
                    global::System.Nullable<bool> Original_LineIsArc, 
                    global::System.Nullable<int> Original_OptLength, 
                    global::System.Nullable<int> Original_OptRaiseAndFall, 
                    global::System.Nullable<bool> Original_FabIsScrolled, 
                    string Original_FabThickNess, 
                    global::System.Nullable<int> Original_FabRange, 
                    global::System.Nullable<int> Original_MtmProj, 
                    global::System.Nullable<int> Original_MtmCurr, 
                    global::System.Nullable<bool> Original_IsConfirmed, 
                    global::System.Nullable<global::System.DateTime> Original_ConfirmTime, 
                    string Original_confirmUser) {
            if ((Original_Factory == null)) {
                throw new global::System.ArgumentNullException("Original_Factory");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_Factory));
            }
            if ((Original_Id == null)) {
                throw new global::System.ArgumentNullException("Original_Id");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Id));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((System.Guid)(Original_Guid));
            if ((Original_SEQ.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_SEQ.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_ThisPartialStyle_Code == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_ThisPartialStyle_Code));
            }
            if ((Original_ThisPartialStyle_Name == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_ThisPartialStyle_Name));
            }
            if ((Original_Attach == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_Attach));
            }
            if ((Original_ThisMed_Code == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_ThisMed_Code));
            }
            if ((Original_DegreeOfDifficult == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_DegreeOfDifficult));
            }
            if ((Original_ThisMed_Name == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_ThisMed_Name));
            }
            if ((Original_ThisGeneralOpCode == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_ThisGeneralOpCode));
            }
            if ((Original_ThisGeneralOpName == null)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_ThisGeneralOpName));
            }
            if ((Original_ThisOp == null)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((string)(Original_ThisOp));
            }
            if ((Original_ThisOp_Code == null)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((string)(Original_ThisOp_Code));
            }
            if ((Original_ThisOp_Name == null)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((string)(Original_ThisOp_Name));
            }
            if ((Original_GsdSah.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((decimal)(Original_GsdSah.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Original_TimesForHundredUnits.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((int)(Original_TimesForHundredUnits.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((Original_OptLineStyle == null)) {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[32].Value = ((string)(Original_OptLineStyle));
            }
            if ((Original_LineIsStraight.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[34].Value = ((bool)(Original_LineIsStraight.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((Original_LineIsArc.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[36].Value = ((bool)(Original_LineIsArc.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((Original_OptLength.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[38].Value = ((int)(Original_OptLength.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((Original_OptRaiseAndFall.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[40].Value = ((int)(Original_OptRaiseAndFall.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((Original_FabIsScrolled.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[42].Value = ((bool)(Original_FabIsScrolled.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((Original_FabThickNess == null)) {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[44].Value = ((string)(Original_FabThickNess));
            }
            if ((Original_FabRange.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[46].Value = ((int)(Original_FabRange.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((Original_MtmProj.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[48].Value = ((int)(Original_MtmProj.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((Original_MtmCurr.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[50].Value = ((int)(Original_MtmCurr.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((Original_IsConfirmed.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[52].Value = ((bool)(Original_IsConfirmed.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((Original_ConfirmTime.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[54].Value = ((System.DateTime)(Original_ConfirmTime.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((Original_confirmUser == null)) {
                this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[56].Value = ((string)(Original_confirmUser));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string Factory, 
                    string Id, 
                    System.Guid Guid, 
                    global::System.Nullable<int> SEQ, 
                    string ThisPartialStyle_Code, 
                    string ThisPartialStyle_Name, 
                    string Attach, 
                    string ThisMed_Code, 
                    string DegreeOfDifficult, 
                    string ThisMed_Name, 
                    string ThisGeneralOpCode, 
                    string ThisGeneralOpName, 
                    string ThisOp, 
                    string ThisOp_Code, 
                    string ThisOp_Name, 
                    global::System.Nullable<decimal> GsdSah, 
                    global::System.Nullable<int> TimesForHundredUnits, 
                    string OptLineStyle, 
                    global::System.Nullable<bool> LineIsStraight, 
                    global::System.Nullable<bool> LineIsArc, 
                    global::System.Nullable<int> OptLength, 
                    global::System.Nullable<int> OptRaiseAndFall, 
                    global::System.Nullable<bool> FabIsScrolled, 
                    string FabThickNess, 
                    global::System.Nullable<int> FabRange, 
                    global::System.Nullable<int> MtmProj, 
                    global::System.Nullable<int> MtmCurr, 
                    global::System.Nullable<bool> IsConfirmed, 
                    global::System.Nullable<global::System.DateTime> ConfirmTime, 
                    string confirmUser) {
            if ((Factory == null)) {
                throw new global::System.ArgumentNullException("Factory");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Factory));
            }
            if ((Id == null)) {
                throw new global::System.ArgumentNullException("Id");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Id));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((System.Guid)(Guid));
            if ((SEQ.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((int)(SEQ.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((ThisPartialStyle_Code == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(ThisPartialStyle_Code));
            }
            if ((ThisPartialStyle_Name == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(ThisPartialStyle_Name));
            }
            if ((Attach == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Attach));
            }
            if ((ThisMed_Code == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(ThisMed_Code));
            }
            if ((DegreeOfDifficult == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(DegreeOfDifficult));
            }
            if ((ThisMed_Name == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(ThisMed_Name));
            }
            if ((ThisGeneralOpCode == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(ThisGeneralOpCode));
            }
            if ((ThisGeneralOpName == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(ThisGeneralOpName));
            }
            if ((ThisOp == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(ThisOp));
            }
            if ((ThisOp_Code == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(ThisOp_Code));
            }
            if ((ThisOp_Name == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(ThisOp_Name));
            }
            if ((GsdSah.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((decimal)(GsdSah.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((TimesForHundredUnits.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((int)(TimesForHundredUnits.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((OptLineStyle == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(OptLineStyle));
            }
            if ((LineIsStraight.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((bool)(LineIsStraight.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((LineIsArc.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[19].Value = ((bool)(LineIsArc.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((OptLength.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((int)(OptLength.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((OptRaiseAndFall.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((int)(OptRaiseAndFall.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((FabIsScrolled.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[22].Value = ((bool)(FabIsScrolled.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((FabThickNess == null)) {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(FabThickNess));
            }
            if ((FabRange.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[24].Value = ((int)(FabRange.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((MtmProj.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[25].Value = ((int)(MtmProj.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((MtmCurr.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[26].Value = ((int)(MtmCurr.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((IsConfirmed.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[27].Value = ((bool)(IsConfirmed.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((ConfirmTime.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[28].Value = ((System.DateTime)(ConfirmTime.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((confirmUser == null)) {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = ((string)(confirmUser));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Factory, 
                    string Id, 
                    System.Guid Guid, 
                    global::System.Nullable<int> SEQ, 
                    string ThisPartialStyle_Code, 
                    string ThisPartialStyle_Name, 
                    string Attach, 
                    string ThisMed_Code, 
                    string DegreeOfDifficult, 
                    string ThisMed_Name, 
                    string ThisGeneralOpCode, 
                    string ThisGeneralOpName, 
                    string ThisOp, 
                    string ThisOp_Code, 
                    string ThisOp_Name, 
                    global::System.Nullable<decimal> GsdSah, 
                    global::System.Nullable<int> TimesForHundredUnits, 
                    string OptLineStyle, 
                    global::System.Nullable<bool> LineIsStraight, 
                    global::System.Nullable<bool> LineIsArc, 
                    global::System.Nullable<int> OptLength, 
                    global::System.Nullable<int> OptRaiseAndFall, 
                    global::System.Nullable<bool> FabIsScrolled, 
                    string FabThickNess, 
                    global::System.Nullable<int> FabRange, 
                    global::System.Nullable<int> MtmProj, 
                    global::System.Nullable<int> MtmCurr, 
                    global::System.Nullable<bool> IsConfirmed, 
                    global::System.Nullable<global::System.DateTime> ConfirmTime, 
                    string confirmUser, 
                    string Original_Factory, 
                    string Original_Id, 
                    System.Guid Original_Guid, 
                    global::System.Nullable<int> Original_SEQ, 
                    string Original_ThisPartialStyle_Code, 
                    string Original_ThisPartialStyle_Name, 
                    string Original_Attach, 
                    string Original_ThisMed_Code, 
                    string Original_DegreeOfDifficult, 
                    string Original_ThisMed_Name, 
                    string Original_ThisGeneralOpCode, 
                    string Original_ThisGeneralOpName, 
                    string Original_ThisOp, 
                    string Original_ThisOp_Code, 
                    string Original_ThisOp_Name, 
                    global::System.Nullable<decimal> Original_GsdSah, 
                    global::System.Nullable<int> Original_TimesForHundredUnits, 
                    string Original_OptLineStyle, 
                    global::System.Nullable<bool> Original_LineIsStraight, 
                    global::System.Nullable<bool> Original_LineIsArc, 
                    global::System.Nullable<int> Original_OptLength, 
                    global::System.Nullable<int> Original_OptRaiseAndFall, 
                    global::System.Nullable<bool> Original_FabIsScrolled, 
                    string Original_FabThickNess, 
                    global::System.Nullable<int> Original_FabRange, 
                    global::System.Nullable<int> Original_MtmProj, 
                    global::System.Nullable<int> Original_MtmCurr, 
                    global::System.Nullable<bool> Original_IsConfirmed, 
                    global::System.Nullable<global::System.DateTime> Original_ConfirmTime, 
                    string Original_confirmUser) {
            if ((Factory == null)) {
                throw new global::System.ArgumentNullException("Factory");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Factory));
            }
            if ((Id == null)) {
                throw new global::System.ArgumentNullException("Id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Id));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((System.Guid)(Guid));
            if ((SEQ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(SEQ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((ThisPartialStyle_Code == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(ThisPartialStyle_Code));
            }
            if ((ThisPartialStyle_Name == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(ThisPartialStyle_Name));
            }
            if ((Attach == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Attach));
            }
            if ((ThisMed_Code == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(ThisMed_Code));
            }
            if ((DegreeOfDifficult == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(DegreeOfDifficult));
            }
            if ((ThisMed_Name == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(ThisMed_Name));
            }
            if ((ThisGeneralOpCode == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(ThisGeneralOpCode));
            }
            if ((ThisGeneralOpName == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(ThisGeneralOpName));
            }
            if ((ThisOp == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(ThisOp));
            }
            if ((ThisOp_Code == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(ThisOp_Code));
            }
            if ((ThisOp_Name == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(ThisOp_Name));
            }
            if ((GsdSah.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((decimal)(GsdSah.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((TimesForHundredUnits.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(TimesForHundredUnits.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((OptLineStyle == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(OptLineStyle));
            }
            if ((LineIsStraight.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((bool)(LineIsStraight.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((LineIsArc.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((bool)(LineIsArc.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((OptLength.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((int)(OptLength.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((OptRaiseAndFall.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((int)(OptRaiseAndFall.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((FabIsScrolled.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((bool)(FabIsScrolled.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((FabThickNess == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(FabThickNess));
            }
            if ((FabRange.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((int)(FabRange.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((MtmProj.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((int)(MtmProj.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((MtmCurr.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((int)(MtmCurr.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((IsConfirmed.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((bool)(IsConfirmed.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((ConfirmTime.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((System.DateTime)(ConfirmTime.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((confirmUser == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(confirmUser));
            }
            if ((Original_Factory == null)) {
                throw new global::System.ArgumentNullException("Original_Factory");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Original_Factory));
            }
            if ((Original_Id == null)) {
                throw new global::System.ArgumentNullException("Original_Id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(Original_Id));
            }
            this.Adapter.UpdateCommand.Parameters[32].Value = ((System.Guid)(Original_Guid));
            if ((Original_SEQ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[34].Value = ((int)(Original_SEQ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((Original_ThisPartialStyle_Code == null)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(Original_ThisPartialStyle_Code));
            }
            if ((Original_ThisPartialStyle_Name == null)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(Original_ThisPartialStyle_Name));
            }
            if ((Original_Attach == null)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[40].Value = ((string)(Original_Attach));
            }
            if ((Original_ThisMed_Code == null)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[42].Value = ((string)(Original_ThisMed_Code));
            }
            if ((Original_DegreeOfDifficult == null)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[44].Value = ((string)(Original_DegreeOfDifficult));
            }
            if ((Original_ThisMed_Name == null)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[46].Value = ((string)(Original_ThisMed_Name));
            }
            if ((Original_ThisGeneralOpCode == null)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[48].Value = ((string)(Original_ThisGeneralOpCode));
            }
            if ((Original_ThisGeneralOpName == null)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[50].Value = ((string)(Original_ThisGeneralOpName));
            }
            if ((Original_ThisOp == null)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[52].Value = ((string)(Original_ThisOp));
            }
            if ((Original_ThisOp_Code == null)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[54].Value = ((string)(Original_ThisOp_Code));
            }
            if ((Original_ThisOp_Name == null)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[56].Value = ((string)(Original_ThisOp_Name));
            }
            if ((Original_GsdSah.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[58].Value = ((decimal)(Original_GsdSah.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((Original_TimesForHundredUnits.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[60].Value = ((int)(Original_TimesForHundredUnits.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((Original_OptLineStyle == null)) {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[62].Value = ((string)(Original_OptLineStyle));
            }
            if ((Original_LineIsStraight.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[64].Value = ((bool)(Original_LineIsStraight.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            if ((Original_LineIsArc.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[66].Value = ((bool)(Original_LineIsArc.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            if ((Original_OptLength.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[68].Value = ((int)(Original_OptLength.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            if ((Original_OptRaiseAndFall.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[70].Value = ((int)(Original_OptRaiseAndFall.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            if ((Original_FabIsScrolled.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[72].Value = ((bool)(Original_FabIsScrolled.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            if ((Original_FabThickNess == null)) {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[74].Value = ((string)(Original_FabThickNess));
            }
            if ((Original_FabRange.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[75].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[76].Value = ((int)(Original_FabRange.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[75].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            if ((Original_MtmProj.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[77].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[78].Value = ((int)(Original_MtmProj.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[77].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            if ((Original_MtmCurr.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[79].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[80].Value = ((int)(Original_MtmCurr.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[79].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            if ((Original_IsConfirmed.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[81].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[82].Value = ((bool)(Original_IsConfirmed.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[81].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            if ((Original_ConfirmTime.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[83].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[84].Value = ((System.DateTime)(Original_ConfirmTime.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[83].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[84].Value = global::System.DBNull.Value;
            }
            if ((Original_confirmUser == null)) {
                this.Adapter.UpdateCommand.Parameters[85].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[86].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[85].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[86].Value = ((string)(Original_confirmUser));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<int> SEQ, 
                    string ThisPartialStyle_Code, 
                    string ThisPartialStyle_Name, 
                    string Attach, 
                    string ThisMed_Code, 
                    string DegreeOfDifficult, 
                    string ThisMed_Name, 
                    string ThisGeneralOpCode, 
                    string ThisGeneralOpName, 
                    string ThisOp, 
                    string ThisOp_Code, 
                    string ThisOp_Name, 
                    global::System.Nullable<decimal> GsdSah, 
                    global::System.Nullable<int> TimesForHundredUnits, 
                    string OptLineStyle, 
                    global::System.Nullable<bool> LineIsStraight, 
                    global::System.Nullable<bool> LineIsArc, 
                    global::System.Nullable<int> OptLength, 
                    global::System.Nullable<int> OptRaiseAndFall, 
                    global::System.Nullable<bool> FabIsScrolled, 
                    string FabThickNess, 
                    global::System.Nullable<int> FabRange, 
                    global::System.Nullable<int> MtmProj, 
                    global::System.Nullable<int> MtmCurr, 
                    global::System.Nullable<bool> IsConfirmed, 
                    global::System.Nullable<global::System.DateTime> ConfirmTime, 
                    string confirmUser, 
                    string Original_Factory, 
                    string Original_Id, 
                    System.Guid Original_Guid, 
                    global::System.Nullable<int> Original_SEQ, 
                    string Original_ThisPartialStyle_Code, 
                    string Original_ThisPartialStyle_Name, 
                    string Original_Attach, 
                    string Original_ThisMed_Code, 
                    string Original_DegreeOfDifficult, 
                    string Original_ThisMed_Name, 
                    string Original_ThisGeneralOpCode, 
                    string Original_ThisGeneralOpName, 
                    string Original_ThisOp, 
                    string Original_ThisOp_Code, 
                    string Original_ThisOp_Name, 
                    global::System.Nullable<decimal> Original_GsdSah, 
                    global::System.Nullable<int> Original_TimesForHundredUnits, 
                    string Original_OptLineStyle, 
                    global::System.Nullable<bool> Original_LineIsStraight, 
                    global::System.Nullable<bool> Original_LineIsArc, 
                    global::System.Nullable<int> Original_OptLength, 
                    global::System.Nullable<int> Original_OptRaiseAndFall, 
                    global::System.Nullable<bool> Original_FabIsScrolled, 
                    string Original_FabThickNess, 
                    global::System.Nullable<int> Original_FabRange, 
                    global::System.Nullable<int> Original_MtmProj, 
                    global::System.Nullable<int> Original_MtmCurr, 
                    global::System.Nullable<bool> Original_IsConfirmed, 
                    global::System.Nullable<global::System.DateTime> Original_ConfirmTime, 
                    string Original_confirmUser) {
            return this.Update(Original_Factory, Original_Id, Original_Guid, SEQ, ThisPartialStyle_Code, ThisPartialStyle_Name, Attach, ThisMed_Code, DegreeOfDifficult, ThisMed_Name, ThisGeneralOpCode, ThisGeneralOpName, ThisOp, ThisOp_Code, ThisOp_Name, GsdSah, TimesForHundredUnits, OptLineStyle, LineIsStraight, LineIsArc, OptLength, OptRaiseAndFall, FabIsScrolled, FabThickNess, FabRange, MtmProj, MtmCurr, IsConfirmed, ConfirmTime, confirmUser, Original_Factory, Original_Id, Original_Guid, Original_SEQ, Original_ThisPartialStyle_Code, Original_ThisPartialStyle_Name, Original_Attach, Original_ThisMed_Code, Original_DegreeOfDifficult, Original_ThisMed_Name, Original_ThisGeneralOpCode, Original_ThisGeneralOpName, Original_ThisOp, Original_ThisOp_Code, Original_ThisOp_Name, Original_GsdSah, Original_TimesForHundredUnits, Original_OptLineStyle, Original_LineIsStraight, Original_LineIsArc, Original_OptLength, Original_OptRaiseAndFall, Original_FabIsScrolled, Original_FabThickNess, Original_FabRange, Original_MtmProj, Original_MtmCurr, Original_IsConfirmed, Original_ConfirmTime, Original_confirmUser);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private OpSkillTableAdapter _opSkillTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public OpSkillTableAdapter OpSkillTableAdapter {
            get {
                return this._opSkillTableAdapter;
            }
            set {
                this._opSkillTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._opSkillTableAdapter != null) 
                            && (this._opSkillTableAdapter.Connection != null))) {
                    return this._opSkillTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._opSkillTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateUpdatedRows(SkillDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._opSkillTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.OpSkill.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._opSkillTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateInsertedRows(SkillDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._opSkillTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.OpSkill.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._opSkillTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateDeletedRows(SkillDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._opSkillTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.OpSkill.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._opSkillTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int UpdateAll(SkillDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._opSkillTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._opSkillTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._opSkillTableAdapter != null)) {
                    revertConnections.Add(this._opSkillTableAdapter, this._opSkillTableAdapter.Connection);
                    this._opSkillTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._opSkillTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._opSkillTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._opSkillTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._opSkillTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._opSkillTableAdapter != null)) {
                    this._opSkillTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._opSkillTableAdapter]));
                    this._opSkillTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool IsChildAndParent(global::System.Data.DataRow child, global::System.Data.DataRow parent) {
                global::System.Diagnostics.Debug.Assert((child != null));
                global::System.Diagnostics.Debug.Assert((parent != null));
                global::System.Data.DataRow newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((newParent != null) 
                            && ((object.ReferenceEquals(newParent, child) == false) 
                            && (object.ReferenceEquals(newParent, parent) == false))); 
                ) {
                    newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }
                if ((newParent == null)) {
                    for (newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original); ((newParent != null) 
                                && ((object.ReferenceEquals(newParent, child) == false) 
                                && (object.ReferenceEquals(newParent, parent) == false))); 
                    ) {
                        newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }
                if (object.ReferenceEquals(newParent, parent)) {
                    return true;
                }
                return false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                // Is row1 the child or grandchild of row2
                if (this.IsChildAndParent(row1, row2)) {
                    return this._childFirst;
                }

                // Is row2 the child or grandchild of row1
                if (this.IsChildAndParent(row2, row1)) {
                    return (-1 * this._childFirst);
                }
                return 0;
            }
        }
    }
}

#pragma warning restore 1591