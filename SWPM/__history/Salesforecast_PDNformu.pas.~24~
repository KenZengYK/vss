unit Salesforecast_PDNformu;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, cxGraphics, cxControls, cxLookAndFeels, cxLookAndFeelPainters,
  cxStyles, cxCustomData, cxFilter, cxData, cxDataStorage, cxEdit, DB, cxDBData,
  cxGridLevel, cxClasses, cxGridCustomView, cxGridCustomTableView,
  cxGridTableView, cxGridDBTableView, cxGrid, ExtCtrls, StdCtrls, Spin,
  Buttons, DateUtils, cxGridExportLink, DBClient, cxCurrencyEdit;

type
  Tfrmsalesforecast_pdn = class(TForm)
    Panel1: TPanel;
    cxGrid1DBTableView1: TcxGridDBTableView;
    cxGrid1Level1: TcxGridLevel;
    cxGrid1: TcxGrid;
    Panel2: TPanel;
    Label1: TLabel;
    ComboBox1: TComboBox;
    GroupBox1: TGroupBox;
    Label2: TLabel;
    SpinEdit1: TSpinEdit;
    SpinEdit2: TSpinEdit;
    Label3: TLabel;
    SpinEdit3: TSpinEdit;
    SpinEdit4: TSpinEdit;
    BitBtn1: TBitBtn;
    cxGrid1DBTableView1Column1: TcxGridDBColumn;
    cxGrid1DBTableView1Column2: TcxGridDBColumn;
    cxGrid1DBTableView1Column3: TcxGridDBColumn;
    cxGrid1DBTableView1Column4: TcxGridDBColumn;
    cxGrid1DBTableView1Column5: TcxGridDBColumn;
    cxGrid1DBTableView1Column6: TcxGridDBColumn;
    BitBtn5: TBitBtn;
    BitBtn2: TBitBtn;
    SaveDialog1: TSaveDialog;
    Query1: TClientDataSet;
    DataSource1: TDataSource;
    Query2: TClientDataSet;
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure FormShow(Sender: TObject);
    procedure BitBtn5Click(Sender: TObject);
    procedure BitBtn1Click(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  frmsalesforecast_pdn: Tfrmsalesforecast_pdn;

implementation

uses mainformu, analysisformu;

{$R *.dfm}

procedure Tfrmsalesforecast_pdn.BitBtn1Click(Sender: TObject);
var
  tm:tdatetime;
begin
  screen.cursor:=crSQLwait;
  tm:=now;
  try
  if (dateedit1.date>0) and (dateedit2.date>0) then begin
    dt1:=formatdatetime('yyyy/MM/dd',dateedit1.date);
    dt2:=formatdatetime('yyyy/MM/dd',dateedit2.date);
    with query1 do begin
      close;
      params.clear;
      commandtext:='select distinct a.exfty,b.ondt,b.inv,b.cust,sum(b.t4qty) as t4qty,b.uprc55,b.curn40,sum(b.t4qty*b.uprc55) as tprc1,'
                  +'b.uprc/b.uprc55 as exrate,sum(b.t4qty*b.uprc) as tprc,b.j_no,b.pdn||''-''||b.voyn as pdn,b.sopno,b.j2_job,'
                  +'b.cstyle,b.hsname,sum(b.ttlpx)/sum(case when b.t4qty>0 then b.t4qty else b.sqty end) as unitpx,sum(b.ttlpx) as ttlpx '
                  +'from tbl_pdn_shpadvice1 a,tbl_pdn_shpadvice2 b where a.tplant=b.tplant and a.shpno=b.shpno '
                  +'and b.ondt>='''+dt1+''' and b.ondt<='''+dt2+''' '
                  +'group by a.exfty,b.ondt,b.inv,b.cust,b.uprc55,b.curn40,b.uprc,b.j_no,b.pdn,b.voyn,b.sopno,b.j2_job,b.cstyle,b.hsname';
      open;
    end;
  end;
  finally
    screen.cursor:=crDefault;
  end;
end;

procedure Tfrmsalesforecast_pdn.BitBtn5Click(Sender: TObject);
begin
  if savedialog1.Execute then begin
    ExportGridToExcel(savedialog1.FileName,cxGrid1,false,true,false,'xls');
  end;
end;

procedure Tfrmsalesforecast_pdn.FormClose(Sender: TObject;
  var Action: TCloseAction);
begin
  action:=cafree;
  frmsalesforecast_pdn:=nil;
end;

procedure Tfrmsalesforecast_pdn.FormShow(Sender: TObject);
var
  y,m,d:word;
begin
  decodedate(now,y,m,d);
  spinedit1.value:=y;
  spinedit2.value:=weekof(date);
  spinedit3.value:=y;
  spinedit4.value:=weekof(date);
end;

end.
