#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.5466
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace PH.POPC.BO
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="PH.POPC")]
	public partial class POPCDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertEmailTemplate(EmailTemplate instance);
    partial void UpdateEmailTemplate(EmailTemplate instance);
    partial void DeleteEmailTemplate(EmailTemplate instance);
    partial void InsertMaterialType(MaterialType instance);
    partial void UpdateMaterialType(MaterialType instance);
    partial void DeleteMaterialType(MaterialType instance);
    partial void InsertPOColorShade(POColorShade instance);
    partial void UpdatePOColorShade(POColorShade instance);
    partial void DeletePOColorShade(POColorShade instance);
    partial void InsertPOConfirm(POConfirm instance);
    partial void UpdatePOConfirm(POConfirm instance);
    partial void DeletePOConfirm(POConfirm instance);
    partial void InsertPODetailPhoto(PODetailPhoto instance);
    partial void UpdatePODetailPhoto(PODetailPhoto instance);
    partial void DeletePODetailPhoto(PODetailPhoto instance);
    partial void InsertPOFormat(POFormat instance);
    partial void UpdatePOFormat(POFormat instance);
    partial void DeletePOFormat(POFormat instance);
    partial void InsertPOPDF(POPDF instance);
    partial void UpdatePOPDF(POPDF instance);
    partial void DeletePOPDF(POPDF instance);
    partial void InsertPOReport(POReport instance);
    partial void UpdatePOReport(POReport instance);
    partial void DeletePOReport(POReport instance);
    partial void InsertPOSKUPhoto(POSKUPhoto instance);
    partial void UpdatePOSKUPhoto(POSKUPhoto instance);
    partial void DeletePOSKUPhoto(POSKUPhoto instance);
    partial void InsertPOTerm(POTerm instance);
    partial void UpdatePOTerm(POTerm instance);
    partial void DeletePOTerm(POTerm instance);
    partial void InsertReport(Report instance);
    partial void UpdateReport(Report instance);
    partial void DeleteReport(Report instance);
    partial void InsertTerm(Term instance);
    partial void UpdateTerm(Term instance);
    partial void DeleteTerm(Term instance);
    partial void InsertPOWireBoneMatrix(POWireBoneMatrix instance);
    partial void UpdatePOWireBoneMatrix(POWireBoneMatrix instance);
    partial void DeletePOWireBoneMatrix(POWireBoneMatrix instance);
    partial void InsertCustomerSizeCup(CustomerSizeCup instance);
    partial void UpdateCustomerSizeCup(CustomerSizeCup instance);
    partial void DeleteCustomerSizeCup(CustomerSizeCup instance);
    partial void InsertSupplierSizeCup(SupplierSizeCup instance);
    partial void UpdateSupplierSizeCup(SupplierSizeCup instance);
    partial void DeleteSupplierSizeCup(SupplierSizeCup instance);
    partial void InsertSupplierCustomerSizeCup(SupplierCustomerSizeCup instance);
    partial void UpdateSupplierCustomerSizeCup(SupplierCustomerSizeCup instance);
    partial void DeleteSupplierCustomerSizeCup(SupplierCustomerSizeCup instance);
    partial void InsertPOColorStandard(POColorStandard instance);
    partial void UpdatePOColorStandard(POColorStandard instance);
    partial void DeletePOColorStandard(POColorStandard instance);
    partial void InsertPORC(PORC instance);
    partial void UpdatePORC(PORC instance);
    partial void DeletePORC(PORC instance);
    partial void InsertPORCDetail(PORCDetail instance);
    partial void UpdatePORCDetail(PORCDetail instance);
    partial void DeletePORCDetail(PORCDetail instance);
    partial void InsertPOLadDipNoPO(POLadDipNoPO instance);
    partial void UpdatePOLadDipNoPO(POLadDipNoPO instance);
    partial void DeletePOLadDipNoPO(POLadDipNoPO instance);
    partial void InsertPOEmail(POEmail instance);
    partial void UpdatePOEmail(POEmail instance);
    partial void DeletePOEmail(POEmail instance);
    partial void InsertPONotifyPO(PONotifyPO instance);
    partial void UpdatePONotifyPO(PONotifyPO instance);
    partial void DeletePONotifyPO(PONotifyPO instance);
    partial void InsertPONotify(PONotify instance);
    partial void UpdatePONotify(PONotify instance);
    partial void DeletePONotify(PONotify instance);
    partial void InsertPOGRN(POGRN instance);
    partial void UpdatePOGRN(POGRN instance);
    partial void DeletePOGRN(POGRN instance);
    partial void InsertPOColorSizeDetail(POColorSizeDetail instance);
    partial void UpdatePOColorSizeDetail(POColorSizeDetail instance);
    partial void DeletePOColorSizeDetail(POColorSizeDetail instance);
    partial void InsertPODetail(PODetail instance);
    partial void UpdatePODetail(PODetail instance);
    partial void DeletePODetail(PODetail instance);
    partial void InsertPOHeader(POHeader instance);
    partial void UpdatePOHeader(POHeader instance);
    partial void DeletePOHeader(POHeader instance);
    partial void InsertPOReportConfig(POReportConfig instance);
    partial void UpdatePOReportConfig(POReportConfig instance);
    partial void DeletePOReportConfig(POReportConfig instance);
    partial void InsertPOInAdvance(POInAdvance instance);
    partial void UpdatePOInAdvance(POInAdvance instance);
    partial void DeletePOInAdvance(POInAdvance instance);
    partial void InsertPOAdviceNote(POAdviceNote instance);
    partial void UpdatePOAdviceNote(POAdviceNote instance);
    partial void DeletePOAdviceNote(POAdviceNote instance);
    partial void InsertActionLogCompleteReason(ActionLogCompleteReason instance);
    partial void UpdateActionLogCompleteReason(ActionLogCompleteReason instance);
    partial void DeleteActionLogCompleteReason(ActionLogCompleteReason instance);
    partial void InsertMaterialTypeDropDeadDate(MaterialTypeDropDeadDate instance);
    partial void UpdateMaterialTypeDropDeadDate(MaterialTypeDropDeadDate instance);
    partial void DeleteMaterialTypeDropDeadDate(MaterialTypeDropDeadDate instance);
    partial void InsertPOAdviceNotePO(POAdviceNotePO instance);
    partial void UpdatePOAdviceNotePO(POAdviceNotePO instance);
    partial void DeletePOAdviceNotePO(POAdviceNotePO instance);
    partial void InsertPOInvoiceMatching(POInvoiceMatching instance);
    partial void UpdatePOInvoiceMatching(POInvoiceMatching instance);
    partial void DeletePOInvoiceMatching(POInvoiceMatching instance);
    partial void InsertField(Field instance);
    partial void UpdateField(Field instance);
    partial void DeleteField(Field instance);
    partial void InsertActionLogDetail(ActionLogDetail instance);
    partial void UpdateActionLogDetail(ActionLogDetail instance);
    partial void DeleteActionLogDetail(ActionLogDetail instance);
    partial void InsertActionLogIMQE(ActionLogIMQE instance);
    partial void UpdateActionLogIMQE(ActionLogIMQE instance);
    partial void DeleteActionLogIMQE(ActionLogIMQE instance);
    partial void InsertPOChangesMonitor(POChangesMonitor instance);
    partial void UpdatePOChangesMonitor(POChangesMonitor instance);
    partial void DeletePOChangesMonitor(POChangesMonitor instance);
    partial void InsertActionLogHeader(ActionLogHeader instance);
    partial void UpdateActionLogHeader(ActionLogHeader instance);
    partial void DeleteActionLogHeader(ActionLogHeader instance);
    partial void InsertActionLogRemark(ActionLogRemark instance);
    partial void UpdateActionLogRemark(ActionLogRemark instance);
    partial void DeleteActionLogRemark(ActionLogRemark instance);
    partial void InsertPOSKUOperate(POSKUOperate instance);
    partial void UpdatePOSKUOperate(POSKUOperate instance);
    partial void DeletePOSKUOperate(POSKUOperate instance);
    partial void InsertActionLogCategory(ActionLogCategory instance);
    partial void UpdateActionLogCategory(ActionLogCategory instance);
    partial void DeleteActionLogCategory(ActionLogCategory instance);
    partial void InsertZ_OutstandingPO(Z_OutstandingPO instance);
    partial void UpdateZ_OutstandingPO(Z_OutstandingPO instance);
    partial void DeleteZ_OutstandingPO(Z_OutstandingPO instance);
    #endregion
		
		public POPCDataContext() : 
				base(global::PH.POPC.BO.Properties.Settings.Default.PH_POPCConnectionString13, mappingSource)
		{
			OnCreated();
		}
		
		public POPCDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public POPCDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public POPCDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public POPCDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<EmailTemplate> EmailTemplates
		{
			get
			{
				return this.GetTable<EmailTemplate>();
			}
		}
		
		public System.Data.Linq.Table<MaterialType> MaterialTypes
		{
			get
			{
				return this.GetTable<MaterialType>();
			}
		}
		
		public System.Data.Linq.Table<POColorShade> POColorShades
		{
			get
			{
				return this.GetTable<POColorShade>();
			}
		}
		
		public System.Data.Linq.Table<POConfirm> POConfirms
		{
			get
			{
				return this.GetTable<POConfirm>();
			}
		}
		
		public System.Data.Linq.Table<PODetailPhoto> PODetailPhotos
		{
			get
			{
				return this.GetTable<PODetailPhoto>();
			}
		}
		
		public System.Data.Linq.Table<POFormat> POFormats
		{
			get
			{
				return this.GetTable<POFormat>();
			}
		}
		
		public System.Data.Linq.Table<POPDF> POPDFs
		{
			get
			{
				return this.GetTable<POPDF>();
			}
		}
		
		public System.Data.Linq.Table<POReport> POReports
		{
			get
			{
				return this.GetTable<POReport>();
			}
		}
		
		public System.Data.Linq.Table<POSKUPhoto> POSKUPhotos
		{
			get
			{
				return this.GetTable<POSKUPhoto>();
			}
		}
		
		public System.Data.Linq.Table<POTerm> POTerms
		{
			get
			{
				return this.GetTable<POTerm>();
			}
		}
		
		public System.Data.Linq.Table<Report> Reports
		{
			get
			{
				return this.GetTable<Report>();
			}
		}
		
		public System.Data.Linq.Table<Term> Terms
		{
			get
			{
				return this.GetTable<Term>();
			}
		}
		
		public System.Data.Linq.Table<V_Color> V_Colors
		{
			get
			{
				return this.GetTable<V_Color>();
			}
		}
		
		public System.Data.Linq.Table<V_ItemCode> V_ItemCodes
		{
			get
			{
				return this.GetTable<V_ItemCode>();
			}
		}
		
		public System.Data.Linq.Table<V_Photo> V_Photos
		{
			get
			{
				return this.GetTable<V_Photo>();
			}
		}
		
		public System.Data.Linq.Table<View_Customer> View_Customers
		{
			get
			{
				return this.GetTable<View_Customer>();
			}
		}
		
		public System.Data.Linq.Table<View_POPC> View_POPCs
		{
			get
			{
				return this.GetTable<View_POPC>();
			}
		}
		
		public System.Data.Linq.Table<View_Supplier> View_Suppliers
		{
			get
			{
				return this.GetTable<View_Supplier>();
			}
		}
		
		public System.Data.Linq.Table<POWireBoneMatrix> POWireBoneMatrixes
		{
			get
			{
				return this.GetTable<POWireBoneMatrix>();
			}
		}
		
		public System.Data.Linq.Table<CustomerSizeCup> CustomerSizeCups
		{
			get
			{
				return this.GetTable<CustomerSizeCup>();
			}
		}
		
		public System.Data.Linq.Table<SupplierSizeCup> SupplierSizeCups
		{
			get
			{
				return this.GetTable<SupplierSizeCup>();
			}
		}
		
		public System.Data.Linq.Table<SupplierCustomerSizeCup> SupplierCustomerSizeCups
		{
			get
			{
				return this.GetTable<SupplierCustomerSizeCup>();
			}
		}
		
		public System.Data.Linq.Table<View_POPC_PUR> View_POPC_PURs
		{
			get
			{
				return this.GetTable<View_POPC_PUR>();
			}
		}
		
		public System.Data.Linq.Table<V_MIDcMaterial> V_MIDcMaterials
		{
			get
			{
				return this.GetTable<V_MIDcMaterial>();
			}
		}
		
		public System.Data.Linq.Table<POColorStandard> POColorStandards
		{
			get
			{
				return this.GetTable<POColorStandard>();
			}
		}
		
		public System.Data.Linq.Table<PORC> PORCs
		{
			get
			{
				return this.GetTable<PORC>();
			}
		}
		
		public System.Data.Linq.Table<PORCDetail> PORCDetails
		{
			get
			{
				return this.GetTable<PORCDetail>();
			}
		}
		
		public System.Data.Linq.Table<View_Level1ColorDependent> View_Level1ColorDependents
		{
			get
			{
				return this.GetTable<View_Level1ColorDependent>();
			}
		}
		
		public System.Data.Linq.Table<POLadDipNoPO> POLadDipNoPOs
		{
			get
			{
				return this.GetTable<POLadDipNoPO>();
			}
		}
		
		public System.Data.Linq.Table<POEmail> POEmails
		{
			get
			{
				return this.GetTable<POEmail>();
			}
		}
		
		public System.Data.Linq.Table<PONotifyPO> PONotifyPOs
		{
			get
			{
				return this.GetTable<PONotifyPO>();
			}
		}
		
		public System.Data.Linq.Table<PONotify> PONotifies
		{
			get
			{
				return this.GetTable<PONotify>();
			}
		}
		
		public System.Data.Linq.Table<POGRN> POGRNs
		{
			get
			{
				return this.GetTable<POGRN>();
			}
		}
		
		public System.Data.Linq.Table<POColorSizeDetail> POColorSizeDetails
		{
			get
			{
				return this.GetTable<POColorSizeDetail>();
			}
		}
		
		public System.Data.Linq.Table<PHP10> PHP10s
		{
			get
			{
				return this.GetTable<PHP10>();
			}
		}
		
		public System.Data.Linq.Table<PHP11> PHP11s
		{
			get
			{
				return this.GetTable<PHP11>();
			}
		}
		
		public System.Data.Linq.Table<PODetail> PODetails
		{
			get
			{
				return this.GetTable<PODetail>();
			}
		}
		
		public System.Data.Linq.Table<POHeader> POHeaders
		{
			get
			{
				return this.GetTable<POHeader>();
			}
		}
		
		public System.Data.Linq.Table<POReportConfig> POReportConfigs
		{
			get
			{
				return this.GetTable<POReportConfig>();
			}
		}
		
		public System.Data.Linq.Table<POInAdvance> POInAdvances
		{
			get
			{
				return this.GetTable<POInAdvance>();
			}
		}
		
		public System.Data.Linq.Table<POAdviceNote> POAdviceNotes
		{
			get
			{
				return this.GetTable<POAdviceNote>();
			}
		}
		
		public System.Data.Linq.Table<ActionLogCompleteReason> ActionLogCompleteReasons
		{
			get
			{
				return this.GetTable<ActionLogCompleteReason>();
			}
		}
		
		public System.Data.Linq.Table<MaterialTypeDropDeadDate> MaterialTypeDropDeadDates
		{
			get
			{
				return this.GetTable<MaterialTypeDropDeadDate>();
			}
		}
		
		public System.Data.Linq.Table<POAdviceNotePO> POAdviceNotePOs
		{
			get
			{
				return this.GetTable<POAdviceNotePO>();
			}
		}
		
		public System.Data.Linq.Table<POInvoiceMatching> POInvoiceMatchings
		{
			get
			{
				return this.GetTable<POInvoiceMatching>();
			}
		}
		
		public System.Data.Linq.Table<Field> Fields
		{
			get
			{
				return this.GetTable<Field>();
			}
		}
		
		public System.Data.Linq.Table<ActionLogDetail> ActionLogDetails
		{
			get
			{
				return this.GetTable<ActionLogDetail>();
			}
		}
		
		public System.Data.Linq.Table<ActionLogIMQE> ActionLogIMQEs
		{
			get
			{
				return this.GetTable<ActionLogIMQE>();
			}
		}
		
		public System.Data.Linq.Table<POChangesMonitor> POChangesMonitors
		{
			get
			{
				return this.GetTable<POChangesMonitor>();
			}
		}
		
		public System.Data.Linq.Table<ActionLogHeader> ActionLogHeaders
		{
			get
			{
				return this.GetTable<ActionLogHeader>();
			}
		}
		
		public System.Data.Linq.Table<ActionLogRemark> ActionLogRemarks
		{
			get
			{
				return this.GetTable<ActionLogRemark>();
			}
		}
		
		public System.Data.Linq.Table<POSKUOperate> POSKUOperates
		{
			get
			{
				return this.GetTable<POSKUOperate>();
			}
		}
		
		public System.Data.Linq.Table<ActionLogCategory> ActionLogCategories
		{
			get
			{
				return this.GetTable<ActionLogCategory>();
			}
		}
		
		public System.Data.Linq.Table<Z_OutstandingPO> Z_OutstandingPOs
		{
			get
			{
				return this.GetTable<Z_OutstandingPO>();
			}
		}
		
		[Function(Name="dbo.sp_GetOrderLine")]
		public ISingleResult<sp_GetOrderLineResult> sp_GetOrderLine([Parameter(Name="Company", DbType="VarChar(2)")] string company, [Parameter(Name="PONO", DbType="VarChar(20)")] string pONO, [Parameter(Name="Version", DbType="Int")] System.Nullable<int> version, [Parameter(Name="AmendmentNo", DbType="Int")] System.Nullable<int> amendmentNo)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), company, pONO, version, amendmentNo);
			return ((ISingleResult<sp_GetOrderLineResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.sp_POColorSizeDetail_Solid")]
		public int sp_POColorSizeDetail_Solid([Parameter(Name="Company", DbType="VarChar(50)")] string company, [Parameter(Name="PONO", DbType="VarChar(50)")] string pONO, [Parameter(DbType="Int")] System.Nullable<int> version, [Parameter(Name="AmendmentNo", DbType="Int")] System.Nullable<int> amendmentNo, [Parameter(Name="ItemCode", DbType="VarChar(50)")] string itemCode, [Parameter(Name="ReportType", DbType="Int")] System.Nullable<int> reportType, [Parameter(Name="SupplierReference", DbType="VarChar(20)")] string supplierReference)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), company, pONO, version, amendmentNo, itemCode, reportType, supplierReference);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.fn_GetCustomerSizeSystem", IsComposable=true)]
		public string fn_GetCustomerSizeSystem([Parameter(DbType="VarChar(10)")] string company, [Parameter(Name="ProjectNo", DbType="VarChar(20)")] string projectNo)
		{
			return ((string)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), company, projectNo).ReturnValue));
		}
		
		[Function(Name="dbo.fn_GetUseful", IsComposable=true)]
		public System.Nullable<decimal> fn_GetUseful([Parameter(Name="SuppRef", DbType="VarChar(100)")] string suppRef, [Parameter(Name="AdviceNoteNo", DbType="VarChar(100)")] string adviceNoteNo)
		{
			return ((System.Nullable<decimal>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), suppRef, adviceNoteNo).ReturnValue));
		}
		
		[Function(Name="dbo.fn_GetOurWOFWStartDate", IsComposable=true)]
		public System.Nullable<System.DateTime> fn_GetOurWOFWStartDate([Parameter(Name="ProjectNo", DbType="NVarChar(100)")] string projectNo, [Parameter(Name="WOSeqNo", DbType="Int")] System.Nullable<int> wOSeqNo)
		{
			return ((System.Nullable<System.DateTime>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), projectNo, wOSeqNo).ReturnValue));
		}
		
		[Function(Name="dbo.fn_GetOurWOExFtyDate", IsComposable=true)]
		public System.Nullable<System.DateTime> fn_GetOurWOExFtyDate([Parameter(Name="ProjectNo", DbType="NVarChar(100)")] string projectNo, [Parameter(Name="WOSeqNo", DbType="Int")] System.Nullable<int> wOSeqNo)
		{
			return ((System.Nullable<System.DateTime>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), projectNo, wOSeqNo).ReturnValue));
		}
	}
	
	[Table(Name="dbo.EmailTemplate")]
	public partial class EmailTemplate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TemplateID;
		
		private string _TemplateDesc;
		
		private string _Subject;
		
		private string _TemplateBody;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTemplateIDChanging(int value);
    partial void OnTemplateIDChanged();
    partial void OnTemplateDescChanging(string value);
    partial void OnTemplateDescChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnTemplateBodyChanging(string value);
    partial void OnTemplateBodyChanged();
    #endregion
		
		public EmailTemplate()
		{
			OnCreated();
		}
		
		[Column(Storage="_TemplateID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TemplateID
		{
			get
			{
				return this._TemplateID;
			}
			set
			{
				if ((this._TemplateID != value))
				{
					this.OnTemplateIDChanging(value);
					this.SendPropertyChanging();
					this._TemplateID = value;
					this.SendPropertyChanged("TemplateID");
					this.OnTemplateIDChanged();
				}
			}
		}
		
		[Column(Storage="_TemplateDesc", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string TemplateDesc
		{
			get
			{
				return this._TemplateDesc;
			}
			set
			{
				if ((this._TemplateDesc != value))
				{
					this.OnTemplateDescChanging(value);
					this.SendPropertyChanging();
					this._TemplateDesc = value;
					this.SendPropertyChanged("TemplateDesc");
					this.OnTemplateDescChanged();
				}
			}
		}
		
		[Column(Storage="_Subject", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged("Subject");
					this.OnSubjectChanged();
				}
			}
		}
		
		[Column(Storage="_TemplateBody", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string TemplateBody
		{
			get
			{
				return this._TemplateBody;
			}
			set
			{
				if ((this._TemplateBody != value))
				{
					this.OnTemplateBodyChanging(value);
					this.SendPropertyChanging();
					this._TemplateBody = value;
					this.SendPropertyChanged("TemplateBody");
					this.OnTemplateBodyChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.MaterialType")]
	public partial class MaterialType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaterialType1;
		
		private string _MaterialGroup;
		
		private string _Description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaterialType1Changing(string value);
    partial void OnMaterialType1Changed();
    partial void OnMaterialGroupChanging(string value);
    partial void OnMaterialGroupChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public MaterialType()
		{
			OnCreated();
		}
		
		[Column(Name="MaterialType", Storage="_MaterialType1", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaterialType1
		{
			get
			{
				return this._MaterialType1;
			}
			set
			{
				if ((this._MaterialType1 != value))
				{
					this.OnMaterialType1Changing(value);
					this.SendPropertyChanging();
					this._MaterialType1 = value;
					this.SendPropertyChanged("MaterialType1");
					this.OnMaterialType1Changed();
				}
			}
		}
		
		[Column(Storage="_MaterialGroup", DbType="VarChar(3)")]
		public string MaterialGroup
		{
			get
			{
				return this._MaterialGroup;
			}
			set
			{
				if ((this._MaterialGroup != value))
				{
					this.OnMaterialGroupChanging(value);
					this.SendPropertyChanging();
					this._MaterialGroup = value;
					this.SendPropertyChanged("MaterialGroup");
					this.OnMaterialGroupChanged();
				}
			}
		}
		
		[Column(Storage="_Description", DbType="VarChar(100)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.POColorShade")]
	public partial class POColorShade : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SecondaryColor;
		
		private string _Company;
		
		private string _Customer;
		
		private string _ColorShade;
		
		private string _ColorCode;
		
		private string _ItemCode;
		
		private int _ColorType;
		
		private string _Supplier;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSecondaryColorChanging(string value);
    partial void OnSecondaryColorChanged();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnCustomerChanging(string value);
    partial void OnCustomerChanged();
    partial void OnColorShadeChanging(string value);
    partial void OnColorShadeChanged();
    partial void OnColorCodeChanging(string value);
    partial void OnColorCodeChanged();
    partial void OnItemCodeChanging(string value);
    partial void OnItemCodeChanged();
    partial void OnColorTypeChanging(int value);
    partial void OnColorTypeChanged();
    partial void OnSupplierChanging(string value);
    partial void OnSupplierChanged();
    #endregion
		
		public POColorShade()
		{
			OnCreated();
		}
		
		[Column(Storage="_SecondaryColor", DbType="NVarChar(20)")]
		public string SecondaryColor
		{
			get
			{
				return this._SecondaryColor;
			}
			set
			{
				if ((this._SecondaryColor != value))
				{
					this.OnSecondaryColorChanging(value);
					this.SendPropertyChanging();
					this._SecondaryColor = value;
					this.SendPropertyChanged("SecondaryColor");
					this.OnSecondaryColorChanged();
				}
			}
		}
		
		[Column(Storage="_Company", DbType="VarChar(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[Column(Storage="_Customer", DbType="NVarChar(20)")]
		public string Customer
		{
			get
			{
				return this._Customer;
			}
			set
			{
				if ((this._Customer != value))
				{
					this.OnCustomerChanging(value);
					this.SendPropertyChanging();
					this._Customer = value;
					this.SendPropertyChanged("Customer");
					this.OnCustomerChanged();
				}
			}
		}
		
		[Column(Storage="_ColorShade", DbType="VarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ColorShade
		{
			get
			{
				return this._ColorShade;
			}
			set
			{
				if ((this._ColorShade != value))
				{
					this.OnColorShadeChanging(value);
					this.SendPropertyChanging();
					this._ColorShade = value;
					this.SendPropertyChanged("ColorShade");
					this.OnColorShadeChanged();
				}
			}
		}
		
		[Column(Storage="_ColorCode", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ColorCode
		{
			get
			{
				return this._ColorCode;
			}
			set
			{
				if ((this._ColorCode != value))
				{
					this.OnColorCodeChanging(value);
					this.SendPropertyChanging();
					this._ColorCode = value;
					this.SendPropertyChanged("ColorCode");
					this.OnColorCodeChanged();
				}
			}
		}
		
		[Column(Storage="_ItemCode", DbType="VarChar(9) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ItemCode
		{
			get
			{
				return this._ItemCode;
			}
			set
			{
				if ((this._ItemCode != value))
				{
					this.OnItemCodeChanging(value);
					this.SendPropertyChanging();
					this._ItemCode = value;
					this.SendPropertyChanged("ItemCode");
					this.OnItemCodeChanged();
				}
			}
		}
		
		[Column(Storage="_ColorType", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ColorType
		{
			get
			{
				return this._ColorType;
			}
			set
			{
				if ((this._ColorType != value))
				{
					this.OnColorTypeChanging(value);
					this.SendPropertyChanging();
					this._ColorType = value;
					this.SendPropertyChanged("ColorType");
					this.OnColorTypeChanged();
				}
			}
		}
		
		[Column(Storage="_Supplier", DbType="VarChar(8) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Supplier
		{
			get
			{
				return this._Supplier;
			}
			set
			{
				if ((this._Supplier != value))
				{
					this.OnSupplierChanging(value);
					this.SendPropertyChanging();
					this._Supplier = value;
					this.SendPropertyChanged("Supplier");
					this.OnSupplierChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.POConfirm")]
	public partial class POConfirm : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Company;
		
		private string _PONO;
		
		private int _Version;
		
		private int _AmendmentNo;
		
		private int _OrderLine;
		
		private int _HandleNo;
		
		private string _Remark;
		
		private System.Nullable<System.DateTime> _OperateDate;
		
		private System.Nullable<System.DateTime> _ConfirmDate;
		
		private System.Nullable<System.DateTime> _ReceiveDate;
		
		private System.Nullable<bool> _VersionFlag;
		
		private EntityRef<PODetail> _PODetail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnPONOChanging(string value);
    partial void OnPONOChanged();
    partial void OnVersionChanging(int value);
    partial void OnVersionChanged();
    partial void OnAmendmentNoChanging(int value);
    partial void OnAmendmentNoChanged();
    partial void OnOrderLineChanging(int value);
    partial void OnOrderLineChanged();
    partial void OnHandleNoChanging(int value);
    partial void OnHandleNoChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnOperateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnOperateDateChanged();
    partial void OnConfirmDateChanging(System.Nullable<System.DateTime> value);
    partial void OnConfirmDateChanged();
    partial void OnReceiveDateChanging(System.Nullable<System.DateTime> value);
    partial void OnReceiveDateChanged();
    partial void OnVersionFlagChanging(System.Nullable<bool> value);
    partial void OnVersionFlagChanged();
    #endregion
		
		public POConfirm()
		{
			this._PODetail = default(EntityRef<PODetail>);
			OnCreated();
		}
		
		[Column(Storage="_Company", DbType="VarChar(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					if (this._PODetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[Column(Storage="_PONO", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PONO
		{
			get
			{
				return this._PONO;
			}
			set
			{
				if ((this._PONO != value))
				{
					if (this._PODetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPONOChanging(value);
					this.SendPropertyChanging();
					this._PONO = value;
					this.SendPropertyChanged("PONO");
					this.OnPONOChanged();
				}
			}
		}
		
		[Column(Storage="_Version", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					if (this._PODetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[Column(Storage="_AmendmentNo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AmendmentNo
		{
			get
			{
				return this._AmendmentNo;
			}
			set
			{
				if ((this._AmendmentNo != value))
				{
					if (this._PODetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAmendmentNoChanging(value);
					this.SendPropertyChanging();
					this._AmendmentNo = value;
					this.SendPropertyChanged("AmendmentNo");
					this.OnAmendmentNoChanged();
				}
			}
		}
		
		[Column(Storage="_OrderLine", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int OrderLine
		{
			get
			{
				return this._OrderLine;
			}
			set
			{
				if ((this._OrderLine != value))
				{
					if (this._PODetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderLineChanging(value);
					this.SendPropertyChanging();
					this._OrderLine = value;
					this.SendPropertyChanged("OrderLine");
					this.OnOrderLineChanged();
				}
			}
		}
		
		[Column(Storage="_HandleNo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int HandleNo
		{
			get
			{
				return this._HandleNo;
			}
			set
			{
				if ((this._HandleNo != value))
				{
					this.OnHandleNoChanging(value);
					this.SendPropertyChanging();
					this._HandleNo = value;
					this.SendPropertyChanged("HandleNo");
					this.OnHandleNoChanged();
				}
			}
		}
		
		[Column(Storage="_Remark", DbType="NVarChar(500)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[Column(Storage="_OperateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> OperateDate
		{
			get
			{
				return this._OperateDate;
			}
			set
			{
				if ((this._OperateDate != value))
				{
					this.OnOperateDateChanging(value);
					this.SendPropertyChanging();
					this._OperateDate = value;
					this.SendPropertyChanged("OperateDate");
					this.OnOperateDateChanged();
				}
			}
		}
		
		[Column(Storage="_ConfirmDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ConfirmDate
		{
			get
			{
				return this._ConfirmDate;
			}
			set
			{
				if ((this._ConfirmDate != value))
				{
					this.OnConfirmDateChanging(value);
					this.SendPropertyChanging();
					this._ConfirmDate = value;
					this.SendPropertyChanged("ConfirmDate");
					this.OnConfirmDateChanged();
				}
			}
		}
		
		[Column(Storage="_ReceiveDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ReceiveDate
		{
			get
			{
				return this._ReceiveDate;
			}
			set
			{
				if ((this._ReceiveDate != value))
				{
					this.OnReceiveDateChanging(value);
					this.SendPropertyChanging();
					this._ReceiveDate = value;
					this.SendPropertyChanged("ReceiveDate");
					this.OnReceiveDateChanged();
				}
			}
		}
		
		[Column(Storage="_VersionFlag", DbType="Bit")]
		public System.Nullable<bool> VersionFlag
		{
			get
			{
				return this._VersionFlag;
			}
			set
			{
				if ((this._VersionFlag != value))
				{
					this.OnVersionFlagChanging(value);
					this.SendPropertyChanging();
					this._VersionFlag = value;
					this.SendPropertyChanged("VersionFlag");
					this.OnVersionFlagChanged();
				}
			}
		}
		
		[Association(Name="PODetail_POConfirm", Storage="_PODetail", ThisKey="Company,PONO,Version,AmendmentNo,OrderLine", OtherKey="Company,PONO,Version,AmendmentNo,OrderLine", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public PODetail PODetail
		{
			get
			{
				return this._PODetail.Entity;
			}
			set
			{
				PODetail previousValue = this._PODetail.Entity;
				if (((previousValue != value) 
							|| (this._PODetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PODetail.Entity = null;
						previousValue.POConfirms.Remove(this);
					}
					this._PODetail.Entity = value;
					if ((value != null))
					{
						value.POConfirms.Add(this);
						this._Company = value.Company;
						this._PONO = value.PONO;
						this._Version = value.Version;
						this._AmendmentNo = value.AmendmentNo;
						this._OrderLine = value.OrderLine;
					}
					else
					{
						this._Company = default(string);
						this._PONO = default(string);
						this._Version = default(int);
						this._AmendmentNo = default(int);
						this._OrderLine = default(int);
					}
					this.SendPropertyChanged("PODetail");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.PODetailPhoto")]
	public partial class PODetailPhoto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Company;
		
		private string _PONO;
		
		private int _Version;
		
		private int _AmendmentNo;
		
		private int _OrderLine;
		
		private byte[] _Photo;
		
		private System.Nullable<bool> _VersionFlag;
		
		private EntityRef<PODetail> _PODetail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnPONOChanging(string value);
    partial void OnPONOChanged();
    partial void OnVersionChanging(int value);
    partial void OnVersionChanged();
    partial void OnAmendmentNoChanging(int value);
    partial void OnAmendmentNoChanged();
    partial void OnOrderLineChanging(int value);
    partial void OnOrderLineChanged();
    partial void OnPhotoChanging(byte[] value);
    partial void OnPhotoChanged();
    partial void OnVersionFlagChanging(System.Nullable<bool> value);
    partial void OnVersionFlagChanged();
    #endregion
		
		public PODetailPhoto()
		{
			this._PODetail = default(EntityRef<PODetail>);
			OnCreated();
		}
		
		[Column(Storage="_Company", DbType="VarChar(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					if (this._PODetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[Column(Storage="_PONO", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PONO
		{
			get
			{
				return this._PONO;
			}
			set
			{
				if ((this._PONO != value))
				{
					if (this._PODetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPONOChanging(value);
					this.SendPropertyChanging();
					this._PONO = value;
					this.SendPropertyChanged("PONO");
					this.OnPONOChanged();
				}
			}
		}
		
		[Column(Storage="_Version", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					if (this._PODetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[Column(Storage="_AmendmentNo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AmendmentNo
		{
			get
			{
				return this._AmendmentNo;
			}
			set
			{
				if ((this._AmendmentNo != value))
				{
					if (this._PODetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAmendmentNoChanging(value);
					this.SendPropertyChanging();
					this._AmendmentNo = value;
					this.SendPropertyChanged("AmendmentNo");
					this.OnAmendmentNoChanged();
				}
			}
		}
		
		[Column(Storage="_OrderLine", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int OrderLine
		{
			get
			{
				return this._OrderLine;
			}
			set
			{
				if ((this._OrderLine != value))
				{
					if (this._PODetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderLineChanging(value);
					this.SendPropertyChanging();
					this._OrderLine = value;
					this.SendPropertyChanged("OrderLine");
					this.OnOrderLineChanged();
				}
			}
		}
		
		[Column(Storage="_Photo", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public byte[] Photo
		{
			get
			{
				return this._Photo;
			}
			set
			{
				if ((this._Photo != value))
				{
					this.OnPhotoChanging(value);
					this.SendPropertyChanging();
					this._Photo = value;
					this.SendPropertyChanged("Photo");
					this.OnPhotoChanged();
				}
			}
		}
		
		[Column(Storage="_VersionFlag", DbType="Bit")]
		public System.Nullable<bool> VersionFlag
		{
			get
			{
				return this._VersionFlag;
			}
			set
			{
				if ((this._VersionFlag != value))
				{
					this.OnVersionFlagChanging(value);
					this.SendPropertyChanging();
					this._VersionFlag = value;
					this.SendPropertyChanged("VersionFlag");
					this.OnVersionFlagChanged();
				}
			}
		}
		
		[Association(Name="PODetail_PODetailPhoto", Storage="_PODetail", ThisKey="Company,PONO,Version,AmendmentNo,OrderLine", OtherKey="Company,PONO,Version,AmendmentNo,OrderLine", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public PODetail PODetail
		{
			get
			{
				return this._PODetail.Entity;
			}
			set
			{
				PODetail previousValue = this._PODetail.Entity;
				if (((previousValue != value) 
							|| (this._PODetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PODetail.Entity = null;
						previousValue.PODetailPhoto = null;
					}
					this._PODetail.Entity = value;
					if ((value != null))
					{
						value.PODetailPhoto = this;
						this._Company = value.Company;
						this._PONO = value.PONO;
						this._Version = value.Version;
						this._AmendmentNo = value.AmendmentNo;
						this._OrderLine = value.OrderLine;
					}
					else
					{
						this._Company = default(string);
						this._PONO = default(string);
						this._Version = default(int);
						this._AmendmentNo = default(int);
						this._OrderLine = default(int);
					}
					this.SendPropertyChanged("PODetail");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.POFormat")]
	public partial class POFormat : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Customer;
		
		private string _Band;
		
		private byte[] _Photo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomerChanging(string value);
    partial void OnCustomerChanged();
    partial void OnBandChanging(string value);
    partial void OnBandChanged();
    partial void OnPhotoChanging(byte[] value);
    partial void OnPhotoChanged();
    #endregion
		
		public POFormat()
		{
			OnCreated();
		}
		
		[Column(Storage="_Customer", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Customer
		{
			get
			{
				return this._Customer;
			}
			set
			{
				if ((this._Customer != value))
				{
					this.OnCustomerChanging(value);
					this.SendPropertyChanging();
					this._Customer = value;
					this.SendPropertyChanged("Customer");
					this.OnCustomerChanged();
				}
			}
		}
		
		[Column(Storage="_Band", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Band
		{
			get
			{
				return this._Band;
			}
			set
			{
				if ((this._Band != value))
				{
					this.OnBandChanging(value);
					this.SendPropertyChanging();
					this._Band = value;
					this.SendPropertyChanged("Band");
					this.OnBandChanged();
				}
			}
		}
		
		[Column(Storage="_Photo", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public byte[] Photo
		{
			get
			{
				return this._Photo;
			}
			set
			{
				if ((this._Photo != value))
				{
					this.OnPhotoChanging(value);
					this.SendPropertyChanging();
					this._Photo = value;
					this.SendPropertyChanged("Photo");
					this.OnPhotoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.POPDF")]
	public partial class POPDF : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Company;
		
		private string _PONO;
		
		private int _Version;
		
		private int _AmendmentNo;
		
		private byte[] _PDF;
		
		private System.Nullable<bool> _VersionFlag;
		
		private EntityRef<POHeader> _POHeader;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnPONOChanging(string value);
    partial void OnPONOChanged();
    partial void OnVersionChanging(int value);
    partial void OnVersionChanged();
    partial void OnAmendmentNoChanging(int value);
    partial void OnAmendmentNoChanged();
    partial void OnPDFChanging(byte[] value);
    partial void OnPDFChanged();
    partial void OnVersionFlagChanging(System.Nullable<bool> value);
    partial void OnVersionFlagChanged();
    #endregion
		
		public POPDF()
		{
			this._POHeader = default(EntityRef<POHeader>);
			OnCreated();
		}
		
		[Column(Storage="_Company", DbType="VarChar(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					if (this._POHeader.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[Column(Storage="_PONO", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PONO
		{
			get
			{
				return this._PONO;
			}
			set
			{
				if ((this._PONO != value))
				{
					if (this._POHeader.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPONOChanging(value);
					this.SendPropertyChanging();
					this._PONO = value;
					this.SendPropertyChanged("PONO");
					this.OnPONOChanged();
				}
			}
		}
		
		[Column(Storage="_Version", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					if (this._POHeader.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[Column(Storage="_AmendmentNo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AmendmentNo
		{
			get
			{
				return this._AmendmentNo;
			}
			set
			{
				if ((this._AmendmentNo != value))
				{
					if (this._POHeader.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAmendmentNoChanging(value);
					this.SendPropertyChanging();
					this._AmendmentNo = value;
					this.SendPropertyChanged("AmendmentNo");
					this.OnAmendmentNoChanged();
				}
			}
		}
		
		[Column(Storage="_PDF", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public byte[] PDF
		{
			get
			{
				return this._PDF;
			}
			set
			{
				if ((this._PDF != value))
				{
					this.OnPDFChanging(value);
					this.SendPropertyChanging();
					this._PDF = value;
					this.SendPropertyChanged("PDF");
					this.OnPDFChanged();
				}
			}
		}
		
		[Column(Storage="_VersionFlag", DbType="Bit")]
		public System.Nullable<bool> VersionFlag
		{
			get
			{
				return this._VersionFlag;
			}
			set
			{
				if ((this._VersionFlag != value))
				{
					this.OnVersionFlagChanging(value);
					this.SendPropertyChanging();
					this._VersionFlag = value;
					this.SendPropertyChanged("VersionFlag");
					this.OnVersionFlagChanged();
				}
			}
		}
		
		[Association(Name="POHeader_POPDF", Storage="_POHeader", ThisKey="Company,PONO,Version,AmendmentNo", OtherKey="Company,PONO,Version,AmendmentNo", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public POHeader POHeader
		{
			get
			{
				return this._POHeader.Entity;
			}
			set
			{
				POHeader previousValue = this._POHeader.Entity;
				if (((previousValue != value) 
							|| (this._POHeader.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._POHeader.Entity = null;
						previousValue.POPDF = null;
					}
					this._POHeader.Entity = value;
					if ((value != null))
					{
						value.POPDF = this;
						this._Company = value.Company;
						this._PONO = value.PONO;
						this._Version = value.Version;
						this._AmendmentNo = value.AmendmentNo;
					}
					else
					{
						this._Company = default(string);
						this._PONO = default(string);
						this._Version = default(int);
						this._AmendmentNo = default(int);
					}
					this.SendPropertyChanged("POHeader");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.POReport")]
	public partial class POReport : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Company;
		
		private string _PONO;
		
		private int _Version;
		
		private int _AmendmentNo;
		
		private string _ReportCode;
		
		private System.Nullable<bool> _VersionFlag;
		
		private EntityRef<POHeader> _POHeader;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnPONOChanging(string value);
    partial void OnPONOChanged();
    partial void OnVersionChanging(int value);
    partial void OnVersionChanged();
    partial void OnAmendmentNoChanging(int value);
    partial void OnAmendmentNoChanged();
    partial void OnReportCodeChanging(string value);
    partial void OnReportCodeChanged();
    partial void OnVersionFlagChanging(System.Nullable<bool> value);
    partial void OnVersionFlagChanged();
    #endregion
		
		public POReport()
		{
			this._POHeader = default(EntityRef<POHeader>);
			OnCreated();
		}
		
		[Column(Storage="_Company", DbType="VarChar(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					if (this._POHeader.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[Column(Storage="_PONO", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PONO
		{
			get
			{
				return this._PONO;
			}
			set
			{
				if ((this._PONO != value))
				{
					if (this._POHeader.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPONOChanging(value);
					this.SendPropertyChanging();
					this._PONO = value;
					this.SendPropertyChanged("PONO");
					this.OnPONOChanged();
				}
			}
		}
		
		[Column(Storage="_Version", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					if (this._POHeader.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[Column(Storage="_AmendmentNo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AmendmentNo
		{
			get
			{
				return this._AmendmentNo;
			}
			set
			{
				if ((this._AmendmentNo != value))
				{
					if (this._POHeader.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAmendmentNoChanging(value);
					this.SendPropertyChanging();
					this._AmendmentNo = value;
					this.SendPropertyChanged("AmendmentNo");
					this.OnAmendmentNoChanged();
				}
			}
		}
		
		[Column(Storage="_ReportCode", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ReportCode
		{
			get
			{
				return this._ReportCode;
			}
			set
			{
				if ((this._ReportCode != value))
				{
					this.OnReportCodeChanging(value);
					this.SendPropertyChanging();
					this._ReportCode = value;
					this.SendPropertyChanged("ReportCode");
					this.OnReportCodeChanged();
				}
			}
		}
		
		[Column(Storage="_VersionFlag", DbType="Bit")]
		public System.Nullable<bool> VersionFlag
		{
			get
			{
				return this._VersionFlag;
			}
			set
			{
				if ((this._VersionFlag != value))
				{
					this.OnVersionFlagChanging(value);
					this.SendPropertyChanging();
					this._VersionFlag = value;
					this.SendPropertyChanged("VersionFlag");
					this.OnVersionFlagChanged();
				}
			}
		}
		
		[Association(Name="POHeader_POReport", Storage="_POHeader", ThisKey="Company,PONO,Version,AmendmentNo", OtherKey="Company,PONO,Version,AmendmentNo", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public POHeader POHeader
		{
			get
			{
				return this._POHeader.Entity;
			}
			set
			{
				POHeader previousValue = this._POHeader.Entity;
				if (((previousValue != value) 
							|| (this._POHeader.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._POHeader.Entity = null;
						previousValue.POReports.Remove(this);
					}
					this._POHeader.Entity = value;
					if ((value != null))
					{
						value.POReports.Add(this);
						this._Company = value.Company;
						this._PONO = value.PONO;
						this._Version = value.Version;
						this._AmendmentNo = value.AmendmentNo;
					}
					else
					{
						this._Company = default(string);
						this._PONO = default(string);
						this._Version = default(int);
						this._AmendmentNo = default(int);
					}
					this.SendPropertyChanged("POHeader");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.POSKUPhoto")]
	public partial class POSKUPhoto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Company;
		
		private string _PONO;
		
		private int _Version;
		
		private int _AmendmentNo;
		
		private int _OrderLine;
		
		private string _SKU;
		
		private byte[] _Photo;
		
		private System.Nullable<bool> _VersionFlag;
		
		private EntityRef<POColorSizeDetail> _POColorSizeDetail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnPONOChanging(string value);
    partial void OnPONOChanged();
    partial void OnVersionChanging(int value);
    partial void OnVersionChanged();
    partial void OnAmendmentNoChanging(int value);
    partial void OnAmendmentNoChanged();
    partial void OnOrderLineChanging(int value);
    partial void OnOrderLineChanged();
    partial void OnSKUChanging(string value);
    partial void OnSKUChanged();
    partial void OnPhotoChanging(byte[] value);
    partial void OnPhotoChanged();
    partial void OnVersionFlagChanging(System.Nullable<bool> value);
    partial void OnVersionFlagChanged();
    #endregion
		
		public POSKUPhoto()
		{
			this._POColorSizeDetail = default(EntityRef<POColorSizeDetail>);
			OnCreated();
		}
		
		[Column(Storage="_Company", DbType="VarChar(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					if (this._POColorSizeDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[Column(Storage="_PONO", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PONO
		{
			get
			{
				return this._PONO;
			}
			set
			{
				if ((this._PONO != value))
				{
					if (this._POColorSizeDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPONOChanging(value);
					this.SendPropertyChanging();
					this._PONO = value;
					this.SendPropertyChanged("PONO");
					this.OnPONOChanged();
				}
			}
		}
		
		[Column(Storage="_Version", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					if (this._POColorSizeDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[Column(Storage="_AmendmentNo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AmendmentNo
		{
			get
			{
				return this._AmendmentNo;
			}
			set
			{
				if ((this._AmendmentNo != value))
				{
					if (this._POColorSizeDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAmendmentNoChanging(value);
					this.SendPropertyChanging();
					this._AmendmentNo = value;
					this.SendPropertyChanged("AmendmentNo");
					this.OnAmendmentNoChanged();
				}
			}
		}
		
		[Column(Storage="_OrderLine", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int OrderLine
		{
			get
			{
				return this._OrderLine;
			}
			set
			{
				if ((this._OrderLine != value))
				{
					if (this._POColorSizeDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderLineChanging(value);
					this.SendPropertyChanging();
					this._OrderLine = value;
					this.SendPropertyChanged("OrderLine");
					this.OnOrderLineChanged();
				}
			}
		}
		
		[Column(Storage="_SKU", DbType="VarChar(32) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SKU
		{
			get
			{
				return this._SKU;
			}
			set
			{
				if ((this._SKU != value))
				{
					if (this._POColorSizeDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSKUChanging(value);
					this.SendPropertyChanging();
					this._SKU = value;
					this.SendPropertyChanged("SKU");
					this.OnSKUChanged();
				}
			}
		}
		
		[Column(Storage="_Photo", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public byte[] Photo
		{
			get
			{
				return this._Photo;
			}
			set
			{
				if ((this._Photo != value))
				{
					this.OnPhotoChanging(value);
					this.SendPropertyChanging();
					this._Photo = value;
					this.SendPropertyChanged("Photo");
					this.OnPhotoChanged();
				}
			}
		}
		
		[Column(Storage="_VersionFlag", DbType="Bit")]
		public System.Nullable<bool> VersionFlag
		{
			get
			{
				return this._VersionFlag;
			}
			set
			{
				if ((this._VersionFlag != value))
				{
					this.OnVersionFlagChanging(value);
					this.SendPropertyChanging();
					this._VersionFlag = value;
					this.SendPropertyChanged("VersionFlag");
					this.OnVersionFlagChanged();
				}
			}
		}
		
		[Association(Name="POColorSizeDetail_POSKUPhoto", Storage="_POColorSizeDetail", ThisKey="Company,PONO,Version,AmendmentNo,OrderLine,SKU", OtherKey="Company,PONO,Version,AmendmentNo,OrderLine,SKU", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public POColorSizeDetail POColorSizeDetail
		{
			get
			{
				return this._POColorSizeDetail.Entity;
			}
			set
			{
				POColorSizeDetail previousValue = this._POColorSizeDetail.Entity;
				if (((previousValue != value) 
							|| (this._POColorSizeDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._POColorSizeDetail.Entity = null;
						previousValue.POSKUPhoto = null;
					}
					this._POColorSizeDetail.Entity = value;
					if ((value != null))
					{
						value.POSKUPhoto = this;
						this._Company = value.Company;
						this._PONO = value.PONO;
						this._Version = value.Version;
						this._AmendmentNo = value.AmendmentNo;
						this._OrderLine = value.OrderLine;
						this._SKU = value.SKU;
					}
					else
					{
						this._Company = default(string);
						this._PONO = default(string);
						this._Version = default(int);
						this._AmendmentNo = default(int);
						this._OrderLine = default(int);
						this._SKU = default(string);
					}
					this.SendPropertyChanged("POColorSizeDetail");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.POTerm")]
	public partial class POTerm : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Company;
		
		private string _PONO;
		
		private int _Version;
		
		private int _AmendmentNo;
		
		private string _TermCode;
		
		private System.Nullable<bool> _VersionFlag;
		
		private EntityRef<POHeader> _POHeader;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnPONOChanging(string value);
    partial void OnPONOChanged();
    partial void OnVersionChanging(int value);
    partial void OnVersionChanged();
    partial void OnAmendmentNoChanging(int value);
    partial void OnAmendmentNoChanged();
    partial void OnTermCodeChanging(string value);
    partial void OnTermCodeChanged();
    partial void OnVersionFlagChanging(System.Nullable<bool> value);
    partial void OnVersionFlagChanged();
    #endregion
		
		public POTerm()
		{
			this._POHeader = default(EntityRef<POHeader>);
			OnCreated();
		}
		
		[Column(Storage="_Company", DbType="VarChar(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					if (this._POHeader.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[Column(Storage="_PONO", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PONO
		{
			get
			{
				return this._PONO;
			}
			set
			{
				if ((this._PONO != value))
				{
					if (this._POHeader.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPONOChanging(value);
					this.SendPropertyChanging();
					this._PONO = value;
					this.SendPropertyChanged("PONO");
					this.OnPONOChanged();
				}
			}
		}
		
		[Column(Storage="_Version", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					if (this._POHeader.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[Column(Storage="_AmendmentNo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AmendmentNo
		{
			get
			{
				return this._AmendmentNo;
			}
			set
			{
				if ((this._AmendmentNo != value))
				{
					if (this._POHeader.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAmendmentNoChanging(value);
					this.SendPropertyChanging();
					this._AmendmentNo = value;
					this.SendPropertyChanged("AmendmentNo");
					this.OnAmendmentNoChanged();
				}
			}
		}
		
		[Column(Storage="_TermCode", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TermCode
		{
			get
			{
				return this._TermCode;
			}
			set
			{
				if ((this._TermCode != value))
				{
					this.OnTermCodeChanging(value);
					this.SendPropertyChanging();
					this._TermCode = value;
					this.SendPropertyChanged("TermCode");
					this.OnTermCodeChanged();
				}
			}
		}
		
		[Column(Storage="_VersionFlag", DbType="Bit")]
		public System.Nullable<bool> VersionFlag
		{
			get
			{
				return this._VersionFlag;
			}
			set
			{
				if ((this._VersionFlag != value))
				{
					this.OnVersionFlagChanging(value);
					this.SendPropertyChanging();
					this._VersionFlag = value;
					this.SendPropertyChanged("VersionFlag");
					this.OnVersionFlagChanged();
				}
			}
		}
		
		[Association(Name="POHeader_POTerm", Storage="_POHeader", ThisKey="Company,PONO,Version,AmendmentNo", OtherKey="Company,PONO,Version,AmendmentNo", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public POHeader POHeader
		{
			get
			{
				return this._POHeader.Entity;
			}
			set
			{
				POHeader previousValue = this._POHeader.Entity;
				if (((previousValue != value) 
							|| (this._POHeader.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._POHeader.Entity = null;
						previousValue.POTerms.Remove(this);
					}
					this._POHeader.Entity = value;
					if ((value != null))
					{
						value.POTerms.Add(this);
						this._Company = value.Company;
						this._PONO = value.PONO;
						this._Version = value.Version;
						this._AmendmentNo = value.AmendmentNo;
					}
					else
					{
						this._Company = default(string);
						this._PONO = default(string);
						this._Version = default(int);
						this._AmendmentNo = default(int);
					}
					this.SendPropertyChanged("POHeader");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Report")]
	public partial class Report : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ReportTypeCode;
		
		private string _ReportCode;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReportTypeCodeChanging(string value);
    partial void OnReportTypeCodeChanged();
    partial void OnReportCodeChanging(string value);
    partial void OnReportCodeChanged();
    #endregion
		
		public Report()
		{
			OnCreated();
		}
		
		[Column(Storage="_ReportTypeCode", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ReportTypeCode
		{
			get
			{
				return this._ReportTypeCode;
			}
			set
			{
				if ((this._ReportTypeCode != value))
				{
					this.OnReportTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._ReportTypeCode = value;
					this.SendPropertyChanged("ReportTypeCode");
					this.OnReportTypeCodeChanged();
				}
			}
		}
		
		[Column(Storage="_ReportCode", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ReportCode
		{
			get
			{
				return this._ReportCode;
			}
			set
			{
				if ((this._ReportCode != value))
				{
					this.OnReportCodeChanging(value);
					this.SendPropertyChanging();
					this._ReportCode = value;
					this.SendPropertyChanged("ReportCode");
					this.OnReportCodeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Term")]
	public partial class Term : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TermCode;
		
		private string _LanguageCode;
		
		private string _Remark;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTermCodeChanging(string value);
    partial void OnTermCodeChanged();
    partial void OnLanguageCodeChanging(string value);
    partial void OnLanguageCodeChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public Term()
		{
			OnCreated();
		}
		
		[Column(Storage="_TermCode", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TermCode
		{
			get
			{
				return this._TermCode;
			}
			set
			{
				if ((this._TermCode != value))
				{
					this.OnTermCodeChanging(value);
					this.SendPropertyChanging();
					this._TermCode = value;
					this.SendPropertyChanged("TermCode");
					this.OnTermCodeChanged();
				}
			}
		}
		
		[Column(Storage="_LanguageCode", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string LanguageCode
		{
			get
			{
				return this._LanguageCode;
			}
			set
			{
				if ((this._LanguageCode != value))
				{
					this.OnLanguageCodeChanging(value);
					this.SendPropertyChanging();
					this._LanguageCode = value;
					this.SendPropertyChanged("LanguageCode");
					this.OnLanguageCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Remark", DbType="NVarChar(1000)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.V_Color")]
	public partial class V_Color
	{
		
		private string _SupplierReference;
		
		private string _ItemCode;
		
		private string _ColorCode;
		
		private int _Price;
		
		private int _Ratio;
		
		public V_Color()
		{
		}
		
		[Column(Storage="_SupplierReference", DbType="VarChar(50)")]
		public string SupplierReference
		{
			get
			{
				return this._SupplierReference;
			}
			set
			{
				if ((this._SupplierReference != value))
				{
					this._SupplierReference = value;
				}
			}
		}
		
		[Column(Storage="_ItemCode", DbType="VarChar(50)")]
		public string ItemCode
		{
			get
			{
				return this._ItemCode;
			}
			set
			{
				if ((this._ItemCode != value))
				{
					this._ItemCode = value;
				}
			}
		}
		
		[Column(Storage="_ColorCode", DbType="VarChar(50)")]
		public string ColorCode
		{
			get
			{
				return this._ColorCode;
			}
			set
			{
				if ((this._ColorCode != value))
				{
					this._ColorCode = value;
				}
			}
		}
		
		[Column(Storage="_Price", DbType="Int NOT NULL")]
		public int Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this._Price = value;
				}
			}
		}
		
		[Column(Storage="_Ratio", DbType="Int NOT NULL")]
		public int Ratio
		{
			get
			{
				return this._Ratio;
			}
			set
			{
				if ((this._Ratio != value))
				{
					this._Ratio = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.V_ItemCode")]
	public partial class V_ItemCode
	{
		
		private string _SupplierReference;
		
		private string _Supplier;
		
		private string _ItemCode;
		
		private string _SupplierUom;
		
		private string _PHUom;
		
		private System.Nullable<decimal> _AdditionalCost;
		
		private string _Commodity;
		
		private System.Nullable<decimal> _UsableWidth;
		
		private string _UsableWidths;
		
		private System.Nullable<decimal> _SupplierWidth;
		
		private string _SupplierWidths;
		
		private System.Nullable<decimal> _Price;
		
		private System.Nullable<decimal> _RateToPHUnit1;
		
		private System.Nullable<decimal> _RateToPHUnitBK;
		
		public V_ItemCode()
		{
		}
		
		[Column(Storage="_SupplierReference", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SupplierReference
		{
			get
			{
				return this._SupplierReference;
			}
			set
			{
				if ((this._SupplierReference != value))
				{
					this._SupplierReference = value;
				}
			}
		}
		
		[Column(Storage="_Supplier", DbType="VarChar(50)")]
		public string Supplier
		{
			get
			{
				return this._Supplier;
			}
			set
			{
				if ((this._Supplier != value))
				{
					this._Supplier = value;
				}
			}
		}
		
		[Column(Storage="_ItemCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ItemCode
		{
			get
			{
				return this._ItemCode;
			}
			set
			{
				if ((this._ItemCode != value))
				{
					this._ItemCode = value;
				}
			}
		}
		
		[Column(Storage="_SupplierUom", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string SupplierUom
		{
			get
			{
				return this._SupplierUom;
			}
			set
			{
				if ((this._SupplierUom != value))
				{
					this._SupplierUom = value;
				}
			}
		}
		
		[Column(Storage="_PHUom", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string PHUom
		{
			get
			{
				return this._PHUom;
			}
			set
			{
				if ((this._PHUom != value))
				{
					this._PHUom = value;
				}
			}
		}
		
		[Column(Storage="_AdditionalCost", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> AdditionalCost
		{
			get
			{
				return this._AdditionalCost;
			}
			set
			{
				if ((this._AdditionalCost != value))
				{
					this._AdditionalCost = value;
				}
			}
		}
		
		[Column(Storage="_Commodity", DbType="VarChar(4000)")]
		public string Commodity
		{
			get
			{
				return this._Commodity;
			}
			set
			{
				if ((this._Commodity != value))
				{
					this._Commodity = value;
				}
			}
		}
		
		[Column(Storage="_UsableWidth", DbType="Decimal(15,4)")]
		public System.Nullable<decimal> UsableWidth
		{
			get
			{
				return this._UsableWidth;
			}
			set
			{
				if ((this._UsableWidth != value))
				{
					this._UsableWidth = value;
				}
			}
		}
		
		[Column(Storage="_UsableWidths", DbType="NVarChar(200)")]
		public string UsableWidths
		{
			get
			{
				return this._UsableWidths;
			}
			set
			{
				if ((this._UsableWidths != value))
				{
					this._UsableWidths = value;
				}
			}
		}
		
		[Column(Storage="_SupplierWidth", DbType="Decimal(15,4)")]
		public System.Nullable<decimal> SupplierWidth
		{
			get
			{
				return this._SupplierWidth;
			}
			set
			{
				if ((this._SupplierWidth != value))
				{
					this._SupplierWidth = value;
				}
			}
		}
		
		[Column(Storage="_SupplierWidths", DbType="NVarChar(200)")]
		public string SupplierWidths
		{
			get
			{
				return this._SupplierWidths;
			}
			set
			{
				if ((this._SupplierWidths != value))
				{
					this._SupplierWidths = value;
				}
			}
		}
		
		[Column(Storage="_Price", DbType="Decimal(15,6)")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this._Price = value;
				}
			}
		}
		
		[Column(Storage="_RateToPHUnit1", DbType="Decimal(15,4)")]
		public System.Nullable<decimal> RateToPHUnit1
		{
			get
			{
				return this._RateToPHUnit1;
			}
			set
			{
				if ((this._RateToPHUnit1 != value))
				{
					this._RateToPHUnit1 = value;
				}
			}
		}
		
		[Column(Storage="_RateToPHUnitBK", DbType="Decimal(15,4)")]
		public System.Nullable<decimal> RateToPHUnitBK
		{
			get
			{
				return this._RateToPHUnitBK;
			}
			set
			{
				if ((this._RateToPHUnitBK != value))
				{
					this._RateToPHUnitBK = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.V_Photo")]
	public partial class V_Photo
	{
		
		private string _SupplierReference;
		
		private string _Supplier;
		
		private string _ItemCode;
		
		private byte[] _Photo;
		
		public V_Photo()
		{
		}
		
		[Column(Storage="_SupplierReference", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SupplierReference
		{
			get
			{
				return this._SupplierReference;
			}
			set
			{
				if ((this._SupplierReference != value))
				{
					this._SupplierReference = value;
				}
			}
		}
		
		[Column(Storage="_Supplier", DbType="NVarChar(200)")]
		public string Supplier
		{
			get
			{
				return this._Supplier;
			}
			set
			{
				if ((this._Supplier != value))
				{
					this._Supplier = value;
				}
			}
		}
		
		[Column(Storage="_ItemCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ItemCode
		{
			get
			{
				return this._ItemCode;
			}
			set
			{
				if ((this._ItemCode != value))
				{
					this._ItemCode = value;
				}
			}
		}
		
		[Column(Storage="_Photo", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public byte[] Photo
		{
			get
			{
				return this._Photo;
			}
			set
			{
				if ((this._Photo != value))
				{
					this._Photo = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.View_Customer")]
	public partial class View_Customer
	{
		
		private string _CUSTOMER;
		
		private string _CUSTOMERNAME;
		
		public View_Customer()
		{
		}
		
		[Column(Storage="_CUSTOMER", DbType="Char(4) NOT NULL", CanBeNull=false)]
		public string CUSTOMER
		{
			get
			{
				return this._CUSTOMER;
			}
			set
			{
				if ((this._CUSTOMER != value))
				{
					this._CUSTOMER = value;
				}
			}
		}
		
		[Column(Storage="_CUSTOMERNAME", DbType="Char(35) NOT NULL", CanBeNull=false)]
		public string CUSTOMERNAME
		{
			get
			{
				return this._CUSTOMERNAME;
			}
			set
			{
				if ((this._CUSTOMERNAME != value))
				{
					this._CUSTOMERNAME = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.View_POPC")]
	public partial class View_POPC
	{
		
		private int _Version;
		
		private int _AmendmentNo;
		
		private string _PONO;
		
		private string _SKU;
		
		private decimal _Qty;
		
		private string _LC;
		
		private string _Remark;
		
		private double _Rate;
		
		private string _AddtionalTermsAndConditions;
		
		private string _Factory;
		
		private decimal _TotalReceivedQty;
		
		private int _Leadtime;
		
		private string _cono;
		
		private int _Line1;
		
		private string _Item;
		
		private string _Col;
		
		private System.Nullable<System.DateTime> _Podt;
		
		private string _Jobno;
		
		private string _Supp;
		
		private System.Nullable<System.DateTime> _Ddt;
		
		private char _Flag1;
		
		private string _Clrs;
		
		private decimal _Osqty;
		
		private string _plnn;
		
		private string _VCAT03;
		
		private double _cnvf53;
		
		private decimal _Px;
		
		private System.Nullable<System.DateTime> _CFDMETD;
		
		private System.Nullable<System.DateTime> _ETASL;
		
		private string _Unit;
		
		private string _CURR;
		
		private int _SIZSAA;
		
		private int _FITSAA;
		
		private string _DSIZ15;
		
		private string _dept53;
		
		private System.Nullable<System.DateTime> _Dtdr;
		
		private int _ocls02;
		
		private string _suom53;
		
		private string _WSTA40;
		
		private string _GarmentPO;
		
		private string _StyleNO;
		
		private System.DateTime _RECD59;
		
		private decimal _OverReceiptTolerance;
		
		private string _OvershiQty;
		
		private string _WO;
		
		private string _Type;
		
		private string _Conf;
		
		private string _CustomerColorDesc;
		
		private string _DBZY;
		
		private string _DIPOK;
		
		private string _DIPRJ;
		
		private string _Hdl;
		
		private string _Lab;
		
		private string _labok;
		
		private string _ladiff;
		
		private string _ladt;
		
		private string _qc;
		
		private string _QN;
		
		private int _ReturnPOQty;
		
		private string _RWO;
		
		private string _strdt;
		
		private string _Subdt;
		
		private string _SUBMOK;
		
		private string _SUBMRJ;
		
		private string _Swatch;
		
		private string _swdiff;
		
		private string _swdt;
		
		private string _whkept;
		
		private System.Nullable<bool> _havePDF;
		
		private string _Supplier;
		
		private string _ERPSupplier;
		
		private string _SupplierName;
		
		private string _Address;
		
		private string _SupplierAddress1;
		
		private string _SupplierAddress2;
		
		private string _SupplierAddress3;
		
		private string _TEL;
		
		private string _Fax;
		
		private string _MobilePhone;
		
		private string _EMail;
		
		private string _Country;
		
		private string _Beneficiary;
		
		private string _Agent;
		
		private string _Active;
		
		private string _AttnPerson;
		
		private string _Remarks;
		
		private string _Currency;
		
		private string _PaymentTerms;
		
		private string _CreditDays;
		
		private decimal _StandardDev;
		
		private decimal _TradingDis;
		
		private decimal _FurtherDis;
		
		private decimal _EstInterest;
		
		private decimal _BankCharge;
		
		private decimal _StockInterest;
		
		private decimal _Transportation;
		
		private decimal _InlandForwarderHandling;
		
		private decimal _InlandTransportation;
		
		private decimal _TransitLoadingTransportation;
		
		private decimal _Frieght;
		
		private decimal _Frieght_Air;
		
		private decimal _Frieght_Boat;
		
		private decimal _AdditionalFrieght;
		
		private decimal _SubCharge;
		
		private string _DeliveryTerm;
		
		private string _SupplierUOM;
		
		private string _ShipMode;
		
		private string _DischargePort;
		
		private string _DeliveryMode;
		
		private decimal _TransitTimeTruck;
		
		private decimal _TransitTimeAir;
		
		private decimal _TransitTimeBoat;
		
		private string _MaterialGroup;
		
		private string _PaymentTermsType;
		
		private string _PaymentMethod;
		
		private string _ReceivingAddress;
		
		private string _DeliveryAddress;
		
		private System.Nullable<System.DateTime> _ETADate;
		
		private string _Specification;
		
		private string _AdditionalReason;
		
		private decimal _AdditionalCost;
		
		private string _Commodity;
		
		private string _SizeCode;
		
		private string _IntelSize;
		
		private string _FitCode;
		
		private string _Difference;
		
		private int _OvershipQty;
		
		private System.Nullable<double> _SuppTotalReceivedQty;
		
		private string _Customer;
		
		private System.Nullable<bool> _TruePO_IsOutStanding;
		
		private System.Nullable<bool> _PO_IsOutStanding;
		
		private System.Nullable<bool> _SKU_IsOutStanding;
		
		public View_POPC()
		{
		}
		
		[Column(Storage="_Version", DbType="Int NOT NULL")]
		public int Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this._Version = value;
				}
			}
		}
		
		[Column(Storage="_AmendmentNo", DbType="Int NOT NULL")]
		public int AmendmentNo
		{
			get
			{
				return this._AmendmentNo;
			}
			set
			{
				if ((this._AmendmentNo != value))
				{
					this._AmendmentNo = value;
				}
			}
		}
		
		[Column(Storage="_PONO", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string PONO
		{
			get
			{
				return this._PONO;
			}
			set
			{
				if ((this._PONO != value))
				{
					this._PONO = value;
				}
			}
		}
		
		[Column(Storage="_SKU", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
		public string SKU
		{
			get
			{
				return this._SKU;
			}
			set
			{
				if ((this._SKU != value))
				{
					this._SKU = value;
				}
			}
		}
		
		[Column(Storage="_Qty", DbType="Decimal(18,2) NOT NULL")]
		public decimal Qty
		{
			get
			{
				return this._Qty;
			}
			set
			{
				if ((this._Qty != value))
				{
					this._Qty = value;
				}
			}
		}
		
		[Column(Storage="_LC", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string LC
		{
			get
			{
				return this._LC;
			}
			set
			{
				if ((this._LC != value))
				{
					this._LC = value;
				}
			}
		}
		
		[Column(Storage="_Remark", DbType="VarChar(2000) NOT NULL", CanBeNull=false)]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this._Remark = value;
				}
			}
		}
		
		[Column(Storage="_Rate", DbType="Float NOT NULL")]
		public double Rate
		{
			get
			{
				return this._Rate;
			}
			set
			{
				if ((this._Rate != value))
				{
					this._Rate = value;
				}
			}
		}
		
		[Column(Storage="_AddtionalTermsAndConditions", DbType="VarChar(3000) NOT NULL", CanBeNull=false)]
		public string AddtionalTermsAndConditions
		{
			get
			{
				return this._AddtionalTermsAndConditions;
			}
			set
			{
				if ((this._AddtionalTermsAndConditions != value))
				{
					this._AddtionalTermsAndConditions = value;
				}
			}
		}
		
		[Column(Storage="_Factory", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Factory
		{
			get
			{
				return this._Factory;
			}
			set
			{
				if ((this._Factory != value))
				{
					this._Factory = value;
				}
			}
		}
		
		[Column(Storage="_TotalReceivedQty", DbType="Decimal(18,2) NOT NULL")]
		public decimal TotalReceivedQty
		{
			get
			{
				return this._TotalReceivedQty;
			}
			set
			{
				if ((this._TotalReceivedQty != value))
				{
					this._TotalReceivedQty = value;
				}
			}
		}
		
		[Column(Storage="_Leadtime", DbType="Int NOT NULL")]
		public int Leadtime
		{
			get
			{
				return this._Leadtime;
			}
			set
			{
				if ((this._Leadtime != value))
				{
					this._Leadtime = value;
				}
			}
		}
		
		[Column(Storage="_cono", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		public string cono
		{
			get
			{
				return this._cono;
			}
			set
			{
				if ((this._cono != value))
				{
					this._cono = value;
				}
			}
		}
		
		[Column(Storage="_Line1", DbType="Int NOT NULL")]
		public int Line1
		{
			get
			{
				return this._Line1;
			}
			set
			{
				if ((this._Line1 != value))
				{
					this._Line1 = value;
				}
			}
		}
		
		[Column(Storage="_Item", DbType="VarChar(9) NOT NULL", CanBeNull=false)]
		public string Item
		{
			get
			{
				return this._Item;
			}
			set
			{
				if ((this._Item != value))
				{
					this._Item = value;
				}
			}
		}
		
		[Column(Storage="_Col", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Col
		{
			get
			{
				return this._Col;
			}
			set
			{
				if ((this._Col != value))
				{
					this._Col = value;
				}
			}
		}
		
		[Column(Storage="_Podt", DbType="DateTime")]
		public System.Nullable<System.DateTime> Podt
		{
			get
			{
				return this._Podt;
			}
			set
			{
				if ((this._Podt != value))
				{
					this._Podt = value;
				}
			}
		}
		
		[Column(Storage="_Jobno", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Jobno
		{
			get
			{
				return this._Jobno;
			}
			set
			{
				if ((this._Jobno != value))
				{
					this._Jobno = value;
				}
			}
		}
		
		[Column(Storage="_Supp", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Supp
		{
			get
			{
				return this._Supp;
			}
			set
			{
				if ((this._Supp != value))
				{
					this._Supp = value;
				}
			}
		}
		
		[Column(Storage="_Ddt", DbType="DateTime")]
		public System.Nullable<System.DateTime> Ddt
		{
			get
			{
				return this._Ddt;
			}
			set
			{
				if ((this._Ddt != value))
				{
					this._Ddt = value;
				}
			}
		}
		
		[Column(Storage="_Flag1", DbType="VarChar(1) NOT NULL")]
		public char Flag1
		{
			get
			{
				return this._Flag1;
			}
			set
			{
				if ((this._Flag1 != value))
				{
					this._Flag1 = value;
				}
			}
		}
		
		[Column(Storage="_Clrs", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Clrs
		{
			get
			{
				return this._Clrs;
			}
			set
			{
				if ((this._Clrs != value))
				{
					this._Clrs = value;
				}
			}
		}
		
		[Column(Storage="_Osqty", DbType="Decimal(18,2) NOT NULL")]
		public decimal Osqty
		{
			get
			{
				return this._Osqty;
			}
			set
			{
				if ((this._Osqty != value))
				{
					this._Osqty = value;
				}
			}
		}
		
		[Column(Storage="_plnn", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string plnn
		{
			get
			{
				return this._plnn;
			}
			set
			{
				if ((this._plnn != value))
				{
					this._plnn = value;
				}
			}
		}
		
		[Column(Storage="_VCAT03", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string VCAT03
		{
			get
			{
				return this._VCAT03;
			}
			set
			{
				if ((this._VCAT03 != value))
				{
					this._VCAT03 = value;
				}
			}
		}
		
		[Column(Storage="_cnvf53", DbType="Float NOT NULL")]
		public double cnvf53
		{
			get
			{
				return this._cnvf53;
			}
			set
			{
				if ((this._cnvf53 != value))
				{
					this._cnvf53 = value;
				}
			}
		}
		
		[Column(Storage="_Px", DbType="Decimal(18,4) NOT NULL")]
		public decimal Px
		{
			get
			{
				return this._Px;
			}
			set
			{
				if ((this._Px != value))
				{
					this._Px = value;
				}
			}
		}
		
		[Column(Storage="_CFDMETD", DbType="DateTime")]
		public System.Nullable<System.DateTime> CFDMETD
		{
			get
			{
				return this._CFDMETD;
			}
			set
			{
				if ((this._CFDMETD != value))
				{
					this._CFDMETD = value;
				}
			}
		}
		
		[Column(Storage="_ETASL", DbType="DateTime")]
		public System.Nullable<System.DateTime> ETASL
		{
			get
			{
				return this._ETASL;
			}
			set
			{
				if ((this._ETASL != value))
				{
					this._ETASL = value;
				}
			}
		}
		
		[Column(Storage="_Unit", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		public string Unit
		{
			get
			{
				return this._Unit;
			}
			set
			{
				if ((this._Unit != value))
				{
					this._Unit = value;
				}
			}
		}
		
		[Column(Storage="_CURR", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string CURR
		{
			get
			{
				return this._CURR;
			}
			set
			{
				if ((this._CURR != value))
				{
					this._CURR = value;
				}
			}
		}
		
		[Column(Storage="_SIZSAA", DbType="Int NOT NULL")]
		public int SIZSAA
		{
			get
			{
				return this._SIZSAA;
			}
			set
			{
				if ((this._SIZSAA != value))
				{
					this._SIZSAA = value;
				}
			}
		}
		
		[Column(Storage="_FITSAA", DbType="Int NOT NULL")]
		public int FITSAA
		{
			get
			{
				return this._FITSAA;
			}
			set
			{
				if ((this._FITSAA != value))
				{
					this._FITSAA = value;
				}
			}
		}
		
		[Column(Storage="_DSIZ15", DbType="VarChar(3) NOT NULL", CanBeNull=false)]
		public string DSIZ15
		{
			get
			{
				return this._DSIZ15;
			}
			set
			{
				if ((this._DSIZ15 != value))
				{
					this._DSIZ15 = value;
				}
			}
		}
		
		[Column(Storage="_dept53", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string dept53
		{
			get
			{
				return this._dept53;
			}
			set
			{
				if ((this._dept53 != value))
				{
					this._dept53 = value;
				}
			}
		}
		
		[Column(Storage="_Dtdr", DbType="DateTime")]
		public System.Nullable<System.DateTime> Dtdr
		{
			get
			{
				return this._Dtdr;
			}
			set
			{
				if ((this._Dtdr != value))
				{
					this._Dtdr = value;
				}
			}
		}
		
		[Column(Storage="_ocls02", DbType="Int NOT NULL")]
		public int ocls02
		{
			get
			{
				return this._ocls02;
			}
			set
			{
				if ((this._ocls02 != value))
				{
					this._ocls02 = value;
				}
			}
		}
		
		[Column(Storage="_suom53", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		public string suom53
		{
			get
			{
				return this._suom53;
			}
			set
			{
				if ((this._suom53 != value))
				{
					this._suom53 = value;
				}
			}
		}
		
		[Column(Storage="_WSTA40", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		public string WSTA40
		{
			get
			{
				return this._WSTA40;
			}
			set
			{
				if ((this._WSTA40 != value))
				{
					this._WSTA40 = value;
				}
			}
		}
		
		[Column(Storage="_GarmentPO", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string GarmentPO
		{
			get
			{
				return this._GarmentPO;
			}
			set
			{
				if ((this._GarmentPO != value))
				{
					this._GarmentPO = value;
				}
			}
		}
		
		[Column(Storage="_StyleNO", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string StyleNO
		{
			get
			{
				return this._StyleNO;
			}
			set
			{
				if ((this._StyleNO != value))
				{
					this._StyleNO = value;
				}
			}
		}
		
		[Column(Storage="_RECD59", DbType="DateTime NOT NULL")]
		public System.DateTime RECD59
		{
			get
			{
				return this._RECD59;
			}
			set
			{
				if ((this._RECD59 != value))
				{
					this._RECD59 = value;
				}
			}
		}
		
		[Column(Storage="_OverReceiptTolerance", DbType="Decimal(5,2) NOT NULL")]
		public decimal OverReceiptTolerance
		{
			get
			{
				return this._OverReceiptTolerance;
			}
			set
			{
				if ((this._OverReceiptTolerance != value))
				{
					this._OverReceiptTolerance = value;
				}
			}
		}
		
		[Column(Storage="_OvershiQty", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string OvershiQty
		{
			get
			{
				return this._OvershiQty;
			}
			set
			{
				if ((this._OvershiQty != value))
				{
					this._OvershiQty = value;
				}
			}
		}
		
		[Column(Storage="_WO", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		public string WO
		{
			get
			{
				return this._WO;
			}
			set
			{
				if ((this._WO != value))
				{
					this._WO = value;
				}
			}
		}
		
		[Column(Storage="_Type", DbType="VarChar(6)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this._Type = value;
				}
			}
		}
		
		[Column(Storage="_Conf", DbType="VarChar(15)")]
		public string Conf
		{
			get
			{
				return this._Conf;
			}
			set
			{
				if ((this._Conf != value))
				{
					this._Conf = value;
				}
			}
		}
		
		[Column(Storage="_CustomerColorDesc", DbType="VarChar(15)")]
		public string CustomerColorDesc
		{
			get
			{
				return this._CustomerColorDesc;
			}
			set
			{
				if ((this._CustomerColorDesc != value))
				{
					this._CustomerColorDesc = value;
				}
			}
		}
		
		[Column(Storage="_DBZY", DbType="VarChar(15)")]
		public string DBZY
		{
			get
			{
				return this._DBZY;
			}
			set
			{
				if ((this._DBZY != value))
				{
					this._DBZY = value;
				}
			}
		}
		
		[Column(Storage="_DIPOK", DbType="VarChar(15)")]
		public string DIPOK
		{
			get
			{
				return this._DIPOK;
			}
			set
			{
				if ((this._DIPOK != value))
				{
					this._DIPOK = value;
				}
			}
		}
		
		[Column(Storage="_DIPRJ", DbType="VarChar(15)")]
		public string DIPRJ
		{
			get
			{
				return this._DIPRJ;
			}
			set
			{
				if ((this._DIPRJ != value))
				{
					this._DIPRJ = value;
				}
			}
		}
		
		[Column(Storage="_Hdl", DbType="VarChar(15)")]
		public string Hdl
		{
			get
			{
				return this._Hdl;
			}
			set
			{
				if ((this._Hdl != value))
				{
					this._Hdl = value;
				}
			}
		}
		
		[Column(Storage="_Lab", DbType="VarChar(15)")]
		public string Lab
		{
			get
			{
				return this._Lab;
			}
			set
			{
				if ((this._Lab != value))
				{
					this._Lab = value;
				}
			}
		}
		
		[Column(Storage="_labok", DbType="VarChar(15)")]
		public string labok
		{
			get
			{
				return this._labok;
			}
			set
			{
				if ((this._labok != value))
				{
					this._labok = value;
				}
			}
		}
		
		[Column(Storage="_ladiff", DbType="VarChar(15)")]
		public string ladiff
		{
			get
			{
				return this._ladiff;
			}
			set
			{
				if ((this._ladiff != value))
				{
					this._ladiff = value;
				}
			}
		}
		
		[Column(Storage="_ladt", DbType="VarChar(15)")]
		public string ladt
		{
			get
			{
				return this._ladt;
			}
			set
			{
				if ((this._ladt != value))
				{
					this._ladt = value;
				}
			}
		}
		
		[Column(Storage="_qc", DbType="VarChar(15)")]
		public string qc
		{
			get
			{
				return this._qc;
			}
			set
			{
				if ((this._qc != value))
				{
					this._qc = value;
				}
			}
		}
		
		[Column(Storage="_QN", DbType="VarChar(15)")]
		public string QN
		{
			get
			{
				return this._QN;
			}
			set
			{
				if ((this._QN != value))
				{
					this._QN = value;
				}
			}
		}
		
		[Column(Storage="_ReturnPOQty", DbType="Int NOT NULL")]
		public int ReturnPOQty
		{
			get
			{
				return this._ReturnPOQty;
			}
			set
			{
				if ((this._ReturnPOQty != value))
				{
					this._ReturnPOQty = value;
				}
			}
		}
		
		[Column(Storage="_RWO", DbType="VarChar(15)")]
		public string RWO
		{
			get
			{
				return this._RWO;
			}
			set
			{
				if ((this._RWO != value))
				{
					this._RWO = value;
				}
			}
		}
		
		[Column(Storage="_strdt", DbType="VarChar(15)")]
		public string strdt
		{
			get
			{
				return this._strdt;
			}
			set
			{
				if ((this._strdt != value))
				{
					this._strdt = value;
				}
			}
		}
		
		[Column(Storage="_Subdt", DbType="VarChar(15)")]
		public string Subdt
		{
			get
			{
				return this._Subdt;
			}
			set
			{
				if ((this._Subdt != value))
				{
					this._Subdt = value;
				}
			}
		}
		
		[Column(Storage="_SUBMOK", DbType="VarChar(15)")]
		public string SUBMOK
		{
			get
			{
				return this._SUBMOK;
			}
			set
			{
				if ((this._SUBMOK != value))
				{
					this._SUBMOK = value;
				}
			}
		}
		
		[Column(Storage="_SUBMRJ", DbType="VarChar(15)")]
		public string SUBMRJ
		{
			get
			{
				return this._SUBMRJ;
			}
			set
			{
				if ((this._SUBMRJ != value))
				{
					this._SUBMRJ = value;
				}
			}
		}
		
		[Column(Storage="_Swatch", DbType="VarChar(15)")]
		public string Swatch
		{
			get
			{
				return this._Swatch;
			}
			set
			{
				if ((this._Swatch != value))
				{
					this._Swatch = value;
				}
			}
		}
		
		[Column(Storage="_swdiff", DbType="VarChar(15)")]
		public string swdiff
		{
			get
			{
				return this._swdiff;
			}
			set
			{
				if ((this._swdiff != value))
				{
					this._swdiff = value;
				}
			}
		}
		
		[Column(Storage="_swdt", DbType="VarChar(15)")]
		public string swdt
		{
			get
			{
				return this._swdt;
			}
			set
			{
				if ((this._swdt != value))
				{
					this._swdt = value;
				}
			}
		}
		
		[Column(Storage="_whkept", DbType="VarChar(15)")]
		public string whkept
		{
			get
			{
				return this._whkept;
			}
			set
			{
				if ((this._whkept != value))
				{
					this._whkept = value;
				}
			}
		}
		
		[Column(Storage="_havePDF", DbType="Bit")]
		public System.Nullable<bool> havePDF
		{
			get
			{
				return this._havePDF;
			}
			set
			{
				if ((this._havePDF != value))
				{
					this._havePDF = value;
				}
			}
		}
		
		[Column(Storage="_Supplier", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Supplier
		{
			get
			{
				return this._Supplier;
			}
			set
			{
				if ((this._Supplier != value))
				{
					this._Supplier = value;
				}
			}
		}
		
		[Column(Storage="_ERPSupplier", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ERPSupplier
		{
			get
			{
				return this._ERPSupplier;
			}
			set
			{
				if ((this._ERPSupplier != value))
				{
					this._ERPSupplier = value;
				}
			}
		}
		
		[Column(Storage="_SupplierName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SupplierName
		{
			get
			{
				return this._SupplierName;
			}
			set
			{
				if ((this._SupplierName != value))
				{
					this._SupplierName = value;
				}
			}
		}
		
		[Column(Storage="_Address", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this._Address = value;
				}
			}
		}
		
		[Column(Storage="_SupplierAddress1", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string SupplierAddress1
		{
			get
			{
				return this._SupplierAddress1;
			}
			set
			{
				if ((this._SupplierAddress1 != value))
				{
					this._SupplierAddress1 = value;
				}
			}
		}
		
		[Column(Storage="_SupplierAddress2", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string SupplierAddress2
		{
			get
			{
				return this._SupplierAddress2;
			}
			set
			{
				if ((this._SupplierAddress2 != value))
				{
					this._SupplierAddress2 = value;
				}
			}
		}
		
		[Column(Storage="_SupplierAddress3", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string SupplierAddress3
		{
			get
			{
				return this._SupplierAddress3;
			}
			set
			{
				if ((this._SupplierAddress3 != value))
				{
					this._SupplierAddress3 = value;
				}
			}
		}
		
		[Column(Storage="_TEL", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string TEL
		{
			get
			{
				return this._TEL;
			}
			set
			{
				if ((this._TEL != value))
				{
					this._TEL = value;
				}
			}
		}
		
		[Column(Storage="_Fax", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this._Fax = value;
				}
			}
		}
		
		[Column(Storage="_MobilePhone", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string MobilePhone
		{
			get
			{
				return this._MobilePhone;
			}
			set
			{
				if ((this._MobilePhone != value))
				{
					this._MobilePhone = value;
				}
			}
		}
		
		[Column(Storage="_EMail", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string EMail
		{
			get
			{
				return this._EMail;
			}
			set
			{
				if ((this._EMail != value))
				{
					this._EMail = value;
				}
			}
		}
		
		[Column(Storage="_Country", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this._Country = value;
				}
			}
		}
		
		[Column(Storage="_Beneficiary", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Beneficiary
		{
			get
			{
				return this._Beneficiary;
			}
			set
			{
				if ((this._Beneficiary != value))
				{
					this._Beneficiary = value;
				}
			}
		}
		
		[Column(Storage="_Agent", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Agent
		{
			get
			{
				return this._Agent;
			}
			set
			{
				if ((this._Agent != value))
				{
					this._Agent = value;
				}
			}
		}
		
		[Column(Storage="_Active", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this._Active = value;
				}
			}
		}
		
		[Column(Storage="_AttnPerson", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AttnPerson
		{
			get
			{
				return this._AttnPerson;
			}
			set
			{
				if ((this._AttnPerson != value))
				{
					this._AttnPerson = value;
				}
			}
		}
		
		[Column(Storage="_Remarks", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this._Remarks = value;
				}
			}
		}
		
		[Column(Storage="_Currency", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this._Currency = value;
				}
			}
		}
		
		[Column(Storage="_PaymentTerms", DbType="VarChar(500)")]
		public string PaymentTerms
		{
			get
			{
				return this._PaymentTerms;
			}
			set
			{
				if ((this._PaymentTerms != value))
				{
					this._PaymentTerms = value;
				}
			}
		}
		
		[Column(Storage="_CreditDays", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string CreditDays
		{
			get
			{
				return this._CreditDays;
			}
			set
			{
				if ((this._CreditDays != value))
				{
					this._CreditDays = value;
				}
			}
		}
		
		[Column(Storage="_StandardDev", DbType="Decimal(15,4) NOT NULL")]
		public decimal StandardDev
		{
			get
			{
				return this._StandardDev;
			}
			set
			{
				if ((this._StandardDev != value))
				{
					this._StandardDev = value;
				}
			}
		}
		
		[Column(Storage="_TradingDis", DbType="Decimal(15,4) NOT NULL")]
		public decimal TradingDis
		{
			get
			{
				return this._TradingDis;
			}
			set
			{
				if ((this._TradingDis != value))
				{
					this._TradingDis = value;
				}
			}
		}
		
		[Column(Storage="_FurtherDis", DbType="Decimal(15,4) NOT NULL")]
		public decimal FurtherDis
		{
			get
			{
				return this._FurtherDis;
			}
			set
			{
				if ((this._FurtherDis != value))
				{
					this._FurtherDis = value;
				}
			}
		}
		
		[Column(Storage="_EstInterest", DbType="Decimal(15,4) NOT NULL")]
		public decimal EstInterest
		{
			get
			{
				return this._EstInterest;
			}
			set
			{
				if ((this._EstInterest != value))
				{
					this._EstInterest = value;
				}
			}
		}
		
		[Column(Storage="_BankCharge", DbType="Decimal(15,4) NOT NULL")]
		public decimal BankCharge
		{
			get
			{
				return this._BankCharge;
			}
			set
			{
				if ((this._BankCharge != value))
				{
					this._BankCharge = value;
				}
			}
		}
		
		[Column(Storage="_StockInterest", DbType="Decimal(15,4) NOT NULL")]
		public decimal StockInterest
		{
			get
			{
				return this._StockInterest;
			}
			set
			{
				if ((this._StockInterest != value))
				{
					this._StockInterest = value;
				}
			}
		}
		
		[Column(Storage="_Transportation", DbType="Decimal(15,4) NOT NULL")]
		public decimal Transportation
		{
			get
			{
				return this._Transportation;
			}
			set
			{
				if ((this._Transportation != value))
				{
					this._Transportation = value;
				}
			}
		}
		
		[Column(Storage="_InlandForwarderHandling", DbType="Decimal(15,4) NOT NULL")]
		public decimal InlandForwarderHandling
		{
			get
			{
				return this._InlandForwarderHandling;
			}
			set
			{
				if ((this._InlandForwarderHandling != value))
				{
					this._InlandForwarderHandling = value;
				}
			}
		}
		
		[Column(Storage="_InlandTransportation", DbType="Decimal(15,4) NOT NULL")]
		public decimal InlandTransportation
		{
			get
			{
				return this._InlandTransportation;
			}
			set
			{
				if ((this._InlandTransportation != value))
				{
					this._InlandTransportation = value;
				}
			}
		}
		
		[Column(Storage="_TransitLoadingTransportation", DbType="Decimal(15,4) NOT NULL")]
		public decimal TransitLoadingTransportation
		{
			get
			{
				return this._TransitLoadingTransportation;
			}
			set
			{
				if ((this._TransitLoadingTransportation != value))
				{
					this._TransitLoadingTransportation = value;
				}
			}
		}
		
		[Column(Storage="_Frieght", DbType="Decimal(15,4) NOT NULL")]
		public decimal Frieght
		{
			get
			{
				return this._Frieght;
			}
			set
			{
				if ((this._Frieght != value))
				{
					this._Frieght = value;
				}
			}
		}
		
		[Column(Storage="_Frieght_Air", DbType="Decimal(15,4) NOT NULL")]
		public decimal Frieght_Air
		{
			get
			{
				return this._Frieght_Air;
			}
			set
			{
				if ((this._Frieght_Air != value))
				{
					this._Frieght_Air = value;
				}
			}
		}
		
		[Column(Storage="_Frieght_Boat", DbType="Decimal(15,4) NOT NULL")]
		public decimal Frieght_Boat
		{
			get
			{
				return this._Frieght_Boat;
			}
			set
			{
				if ((this._Frieght_Boat != value))
				{
					this._Frieght_Boat = value;
				}
			}
		}
		
		[Column(Storage="_AdditionalFrieght", DbType="Decimal(15,4) NOT NULL")]
		public decimal AdditionalFrieght
		{
			get
			{
				return this._AdditionalFrieght;
			}
			set
			{
				if ((this._AdditionalFrieght != value))
				{
					this._AdditionalFrieght = value;
				}
			}
		}
		
		[Column(Storage="_SubCharge", DbType="Decimal(15,4) NOT NULL")]
		public decimal SubCharge
		{
			get
			{
				return this._SubCharge;
			}
			set
			{
				if ((this._SubCharge != value))
				{
					this._SubCharge = value;
				}
			}
		}
		
		[Column(Storage="_DeliveryTerm", DbType="VarChar(500)")]
		public string DeliveryTerm
		{
			get
			{
				return this._DeliveryTerm;
			}
			set
			{
				if ((this._DeliveryTerm != value))
				{
					this._DeliveryTerm = value;
				}
			}
		}
		
		[Column(Storage="_SupplierUOM", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SupplierUOM
		{
			get
			{
				return this._SupplierUOM;
			}
			set
			{
				if ((this._SupplierUOM != value))
				{
					this._SupplierUOM = value;
				}
			}
		}
		
		[Column(Storage="_ShipMode", DbType="VarChar(36) NOT NULL", CanBeNull=false)]
		public string ShipMode
		{
			get
			{
				return this._ShipMode;
			}
			set
			{
				if ((this._ShipMode != value))
				{
					this._ShipMode = value;
				}
			}
		}
		
		[Column(Storage="_DischargePort", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DischargePort
		{
			get
			{
				return this._DischargePort;
			}
			set
			{
				if ((this._DischargePort != value))
				{
					this._DischargePort = value;
				}
			}
		}
		
		[Column(Storage="_DeliveryMode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DeliveryMode
		{
			get
			{
				return this._DeliveryMode;
			}
			set
			{
				if ((this._DeliveryMode != value))
				{
					this._DeliveryMode = value;
				}
			}
		}
		
		[Column(Storage="_TransitTimeTruck", DbType="Decimal(15,4) NOT NULL")]
		public decimal TransitTimeTruck
		{
			get
			{
				return this._TransitTimeTruck;
			}
			set
			{
				if ((this._TransitTimeTruck != value))
				{
					this._TransitTimeTruck = value;
				}
			}
		}
		
		[Column(Storage="_TransitTimeAir", DbType="Decimal(15,4) NOT NULL")]
		public decimal TransitTimeAir
		{
			get
			{
				return this._TransitTimeAir;
			}
			set
			{
				if ((this._TransitTimeAir != value))
				{
					this._TransitTimeAir = value;
				}
			}
		}
		
		[Column(Storage="_TransitTimeBoat", DbType="Decimal(15,4) NOT NULL")]
		public decimal TransitTimeBoat
		{
			get
			{
				return this._TransitTimeBoat;
			}
			set
			{
				if ((this._TransitTimeBoat != value))
				{
					this._TransitTimeBoat = value;
				}
			}
		}
		
		[Column(Storage="_MaterialGroup", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MaterialGroup
		{
			get
			{
				return this._MaterialGroup;
			}
			set
			{
				if ((this._MaterialGroup != value))
				{
					this._MaterialGroup = value;
				}
			}
		}
		
		[Column(Storage="_PaymentTermsType", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		public string PaymentTermsType
		{
			get
			{
				return this._PaymentTermsType;
			}
			set
			{
				if ((this._PaymentTermsType != value))
				{
					this._PaymentTermsType = value;
				}
			}
		}
		
		[Column(Storage="_PaymentMethod", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string PaymentMethod
		{
			get
			{
				return this._PaymentMethod;
			}
			set
			{
				if ((this._PaymentMethod != value))
				{
					this._PaymentMethod = value;
				}
			}
		}
		
		[Column(Storage="_ReceivingAddress", DbType="VarChar(3) NOT NULL", CanBeNull=false)]
		public string ReceivingAddress
		{
			get
			{
				return this._ReceivingAddress;
			}
			set
			{
				if ((this._ReceivingAddress != value))
				{
					this._ReceivingAddress = value;
				}
			}
		}
		
		[Column(Storage="_DeliveryAddress", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string DeliveryAddress
		{
			get
			{
				return this._DeliveryAddress;
			}
			set
			{
				if ((this._DeliveryAddress != value))
				{
					this._DeliveryAddress = value;
				}
			}
		}
		
		[Column(Storage="_ETADate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ETADate
		{
			get
			{
				return this._ETADate;
			}
			set
			{
				if ((this._ETADate != value))
				{
					this._ETADate = value;
				}
			}
		}
		
		[Column(Storage="_Specification", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Specification
		{
			get
			{
				return this._Specification;
			}
			set
			{
				if ((this._Specification != value))
				{
					this._Specification = value;
				}
			}
		}
		
		[Column(Storage="_AdditionalReason", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string AdditionalReason
		{
			get
			{
				return this._AdditionalReason;
			}
			set
			{
				if ((this._AdditionalReason != value))
				{
					this._AdditionalReason = value;
				}
			}
		}
		
		[Column(Storage="_AdditionalCost", DbType="Decimal(15,2) NOT NULL")]
		public decimal AdditionalCost
		{
			get
			{
				return this._AdditionalCost;
			}
			set
			{
				if ((this._AdditionalCost != value))
				{
					this._AdditionalCost = value;
				}
			}
		}
		
		[Column(Storage="_Commodity", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Commodity
		{
			get
			{
				return this._Commodity;
			}
			set
			{
				if ((this._Commodity != value))
				{
					this._Commodity = value;
				}
			}
		}
		
		[Column(Storage="_SizeCode", DbType="VarChar(3) NOT NULL", CanBeNull=false)]
		public string SizeCode
		{
			get
			{
				return this._SizeCode;
			}
			set
			{
				if ((this._SizeCode != value))
				{
					this._SizeCode = value;
				}
			}
		}
		
		[Column(Storage="_IntelSize", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string IntelSize
		{
			get
			{
				return this._IntelSize;
			}
			set
			{
				if ((this._IntelSize != value))
				{
					this._IntelSize = value;
				}
			}
		}
		
		[Column(Storage="_FitCode", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		public string FitCode
		{
			get
			{
				return this._FitCode;
			}
			set
			{
				if ((this._FitCode != value))
				{
					this._FitCode = value;
				}
			}
		}
		
		[Column(Storage="_Difference", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Difference
		{
			get
			{
				return this._Difference;
			}
			set
			{
				if ((this._Difference != value))
				{
					this._Difference = value;
				}
			}
		}
		
		[Column(Storage="_OvershipQty", DbType="Int NOT NULL")]
		public int OvershipQty
		{
			get
			{
				return this._OvershipQty;
			}
			set
			{
				if ((this._OvershipQty != value))
				{
					this._OvershipQty = value;
				}
			}
		}
		
		[Column(Storage="_SuppTotalReceivedQty", DbType="Float")]
		public System.Nullable<double> SuppTotalReceivedQty
		{
			get
			{
				return this._SuppTotalReceivedQty;
			}
			set
			{
				if ((this._SuppTotalReceivedQty != value))
				{
					this._SuppTotalReceivedQty = value;
				}
			}
		}
		
		[Column(Storage="_Customer", DbType="VarChar(8)")]
		public string Customer
		{
			get
			{
				return this._Customer;
			}
			set
			{
				if ((this._Customer != value))
				{
					this._Customer = value;
				}
			}
		}
		
		[Column(Storage="_TruePO_IsOutStanding", DbType="Bit")]
		public System.Nullable<bool> TruePO_IsOutStanding
		{
			get
			{
				return this._TruePO_IsOutStanding;
			}
			set
			{
				if ((this._TruePO_IsOutStanding != value))
				{
					this._TruePO_IsOutStanding = value;
				}
			}
		}
		
		[Column(Storage="_PO_IsOutStanding", DbType="Bit")]
		public System.Nullable<bool> PO_IsOutStanding
		{
			get
			{
				return this._PO_IsOutStanding;
			}
			set
			{
				if ((this._PO_IsOutStanding != value))
				{
					this._PO_IsOutStanding = value;
				}
			}
		}
		
		[Column(Storage="_SKU_IsOutStanding", DbType="Bit")]
		public System.Nullable<bool> SKU_IsOutStanding
		{
			get
			{
				return this._SKU_IsOutStanding;
			}
			set
			{
				if ((this._SKU_IsOutStanding != value))
				{
					this._SKU_IsOutStanding = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.View_Supplier")]
	public partial class View_Supplier
	{
		
		private string _SUPPLIER;
		
		private string _SUPPLIERNAME;
		
		public View_Supplier()
		{
		}
		
		[Column(Storage="_SUPPLIER", DbType="Char(8) NOT NULL", CanBeNull=false)]
		public string SUPPLIER
		{
			get
			{
				return this._SUPPLIER;
			}
			set
			{
				if ((this._SUPPLIER != value))
				{
					this._SUPPLIER = value;
				}
			}
		}
		
		[Column(Storage="_SUPPLIERNAME", DbType="Char(35) NOT NULL", CanBeNull=false)]
		public string SUPPLIERNAME
		{
			get
			{
				return this._SUPPLIERNAME;
			}
			set
			{
				if ((this._SUPPLIERNAME != value))
				{
					this._SUPPLIERNAME = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.POWireBoneMatrix")]
	public partial class POWireBoneMatrix : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Company;
		
		private string _PONO;
		
		private int _Version;
		
		private int _AmendmentNo;
		
		private int _OrderLine;
		
		private string _SKU;
		
		private int _Seq;
		
		private string _Size;
		
		private string _Cup;
		
		private System.Nullable<decimal> _Qty;
		
		private System.Nullable<int> _VersionFlag;
		
		private string _Remark;
		
		private EntityRef<POColorSizeDetail> _POColorSizeDetail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnPONOChanging(string value);
    partial void OnPONOChanged();
    partial void OnVersionChanging(int value);
    partial void OnVersionChanged();
    partial void OnAmendmentNoChanging(int value);
    partial void OnAmendmentNoChanged();
    partial void OnOrderLineChanging(int value);
    partial void OnOrderLineChanged();
    partial void OnSKUChanging(string value);
    partial void OnSKUChanged();
    partial void OnSeqChanging(int value);
    partial void OnSeqChanged();
    partial void OnSizeChanging(string value);
    partial void OnSizeChanged();
    partial void OnCupChanging(string value);
    partial void OnCupChanged();
    partial void OnQtyChanging(System.Nullable<decimal> value);
    partial void OnQtyChanged();
    partial void OnVersionFlagChanging(System.Nullable<int> value);
    partial void OnVersionFlagChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public POWireBoneMatrix()
		{
			this._POColorSizeDetail = default(EntityRef<POColorSizeDetail>);
			OnCreated();
		}
		
		[Column(Storage="_Company", DbType="VarChar(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					if (this._POColorSizeDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[Column(Storage="_PONO", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PONO
		{
			get
			{
				return this._PONO;
			}
			set
			{
				if ((this._PONO != value))
				{
					if (this._POColorSizeDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPONOChanging(value);
					this.SendPropertyChanging();
					this._PONO = value;
					this.SendPropertyChanged("PONO");
					this.OnPONOChanged();
				}
			}
		}
		
		[Column(Storage="_Version", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					if (this._POColorSizeDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[Column(Storage="_AmendmentNo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AmendmentNo
		{
			get
			{
				return this._AmendmentNo;
			}
			set
			{
				if ((this._AmendmentNo != value))
				{
					if (this._POColorSizeDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAmendmentNoChanging(value);
					this.SendPropertyChanging();
					this._AmendmentNo = value;
					this.SendPropertyChanged("AmendmentNo");
					this.OnAmendmentNoChanged();
				}
			}
		}
		
		[Column(Storage="_OrderLine", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int OrderLine
		{
			get
			{
				return this._OrderLine;
			}
			set
			{
				if ((this._OrderLine != value))
				{
					if (this._POColorSizeDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderLineChanging(value);
					this.SendPropertyChanging();
					this._OrderLine = value;
					this.SendPropertyChanged("OrderLine");
					this.OnOrderLineChanged();
				}
			}
		}
		
		[Column(Storage="_SKU", DbType="VarChar(32) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SKU
		{
			get
			{
				return this._SKU;
			}
			set
			{
				if ((this._SKU != value))
				{
					if (this._POColorSizeDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSKUChanging(value);
					this.SendPropertyChanging();
					this._SKU = value;
					this.SendPropertyChanged("SKU");
					this.OnSKUChanged();
				}
			}
		}
		
		[Column(Storage="_Seq", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Seq
		{
			get
			{
				return this._Seq;
			}
			set
			{
				if ((this._Seq != value))
				{
					this.OnSeqChanging(value);
					this.SendPropertyChanging();
					this._Seq = value;
					this.SendPropertyChanged("Seq");
					this.OnSeqChanged();
				}
			}
		}
		
		[Column(Storage="_Size", DbType="NVarChar(50)")]
		public string Size
		{
			get
			{
				return this._Size;
			}
			set
			{
				if ((this._Size != value))
				{
					this.OnSizeChanging(value);
					this.SendPropertyChanging();
					this._Size = value;
					this.SendPropertyChanged("Size");
					this.OnSizeChanged();
				}
			}
		}
		
		[Column(Storage="_Cup", DbType="NChar(10)")]
		public string Cup
		{
			get
			{
				return this._Cup;
			}
			set
			{
				if ((this._Cup != value))
				{
					this.OnCupChanging(value);
					this.SendPropertyChanging();
					this._Cup = value;
					this.SendPropertyChanged("Cup");
					this.OnCupChanged();
				}
			}
		}
		
		[Column(Storage="_Qty", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> Qty
		{
			get
			{
				return this._Qty;
			}
			set
			{
				if ((this._Qty != value))
				{
					this.OnQtyChanging(value);
					this.SendPropertyChanging();
					this._Qty = value;
					this.SendPropertyChanged("Qty");
					this.OnQtyChanged();
				}
			}
		}
		
		[Column(Storage="_VersionFlag", DbType="Int")]
		public System.Nullable<int> VersionFlag
		{
			get
			{
				return this._VersionFlag;
			}
			set
			{
				if ((this._VersionFlag != value))
				{
					this.OnVersionFlagChanging(value);
					this.SendPropertyChanging();
					this._VersionFlag = value;
					this.SendPropertyChanged("VersionFlag");
					this.OnVersionFlagChanged();
				}
			}
		}
		
		[Column(Storage="_Remark", DbType="NVarChar(3000)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[Association(Name="POColorSizeDetail_POWireBoneMatrix", Storage="_POColorSizeDetail", ThisKey="Company,PONO,Version,AmendmentNo,OrderLine,SKU", OtherKey="Company,PONO,Version,AmendmentNo,OrderLine,SKU", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public POColorSizeDetail POColorSizeDetail
		{
			get
			{
				return this._POColorSizeDetail.Entity;
			}
			set
			{
				POColorSizeDetail previousValue = this._POColorSizeDetail.Entity;
				if (((previousValue != value) 
							|| (this._POColorSizeDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._POColorSizeDetail.Entity = null;
						previousValue.POWireBoneMatrixes.Remove(this);
					}
					this._POColorSizeDetail.Entity = value;
					if ((value != null))
					{
						value.POWireBoneMatrixes.Add(this);
						this._Company = value.Company;
						this._PONO = value.PONO;
						this._Version = value.Version;
						this._AmendmentNo = value.AmendmentNo;
						this._OrderLine = value.OrderLine;
						this._SKU = value.SKU;
					}
					else
					{
						this._Company = default(string);
						this._PONO = default(string);
						this._Version = default(int);
						this._AmendmentNo = default(int);
						this._OrderLine = default(int);
						this._SKU = default(string);
					}
					this.SendPropertyChanged("POColorSizeDetail");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.CustomerSizeCup")]
	public partial class CustomerSizeCup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SizeCode;
		
		private string _CupCode;
		
		private string _Customer;
		
		private string _CustSizeCode;
		
		private string _CustCupCode;
		
		private string _Remark;
		
		private EntityRef<SupplierSizeCup> _SupplierSizeCup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSizeCodeChanging(string value);
    partial void OnSizeCodeChanged();
    partial void OnCupCodeChanging(string value);
    partial void OnCupCodeChanged();
    partial void OnCustomerChanging(string value);
    partial void OnCustomerChanged();
    partial void OnCustSizeCodeChanging(string value);
    partial void OnCustSizeCodeChanged();
    partial void OnCustCupCodeChanging(string value);
    partial void OnCustCupCodeChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public CustomerSizeCup()
		{
			this._SupplierSizeCup = default(EntityRef<SupplierSizeCup>);
			OnCreated();
		}
		
		[Column(Storage="_SizeCode", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SizeCode
		{
			get
			{
				return this._SizeCode;
			}
			set
			{
				if ((this._SizeCode != value))
				{
					if (this._SupplierSizeCup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSizeCodeChanging(value);
					this.SendPropertyChanging();
					this._SizeCode = value;
					this.SendPropertyChanged("SizeCode");
					this.OnSizeCodeChanged();
				}
			}
		}
		
		[Column(Storage="_CupCode", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CupCode
		{
			get
			{
				return this._CupCode;
			}
			set
			{
				if ((this._CupCode != value))
				{
					if (this._SupplierSizeCup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCupCodeChanging(value);
					this.SendPropertyChanging();
					this._CupCode = value;
					this.SendPropertyChanged("CupCode");
					this.OnCupCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Customer", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Customer
		{
			get
			{
				return this._Customer;
			}
			set
			{
				if ((this._Customer != value))
				{
					this.OnCustomerChanging(value);
					this.SendPropertyChanging();
					this._Customer = value;
					this.SendPropertyChanged("Customer");
					this.OnCustomerChanged();
				}
			}
		}
		
		[Column(Storage="_CustSizeCode", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CustSizeCode
		{
			get
			{
				return this._CustSizeCode;
			}
			set
			{
				if ((this._CustSizeCode != value))
				{
					this.OnCustSizeCodeChanging(value);
					this.SendPropertyChanging();
					this._CustSizeCode = value;
					this.SendPropertyChanged("CustSizeCode");
					this.OnCustSizeCodeChanged();
				}
			}
		}
		
		[Column(Storage="_CustCupCode", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CustCupCode
		{
			get
			{
				return this._CustCupCode;
			}
			set
			{
				if ((this._CustCupCode != value))
				{
					this.OnCustCupCodeChanging(value);
					this.SendPropertyChanging();
					this._CustCupCode = value;
					this.SendPropertyChanged("CustCupCode");
					this.OnCustCupCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Remark", DbType="NVarChar(2000)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[Association(Name="SupplierSizeCup_CustomerSizeCup", Storage="_SupplierSizeCup", ThisKey="SizeCode,CupCode", OtherKey="SizeCode,CupCode", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public SupplierSizeCup SupplierSizeCup
		{
			get
			{
				return this._SupplierSizeCup.Entity;
			}
			set
			{
				SupplierSizeCup previousValue = this._SupplierSizeCup.Entity;
				if (((previousValue != value) 
							|| (this._SupplierSizeCup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SupplierSizeCup.Entity = null;
						previousValue.CustomerSizeCups.Remove(this);
					}
					this._SupplierSizeCup.Entity = value;
					if ((value != null))
					{
						value.CustomerSizeCups.Add(this);
						this._SizeCode = value.SizeCode;
						this._CupCode = value.CupCode;
					}
					else
					{
						this._SizeCode = default(string);
						this._CupCode = default(string);
					}
					this.SendPropertyChanged("SupplierSizeCup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.SupplierSizeCup")]
	public partial class SupplierSizeCup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SizeCode;
		
		private string _CupCode;
		
		private string _Remark;
		
		private EntitySet<CustomerSizeCup> _CustomerSizeCups;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSizeCodeChanging(string value);
    partial void OnSizeCodeChanged();
    partial void OnCupCodeChanging(string value);
    partial void OnCupCodeChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public SupplierSizeCup()
		{
			this._CustomerSizeCups = new EntitySet<CustomerSizeCup>(new Action<CustomerSizeCup>(this.attach_CustomerSizeCups), new Action<CustomerSizeCup>(this.detach_CustomerSizeCups));
			OnCreated();
		}
		
		[Column(Storage="_SizeCode", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SizeCode
		{
			get
			{
				return this._SizeCode;
			}
			set
			{
				if ((this._SizeCode != value))
				{
					this.OnSizeCodeChanging(value);
					this.SendPropertyChanging();
					this._SizeCode = value;
					this.SendPropertyChanged("SizeCode");
					this.OnSizeCodeChanged();
				}
			}
		}
		
		[Column(Storage="_CupCode", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CupCode
		{
			get
			{
				return this._CupCode;
			}
			set
			{
				if ((this._CupCode != value))
				{
					this.OnCupCodeChanging(value);
					this.SendPropertyChanging();
					this._CupCode = value;
					this.SendPropertyChanged("CupCode");
					this.OnCupCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Remark", DbType="NVarChar(2000)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[Association(Name="SupplierSizeCup_CustomerSizeCup", Storage="_CustomerSizeCups", ThisKey="SizeCode,CupCode", OtherKey="SizeCode,CupCode")]
		public EntitySet<CustomerSizeCup> CustomerSizeCups
		{
			get
			{
				return this._CustomerSizeCups;
			}
			set
			{
				this._CustomerSizeCups.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CustomerSizeCups(CustomerSizeCup entity)
		{
			this.SendPropertyChanging();
			entity.SupplierSizeCup = this;
		}
		
		private void detach_CustomerSizeCups(CustomerSizeCup entity)
		{
			this.SendPropertyChanging();
			entity.SupplierSizeCup = null;
		}
	}
	
	[Table(Name="dbo.SupplierCustomerSizeCup")]
	public partial class SupplierCustomerSizeCup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _FID;
		
		private string _SuppSize;
		
		private string _SuppCup;
		
		private string _Customer;
		
		private string _CustStyleNo;
		
		private string _CustSize;
		
		private string _CustCup;
		
		private string _PHStyleNo;
		
		private string _Remark;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFIDChanging(System.Guid value);
    partial void OnFIDChanged();
    partial void OnSuppSizeChanging(string value);
    partial void OnSuppSizeChanged();
    partial void OnSuppCupChanging(string value);
    partial void OnSuppCupChanged();
    partial void OnCustomerChanging(string value);
    partial void OnCustomerChanged();
    partial void OnCustStyleNoChanging(string value);
    partial void OnCustStyleNoChanged();
    partial void OnCustSizeChanging(string value);
    partial void OnCustSizeChanged();
    partial void OnCustCupChanging(string value);
    partial void OnCustCupChanged();
    partial void OnPHStyleNoChanging(string value);
    partial void OnPHStyleNoChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public SupplierCustomerSizeCup()
		{
			OnCreated();
		}
		
		[Column(Storage="_FID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid FID
		{
			get
			{
				return this._FID;
			}
			set
			{
				if ((this._FID != value))
				{
					this.OnFIDChanging(value);
					this.SendPropertyChanging();
					this._FID = value;
					this.SendPropertyChanged("FID");
					this.OnFIDChanged();
				}
			}
		}
		
		[Column(Storage="_SuppSize", DbType="VarChar(50)")]
		public string SuppSize
		{
			get
			{
				return this._SuppSize;
			}
			set
			{
				if ((this._SuppSize != value))
				{
					this.OnSuppSizeChanging(value);
					this.SendPropertyChanging();
					this._SuppSize = value;
					this.SendPropertyChanged("SuppSize");
					this.OnSuppSizeChanged();
				}
			}
		}
		
		[Column(Storage="_SuppCup", DbType="VarChar(50)")]
		public string SuppCup
		{
			get
			{
				return this._SuppCup;
			}
			set
			{
				if ((this._SuppCup != value))
				{
					this.OnSuppCupChanging(value);
					this.SendPropertyChanging();
					this._SuppCup = value;
					this.SendPropertyChanged("SuppCup");
					this.OnSuppCupChanged();
				}
			}
		}
		
		[Column(Storage="_Customer", DbType="VarChar(50)")]
		public string Customer
		{
			get
			{
				return this._Customer;
			}
			set
			{
				if ((this._Customer != value))
				{
					this.OnCustomerChanging(value);
					this.SendPropertyChanging();
					this._Customer = value;
					this.SendPropertyChanged("Customer");
					this.OnCustomerChanged();
				}
			}
		}
		
		[Column(Storage="_CustStyleNo", DbType="VarChar(50)")]
		public string CustStyleNo
		{
			get
			{
				return this._CustStyleNo;
			}
			set
			{
				if ((this._CustStyleNo != value))
				{
					this.OnCustStyleNoChanging(value);
					this.SendPropertyChanging();
					this._CustStyleNo = value;
					this.SendPropertyChanged("CustStyleNo");
					this.OnCustStyleNoChanged();
				}
			}
		}
		
		[Column(Storage="_CustSize", DbType="VarChar(50)")]
		public string CustSize
		{
			get
			{
				return this._CustSize;
			}
			set
			{
				if ((this._CustSize != value))
				{
					this.OnCustSizeChanging(value);
					this.SendPropertyChanging();
					this._CustSize = value;
					this.SendPropertyChanged("CustSize");
					this.OnCustSizeChanged();
				}
			}
		}
		
		[Column(Storage="_CustCup", DbType="VarChar(50)")]
		public string CustCup
		{
			get
			{
				return this._CustCup;
			}
			set
			{
				if ((this._CustCup != value))
				{
					this.OnCustCupChanging(value);
					this.SendPropertyChanging();
					this._CustCup = value;
					this.SendPropertyChanged("CustCup");
					this.OnCustCupChanged();
				}
			}
		}
		
		[Column(Storage="_PHStyleNo", DbType="VarChar(50)")]
		public string PHStyleNo
		{
			get
			{
				return this._PHStyleNo;
			}
			set
			{
				if ((this._PHStyleNo != value))
				{
					this.OnPHStyleNoChanging(value);
					this.SendPropertyChanging();
					this._PHStyleNo = value;
					this.SendPropertyChanged("PHStyleNo");
					this.OnPHStyleNoChanged();
				}
			}
		}
		
		[Column(Storage="_Remark", DbType="NVarChar(1000)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.View_POPC_PUR")]
	public partial class View_POPC_PUR
	{
		
		private int _Version;
		
		private int _AmendmentNo;
		
		private string _PONO;
		
		private string _ClassCode;
		
		private string _SKU;
		
		private decimal _Qty;
		
		private string _LC;
		
		private string _Remark;
		
		private double _Rate;
		
		private string _Factory;
		
		private decimal _TotalReceivedQty;
		
		private int _Leadtime;
		
		private string _Company;
		
		private int _OrderLine;
		
		private string _ItemCode;
		
		private string _ColorCode;
		
		private System.Nullable<System.DateTime> _OrderDate;
		
		private string _ProjectNo;
		
		private string _Supplier;
		
		private System.Nullable<System.DateTime> _ShipmentDate;
		
		private string _ColorShade;
		
		private decimal _PHOutstandingQty;
		
		private string _PurchaseOfficer;
		
		private string _SupplierReference;
		
		private double _ConversionFactor;
		
		private decimal _Price;
		
		private System.Nullable<System.DateTime> _ConfirmETADate;
		
		private System.Nullable<System.DateTime> _HDOETA;
		
		private string _SupplierUom;
		
		private string _Currency;
		
		private string _DSIZ15;
		
		private string _Dept;
		
		private System.Nullable<System.DateTime> _WOStartDate;
		
		private int _OrderClass;
		
		private string _PHUom;
		
		private string _WOStatus;
		
		private string _CustOrderNo;
		
		private string _CustStyleNo;
		
		private System.Nullable<System.DateTime> _GoodsInwardsDate;
		
		private System.Nullable<decimal> _Tolerance;
		
		private string _OvershipMemo;
		
		private string _WorkOrderNo;
		
		private string _MaterialType;
		
		private string _CustomerColorDesc;
		
		private string _qc;
		
		private string _QN;
		
		private int _ReturnPOQty;
		
		private string _RWO;
		
		private System.Nullable<bool> _havePDF;
		
		private string _SupplierName;
		
		private string _ShipMode;
		
		private string _PaymentMethod;
		
		private System.Nullable<System.DateTime> _ETADate;
		
		private string _SizeCode;
		
		private string _IntelSize;
		
		private string _FitCode;
		
		private System.Nullable<int> _Con_Recount;
		
		private System.Nullable<System.DateTime> _Con_ConfirmDate;
		
		private System.Nullable<int> _Bul_Recount;
		
		private System.Nullable<System.DateTime> _Bul_OpDate;
		
		private string _Bul_Status;
		
		private string _Bul_SubmitNo;
		
		private System.Nullable<System.DateTime> _Bul_ReceiveBulkSampleDate;
		
		private System.Nullable<int> _Co1_Recount;
		
		private System.Nullable<System.DateTime> _Col_OpDate;
		
		private System.Nullable<int> _Dip_Recount;
		
		private System.Nullable<System.DateTime> _Dip_Opdate;
		
		private string _Dip_Status;
		
		private System.Nullable<int> _Tes_Recount;
		
		private System.Nullable<System.DateTime> _Tes_Opdate;
		
		private string _Tes_Status;
		
		private System.Nullable<decimal> _OvershipQty;
		
		private System.Nullable<decimal> _OvershipPercent;
		
		private System.Nullable<int> _DifferenceDate;
		
		private System.Nullable<double> _AMount;
		
		private System.Nullable<double> _SuppQTY;
		
		private System.Nullable<double> _SuppOSQTY;
		
		private string _NewVersion;
		
		private System.Nullable<bool> _IsOutStanding;
		
		private string _IsOutStandingDesc;
		
		private string _OrderClassString;
		
		private string _Customer;
		
		private string _MaterialGroup;
		
		private System.Nullable<double> _Qty1;
		
		private System.Nullable<double> _Percent1;
		
		private System.Nullable<System.DateTime> _FtyDate1;
		
		private string _Title1;
		
		private System.Nullable<double> _Qty2;
		
		private System.Nullable<double> _Percent2;
		
		private System.Nullable<System.DateTime> _FtyDate2;
		
		private string _Title2;
		
		private System.Nullable<double> _Qty3;
		
		private System.Nullable<double> _Percent3;
		
		private System.Nullable<System.DateTime> _FtyDate3;
		
		private string _Title3;
		
		private System.Nullable<double> _Qty4;
		
		private System.Nullable<double> _Percent4;
		
		private System.Nullable<System.DateTime> _FtyDate4;
		
		private string _Title4;
		
		private bool _OpenToProject;
		
		private string _Email;
		
		private string _Incoterms;
		
		private string _EndCustCode;
		
		private string _LocationOfSuppFactory;
		
		private string _TransitPoint;
		
		private string _EndPoint;
		
		private string _EndPointAddress;
		
		private System.Nullable<int> _TransitFrame;
		
		private System.Nullable<int> _IndividualAssociate;
		
		private string _BuyerQtyDimension;
		
		private string _SuppQtyDimension;
		
		private string _Dimension;
		
		private string _SuppSizeCode;
		
		private string _SuppFitCode;
		
		private string _GarmentColor;
		
		private System.Nullable<bool> _MultiPrice;
		
		private System.Nullable<bool> _PointOfOrigin;
		
		private System.Nullable<bool> _PlaceOfOrigin;
		
		private System.Nullable<bool> _PortOfOrigin;
		
		private System.Nullable<bool> _PortOfDestination;
		
		private System.Nullable<bool> _PlaceOfDestination;
		
		private System.Nullable<bool> _PointOfDestination;
		
		private System.Nullable<System.DateTime> _FactoryWorkShipCompleted;
		
		private System.Nullable<int> _TimeFrame2;
		
		public View_POPC_PUR()
		{
		}
		
		[Column(Storage="_Version", DbType="Int NOT NULL")]
		public int Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this._Version = value;
				}
			}
		}
		
		[Column(Storage="_AmendmentNo", DbType="Int NOT NULL")]
		public int AmendmentNo
		{
			get
			{
				return this._AmendmentNo;
			}
			set
			{
				if ((this._AmendmentNo != value))
				{
					this._AmendmentNo = value;
				}
			}
		}
		
		[Column(Storage="_PONO", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string PONO
		{
			get
			{
				return this._PONO;
			}
			set
			{
				if ((this._PONO != value))
				{
					this._PONO = value;
				}
			}
		}
		
		[Column(Storage="_ClassCode", DbType="NVarChar(5)")]
		public string ClassCode
		{
			get
			{
				return this._ClassCode;
			}
			set
			{
				if ((this._ClassCode != value))
				{
					this._ClassCode = value;
				}
			}
		}
		
		[Column(Storage="_SKU", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
		public string SKU
		{
			get
			{
				return this._SKU;
			}
			set
			{
				if ((this._SKU != value))
				{
					this._SKU = value;
				}
			}
		}
		
		[Column(Storage="_Qty", DbType="Decimal(18,2) NOT NULL")]
		public decimal Qty
		{
			get
			{
				return this._Qty;
			}
			set
			{
				if ((this._Qty != value))
				{
					this._Qty = value;
				}
			}
		}
		
		[Column(Storage="_LC", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string LC
		{
			get
			{
				return this._LC;
			}
			set
			{
				if ((this._LC != value))
				{
					this._LC = value;
				}
			}
		}
		
		[Column(Storage="_Remark", DbType="NVarChar(4000) NOT NULL", CanBeNull=false)]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this._Remark = value;
				}
			}
		}
		
		[Column(Storage="_Rate", DbType="Float NOT NULL")]
		public double Rate
		{
			get
			{
				return this._Rate;
			}
			set
			{
				if ((this._Rate != value))
				{
					this._Rate = value;
				}
			}
		}
		
		[Column(Storage="_Factory", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Factory
		{
			get
			{
				return this._Factory;
			}
			set
			{
				if ((this._Factory != value))
				{
					this._Factory = value;
				}
			}
		}
		
		[Column(Storage="_TotalReceivedQty", DbType="Decimal(18,2) NOT NULL")]
		public decimal TotalReceivedQty
		{
			get
			{
				return this._TotalReceivedQty;
			}
			set
			{
				if ((this._TotalReceivedQty != value))
				{
					this._TotalReceivedQty = value;
				}
			}
		}
		
		[Column(Storage="_Leadtime", DbType="Int NOT NULL")]
		public int Leadtime
		{
			get
			{
				return this._Leadtime;
			}
			set
			{
				if ((this._Leadtime != value))
				{
					this._Leadtime = value;
				}
			}
		}
		
		[Column(Storage="_Company", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this._Company = value;
				}
			}
		}
		
		[Column(Storage="_OrderLine", DbType="Int NOT NULL")]
		public int OrderLine
		{
			get
			{
				return this._OrderLine;
			}
			set
			{
				if ((this._OrderLine != value))
				{
					this._OrderLine = value;
				}
			}
		}
		
		[Column(Storage="_ItemCode", DbType="NVarChar(18) NOT NULL", CanBeNull=false)]
		public string ItemCode
		{
			get
			{
				return this._ItemCode;
			}
			set
			{
				if ((this._ItemCode != value))
				{
					this._ItemCode = value;
				}
			}
		}
		
		[Column(Storage="_ColorCode", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string ColorCode
		{
			get
			{
				return this._ColorCode;
			}
			set
			{
				if ((this._ColorCode != value))
				{
					this._ColorCode = value;
				}
			}
		}
		
		[Column(Storage="_OrderDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> OrderDate
		{
			get
			{
				return this._OrderDate;
			}
			set
			{
				if ((this._OrderDate != value))
				{
					this._OrderDate = value;
				}
			}
		}
		
		[Column(Storage="_ProjectNo", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ProjectNo
		{
			get
			{
				return this._ProjectNo;
			}
			set
			{
				if ((this._ProjectNo != value))
				{
					this._ProjectNo = value;
				}
			}
		}
		
		[Column(Storage="_Supplier", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Supplier
		{
			get
			{
				return this._Supplier;
			}
			set
			{
				if ((this._Supplier != value))
				{
					this._Supplier = value;
				}
			}
		}
		
		[Column(Storage="_ShipmentDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ShipmentDate
		{
			get
			{
				return this._ShipmentDate;
			}
			set
			{
				if ((this._ShipmentDate != value))
				{
					this._ShipmentDate = value;
				}
			}
		}
		
		[Column(Storage="_ColorShade", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ColorShade
		{
			get
			{
				return this._ColorShade;
			}
			set
			{
				if ((this._ColorShade != value))
				{
					this._ColorShade = value;
				}
			}
		}
		
		[Column(Storage="_PHOutstandingQty", DbType="Decimal(18,2) NOT NULL")]
		public decimal PHOutstandingQty
		{
			get
			{
				return this._PHOutstandingQty;
			}
			set
			{
				if ((this._PHOutstandingQty != value))
				{
					this._PHOutstandingQty = value;
				}
			}
		}
		
		[Column(Storage="_PurchaseOfficer", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PurchaseOfficer
		{
			get
			{
				return this._PurchaseOfficer;
			}
			set
			{
				if ((this._PurchaseOfficer != value))
				{
					this._PurchaseOfficer = value;
				}
			}
		}
		
		[Column(Storage="_SupplierReference", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string SupplierReference
		{
			get
			{
				return this._SupplierReference;
			}
			set
			{
				if ((this._SupplierReference != value))
				{
					this._SupplierReference = value;
				}
			}
		}
		
		[Column(Storage="_ConversionFactor", DbType="Float NOT NULL")]
		public double ConversionFactor
		{
			get
			{
				return this._ConversionFactor;
			}
			set
			{
				if ((this._ConversionFactor != value))
				{
					this._ConversionFactor = value;
				}
			}
		}
		
		[Column(Storage="_Price", DbType="Decimal(18,4) NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this._Price = value;
				}
			}
		}
		
		[Column(Storage="_ConfirmETADate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ConfirmETADate
		{
			get
			{
				return this._ConfirmETADate;
			}
			set
			{
				if ((this._ConfirmETADate != value))
				{
					this._ConfirmETADate = value;
				}
			}
		}
		
		[Column(Storage="_HDOETA", DbType="DateTime")]
		public System.Nullable<System.DateTime> HDOETA
		{
			get
			{
				return this._HDOETA;
			}
			set
			{
				if ((this._HDOETA != value))
				{
					this._HDOETA = value;
				}
			}
		}
		
		[Column(Storage="_SupplierUom", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string SupplierUom
		{
			get
			{
				return this._SupplierUom;
			}
			set
			{
				if ((this._SupplierUom != value))
				{
					this._SupplierUom = value;
				}
			}
		}
		
		[Column(Storage="_Currency", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this._Currency = value;
				}
			}
		}
		
		[Column(Storage="_DSIZ15", DbType="VarChar(3) NOT NULL", CanBeNull=false)]
		public string DSIZ15
		{
			get
			{
				return this._DSIZ15;
			}
			set
			{
				if ((this._DSIZ15 != value))
				{
					this._DSIZ15 = value;
				}
			}
		}
		
		[Column(Storage="_Dept", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Dept
		{
			get
			{
				return this._Dept;
			}
			set
			{
				if ((this._Dept != value))
				{
					this._Dept = value;
				}
			}
		}
		
		[Column(Storage="_WOStartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> WOStartDate
		{
			get
			{
				return this._WOStartDate;
			}
			set
			{
				if ((this._WOStartDate != value))
				{
					this._WOStartDate = value;
				}
			}
		}
		
		[Column(Storage="_OrderClass", DbType="Int NOT NULL")]
		public int OrderClass
		{
			get
			{
				return this._OrderClass;
			}
			set
			{
				if ((this._OrderClass != value))
				{
					this._OrderClass = value;
				}
			}
		}
		
		[Column(Storage="_PHUom", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string PHUom
		{
			get
			{
				return this._PHUom;
			}
			set
			{
				if ((this._PHUom != value))
				{
					this._PHUom = value;
				}
			}
		}
		
		[Column(Storage="_WOStatus", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string WOStatus
		{
			get
			{
				return this._WOStatus;
			}
			set
			{
				if ((this._WOStatus != value))
				{
					this._WOStatus = value;
				}
			}
		}
		
		[Column(Storage="_CustOrderNo", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string CustOrderNo
		{
			get
			{
				return this._CustOrderNo;
			}
			set
			{
				if ((this._CustOrderNo != value))
				{
					this._CustOrderNo = value;
				}
			}
		}
		
		[Column(Storage="_CustStyleNo", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string CustStyleNo
		{
			get
			{
				return this._CustStyleNo;
			}
			set
			{
				if ((this._CustStyleNo != value))
				{
					this._CustStyleNo = value;
				}
			}
		}
		
		[Column(Storage="_GoodsInwardsDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> GoodsInwardsDate
		{
			get
			{
				return this._GoodsInwardsDate;
			}
			set
			{
				if ((this._GoodsInwardsDate != value))
				{
					this._GoodsInwardsDate = value;
				}
			}
		}
		
		[Column(Storage="_Tolerance", DbType="Decimal(9,6)")]
		public System.Nullable<decimal> Tolerance
		{
			get
			{
				return this._Tolerance;
			}
			set
			{
				if ((this._Tolerance != value))
				{
					this._Tolerance = value;
				}
			}
		}
		
		[Column(Storage="_OvershipMemo", DbType="NVarChar(400) NOT NULL", CanBeNull=false)]
		public string OvershipMemo
		{
			get
			{
				return this._OvershipMemo;
			}
			set
			{
				if ((this._OvershipMemo != value))
				{
					this._OvershipMemo = value;
				}
			}
		}
		
		[Column(Storage="_WorkOrderNo", DbType="NVarChar(14) NOT NULL", CanBeNull=false)]
		public string WorkOrderNo
		{
			get
			{
				return this._WorkOrderNo;
			}
			set
			{
				if ((this._WorkOrderNo != value))
				{
					this._WorkOrderNo = value;
				}
			}
		}
		
		[Column(Storage="_MaterialType", DbType="NVarChar(3)")]
		public string MaterialType
		{
			get
			{
				return this._MaterialType;
			}
			set
			{
				if ((this._MaterialType != value))
				{
					this._MaterialType = value;
				}
			}
		}
		
		[Column(Storage="_CustomerColorDesc", DbType="VarChar(15)")]
		public string CustomerColorDesc
		{
			get
			{
				return this._CustomerColorDesc;
			}
			set
			{
				if ((this._CustomerColorDesc != value))
				{
					this._CustomerColorDesc = value;
				}
			}
		}
		
		[Column(Storage="_qc", DbType="VarChar(15)")]
		public string qc
		{
			get
			{
				return this._qc;
			}
			set
			{
				if ((this._qc != value))
				{
					this._qc = value;
				}
			}
		}
		
		[Column(Storage="_QN", DbType="VarChar(15)")]
		public string QN
		{
			get
			{
				return this._QN;
			}
			set
			{
				if ((this._QN != value))
				{
					this._QN = value;
				}
			}
		}
		
		[Column(Storage="_ReturnPOQty", DbType="Int NOT NULL")]
		public int ReturnPOQty
		{
			get
			{
				return this._ReturnPOQty;
			}
			set
			{
				if ((this._ReturnPOQty != value))
				{
					this._ReturnPOQty = value;
				}
			}
		}
		
		[Column(Storage="_RWO", DbType="VarChar(15)")]
		public string RWO
		{
			get
			{
				return this._RWO;
			}
			set
			{
				if ((this._RWO != value))
				{
					this._RWO = value;
				}
			}
		}
		
		[Column(Storage="_havePDF", DbType="Bit")]
		public System.Nullable<bool> havePDF
		{
			get
			{
				return this._havePDF;
			}
			set
			{
				if ((this._havePDF != value))
				{
					this._havePDF = value;
				}
			}
		}
		
		[Column(Storage="_SupplierName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string SupplierName
		{
			get
			{
				return this._SupplierName;
			}
			set
			{
				if ((this._SupplierName != value))
				{
					this._SupplierName = value;
				}
			}
		}
		
		[Column(Storage="_ShipMode", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ShipMode
		{
			get
			{
				return this._ShipMode;
			}
			set
			{
				if ((this._ShipMode != value))
				{
					this._ShipMode = value;
				}
			}
		}
		
		[Column(Storage="_PaymentMethod", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string PaymentMethod
		{
			get
			{
				return this._PaymentMethod;
			}
			set
			{
				if ((this._PaymentMethod != value))
				{
					this._PaymentMethod = value;
				}
			}
		}
		
		[Column(Storage="_ETADate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ETADate
		{
			get
			{
				return this._ETADate;
			}
			set
			{
				if ((this._ETADate != value))
				{
					this._ETADate = value;
				}
			}
		}
		
		[Column(Storage="_SizeCode", DbType="NVarChar(60) NOT NULL", CanBeNull=false)]
		public string SizeCode
		{
			get
			{
				return this._SizeCode;
			}
			set
			{
				if ((this._SizeCode != value))
				{
					this._SizeCode = value;
				}
			}
		}
		
		[Column(Storage="_IntelSize", DbType="NVarChar(60) NOT NULL", CanBeNull=false)]
		public string IntelSize
		{
			get
			{
				return this._IntelSize;
			}
			set
			{
				if ((this._IntelSize != value))
				{
					this._IntelSize = value;
				}
			}
		}
		
		[Column(Storage="_FitCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string FitCode
		{
			get
			{
				return this._FitCode;
			}
			set
			{
				if ((this._FitCode != value))
				{
					this._FitCode = value;
				}
			}
		}
		
		[Column(Storage="_Con_Recount", DbType="Int")]
		public System.Nullable<int> Con_Recount
		{
			get
			{
				return this._Con_Recount;
			}
			set
			{
				if ((this._Con_Recount != value))
				{
					this._Con_Recount = value;
				}
			}
		}
		
		[Column(Storage="_Con_ConfirmDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> Con_ConfirmDate
		{
			get
			{
				return this._Con_ConfirmDate;
			}
			set
			{
				if ((this._Con_ConfirmDate != value))
				{
					this._Con_ConfirmDate = value;
				}
			}
		}
		
		[Column(Storage="_Bul_Recount", DbType="Int")]
		public System.Nullable<int> Bul_Recount
		{
			get
			{
				return this._Bul_Recount;
			}
			set
			{
				if ((this._Bul_Recount != value))
				{
					this._Bul_Recount = value;
				}
			}
		}
		
		[Column(Storage="_Bul_OpDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> Bul_OpDate
		{
			get
			{
				return this._Bul_OpDate;
			}
			set
			{
				if ((this._Bul_OpDate != value))
				{
					this._Bul_OpDate = value;
				}
			}
		}
		
		[Column(Storage="_Bul_Status", DbType="NVarChar(40)")]
		public string Bul_Status
		{
			get
			{
				return this._Bul_Status;
			}
			set
			{
				if ((this._Bul_Status != value))
				{
					this._Bul_Status = value;
				}
			}
		}
		
		[Column(Storage="_Bul_SubmitNo", DbType="NVarChar(200)")]
		public string Bul_SubmitNo
		{
			get
			{
				return this._Bul_SubmitNo;
			}
			set
			{
				if ((this._Bul_SubmitNo != value))
				{
					this._Bul_SubmitNo = value;
				}
			}
		}
		
		[Column(Storage="_Bul_ReceiveBulkSampleDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> Bul_ReceiveBulkSampleDate
		{
			get
			{
				return this._Bul_ReceiveBulkSampleDate;
			}
			set
			{
				if ((this._Bul_ReceiveBulkSampleDate != value))
				{
					this._Bul_ReceiveBulkSampleDate = value;
				}
			}
		}
		
		[Column(Storage="_Co1_Recount", DbType="Int")]
		public System.Nullable<int> Co1_Recount
		{
			get
			{
				return this._Co1_Recount;
			}
			set
			{
				if ((this._Co1_Recount != value))
				{
					this._Co1_Recount = value;
				}
			}
		}
		
		[Column(Storage="_Col_OpDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> Col_OpDate
		{
			get
			{
				return this._Col_OpDate;
			}
			set
			{
				if ((this._Col_OpDate != value))
				{
					this._Col_OpDate = value;
				}
			}
		}
		
		[Column(Storage="_Dip_Recount", DbType="Int")]
		public System.Nullable<int> Dip_Recount
		{
			get
			{
				return this._Dip_Recount;
			}
			set
			{
				if ((this._Dip_Recount != value))
				{
					this._Dip_Recount = value;
				}
			}
		}
		
		[Column(Storage="_Dip_Opdate", DbType="DateTime")]
		public System.Nullable<System.DateTime> Dip_Opdate
		{
			get
			{
				return this._Dip_Opdate;
			}
			set
			{
				if ((this._Dip_Opdate != value))
				{
					this._Dip_Opdate = value;
				}
			}
		}
		
		[Column(Storage="_Dip_Status", DbType="NVarChar(40)")]
		public string Dip_Status
		{
			get
			{
				return this._Dip_Status;
			}
			set
			{
				if ((this._Dip_Status != value))
				{
					this._Dip_Status = value;
				}
			}
		}
		
		[Column(Storage="_Tes_Recount", DbType="Int")]
		public System.Nullable<int> Tes_Recount
		{
			get
			{
				return this._Tes_Recount;
			}
			set
			{
				if ((this._Tes_Recount != value))
				{
					this._Tes_Recount = value;
				}
			}
		}
		
		[Column(Storage="_Tes_Opdate", DbType="DateTime")]
		public System.Nullable<System.DateTime> Tes_Opdate
		{
			get
			{
				return this._Tes_Opdate;
			}
			set
			{
				if ((this._Tes_Opdate != value))
				{
					this._Tes_Opdate = value;
				}
			}
		}
		
		[Column(Storage="_Tes_Status", DbType="NVarChar(40)")]
		public string Tes_Status
		{
			get
			{
				return this._Tes_Status;
			}
			set
			{
				if ((this._Tes_Status != value))
				{
					this._Tes_Status = value;
				}
			}
		}
		
		[Column(Storage="_OvershipQty", DbType="Decimal(19,2)")]
		public System.Nullable<decimal> OvershipQty
		{
			get
			{
				return this._OvershipQty;
			}
			set
			{
				if ((this._OvershipQty != value))
				{
					this._OvershipQty = value;
				}
			}
		}
		
		[Column(Storage="_OvershipPercent", DbType="Decimal(38,19)")]
		public System.Nullable<decimal> OvershipPercent
		{
			get
			{
				return this._OvershipPercent;
			}
			set
			{
				if ((this._OvershipPercent != value))
				{
					this._OvershipPercent = value;
				}
			}
		}
		
		[Column(Storage="_DifferenceDate", DbType="Int")]
		public System.Nullable<int> DifferenceDate
		{
			get
			{
				return this._DifferenceDate;
			}
			set
			{
				if ((this._DifferenceDate != value))
				{
					this._DifferenceDate = value;
				}
			}
		}
		
		[Column(Storage="_AMount", DbType="Float")]
		public System.Nullable<double> AMount
		{
			get
			{
				return this._AMount;
			}
			set
			{
				if ((this._AMount != value))
				{
					this._AMount = value;
				}
			}
		}
		
		[Column(Storage="_SuppQTY", DbType="Float")]
		public System.Nullable<double> SuppQTY
		{
			get
			{
				return this._SuppQTY;
			}
			set
			{
				if ((this._SuppQTY != value))
				{
					this._SuppQTY = value;
				}
			}
		}
		
		[Column(Storage="_SuppOSQTY", DbType="Float")]
		public System.Nullable<double> SuppOSQTY
		{
			get
			{
				return this._SuppOSQTY;
			}
			set
			{
				if ((this._SuppOSQTY != value))
				{
					this._SuppOSQTY = value;
				}
			}
		}
		
		[Column(Storage="_NewVersion", DbType="VarChar(61)")]
		public string NewVersion
		{
			get
			{
				return this._NewVersion;
			}
			set
			{
				if ((this._NewVersion != value))
				{
					this._NewVersion = value;
				}
			}
		}
		
		[Column(Storage="_IsOutStanding", DbType="Bit")]
		public System.Nullable<bool> IsOutStanding
		{
			get
			{
				return this._IsOutStanding;
			}
			set
			{
				if ((this._IsOutStanding != value))
				{
					this._IsOutStanding = value;
				}
			}
		}
		
		[Column(Storage="_IsOutStandingDesc", DbType="VarChar(50)")]
		public string IsOutStandingDesc
		{
			get
			{
				return this._IsOutStandingDesc;
			}
			set
			{
				if ((this._IsOutStandingDesc != value))
				{
					this._IsOutStandingDesc = value;
				}
			}
		}
		
		[Column(Storage="_OrderClassString", DbType="VarChar(13) NOT NULL", CanBeNull=false)]
		public string OrderClassString
		{
			get
			{
				return this._OrderClassString;
			}
			set
			{
				if ((this._OrderClassString != value))
				{
					this._OrderClassString = value;
				}
			}
		}
		
		[Column(Storage="_Customer", DbType="NVarChar(4)")]
		public string Customer
		{
			get
			{
				return this._Customer;
			}
			set
			{
				if ((this._Customer != value))
				{
					this._Customer = value;
				}
			}
		}
		
		[Column(Storage="_MaterialGroup", DbType="VarChar(20)")]
		public string MaterialGroup
		{
			get
			{
				return this._MaterialGroup;
			}
			set
			{
				if ((this._MaterialGroup != value))
				{
					this._MaterialGroup = value;
				}
			}
		}
		
		[Column(Storage="_Qty1", DbType="Float")]
		public System.Nullable<double> Qty1
		{
			get
			{
				return this._Qty1;
			}
			set
			{
				if ((this._Qty1 != value))
				{
					this._Qty1 = value;
				}
			}
		}
		
		[Column(Storage="_Percent1", DbType="Float")]
		public System.Nullable<double> Percent1
		{
			get
			{
				return this._Percent1;
			}
			set
			{
				if ((this._Percent1 != value))
				{
					this._Percent1 = value;
				}
			}
		}
		
		[Column(Storage="_FtyDate1", DbType="DateTime")]
		public System.Nullable<System.DateTime> FtyDate1
		{
			get
			{
				return this._FtyDate1;
			}
			set
			{
				if ((this._FtyDate1 != value))
				{
					this._FtyDate1 = value;
				}
			}
		}
		
		[Column(Storage="_Title1", DbType="NVarChar(40)")]
		public string Title1
		{
			get
			{
				return this._Title1;
			}
			set
			{
				if ((this._Title1 != value))
				{
					this._Title1 = value;
				}
			}
		}
		
		[Column(Storage="_Qty2", DbType="Float")]
		public System.Nullable<double> Qty2
		{
			get
			{
				return this._Qty2;
			}
			set
			{
				if ((this._Qty2 != value))
				{
					this._Qty2 = value;
				}
			}
		}
		
		[Column(Storage="_Percent2", DbType="Float")]
		public System.Nullable<double> Percent2
		{
			get
			{
				return this._Percent2;
			}
			set
			{
				if ((this._Percent2 != value))
				{
					this._Percent2 = value;
				}
			}
		}
		
		[Column(Storage="_FtyDate2", DbType="DateTime")]
		public System.Nullable<System.DateTime> FtyDate2
		{
			get
			{
				return this._FtyDate2;
			}
			set
			{
				if ((this._FtyDate2 != value))
				{
					this._FtyDate2 = value;
				}
			}
		}
		
		[Column(Storage="_Title2", DbType="NVarChar(40)")]
		public string Title2
		{
			get
			{
				return this._Title2;
			}
			set
			{
				if ((this._Title2 != value))
				{
					this._Title2 = value;
				}
			}
		}
		
		[Column(Storage="_Qty3", DbType="Float")]
		public System.Nullable<double> Qty3
		{
			get
			{
				return this._Qty3;
			}
			set
			{
				if ((this._Qty3 != value))
				{
					this._Qty3 = value;
				}
			}
		}
		
		[Column(Storage="_Percent3", DbType="Float")]
		public System.Nullable<double> Percent3
		{
			get
			{
				return this._Percent3;
			}
			set
			{
				if ((this._Percent3 != value))
				{
					this._Percent3 = value;
				}
			}
		}
		
		[Column(Storage="_FtyDate3", DbType="DateTime")]
		public System.Nullable<System.DateTime> FtyDate3
		{
			get
			{
				return this._FtyDate3;
			}
			set
			{
				if ((this._FtyDate3 != value))
				{
					this._FtyDate3 = value;
				}
			}
		}
		
		[Column(Storage="_Title3", DbType="NVarChar(40)")]
		public string Title3
		{
			get
			{
				return this._Title3;
			}
			set
			{
				if ((this._Title3 != value))
				{
					this._Title3 = value;
				}
			}
		}
		
		[Column(Storage="_Qty4", DbType="Float")]
		public System.Nullable<double> Qty4
		{
			get
			{
				return this._Qty4;
			}
			set
			{
				if ((this._Qty4 != value))
				{
					this._Qty4 = value;
				}
			}
		}
		
		[Column(Storage="_Percent4", DbType="Float")]
		public System.Nullable<double> Percent4
		{
			get
			{
				return this._Percent4;
			}
			set
			{
				if ((this._Percent4 != value))
				{
					this._Percent4 = value;
				}
			}
		}
		
		[Column(Storage="_FtyDate4", DbType="DateTime")]
		public System.Nullable<System.DateTime> FtyDate4
		{
			get
			{
				return this._FtyDate4;
			}
			set
			{
				if ((this._FtyDate4 != value))
				{
					this._FtyDate4 = value;
				}
			}
		}
		
		[Column(Storage="_Title4", DbType="NVarChar(40)")]
		public string Title4
		{
			get
			{
				return this._Title4;
			}
			set
			{
				if ((this._Title4 != value))
				{
					this._Title4 = value;
				}
			}
		}
		
		[Column(Storage="_OpenToProject", DbType="Bit NOT NULL")]
		public bool OpenToProject
		{
			get
			{
				return this._OpenToProject;
			}
			set
			{
				if ((this._OpenToProject != value))
				{
					this._OpenToProject = value;
				}
			}
		}
		
		[Column(Storage="_Email", DbType="NVarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
		
		[Column(Storage="_Incoterms", DbType="NVarChar(10)")]
		public string Incoterms
		{
			get
			{
				return this._Incoterms;
			}
			set
			{
				if ((this._Incoterms != value))
				{
					this._Incoterms = value;
				}
			}
		}
		
		[Column(Storage="_EndCustCode", DbType="NVarChar(50)")]
		public string EndCustCode
		{
			get
			{
				return this._EndCustCode;
			}
			set
			{
				if ((this._EndCustCode != value))
				{
					this._EndCustCode = value;
				}
			}
		}
		
		[Column(Storage="_LocationOfSuppFactory", DbType="NVarChar(100)")]
		public string LocationOfSuppFactory
		{
			get
			{
				return this._LocationOfSuppFactory;
			}
			set
			{
				if ((this._LocationOfSuppFactory != value))
				{
					this._LocationOfSuppFactory = value;
				}
			}
		}
		
		[Column(Storage="_TransitPoint", DbType="NVarChar(100)")]
		public string TransitPoint
		{
			get
			{
				return this._TransitPoint;
			}
			set
			{
				if ((this._TransitPoint != value))
				{
					this._TransitPoint = value;
				}
			}
		}
		
		[Column(Storage="_EndPoint", DbType="NVarChar(100)")]
		public string EndPoint
		{
			get
			{
				return this._EndPoint;
			}
			set
			{
				if ((this._EndPoint != value))
				{
					this._EndPoint = value;
				}
			}
		}
		
		[Column(Storage="_EndPointAddress", DbType="NVarChar(500)")]
		public string EndPointAddress
		{
			get
			{
				return this._EndPointAddress;
			}
			set
			{
				if ((this._EndPointAddress != value))
				{
					this._EndPointAddress = value;
				}
			}
		}
		
		[Column(Storage="_TransitFrame", DbType="Int")]
		public System.Nullable<int> TransitFrame
		{
			get
			{
				return this._TransitFrame;
			}
			set
			{
				if ((this._TransitFrame != value))
				{
					this._TransitFrame = value;
				}
			}
		}
		
		[Column(Storage="_IndividualAssociate", DbType="Int")]
		public System.Nullable<int> IndividualAssociate
		{
			get
			{
				return this._IndividualAssociate;
			}
			set
			{
				if ((this._IndividualAssociate != value))
				{
					this._IndividualAssociate = value;
				}
			}
		}
		
		[Column(Storage="_BuyerQtyDimension", DbType="NVarChar(10)")]
		public string BuyerQtyDimension
		{
			get
			{
				return this._BuyerQtyDimension;
			}
			set
			{
				if ((this._BuyerQtyDimension != value))
				{
					this._BuyerQtyDimension = value;
				}
			}
		}
		
		[Column(Storage="_SuppQtyDimension", DbType="NVarChar(10)")]
		public string SuppQtyDimension
		{
			get
			{
				return this._SuppQtyDimension;
			}
			set
			{
				if ((this._SuppQtyDimension != value))
				{
					this._SuppQtyDimension = value;
				}
			}
		}
		
		[Column(Storage="_Dimension", DbType="NVarChar(101)")]
		public string Dimension
		{
			get
			{
				return this._Dimension;
			}
			set
			{
				if ((this._Dimension != value))
				{
					this._Dimension = value;
				}
			}
		}
		
		[Column(Storage="_SuppSizeCode", DbType="NVarChar(1000)")]
		public string SuppSizeCode
		{
			get
			{
				return this._SuppSizeCode;
			}
			set
			{
				if ((this._SuppSizeCode != value))
				{
					this._SuppSizeCode = value;
				}
			}
		}
		
		[Column(Storage="_SuppFitCode", DbType="NVarChar(1000)")]
		public string SuppFitCode
		{
			get
			{
				return this._SuppFitCode;
			}
			set
			{
				if ((this._SuppFitCode != value))
				{
					this._SuppFitCode = value;
				}
			}
		}
		
		[Column(Storage="_GarmentColor", DbType="NVarChar(10)")]
		public string GarmentColor
		{
			get
			{
				return this._GarmentColor;
			}
			set
			{
				if ((this._GarmentColor != value))
				{
					this._GarmentColor = value;
				}
			}
		}
		
		[Column(Storage="_MultiPrice", DbType="Bit")]
		public System.Nullable<bool> MultiPrice
		{
			get
			{
				return this._MultiPrice;
			}
			set
			{
				if ((this._MultiPrice != value))
				{
					this._MultiPrice = value;
				}
			}
		}
		
		[Column(Storage="_PointOfOrigin", DbType="Bit")]
		public System.Nullable<bool> PointOfOrigin
		{
			get
			{
				return this._PointOfOrigin;
			}
			set
			{
				if ((this._PointOfOrigin != value))
				{
					this._PointOfOrigin = value;
				}
			}
		}
		
		[Column(Storage="_PlaceOfOrigin", DbType="Bit")]
		public System.Nullable<bool> PlaceOfOrigin
		{
			get
			{
				return this._PlaceOfOrigin;
			}
			set
			{
				if ((this._PlaceOfOrigin != value))
				{
					this._PlaceOfOrigin = value;
				}
			}
		}
		
		[Column(Storage="_PortOfOrigin", DbType="Bit")]
		public System.Nullable<bool> PortOfOrigin
		{
			get
			{
				return this._PortOfOrigin;
			}
			set
			{
				if ((this._PortOfOrigin != value))
				{
					this._PortOfOrigin = value;
				}
			}
		}
		
		[Column(Storage="_PortOfDestination", DbType="Bit")]
		public System.Nullable<bool> PortOfDestination
		{
			get
			{
				return this._PortOfDestination;
			}
			set
			{
				if ((this._PortOfDestination != value))
				{
					this._PortOfDestination = value;
				}
			}
		}
		
		[Column(Storage="_PlaceOfDestination", DbType="Bit")]
		public System.Nullable<bool> PlaceOfDestination
		{
			get
			{
				return this._PlaceOfDestination;
			}
			set
			{
				if ((this._PlaceOfDestination != value))
				{
					this._PlaceOfDestination = value;
				}
			}
		}
		
		[Column(Storage="_PointOfDestination", DbType="Bit")]
		public System.Nullable<bool> PointOfDestination
		{
			get
			{
				return this._PointOfDestination;
			}
			set
			{
				if ((this._PointOfDestination != value))
				{
					this._PointOfDestination = value;
				}
			}
		}
		
		[Column(Storage="_FactoryWorkShipCompleted", DbType="DateTime")]
		public System.Nullable<System.DateTime> FactoryWorkShipCompleted
		{
			get
			{
				return this._FactoryWorkShipCompleted;
			}
			set
			{
				if ((this._FactoryWorkShipCompleted != value))
				{
					this._FactoryWorkShipCompleted = value;
				}
			}
		}
		
		[Column(Storage="_TimeFrame2", DbType="Int")]
		public System.Nullable<int> TimeFrame2
		{
			get
			{
				return this._TimeFrame2;
			}
			set
			{
				if ((this._TimeFrame2 != value))
				{
					this._TimeFrame2 = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.V_MIDcMaterial")]
	public partial class V_MIDcMaterial
	{
		
		private string _SupplierReference;
		
		private string _Supplier;
		
		private string _ItemCode;
		
		private string _SupplierUom;
		
		private string _PHUom;
		
		private System.Nullable<decimal> _AdditionalCost;
		
		private string _Commodity;
		
		private System.Nullable<decimal> _UsableWidth;
		
		private string _UsableWidths;
		
		private System.Nullable<decimal> _SupplierWidth;
		
		private string _SupplierWidths;
		
		private System.Nullable<decimal> _Price;
		
		private System.Nullable<decimal> _RateToPHUnit1;
		
		private System.Nullable<decimal> _RateToPHUnitBK;
		
		private string _MaterialType;
		
		private string _MaterialGroup;
		
		public V_MIDcMaterial()
		{
		}
		
		[Column(Storage="_SupplierReference", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SupplierReference
		{
			get
			{
				return this._SupplierReference;
			}
			set
			{
				if ((this._SupplierReference != value))
				{
					this._SupplierReference = value;
				}
			}
		}
		
		[Column(Storage="_Supplier", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Supplier
		{
			get
			{
				return this._Supplier;
			}
			set
			{
				if ((this._Supplier != value))
				{
					this._Supplier = value;
				}
			}
		}
		
		[Column(Storage="_ItemCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ItemCode
		{
			get
			{
				return this._ItemCode;
			}
			set
			{
				if ((this._ItemCode != value))
				{
					this._ItemCode = value;
				}
			}
		}
		
		[Column(Storage="_SupplierUom", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string SupplierUom
		{
			get
			{
				return this._SupplierUom;
			}
			set
			{
				if ((this._SupplierUom != value))
				{
					this._SupplierUom = value;
				}
			}
		}
		
		[Column(Storage="_PHUom", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string PHUom
		{
			get
			{
				return this._PHUom;
			}
			set
			{
				if ((this._PHUom != value))
				{
					this._PHUom = value;
				}
			}
		}
		
		[Column(Storage="_AdditionalCost", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> AdditionalCost
		{
			get
			{
				return this._AdditionalCost;
			}
			set
			{
				if ((this._AdditionalCost != value))
				{
					this._AdditionalCost = value;
				}
			}
		}
		
		[Column(Storage="_Commodity", DbType="NVarChar(200)")]
		public string Commodity
		{
			get
			{
				return this._Commodity;
			}
			set
			{
				if ((this._Commodity != value))
				{
					this._Commodity = value;
				}
			}
		}
		
		[Column(Storage="_UsableWidth", DbType="Decimal(15,4)")]
		public System.Nullable<decimal> UsableWidth
		{
			get
			{
				return this._UsableWidth;
			}
			set
			{
				if ((this._UsableWidth != value))
				{
					this._UsableWidth = value;
				}
			}
		}
		
		[Column(Storage="_UsableWidths", DbType="NVarChar(200)")]
		public string UsableWidths
		{
			get
			{
				return this._UsableWidths;
			}
			set
			{
				if ((this._UsableWidths != value))
				{
					this._UsableWidths = value;
				}
			}
		}
		
		[Column(Storage="_SupplierWidth", DbType="Decimal(15,4)")]
		public System.Nullable<decimal> SupplierWidth
		{
			get
			{
				return this._SupplierWidth;
			}
			set
			{
				if ((this._SupplierWidth != value))
				{
					this._SupplierWidth = value;
				}
			}
		}
		
		[Column(Storage="_SupplierWidths", DbType="NVarChar(200)")]
		public string SupplierWidths
		{
			get
			{
				return this._SupplierWidths;
			}
			set
			{
				if ((this._SupplierWidths != value))
				{
					this._SupplierWidths = value;
				}
			}
		}
		
		[Column(Storage="_Price", DbType="Decimal(16,9)")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this._Price = value;
				}
			}
		}
		
		[Column(Storage="_RateToPHUnit1", DbType="Decimal(15,4)")]
		public System.Nullable<decimal> RateToPHUnit1
		{
			get
			{
				return this._RateToPHUnit1;
			}
			set
			{
				if ((this._RateToPHUnit1 != value))
				{
					this._RateToPHUnit1 = value;
				}
			}
		}
		
		[Column(Storage="_RateToPHUnitBK", DbType="Decimal(15,4)")]
		public System.Nullable<decimal> RateToPHUnitBK
		{
			get
			{
				return this._RateToPHUnitBK;
			}
			set
			{
				if ((this._RateToPHUnitBK != value))
				{
					this._RateToPHUnitBK = value;
				}
			}
		}
		
		[Column(Storage="_MaterialType", DbType="VarChar(50)")]
		public string MaterialType
		{
			get
			{
				return this._MaterialType;
			}
			set
			{
				if ((this._MaterialType != value))
				{
					this._MaterialType = value;
				}
			}
		}
		
		[Column(Storage="_MaterialGroup", DbType="NVarChar(200)")]
		public string MaterialGroup
		{
			get
			{
				return this._MaterialGroup;
			}
			set
			{
				if ((this._MaterialGroup != value))
				{
					this._MaterialGroup = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.POColorStandard")]
	public partial class POColorStandard : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _Customer;
		
		private string _ProjectNo;
		
		private string _Brand;
		
		private string _StyleNo;
		
		private string _PONO;
		
		private string _ColorCode;
		
		private string _ColorName;
		
		private string _CoordinatPerson;
		
		private System.Nullable<System.DateTime> _CoordinatDate;
		
		private string _ReceivePerson;
		
		private System.Nullable<System.DateTime> _ReceiveDate;
		
		private string _Remark;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _Supplier;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnCustomerChanging(string value);
    partial void OnCustomerChanged();
    partial void OnProjectNoChanging(string value);
    partial void OnProjectNoChanged();
    partial void OnBrandChanging(string value);
    partial void OnBrandChanged();
    partial void OnStyleNoChanging(string value);
    partial void OnStyleNoChanged();
    partial void OnPONOChanging(string value);
    partial void OnPONOChanged();
    partial void OnColorCodeChanging(string value);
    partial void OnColorCodeChanged();
    partial void OnColorNameChanging(string value);
    partial void OnColorNameChanged();
    partial void OnCoordinatPersonChanging(string value);
    partial void OnCoordinatPersonChanged();
    partial void OnCoordinatDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCoordinatDateChanged();
    partial void OnReceivePersonChanging(string value);
    partial void OnReceivePersonChanged();
    partial void OnReceiveDateChanging(System.Nullable<System.DateTime> value);
    partial void OnReceiveDateChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnSupplierChanging(string value);
    partial void OnSupplierChanged();
    #endregion
		
		public POColorStandard()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_Customer", DbType="VarChar(50)")]
		public string Customer
		{
			get
			{
				return this._Customer;
			}
			set
			{
				if ((this._Customer != value))
				{
					this.OnCustomerChanging(value);
					this.SendPropertyChanging();
					this._Customer = value;
					this.SendPropertyChanged("Customer");
					this.OnCustomerChanged();
				}
			}
		}
		
		[Column(Storage="_ProjectNo", DbType="VarChar(50)")]
		public string ProjectNo
		{
			get
			{
				return this._ProjectNo;
			}
			set
			{
				if ((this._ProjectNo != value))
				{
					this.OnProjectNoChanging(value);
					this.SendPropertyChanging();
					this._ProjectNo = value;
					this.SendPropertyChanged("ProjectNo");
					this.OnProjectNoChanged();
				}
			}
		}
		
		[Column(Storage="_Brand", DbType="VarChar(50)")]
		public string Brand
		{
			get
			{
				return this._Brand;
			}
			set
			{
				if ((this._Brand != value))
				{
					this.OnBrandChanging(value);
					this.SendPropertyChanging();
					this._Brand = value;
					this.SendPropertyChanged("Brand");
					this.OnBrandChanged();
				}
			}
		}
		
		[Column(Storage="_StyleNo", DbType="VarChar(50)")]
		public string StyleNo
		{
			get
			{
				return this._StyleNo;
			}
			set
			{
				if ((this._StyleNo != value))
				{
					this.OnStyleNoChanging(value);
					this.SendPropertyChanging();
					this._StyleNo = value;
					this.SendPropertyChanged("StyleNo");
					this.OnStyleNoChanged();
				}
			}
		}
		
		[Column(Storage="_PONO", DbType="VarChar(50)")]
		public string PONO
		{
			get
			{
				return this._PONO;
			}
			set
			{
				if ((this._PONO != value))
				{
					this.OnPONOChanging(value);
					this.SendPropertyChanging();
					this._PONO = value;
					this.SendPropertyChanged("PONO");
					this.OnPONOChanged();
				}
			}
		}
		
		[Column(Storage="_ColorCode", DbType="VarChar(50)")]
		public string ColorCode
		{
			get
			{
				return this._ColorCode;
			}
			set
			{
				if ((this._ColorCode != value))
				{
					this.OnColorCodeChanging(value);
					this.SendPropertyChanging();
					this._ColorCode = value;
					this.SendPropertyChanged("ColorCode");
					this.OnColorCodeChanged();
				}
			}
		}
		
		[Column(Storage="_ColorName", DbType="VarChar(50)")]
		public string ColorName
		{
			get
			{
				return this._ColorName;
			}
			set
			{
				if ((this._ColorName != value))
				{
					this.OnColorNameChanging(value);
					this.SendPropertyChanging();
					this._ColorName = value;
					this.SendPropertyChanged("ColorName");
					this.OnColorNameChanged();
				}
			}
		}
		
		[Column(Storage="_CoordinatPerson", DbType="VarChar(50)")]
		public string CoordinatPerson
		{
			get
			{
				return this._CoordinatPerson;
			}
			set
			{
				if ((this._CoordinatPerson != value))
				{
					this.OnCoordinatPersonChanging(value);
					this.SendPropertyChanging();
					this._CoordinatPerson = value;
					this.SendPropertyChanged("CoordinatPerson");
					this.OnCoordinatPersonChanged();
				}
			}
		}
		
		[Column(Storage="_CoordinatDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CoordinatDate
		{
			get
			{
				return this._CoordinatDate;
			}
			set
			{
				if ((this._CoordinatDate != value))
				{
					this.OnCoordinatDateChanging(value);
					this.SendPropertyChanging();
					this._CoordinatDate = value;
					this.SendPropertyChanged("CoordinatDate");
					this.OnCoordinatDateChanged();
				}
			}
		}
		
		[Column(Storage="_ReceivePerson", DbType="VarChar(50)")]
		public string ReceivePerson
		{
			get
			{
				return this._ReceivePerson;
			}
			set
			{
				if ((this._ReceivePerson != value))
				{
					this.OnReceivePersonChanging(value);
					this.SendPropertyChanging();
					this._ReceivePerson = value;
					this.SendPropertyChanged("ReceivePerson");
					this.OnReceivePersonChanged();
				}
			}
		}
		
		[Column(Storage="_ReceiveDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ReceiveDate
		{
			get
			{
				return this._ReceiveDate;
			}
			set
			{
				if ((this._ReceiveDate != value))
				{
					this.OnReceiveDateChanging(value);
					this.SendPropertyChanging();
					this._ReceiveDate = value;
					this.SendPropertyChanged("ReceiveDate");
					this.OnReceiveDateChanged();
				}
			}
		}
		
		[Column(Storage="_Remark", DbType="NVarChar(500)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[Column(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[Column(Storage="_Supplier", DbType="VarChar(50)")]
		public string Supplier
		{
			get
			{
				return this._Supplier;
			}
			set
			{
				if ((this._Supplier != value))
				{
					this.OnSupplierChanging(value);
					this.SendPropertyChanging();
					this._Supplier = value;
					this.SendPropertyChanged("Supplier");
					this.OnSupplierChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.PORC")]
	public partial class PORC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Company;
		
		private string _PONO;
		
		private int _Version;
		
		private int _AmendmentNo;
		
		private int _OrderLine;
		
		private string _SKU;
		
		private string _RCNO;
		
		private System.Nullable<bool> _VersionFlag;
		
		private string _ActiveFlag;
		
		private System.Nullable<System.DateTime> _RCCreateDate;
		
		private System.Nullable<System.DateTime> _RCUpdateDate;
		
		private System.Nullable<decimal> _RCQty;
		
		private System.Nullable<bool> _Replacement;
		
		private string _RCRNO;
		
		private System.Nullable<System.DateTime> _RCRDate;
		
		private System.Nullable<decimal> _RCRQty;
		
		private System.Nullable<bool> _RCRFlag;
		
		private string _DebitNoteNO;
		
		private string _CreditNoteNO;
		
		private System.Nullable<System.DateTime> _InvoiceDate;
		
		private System.Nullable<double> _InvoiceAmount;
		
		private System.Nullable<bool> _InvoiceFlag;
		
		private EntitySet<PORCDetail> _PORCDetails;
		
		private EntityRef<POColorSizeDetail> _POColorSizeDetail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnPONOChanging(string value);
    partial void OnPONOChanged();
    partial void OnVersionChanging(int value);
    partial void OnVersionChanged();
    partial void OnAmendmentNoChanging(int value);
    partial void OnAmendmentNoChanged();
    partial void OnOrderLineChanging(int value);
    partial void OnOrderLineChanged();
    partial void OnSKUChanging(string value);
    partial void OnSKUChanged();
    partial void OnRCNOChanging(string value);
    partial void OnRCNOChanged();
    partial void OnVersionFlagChanging(System.Nullable<bool> value);
    partial void OnVersionFlagChanged();
    partial void OnActiveFlagChanging(string value);
    partial void OnActiveFlagChanged();
    partial void OnRCCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRCCreateDateChanged();
    partial void OnRCUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRCUpdateDateChanged();
    partial void OnRCQtyChanging(System.Nullable<decimal> value);
    partial void OnRCQtyChanged();
    partial void OnReplacementChanging(System.Nullable<bool> value);
    partial void OnReplacementChanged();
    partial void OnRCRNOChanging(string value);
    partial void OnRCRNOChanged();
    partial void OnRCRDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRCRDateChanged();
    partial void OnRCRQtyChanging(System.Nullable<decimal> value);
    partial void OnRCRQtyChanged();
    partial void OnRCRFlagChanging(System.Nullable<bool> value);
    partial void OnRCRFlagChanged();
    partial void OnDebitNoteNOChanging(string value);
    partial void OnDebitNoteNOChanged();
    partial void OnCreditNoteNOChanging(string value);
    partial void OnCreditNoteNOChanged();
    partial void OnInvoiceDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInvoiceDateChanged();
    partial void OnInvoiceAmountChanging(System.Nullable<double> value);
    partial void OnInvoiceAmountChanged();
    partial void OnInvoiceFlagChanging(System.Nullable<bool> value);
    partial void OnInvoiceFlagChanged();
    #endregion
		
		public PORC()
		{
			this._PORCDetails = new EntitySet<PORCDetail>(new Action<PORCDetail>(this.attach_PORCDetails), new Action<PORCDetail>(this.detach_PORCDetails));
			this._POColorSizeDetail = default(EntityRef<POColorSizeDetail>);
			OnCreated();
		}
		
		[Column(Storage="_Company", DbType="VarChar(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					if (this._POColorSizeDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[Column(Storage="_PONO", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PONO
		{
			get
			{
				return this._PONO;
			}
			set
			{
				if ((this._PONO != value))
				{
					if (this._POColorSizeDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPONOChanging(value);
					this.SendPropertyChanging();
					this._PONO = value;
					this.SendPropertyChanged("PONO");
					this.OnPONOChanged();
				}
			}
		}
		
		[Column(Storage="_Version", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					if (this._POColorSizeDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[Column(Storage="_AmendmentNo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AmendmentNo
		{
			get
			{
				return this._AmendmentNo;
			}
			set
			{
				if ((this._AmendmentNo != value))
				{
					if (this._POColorSizeDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAmendmentNoChanging(value);
					this.SendPropertyChanging();
					this._AmendmentNo = value;
					this.SendPropertyChanged("AmendmentNo");
					this.OnAmendmentNoChanged();
				}
			}
		}
		
		[Column(Storage="_OrderLine", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int OrderLine
		{
			get
			{
				return this._OrderLine;
			}
			set
			{
				if ((this._OrderLine != value))
				{
					if (this._POColorSizeDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderLineChanging(value);
					this.SendPropertyChanging();
					this._OrderLine = value;
					this.SendPropertyChanged("OrderLine");
					this.OnOrderLineChanged();
				}
			}
		}
		
		[Column(Storage="_SKU", DbType="VarChar(32) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SKU
		{
			get
			{
				return this._SKU;
			}
			set
			{
				if ((this._SKU != value))
				{
					if (this._POColorSizeDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSKUChanging(value);
					this.SendPropertyChanging();
					this._SKU = value;
					this.SendPropertyChanged("SKU");
					this.OnSKUChanged();
				}
			}
		}
		
		[Column(Storage="_RCNO", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string RCNO
		{
			get
			{
				return this._RCNO;
			}
			set
			{
				if ((this._RCNO != value))
				{
					this.OnRCNOChanging(value);
					this.SendPropertyChanging();
					this._RCNO = value;
					this.SendPropertyChanged("RCNO");
					this.OnRCNOChanged();
				}
			}
		}
		
		[Column(Storage="_VersionFlag", DbType="Bit")]
		public System.Nullable<bool> VersionFlag
		{
			get
			{
				return this._VersionFlag;
			}
			set
			{
				if ((this._VersionFlag != value))
				{
					this.OnVersionFlagChanging(value);
					this.SendPropertyChanging();
					this._VersionFlag = value;
					this.SendPropertyChanged("VersionFlag");
					this.OnVersionFlagChanged();
				}
			}
		}
		
		[Column(Storage="_ActiveFlag", DbType="NVarChar(2)")]
		public string ActiveFlag
		{
			get
			{
				return this._ActiveFlag;
			}
			set
			{
				if ((this._ActiveFlag != value))
				{
					this.OnActiveFlagChanging(value);
					this.SendPropertyChanging();
					this._ActiveFlag = value;
					this.SendPropertyChanged("ActiveFlag");
					this.OnActiveFlagChanged();
				}
			}
		}
		
		[Column(Storage="_RCCreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RCCreateDate
		{
			get
			{
				return this._RCCreateDate;
			}
			set
			{
				if ((this._RCCreateDate != value))
				{
					this.OnRCCreateDateChanging(value);
					this.SendPropertyChanging();
					this._RCCreateDate = value;
					this.SendPropertyChanged("RCCreateDate");
					this.OnRCCreateDateChanged();
				}
			}
		}
		
		[Column(Storage="_RCUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RCUpdateDate
		{
			get
			{
				return this._RCUpdateDate;
			}
			set
			{
				if ((this._RCUpdateDate != value))
				{
					this.OnRCUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._RCUpdateDate = value;
					this.SendPropertyChanged("RCUpdateDate");
					this.OnRCUpdateDateChanged();
				}
			}
		}
		
		[Column(Storage="_RCQty", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> RCQty
		{
			get
			{
				return this._RCQty;
			}
			set
			{
				if ((this._RCQty != value))
				{
					this.OnRCQtyChanging(value);
					this.SendPropertyChanging();
					this._RCQty = value;
					this.SendPropertyChanged("RCQty");
					this.OnRCQtyChanged();
				}
			}
		}
		
		[Column(Storage="_Replacement", DbType="Bit")]
		public System.Nullable<bool> Replacement
		{
			get
			{
				return this._Replacement;
			}
			set
			{
				if ((this._Replacement != value))
				{
					this.OnReplacementChanging(value);
					this.SendPropertyChanging();
					this._Replacement = value;
					this.SendPropertyChanged("Replacement");
					this.OnReplacementChanged();
				}
			}
		}
		
		[Column(Storage="_RCRNO", DbType="NVarChar(50)")]
		public string RCRNO
		{
			get
			{
				return this._RCRNO;
			}
			set
			{
				if ((this._RCRNO != value))
				{
					this.OnRCRNOChanging(value);
					this.SendPropertyChanging();
					this._RCRNO = value;
					this.SendPropertyChanged("RCRNO");
					this.OnRCRNOChanged();
				}
			}
		}
		
		[Column(Storage="_RCRDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RCRDate
		{
			get
			{
				return this._RCRDate;
			}
			set
			{
				if ((this._RCRDate != value))
				{
					this.OnRCRDateChanging(value);
					this.SendPropertyChanging();
					this._RCRDate = value;
					this.SendPropertyChanged("RCRDate");
					this.OnRCRDateChanged();
				}
			}
		}
		
		[Column(Storage="_RCRQty", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> RCRQty
		{
			get
			{
				return this._RCRQty;
			}
			set
			{
				if ((this._RCRQty != value))
				{
					this.OnRCRQtyChanging(value);
					this.SendPropertyChanging();
					this._RCRQty = value;
					this.SendPropertyChanged("RCRQty");
					this.OnRCRQtyChanged();
				}
			}
		}
		
		[Column(Storage="_RCRFlag", DbType="Bit")]
		public System.Nullable<bool> RCRFlag
		{
			get
			{
				return this._RCRFlag;
			}
			set
			{
				if ((this._RCRFlag != value))
				{
					this.OnRCRFlagChanging(value);
					this.SendPropertyChanging();
					this._RCRFlag = value;
					this.SendPropertyChanged("RCRFlag");
					this.OnRCRFlagChanged();
				}
			}
		}
		
		[Column(Storage="_DebitNoteNO", DbType="NVarChar(50)")]
		public string DebitNoteNO
		{
			get
			{
				return this._DebitNoteNO;
			}
			set
			{
				if ((this._DebitNoteNO != value))
				{
					this.OnDebitNoteNOChanging(value);
					this.SendPropertyChanging();
					this._DebitNoteNO = value;
					this.SendPropertyChanged("DebitNoteNO");
					this.OnDebitNoteNOChanged();
				}
			}
		}
		
		[Column(Storage="_CreditNoteNO", DbType="NVarChar(50)")]
		public string CreditNoteNO
		{
			get
			{
				return this._CreditNoteNO;
			}
			set
			{
				if ((this._CreditNoteNO != value))
				{
					this.OnCreditNoteNOChanging(value);
					this.SendPropertyChanging();
					this._CreditNoteNO = value;
					this.SendPropertyChanged("CreditNoteNO");
					this.OnCreditNoteNOChanged();
				}
			}
		}
		
		[Column(Storage="_InvoiceDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> InvoiceDate
		{
			get
			{
				return this._InvoiceDate;
			}
			set
			{
				if ((this._InvoiceDate != value))
				{
					this.OnInvoiceDateChanging(value);
					this.SendPropertyChanging();
					this._InvoiceDate = value;
					this.SendPropertyChanged("InvoiceDate");
					this.OnInvoiceDateChanged();
				}
			}
		}
		
		[Column(Storage="_InvoiceAmount", DbType="Float")]
		public System.Nullable<double> InvoiceAmount
		{
			get
			{
				return this._InvoiceAmount;
			}
			set
			{
				if ((this._InvoiceAmount != value))
				{
					this.OnInvoiceAmountChanging(value);
					this.SendPropertyChanging();
					this._InvoiceAmount = value;
					this.SendPropertyChanged("InvoiceAmount");
					this.OnInvoiceAmountChanged();
				}
			}
		}
		
		[Column(Storage="_InvoiceFlag", DbType="Bit")]
		public System.Nullable<bool> InvoiceFlag
		{
			get
			{
				return this._InvoiceFlag;
			}
			set
			{
				if ((this._InvoiceFlag != value))
				{
					this.OnInvoiceFlagChanging(value);
					this.SendPropertyChanging();
					this._InvoiceFlag = value;
					this.SendPropertyChanged("InvoiceFlag");
					this.OnInvoiceFlagChanged();
				}
			}
		}
		
		[Association(Name="PORC_PORCDetail", Storage="_PORCDetails", ThisKey="Company,PONO,Version,AmendmentNo,OrderLine,SKU,RCNO", OtherKey="Company,PONO,Version,AmendmentNo,OrderLine,SKU,RCNO")]
		public EntitySet<PORCDetail> PORCDetails
		{
			get
			{
				return this._PORCDetails;
			}
			set
			{
				this._PORCDetails.Assign(value);
			}
		}
		
		[Association(Name="POColorSizeDetail_PORC", Storage="_POColorSizeDetail", ThisKey="Company,PONO,Version,AmendmentNo,OrderLine,SKU", OtherKey="Company,PONO,Version,AmendmentNo,OrderLine,SKU", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public POColorSizeDetail POColorSizeDetail
		{
			get
			{
				return this._POColorSizeDetail.Entity;
			}
			set
			{
				POColorSizeDetail previousValue = this._POColorSizeDetail.Entity;
				if (((previousValue != value) 
							|| (this._POColorSizeDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._POColorSizeDetail.Entity = null;
						previousValue.PORCs.Remove(this);
					}
					this._POColorSizeDetail.Entity = value;
					if ((value != null))
					{
						value.PORCs.Add(this);
						this._Company = value.Company;
						this._PONO = value.PONO;
						this._Version = value.Version;
						this._AmendmentNo = value.AmendmentNo;
						this._OrderLine = value.OrderLine;
						this._SKU = value.SKU;
					}
					else
					{
						this._Company = default(string);
						this._PONO = default(string);
						this._Version = default(int);
						this._AmendmentNo = default(int);
						this._OrderLine = default(int);
						this._SKU = default(string);
					}
					this.SendPropertyChanged("POColorSizeDetail");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PORCDetails(PORCDetail entity)
		{
			this.SendPropertyChanging();
			entity.PORC = this;
		}
		
		private void detach_PORCDetails(PORCDetail entity)
		{
			this.SendPropertyChanging();
			entity.PORC = null;
		}
	}
	
	[Table(Name="dbo.PORCDetail")]
	public partial class PORCDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Company;
		
		private string _PONO;
		
		private int _Version;
		
		private int _AmendmentNo;
		
		private int _OrderLine;
		
		private string _SKU;
		
		private string _RCNO;
		
		private int _RCLine;
		
		private System.Nullable<bool> _VersionFlag;
		
		private string _LOTID;
		
		private System.Nullable<int> _GRNNo;
		
		private System.Nullable<decimal> _RCQty;
		
		private System.Nullable<decimal> _Useful;
		
		private string _StockRoom;
		
		private string _Reason;
		
		private System.Nullable<bool> _Replacement;
		
		private EntityRef<PORC> _PORC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnPONOChanging(string value);
    partial void OnPONOChanged();
    partial void OnVersionChanging(int value);
    partial void OnVersionChanged();
    partial void OnAmendmentNoChanging(int value);
    partial void OnAmendmentNoChanged();
    partial void OnOrderLineChanging(int value);
    partial void OnOrderLineChanged();
    partial void OnSKUChanging(string value);
    partial void OnSKUChanged();
    partial void OnRCNOChanging(string value);
    partial void OnRCNOChanged();
    partial void OnRCLineChanging(int value);
    partial void OnRCLineChanged();
    partial void OnVersionFlagChanging(System.Nullable<bool> value);
    partial void OnVersionFlagChanged();
    partial void OnLOTIDChanging(string value);
    partial void OnLOTIDChanged();
    partial void OnGRNNoChanging(System.Nullable<int> value);
    partial void OnGRNNoChanged();
    partial void OnRCQtyChanging(System.Nullable<decimal> value);
    partial void OnRCQtyChanged();
    partial void OnUsefulChanging(System.Nullable<decimal> value);
    partial void OnUsefulChanged();
    partial void OnStockRoomChanging(string value);
    partial void OnStockRoomChanged();
    partial void OnReasonChanging(string value);
    partial void OnReasonChanged();
    partial void OnReplacementChanging(System.Nullable<bool> value);
    partial void OnReplacementChanged();
    #endregion
		
		public PORCDetail()
		{
			this._PORC = default(EntityRef<PORC>);
			OnCreated();
		}
		
		[Column(Storage="_Company", DbType="VarChar(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					if (this._PORC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[Column(Storage="_PONO", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PONO
		{
			get
			{
				return this._PONO;
			}
			set
			{
				if ((this._PONO != value))
				{
					if (this._PORC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPONOChanging(value);
					this.SendPropertyChanging();
					this._PONO = value;
					this.SendPropertyChanged("PONO");
					this.OnPONOChanged();
				}
			}
		}
		
		[Column(Storage="_Version", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					if (this._PORC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[Column(Storage="_AmendmentNo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AmendmentNo
		{
			get
			{
				return this._AmendmentNo;
			}
			set
			{
				if ((this._AmendmentNo != value))
				{
					if (this._PORC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAmendmentNoChanging(value);
					this.SendPropertyChanging();
					this._AmendmentNo = value;
					this.SendPropertyChanged("AmendmentNo");
					this.OnAmendmentNoChanged();
				}
			}
		}
		
		[Column(Storage="_OrderLine", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int OrderLine
		{
			get
			{
				return this._OrderLine;
			}
			set
			{
				if ((this._OrderLine != value))
				{
					if (this._PORC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderLineChanging(value);
					this.SendPropertyChanging();
					this._OrderLine = value;
					this.SendPropertyChanged("OrderLine");
					this.OnOrderLineChanged();
				}
			}
		}
		
		[Column(Storage="_SKU", DbType="VarChar(32) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SKU
		{
			get
			{
				return this._SKU;
			}
			set
			{
				if ((this._SKU != value))
				{
					if (this._PORC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSKUChanging(value);
					this.SendPropertyChanging();
					this._SKU = value;
					this.SendPropertyChanged("SKU");
					this.OnSKUChanged();
				}
			}
		}
		
		[Column(Storage="_RCNO", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string RCNO
		{
			get
			{
				return this._RCNO;
			}
			set
			{
				if ((this._RCNO != value))
				{
					if (this._PORC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRCNOChanging(value);
					this.SendPropertyChanging();
					this._RCNO = value;
					this.SendPropertyChanged("RCNO");
					this.OnRCNOChanged();
				}
			}
		}
		
		[Column(Storage="_RCLine", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RCLine
		{
			get
			{
				return this._RCLine;
			}
			set
			{
				if ((this._RCLine != value))
				{
					this.OnRCLineChanging(value);
					this.SendPropertyChanging();
					this._RCLine = value;
					this.SendPropertyChanged("RCLine");
					this.OnRCLineChanged();
				}
			}
		}
		
		[Column(Storage="_VersionFlag", DbType="Bit")]
		public System.Nullable<bool> VersionFlag
		{
			get
			{
				return this._VersionFlag;
			}
			set
			{
				if ((this._VersionFlag != value))
				{
					this.OnVersionFlagChanging(value);
					this.SendPropertyChanging();
					this._VersionFlag = value;
					this.SendPropertyChanged("VersionFlag");
					this.OnVersionFlagChanged();
				}
			}
		}
		
		[Column(Storage="_LOTID", DbType="NVarChar(20)")]
		public string LOTID
		{
			get
			{
				return this._LOTID;
			}
			set
			{
				if ((this._LOTID != value))
				{
					this.OnLOTIDChanging(value);
					this.SendPropertyChanging();
					this._LOTID = value;
					this.SendPropertyChanged("LOTID");
					this.OnLOTIDChanged();
				}
			}
		}
		
		[Column(Storage="_GRNNo", DbType="Int")]
		public System.Nullable<int> GRNNo
		{
			get
			{
				return this._GRNNo;
			}
			set
			{
				if ((this._GRNNo != value))
				{
					this.OnGRNNoChanging(value);
					this.SendPropertyChanging();
					this._GRNNo = value;
					this.SendPropertyChanged("GRNNo");
					this.OnGRNNoChanged();
				}
			}
		}
		
		[Column(Storage="_RCQty", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> RCQty
		{
			get
			{
				return this._RCQty;
			}
			set
			{
				if ((this._RCQty != value))
				{
					this.OnRCQtyChanging(value);
					this.SendPropertyChanging();
					this._RCQty = value;
					this.SendPropertyChanged("RCQty");
					this.OnRCQtyChanged();
				}
			}
		}
		
		[Column(Storage="_Useful", DbType="Decimal(5,2)")]
		public System.Nullable<decimal> Useful
		{
			get
			{
				return this._Useful;
			}
			set
			{
				if ((this._Useful != value))
				{
					this.OnUsefulChanging(value);
					this.SendPropertyChanging();
					this._Useful = value;
					this.SendPropertyChanged("Useful");
					this.OnUsefulChanged();
				}
			}
		}
		
		[Column(Storage="_StockRoom", DbType="NVarChar(10)")]
		public string StockRoom
		{
			get
			{
				return this._StockRoom;
			}
			set
			{
				if ((this._StockRoom != value))
				{
					this.OnStockRoomChanging(value);
					this.SendPropertyChanging();
					this._StockRoom = value;
					this.SendPropertyChanged("StockRoom");
					this.OnStockRoomChanged();
				}
			}
		}
		
		[Column(Storage="_Reason", DbType="NVarChar(100)")]
		public string Reason
		{
			get
			{
				return this._Reason;
			}
			set
			{
				if ((this._Reason != value))
				{
					this.OnReasonChanging(value);
					this.SendPropertyChanging();
					this._Reason = value;
					this.SendPropertyChanged("Reason");
					this.OnReasonChanged();
				}
			}
		}
		
		[Column(Storage="_Replacement", DbType="Bit")]
		public System.Nullable<bool> Replacement
		{
			get
			{
				return this._Replacement;
			}
			set
			{
				if ((this._Replacement != value))
				{
					this.OnReplacementChanging(value);
					this.SendPropertyChanging();
					this._Replacement = value;
					this.SendPropertyChanged("Replacement");
					this.OnReplacementChanged();
				}
			}
		}
		
		[Association(Name="PORC_PORCDetail", Storage="_PORC", ThisKey="Company,PONO,Version,AmendmentNo,OrderLine,SKU,RCNO", OtherKey="Company,PONO,Version,AmendmentNo,OrderLine,SKU,RCNO", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public PORC PORC
		{
			get
			{
				return this._PORC.Entity;
			}
			set
			{
				PORC previousValue = this._PORC.Entity;
				if (((previousValue != value) 
							|| (this._PORC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PORC.Entity = null;
						previousValue.PORCDetails.Remove(this);
					}
					this._PORC.Entity = value;
					if ((value != null))
					{
						value.PORCDetails.Add(this);
						this._Company = value.Company;
						this._PONO = value.PONO;
						this._Version = value.Version;
						this._AmendmentNo = value.AmendmentNo;
						this._OrderLine = value.OrderLine;
						this._SKU = value.SKU;
						this._RCNO = value.RCNO;
					}
					else
					{
						this._Company = default(string);
						this._PONO = default(string);
						this._Version = default(int);
						this._AmendmentNo = default(int);
						this._OrderLine = default(int);
						this._SKU = default(string);
						this._RCNO = default(string);
					}
					this.SendPropertyChanged("PORC");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.View_Level1ColorDependent")]
	public partial class View_Level1ColorDependent
	{
		
		private string _POStatus;
		
		private string _OrderClassDesc;
		
		private System.Nullable<int> _OrderClass;
		
		private string _Factory;
		
		private string _Supplier;
		
		private string _SupplierLocation;
		
		private string _Company;
		
		private string _PONO;
		
		private int _Version;
		
		private int _AmendmentNo;
		
		private System.Nullable<System.DateTime> _POIssueDate;
		
		private string _ProjectNO;
		
		private string _EndCustCode;
		
		private string _CustStyleNo;
		
		private string _EndCustOrderNo;
		
		private string _GarmentColor;
		
		private System.Nullable<System.DateTime> _WOExftyDate;
		
		private string _ItemCode;
		
		private string _SupplierReference;
		
		private string _ColorCode;
		
		private string _ColorShade;
		
		private System.Nullable<decimal> _Qty;
		
		private System.Nullable<decimal> _PHOutstandingQty;
		
		private System.Nullable<double> _ConversionFactor;
		
		private string _SupplierUOM;
		
		private System.Nullable<System.DateTime> _POReqDeliveryDate;
		
		private System.Nullable<System.DateTime> _PODeliveryDate;
		
		private System.Nullable<int> _TimeFrame1;
		
		private System.Nullable<int> _TimeFrame2;
		
		private string _Incoterms;
		
		private string _TransitModePO;
		
		private string _TransitPoint;
		
		private string _EndPoint;
		
		private string _Team;
		
		private string _PurchaseOfficer;
		
		private string _BulkOption;
		
		private string _LadDipOption;
		
		private System.Nullable<char> _SampleApproval;
		
		private System.Nullable<int> _SampleSeq;
		
		private System.Nullable<System.DateTime> _SampleReceiptDate;
		
		private System.Nullable<System.DateTime> _SampleCompletedDate;
		
		private string _SampleStatus;
		
		private System.Nullable<int> _BulkSubmitSeq;
		
		private System.Nullable<System.DateTime> _BulkReceiptDate;
		
		private string _BulkSubmitNo;
		
		private System.Nullable<System.DateTime> _BulkCompletedDate;
		
		private string _BulkStatus;
		
		private System.Nullable<double> _BulkQty;
		
		private string _BulkRemark;
		
		private System.Nullable<System.DateTime> _BulkPHToCustDate;
		
		private string _BulkPHStatus;
		
		private System.Nullable<System.DateTime> _BulkSuppToCustDate;
		
		private System.Nullable<int> _ColorStdSeq;
		
		private System.Nullable<System.DateTime> _ColorStdReceiptDate;
		
		private System.Nullable<int> _DipSeq;
		
		private System.Nullable<System.DateTime> _DipReceiptDate;
		
		private System.Nullable<System.DateTime> _DipCompletedDate;
		
		private string _DipStatus;
		
		private string _DipRemark;
		
		private System.Nullable<System.DateTime> _DipPHToCustDate;
		
		private string _DipPHStatus;
		
		private System.Nullable<System.DateTime> _DipSuppToCustDate;
		
		private System.Nullable<char> _TestApproval;
		
		private System.Nullable<int> _TestSeq;
		
		private System.Nullable<System.DateTime> _TestReceiptDate;
		
		private System.Nullable<System.DateTime> _TestCompletedDate;
		
		private string _TestStatus;
		
		public View_Level1ColorDependent()
		{
		}
		
		[Column(Storage="_POStatus", DbType="VarChar(9) NOT NULL", CanBeNull=false)]
		public string POStatus
		{
			get
			{
				return this._POStatus;
			}
			set
			{
				if ((this._POStatus != value))
				{
					this._POStatus = value;
				}
			}
		}
		
		[Column(Storage="_OrderClassDesc", DbType="VarChar(13) NOT NULL", CanBeNull=false)]
		public string OrderClassDesc
		{
			get
			{
				return this._OrderClassDesc;
			}
			set
			{
				if ((this._OrderClassDesc != value))
				{
					this._OrderClassDesc = value;
				}
			}
		}
		
		[Column(Storage="_OrderClass", DbType="Int")]
		public System.Nullable<int> OrderClass
		{
			get
			{
				return this._OrderClass;
			}
			set
			{
				if ((this._OrderClass != value))
				{
					this._OrderClass = value;
				}
			}
		}
		
		[Column(Storage="_Factory", DbType="NVarChar(100)")]
		public string Factory
		{
			get
			{
				return this._Factory;
			}
			set
			{
				if ((this._Factory != value))
				{
					this._Factory = value;
				}
			}
		}
		
		[Column(Storage="_Supplier", DbType="NVarChar(50)")]
		public string Supplier
		{
			get
			{
				return this._Supplier;
			}
			set
			{
				if ((this._Supplier != value))
				{
					this._Supplier = value;
				}
			}
		}
		
		[Column(Storage="_SupplierLocation", DbType="NVarChar(100)")]
		public string SupplierLocation
		{
			get
			{
				return this._SupplierLocation;
			}
			set
			{
				if ((this._SupplierLocation != value))
				{
					this._SupplierLocation = value;
				}
			}
		}
		
		[Column(Storage="_Company", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this._Company = value;
				}
			}
		}
		
		[Column(Storage="_PONO", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string PONO
		{
			get
			{
				return this._PONO;
			}
			set
			{
				if ((this._PONO != value))
				{
					this._PONO = value;
				}
			}
		}
		
		[Column(Storage="_Version", DbType="Int NOT NULL")]
		public int Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this._Version = value;
				}
			}
		}
		
		[Column(Storage="_AmendmentNo", DbType="Int NOT NULL")]
		public int AmendmentNo
		{
			get
			{
				return this._AmendmentNo;
			}
			set
			{
				if ((this._AmendmentNo != value))
				{
					this._AmendmentNo = value;
				}
			}
		}
		
		[Column(Storage="_POIssueDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> POIssueDate
		{
			get
			{
				return this._POIssueDate;
			}
			set
			{
				if ((this._POIssueDate != value))
				{
					this._POIssueDate = value;
				}
			}
		}
		
		[Column(Storage="_ProjectNO", DbType="NVarChar(100)")]
		public string ProjectNO
		{
			get
			{
				return this._ProjectNO;
			}
			set
			{
				if ((this._ProjectNO != value))
				{
					this._ProjectNO = value;
				}
			}
		}
		
		[Column(Storage="_EndCustCode", DbType="NVarChar(50)")]
		public string EndCustCode
		{
			get
			{
				return this._EndCustCode;
			}
			set
			{
				if ((this._EndCustCode != value))
				{
					this._EndCustCode = value;
				}
			}
		}
		
		[Column(Storage="_CustStyleNo", DbType="NVarChar(1000)")]
		public string CustStyleNo
		{
			get
			{
				return this._CustStyleNo;
			}
			set
			{
				if ((this._CustStyleNo != value))
				{
					this._CustStyleNo = value;
				}
			}
		}
		
		[Column(Storage="_EndCustOrderNo", DbType="NVarChar(1000)")]
		public string EndCustOrderNo
		{
			get
			{
				return this._EndCustOrderNo;
			}
			set
			{
				if ((this._EndCustOrderNo != value))
				{
					this._EndCustOrderNo = value;
				}
			}
		}
		
		[Column(Storage="_GarmentColor", DbType="NVarChar(10)")]
		public string GarmentColor
		{
			get
			{
				return this._GarmentColor;
			}
			set
			{
				if ((this._GarmentColor != value))
				{
					this._GarmentColor = value;
				}
			}
		}
		
		[Column(Storage="_WOExftyDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> WOExftyDate
		{
			get
			{
				return this._WOExftyDate;
			}
			set
			{
				if ((this._WOExftyDate != value))
				{
					this._WOExftyDate = value;
				}
			}
		}
		
		[Column(Storage="_ItemCode", DbType="NVarChar(18) NOT NULL", CanBeNull=false)]
		public string ItemCode
		{
			get
			{
				return this._ItemCode;
			}
			set
			{
				if ((this._ItemCode != value))
				{
					this._ItemCode = value;
				}
			}
		}
		
		[Column(Storage="_SupplierReference", DbType="NVarChar(100)")]
		public string SupplierReference
		{
			get
			{
				return this._SupplierReference;
			}
			set
			{
				if ((this._SupplierReference != value))
				{
					this._SupplierReference = value;
				}
			}
		}
		
		[Column(Storage="_ColorCode", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string ColorCode
		{
			get
			{
				return this._ColorCode;
			}
			set
			{
				if ((this._ColorCode != value))
				{
					this._ColorCode = value;
				}
			}
		}
		
		[Column(Storage="_ColorShade", DbType="NVarChar(100)")]
		public string ColorShade
		{
			get
			{
				return this._ColorShade;
			}
			set
			{
				if ((this._ColorShade != value))
				{
					this._ColorShade = value;
				}
			}
		}
		
		[Column(Storage="_Qty", DbType="Decimal(38,3)")]
		public System.Nullable<decimal> Qty
		{
			get
			{
				return this._Qty;
			}
			set
			{
				if ((this._Qty != value))
				{
					this._Qty = value;
				}
			}
		}
		
		[Column(Storage="_PHOutstandingQty", DbType="Decimal(38,3)")]
		public System.Nullable<decimal> PHOutstandingQty
		{
			get
			{
				return this._PHOutstandingQty;
			}
			set
			{
				if ((this._PHOutstandingQty != value))
				{
					this._PHOutstandingQty = value;
				}
			}
		}
		
		[Column(Storage="_ConversionFactor", DbType="Float")]
		public System.Nullable<double> ConversionFactor
		{
			get
			{
				return this._ConversionFactor;
			}
			set
			{
				if ((this._ConversionFactor != value))
				{
					this._ConversionFactor = value;
				}
			}
		}
		
		[Column(Storage="_SupplierUOM", DbType="NVarChar(10)")]
		public string SupplierUOM
		{
			get
			{
				return this._SupplierUOM;
			}
			set
			{
				if ((this._SupplierUOM != value))
				{
					this._SupplierUOM = value;
				}
			}
		}
		
		[Column(Storage="_POReqDeliveryDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> POReqDeliveryDate
		{
			get
			{
				return this._POReqDeliveryDate;
			}
			set
			{
				if ((this._POReqDeliveryDate != value))
				{
					this._POReqDeliveryDate = value;
				}
			}
		}
		
		[Column(Storage="_PODeliveryDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PODeliveryDate
		{
			get
			{
				return this._PODeliveryDate;
			}
			set
			{
				if ((this._PODeliveryDate != value))
				{
					this._PODeliveryDate = value;
				}
			}
		}
		
		[Column(Storage="_TimeFrame1", DbType="Int")]
		public System.Nullable<int> TimeFrame1
		{
			get
			{
				return this._TimeFrame1;
			}
			set
			{
				if ((this._TimeFrame1 != value))
				{
					this._TimeFrame1 = value;
				}
			}
		}
		
		[Column(Storage="_TimeFrame2", DbType="Int")]
		public System.Nullable<int> TimeFrame2
		{
			get
			{
				return this._TimeFrame2;
			}
			set
			{
				if ((this._TimeFrame2 != value))
				{
					this._TimeFrame2 = value;
				}
			}
		}
		
		[Column(Storage="_Incoterms", DbType="NVarChar(10)")]
		public string Incoterms
		{
			get
			{
				return this._Incoterms;
			}
			set
			{
				if ((this._Incoterms != value))
				{
					this._Incoterms = value;
				}
			}
		}
		
		[Column(Storage="_TransitModePO", DbType="NVarChar(100)")]
		public string TransitModePO
		{
			get
			{
				return this._TransitModePO;
			}
			set
			{
				if ((this._TransitModePO != value))
				{
					this._TransitModePO = value;
				}
			}
		}
		
		[Column(Storage="_TransitPoint", DbType="NVarChar(100)")]
		public string TransitPoint
		{
			get
			{
				return this._TransitPoint;
			}
			set
			{
				if ((this._TransitPoint != value))
				{
					this._TransitPoint = value;
				}
			}
		}
		
		[Column(Storage="_EndPoint", DbType="NVarChar(100)")]
		public string EndPoint
		{
			get
			{
				return this._EndPoint;
			}
			set
			{
				if ((this._EndPoint != value))
				{
					this._EndPoint = value;
				}
			}
		}
		
		[Column(Storage="_Team", DbType="NVarChar(50)")]
		public string Team
		{
			get
			{
				return this._Team;
			}
			set
			{
				if ((this._Team != value))
				{
					this._Team = value;
				}
			}
		}
		
		[Column(Storage="_PurchaseOfficer", DbType="NVarChar(50)")]
		public string PurchaseOfficer
		{
			get
			{
				return this._PurchaseOfficer;
			}
			set
			{
				if ((this._PurchaseOfficer != value))
				{
					this._PurchaseOfficer = value;
				}
			}
		}
		
		[Column(Storage="_BulkOption", DbType="VarChar(5)")]
		public string BulkOption
		{
			get
			{
				return this._BulkOption;
			}
			set
			{
				if ((this._BulkOption != value))
				{
					this._BulkOption = value;
				}
			}
		}
		
		[Column(Storage="_LadDipOption", DbType="VarChar(5)")]
		public string LadDipOption
		{
			get
			{
				return this._LadDipOption;
			}
			set
			{
				if ((this._LadDipOption != value))
				{
					this._LadDipOption = value;
				}
			}
		}
		
		[Column(Storage="_SampleApproval", DbType="VarChar(1)")]
		public System.Nullable<char> SampleApproval
		{
			get
			{
				return this._SampleApproval;
			}
			set
			{
				if ((this._SampleApproval != value))
				{
					this._SampleApproval = value;
				}
			}
		}
		
		[Column(Storage="_SampleSeq", DbType="Int")]
		public System.Nullable<int> SampleSeq
		{
			get
			{
				return this._SampleSeq;
			}
			set
			{
				if ((this._SampleSeq != value))
				{
					this._SampleSeq = value;
				}
			}
		}
		
		[Column(Storage="_SampleReceiptDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SampleReceiptDate
		{
			get
			{
				return this._SampleReceiptDate;
			}
			set
			{
				if ((this._SampleReceiptDate != value))
				{
					this._SampleReceiptDate = value;
				}
			}
		}
		
		[Column(Storage="_SampleCompletedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SampleCompletedDate
		{
			get
			{
				return this._SampleCompletedDate;
			}
			set
			{
				if ((this._SampleCompletedDate != value))
				{
					this._SampleCompletedDate = value;
				}
			}
		}
		
		[Column(Storage="_SampleStatus", DbType="NVarChar(40)")]
		public string SampleStatus
		{
			get
			{
				return this._SampleStatus;
			}
			set
			{
				if ((this._SampleStatus != value))
				{
					this._SampleStatus = value;
				}
			}
		}
		
		[Column(Storage="_BulkSubmitSeq", DbType="Int")]
		public System.Nullable<int> BulkSubmitSeq
		{
			get
			{
				return this._BulkSubmitSeq;
			}
			set
			{
				if ((this._BulkSubmitSeq != value))
				{
					this._BulkSubmitSeq = value;
				}
			}
		}
		
		[Column(Storage="_BulkReceiptDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> BulkReceiptDate
		{
			get
			{
				return this._BulkReceiptDate;
			}
			set
			{
				if ((this._BulkReceiptDate != value))
				{
					this._BulkReceiptDate = value;
				}
			}
		}
		
		[Column(Storage="_BulkSubmitNo", DbType="NVarChar(200)")]
		public string BulkSubmitNo
		{
			get
			{
				return this._BulkSubmitNo;
			}
			set
			{
				if ((this._BulkSubmitNo != value))
				{
					this._BulkSubmitNo = value;
				}
			}
		}
		
		[Column(Storage="_BulkCompletedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> BulkCompletedDate
		{
			get
			{
				return this._BulkCompletedDate;
			}
			set
			{
				if ((this._BulkCompletedDate != value))
				{
					this._BulkCompletedDate = value;
				}
			}
		}
		
		[Column(Storage="_BulkStatus", DbType="NVarChar(50)")]
		public string BulkStatus
		{
			get
			{
				return this._BulkStatus;
			}
			set
			{
				if ((this._BulkStatus != value))
				{
					this._BulkStatus = value;
				}
			}
		}
		
		[Column(Storage="_BulkQty", DbType="Float")]
		public System.Nullable<double> BulkQty
		{
			get
			{
				return this._BulkQty;
			}
			set
			{
				if ((this._BulkQty != value))
				{
					this._BulkQty = value;
				}
			}
		}
		
		[Column(Storage="_BulkRemark", DbType="NVarChar(500)")]
		public string BulkRemark
		{
			get
			{
				return this._BulkRemark;
			}
			set
			{
				if ((this._BulkRemark != value))
				{
					this._BulkRemark = value;
				}
			}
		}
		
		[Column(Storage="_BulkPHToCustDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> BulkPHToCustDate
		{
			get
			{
				return this._BulkPHToCustDate;
			}
			set
			{
				if ((this._BulkPHToCustDate != value))
				{
					this._BulkPHToCustDate = value;
				}
			}
		}
		
		[Column(Storage="_BulkPHStatus", DbType="NVarChar(40)")]
		public string BulkPHStatus
		{
			get
			{
				return this._BulkPHStatus;
			}
			set
			{
				if ((this._BulkPHStatus != value))
				{
					this._BulkPHStatus = value;
				}
			}
		}
		
		[Column(Storage="_BulkSuppToCustDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> BulkSuppToCustDate
		{
			get
			{
				return this._BulkSuppToCustDate;
			}
			set
			{
				if ((this._BulkSuppToCustDate != value))
				{
					this._BulkSuppToCustDate = value;
				}
			}
		}
		
		[Column(Storage="_ColorStdSeq", DbType="Int")]
		public System.Nullable<int> ColorStdSeq
		{
			get
			{
				return this._ColorStdSeq;
			}
			set
			{
				if ((this._ColorStdSeq != value))
				{
					this._ColorStdSeq = value;
				}
			}
		}
		
		[Column(Storage="_ColorStdReceiptDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ColorStdReceiptDate
		{
			get
			{
				return this._ColorStdReceiptDate;
			}
			set
			{
				if ((this._ColorStdReceiptDate != value))
				{
					this._ColorStdReceiptDate = value;
				}
			}
		}
		
		[Column(Storage="_DipSeq", DbType="Int")]
		public System.Nullable<int> DipSeq
		{
			get
			{
				return this._DipSeq;
			}
			set
			{
				if ((this._DipSeq != value))
				{
					this._DipSeq = value;
				}
			}
		}
		
		[Column(Storage="_DipReceiptDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DipReceiptDate
		{
			get
			{
				return this._DipReceiptDate;
			}
			set
			{
				if ((this._DipReceiptDate != value))
				{
					this._DipReceiptDate = value;
				}
			}
		}
		
		[Column(Storage="_DipCompletedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DipCompletedDate
		{
			get
			{
				return this._DipCompletedDate;
			}
			set
			{
				if ((this._DipCompletedDate != value))
				{
					this._DipCompletedDate = value;
				}
			}
		}
		
		[Column(Storage="_DipStatus", DbType="NVarChar(50)")]
		public string DipStatus
		{
			get
			{
				return this._DipStatus;
			}
			set
			{
				if ((this._DipStatus != value))
				{
					this._DipStatus = value;
				}
			}
		}
		
		[Column(Storage="_DipRemark", DbType="NVarChar(500)")]
		public string DipRemark
		{
			get
			{
				return this._DipRemark;
			}
			set
			{
				if ((this._DipRemark != value))
				{
					this._DipRemark = value;
				}
			}
		}
		
		[Column(Storage="_DipPHToCustDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DipPHToCustDate
		{
			get
			{
				return this._DipPHToCustDate;
			}
			set
			{
				if ((this._DipPHToCustDate != value))
				{
					this._DipPHToCustDate = value;
				}
			}
		}
		
		[Column(Storage="_DipPHStatus", DbType="NVarChar(40)")]
		public string DipPHStatus
		{
			get
			{
				return this._DipPHStatus;
			}
			set
			{
				if ((this._DipPHStatus != value))
				{
					this._DipPHStatus = value;
				}
			}
		}
		
		[Column(Storage="_DipSuppToCustDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DipSuppToCustDate
		{
			get
			{
				return this._DipSuppToCustDate;
			}
			set
			{
				if ((this._DipSuppToCustDate != value))
				{
					this._DipSuppToCustDate = value;
				}
			}
		}
		
		[Column(Storage="_TestApproval", DbType="VarChar(1)")]
		public System.Nullable<char> TestApproval
		{
			get
			{
				return this._TestApproval;
			}
			set
			{
				if ((this._TestApproval != value))
				{
					this._TestApproval = value;
				}
			}
		}
		
		[Column(Storage="_TestSeq", DbType="Int")]
		public System.Nullable<int> TestSeq
		{
			get
			{
				return this._TestSeq;
			}
			set
			{
				if ((this._TestSeq != value))
				{
					this._TestSeq = value;
				}
			}
		}
		
		[Column(Storage="_TestReceiptDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> TestReceiptDate
		{
			get
			{
				return this._TestReceiptDate;
			}
			set
			{
				if ((this._TestReceiptDate != value))
				{
					this._TestReceiptDate = value;
				}
			}
		}
		
		[Column(Storage="_TestCompletedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> TestCompletedDate
		{
			get
			{
				return this._TestCompletedDate;
			}
			set
			{
				if ((this._TestCompletedDate != value))
				{
					this._TestCompletedDate = value;
				}
			}
		}
		
		[Column(Storage="_TestStatus", DbType="NVarChar(40)")]
		public string TestStatus
		{
			get
			{
				return this._TestStatus;
			}
			set
			{
				if ((this._TestStatus != value))
				{
					this._TestStatus = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.POLadDipNoPO")]
	public partial class POLadDipNoPO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _EndCustomer;
		
		private string _ProjectNo;
		
		private System.Nullable<System.DateTime> _ReceiveDate;
		
		private System.Nullable<System.DateTime> _CompleteDate;
		
		private string _Supplier;
		
		private string _SuppRef;
		
		private string _ColorCode;
		
		private string _ColorName;
		
		private string _CustColor;
		
		private string _ColorShade;
		
		private System.Nullable<int> _SubmitNo;
		
		private string _LadDipNo;
		
		private string _Status;
		
		private string _Remark;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _BrandName;
		
		private string _CustStyle;
		
		private string _CustColorName;
		
		private string _Comments;
		
		private string _PONO;
		
		private string _ItemCode;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnEndCustomerChanging(string value);
    partial void OnEndCustomerChanged();
    partial void OnProjectNoChanging(string value);
    partial void OnProjectNoChanged();
    partial void OnReceiveDateChanging(System.Nullable<System.DateTime> value);
    partial void OnReceiveDateChanged();
    partial void OnCompleteDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCompleteDateChanged();
    partial void OnSupplierChanging(string value);
    partial void OnSupplierChanged();
    partial void OnSuppRefChanging(string value);
    partial void OnSuppRefChanged();
    partial void OnColorCodeChanging(string value);
    partial void OnColorCodeChanged();
    partial void OnColorNameChanging(string value);
    partial void OnColorNameChanged();
    partial void OnCustColorChanging(string value);
    partial void OnCustColorChanged();
    partial void OnColorShadeChanging(string value);
    partial void OnColorShadeChanged();
    partial void OnSubmitNoChanging(System.Nullable<int> value);
    partial void OnSubmitNoChanged();
    partial void OnLadDipNoChanging(string value);
    partial void OnLadDipNoChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnBrandNameChanging(string value);
    partial void OnBrandNameChanged();
    partial void OnCustStyleChanging(string value);
    partial void OnCustStyleChanged();
    partial void OnCustColorNameChanging(string value);
    partial void OnCustColorNameChanged();
    partial void OnCommentsChanging(string value);
    partial void OnCommentsChanged();
    partial void OnPONOChanging(string value);
    partial void OnPONOChanged();
    partial void OnItemCodeChanging(string value);
    partial void OnItemCodeChanged();
    #endregion
		
		public POLadDipNoPO()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_EndCustomer", DbType="VarChar(50)")]
		public string EndCustomer
		{
			get
			{
				return this._EndCustomer;
			}
			set
			{
				if ((this._EndCustomer != value))
				{
					this.OnEndCustomerChanging(value);
					this.SendPropertyChanging();
					this._EndCustomer = value;
					this.SendPropertyChanged("EndCustomer");
					this.OnEndCustomerChanged();
				}
			}
		}
		
		[Column(Storage="_ProjectNo", DbType="VarChar(50)")]
		public string ProjectNo
		{
			get
			{
				return this._ProjectNo;
			}
			set
			{
				if ((this._ProjectNo != value))
				{
					this.OnProjectNoChanging(value);
					this.SendPropertyChanging();
					this._ProjectNo = value;
					this.SendPropertyChanged("ProjectNo");
					this.OnProjectNoChanged();
				}
			}
		}
		
		[Column(Storage="_ReceiveDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ReceiveDate
		{
			get
			{
				return this._ReceiveDate;
			}
			set
			{
				if ((this._ReceiveDate != value))
				{
					this.OnReceiveDateChanging(value);
					this.SendPropertyChanging();
					this._ReceiveDate = value;
					this.SendPropertyChanged("ReceiveDate");
					this.OnReceiveDateChanged();
				}
			}
		}
		
		[Column(Storage="_CompleteDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompleteDate
		{
			get
			{
				return this._CompleteDate;
			}
			set
			{
				if ((this._CompleteDate != value))
				{
					this.OnCompleteDateChanging(value);
					this.SendPropertyChanging();
					this._CompleteDate = value;
					this.SendPropertyChanged("CompleteDate");
					this.OnCompleteDateChanged();
				}
			}
		}
		
		[Column(Storage="_Supplier", DbType="VarChar(50)")]
		public string Supplier
		{
			get
			{
				return this._Supplier;
			}
			set
			{
				if ((this._Supplier != value))
				{
					this.OnSupplierChanging(value);
					this.SendPropertyChanging();
					this._Supplier = value;
					this.SendPropertyChanged("Supplier");
					this.OnSupplierChanged();
				}
			}
		}
		
		[Column(Storage="_SuppRef", DbType="VarChar(50)")]
		public string SuppRef
		{
			get
			{
				return this._SuppRef;
			}
			set
			{
				if ((this._SuppRef != value))
				{
					this.OnSuppRefChanging(value);
					this.SendPropertyChanging();
					this._SuppRef = value;
					this.SendPropertyChanged("SuppRef");
					this.OnSuppRefChanged();
				}
			}
		}
		
		[Column(Storage="_ColorCode", DbType="VarChar(50)")]
		public string ColorCode
		{
			get
			{
				return this._ColorCode;
			}
			set
			{
				if ((this._ColorCode != value))
				{
					this.OnColorCodeChanging(value);
					this.SendPropertyChanging();
					this._ColorCode = value;
					this.SendPropertyChanged("ColorCode");
					this.OnColorCodeChanged();
				}
			}
		}
		
		[Column(Storage="_ColorName", DbType="VarChar(50)")]
		public string ColorName
		{
			get
			{
				return this._ColorName;
			}
			set
			{
				if ((this._ColorName != value))
				{
					this.OnColorNameChanging(value);
					this.SendPropertyChanging();
					this._ColorName = value;
					this.SendPropertyChanged("ColorName");
					this.OnColorNameChanged();
				}
			}
		}
		
		[Column(Storage="_CustColor", DbType="VarChar(50)")]
		public string CustColor
		{
			get
			{
				return this._CustColor;
			}
			set
			{
				if ((this._CustColor != value))
				{
					this.OnCustColorChanging(value);
					this.SendPropertyChanging();
					this._CustColor = value;
					this.SendPropertyChanged("CustColor");
					this.OnCustColorChanged();
				}
			}
		}
		
		[Column(Storage="_ColorShade", DbType="VarChar(50)")]
		public string ColorShade
		{
			get
			{
				return this._ColorShade;
			}
			set
			{
				if ((this._ColorShade != value))
				{
					this.OnColorShadeChanging(value);
					this.SendPropertyChanging();
					this._ColorShade = value;
					this.SendPropertyChanged("ColorShade");
					this.OnColorShadeChanged();
				}
			}
		}
		
		[Column(Storage="_SubmitNo", DbType="Int")]
		public System.Nullable<int> SubmitNo
		{
			get
			{
				return this._SubmitNo;
			}
			set
			{
				if ((this._SubmitNo != value))
				{
					this.OnSubmitNoChanging(value);
					this.SendPropertyChanging();
					this._SubmitNo = value;
					this.SendPropertyChanged("SubmitNo");
					this.OnSubmitNoChanged();
				}
			}
		}
		
		[Column(Storage="_LadDipNo", DbType="VarChar(50)")]
		public string LadDipNo
		{
			get
			{
				return this._LadDipNo;
			}
			set
			{
				if ((this._LadDipNo != value))
				{
					this.OnLadDipNoChanging(value);
					this.SendPropertyChanging();
					this._LadDipNo = value;
					this.SendPropertyChanged("LadDipNo");
					this.OnLadDipNoChanged();
				}
			}
		}
		
		[Column(Storage="_Status", DbType="VarChar(50)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[Column(Storage="_Remark", DbType="NVarChar(500)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[Column(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[Column(Storage="_BrandName", DbType="VarChar(50)")]
		public string BrandName
		{
			get
			{
				return this._BrandName;
			}
			set
			{
				if ((this._BrandName != value))
				{
					this.OnBrandNameChanging(value);
					this.SendPropertyChanging();
					this._BrandName = value;
					this.SendPropertyChanged("BrandName");
					this.OnBrandNameChanged();
				}
			}
		}
		
		[Column(Storage="_CustStyle", DbType="VarChar(50)")]
		public string CustStyle
		{
			get
			{
				return this._CustStyle;
			}
			set
			{
				if ((this._CustStyle != value))
				{
					this.OnCustStyleChanging(value);
					this.SendPropertyChanging();
					this._CustStyle = value;
					this.SendPropertyChanged("CustStyle");
					this.OnCustStyleChanged();
				}
			}
		}
		
		[Column(Storage="_CustColorName", DbType="VarChar(50)")]
		public string CustColorName
		{
			get
			{
				return this._CustColorName;
			}
			set
			{
				if ((this._CustColorName != value))
				{
					this.OnCustColorNameChanging(value);
					this.SendPropertyChanging();
					this._CustColorName = value;
					this.SendPropertyChanged("CustColorName");
					this.OnCustColorNameChanged();
				}
			}
		}
		
		[Column(Storage="_Comments", DbType="NVarChar(500)")]
		public string Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				if ((this._Comments != value))
				{
					this.OnCommentsChanging(value);
					this.SendPropertyChanging();
					this._Comments = value;
					this.SendPropertyChanged("Comments");
					this.OnCommentsChanged();
				}
			}
		}
		
		[Column(Storage="_PONO", DbType="VarChar(20)")]
		public string PONO
		{
			get
			{
				return this._PONO;
			}
			set
			{
				if ((this._PONO != value))
				{
					this.OnPONOChanging(value);
					this.SendPropertyChanging();
					this._PONO = value;
					this.SendPropertyChanged("PONO");
					this.OnPONOChanged();
				}
			}
		}
		
		[Column(Storage="_ItemCode", DbType="VarChar(10)")]
		public string ItemCode
		{
			get
			{
				return this._ItemCode;
			}
			set
			{
				if ((this._ItemCode != value))
				{
					this.OnItemCodeChanging(value);
					this.SendPropertyChanging();
					this._ItemCode = value;
					this.SendPropertyChanged("ItemCode");
					this.OnItemCodeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.POEmail")]
	public partial class POEmail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UserName;
		
		private string _Email;
		
		private string _Division;
		
		private string _Customer;
		
		private string _Supplier;
		
		private string _SubContractor;
		
		private System.Nullable<int> _Flag;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnDivisionChanging(string value);
    partial void OnDivisionChanged();
    partial void OnCustomerChanging(string value);
    partial void OnCustomerChanged();
    partial void OnSupplierChanging(string value);
    partial void OnSupplierChanged();
    partial void OnSubContractorChanging(string value);
    partial void OnSubContractorChanged();
    partial void OnFlagChanging(System.Nullable<int> value);
    partial void OnFlagChanged();
    #endregion
		
		public POEmail()
		{
			OnCreated();
		}
		
		[Column(Storage="_UserName", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[Column(Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[Column(Storage="_Division", DbType="NVarChar(50)")]
		public string Division
		{
			get
			{
				return this._Division;
			}
			set
			{
				if ((this._Division != value))
				{
					this.OnDivisionChanging(value);
					this.SendPropertyChanging();
					this._Division = value;
					this.SendPropertyChanged("Division");
					this.OnDivisionChanged();
				}
			}
		}
		
		[Column(Storage="_Customer", DbType="NVarChar(200)")]
		public string Customer
		{
			get
			{
				return this._Customer;
			}
			set
			{
				if ((this._Customer != value))
				{
					this.OnCustomerChanging(value);
					this.SendPropertyChanging();
					this._Customer = value;
					this.SendPropertyChanged("Customer");
					this.OnCustomerChanged();
				}
			}
		}
		
		[Column(Storage="_Supplier", DbType="NVarChar(200)")]
		public string Supplier
		{
			get
			{
				return this._Supplier;
			}
			set
			{
				if ((this._Supplier != value))
				{
					this.OnSupplierChanging(value);
					this.SendPropertyChanging();
					this._Supplier = value;
					this.SendPropertyChanged("Supplier");
					this.OnSupplierChanged();
				}
			}
		}
		
		[Column(Storage="_SubContractor", DbType="NVarChar(200)")]
		public string SubContractor
		{
			get
			{
				return this._SubContractor;
			}
			set
			{
				if ((this._SubContractor != value))
				{
					this.OnSubContractorChanging(value);
					this.SendPropertyChanging();
					this._SubContractor = value;
					this.SendPropertyChanged("SubContractor");
					this.OnSubContractorChanged();
				}
			}
		}
		
		[Column(Storage="_Flag", DbType="Int")]
		public System.Nullable<int> Flag
		{
			get
			{
				return this._Flag;
			}
			set
			{
				if ((this._Flag != value))
				{
					this.OnFlagChanging(value);
					this.SendPropertyChanging();
					this._Flag = value;
					this.SendPropertyChanged("Flag");
					this.OnFlagChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.PONotifyPO")]
	public partial class PONotifyPO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.DateTime _DT;
		
		private string _PONO;
		
		private int _OrderLine;
		
		private string _SKU;
		
		private int _SplitNo;
		
		private string _ProjectNo;
		
		private string _Supplier;
		
		private string _EndCustCode;
		
		private EntityRef<PONotify> _PONotify;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDTChanging(System.DateTime value);
    partial void OnDTChanged();
    partial void OnPONOChanging(string value);
    partial void OnPONOChanged();
    partial void OnOrderLineChanging(int value);
    partial void OnOrderLineChanged();
    partial void OnSKUChanging(string value);
    partial void OnSKUChanged();
    partial void OnSplitNoChanging(int value);
    partial void OnSplitNoChanged();
    partial void OnProjectNoChanging(string value);
    partial void OnProjectNoChanged();
    partial void OnSupplierChanging(string value);
    partial void OnSupplierChanged();
    partial void OnEndCustCodeChanging(string value);
    partial void OnEndCustCodeChanged();
    #endregion
		
		public PONotifyPO()
		{
			this._PONotify = default(EntityRef<PONotify>);
			OnCreated();
		}
		
		[Column(Storage="_DT", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime DT
		{
			get
			{
				return this._DT;
			}
			set
			{
				if ((this._DT != value))
				{
					if (this._PONotify.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDTChanging(value);
					this.SendPropertyChanging();
					this._DT = value;
					this.SendPropertyChanged("DT");
					this.OnDTChanged();
				}
			}
		}
		
		[Column(Storage="_PONO", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PONO
		{
			get
			{
				return this._PONO;
			}
			set
			{
				if ((this._PONO != value))
				{
					this.OnPONOChanging(value);
					this.SendPropertyChanging();
					this._PONO = value;
					this.SendPropertyChanged("PONO");
					this.OnPONOChanged();
				}
			}
		}
		
		[Column(Storage="_OrderLine", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int OrderLine
		{
			get
			{
				return this._OrderLine;
			}
			set
			{
				if ((this._OrderLine != value))
				{
					this.OnOrderLineChanging(value);
					this.SendPropertyChanging();
					this._OrderLine = value;
					this.SendPropertyChanged("OrderLine");
					this.OnOrderLineChanged();
				}
			}
		}
		
		[Column(Storage="_SKU", DbType="VarChar(32) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SKU
		{
			get
			{
				return this._SKU;
			}
			set
			{
				if ((this._SKU != value))
				{
					this.OnSKUChanging(value);
					this.SendPropertyChanging();
					this._SKU = value;
					this.SendPropertyChanged("SKU");
					this.OnSKUChanged();
				}
			}
		}
		
		[Column(Storage="_SplitNo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SplitNo
		{
			get
			{
				return this._SplitNo;
			}
			set
			{
				if ((this._SplitNo != value))
				{
					this.OnSplitNoChanging(value);
					this.SendPropertyChanging();
					this._SplitNo = value;
					this.SendPropertyChanged("SplitNo");
					this.OnSplitNoChanged();
				}
			}
		}
		
		[Column(Storage="_ProjectNo", DbType="VarChar(20)")]
		public string ProjectNo
		{
			get
			{
				return this._ProjectNo;
			}
			set
			{
				if ((this._ProjectNo != value))
				{
					this.OnProjectNoChanging(value);
					this.SendPropertyChanging();
					this._ProjectNo = value;
					this.SendPropertyChanged("ProjectNo");
					this.OnProjectNoChanged();
				}
			}
		}
		
		[Column(Storage="_Supplier", DbType="VarChar(20)")]
		public string Supplier
		{
			get
			{
				return this._Supplier;
			}
			set
			{
				if ((this._Supplier != value))
				{
					this.OnSupplierChanging(value);
					this.SendPropertyChanging();
					this._Supplier = value;
					this.SendPropertyChanged("Supplier");
					this.OnSupplierChanged();
				}
			}
		}
		
		[Column(Storage="_EndCustCode", DbType="VarChar(20)")]
		public string EndCustCode
		{
			get
			{
				return this._EndCustCode;
			}
			set
			{
				if ((this._EndCustCode != value))
				{
					this.OnEndCustCodeChanging(value);
					this.SendPropertyChanging();
					this._EndCustCode = value;
					this.SendPropertyChanged("EndCustCode");
					this.OnEndCustCodeChanged();
				}
			}
		}
		
		[Association(Name="PONotify_PONotifyPO", Storage="_PONotify", ThisKey="DT", OtherKey="DT", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public PONotify PONotify
		{
			get
			{
				return this._PONotify.Entity;
			}
			set
			{
				PONotify previousValue = this._PONotify.Entity;
				if (((previousValue != value) 
							|| (this._PONotify.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PONotify.Entity = null;
						previousValue.PONotifyPOs.Remove(this);
					}
					this._PONotify.Entity = value;
					if ((value != null))
					{
						value.PONotifyPOs.Add(this);
						this._DT = value.DT;
					}
					else
					{
						this._DT = default(System.DateTime);
					}
					this.SendPropertyChanged("PONotify");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.PONotify")]
	public partial class PONotify : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.DateTime _DT;
		
		private string _Sender;
		
		private System.Nullable<int> _Amendment;
		
		private System.Nullable<bool> _IsInternal;
		
		private System.Nullable<int> _Classification;
		
		private string _Division;
		
		private string _Customer;
		
		private string _Supplier;
		
		private string _SubContractor;
		
		private string _HappeningEvent;
		
		private string _Subject;
		
		private string _Notepad;
		
		private string _NotepadNo;
		
		private string _ToEmail;
		
		private string _CcEmail;
		
		private EntitySet<PONotifyPO> _PONotifyPOs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDTChanging(System.DateTime value);
    partial void OnDTChanged();
    partial void OnSenderChanging(string value);
    partial void OnSenderChanged();
    partial void OnAmendmentChanging(System.Nullable<int> value);
    partial void OnAmendmentChanged();
    partial void OnIsInternalChanging(System.Nullable<bool> value);
    partial void OnIsInternalChanged();
    partial void OnClassificationChanging(System.Nullable<int> value);
    partial void OnClassificationChanged();
    partial void OnDivisionChanging(string value);
    partial void OnDivisionChanged();
    partial void OnCustomerChanging(string value);
    partial void OnCustomerChanged();
    partial void OnSupplierChanging(string value);
    partial void OnSupplierChanged();
    partial void OnSubContractorChanging(string value);
    partial void OnSubContractorChanged();
    partial void OnHappeningEventChanging(string value);
    partial void OnHappeningEventChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnNotepadChanging(string value);
    partial void OnNotepadChanged();
    partial void OnNotepadNoChanging(string value);
    partial void OnNotepadNoChanged();
    partial void OnToEmailChanging(string value);
    partial void OnToEmailChanged();
    partial void OnCcEmailChanging(string value);
    partial void OnCcEmailChanged();
    #endregion
		
		public PONotify()
		{
			this._PONotifyPOs = new EntitySet<PONotifyPO>(new Action<PONotifyPO>(this.attach_PONotifyPOs), new Action<PONotifyPO>(this.detach_PONotifyPOs));
			OnCreated();
		}
		
		[Column(Storage="_DT", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime DT
		{
			get
			{
				return this._DT;
			}
			set
			{
				if ((this._DT != value))
				{
					this.OnDTChanging(value);
					this.SendPropertyChanging();
					this._DT = value;
					this.SendPropertyChanged("DT");
					this.OnDTChanged();
				}
			}
		}
		
		[Column(Storage="_Sender", DbType="NVarChar(50)")]
		public string Sender
		{
			get
			{
				return this._Sender;
			}
			set
			{
				if ((this._Sender != value))
				{
					this.OnSenderChanging(value);
					this.SendPropertyChanging();
					this._Sender = value;
					this.SendPropertyChanged("Sender");
					this.OnSenderChanged();
				}
			}
		}
		
		[Column(Storage="_Amendment", DbType="Int")]
		public System.Nullable<int> Amendment
		{
			get
			{
				return this._Amendment;
			}
			set
			{
				if ((this._Amendment != value))
				{
					this.OnAmendmentChanging(value);
					this.SendPropertyChanging();
					this._Amendment = value;
					this.SendPropertyChanged("Amendment");
					this.OnAmendmentChanged();
				}
			}
		}
		
		[Column(Storage="_IsInternal", DbType="Bit")]
		public System.Nullable<bool> IsInternal
		{
			get
			{
				return this._IsInternal;
			}
			set
			{
				if ((this._IsInternal != value))
				{
					this.OnIsInternalChanging(value);
					this.SendPropertyChanging();
					this._IsInternal = value;
					this.SendPropertyChanged("IsInternal");
					this.OnIsInternalChanged();
				}
			}
		}
		
		[Column(Storage="_Classification", DbType="Int")]
		public System.Nullable<int> Classification
		{
			get
			{
				return this._Classification;
			}
			set
			{
				if ((this._Classification != value))
				{
					this.OnClassificationChanging(value);
					this.SendPropertyChanging();
					this._Classification = value;
					this.SendPropertyChanged("Classification");
					this.OnClassificationChanged();
				}
			}
		}
		
		[Column(Storage="_Division", DbType="NVarChar(5)")]
		public string Division
		{
			get
			{
				return this._Division;
			}
			set
			{
				if ((this._Division != value))
				{
					this.OnDivisionChanging(value);
					this.SendPropertyChanging();
					this._Division = value;
					this.SendPropertyChanged("Division");
					this.OnDivisionChanged();
				}
			}
		}
		
		[Column(Storage="_Customer", DbType="VarChar(50)")]
		public string Customer
		{
			get
			{
				return this._Customer;
			}
			set
			{
				if ((this._Customer != value))
				{
					this.OnCustomerChanging(value);
					this.SendPropertyChanging();
					this._Customer = value;
					this.SendPropertyChanged("Customer");
					this.OnCustomerChanged();
				}
			}
		}
		
		[Column(Storage="_Supplier", DbType="VarChar(50)")]
		public string Supplier
		{
			get
			{
				return this._Supplier;
			}
			set
			{
				if ((this._Supplier != value))
				{
					this.OnSupplierChanging(value);
					this.SendPropertyChanging();
					this._Supplier = value;
					this.SendPropertyChanged("Supplier");
					this.OnSupplierChanged();
				}
			}
		}
		
		[Column(Storage="_SubContractor", DbType="VarChar(50)")]
		public string SubContractor
		{
			get
			{
				return this._SubContractor;
			}
			set
			{
				if ((this._SubContractor != value))
				{
					this.OnSubContractorChanging(value);
					this.SendPropertyChanging();
					this._SubContractor = value;
					this.SendPropertyChanged("SubContractor");
					this.OnSubContractorChanged();
				}
			}
		}
		
		[Column(Storage="_HappeningEvent", DbType="NVarChar(100)")]
		public string HappeningEvent
		{
			get
			{
				return this._HappeningEvent;
			}
			set
			{
				if ((this._HappeningEvent != value))
				{
					this.OnHappeningEventChanging(value);
					this.SendPropertyChanging();
					this._HappeningEvent = value;
					this.SendPropertyChanged("HappeningEvent");
					this.OnHappeningEventChanged();
				}
			}
		}
		
		[Column(Storage="_Subject", DbType="NVarChar(500)")]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged("Subject");
					this.OnSubjectChanged();
				}
			}
		}
		
		[Column(Storage="_Notepad", DbType="NVarChar(4000)")]
		public string Notepad
		{
			get
			{
				return this._Notepad;
			}
			set
			{
				if ((this._Notepad != value))
				{
					this.OnNotepadChanging(value);
					this.SendPropertyChanging();
					this._Notepad = value;
					this.SendPropertyChanged("Notepad");
					this.OnNotepadChanged();
				}
			}
		}
		
		[Column(Storage="_NotepadNo", DbType="VarChar(20)")]
		public string NotepadNo
		{
			get
			{
				return this._NotepadNo;
			}
			set
			{
				if ((this._NotepadNo != value))
				{
					this.OnNotepadNoChanging(value);
					this.SendPropertyChanging();
					this._NotepadNo = value;
					this.SendPropertyChanged("NotepadNo");
					this.OnNotepadNoChanged();
				}
			}
		}
		
		[Column(Storage="_ToEmail", DbType="NVarChar(2000)")]
		public string ToEmail
		{
			get
			{
				return this._ToEmail;
			}
			set
			{
				if ((this._ToEmail != value))
				{
					this.OnToEmailChanging(value);
					this.SendPropertyChanging();
					this._ToEmail = value;
					this.SendPropertyChanged("ToEmail");
					this.OnToEmailChanged();
				}
			}
		}
		
		[Column(Storage="_CcEmail", DbType="NVarChar(2000)")]
		public string CcEmail
		{
			get
			{
				return this._CcEmail;
			}
			set
			{
				if ((this._CcEmail != value))
				{
					this.OnCcEmailChanging(value);
					this.SendPropertyChanging();
					this._CcEmail = value;
					this.SendPropertyChanged("CcEmail");
					this.OnCcEmailChanged();
				}
			}
		}
		
		[Association(Name="PONotify_PONotifyPO", Storage="_PONotifyPOs", ThisKey="DT", OtherKey="DT")]
		public EntitySet<PONotifyPO> PONotifyPOs
		{
			get
			{
				return this._PONotifyPOs;
			}
			set
			{
				this._PONotifyPOs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PONotifyPOs(PONotifyPO entity)
		{
			this.SendPropertyChanging();
			entity.PONotify = this;
		}
		
		private void detach_PONotifyPOs(PONotifyPO entity)
		{
			this.SendPropertyChanging();
			entity.PONotify = null;
		}
	}
	
	[Table(Name="dbo.POGRN")]
	public partial class POGRN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Company;
		
		private string _PONO;
		
		private int _Version;
		
		private int _AmendmentNo;
		
		private int _OrderLine;
		
		private string _SKU;
		
		private int _SplitNo;
		
		private string _LOTID;
		
		private System.Nullable<bool> _VersionFlag;
		
		private System.Nullable<int> _GRNo;
		
		private System.Nullable<double> _GRNQty;
		
		private System.Nullable<double> _ReceivedQty;
		
		private System.Nullable<System.DateTime> _IssueDate;
		
		private string _RCNo;
		
		private System.Nullable<double> _RCQty;
		
		private System.Nullable<double> _StockInQty;
		
		private System.Nullable<System.DateTime> _StockInDate;
		
		private string _AdviceNote;
		
		private EntityRef<POChangesMonitor> _POChangesMonitor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnPONOChanging(string value);
    partial void OnPONOChanged();
    partial void OnVersionChanging(int value);
    partial void OnVersionChanged();
    partial void OnAmendmentNoChanging(int value);
    partial void OnAmendmentNoChanged();
    partial void OnOrderLineChanging(int value);
    partial void OnOrderLineChanged();
    partial void OnSKUChanging(string value);
    partial void OnSKUChanged();
    partial void OnSplitNoChanging(int value);
    partial void OnSplitNoChanged();
    partial void OnLOTIDChanging(string value);
    partial void OnLOTIDChanged();
    partial void OnVersionFlagChanging(System.Nullable<bool> value);
    partial void OnVersionFlagChanged();
    partial void OnGRNoChanging(System.Nullable<int> value);
    partial void OnGRNoChanged();
    partial void OnGRNQtyChanging(System.Nullable<double> value);
    partial void OnGRNQtyChanged();
    partial void OnReceivedQtyChanging(System.Nullable<double> value);
    partial void OnReceivedQtyChanged();
    partial void OnIssueDateChanging(System.Nullable<System.DateTime> value);
    partial void OnIssueDateChanged();
    partial void OnRCNoChanging(string value);
    partial void OnRCNoChanged();
    partial void OnRCQtyChanging(System.Nullable<double> value);
    partial void OnRCQtyChanged();
    partial void OnStockInQtyChanging(System.Nullable<double> value);
    partial void OnStockInQtyChanged();
    partial void OnStockInDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStockInDateChanged();
    partial void OnAdviceNoteChanging(string value);
    partial void OnAdviceNoteChanged();
    #endregion
		
		public POGRN()
		{
			this._POChangesMonitor = default(EntityRef<POChangesMonitor>);
			OnCreated();
		}
		
		[Column(Storage="_Company", DbType="VarChar(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					if (this._POChangesMonitor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[Column(Storage="_PONO", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PONO
		{
			get
			{
				return this._PONO;
			}
			set
			{
				if ((this._PONO != value))
				{
					if (this._POChangesMonitor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPONOChanging(value);
					this.SendPropertyChanging();
					this._PONO = value;
					this.SendPropertyChanged("PONO");
					this.OnPONOChanged();
				}
			}
		}
		
		[Column(Storage="_Version", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					if (this._POChangesMonitor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[Column(Storage="_AmendmentNo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AmendmentNo
		{
			get
			{
				return this._AmendmentNo;
			}
			set
			{
				if ((this._AmendmentNo != value))
				{
					if (this._POChangesMonitor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAmendmentNoChanging(value);
					this.SendPropertyChanging();
					this._AmendmentNo = value;
					this.SendPropertyChanged("AmendmentNo");
					this.OnAmendmentNoChanged();
				}
			}
		}
		
		[Column(Storage="_OrderLine", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int OrderLine
		{
			get
			{
				return this._OrderLine;
			}
			set
			{
				if ((this._OrderLine != value))
				{
					if (this._POChangesMonitor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderLineChanging(value);
					this.SendPropertyChanging();
					this._OrderLine = value;
					this.SendPropertyChanged("OrderLine");
					this.OnOrderLineChanged();
				}
			}
		}
		
		[Column(Storage="_SKU", DbType="VarChar(32) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SKU
		{
			get
			{
				return this._SKU;
			}
			set
			{
				if ((this._SKU != value))
				{
					if (this._POChangesMonitor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSKUChanging(value);
					this.SendPropertyChanging();
					this._SKU = value;
					this.SendPropertyChanged("SKU");
					this.OnSKUChanged();
				}
			}
		}
		
		[Column(Storage="_SplitNo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SplitNo
		{
			get
			{
				return this._SplitNo;
			}
			set
			{
				if ((this._SplitNo != value))
				{
					if (this._POChangesMonitor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSplitNoChanging(value);
					this.SendPropertyChanging();
					this._SplitNo = value;
					this.SendPropertyChanged("SplitNo");
					this.OnSplitNoChanged();
				}
			}
		}
		
		[Column(Storage="_LOTID", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string LOTID
		{
			get
			{
				return this._LOTID;
			}
			set
			{
				if ((this._LOTID != value))
				{
					this.OnLOTIDChanging(value);
					this.SendPropertyChanging();
					this._LOTID = value;
					this.SendPropertyChanged("LOTID");
					this.OnLOTIDChanged();
				}
			}
		}
		
		[Column(Storage="_VersionFlag", DbType="Bit")]
		public System.Nullable<bool> VersionFlag
		{
			get
			{
				return this._VersionFlag;
			}
			set
			{
				if ((this._VersionFlag != value))
				{
					this.OnVersionFlagChanging(value);
					this.SendPropertyChanging();
					this._VersionFlag = value;
					this.SendPropertyChanged("VersionFlag");
					this.OnVersionFlagChanged();
				}
			}
		}
		
		[Column(Storage="_GRNo", DbType="Int")]
		public System.Nullable<int> GRNo
		{
			get
			{
				return this._GRNo;
			}
			set
			{
				if ((this._GRNo != value))
				{
					this.OnGRNoChanging(value);
					this.SendPropertyChanging();
					this._GRNo = value;
					this.SendPropertyChanged("GRNo");
					this.OnGRNoChanged();
				}
			}
		}
		
		[Column(Storage="_GRNQty", DbType="Float")]
		public System.Nullable<double> GRNQty
		{
			get
			{
				return this._GRNQty;
			}
			set
			{
				if ((this._GRNQty != value))
				{
					this.OnGRNQtyChanging(value);
					this.SendPropertyChanging();
					this._GRNQty = value;
					this.SendPropertyChanged("GRNQty");
					this.OnGRNQtyChanged();
				}
			}
		}
		
		[Column(Storage="_ReceivedQty", DbType="Float")]
		public System.Nullable<double> ReceivedQty
		{
			get
			{
				return this._ReceivedQty;
			}
			set
			{
				if ((this._ReceivedQty != value))
				{
					this.OnReceivedQtyChanging(value);
					this.SendPropertyChanging();
					this._ReceivedQty = value;
					this.SendPropertyChanged("ReceivedQty");
					this.OnReceivedQtyChanged();
				}
			}
		}
		
		[Column(Storage="_IssueDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> IssueDate
		{
			get
			{
				return this._IssueDate;
			}
			set
			{
				if ((this._IssueDate != value))
				{
					this.OnIssueDateChanging(value);
					this.SendPropertyChanging();
					this._IssueDate = value;
					this.SendPropertyChanged("IssueDate");
					this.OnIssueDateChanged();
				}
			}
		}
		
		[Column(Storage="_RCNo", DbType="NVarChar(20)")]
		public string RCNo
		{
			get
			{
				return this._RCNo;
			}
			set
			{
				if ((this._RCNo != value))
				{
					this.OnRCNoChanging(value);
					this.SendPropertyChanging();
					this._RCNo = value;
					this.SendPropertyChanged("RCNo");
					this.OnRCNoChanged();
				}
			}
		}
		
		[Column(Storage="_RCQty", DbType="Float")]
		public System.Nullable<double> RCQty
		{
			get
			{
				return this._RCQty;
			}
			set
			{
				if ((this._RCQty != value))
				{
					this.OnRCQtyChanging(value);
					this.SendPropertyChanging();
					this._RCQty = value;
					this.SendPropertyChanged("RCQty");
					this.OnRCQtyChanged();
				}
			}
		}
		
		[Column(Storage="_StockInQty", DbType="Float")]
		public System.Nullable<double> StockInQty
		{
			get
			{
				return this._StockInQty;
			}
			set
			{
				if ((this._StockInQty != value))
				{
					this.OnStockInQtyChanging(value);
					this.SendPropertyChanging();
					this._StockInQty = value;
					this.SendPropertyChanged("StockInQty");
					this.OnStockInQtyChanged();
				}
			}
		}
		
		[Column(Storage="_StockInDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StockInDate
		{
			get
			{
				return this._StockInDate;
			}
			set
			{
				if ((this._StockInDate != value))
				{
					this.OnStockInDateChanging(value);
					this.SendPropertyChanging();
					this._StockInDate = value;
					this.SendPropertyChanged("StockInDate");
					this.OnStockInDateChanged();
				}
			}
		}
		
		[Column(Storage="_AdviceNote", DbType="NVarChar(20)")]
		public string AdviceNote
		{
			get
			{
				return this._AdviceNote;
			}
			set
			{
				if ((this._AdviceNote != value))
				{
					this.OnAdviceNoteChanging(value);
					this.SendPropertyChanging();
					this._AdviceNote = value;
					this.SendPropertyChanged("AdviceNote");
					this.OnAdviceNoteChanged();
				}
			}
		}
		
		[Association(Name="POChangesMonitor_POGRN", Storage="_POChangesMonitor", ThisKey="Company,PONO,Version,AmendmentNo,OrderLine,SKU,SplitNo", OtherKey="Company,PONO,Version,AmendmentNo,OrderLine,SKU,SplitNo", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public POChangesMonitor POChangesMonitor
		{
			get
			{
				return this._POChangesMonitor.Entity;
			}
			set
			{
				POChangesMonitor previousValue = this._POChangesMonitor.Entity;
				if (((previousValue != value) 
							|| (this._POChangesMonitor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._POChangesMonitor.Entity = null;
						previousValue.POGRNs.Remove(this);
					}
					this._POChangesMonitor.Entity = value;
					if ((value != null))
					{
						value.POGRNs.Add(this);
						this._Company = value.Company;
						this._PONO = value.PONO;
						this._Version = value.Version;
						this._AmendmentNo = value.AmendmentNo;
						this._OrderLine = value.OrderLine;
						this._SKU = value.SKU;
						this._SplitNo = value.SplitNo;
					}
					else
					{
						this._Company = default(string);
						this._PONO = default(string);
						this._Version = default(int);
						this._AmendmentNo = default(int);
						this._OrderLine = default(int);
						this._SKU = default(string);
						this._SplitNo = default(int);
					}
					this.SendPropertyChanged("POChangesMonitor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.POColorSizeDetail")]
	public partial class POColorSizeDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Company;
		
		private string _PONO;
		
		private int _Version;
		
		private int _AmendmentNo;
		
		private int _OrderLine;
		
		private string _SKU;
		
		private string _ItemCode;
		
		private string _ColorCode;
		
		private string _SizeCode;
		
		private string _IntelSize;
		
		private string _FitCode;
		
		private string _ColorShade;
		
		private System.Nullable<decimal> _Price;
		
		private System.Nullable<decimal> _Qty;
		
		private System.Nullable<decimal> _PHOutstandingQty;
		
		private System.Nullable<System.DateTime> _GoodsInwardsDate;
		
		private System.Nullable<System.DateTime> _HDOETA;
		
		private string _Difference;
		
		private System.Nullable<int> _OvershipQty;
		
		private string _OvershipMemo;
		
		private string _Remark;
		
		private System.Nullable<int> _FitID;
		
		private System.Nullable<int> _SizeID;
		
		private System.Nullable<decimal> _TotalReceivedQty;
		
		private System.Nullable<System.DateTime> _FirstStationStartDate;
		
		private System.Nullable<System.DateTime> _FactoryStartDate;
		
		private System.Nullable<System.DateTime> _FirstQNStartDate;
		
		private string _SupplierReference;
		
		private string _LC;
		
		private string _CustStyleNo;
		
		private string _CustOrderNo;
		
		private System.Nullable<bool> _VersionFlag;
		
		private string _SuppSizeCode;
		
		private string _SuppFitCode;
		
		private string _GarmentColor;
		
		private System.Nullable<bool> _MultiPrice;
		
		private string _LadDipOption;
		
		private string _BulkOption;
		
		private string _GmtColorName;
		
		private string _ItemColorName;
		
		private string _TransferCode;
		
		private System.Nullable<System.DateTime> _TransferDate;
		
		private System.Nullable<bool> _BDownFlag;
		
		private System.Nullable<bool> _PriceFlag;
		
		private string _RoundNo;
		
		private System.Nullable<System.DateTime> _HDODate;
		
		private System.Nullable<bool> _NewItem;
		
		private string _FlowupFlag;
		
		private System.Nullable<bool> _Pending;
		
		private System.Nullable<double> _PendingByCust;
		
		private System.Nullable<double> _PendingByPH;
		
		private System.Nullable<System.DateTime> _RevDeliveryDate;
		
		private string _OrderOption;
		
		private string _FollowUpBy;
		
		private string _BiColor;
		
		private System.Nullable<int> _WOSeqNo;
		
		private System.Nullable<long> _ActionLogOID;
		
		private string _ActionLogGroup;
		
		private string _ActionLogSeqNo;
		
		private string _MaterialStandBy;
		
		private EntityRef<POSKUPhoto> _POSKUPhoto;
		
		private EntitySet<POWireBoneMatrix> _POWireBoneMatrixes;
		
		private EntitySet<PORC> _PORCs;
		
		private EntitySet<POChangesMonitor> _POChangesMonitors;
		
		private EntitySet<POSKUOperate> _POSKUOperates;
		
		private EntityRef<PODetail> _PODetail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnPONOChanging(string value);
    partial void OnPONOChanged();
    partial void OnVersionChanging(int value);
    partial void OnVersionChanged();
    partial void OnAmendmentNoChanging(int value);
    partial void OnAmendmentNoChanged();
    partial void OnOrderLineChanging(int value);
    partial void OnOrderLineChanged();
    partial void OnSKUChanging(string value);
    partial void OnSKUChanged();
    partial void OnItemCodeChanging(string value);
    partial void OnItemCodeChanged();
    partial void OnColorCodeChanging(string value);
    partial void OnColorCodeChanged();
    partial void OnSizeCodeChanging(string value);
    partial void OnSizeCodeChanged();
    partial void OnIntelSizeChanging(string value);
    partial void OnIntelSizeChanged();
    partial void OnFitCodeChanging(string value);
    partial void OnFitCodeChanged();
    partial void OnColorShadeChanging(string value);
    partial void OnColorShadeChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    partial void OnQtyChanging(System.Nullable<decimal> value);
    partial void OnQtyChanged();
    partial void OnPHOutstandingQtyChanging(System.Nullable<decimal> value);
    partial void OnPHOutstandingQtyChanged();
    partial void OnGoodsInwardsDateChanging(System.Nullable<System.DateTime> value);
    partial void OnGoodsInwardsDateChanged();
    partial void OnHDOETAChanging(System.Nullable<System.DateTime> value);
    partial void OnHDOETAChanged();
    partial void OnDifferenceChanging(string value);
    partial void OnDifferenceChanged();
    partial void OnOvershipQtyChanging(System.Nullable<int> value);
    partial void OnOvershipQtyChanged();
    partial void OnOvershipMemoChanging(string value);
    partial void OnOvershipMemoChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnFitIDChanging(System.Nullable<int> value);
    partial void OnFitIDChanged();
    partial void OnSizeIDChanging(System.Nullable<int> value);
    partial void OnSizeIDChanged();
    partial void OnTotalReceivedQtyChanging(System.Nullable<decimal> value);
    partial void OnTotalReceivedQtyChanged();
    partial void OnFirstStationStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFirstStationStartDateChanged();
    partial void OnFactoryStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFactoryStartDateChanged();
    partial void OnFirstQNStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFirstQNStartDateChanged();
    partial void OnSupplierReferenceChanging(string value);
    partial void OnSupplierReferenceChanged();
    partial void OnLCChanging(string value);
    partial void OnLCChanged();
    partial void OnCustStyleNoChanging(string value);
    partial void OnCustStyleNoChanged();
    partial void OnCustOrderNoChanging(string value);
    partial void OnCustOrderNoChanged();
    partial void OnVersionFlagChanging(System.Nullable<bool> value);
    partial void OnVersionFlagChanged();
    partial void OnSuppSizeCodeChanging(string value);
    partial void OnSuppSizeCodeChanged();
    partial void OnSuppFitCodeChanging(string value);
    partial void OnSuppFitCodeChanged();
    partial void OnGarmentColorChanging(string value);
    partial void OnGarmentColorChanged();
    partial void OnMultiPriceChanging(System.Nullable<bool> value);
    partial void OnMultiPriceChanged();
    partial void OnLadDipOptionChanging(string value);
    partial void OnLadDipOptionChanged();
    partial void OnBulkOptionChanging(string value);
    partial void OnBulkOptionChanged();
    partial void OnGmtColorNameChanging(string value);
    partial void OnGmtColorNameChanged();
    partial void OnItemColorNameChanging(string value);
    partial void OnItemColorNameChanged();
    partial void OnTransferCodeChanging(string value);
    partial void OnTransferCodeChanged();
    partial void OnTransferDateChanging(System.Nullable<System.DateTime> value);
    partial void OnTransferDateChanged();
    partial void OnBDownFlagChanging(System.Nullable<bool> value);
    partial void OnBDownFlagChanged();
    partial void OnPriceFlagChanging(System.Nullable<bool> value);
    partial void OnPriceFlagChanged();
    partial void OnRoundNoChanging(string value);
    partial void OnRoundNoChanged();
    partial void OnHDODateChanging(System.Nullable<System.DateTime> value);
    partial void OnHDODateChanged();
    partial void OnNewItemChanging(System.Nullable<bool> value);
    partial void OnNewItemChanged();
    partial void OnFlowupFlagChanging(string value);
    partial void OnFlowupFlagChanged();
    partial void OnPendingChanging(System.Nullable<bool> value);
    partial void OnPendingChanged();
    partial void OnPendingByCustChanging(System.Nullable<double> value);
    partial void OnPendingByCustChanged();
    partial void OnPendingByPHChanging(System.Nullable<double> value);
    partial void OnPendingByPHChanged();
    partial void OnRevDeliveryDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRevDeliveryDateChanged();
    partial void OnOrderOptionChanging(string value);
    partial void OnOrderOptionChanged();
    partial void OnFollowUpByChanging(string value);
    partial void OnFollowUpByChanged();
    partial void OnBiColorChanging(string value);
    partial void OnBiColorChanged();
    partial void OnWOSeqNoChanging(System.Nullable<int> value);
    partial void OnWOSeqNoChanged();
    partial void OnActionLogOIDChanging(System.Nullable<long> value);
    partial void OnActionLogOIDChanged();
    partial void OnActionLogGroupChanging(string value);
    partial void OnActionLogGroupChanged();
    partial void OnActionLogSeqNoChanging(string value);
    partial void OnActionLogSeqNoChanged();
    partial void OnMaterialStandByChanging(string value);
    partial void OnMaterialStandByChanged();
    #endregion
		
		public POColorSizeDetail()
		{
			this._POSKUPhoto = default(EntityRef<POSKUPhoto>);
			this._POWireBoneMatrixes = new EntitySet<POWireBoneMatrix>(new Action<POWireBoneMatrix>(this.attach_POWireBoneMatrixes), new Action<POWireBoneMatrix>(this.detach_POWireBoneMatrixes));
			this._PORCs = new EntitySet<PORC>(new Action<PORC>(this.attach_PORCs), new Action<PORC>(this.detach_PORCs));
			this._POChangesMonitors = new EntitySet<POChangesMonitor>(new Action<POChangesMonitor>(this.attach_POChangesMonitors), new Action<POChangesMonitor>(this.detach_POChangesMonitors));
			this._POSKUOperates = new EntitySet<POSKUOperate>(new Action<POSKUOperate>(this.attach_POSKUOperates), new Action<POSKUOperate>(this.detach_POSKUOperates));
			this._PODetail = default(EntityRef<PODetail>);
			OnCreated();
		}
		
		[Column(Storage="_Company", DbType="VarChar(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					if (this._PODetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[Column(Storage="_PONO", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PONO
		{
			get
			{
				return this._PONO;
			}
			set
			{
				if ((this._PONO != value))
				{
					if (this._PODetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPONOChanging(value);
					this.SendPropertyChanging();
					this._PONO = value;
					this.SendPropertyChanged("PONO");
					this.OnPONOChanged();
				}
			}
		}
		
		[Column(Storage="_Version", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					if (this._PODetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[Column(Storage="_AmendmentNo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AmendmentNo
		{
			get
			{
				return this._AmendmentNo;
			}
			set
			{
				if ((this._AmendmentNo != value))
				{
					if (this._PODetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAmendmentNoChanging(value);
					this.SendPropertyChanging();
					this._AmendmentNo = value;
					this.SendPropertyChanged("AmendmentNo");
					this.OnAmendmentNoChanged();
				}
			}
		}
		
		[Column(Storage="_OrderLine", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int OrderLine
		{
			get
			{
				return this._OrderLine;
			}
			set
			{
				if ((this._OrderLine != value))
				{
					if (this._PODetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderLineChanging(value);
					this.SendPropertyChanging();
					this._OrderLine = value;
					this.SendPropertyChanged("OrderLine");
					this.OnOrderLineChanged();
				}
			}
		}
		
		[Column(Storage="_SKU", DbType="VarChar(32) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SKU
		{
			get
			{
				return this._SKU;
			}
			set
			{
				if ((this._SKU != value))
				{
					this.OnSKUChanging(value);
					this.SendPropertyChanging();
					this._SKU = value;
					this.SendPropertyChanged("SKU");
					this.OnSKUChanged();
				}
			}
		}
		
		[Column(Storage="_ItemCode", DbType="NVarChar(18) NOT NULL", CanBeNull=false)]
		public string ItemCode
		{
			get
			{
				return this._ItemCode;
			}
			set
			{
				if ((this._ItemCode != value))
				{
					this.OnItemCodeChanging(value);
					this.SendPropertyChanging();
					this._ItemCode = value;
					this.SendPropertyChanged("ItemCode");
					this.OnItemCodeChanged();
				}
			}
		}
		
		[Column(Storage="_ColorCode", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string ColorCode
		{
			get
			{
				return this._ColorCode;
			}
			set
			{
				if ((this._ColorCode != value))
				{
					this.OnColorCodeChanging(value);
					this.SendPropertyChanging();
					this._ColorCode = value;
					this.SendPropertyChanged("ColorCode");
					this.OnColorCodeChanged();
				}
			}
		}
		
		[Column(Storage="_SizeCode", DbType="NVarChar(60) NOT NULL", CanBeNull=false)]
		public string SizeCode
		{
			get
			{
				return this._SizeCode;
			}
			set
			{
				if ((this._SizeCode != value))
				{
					this.OnSizeCodeChanging(value);
					this.SendPropertyChanging();
					this._SizeCode = value;
					this.SendPropertyChanged("SizeCode");
					this.OnSizeCodeChanged();
				}
			}
		}
		
		[Column(Storage="_IntelSize", DbType="NVarChar(60)")]
		public string IntelSize
		{
			get
			{
				return this._IntelSize;
			}
			set
			{
				if ((this._IntelSize != value))
				{
					this.OnIntelSizeChanging(value);
					this.SendPropertyChanging();
					this._IntelSize = value;
					this.SendPropertyChanged("IntelSize");
					this.OnIntelSizeChanged();
				}
			}
		}
		
		[Column(Storage="_FitCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string FitCode
		{
			get
			{
				return this._FitCode;
			}
			set
			{
				if ((this._FitCode != value))
				{
					this.OnFitCodeChanging(value);
					this.SendPropertyChanging();
					this._FitCode = value;
					this.SendPropertyChanged("FitCode");
					this.OnFitCodeChanged();
				}
			}
		}
		
		[Column(Storage="_ColorShade", DbType="NVarChar(100)")]
		public string ColorShade
		{
			get
			{
				return this._ColorShade;
			}
			set
			{
				if ((this._ColorShade != value))
				{
					this.OnColorShadeChanging(value);
					this.SendPropertyChanging();
					this._ColorShade = value;
					this.SendPropertyChanged("ColorShade");
					this.OnColorShadeChanged();
				}
			}
		}
		
		[Column(Storage="_Price", DbType="Decimal(18,5)")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[Column(Storage="_Qty", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> Qty
		{
			get
			{
				return this._Qty;
			}
			set
			{
				if ((this._Qty != value))
				{
					this.OnQtyChanging(value);
					this.SendPropertyChanging();
					this._Qty = value;
					this.SendPropertyChanged("Qty");
					this.OnQtyChanged();
				}
			}
		}
		
		[Column(Storage="_PHOutstandingQty", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> PHOutstandingQty
		{
			get
			{
				return this._PHOutstandingQty;
			}
			set
			{
				if ((this._PHOutstandingQty != value))
				{
					this.OnPHOutstandingQtyChanging(value);
					this.SendPropertyChanging();
					this._PHOutstandingQty = value;
					this.SendPropertyChanged("PHOutstandingQty");
					this.OnPHOutstandingQtyChanged();
				}
			}
		}
		
		[Column(Storage="_GoodsInwardsDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> GoodsInwardsDate
		{
			get
			{
				return this._GoodsInwardsDate;
			}
			set
			{
				if ((this._GoodsInwardsDate != value))
				{
					this.OnGoodsInwardsDateChanging(value);
					this.SendPropertyChanging();
					this._GoodsInwardsDate = value;
					this.SendPropertyChanged("GoodsInwardsDate");
					this.OnGoodsInwardsDateChanged();
				}
			}
		}
		
		[Column(Storage="_HDOETA", DbType="DateTime")]
		public System.Nullable<System.DateTime> HDOETA
		{
			get
			{
				return this._HDOETA;
			}
			set
			{
				if ((this._HDOETA != value))
				{
					this.OnHDOETAChanging(value);
					this.SendPropertyChanging();
					this._HDOETA = value;
					this.SendPropertyChanged("HDOETA");
					this.OnHDOETAChanged();
				}
			}
		}
		
		[Column(Storage="_Difference", DbType="NVarChar(100)")]
		public string Difference
		{
			get
			{
				return this._Difference;
			}
			set
			{
				if ((this._Difference != value))
				{
					this.OnDifferenceChanging(value);
					this.SendPropertyChanging();
					this._Difference = value;
					this.SendPropertyChanged("Difference");
					this.OnDifferenceChanged();
				}
			}
		}
		
		[Column(Storage="_OvershipQty", DbType="Int")]
		public System.Nullable<int> OvershipQty
		{
			get
			{
				return this._OvershipQty;
			}
			set
			{
				if ((this._OvershipQty != value))
				{
					this.OnOvershipQtyChanging(value);
					this.SendPropertyChanging();
					this._OvershipQty = value;
					this.SendPropertyChanged("OvershipQty");
					this.OnOvershipQtyChanged();
				}
			}
		}
		
		[Column(Storage="_OvershipMemo", DbType="NVarChar(400)")]
		public string OvershipMemo
		{
			get
			{
				return this._OvershipMemo;
			}
			set
			{
				if ((this._OvershipMemo != value))
				{
					this.OnOvershipMemoChanging(value);
					this.SendPropertyChanging();
					this._OvershipMemo = value;
					this.SendPropertyChanged("OvershipMemo");
					this.OnOvershipMemoChanged();
				}
			}
		}
		
		[Column(Storage="_Remark", DbType="NVarChar(4000)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[Column(Storage="_FitID", DbType="Int")]
		public System.Nullable<int> FitID
		{
			get
			{
				return this._FitID;
			}
			set
			{
				if ((this._FitID != value))
				{
					this.OnFitIDChanging(value);
					this.SendPropertyChanging();
					this._FitID = value;
					this.SendPropertyChanged("FitID");
					this.OnFitIDChanged();
				}
			}
		}
		
		[Column(Storage="_SizeID", DbType="Int")]
		public System.Nullable<int> SizeID
		{
			get
			{
				return this._SizeID;
			}
			set
			{
				if ((this._SizeID != value))
				{
					this.OnSizeIDChanging(value);
					this.SendPropertyChanging();
					this._SizeID = value;
					this.SendPropertyChanged("SizeID");
					this.OnSizeIDChanged();
				}
			}
		}
		
		[Column(Storage="_TotalReceivedQty", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> TotalReceivedQty
		{
			get
			{
				return this._TotalReceivedQty;
			}
			set
			{
				if ((this._TotalReceivedQty != value))
				{
					this.OnTotalReceivedQtyChanging(value);
					this.SendPropertyChanging();
					this._TotalReceivedQty = value;
					this.SendPropertyChanged("TotalReceivedQty");
					this.OnTotalReceivedQtyChanged();
				}
			}
		}
		
		[Column(Storage="_FirstStationStartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> FirstStationStartDate
		{
			get
			{
				return this._FirstStationStartDate;
			}
			set
			{
				if ((this._FirstStationStartDate != value))
				{
					this.OnFirstStationStartDateChanging(value);
					this.SendPropertyChanging();
					this._FirstStationStartDate = value;
					this.SendPropertyChanged("FirstStationStartDate");
					this.OnFirstStationStartDateChanged();
				}
			}
		}
		
		[Column(Storage="_FactoryStartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> FactoryStartDate
		{
			get
			{
				return this._FactoryStartDate;
			}
			set
			{
				if ((this._FactoryStartDate != value))
				{
					this.OnFactoryStartDateChanging(value);
					this.SendPropertyChanging();
					this._FactoryStartDate = value;
					this.SendPropertyChanged("FactoryStartDate");
					this.OnFactoryStartDateChanged();
				}
			}
		}
		
		[Column(Storage="_FirstQNStartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> FirstQNStartDate
		{
			get
			{
				return this._FirstQNStartDate;
			}
			set
			{
				if ((this._FirstQNStartDate != value))
				{
					this.OnFirstQNStartDateChanging(value);
					this.SendPropertyChanging();
					this._FirstQNStartDate = value;
					this.SendPropertyChanged("FirstQNStartDate");
					this.OnFirstQNStartDateChanged();
				}
			}
		}
		
		[Column(Storage="_SupplierReference", DbType="NVarChar(100)")]
		public string SupplierReference
		{
			get
			{
				return this._SupplierReference;
			}
			set
			{
				if ((this._SupplierReference != value))
				{
					this.OnSupplierReferenceChanging(value);
					this.SendPropertyChanging();
					this._SupplierReference = value;
					this.SendPropertyChanged("SupplierReference");
					this.OnSupplierReferenceChanged();
				}
			}
		}
		
		[Column(Storage="_LC", DbType="NVarChar(100)")]
		public string LC
		{
			get
			{
				return this._LC;
			}
			set
			{
				if ((this._LC != value))
				{
					this.OnLCChanging(value);
					this.SendPropertyChanging();
					this._LC = value;
					this.SendPropertyChanged("LC");
					this.OnLCChanged();
				}
			}
		}
		
		[Column(Storage="_CustStyleNo", DbType="NVarChar(1000)")]
		public string CustStyleNo
		{
			get
			{
				return this._CustStyleNo;
			}
			set
			{
				if ((this._CustStyleNo != value))
				{
					this.OnCustStyleNoChanging(value);
					this.SendPropertyChanging();
					this._CustStyleNo = value;
					this.SendPropertyChanged("CustStyleNo");
					this.OnCustStyleNoChanged();
				}
			}
		}
		
		[Column(Storage="_CustOrderNo", DbType="NVarChar(1000)")]
		public string CustOrderNo
		{
			get
			{
				return this._CustOrderNo;
			}
			set
			{
				if ((this._CustOrderNo != value))
				{
					this.OnCustOrderNoChanging(value);
					this.SendPropertyChanging();
					this._CustOrderNo = value;
					this.SendPropertyChanged("CustOrderNo");
					this.OnCustOrderNoChanged();
				}
			}
		}
		
		[Column(Storage="_VersionFlag", DbType="Bit")]
		public System.Nullable<bool> VersionFlag
		{
			get
			{
				return this._VersionFlag;
			}
			set
			{
				if ((this._VersionFlag != value))
				{
					this.OnVersionFlagChanging(value);
					this.SendPropertyChanging();
					this._VersionFlag = value;
					this.SendPropertyChanged("VersionFlag");
					this.OnVersionFlagChanged();
				}
			}
		}
		
		[Column(Storage="_SuppSizeCode", DbType="NVarChar(10)")]
		public string SuppSizeCode
		{
			get
			{
				return this._SuppSizeCode;
			}
			set
			{
				if ((this._SuppSizeCode != value))
				{
					this.OnSuppSizeCodeChanging(value);
					this.SendPropertyChanging();
					this._SuppSizeCode = value;
					this.SendPropertyChanged("SuppSizeCode");
					this.OnSuppSizeCodeChanged();
				}
			}
		}
		
		[Column(Storage="_SuppFitCode", DbType="NVarChar(10)")]
		public string SuppFitCode
		{
			get
			{
				return this._SuppFitCode;
			}
			set
			{
				if ((this._SuppFitCode != value))
				{
					this.OnSuppFitCodeChanging(value);
					this.SendPropertyChanging();
					this._SuppFitCode = value;
					this.SendPropertyChanged("SuppFitCode");
					this.OnSuppFitCodeChanged();
				}
			}
		}
		
		[Column(Storage="_GarmentColor", DbType="NVarChar(10)")]
		public string GarmentColor
		{
			get
			{
				return this._GarmentColor;
			}
			set
			{
				if ((this._GarmentColor != value))
				{
					this.OnGarmentColorChanging(value);
					this.SendPropertyChanging();
					this._GarmentColor = value;
					this.SendPropertyChanged("GarmentColor");
					this.OnGarmentColorChanged();
				}
			}
		}
		
		[Column(Storage="_MultiPrice", DbType="Bit")]
		public System.Nullable<bool> MultiPrice
		{
			get
			{
				return this._MultiPrice;
			}
			set
			{
				if ((this._MultiPrice != value))
				{
					this.OnMultiPriceChanging(value);
					this.SendPropertyChanging();
					this._MultiPrice = value;
					this.SendPropertyChanged("MultiPrice");
					this.OnMultiPriceChanged();
				}
			}
		}
		
		[Column(Storage="_LadDipOption", DbType="VarChar(5)")]
		public string LadDipOption
		{
			get
			{
				return this._LadDipOption;
			}
			set
			{
				if ((this._LadDipOption != value))
				{
					this.OnLadDipOptionChanging(value);
					this.SendPropertyChanging();
					this._LadDipOption = value;
					this.SendPropertyChanged("LadDipOption");
					this.OnLadDipOptionChanged();
				}
			}
		}
		
		[Column(Storage="_BulkOption", DbType="VarChar(5)")]
		public string BulkOption
		{
			get
			{
				return this._BulkOption;
			}
			set
			{
				if ((this._BulkOption != value))
				{
					this.OnBulkOptionChanging(value);
					this.SendPropertyChanging();
					this._BulkOption = value;
					this.SendPropertyChanged("BulkOption");
					this.OnBulkOptionChanged();
				}
			}
		}
		
		[Column(Storage="_GmtColorName", DbType="NVarChar(100)")]
		public string GmtColorName
		{
			get
			{
				return this._GmtColorName;
			}
			set
			{
				if ((this._GmtColorName != value))
				{
					this.OnGmtColorNameChanging(value);
					this.SendPropertyChanging();
					this._GmtColorName = value;
					this.SendPropertyChanged("GmtColorName");
					this.OnGmtColorNameChanged();
				}
			}
		}
		
		[Column(Storage="_ItemColorName", DbType="VarChar(50)")]
		public string ItemColorName
		{
			get
			{
				return this._ItemColorName;
			}
			set
			{
				if ((this._ItemColorName != value))
				{
					this.OnItemColorNameChanging(value);
					this.SendPropertyChanging();
					this._ItemColorName = value;
					this.SendPropertyChanged("ItemColorName");
					this.OnItemColorNameChanged();
				}
			}
		}
		
		[Column(Storage="_TransferCode", DbType="VarChar(50)")]
		public string TransferCode
		{
			get
			{
				return this._TransferCode;
			}
			set
			{
				if ((this._TransferCode != value))
				{
					this.OnTransferCodeChanging(value);
					this.SendPropertyChanging();
					this._TransferCode = value;
					this.SendPropertyChanged("TransferCode");
					this.OnTransferCodeChanged();
				}
			}
		}
		
		[Column(Storage="_TransferDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> TransferDate
		{
			get
			{
				return this._TransferDate;
			}
			set
			{
				if ((this._TransferDate != value))
				{
					this.OnTransferDateChanging(value);
					this.SendPropertyChanging();
					this._TransferDate = value;
					this.SendPropertyChanged("TransferDate");
					this.OnTransferDateChanged();
				}
			}
		}
		
		[Column(Storage="_BDownFlag", DbType="Bit")]
		public System.Nullable<bool> BDownFlag
		{
			get
			{
				return this._BDownFlag;
			}
			set
			{
				if ((this._BDownFlag != value))
				{
					this.OnBDownFlagChanging(value);
					this.SendPropertyChanging();
					this._BDownFlag = value;
					this.SendPropertyChanged("BDownFlag");
					this.OnBDownFlagChanged();
				}
			}
		}
		
		[Column(Storage="_PriceFlag", DbType="Bit")]
		public System.Nullable<bool> PriceFlag
		{
			get
			{
				return this._PriceFlag;
			}
			set
			{
				if ((this._PriceFlag != value))
				{
					this.OnPriceFlagChanging(value);
					this.SendPropertyChanging();
					this._PriceFlag = value;
					this.SendPropertyChanged("PriceFlag");
					this.OnPriceFlagChanged();
				}
			}
		}
		
		[Column(Storage="_RoundNo", DbType="VarChar(20)")]
		public string RoundNo
		{
			get
			{
				return this._RoundNo;
			}
			set
			{
				if ((this._RoundNo != value))
				{
					this.OnRoundNoChanging(value);
					this.SendPropertyChanging();
					this._RoundNo = value;
					this.SendPropertyChanged("RoundNo");
					this.OnRoundNoChanged();
				}
			}
		}
		
		[Column(Storage="_HDODate", DbType="DateTime")]
		public System.Nullable<System.DateTime> HDODate
		{
			get
			{
				return this._HDODate;
			}
			set
			{
				if ((this._HDODate != value))
				{
					this.OnHDODateChanging(value);
					this.SendPropertyChanging();
					this._HDODate = value;
					this.SendPropertyChanged("HDODate");
					this.OnHDODateChanged();
				}
			}
		}
		
		[Column(Storage="_NewItem", DbType="Bit")]
		public System.Nullable<bool> NewItem
		{
			get
			{
				return this._NewItem;
			}
			set
			{
				if ((this._NewItem != value))
				{
					this.OnNewItemChanging(value);
					this.SendPropertyChanging();
					this._NewItem = value;
					this.SendPropertyChanged("NewItem");
					this.OnNewItemChanged();
				}
			}
		}
		
		[Column(Storage="_FlowupFlag", DbType="NVarChar(100)")]
		public string FlowupFlag
		{
			get
			{
				return this._FlowupFlag;
			}
			set
			{
				if ((this._FlowupFlag != value))
				{
					this.OnFlowupFlagChanging(value);
					this.SendPropertyChanging();
					this._FlowupFlag = value;
					this.SendPropertyChanged("FlowupFlag");
					this.OnFlowupFlagChanged();
				}
			}
		}
		
		[Column(Storage="_Pending", DbType="Bit")]
		public System.Nullable<bool> Pending
		{
			get
			{
				return this._Pending;
			}
			set
			{
				if ((this._Pending != value))
				{
					this.OnPendingChanging(value);
					this.SendPropertyChanging();
					this._Pending = value;
					this.SendPropertyChanged("Pending");
					this.OnPendingChanged();
				}
			}
		}
		
		[Column(Storage="_PendingByCust", DbType="Float")]
		public System.Nullable<double> PendingByCust
		{
			get
			{
				return this._PendingByCust;
			}
			set
			{
				if ((this._PendingByCust != value))
				{
					this.OnPendingByCustChanging(value);
					this.SendPropertyChanging();
					this._PendingByCust = value;
					this.SendPropertyChanged("PendingByCust");
					this.OnPendingByCustChanged();
				}
			}
		}
		
		[Column(Storage="_PendingByPH", DbType="Float")]
		public System.Nullable<double> PendingByPH
		{
			get
			{
				return this._PendingByPH;
			}
			set
			{
				if ((this._PendingByPH != value))
				{
					this.OnPendingByPHChanging(value);
					this.SendPropertyChanging();
					this._PendingByPH = value;
					this.SendPropertyChanged("PendingByPH");
					this.OnPendingByPHChanged();
				}
			}
		}
		
		[Column(Storage="_RevDeliveryDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RevDeliveryDate
		{
			get
			{
				return this._RevDeliveryDate;
			}
			set
			{
				if ((this._RevDeliveryDate != value))
				{
					this.OnRevDeliveryDateChanging(value);
					this.SendPropertyChanging();
					this._RevDeliveryDate = value;
					this.SendPropertyChanged("RevDeliveryDate");
					this.OnRevDeliveryDateChanged();
				}
			}
		}
		
		[Column(Storage="_OrderOption", DbType="NVarChar(6)")]
		public string OrderOption
		{
			get
			{
				return this._OrderOption;
			}
			set
			{
				if ((this._OrderOption != value))
				{
					this.OnOrderOptionChanging(value);
					this.SendPropertyChanging();
					this._OrderOption = value;
					this.SendPropertyChanged("OrderOption");
					this.OnOrderOptionChanged();
				}
			}
		}
		
		[Column(Storage="_FollowUpBy", DbType="NVarChar(50)")]
		public string FollowUpBy
		{
			get
			{
				return this._FollowUpBy;
			}
			set
			{
				if ((this._FollowUpBy != value))
				{
					this.OnFollowUpByChanging(value);
					this.SendPropertyChanging();
					this._FollowUpBy = value;
					this.SendPropertyChanged("FollowUpBy");
					this.OnFollowUpByChanged();
				}
			}
		}
		
		[Column(Storage="_BiColor", DbType="VarChar(20)")]
		public string BiColor
		{
			get
			{
				return this._BiColor;
			}
			set
			{
				if ((this._BiColor != value))
				{
					this.OnBiColorChanging(value);
					this.SendPropertyChanging();
					this._BiColor = value;
					this.SendPropertyChanged("BiColor");
					this.OnBiColorChanged();
				}
			}
		}
		
		[Column(Storage="_WOSeqNo")]
		public System.Nullable<int> WOSeqNo
		{
			get
			{
				return this._WOSeqNo;
			}
			set
			{
				if ((this._WOSeqNo != value))
				{
					this.OnWOSeqNoChanging(value);
					this.SendPropertyChanging();
					this._WOSeqNo = value;
					this.SendPropertyChanged("WOSeqNo");
					this.OnWOSeqNoChanged();
				}
			}
		}
		
		[Column(Storage="_ActionLogOID")]
		public System.Nullable<long> ActionLogOID
		{
			get
			{
				return this._ActionLogOID;
			}
			set
			{
				if ((this._ActionLogOID != value))
				{
					this.OnActionLogOIDChanging(value);
					this.SendPropertyChanging();
					this._ActionLogOID = value;
					this.SendPropertyChanged("ActionLogOID");
					this.OnActionLogOIDChanged();
				}
			}
		}
		
		[Column(Storage="_ActionLogGroup", DbType="VarChar(20)")]
		public string ActionLogGroup
		{
			get
			{
				return this._ActionLogGroup;
			}
			set
			{
				if ((this._ActionLogGroup != value))
				{
					this.OnActionLogGroupChanging(value);
					this.SendPropertyChanging();
					this._ActionLogGroup = value;
					this.SendPropertyChanged("ActionLogGroup");
					this.OnActionLogGroupChanged();
				}
			}
		}
		
		[Column(Storage="_ActionLogSeqNo", DbType="VarChar(100)")]
		public string ActionLogSeqNo
		{
			get
			{
				return this._ActionLogSeqNo;
			}
			set
			{
				if ((this._ActionLogSeqNo != value))
				{
					this.OnActionLogSeqNoChanging(value);
					this.SendPropertyChanging();
					this._ActionLogSeqNo = value;
					this.SendPropertyChanged("ActionLogSeqNo");
					this.OnActionLogSeqNoChanged();
				}
			}
		}
		
		[Column(Storage="_MaterialStandBy", DbType="VarChar(10)")]
		public string MaterialStandBy
		{
			get
			{
				return this._MaterialStandBy;
			}
			set
			{
				if ((this._MaterialStandBy != value))
				{
					this.OnMaterialStandByChanging(value);
					this.SendPropertyChanging();
					this._MaterialStandBy = value;
					this.SendPropertyChanged("MaterialStandBy");
					this.OnMaterialStandByChanged();
				}
			}
		}
		
		[Association(Name="POColorSizeDetail_POSKUPhoto", Storage="_POSKUPhoto", ThisKey="Company,PONO,Version,AmendmentNo,OrderLine,SKU", OtherKey="Company,PONO,Version,AmendmentNo,OrderLine,SKU", IsUnique=true, IsForeignKey=false)]
		public POSKUPhoto POSKUPhoto
		{
			get
			{
				return this._POSKUPhoto.Entity;
			}
			set
			{
				POSKUPhoto previousValue = this._POSKUPhoto.Entity;
				if (((previousValue != value) 
							|| (this._POSKUPhoto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._POSKUPhoto.Entity = null;
						previousValue.POColorSizeDetail = null;
					}
					this._POSKUPhoto.Entity = value;
					if ((value != null))
					{
						value.POColorSizeDetail = this;
					}
					this.SendPropertyChanged("POSKUPhoto");
				}
			}
		}
		
		[Association(Name="POColorSizeDetail_POWireBoneMatrix", Storage="_POWireBoneMatrixes", ThisKey="Company,PONO,Version,AmendmentNo,OrderLine,SKU", OtherKey="Company,PONO,Version,AmendmentNo,OrderLine,SKU")]
		public EntitySet<POWireBoneMatrix> POWireBoneMatrixes
		{
			get
			{
				return this._POWireBoneMatrixes;
			}
			set
			{
				this._POWireBoneMatrixes.Assign(value);
			}
		}
		
		[Association(Name="POColorSizeDetail_PORC", Storage="_PORCs", ThisKey="Company,PONO,Version,AmendmentNo,OrderLine,SKU", OtherKey="Company,PONO,Version,AmendmentNo,OrderLine,SKU")]
		public EntitySet<PORC> PORCs
		{
			get
			{
				return this._PORCs;
			}
			set
			{
				this._PORCs.Assign(value);
			}
		}
		
		[Association(Name="POColorSizeDetail_POChangesMonitor", Storage="_POChangesMonitors", ThisKey="Company,PONO,Version,AmendmentNo,OrderLine,SKU", OtherKey="Company,PONO,Version,AmendmentNo,OrderLine,SKU")]
		public EntitySet<POChangesMonitor> POChangesMonitors
		{
			get
			{
				return this._POChangesMonitors;
			}
			set
			{
				this._POChangesMonitors.Assign(value);
			}
		}
		
		[Association(Name="POColorSizeDetail_POSKUOperate", Storage="_POSKUOperates", ThisKey="Company,PONO,Version,AmendmentNo,OrderLine,SKU", OtherKey="Company,PONO,Version,AmendmentNo,OrderLine,SKU")]
		public EntitySet<POSKUOperate> POSKUOperates
		{
			get
			{
				return this._POSKUOperates;
			}
			set
			{
				this._POSKUOperates.Assign(value);
			}
		}
		
		[Association(Name="PODetail_POColorSizeDetail", Storage="_PODetail", ThisKey="Company,PONO,Version,AmendmentNo,OrderLine", OtherKey="Company,PONO,Version,AmendmentNo,OrderLine", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public PODetail PODetail
		{
			get
			{
				return this._PODetail.Entity;
			}
			set
			{
				PODetail previousValue = this._PODetail.Entity;
				if (((previousValue != value) 
							|| (this._PODetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PODetail.Entity = null;
						previousValue.POColorSizeDetails.Remove(this);
					}
					this._PODetail.Entity = value;
					if ((value != null))
					{
						value.POColorSizeDetails.Add(this);
						this._Company = value.Company;
						this._PONO = value.PONO;
						this._Version = value.Version;
						this._AmendmentNo = value.AmendmentNo;
						this._OrderLine = value.OrderLine;
					}
					else
					{
						this._Company = default(string);
						this._PONO = default(string);
						this._Version = default(int);
						this._AmendmentNo = default(int);
						this._OrderLine = default(int);
					}
					this.SendPropertyChanged("PODetail");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_POWireBoneMatrixes(POWireBoneMatrix entity)
		{
			this.SendPropertyChanging();
			entity.POColorSizeDetail = this;
		}
		
		private void detach_POWireBoneMatrixes(POWireBoneMatrix entity)
		{
			this.SendPropertyChanging();
			entity.POColorSizeDetail = null;
		}
		
		private void attach_PORCs(PORC entity)
		{
			this.SendPropertyChanging();
			entity.POColorSizeDetail = this;
		}
		
		private void detach_PORCs(PORC entity)
		{
			this.SendPropertyChanging();
			entity.POColorSizeDetail = null;
		}
		
		private void attach_POChangesMonitors(POChangesMonitor entity)
		{
			this.SendPropertyChanging();
			entity.POColorSizeDetail = this;
		}
		
		private void detach_POChangesMonitors(POChangesMonitor entity)
		{
			this.SendPropertyChanging();
			entity.POColorSizeDetail = null;
		}
		
		private void attach_POSKUOperates(POSKUOperate entity)
		{
			this.SendPropertyChanging();
			entity.POColorSizeDetail = this;
		}
		
		private void detach_POSKUOperates(POSKUOperate entity)
		{
			this.SendPropertyChanging();
			entity.POColorSizeDetail = null;
		}
	}
	
	[Table(Name="dbo.PHP10")]
	public partial class PHP10
	{
		
		private string _CONO10;
		
		private string _PCOL10;
		
		private string _TYPE10;
		
		private string _CUSN10;
		
		private string _VNDR10;
		
		private string _PSTL10;
		
		private string _DESC10;
		
		private string _CODE10;
		
		private System.Nullable<bool> _UpdateFlag;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		public PHP10()
		{
		}
		
		[Column(Storage="_CONO10", DbType="NVarChar(50)")]
		public string CONO10
		{
			get
			{
				return this._CONO10;
			}
			set
			{
				if ((this._CONO10 != value))
				{
					this._CONO10 = value;
				}
			}
		}
		
		[Column(Storage="_PCOL10", DbType="NVarChar(50)")]
		public string PCOL10
		{
			get
			{
				return this._PCOL10;
			}
			set
			{
				if ((this._PCOL10 != value))
				{
					this._PCOL10 = value;
				}
			}
		}
		
		[Column(Storage="_TYPE10", DbType="NVarChar(50)")]
		public string TYPE10
		{
			get
			{
				return this._TYPE10;
			}
			set
			{
				if ((this._TYPE10 != value))
				{
					this._TYPE10 = value;
				}
			}
		}
		
		[Column(Storage="_CUSN10", DbType="NVarChar(50)")]
		public string CUSN10
		{
			get
			{
				return this._CUSN10;
			}
			set
			{
				if ((this._CUSN10 != value))
				{
					this._CUSN10 = value;
				}
			}
		}
		
		[Column(Storage="_VNDR10", DbType="NVarChar(50)")]
		public string VNDR10
		{
			get
			{
				return this._VNDR10;
			}
			set
			{
				if ((this._VNDR10 != value))
				{
					this._VNDR10 = value;
				}
			}
		}
		
		[Column(Storage="_PSTL10", DbType="NVarChar(50)")]
		public string PSTL10
		{
			get
			{
				return this._PSTL10;
			}
			set
			{
				if ((this._PSTL10 != value))
				{
					this._PSTL10 = value;
				}
			}
		}
		
		[Column(Storage="_DESC10", DbType="NVarChar(50)")]
		public string DESC10
		{
			get
			{
				return this._DESC10;
			}
			set
			{
				if ((this._DESC10 != value))
				{
					this._DESC10 = value;
				}
			}
		}
		
		[Column(Storage="_CODE10", DbType="NVarChar(50)")]
		public string CODE10
		{
			get
			{
				return this._CODE10;
			}
			set
			{
				if ((this._CODE10 != value))
				{
					this._CODE10 = value;
				}
			}
		}
		
		[Column(Storage="_UpdateFlag", DbType="Bit")]
		public System.Nullable<bool> UpdateFlag
		{
			get
			{
				return this._UpdateFlag;
			}
			set
			{
				if ((this._UpdateFlag != value))
				{
					this._UpdateFlag = value;
				}
			}
		}
		
		[Column(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this._CreateDate = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.PHP11")]
	public partial class PHP11
	{
		
		private string _CONO11;
		
		private string _ORDN11;
		
		private string _LINE11;
		
		private string _PCOL11;
		
		private string _TYPE11;
		
		private string _DESC11;
		
		private string _CODE11;
		
		private System.Nullable<bool> _UpdateFlag;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		public PHP11()
		{
		}
		
		[Column(Storage="_CONO11", DbType="NVarChar(50)")]
		public string CONO11
		{
			get
			{
				return this._CONO11;
			}
			set
			{
				if ((this._CONO11 != value))
				{
					this._CONO11 = value;
				}
			}
		}
		
		[Column(Storage="_ORDN11", DbType="NVarChar(50)")]
		public string ORDN11
		{
			get
			{
				return this._ORDN11;
			}
			set
			{
				if ((this._ORDN11 != value))
				{
					this._ORDN11 = value;
				}
			}
		}
		
		[Column(Storage="_LINE11", DbType="NVarChar(50)")]
		public string LINE11
		{
			get
			{
				return this._LINE11;
			}
			set
			{
				if ((this._LINE11 != value))
				{
					this._LINE11 = value;
				}
			}
		}
		
		[Column(Storage="_PCOL11", DbType="NVarChar(50)")]
		public string PCOL11
		{
			get
			{
				return this._PCOL11;
			}
			set
			{
				if ((this._PCOL11 != value))
				{
					this._PCOL11 = value;
				}
			}
		}
		
		[Column(Storage="_TYPE11", DbType="NVarChar(50)")]
		public string TYPE11
		{
			get
			{
				return this._TYPE11;
			}
			set
			{
				if ((this._TYPE11 != value))
				{
					this._TYPE11 = value;
				}
			}
		}
		
		[Column(Storage="_DESC11", DbType="NVarChar(50)")]
		public string DESC11
		{
			get
			{
				return this._DESC11;
			}
			set
			{
				if ((this._DESC11 != value))
				{
					this._DESC11 = value;
				}
			}
		}
		
		[Column(Storage="_CODE11", DbType="NVarChar(50)")]
		public string CODE11
		{
			get
			{
				return this._CODE11;
			}
			set
			{
				if ((this._CODE11 != value))
				{
					this._CODE11 = value;
				}
			}
		}
		
		[Column(Storage="_UpdateFlag", DbType="Bit")]
		public System.Nullable<bool> UpdateFlag
		{
			get
			{
				return this._UpdateFlag;
			}
			set
			{
				if ((this._UpdateFlag != value))
				{
					this._UpdateFlag = value;
				}
			}
		}
		
		[Column(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this._CreateDate = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.PODetail")]
	public partial class PODetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Company;
		
		private string _PONO;
		
		private int _Version;
		
		private int _AmendmentNo;
		
		private int _OrderLine;
		
		private string _ItemCode;
		
		private System.Nullable<decimal> _Tolerance;
		
		private string _Flag;
		
		private System.Nullable<System.DateTime> _ConfirmETADate;
		
		private System.Nullable<int> _Leadtime;
		
		private string _LC;
		
		private string _ProjectNo;
		
		private System.Nullable<System.DateTime> _WOStartDate;
		
		private string _SupplierReference;
		
		private string _Specification;
		
		private string _AdditionalReason;
		
		private System.Nullable<decimal> _AdditionalCost;
		
		private string _WorkOrderNo;
		
		private string _PHUom;
		
		private string _SupplierUom;
		
		private string _Commodity;
		
		private System.Nullable<double> _ConversionFactor;
		
		private string _WOStatus;
		
		private string _StickColor;
		
		private System.Nullable<decimal> _TotalReceivedQty;
		
		private System.Nullable<decimal> _PHOutstandingQty;
		
		private System.Nullable<decimal> _SupplierPrice;
		
		private string _CustStyleNo;
		
		private string _CustOrderNo;
		
		private System.Nullable<decimal> _HandWorkCost;
		
		private System.Nullable<decimal> _StickCost;
		
		private System.Nullable<decimal> _PrintedCost;
		
		private System.Nullable<decimal> _Height;
		
		private System.Nullable<decimal> _weight;
		
		private System.Nullable<decimal> _Weigh;
		
		private System.Nullable<bool> _VersionFlag;
		
		private System.Nullable<bool> _OpenToProject;
		
		private string _BuyerQtyDimension;
		
		private string _SuppQtyDimension;
		
		private System.Nullable<bool> _HaveSupplementSheet;
		
		private System.Nullable<System.DateTime> _ReadyDate;
		
		private System.Nullable<System.DateTime> _ReceivedDate;
		
		private string _BrandName;
		
		private System.Nullable<System.DateTime> _HDODate;
		
		private System.Nullable<bool> _UnitFlag;
		
		private string _ClassCode;
		
		private string _Replenishment;
		
		private System.Nullable<bool> _IsAutoEmailNote;
		
		private System.Nullable<System.DateTime> _AutoEmailNoteDate;
		
		private string _TradeMethod;
		
		private EntitySet<POConfirm> _POConfirms;
		
		private EntityRef<PODetailPhoto> _PODetailPhoto;
		
		private EntitySet<POColorSizeDetail> _POColorSizeDetails;
		
		private EntityRef<POHeader> _POHeader;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnPONOChanging(string value);
    partial void OnPONOChanged();
    partial void OnVersionChanging(int value);
    partial void OnVersionChanged();
    partial void OnAmendmentNoChanging(int value);
    partial void OnAmendmentNoChanged();
    partial void OnOrderLineChanging(int value);
    partial void OnOrderLineChanged();
    partial void OnItemCodeChanging(string value);
    partial void OnItemCodeChanged();
    partial void OnToleranceChanging(System.Nullable<decimal> value);
    partial void OnToleranceChanged();
    partial void OnFlagChanging(string value);
    partial void OnFlagChanged();
    partial void OnConfirmETADateChanging(System.Nullable<System.DateTime> value);
    partial void OnConfirmETADateChanged();
    partial void OnLeadtimeChanging(System.Nullable<int> value);
    partial void OnLeadtimeChanged();
    partial void OnLCChanging(string value);
    partial void OnLCChanged();
    partial void OnProjectNoChanging(string value);
    partial void OnProjectNoChanged();
    partial void OnWOStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnWOStartDateChanged();
    partial void OnSupplierReferenceChanging(string value);
    partial void OnSupplierReferenceChanged();
    partial void OnSpecificationChanging(string value);
    partial void OnSpecificationChanged();
    partial void OnAdditionalReasonChanging(string value);
    partial void OnAdditionalReasonChanged();
    partial void OnAdditionalCostChanging(System.Nullable<decimal> value);
    partial void OnAdditionalCostChanged();
    partial void OnWorkOrderNoChanging(string value);
    partial void OnWorkOrderNoChanged();
    partial void OnPHUomChanging(string value);
    partial void OnPHUomChanged();
    partial void OnSupplierUomChanging(string value);
    partial void OnSupplierUomChanged();
    partial void OnCommodityChanging(string value);
    partial void OnCommodityChanged();
    partial void OnConversionFactorChanging(System.Nullable<double> value);
    partial void OnConversionFactorChanged();
    partial void OnWOStatusChanging(string value);
    partial void OnWOStatusChanged();
    partial void OnStickColorChanging(string value);
    partial void OnStickColorChanged();
    partial void OnTotalReceivedQtyChanging(System.Nullable<decimal> value);
    partial void OnTotalReceivedQtyChanged();
    partial void OnPHOutstandingQtyChanging(System.Nullable<decimal> value);
    partial void OnPHOutstandingQtyChanged();
    partial void OnSupplierPriceChanging(System.Nullable<decimal> value);
    partial void OnSupplierPriceChanged();
    partial void OnCustStyleNoChanging(string value);
    partial void OnCustStyleNoChanged();
    partial void OnCustOrderNoChanging(string value);
    partial void OnCustOrderNoChanged();
    partial void OnHandWorkCostChanging(System.Nullable<decimal> value);
    partial void OnHandWorkCostChanged();
    partial void OnStickCostChanging(System.Nullable<decimal> value);
    partial void OnStickCostChanged();
    partial void OnPrintedCostChanging(System.Nullable<decimal> value);
    partial void OnPrintedCostChanged();
    partial void OnHeightChanging(System.Nullable<decimal> value);
    partial void OnHeightChanged();
    partial void OnweightChanging(System.Nullable<decimal> value);
    partial void OnweightChanged();
    partial void OnWeighChanging(System.Nullable<decimal> value);
    partial void OnWeighChanged();
    partial void OnVersionFlagChanging(System.Nullable<bool> value);
    partial void OnVersionFlagChanged();
    partial void OnOpenToProjectChanging(System.Nullable<bool> value);
    partial void OnOpenToProjectChanged();
    partial void OnBuyerQtyDimensionChanging(string value);
    partial void OnBuyerQtyDimensionChanged();
    partial void OnSuppQtyDimensionChanging(string value);
    partial void OnSuppQtyDimensionChanged();
    partial void OnHaveSupplementSheetChanging(System.Nullable<bool> value);
    partial void OnHaveSupplementSheetChanged();
    partial void OnReadyDateChanging(System.Nullable<System.DateTime> value);
    partial void OnReadyDateChanged();
    partial void OnReceivedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnReceivedDateChanged();
    partial void OnBrandNameChanging(string value);
    partial void OnBrandNameChanged();
    partial void OnHDODateChanging(System.Nullable<System.DateTime> value);
    partial void OnHDODateChanged();
    partial void OnUnitFlagChanging(System.Nullable<bool> value);
    partial void OnUnitFlagChanged();
    partial void OnClassCodeChanging(string value);
    partial void OnClassCodeChanged();
    partial void OnReplenishmentChanging(string value);
    partial void OnReplenishmentChanged();
    partial void OnIsAutoEmailNoteChanging(System.Nullable<bool> value);
    partial void OnIsAutoEmailNoteChanged();
    partial void OnAutoEmailNoteDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAutoEmailNoteDateChanged();
    partial void OnTradeMethodChanging(string value);
    partial void OnTradeMethodChanged();
    #endregion
		
		public PODetail()
		{
			this._POConfirms = new EntitySet<POConfirm>(new Action<POConfirm>(this.attach_POConfirms), new Action<POConfirm>(this.detach_POConfirms));
			this._PODetailPhoto = default(EntityRef<PODetailPhoto>);
			this._POColorSizeDetails = new EntitySet<POColorSizeDetail>(new Action<POColorSizeDetail>(this.attach_POColorSizeDetails), new Action<POColorSizeDetail>(this.detach_POColorSizeDetails));
			this._POHeader = default(EntityRef<POHeader>);
			OnCreated();
		}
		
		[Column(Storage="_Company", DbType="VarChar(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					if (this._POHeader.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[Column(Storage="_PONO", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PONO
		{
			get
			{
				return this._PONO;
			}
			set
			{
				if ((this._PONO != value))
				{
					if (this._POHeader.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPONOChanging(value);
					this.SendPropertyChanging();
					this._PONO = value;
					this.SendPropertyChanged("PONO");
					this.OnPONOChanged();
				}
			}
		}
		
		[Column(Storage="_Version", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					if (this._POHeader.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[Column(Storage="_AmendmentNo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AmendmentNo
		{
			get
			{
				return this._AmendmentNo;
			}
			set
			{
				if ((this._AmendmentNo != value))
				{
					if (this._POHeader.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAmendmentNoChanging(value);
					this.SendPropertyChanging();
					this._AmendmentNo = value;
					this.SendPropertyChanged("AmendmentNo");
					this.OnAmendmentNoChanged();
				}
			}
		}
		
		[Column(Storage="_OrderLine", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int OrderLine
		{
			get
			{
				return this._OrderLine;
			}
			set
			{
				if ((this._OrderLine != value))
				{
					this.OnOrderLineChanging(value);
					this.SendPropertyChanging();
					this._OrderLine = value;
					this.SendPropertyChanged("OrderLine");
					this.OnOrderLineChanged();
				}
			}
		}
		
		[Column(Storage="_ItemCode", DbType="NVarChar(18) NOT NULL", CanBeNull=false)]
		public string ItemCode
		{
			get
			{
				return this._ItemCode;
			}
			set
			{
				if ((this._ItemCode != value))
				{
					this.OnItemCodeChanging(value);
					this.SendPropertyChanging();
					this._ItemCode = value;
					this.SendPropertyChanged("ItemCode");
					this.OnItemCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Tolerance", DbType="Decimal(5,2)")]
		public System.Nullable<decimal> Tolerance
		{
			get
			{
				return this._Tolerance;
			}
			set
			{
				if ((this._Tolerance != value))
				{
					this.OnToleranceChanging(value);
					this.SendPropertyChanging();
					this._Tolerance = value;
					this.SendPropertyChanged("Tolerance");
					this.OnToleranceChanged();
				}
			}
		}
		
		[Column(Storage="_Flag", DbType="NVarChar(50)")]
		public string Flag
		{
			get
			{
				return this._Flag;
			}
			set
			{
				if ((this._Flag != value))
				{
					this.OnFlagChanging(value);
					this.SendPropertyChanging();
					this._Flag = value;
					this.SendPropertyChanged("Flag");
					this.OnFlagChanged();
				}
			}
		}
		
		[Column(Storage="_ConfirmETADate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ConfirmETADate
		{
			get
			{
				return this._ConfirmETADate;
			}
			set
			{
				if ((this._ConfirmETADate != value))
				{
					this.OnConfirmETADateChanging(value);
					this.SendPropertyChanging();
					this._ConfirmETADate = value;
					this.SendPropertyChanged("ConfirmETADate");
					this.OnConfirmETADateChanged();
				}
			}
		}
		
		[Column(Storage="_Leadtime", DbType="Int")]
		public System.Nullable<int> Leadtime
		{
			get
			{
				return this._Leadtime;
			}
			set
			{
				if ((this._Leadtime != value))
				{
					this.OnLeadtimeChanging(value);
					this.SendPropertyChanging();
					this._Leadtime = value;
					this.SendPropertyChanged("Leadtime");
					this.OnLeadtimeChanged();
				}
			}
		}
		
		[Column(Storage="_LC", DbType="NVarChar(100)")]
		public string LC
		{
			get
			{
				return this._LC;
			}
			set
			{
				if ((this._LC != value))
				{
					this.OnLCChanging(value);
					this.SendPropertyChanging();
					this._LC = value;
					this.SendPropertyChanged("LC");
					this.OnLCChanged();
				}
			}
		}
		
		[Column(Storage="_ProjectNo", DbType="NVarChar(100)")]
		public string ProjectNo
		{
			get
			{
				return this._ProjectNo;
			}
			set
			{
				if ((this._ProjectNo != value))
				{
					this.OnProjectNoChanging(value);
					this.SendPropertyChanging();
					this._ProjectNo = value;
					this.SendPropertyChanged("ProjectNo");
					this.OnProjectNoChanged();
				}
			}
		}
		
		[Column(Storage="_WOStartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> WOStartDate
		{
			get
			{
				return this._WOStartDate;
			}
			set
			{
				if ((this._WOStartDate != value))
				{
					this.OnWOStartDateChanging(value);
					this.SendPropertyChanging();
					this._WOStartDate = value;
					this.SendPropertyChanged("WOStartDate");
					this.OnWOStartDateChanged();
				}
			}
		}
		
		[Column(Storage="_SupplierReference", DbType="NVarChar(100)")]
		public string SupplierReference
		{
			get
			{
				return this._SupplierReference;
			}
			set
			{
				if ((this._SupplierReference != value))
				{
					this.OnSupplierReferenceChanging(value);
					this.SendPropertyChanging();
					this._SupplierReference = value;
					this.SendPropertyChanged("SupplierReference");
					this.OnSupplierReferenceChanged();
				}
			}
		}
		
		[Column(Storage="_Specification", DbType="NVarChar(100)")]
		public string Specification
		{
			get
			{
				return this._Specification;
			}
			set
			{
				if ((this._Specification != value))
				{
					this.OnSpecificationChanging(value);
					this.SendPropertyChanging();
					this._Specification = value;
					this.SendPropertyChanged("Specification");
					this.OnSpecificationChanged();
				}
			}
		}
		
		[Column(Storage="_AdditionalReason", DbType="NVarChar(400)")]
		public string AdditionalReason
		{
			get
			{
				return this._AdditionalReason;
			}
			set
			{
				if ((this._AdditionalReason != value))
				{
					this.OnAdditionalReasonChanging(value);
					this.SendPropertyChanging();
					this._AdditionalReason = value;
					this.SendPropertyChanged("AdditionalReason");
					this.OnAdditionalReasonChanged();
				}
			}
		}
		
		[Column(Storage="_AdditionalCost", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> AdditionalCost
		{
			get
			{
				return this._AdditionalCost;
			}
			set
			{
				if ((this._AdditionalCost != value))
				{
					this.OnAdditionalCostChanging(value);
					this.SendPropertyChanging();
					this._AdditionalCost = value;
					this.SendPropertyChanged("AdditionalCost");
					this.OnAdditionalCostChanged();
				}
			}
		}
		
		[Column(Storage="_WorkOrderNo", DbType="NVarChar(14)")]
		public string WorkOrderNo
		{
			get
			{
				return this._WorkOrderNo;
			}
			set
			{
				if ((this._WorkOrderNo != value))
				{
					this.OnWorkOrderNoChanging(value);
					this.SendPropertyChanging();
					this._WorkOrderNo = value;
					this.SendPropertyChanged("WorkOrderNo");
					this.OnWorkOrderNoChanged();
				}
			}
		}
		
		[Column(Storage="_PHUom", DbType="NVarChar(10)")]
		public string PHUom
		{
			get
			{
				return this._PHUom;
			}
			set
			{
				if ((this._PHUom != value))
				{
					this.OnPHUomChanging(value);
					this.SendPropertyChanging();
					this._PHUom = value;
					this.SendPropertyChanged("PHUom");
					this.OnPHUomChanged();
				}
			}
		}
		
		[Column(Storage="_SupplierUom", DbType="NVarChar(10)")]
		public string SupplierUom
		{
			get
			{
				return this._SupplierUom;
			}
			set
			{
				if ((this._SupplierUom != value))
				{
					this.OnSupplierUomChanging(value);
					this.SendPropertyChanging();
					this._SupplierUom = value;
					this.SendPropertyChanged("SupplierUom");
					this.OnSupplierUomChanged();
				}
			}
		}
		
		[Column(Storage="_Commodity", DbType="NVarChar(1000)")]
		public string Commodity
		{
			get
			{
				return this._Commodity;
			}
			set
			{
				if ((this._Commodity != value))
				{
					this.OnCommodityChanging(value);
					this.SendPropertyChanging();
					this._Commodity = value;
					this.SendPropertyChanged("Commodity");
					this.OnCommodityChanged();
				}
			}
		}
		
		[Column(Storage="_ConversionFactor", DbType="Float")]
		public System.Nullable<double> ConversionFactor
		{
			get
			{
				return this._ConversionFactor;
			}
			set
			{
				if ((this._ConversionFactor != value))
				{
					this.OnConversionFactorChanging(value);
					this.SendPropertyChanging();
					this._ConversionFactor = value;
					this.SendPropertyChanged("ConversionFactor");
					this.OnConversionFactorChanged();
				}
			}
		}
		
		[Column(Storage="_WOStatus", DbType="NVarChar(10)")]
		public string WOStatus
		{
			get
			{
				return this._WOStatus;
			}
			set
			{
				if ((this._WOStatus != value))
				{
					this.OnWOStatusChanging(value);
					this.SendPropertyChanging();
					this._WOStatus = value;
					this.SendPropertyChanged("WOStatus");
					this.OnWOStatusChanged();
				}
			}
		}
		
		[Column(Storage="_StickColor", DbType="NVarChar(100)")]
		public string StickColor
		{
			get
			{
				return this._StickColor;
			}
			set
			{
				if ((this._StickColor != value))
				{
					this.OnStickColorChanging(value);
					this.SendPropertyChanging();
					this._StickColor = value;
					this.SendPropertyChanged("StickColor");
					this.OnStickColorChanged();
				}
			}
		}
		
		[Column(Storage="_TotalReceivedQty", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> TotalReceivedQty
		{
			get
			{
				return this._TotalReceivedQty;
			}
			set
			{
				if ((this._TotalReceivedQty != value))
				{
					this.OnTotalReceivedQtyChanging(value);
					this.SendPropertyChanging();
					this._TotalReceivedQty = value;
					this.SendPropertyChanged("TotalReceivedQty");
					this.OnTotalReceivedQtyChanged();
				}
			}
		}
		
		[Column(Storage="_PHOutstandingQty", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> PHOutstandingQty
		{
			get
			{
				return this._PHOutstandingQty;
			}
			set
			{
				if ((this._PHOutstandingQty != value))
				{
					this.OnPHOutstandingQtyChanging(value);
					this.SendPropertyChanging();
					this._PHOutstandingQty = value;
					this.SendPropertyChanged("PHOutstandingQty");
					this.OnPHOutstandingQtyChanged();
				}
			}
		}
		
		[Column(Storage="_SupplierPrice", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> SupplierPrice
		{
			get
			{
				return this._SupplierPrice;
			}
			set
			{
				if ((this._SupplierPrice != value))
				{
					this.OnSupplierPriceChanging(value);
					this.SendPropertyChanging();
					this._SupplierPrice = value;
					this.SendPropertyChanged("SupplierPrice");
					this.OnSupplierPriceChanged();
				}
			}
		}
		
		[Column(Storage="_CustStyleNo", DbType="NVarChar(1000)")]
		public string CustStyleNo
		{
			get
			{
				return this._CustStyleNo;
			}
			set
			{
				if ((this._CustStyleNo != value))
				{
					this.OnCustStyleNoChanging(value);
					this.SendPropertyChanging();
					this._CustStyleNo = value;
					this.SendPropertyChanged("CustStyleNo");
					this.OnCustStyleNoChanged();
				}
			}
		}
		
		[Column(Storage="_CustOrderNo", DbType="NVarChar(1000)")]
		public string CustOrderNo
		{
			get
			{
				return this._CustOrderNo;
			}
			set
			{
				if ((this._CustOrderNo != value))
				{
					this.OnCustOrderNoChanging(value);
					this.SendPropertyChanging();
					this._CustOrderNo = value;
					this.SendPropertyChanged("CustOrderNo");
					this.OnCustOrderNoChanged();
				}
			}
		}
		
		[Column(Storage="_HandWorkCost", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> HandWorkCost
		{
			get
			{
				return this._HandWorkCost;
			}
			set
			{
				if ((this._HandWorkCost != value))
				{
					this.OnHandWorkCostChanging(value);
					this.SendPropertyChanging();
					this._HandWorkCost = value;
					this.SendPropertyChanged("HandWorkCost");
					this.OnHandWorkCostChanged();
				}
			}
		}
		
		[Column(Storage="_StickCost", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> StickCost
		{
			get
			{
				return this._StickCost;
			}
			set
			{
				if ((this._StickCost != value))
				{
					this.OnStickCostChanging(value);
					this.SendPropertyChanging();
					this._StickCost = value;
					this.SendPropertyChanged("StickCost");
					this.OnStickCostChanged();
				}
			}
		}
		
		[Column(Storage="_PrintedCost", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> PrintedCost
		{
			get
			{
				return this._PrintedCost;
			}
			set
			{
				if ((this._PrintedCost != value))
				{
					this.OnPrintedCostChanging(value);
					this.SendPropertyChanging();
					this._PrintedCost = value;
					this.SendPropertyChanged("PrintedCost");
					this.OnPrintedCostChanged();
				}
			}
		}
		
		[Column(Storage="_Height", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Height
		{
			get
			{
				return this._Height;
			}
			set
			{
				if ((this._Height != value))
				{
					this.OnHeightChanging(value);
					this.SendPropertyChanging();
					this._Height = value;
					this.SendPropertyChanged("Height");
					this.OnHeightChanged();
				}
			}
		}
		
		[Column(Storage="_weight", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> weight
		{
			get
			{
				return this._weight;
			}
			set
			{
				if ((this._weight != value))
				{
					this.OnweightChanging(value);
					this.SendPropertyChanging();
					this._weight = value;
					this.SendPropertyChanged("weight");
					this.OnweightChanged();
				}
			}
		}
		
		[Column(Storage="_Weigh", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Weigh
		{
			get
			{
				return this._Weigh;
			}
			set
			{
				if ((this._Weigh != value))
				{
					this.OnWeighChanging(value);
					this.SendPropertyChanging();
					this._Weigh = value;
					this.SendPropertyChanged("Weigh");
					this.OnWeighChanged();
				}
			}
		}
		
		[Column(Storage="_VersionFlag", DbType="Bit")]
		public System.Nullable<bool> VersionFlag
		{
			get
			{
				return this._VersionFlag;
			}
			set
			{
				if ((this._VersionFlag != value))
				{
					this.OnVersionFlagChanging(value);
					this.SendPropertyChanging();
					this._VersionFlag = value;
					this.SendPropertyChanged("VersionFlag");
					this.OnVersionFlagChanged();
				}
			}
		}
		
		[Column(Storage="_OpenToProject", DbType="Bit")]
		public System.Nullable<bool> OpenToProject
		{
			get
			{
				return this._OpenToProject;
			}
			set
			{
				if ((this._OpenToProject != value))
				{
					this.OnOpenToProjectChanging(value);
					this.SendPropertyChanging();
					this._OpenToProject = value;
					this.SendPropertyChanged("OpenToProject");
					this.OnOpenToProjectChanged();
				}
			}
		}
		
		[Column(Storage="_BuyerQtyDimension", DbType="NVarChar(10)")]
		public string BuyerQtyDimension
		{
			get
			{
				return this._BuyerQtyDimension;
			}
			set
			{
				if ((this._BuyerQtyDimension != value))
				{
					this.OnBuyerQtyDimensionChanging(value);
					this.SendPropertyChanging();
					this._BuyerQtyDimension = value;
					this.SendPropertyChanged("BuyerQtyDimension");
					this.OnBuyerQtyDimensionChanged();
				}
			}
		}
		
		[Column(Storage="_SuppQtyDimension", DbType="NVarChar(10)")]
		public string SuppQtyDimension
		{
			get
			{
				return this._SuppQtyDimension;
			}
			set
			{
				if ((this._SuppQtyDimension != value))
				{
					this.OnSuppQtyDimensionChanging(value);
					this.SendPropertyChanging();
					this._SuppQtyDimension = value;
					this.SendPropertyChanged("SuppQtyDimension");
					this.OnSuppQtyDimensionChanged();
				}
			}
		}
		
		[Column(Storage="_HaveSupplementSheet", DbType="Bit")]
		public System.Nullable<bool> HaveSupplementSheet
		{
			get
			{
				return this._HaveSupplementSheet;
			}
			set
			{
				if ((this._HaveSupplementSheet != value))
				{
					this.OnHaveSupplementSheetChanging(value);
					this.SendPropertyChanging();
					this._HaveSupplementSheet = value;
					this.SendPropertyChanged("HaveSupplementSheet");
					this.OnHaveSupplementSheetChanged();
				}
			}
		}
		
		[Column(Storage="_ReadyDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ReadyDate
		{
			get
			{
				return this._ReadyDate;
			}
			set
			{
				if ((this._ReadyDate != value))
				{
					this.OnReadyDateChanging(value);
					this.SendPropertyChanging();
					this._ReadyDate = value;
					this.SendPropertyChanged("ReadyDate");
					this.OnReadyDateChanged();
				}
			}
		}
		
		[Column(Storage="_ReceivedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ReceivedDate
		{
			get
			{
				return this._ReceivedDate;
			}
			set
			{
				if ((this._ReceivedDate != value))
				{
					this.OnReceivedDateChanging(value);
					this.SendPropertyChanging();
					this._ReceivedDate = value;
					this.SendPropertyChanged("ReceivedDate");
					this.OnReceivedDateChanged();
				}
			}
		}
		
		[Column(Storage="_BrandName", DbType="VarChar(50)")]
		public string BrandName
		{
			get
			{
				return this._BrandName;
			}
			set
			{
				if ((this._BrandName != value))
				{
					this.OnBrandNameChanging(value);
					this.SendPropertyChanging();
					this._BrandName = value;
					this.SendPropertyChanged("BrandName");
					this.OnBrandNameChanged();
				}
			}
		}
		
		[Column(Storage="_HDODate", DbType="DateTime")]
		public System.Nullable<System.DateTime> HDODate
		{
			get
			{
				return this._HDODate;
			}
			set
			{
				if ((this._HDODate != value))
				{
					this.OnHDODateChanging(value);
					this.SendPropertyChanging();
					this._HDODate = value;
					this.SendPropertyChanged("HDODate");
					this.OnHDODateChanged();
				}
			}
		}
		
		[Column(Storage="_UnitFlag", DbType="Bit")]
		public System.Nullable<bool> UnitFlag
		{
			get
			{
				return this._UnitFlag;
			}
			set
			{
				if ((this._UnitFlag != value))
				{
					this.OnUnitFlagChanging(value);
					this.SendPropertyChanging();
					this._UnitFlag = value;
					this.SendPropertyChanged("UnitFlag");
					this.OnUnitFlagChanged();
				}
			}
		}
		
		[Column(Storage="_ClassCode", DbType="NVarChar(5)")]
		public string ClassCode
		{
			get
			{
				return this._ClassCode;
			}
			set
			{
				if ((this._ClassCode != value))
				{
					this.OnClassCodeChanging(value);
					this.SendPropertyChanging();
					this._ClassCode = value;
					this.SendPropertyChanged("ClassCode");
					this.OnClassCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Replenishment", DbType="NVarChar(10)")]
		public string Replenishment
		{
			get
			{
				return this._Replenishment;
			}
			set
			{
				if ((this._Replenishment != value))
				{
					this.OnReplenishmentChanging(value);
					this.SendPropertyChanging();
					this._Replenishment = value;
					this.SendPropertyChanged("Replenishment");
					this.OnReplenishmentChanged();
				}
			}
		}
		
		[Column(Storage="_IsAutoEmailNote", DbType="Bit")]
		public System.Nullable<bool> IsAutoEmailNote
		{
			get
			{
				return this._IsAutoEmailNote;
			}
			set
			{
				if ((this._IsAutoEmailNote != value))
				{
					this.OnIsAutoEmailNoteChanging(value);
					this.SendPropertyChanging();
					this._IsAutoEmailNote = value;
					this.SendPropertyChanged("IsAutoEmailNote");
					this.OnIsAutoEmailNoteChanged();
				}
			}
		}
		
		[Column(Storage="_AutoEmailNoteDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AutoEmailNoteDate
		{
			get
			{
				return this._AutoEmailNoteDate;
			}
			set
			{
				if ((this._AutoEmailNoteDate != value))
				{
					this.OnAutoEmailNoteDateChanging(value);
					this.SendPropertyChanging();
					this._AutoEmailNoteDate = value;
					this.SendPropertyChanged("AutoEmailNoteDate");
					this.OnAutoEmailNoteDateChanged();
				}
			}
		}
		
		[Column(Storage="_TradeMethod", DbType="NVarChar(20)")]
		public string TradeMethod
		{
			get
			{
				return this._TradeMethod;
			}
			set
			{
				if ((this._TradeMethod != value))
				{
					this.OnTradeMethodChanging(value);
					this.SendPropertyChanging();
					this._TradeMethod = value;
					this.SendPropertyChanged("TradeMethod");
					this.OnTradeMethodChanged();
				}
			}
		}
		
		[Association(Name="PODetail_POConfirm", Storage="_POConfirms", ThisKey="Company,PONO,Version,AmendmentNo,OrderLine", OtherKey="Company,PONO,Version,AmendmentNo,OrderLine")]
		public EntitySet<POConfirm> POConfirms
		{
			get
			{
				return this._POConfirms;
			}
			set
			{
				this._POConfirms.Assign(value);
			}
		}
		
		[Association(Name="PODetail_PODetailPhoto", Storage="_PODetailPhoto", ThisKey="Company,PONO,Version,AmendmentNo,OrderLine", OtherKey="Company,PONO,Version,AmendmentNo,OrderLine", IsUnique=true, IsForeignKey=false)]
		public PODetailPhoto PODetailPhoto
		{
			get
			{
				return this._PODetailPhoto.Entity;
			}
			set
			{
				PODetailPhoto previousValue = this._PODetailPhoto.Entity;
				if (((previousValue != value) 
							|| (this._PODetailPhoto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PODetailPhoto.Entity = null;
						previousValue.PODetail = null;
					}
					this._PODetailPhoto.Entity = value;
					if ((value != null))
					{
						value.PODetail = this;
					}
					this.SendPropertyChanged("PODetailPhoto");
				}
			}
		}
		
		[Association(Name="PODetail_POColorSizeDetail", Storage="_POColorSizeDetails", ThisKey="Company,PONO,Version,AmendmentNo,OrderLine", OtherKey="Company,PONO,Version,AmendmentNo,OrderLine")]
		public EntitySet<POColorSizeDetail> POColorSizeDetails
		{
			get
			{
				return this._POColorSizeDetails;
			}
			set
			{
				this._POColorSizeDetails.Assign(value);
			}
		}
		
		[Association(Name="POHeader_PODetail", Storage="_POHeader", ThisKey="Company,PONO,Version,AmendmentNo", OtherKey="Company,PONO,Version,AmendmentNo", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public POHeader POHeader
		{
			get
			{
				return this._POHeader.Entity;
			}
			set
			{
				POHeader previousValue = this._POHeader.Entity;
				if (((previousValue != value) 
							|| (this._POHeader.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._POHeader.Entity = null;
						previousValue.PODetails.Remove(this);
					}
					this._POHeader.Entity = value;
					if ((value != null))
					{
						value.PODetails.Add(this);
						this._Company = value.Company;
						this._PONO = value.PONO;
						this._Version = value.Version;
						this._AmendmentNo = value.AmendmentNo;
					}
					else
					{
						this._Company = default(string);
						this._PONO = default(string);
						this._Version = default(int);
						this._AmendmentNo = default(int);
					}
					this.SendPropertyChanged("POHeader");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_POConfirms(POConfirm entity)
		{
			this.SendPropertyChanging();
			entity.PODetail = this;
		}
		
		private void detach_POConfirms(POConfirm entity)
		{
			this.SendPropertyChanging();
			entity.PODetail = null;
		}
		
		private void attach_POColorSizeDetails(POColorSizeDetail entity)
		{
			this.SendPropertyChanging();
			entity.PODetail = this;
		}
		
		private void detach_POColorSizeDetails(POColorSizeDetail entity)
		{
			this.SendPropertyChanging();
			entity.PODetail = null;
		}
	}
	
	[Table(Name="dbo.POHeader")]
	public partial class POHeader : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Company;
		
		private string _PONO;
		
		private int _Version;
		
		private int _AmendmentNo;
		
		private System.Nullable<System.DateTime> _OrderDate;
		
		private string _Supplier;
		
		private string _Flag;
		
		private string _Dept;
		
		private System.Nullable<int> _PurchaseOfficerCode;
		
		private string _PurchaseOfficer;
		
		private System.Nullable<int> _OrderClass;
		
		private string _CustStyleNo;
		
		private string _CustOrderNo;
		
		private System.Nullable<int> _ERPAmendment;
		
		private string _Factory;
		
		private System.Nullable<decimal> _TotalReceivedQty;
		
		private System.Nullable<double> _Rate;
		
		private System.Nullable<System.DateTime> _ShipmentDate;
		
		private string _ShipMode;
		
		private string _PaymentTermsType;
		
		private string _PaymentMethod;
		
		private string _ReceivingAddress;
		
		private string _AddtionalTermsAndConditions;
		
		private string _DeliveryAddress;
		
		private string _SupplierName;
		
		private string _PaymentTerms;
		
		private string _DeliveryTerm;
		
		private string _AttnPerson;
		
		private string _TelNumber;
		
		private string _FaxNumber;
		
		private string _SupplierAddress;
		
		private string _Destination;
		
		private string _Country;
		
		private string _Currency;
		
		private System.Nullable<int> _POType;
		
		private System.Nullable<System.DateTime> _LastUpdateDtime;
		
		private System.Nullable<decimal> _PHOutstandingQty;
		
		private string _ReportTitle;
		
		private string _MaterialCategory;
		
		private string _Status;
		
		private string _PHAttnPerson;
		
		private string _remark;
		
		private System.Nullable<bool> _VersionFlag;
		
		private string _Email;
		
		private string _Incoterms;
		
		private string _EndCustCode;
		
		private string _LocationOfSuppFactory;
		
		private string _TransitPoint;
		
		private string _EndPoint;
		
		private string _EndPointAddress;
		
		private System.Nullable<int> _TransitFrame;
		
		private System.Nullable<int> _IndividualAssociate;
		
		private System.Nullable<bool> _MoreBuyerSizeCup;
		
		private string _ClassCode;
		
		private System.Nullable<bool> _FOC;
		
		private System.Nullable<bool> _CurrencyFlag;
		
		private System.Nullable<bool> _PaymentTermFlag;
		
		private System.Nullable<bool> _IncotermFlag;
		
		private string _David;
		
		private System.Nullable<System.DateTime> _OpTime;
		
		private string _TransitMode2;
		
		private string _BuyerCode;
		
		private string _DeliveryRouting;
		
		private EntityRef<POPDF> _POPDF;
		
		private EntitySet<POReport> _POReports;
		
		private EntitySet<POTerm> _POTerms;
		
		private EntitySet<PODetail> _PODetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnPONOChanging(string value);
    partial void OnPONOChanged();
    partial void OnVersionChanging(int value);
    partial void OnVersionChanged();
    partial void OnAmendmentNoChanging(int value);
    partial void OnAmendmentNoChanged();
    partial void OnOrderDateChanging(System.Nullable<System.DateTime> value);
    partial void OnOrderDateChanged();
    partial void OnSupplierChanging(string value);
    partial void OnSupplierChanged();
    partial void OnFlagChanging(string value);
    partial void OnFlagChanged();
    partial void OnDeptChanging(string value);
    partial void OnDeptChanged();
    partial void OnPurchaseOfficerCodeChanging(System.Nullable<int> value);
    partial void OnPurchaseOfficerCodeChanged();
    partial void OnPurchaseOfficerChanging(string value);
    partial void OnPurchaseOfficerChanged();
    partial void OnOrderClassChanging(System.Nullable<int> value);
    partial void OnOrderClassChanged();
    partial void OnCustStyleNoChanging(string value);
    partial void OnCustStyleNoChanged();
    partial void OnCustOrderNoChanging(string value);
    partial void OnCustOrderNoChanged();
    partial void OnERPAmendmentChanging(System.Nullable<int> value);
    partial void OnERPAmendmentChanged();
    partial void OnFactoryChanging(string value);
    partial void OnFactoryChanged();
    partial void OnTotalReceivedQtyChanging(System.Nullable<decimal> value);
    partial void OnTotalReceivedQtyChanged();
    partial void OnRateChanging(System.Nullable<double> value);
    partial void OnRateChanged();
    partial void OnShipmentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnShipmentDateChanged();
    partial void OnShipModeChanging(string value);
    partial void OnShipModeChanged();
    partial void OnPaymentTermsTypeChanging(string value);
    partial void OnPaymentTermsTypeChanged();
    partial void OnPaymentMethodChanging(string value);
    partial void OnPaymentMethodChanged();
    partial void OnReceivingAddressChanging(string value);
    partial void OnReceivingAddressChanged();
    partial void OnAddtionalTermsAndConditionsChanging(string value);
    partial void OnAddtionalTermsAndConditionsChanged();
    partial void OnDeliveryAddressChanging(string value);
    partial void OnDeliveryAddressChanged();
    partial void OnSupplierNameChanging(string value);
    partial void OnSupplierNameChanged();
    partial void OnPaymentTermsChanging(string value);
    partial void OnPaymentTermsChanged();
    partial void OnDeliveryTermChanging(string value);
    partial void OnDeliveryTermChanged();
    partial void OnAttnPersonChanging(string value);
    partial void OnAttnPersonChanged();
    partial void OnTelNumberChanging(string value);
    partial void OnTelNumberChanged();
    partial void OnFaxNumberChanging(string value);
    partial void OnFaxNumberChanged();
    partial void OnSupplierAddressChanging(string value);
    partial void OnSupplierAddressChanged();
    partial void OnDestinationChanging(string value);
    partial void OnDestinationChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnCurrencyChanging(string value);
    partial void OnCurrencyChanged();
    partial void OnPOTypeChanging(System.Nullable<int> value);
    partial void OnPOTypeChanged();
    partial void OnLastUpdateDtimeChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDtimeChanged();
    partial void OnPHOutstandingQtyChanging(System.Nullable<decimal> value);
    partial void OnPHOutstandingQtyChanged();
    partial void OnReportTitleChanging(string value);
    partial void OnReportTitleChanged();
    partial void OnMaterialCategoryChanging(string value);
    partial void OnMaterialCategoryChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnPHAttnPersonChanging(string value);
    partial void OnPHAttnPersonChanged();
    partial void OnremarkChanging(string value);
    partial void OnremarkChanged();
    partial void OnVersionFlagChanging(System.Nullable<bool> value);
    partial void OnVersionFlagChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnIncotermsChanging(string value);
    partial void OnIncotermsChanged();
    partial void OnEndCustCodeChanging(string value);
    partial void OnEndCustCodeChanged();
    partial void OnLocationOfSuppFactoryChanging(string value);
    partial void OnLocationOfSuppFactoryChanged();
    partial void OnTransitPointChanging(string value);
    partial void OnTransitPointChanged();
    partial void OnEndPointChanging(string value);
    partial void OnEndPointChanged();
    partial void OnEndPointAddressChanging(string value);
    partial void OnEndPointAddressChanged();
    partial void OnTransitFrameChanging(System.Nullable<int> value);
    partial void OnTransitFrameChanged();
    partial void OnIndividualAssociateChanging(System.Nullable<int> value);
    partial void OnIndividualAssociateChanged();
    partial void OnMoreBuyerSizeCupChanging(System.Nullable<bool> value);
    partial void OnMoreBuyerSizeCupChanged();
    partial void OnClassCodeChanging(string value);
    partial void OnClassCodeChanged();
    partial void OnFOCChanging(System.Nullable<bool> value);
    partial void OnFOCChanged();
    partial void OnCurrencyFlagChanging(System.Nullable<bool> value);
    partial void OnCurrencyFlagChanged();
    partial void OnPaymentTermFlagChanging(System.Nullable<bool> value);
    partial void OnPaymentTermFlagChanged();
    partial void OnIncotermFlagChanging(System.Nullable<bool> value);
    partial void OnIncotermFlagChanged();
    partial void OnDavidChanging(string value);
    partial void OnDavidChanged();
    partial void OnOpTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnOpTimeChanged();
    partial void OnTransitMode2Changing(string value);
    partial void OnTransitMode2Changed();
    partial void OnBuyerCodeChanging(string value);
    partial void OnBuyerCodeChanged();
    partial void OnDeliveryRoutingChanging(string value);
    partial void OnDeliveryRoutingChanged();
    #endregion
		
		public POHeader()
		{
			this._POPDF = default(EntityRef<POPDF>);
			this._POReports = new EntitySet<POReport>(new Action<POReport>(this.attach_POReports), new Action<POReport>(this.detach_POReports));
			this._POTerms = new EntitySet<POTerm>(new Action<POTerm>(this.attach_POTerms), new Action<POTerm>(this.detach_POTerms));
			this._PODetails = new EntitySet<PODetail>(new Action<PODetail>(this.attach_PODetails), new Action<PODetail>(this.detach_PODetails));
			OnCreated();
		}
		
		[Column(Storage="_Company", DbType="VarChar(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[Column(Storage="_PONO", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PONO
		{
			get
			{
				return this._PONO;
			}
			set
			{
				if ((this._PONO != value))
				{
					this.OnPONOChanging(value);
					this.SendPropertyChanging();
					this._PONO = value;
					this.SendPropertyChanged("PONO");
					this.OnPONOChanged();
				}
			}
		}
		
		[Column(Storage="_Version", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[Column(Storage="_AmendmentNo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AmendmentNo
		{
			get
			{
				return this._AmendmentNo;
			}
			set
			{
				if ((this._AmendmentNo != value))
				{
					this.OnAmendmentNoChanging(value);
					this.SendPropertyChanging();
					this._AmendmentNo = value;
					this.SendPropertyChanged("AmendmentNo");
					this.OnAmendmentNoChanged();
				}
			}
		}
		
		[Column(Storage="_OrderDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> OrderDate
		{
			get
			{
				return this._OrderDate;
			}
			set
			{
				if ((this._OrderDate != value))
				{
					this.OnOrderDateChanging(value);
					this.SendPropertyChanging();
					this._OrderDate = value;
					this.SendPropertyChanged("OrderDate");
					this.OnOrderDateChanged();
				}
			}
		}
		
		[Column(Storage="_Supplier", DbType="NVarChar(50)")]
		public string Supplier
		{
			get
			{
				return this._Supplier;
			}
			set
			{
				if ((this._Supplier != value))
				{
					this.OnSupplierChanging(value);
					this.SendPropertyChanging();
					this._Supplier = value;
					this.SendPropertyChanged("Supplier");
					this.OnSupplierChanged();
				}
			}
		}
		
		[Column(Storage="_Flag", DbType="NVarChar(50)")]
		public string Flag
		{
			get
			{
				return this._Flag;
			}
			set
			{
				if ((this._Flag != value))
				{
					this.OnFlagChanging(value);
					this.SendPropertyChanging();
					this._Flag = value;
					this.SendPropertyChanged("Flag");
					this.OnFlagChanged();
				}
			}
		}
		
		[Column(Storage="_Dept", DbType="NVarChar(50)")]
		public string Dept
		{
			get
			{
				return this._Dept;
			}
			set
			{
				if ((this._Dept != value))
				{
					this.OnDeptChanging(value);
					this.SendPropertyChanging();
					this._Dept = value;
					this.SendPropertyChanged("Dept");
					this.OnDeptChanged();
				}
			}
		}
		
		[Column(Storage="_PurchaseOfficerCode", DbType="Int")]
		public System.Nullable<int> PurchaseOfficerCode
		{
			get
			{
				return this._PurchaseOfficerCode;
			}
			set
			{
				if ((this._PurchaseOfficerCode != value))
				{
					this.OnPurchaseOfficerCodeChanging(value);
					this.SendPropertyChanging();
					this._PurchaseOfficerCode = value;
					this.SendPropertyChanged("PurchaseOfficerCode");
					this.OnPurchaseOfficerCodeChanged();
				}
			}
		}
		
		[Column(Storage="_PurchaseOfficer", DbType="NVarChar(50)")]
		public string PurchaseOfficer
		{
			get
			{
				return this._PurchaseOfficer;
			}
			set
			{
				if ((this._PurchaseOfficer != value))
				{
					this.OnPurchaseOfficerChanging(value);
					this.SendPropertyChanging();
					this._PurchaseOfficer = value;
					this.SendPropertyChanged("PurchaseOfficer");
					this.OnPurchaseOfficerChanged();
				}
			}
		}
		
		[Column(Storage="_OrderClass", DbType="Int")]
		public System.Nullable<int> OrderClass
		{
			get
			{
				return this._OrderClass;
			}
			set
			{
				if ((this._OrderClass != value))
				{
					this.OnOrderClassChanging(value);
					this.SendPropertyChanging();
					this._OrderClass = value;
					this.SendPropertyChanged("OrderClass");
					this.OnOrderClassChanged();
				}
			}
		}
		
		[Column(Storage="_CustStyleNo", DbType="NVarChar(150)")]
		public string CustStyleNo
		{
			get
			{
				return this._CustStyleNo;
			}
			set
			{
				if ((this._CustStyleNo != value))
				{
					this.OnCustStyleNoChanging(value);
					this.SendPropertyChanging();
					this._CustStyleNo = value;
					this.SendPropertyChanged("CustStyleNo");
					this.OnCustStyleNoChanged();
				}
			}
		}
		
		[Column(Storage="_CustOrderNo", DbType="NVarChar(150)")]
		public string CustOrderNo
		{
			get
			{
				return this._CustOrderNo;
			}
			set
			{
				if ((this._CustOrderNo != value))
				{
					this.OnCustOrderNoChanging(value);
					this.SendPropertyChanging();
					this._CustOrderNo = value;
					this.SendPropertyChanged("CustOrderNo");
					this.OnCustOrderNoChanged();
				}
			}
		}
		
		[Column(Storage="_ERPAmendment", DbType="Int")]
		public System.Nullable<int> ERPAmendment
		{
			get
			{
				return this._ERPAmendment;
			}
			set
			{
				if ((this._ERPAmendment != value))
				{
					this.OnERPAmendmentChanging(value);
					this.SendPropertyChanging();
					this._ERPAmendment = value;
					this.SendPropertyChanged("ERPAmendment");
					this.OnERPAmendmentChanged();
				}
			}
		}
		
		[Column(Storage="_Factory", DbType="NVarChar(100)")]
		public string Factory
		{
			get
			{
				return this._Factory;
			}
			set
			{
				if ((this._Factory != value))
				{
					this.OnFactoryChanging(value);
					this.SendPropertyChanging();
					this._Factory = value;
					this.SendPropertyChanged("Factory");
					this.OnFactoryChanged();
				}
			}
		}
		
		[Column(Storage="_TotalReceivedQty", DbType="Decimal(15,3)")]
		public System.Nullable<decimal> TotalReceivedQty
		{
			get
			{
				return this._TotalReceivedQty;
			}
			set
			{
				if ((this._TotalReceivedQty != value))
				{
					this.OnTotalReceivedQtyChanging(value);
					this.SendPropertyChanging();
					this._TotalReceivedQty = value;
					this.SendPropertyChanged("TotalReceivedQty");
					this.OnTotalReceivedQtyChanged();
				}
			}
		}
		
		[Column(Storage="_Rate", DbType="Float")]
		public System.Nullable<double> Rate
		{
			get
			{
				return this._Rate;
			}
			set
			{
				if ((this._Rate != value))
				{
					this.OnRateChanging(value);
					this.SendPropertyChanging();
					this._Rate = value;
					this.SendPropertyChanged("Rate");
					this.OnRateChanged();
				}
			}
		}
		
		[Column(Storage="_ShipmentDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ShipmentDate
		{
			get
			{
				return this._ShipmentDate;
			}
			set
			{
				if ((this._ShipmentDate != value))
				{
					this.OnShipmentDateChanging(value);
					this.SendPropertyChanging();
					this._ShipmentDate = value;
					this.SendPropertyChanged("ShipmentDate");
					this.OnShipmentDateChanged();
				}
			}
		}
		
		[Column(Storage="_ShipMode", DbType="NVarChar(100)")]
		public string ShipMode
		{
			get
			{
				return this._ShipMode;
			}
			set
			{
				if ((this._ShipMode != value))
				{
					this.OnShipModeChanging(value);
					this.SendPropertyChanging();
					this._ShipMode = value;
					this.SendPropertyChanged("ShipMode");
					this.OnShipModeChanged();
				}
			}
		}
		
		[Column(Storage="_PaymentTermsType", DbType="NVarChar(10)")]
		public string PaymentTermsType
		{
			get
			{
				return this._PaymentTermsType;
			}
			set
			{
				if ((this._PaymentTermsType != value))
				{
					this.OnPaymentTermsTypeChanging(value);
					this.SendPropertyChanging();
					this._PaymentTermsType = value;
					this.SendPropertyChanged("PaymentTermsType");
					this.OnPaymentTermsTypeChanged();
				}
			}
		}
		
		[Column(Storage="_PaymentMethod", DbType="NVarChar(100)")]
		public string PaymentMethod
		{
			get
			{
				return this._PaymentMethod;
			}
			set
			{
				if ((this._PaymentMethod != value))
				{
					this.OnPaymentMethodChanging(value);
					this.SendPropertyChanging();
					this._PaymentMethod = value;
					this.SendPropertyChanged("PaymentMethod");
					this.OnPaymentMethodChanged();
				}
			}
		}
		
		[Column(Storage="_ReceivingAddress", DbType="NVarChar(10)")]
		public string ReceivingAddress
		{
			get
			{
				return this._ReceivingAddress;
			}
			set
			{
				if ((this._ReceivingAddress != value))
				{
					this.OnReceivingAddressChanging(value);
					this.SendPropertyChanging();
					this._ReceivingAddress = value;
					this.SendPropertyChanged("ReceivingAddress");
					this.OnReceivingAddressChanged();
				}
			}
		}
		
		[Column(Storage="_AddtionalTermsAndConditions", DbType="NVarChar(4000)")]
		public string AddtionalTermsAndConditions
		{
			get
			{
				return this._AddtionalTermsAndConditions;
			}
			set
			{
				if ((this._AddtionalTermsAndConditions != value))
				{
					this.OnAddtionalTermsAndConditionsChanging(value);
					this.SendPropertyChanging();
					this._AddtionalTermsAndConditions = value;
					this.SendPropertyChanged("AddtionalTermsAndConditions");
					this.OnAddtionalTermsAndConditionsChanged();
				}
			}
		}
		
		[Column(Storage="_DeliveryAddress", DbType="NVarChar(500)")]
		public string DeliveryAddress
		{
			get
			{
				return this._DeliveryAddress;
			}
			set
			{
				if ((this._DeliveryAddress != value))
				{
					this.OnDeliveryAddressChanging(value);
					this.SendPropertyChanging();
					this._DeliveryAddress = value;
					this.SendPropertyChanged("DeliveryAddress");
					this.OnDeliveryAddressChanged();
				}
			}
		}
		
		[Column(Storage="_SupplierName", DbType="NVarChar(100)")]
		public string SupplierName
		{
			get
			{
				return this._SupplierName;
			}
			set
			{
				if ((this._SupplierName != value))
				{
					this.OnSupplierNameChanging(value);
					this.SendPropertyChanging();
					this._SupplierName = value;
					this.SendPropertyChanged("SupplierName");
					this.OnSupplierNameChanged();
				}
			}
		}
		
		[Column(Storage="_PaymentTerms", DbType="NVarChar(100)")]
		public string PaymentTerms
		{
			get
			{
				return this._PaymentTerms;
			}
			set
			{
				if ((this._PaymentTerms != value))
				{
					this.OnPaymentTermsChanging(value);
					this.SendPropertyChanging();
					this._PaymentTerms = value;
					this.SendPropertyChanged("PaymentTerms");
					this.OnPaymentTermsChanged();
				}
			}
		}
		
		[Column(Storage="_DeliveryTerm", DbType="NVarChar(100)")]
		public string DeliveryTerm
		{
			get
			{
				return this._DeliveryTerm;
			}
			set
			{
				if ((this._DeliveryTerm != value))
				{
					this.OnDeliveryTermChanging(value);
					this.SendPropertyChanging();
					this._DeliveryTerm = value;
					this.SendPropertyChanged("DeliveryTerm");
					this.OnDeliveryTermChanged();
				}
			}
		}
		
		[Column(Storage="_AttnPerson", DbType="NVarChar(100)")]
		public string AttnPerson
		{
			get
			{
				return this._AttnPerson;
			}
			set
			{
				if ((this._AttnPerson != value))
				{
					this.OnAttnPersonChanging(value);
					this.SendPropertyChanging();
					this._AttnPerson = value;
					this.SendPropertyChanged("AttnPerson");
					this.OnAttnPersonChanged();
				}
			}
		}
		
		[Column(Storage="_TelNumber", DbType="NVarChar(100)")]
		public string TelNumber
		{
			get
			{
				return this._TelNumber;
			}
			set
			{
				if ((this._TelNumber != value))
				{
					this.OnTelNumberChanging(value);
					this.SendPropertyChanging();
					this._TelNumber = value;
					this.SendPropertyChanged("TelNumber");
					this.OnTelNumberChanged();
				}
			}
		}
		
		[Column(Storage="_FaxNumber", DbType="NVarChar(100)")]
		public string FaxNumber
		{
			get
			{
				return this._FaxNumber;
			}
			set
			{
				if ((this._FaxNumber != value))
				{
					this.OnFaxNumberChanging(value);
					this.SendPropertyChanging();
					this._FaxNumber = value;
					this.SendPropertyChanged("FaxNumber");
					this.OnFaxNumberChanged();
				}
			}
		}
		
		[Column(Storage="_SupplierAddress", DbType="NVarChar(1000)")]
		public string SupplierAddress
		{
			get
			{
				return this._SupplierAddress;
			}
			set
			{
				if ((this._SupplierAddress != value))
				{
					this.OnSupplierAddressChanging(value);
					this.SendPropertyChanging();
					this._SupplierAddress = value;
					this.SendPropertyChanged("SupplierAddress");
					this.OnSupplierAddressChanged();
				}
			}
		}
		
		[Column(Storage="_Destination", DbType="NVarChar(50)")]
		public string Destination
		{
			get
			{
				return this._Destination;
			}
			set
			{
				if ((this._Destination != value))
				{
					this.OnDestinationChanging(value);
					this.SendPropertyChanging();
					this._Destination = value;
					this.SendPropertyChanged("Destination");
					this.OnDestinationChanged();
				}
			}
		}
		
		[Column(Storage="_Country", DbType="NVarChar(100)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[Column(Storage="_Currency", DbType="NVarChar(10)")]
		public string Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[Column(Storage="_POType", DbType="Int")]
		public System.Nullable<int> POType
		{
			get
			{
				return this._POType;
			}
			set
			{
				if ((this._POType != value))
				{
					this.OnPOTypeChanging(value);
					this.SendPropertyChanging();
					this._POType = value;
					this.SendPropertyChanged("POType");
					this.OnPOTypeChanged();
				}
			}
		}
		
		[Column(Storage="_LastUpdateDtime", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDtime
		{
			get
			{
				return this._LastUpdateDtime;
			}
			set
			{
				if ((this._LastUpdateDtime != value))
				{
					this.OnLastUpdateDtimeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDtime = value;
					this.SendPropertyChanged("LastUpdateDtime");
					this.OnLastUpdateDtimeChanged();
				}
			}
		}
		
		[Column(Storage="_PHOutstandingQty", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> PHOutstandingQty
		{
			get
			{
				return this._PHOutstandingQty;
			}
			set
			{
				if ((this._PHOutstandingQty != value))
				{
					this.OnPHOutstandingQtyChanging(value);
					this.SendPropertyChanging();
					this._PHOutstandingQty = value;
					this.SendPropertyChanged("PHOutstandingQty");
					this.OnPHOutstandingQtyChanged();
				}
			}
		}
		
		[Column(Storage="_ReportTitle", DbType="NVarChar(100)")]
		public string ReportTitle
		{
			get
			{
				return this._ReportTitle;
			}
			set
			{
				if ((this._ReportTitle != value))
				{
					this.OnReportTitleChanging(value);
					this.SendPropertyChanging();
					this._ReportTitle = value;
					this.SendPropertyChanged("ReportTitle");
					this.OnReportTitleChanged();
				}
			}
		}
		
		[Column(Storage="_MaterialCategory", DbType="NVarChar(100)")]
		public string MaterialCategory
		{
			get
			{
				return this._MaterialCategory;
			}
			set
			{
				if ((this._MaterialCategory != value))
				{
					this.OnMaterialCategoryChanging(value);
					this.SendPropertyChanging();
					this._MaterialCategory = value;
					this.SendPropertyChanged("MaterialCategory");
					this.OnMaterialCategoryChanged();
				}
			}
		}
		
		[Column(Storage="_Status", DbType="NVarChar(100)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[Column(Storage="_PHAttnPerson", DbType="NVarChar(100)")]
		public string PHAttnPerson
		{
			get
			{
				return this._PHAttnPerson;
			}
			set
			{
				if ((this._PHAttnPerson != value))
				{
					this.OnPHAttnPersonChanging(value);
					this.SendPropertyChanging();
					this._PHAttnPerson = value;
					this.SendPropertyChanged("PHAttnPerson");
					this.OnPHAttnPersonChanged();
				}
			}
		}
		
		[Column(Storage="_remark", DbType="NVarChar(4000)")]
		public string remark
		{
			get
			{
				return this._remark;
			}
			set
			{
				if ((this._remark != value))
				{
					this.OnremarkChanging(value);
					this.SendPropertyChanging();
					this._remark = value;
					this.SendPropertyChanged("remark");
					this.OnremarkChanged();
				}
			}
		}
		
		[Column(Storage="_VersionFlag", DbType="Bit")]
		public System.Nullable<bool> VersionFlag
		{
			get
			{
				return this._VersionFlag;
			}
			set
			{
				if ((this._VersionFlag != value))
				{
					this.OnVersionFlagChanging(value);
					this.SendPropertyChanging();
					this._VersionFlag = value;
					this.SendPropertyChanged("VersionFlag");
					this.OnVersionFlagChanged();
				}
			}
		}
		
		[Column(Storage="_Email", DbType="NVarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[Column(Storage="_Incoterms", DbType="NVarChar(10)")]
		public string Incoterms
		{
			get
			{
				return this._Incoterms;
			}
			set
			{
				if ((this._Incoterms != value))
				{
					this.OnIncotermsChanging(value);
					this.SendPropertyChanging();
					this._Incoterms = value;
					this.SendPropertyChanged("Incoterms");
					this.OnIncotermsChanged();
				}
			}
		}
		
		[Column(Storage="_EndCustCode", DbType="NVarChar(50)")]
		public string EndCustCode
		{
			get
			{
				return this._EndCustCode;
			}
			set
			{
				if ((this._EndCustCode != value))
				{
					this.OnEndCustCodeChanging(value);
					this.SendPropertyChanging();
					this._EndCustCode = value;
					this.SendPropertyChanged("EndCustCode");
					this.OnEndCustCodeChanged();
				}
			}
		}
		
		[Column(Storage="_LocationOfSuppFactory", DbType="NVarChar(50)")]
		public string LocationOfSuppFactory
		{
			get
			{
				return this._LocationOfSuppFactory;
			}
			set
			{
				if ((this._LocationOfSuppFactory != value))
				{
					this.OnLocationOfSuppFactoryChanging(value);
					this.SendPropertyChanging();
					this._LocationOfSuppFactory = value;
					this.SendPropertyChanged("LocationOfSuppFactory");
					this.OnLocationOfSuppFactoryChanged();
				}
			}
		}
		
		[Column(Storage="_TransitPoint", DbType="NVarChar(100)")]
		public string TransitPoint
		{
			get
			{
				return this._TransitPoint;
			}
			set
			{
				if ((this._TransitPoint != value))
				{
					this.OnTransitPointChanging(value);
					this.SendPropertyChanging();
					this._TransitPoint = value;
					this.SendPropertyChanged("TransitPoint");
					this.OnTransitPointChanged();
				}
			}
		}
		
		[Column(Storage="_EndPoint", DbType="NVarChar(100)")]
		public string EndPoint
		{
			get
			{
				return this._EndPoint;
			}
			set
			{
				if ((this._EndPoint != value))
				{
					this.OnEndPointChanging(value);
					this.SendPropertyChanging();
					this._EndPoint = value;
					this.SendPropertyChanged("EndPoint");
					this.OnEndPointChanged();
				}
			}
		}
		
		[Column(Storage="_EndPointAddress", DbType="NVarChar(500)")]
		public string EndPointAddress
		{
			get
			{
				return this._EndPointAddress;
			}
			set
			{
				if ((this._EndPointAddress != value))
				{
					this.OnEndPointAddressChanging(value);
					this.SendPropertyChanging();
					this._EndPointAddress = value;
					this.SendPropertyChanged("EndPointAddress");
					this.OnEndPointAddressChanged();
				}
			}
		}
		
		[Column(Storage="_TransitFrame", DbType="Int")]
		public System.Nullable<int> TransitFrame
		{
			get
			{
				return this._TransitFrame;
			}
			set
			{
				if ((this._TransitFrame != value))
				{
					this.OnTransitFrameChanging(value);
					this.SendPropertyChanging();
					this._TransitFrame = value;
					this.SendPropertyChanged("TransitFrame");
					this.OnTransitFrameChanged();
				}
			}
		}
		
		[Column(Storage="_IndividualAssociate", DbType="Int")]
		public System.Nullable<int> IndividualAssociate
		{
			get
			{
				return this._IndividualAssociate;
			}
			set
			{
				if ((this._IndividualAssociate != value))
				{
					this.OnIndividualAssociateChanging(value);
					this.SendPropertyChanging();
					this._IndividualAssociate = value;
					this.SendPropertyChanged("IndividualAssociate");
					this.OnIndividualAssociateChanged();
				}
			}
		}
		
		[Column(Storage="_MoreBuyerSizeCup", DbType="Bit")]
		public System.Nullable<bool> MoreBuyerSizeCup
		{
			get
			{
				return this._MoreBuyerSizeCup;
			}
			set
			{
				if ((this._MoreBuyerSizeCup != value))
				{
					this.OnMoreBuyerSizeCupChanging(value);
					this.SendPropertyChanging();
					this._MoreBuyerSizeCup = value;
					this.SendPropertyChanged("MoreBuyerSizeCup");
					this.OnMoreBuyerSizeCupChanged();
				}
			}
		}
		
		[Column(Storage="_ClassCode", DbType="NVarChar(5)")]
		public string ClassCode
		{
			get
			{
				return this._ClassCode;
			}
			set
			{
				if ((this._ClassCode != value))
				{
					this.OnClassCodeChanging(value);
					this.SendPropertyChanging();
					this._ClassCode = value;
					this.SendPropertyChanged("ClassCode");
					this.OnClassCodeChanged();
				}
			}
		}
		
		[Column(Storage="_FOC", DbType="Bit")]
		public System.Nullable<bool> FOC
		{
			get
			{
				return this._FOC;
			}
			set
			{
				if ((this._FOC != value))
				{
					this.OnFOCChanging(value);
					this.SendPropertyChanging();
					this._FOC = value;
					this.SendPropertyChanged("FOC");
					this.OnFOCChanged();
				}
			}
		}
		
		[Column(Storage="_CurrencyFlag", DbType="Bit")]
		public System.Nullable<bool> CurrencyFlag
		{
			get
			{
				return this._CurrencyFlag;
			}
			set
			{
				if ((this._CurrencyFlag != value))
				{
					this.OnCurrencyFlagChanging(value);
					this.SendPropertyChanging();
					this._CurrencyFlag = value;
					this.SendPropertyChanged("CurrencyFlag");
					this.OnCurrencyFlagChanged();
				}
			}
		}
		
		[Column(Storage="_PaymentTermFlag", DbType="Bit")]
		public System.Nullable<bool> PaymentTermFlag
		{
			get
			{
				return this._PaymentTermFlag;
			}
			set
			{
				if ((this._PaymentTermFlag != value))
				{
					this.OnPaymentTermFlagChanging(value);
					this.SendPropertyChanging();
					this._PaymentTermFlag = value;
					this.SendPropertyChanged("PaymentTermFlag");
					this.OnPaymentTermFlagChanged();
				}
			}
		}
		
		[Column(Storage="_IncotermFlag", DbType="Bit")]
		public System.Nullable<bool> IncotermFlag
		{
			get
			{
				return this._IncotermFlag;
			}
			set
			{
				if ((this._IncotermFlag != value))
				{
					this.OnIncotermFlagChanging(value);
					this.SendPropertyChanging();
					this._IncotermFlag = value;
					this.SendPropertyChanged("IncotermFlag");
					this.OnIncotermFlagChanged();
				}
			}
		}
		
		[Column(Storage="_David", DbType="VarChar(20)")]
		public string David
		{
			get
			{
				return this._David;
			}
			set
			{
				if ((this._David != value))
				{
					this.OnDavidChanging(value);
					this.SendPropertyChanging();
					this._David = value;
					this.SendPropertyChanged("David");
					this.OnDavidChanged();
				}
			}
		}
		
		[Column(Storage="_OpTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> OpTime
		{
			get
			{
				return this._OpTime;
			}
			set
			{
				if ((this._OpTime != value))
				{
					this.OnOpTimeChanging(value);
					this.SendPropertyChanging();
					this._OpTime = value;
					this.SendPropertyChanged("OpTime");
					this.OnOpTimeChanged();
				}
			}
		}
		
		[Column(Storage="_TransitMode2", DbType="NVarChar(100)")]
		public string TransitMode2
		{
			get
			{
				return this._TransitMode2;
			}
			set
			{
				if ((this._TransitMode2 != value))
				{
					this.OnTransitMode2Changing(value);
					this.SendPropertyChanging();
					this._TransitMode2 = value;
					this.SendPropertyChanged("TransitMode2");
					this.OnTransitMode2Changed();
				}
			}
		}
		
		[Column(Storage="_BuyerCode", DbType="VarChar(10)")]
		public string BuyerCode
		{
			get
			{
				return this._BuyerCode;
			}
			set
			{
				if ((this._BuyerCode != value))
				{
					this.OnBuyerCodeChanging(value);
					this.SendPropertyChanging();
					this._BuyerCode = value;
					this.SendPropertyChanged("BuyerCode");
					this.OnBuyerCodeChanged();
				}
			}
		}
		
		[Column(Storage="_DeliveryRouting", DbType="VarChar(20)")]
		public string DeliveryRouting
		{
			get
			{
				return this._DeliveryRouting;
			}
			set
			{
				if ((this._DeliveryRouting != value))
				{
					this.OnDeliveryRoutingChanging(value);
					this.SendPropertyChanging();
					this._DeliveryRouting = value;
					this.SendPropertyChanged("DeliveryRouting");
					this.OnDeliveryRoutingChanged();
				}
			}
		}
		
		[Association(Name="POHeader_POPDF", Storage="_POPDF", ThisKey="Company,PONO,Version,AmendmentNo", OtherKey="Company,PONO,Version,AmendmentNo", IsUnique=true, IsForeignKey=false)]
		public POPDF POPDF
		{
			get
			{
				return this._POPDF.Entity;
			}
			set
			{
				POPDF previousValue = this._POPDF.Entity;
				if (((previousValue != value) 
							|| (this._POPDF.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._POPDF.Entity = null;
						previousValue.POHeader = null;
					}
					this._POPDF.Entity = value;
					if ((value != null))
					{
						value.POHeader = this;
					}
					this.SendPropertyChanged("POPDF");
				}
			}
		}
		
		[Association(Name="POHeader_POReport", Storage="_POReports", ThisKey="Company,PONO,Version,AmendmentNo", OtherKey="Company,PONO,Version,AmendmentNo")]
		public EntitySet<POReport> POReports
		{
			get
			{
				return this._POReports;
			}
			set
			{
				this._POReports.Assign(value);
			}
		}
		
		[Association(Name="POHeader_POTerm", Storage="_POTerms", ThisKey="Company,PONO,Version,AmendmentNo", OtherKey="Company,PONO,Version,AmendmentNo")]
		public EntitySet<POTerm> POTerms
		{
			get
			{
				return this._POTerms;
			}
			set
			{
				this._POTerms.Assign(value);
			}
		}
		
		[Association(Name="POHeader_PODetail", Storage="_PODetails", ThisKey="Company,PONO,Version,AmendmentNo", OtherKey="Company,PONO,Version,AmendmentNo")]
		public EntitySet<PODetail> PODetails
		{
			get
			{
				return this._PODetails;
			}
			set
			{
				this._PODetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_POReports(POReport entity)
		{
			this.SendPropertyChanging();
			entity.POHeader = this;
		}
		
		private void detach_POReports(POReport entity)
		{
			this.SendPropertyChanging();
			entity.POHeader = null;
		}
		
		private void attach_POTerms(POTerm entity)
		{
			this.SendPropertyChanging();
			entity.POHeader = this;
		}
		
		private void detach_POTerms(POTerm entity)
		{
			this.SendPropertyChanging();
			entity.POHeader = null;
		}
		
		private void attach_PODetails(PODetail entity)
		{
			this.SendPropertyChanging();
			entity.POHeader = this;
		}
		
		private void detach_PODetails(PODetail entity)
		{
			this.SendPropertyChanging();
			entity.POHeader = null;
		}
	}
	
	[Table(Name="dbo.POReportConfig")]
	public partial class POReportConfig : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _OID;
		
		private string _DataType;
		
		private string _Code;
		
		private string _DescEN;
		
		private string _DescCN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOIDChanging(long value);
    partial void OnOIDChanged();
    partial void OnDataTypeChanging(string value);
    partial void OnDataTypeChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnDescENChanging(string value);
    partial void OnDescENChanged();
    partial void OnDescCNChanging(string value);
    partial void OnDescCNChanged();
    #endregion
		
		public POReportConfig()
		{
			OnCreated();
		}
		
		[Column(Storage="_OID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long OID
		{
			get
			{
				return this._OID;
			}
			set
			{
				if ((this._OID != value))
				{
					this.OnOIDChanging(value);
					this.SendPropertyChanging();
					this._OID = value;
					this.SendPropertyChanged("OID");
					this.OnOIDChanged();
				}
			}
		}
		
		[Column(Storage="_DataType", DbType="VarChar(100)")]
		public string DataType
		{
			get
			{
				return this._DataType;
			}
			set
			{
				if ((this._DataType != value))
				{
					this.OnDataTypeChanging(value);
					this.SendPropertyChanging();
					this._DataType = value;
					this.SendPropertyChanged("DataType");
					this.OnDataTypeChanged();
				}
			}
		}
		
		[Column(Storage="_Code", DbType="VarChar(100)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[Column(Storage="_DescEN", DbType="VarChar(1000)")]
		public string DescEN
		{
			get
			{
				return this._DescEN;
			}
			set
			{
				if ((this._DescEN != value))
				{
					this.OnDescENChanging(value);
					this.SendPropertyChanging();
					this._DescEN = value;
					this.SendPropertyChanged("DescEN");
					this.OnDescENChanged();
				}
			}
		}
		
		[Column(Storage="_DescCN", DbType="VarChar(1000)")]
		public string DescCN
		{
			get
			{
				return this._DescCN;
			}
			set
			{
				if ((this._DescCN != value))
				{
					this.OnDescCNChanging(value);
					this.SendPropertyChanging();
					this._DescCN = value;
					this.SendPropertyChanged("DescCN");
					this.OnDescCNChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.POInAdvance")]
	public partial class POInAdvance : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _EndCustomer;
		
		private string _BrandName;
		
		private string _GmtStyleNo;
		
		private string _Supplier;
		
		private string _SuppRef;
		
		private string _GmtColorCode;
		
		private string _GmtColorName;
		
		private string _ColorCode;
		
		private string _ColorName;
		
		private string _ColorShade;
		
		private string _StdSwatchCard;
		
		private string _StdSwatchColorNo;
		
		private System.Nullable<System.DateTime> _StdReceiveDate;
		
		private System.Nullable<System.DateTime> _StdCompleteDate;
		
		private System.Nullable<bool> _StdPHCust;
		
		private string _LDOption;
		
		private string _LDNo;
		
		private System.Nullable<int> _LDSeq;
		
		private System.Nullable<System.DateTime> _LDReceiveDate;
		
		private System.Nullable<System.DateTime> _LDAppDate;
		
		private string _LDAppStatus;
		
		private System.Nullable<System.DateTime> _LDDropDeadDate;
		
		private string _ColoristRemark;
		
		private string _CustRemark;
		
		private string _TransitCode;
		
		private System.Nullable<System.DateTime> _TransitDate;
		
		private System.Nullable<bool> _Transited;
		
		private System.Nullable<bool> _Flag;
		
		private string _Team;
		
		private string _PurchaseOfficer;
		
		private string _ProjectNo;
		
		private string _PONO;
		
		private string _ItemCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private System.Nullable<bool> _HaveColoristComm;
		
		private System.Nullable<bool> _HaveCustComm;
		
		private System.Nullable<bool> _BOMNewItem;
		
		private System.Nullable<bool> _BOMApproval;
		
		private string _BOMFollowby;
		
		private System.Nullable<System.DateTime> _BOMCompletedDate;
		
		private string _BOMStatus;
		
		private string _BOMAuditedBy;
		
		private string _LogNo;
		
		private System.Nullable<int> _LineSeqNo;
		
		private System.Nullable<int> _TotalStyle;
		
		private System.Nullable<int> _TotalSupp;
		
		private System.Nullable<int> _TotalItem;
		
		private System.Nullable<System.DateTime> _TargetFinishDate;
		
		private System.Nullable<bool> _LogIsFinished;
		
		private string _BiColor;
		
		private string _Stage;
		
		private string _ECRcvd;
		
		private string _SORcvd;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnEndCustomerChanging(string value);
    partial void OnEndCustomerChanged();
    partial void OnBrandNameChanging(string value);
    partial void OnBrandNameChanged();
    partial void OnGmtStyleNoChanging(string value);
    partial void OnGmtStyleNoChanged();
    partial void OnSupplierChanging(string value);
    partial void OnSupplierChanged();
    partial void OnSuppRefChanging(string value);
    partial void OnSuppRefChanged();
    partial void OnGmtColorCodeChanging(string value);
    partial void OnGmtColorCodeChanged();
    partial void OnGmtColorNameChanging(string value);
    partial void OnGmtColorNameChanged();
    partial void OnColorCodeChanging(string value);
    partial void OnColorCodeChanged();
    partial void OnColorNameChanging(string value);
    partial void OnColorNameChanged();
    partial void OnColorShadeChanging(string value);
    partial void OnColorShadeChanged();
    partial void OnStdSwatchCardChanging(string value);
    partial void OnStdSwatchCardChanged();
    partial void OnStdSwatchColorNoChanging(string value);
    partial void OnStdSwatchColorNoChanged();
    partial void OnStdReceiveDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStdReceiveDateChanged();
    partial void OnStdCompleteDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStdCompleteDateChanged();
    partial void OnStdPHCustChanging(System.Nullable<bool> value);
    partial void OnStdPHCustChanged();
    partial void OnLDOptionChanging(string value);
    partial void OnLDOptionChanged();
    partial void OnLDNoChanging(string value);
    partial void OnLDNoChanged();
    partial void OnLDSeqChanging(System.Nullable<int> value);
    partial void OnLDSeqChanged();
    partial void OnLDReceiveDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLDReceiveDateChanged();
    partial void OnLDAppDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLDAppDateChanged();
    partial void OnLDAppStatusChanging(string value);
    partial void OnLDAppStatusChanged();
    partial void OnLDDropDeadDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLDDropDeadDateChanged();
    partial void OnColoristRemarkChanging(string value);
    partial void OnColoristRemarkChanged();
    partial void OnCustRemarkChanging(string value);
    partial void OnCustRemarkChanged();
    partial void OnTransitCodeChanging(string value);
    partial void OnTransitCodeChanged();
    partial void OnTransitDateChanging(System.Nullable<System.DateTime> value);
    partial void OnTransitDateChanged();
    partial void OnTransitedChanging(System.Nullable<bool> value);
    partial void OnTransitedChanged();
    partial void OnFlagChanging(System.Nullable<bool> value);
    partial void OnFlagChanged();
    partial void OnTeamChanging(string value);
    partial void OnTeamChanged();
    partial void OnPurchaseOfficerChanging(string value);
    partial void OnPurchaseOfficerChanged();
    partial void OnProjectNoChanging(string value);
    partial void OnProjectNoChanged();
    partial void OnPONOChanging(string value);
    partial void OnPONOChanged();
    partial void OnItemCodeChanging(string value);
    partial void OnItemCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnHaveColoristCommChanging(System.Nullable<bool> value);
    partial void OnHaveColoristCommChanged();
    partial void OnHaveCustCommChanging(System.Nullable<bool> value);
    partial void OnHaveCustCommChanged();
    partial void OnBOMNewItemChanging(System.Nullable<bool> value);
    partial void OnBOMNewItemChanged();
    partial void OnBOMApprovalChanging(System.Nullable<bool> value);
    partial void OnBOMApprovalChanged();
    partial void OnBOMFollowbyChanging(string value);
    partial void OnBOMFollowbyChanged();
    partial void OnBOMCompletedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnBOMCompletedDateChanged();
    partial void OnBOMStatusChanging(string value);
    partial void OnBOMStatusChanged();
    partial void OnBOMAuditedByChanging(string value);
    partial void OnBOMAuditedByChanged();
    partial void OnLogNoChanging(string value);
    partial void OnLogNoChanged();
    partial void OnLineSeqNoChanging(System.Nullable<int> value);
    partial void OnLineSeqNoChanged();
    partial void OnTotalStyleChanging(System.Nullable<int> value);
    partial void OnTotalStyleChanged();
    partial void OnTotalSuppChanging(System.Nullable<int> value);
    partial void OnTotalSuppChanged();
    partial void OnTotalItemChanging(System.Nullable<int> value);
    partial void OnTotalItemChanged();
    partial void OnTargetFinishDateChanging(System.Nullable<System.DateTime> value);
    partial void OnTargetFinishDateChanged();
    partial void OnLogIsFinishedChanging(System.Nullable<bool> value);
    partial void OnLogIsFinishedChanged();
    partial void OnBiColorChanging(string value);
    partial void OnBiColorChanged();
    partial void OnStageChanging(string value);
    partial void OnStageChanged();
    partial void OnECRcvdChanging(string value);
    partial void OnECRcvdChanged();
    partial void OnSORcvdChanging(string value);
    partial void OnSORcvdChanged();
    #endregion
		
		public POInAdvance()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_EndCustomer", DbType="VarChar(50)")]
		public string EndCustomer
		{
			get
			{
				return this._EndCustomer;
			}
			set
			{
				if ((this._EndCustomer != value))
				{
					this.OnEndCustomerChanging(value);
					this.SendPropertyChanging();
					this._EndCustomer = value;
					this.SendPropertyChanged("EndCustomer");
					this.OnEndCustomerChanged();
				}
			}
		}
		
		[Column(Storage="_BrandName", DbType="VarChar(50)")]
		public string BrandName
		{
			get
			{
				return this._BrandName;
			}
			set
			{
				if ((this._BrandName != value))
				{
					this.OnBrandNameChanging(value);
					this.SendPropertyChanging();
					this._BrandName = value;
					this.SendPropertyChanged("BrandName");
					this.OnBrandNameChanged();
				}
			}
		}
		
		[Column(Storage="_GmtStyleNo", DbType="VarChar(50)")]
		public string GmtStyleNo
		{
			get
			{
				return this._GmtStyleNo;
			}
			set
			{
				if ((this._GmtStyleNo != value))
				{
					this.OnGmtStyleNoChanging(value);
					this.SendPropertyChanging();
					this._GmtStyleNo = value;
					this.SendPropertyChanged("GmtStyleNo");
					this.OnGmtStyleNoChanged();
				}
			}
		}
		
		[Column(Storage="_Supplier", DbType="VarChar(50)")]
		public string Supplier
		{
			get
			{
				return this._Supplier;
			}
			set
			{
				if ((this._Supplier != value))
				{
					this.OnSupplierChanging(value);
					this.SendPropertyChanging();
					this._Supplier = value;
					this.SendPropertyChanged("Supplier");
					this.OnSupplierChanged();
				}
			}
		}
		
		[Column(Storage="_SuppRef", DbType="VarChar(50)")]
		public string SuppRef
		{
			get
			{
				return this._SuppRef;
			}
			set
			{
				if ((this._SuppRef != value))
				{
					this.OnSuppRefChanging(value);
					this.SendPropertyChanging();
					this._SuppRef = value;
					this.SendPropertyChanged("SuppRef");
					this.OnSuppRefChanged();
				}
			}
		}
		
		[Column(Storage="_GmtColorCode", DbType="VarChar(50)")]
		public string GmtColorCode
		{
			get
			{
				return this._GmtColorCode;
			}
			set
			{
				if ((this._GmtColorCode != value))
				{
					this.OnGmtColorCodeChanging(value);
					this.SendPropertyChanging();
					this._GmtColorCode = value;
					this.SendPropertyChanged("GmtColorCode");
					this.OnGmtColorCodeChanged();
				}
			}
		}
		
		[Column(Storage="_GmtColorName", DbType="VarChar(50)")]
		public string GmtColorName
		{
			get
			{
				return this._GmtColorName;
			}
			set
			{
				if ((this._GmtColorName != value))
				{
					this.OnGmtColorNameChanging(value);
					this.SendPropertyChanging();
					this._GmtColorName = value;
					this.SendPropertyChanged("GmtColorName");
					this.OnGmtColorNameChanged();
				}
			}
		}
		
		[Column(Storage="_ColorCode", DbType="VarChar(50)")]
		public string ColorCode
		{
			get
			{
				return this._ColorCode;
			}
			set
			{
				if ((this._ColorCode != value))
				{
					this.OnColorCodeChanging(value);
					this.SendPropertyChanging();
					this._ColorCode = value;
					this.SendPropertyChanged("ColorCode");
					this.OnColorCodeChanged();
				}
			}
		}
		
		[Column(Storage="_ColorName", DbType="VarChar(50)")]
		public string ColorName
		{
			get
			{
				return this._ColorName;
			}
			set
			{
				if ((this._ColorName != value))
				{
					this.OnColorNameChanging(value);
					this.SendPropertyChanging();
					this._ColorName = value;
					this.SendPropertyChanged("ColorName");
					this.OnColorNameChanged();
				}
			}
		}
		
		[Column(Storage="_ColorShade", DbType="VarChar(50)")]
		public string ColorShade
		{
			get
			{
				return this._ColorShade;
			}
			set
			{
				if ((this._ColorShade != value))
				{
					this.OnColorShadeChanging(value);
					this.SendPropertyChanging();
					this._ColorShade = value;
					this.SendPropertyChanged("ColorShade");
					this.OnColorShadeChanged();
				}
			}
		}
		
		[Column(Storage="_StdSwatchCard", DbType="VarChar(20)")]
		public string StdSwatchCard
		{
			get
			{
				return this._StdSwatchCard;
			}
			set
			{
				if ((this._StdSwatchCard != value))
				{
					this.OnStdSwatchCardChanging(value);
					this.SendPropertyChanging();
					this._StdSwatchCard = value;
					this.SendPropertyChanged("StdSwatchCard");
					this.OnStdSwatchCardChanged();
				}
			}
		}
		
		[Column(Storage="_StdSwatchColorNo", DbType="VarChar(50)")]
		public string StdSwatchColorNo
		{
			get
			{
				return this._StdSwatchColorNo;
			}
			set
			{
				if ((this._StdSwatchColorNo != value))
				{
					this.OnStdSwatchColorNoChanging(value);
					this.SendPropertyChanging();
					this._StdSwatchColorNo = value;
					this.SendPropertyChanged("StdSwatchColorNo");
					this.OnStdSwatchColorNoChanged();
				}
			}
		}
		
		[Column(Storage="_StdReceiveDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StdReceiveDate
		{
			get
			{
				return this._StdReceiveDate;
			}
			set
			{
				if ((this._StdReceiveDate != value))
				{
					this.OnStdReceiveDateChanging(value);
					this.SendPropertyChanging();
					this._StdReceiveDate = value;
					this.SendPropertyChanged("StdReceiveDate");
					this.OnStdReceiveDateChanged();
				}
			}
		}
		
		[Column(Storage="_StdCompleteDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StdCompleteDate
		{
			get
			{
				return this._StdCompleteDate;
			}
			set
			{
				if ((this._StdCompleteDate != value))
				{
					this.OnStdCompleteDateChanging(value);
					this.SendPropertyChanging();
					this._StdCompleteDate = value;
					this.SendPropertyChanged("StdCompleteDate");
					this.OnStdCompleteDateChanged();
				}
			}
		}
		
		[Column(Storage="_StdPHCust", DbType="Bit")]
		public System.Nullable<bool> StdPHCust
		{
			get
			{
				return this._StdPHCust;
			}
			set
			{
				if ((this._StdPHCust != value))
				{
					this.OnStdPHCustChanging(value);
					this.SendPropertyChanging();
					this._StdPHCust = value;
					this.SendPropertyChanged("StdPHCust");
					this.OnStdPHCustChanged();
				}
			}
		}
		
		[Column(Storage="_LDOption", DbType="VarChar(500)")]
		public string LDOption
		{
			get
			{
				return this._LDOption;
			}
			set
			{
				if ((this._LDOption != value))
				{
					this.OnLDOptionChanging(value);
					this.SendPropertyChanging();
					this._LDOption = value;
					this.SendPropertyChanged("LDOption");
					this.OnLDOptionChanged();
				}
			}
		}
		
		[Column(Storage="_LDNo", DbType="VarChar(50)")]
		public string LDNo
		{
			get
			{
				return this._LDNo;
			}
			set
			{
				if ((this._LDNo != value))
				{
					this.OnLDNoChanging(value);
					this.SendPropertyChanging();
					this._LDNo = value;
					this.SendPropertyChanged("LDNo");
					this.OnLDNoChanged();
				}
			}
		}
		
		[Column(Storage="_LDSeq", DbType="Int")]
		public System.Nullable<int> LDSeq
		{
			get
			{
				return this._LDSeq;
			}
			set
			{
				if ((this._LDSeq != value))
				{
					this.OnLDSeqChanging(value);
					this.SendPropertyChanging();
					this._LDSeq = value;
					this.SendPropertyChanged("LDSeq");
					this.OnLDSeqChanged();
				}
			}
		}
		
		[Column(Storage="_LDReceiveDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LDReceiveDate
		{
			get
			{
				return this._LDReceiveDate;
			}
			set
			{
				if ((this._LDReceiveDate != value))
				{
					this.OnLDReceiveDateChanging(value);
					this.SendPropertyChanging();
					this._LDReceiveDate = value;
					this.SendPropertyChanged("LDReceiveDate");
					this.OnLDReceiveDateChanged();
				}
			}
		}
		
		[Column(Storage="_LDAppDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LDAppDate
		{
			get
			{
				return this._LDAppDate;
			}
			set
			{
				if ((this._LDAppDate != value))
				{
					this.OnLDAppDateChanging(value);
					this.SendPropertyChanging();
					this._LDAppDate = value;
					this.SendPropertyChanged("LDAppDate");
					this.OnLDAppDateChanged();
				}
			}
		}
		
		[Column(Storage="_LDAppStatus", DbType="VarChar(50)")]
		public string LDAppStatus
		{
			get
			{
				return this._LDAppStatus;
			}
			set
			{
				if ((this._LDAppStatus != value))
				{
					this.OnLDAppStatusChanging(value);
					this.SendPropertyChanging();
					this._LDAppStatus = value;
					this.SendPropertyChanged("LDAppStatus");
					this.OnLDAppStatusChanged();
				}
			}
		}
		
		[Column(Storage="_LDDropDeadDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LDDropDeadDate
		{
			get
			{
				return this._LDDropDeadDate;
			}
			set
			{
				if ((this._LDDropDeadDate != value))
				{
					this.OnLDDropDeadDateChanging(value);
					this.SendPropertyChanging();
					this._LDDropDeadDate = value;
					this.SendPropertyChanged("LDDropDeadDate");
					this.OnLDDropDeadDateChanged();
				}
			}
		}
		
		[Column(Storage="_ColoristRemark", DbType="NVarChar(500)")]
		public string ColoristRemark
		{
			get
			{
				return this._ColoristRemark;
			}
			set
			{
				if ((this._ColoristRemark != value))
				{
					this.OnColoristRemarkChanging(value);
					this.SendPropertyChanging();
					this._ColoristRemark = value;
					this.SendPropertyChanged("ColoristRemark");
					this.OnColoristRemarkChanged();
				}
			}
		}
		
		[Column(Storage="_CustRemark", DbType="VarChar(500)")]
		public string CustRemark
		{
			get
			{
				return this._CustRemark;
			}
			set
			{
				if ((this._CustRemark != value))
				{
					this.OnCustRemarkChanging(value);
					this.SendPropertyChanging();
					this._CustRemark = value;
					this.SendPropertyChanged("CustRemark");
					this.OnCustRemarkChanged();
				}
			}
		}
		
		[Column(Storage="_TransitCode", DbType="VarChar(20)")]
		public string TransitCode
		{
			get
			{
				return this._TransitCode;
			}
			set
			{
				if ((this._TransitCode != value))
				{
					this.OnTransitCodeChanging(value);
					this.SendPropertyChanging();
					this._TransitCode = value;
					this.SendPropertyChanged("TransitCode");
					this.OnTransitCodeChanged();
				}
			}
		}
		
		[Column(Storage="_TransitDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> TransitDate
		{
			get
			{
				return this._TransitDate;
			}
			set
			{
				if ((this._TransitDate != value))
				{
					this.OnTransitDateChanging(value);
					this.SendPropertyChanging();
					this._TransitDate = value;
					this.SendPropertyChanged("TransitDate");
					this.OnTransitDateChanged();
				}
			}
		}
		
		[Column(Storage="_Transited", DbType="Bit")]
		public System.Nullable<bool> Transited
		{
			get
			{
				return this._Transited;
			}
			set
			{
				if ((this._Transited != value))
				{
					this.OnTransitedChanging(value);
					this.SendPropertyChanging();
					this._Transited = value;
					this.SendPropertyChanged("Transited");
					this.OnTransitedChanged();
				}
			}
		}
		
		[Column(Storage="_Flag", DbType="Bit")]
		public System.Nullable<bool> Flag
		{
			get
			{
				return this._Flag;
			}
			set
			{
				if ((this._Flag != value))
				{
					this.OnFlagChanging(value);
					this.SendPropertyChanging();
					this._Flag = value;
					this.SendPropertyChanged("Flag");
					this.OnFlagChanged();
				}
			}
		}
		
		[Column(Storage="_Team", DbType="VarChar(20)")]
		public string Team
		{
			get
			{
				return this._Team;
			}
			set
			{
				if ((this._Team != value))
				{
					this.OnTeamChanging(value);
					this.SendPropertyChanging();
					this._Team = value;
					this.SendPropertyChanged("Team");
					this.OnTeamChanged();
				}
			}
		}
		
		[Column(Storage="_PurchaseOfficer", DbType="VarChar(20)")]
		public string PurchaseOfficer
		{
			get
			{
				return this._PurchaseOfficer;
			}
			set
			{
				if ((this._PurchaseOfficer != value))
				{
					this.OnPurchaseOfficerChanging(value);
					this.SendPropertyChanging();
					this._PurchaseOfficer = value;
					this.SendPropertyChanged("PurchaseOfficer");
					this.OnPurchaseOfficerChanged();
				}
			}
		}
		
		[Column(Storage="_ProjectNo", DbType="VarChar(20)")]
		public string ProjectNo
		{
			get
			{
				return this._ProjectNo;
			}
			set
			{
				if ((this._ProjectNo != value))
				{
					this.OnProjectNoChanging(value);
					this.SendPropertyChanging();
					this._ProjectNo = value;
					this.SendPropertyChanged("ProjectNo");
					this.OnProjectNoChanged();
				}
			}
		}
		
		[Column(Storage="_PONO", DbType="VarChar(10)")]
		public string PONO
		{
			get
			{
				return this._PONO;
			}
			set
			{
				if ((this._PONO != value))
				{
					this.OnPONOChanging(value);
					this.SendPropertyChanging();
					this._PONO = value;
					this.SendPropertyChanged("PONO");
					this.OnPONOChanged();
				}
			}
		}
		
		[Column(Storage="_ItemCode", DbType="VarChar(15)")]
		public string ItemCode
		{
			get
			{
				return this._ItemCode;
			}
			set
			{
				if ((this._ItemCode != value))
				{
					this.OnItemCodeChanging(value);
					this.SendPropertyChanging();
					this._ItemCode = value;
					this.SendPropertyChanged("ItemCode");
					this.OnItemCodeChanged();
				}
			}
		}
		
		[Column(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[Column(Storage="_HaveColoristComm", DbType="Bit")]
		public System.Nullable<bool> HaveColoristComm
		{
			get
			{
				return this._HaveColoristComm;
			}
			set
			{
				if ((this._HaveColoristComm != value))
				{
					this.OnHaveColoristCommChanging(value);
					this.SendPropertyChanging();
					this._HaveColoristComm = value;
					this.SendPropertyChanged("HaveColoristComm");
					this.OnHaveColoristCommChanged();
				}
			}
		}
		
		[Column(Storage="_HaveCustComm", DbType="Bit")]
		public System.Nullable<bool> HaveCustComm
		{
			get
			{
				return this._HaveCustComm;
			}
			set
			{
				if ((this._HaveCustComm != value))
				{
					this.OnHaveCustCommChanging(value);
					this.SendPropertyChanging();
					this._HaveCustComm = value;
					this.SendPropertyChanged("HaveCustComm");
					this.OnHaveCustCommChanged();
				}
			}
		}
		
		[Column(Storage="_BOMNewItem", DbType="Bit")]
		public System.Nullable<bool> BOMNewItem
		{
			get
			{
				return this._BOMNewItem;
			}
			set
			{
				if ((this._BOMNewItem != value))
				{
					this.OnBOMNewItemChanging(value);
					this.SendPropertyChanging();
					this._BOMNewItem = value;
					this.SendPropertyChanged("BOMNewItem");
					this.OnBOMNewItemChanged();
				}
			}
		}
		
		[Column(Storage="_BOMApproval", DbType="Bit")]
		public System.Nullable<bool> BOMApproval
		{
			get
			{
				return this._BOMApproval;
			}
			set
			{
				if ((this._BOMApproval != value))
				{
					this.OnBOMApprovalChanging(value);
					this.SendPropertyChanging();
					this._BOMApproval = value;
					this.SendPropertyChanged("BOMApproval");
					this.OnBOMApprovalChanged();
				}
			}
		}
		
		[Column(Storage="_BOMFollowby", DbType="NVarChar(50)")]
		public string BOMFollowby
		{
			get
			{
				return this._BOMFollowby;
			}
			set
			{
				if ((this._BOMFollowby != value))
				{
					this.OnBOMFollowbyChanging(value);
					this.SendPropertyChanging();
					this._BOMFollowby = value;
					this.SendPropertyChanged("BOMFollowby");
					this.OnBOMFollowbyChanged();
				}
			}
		}
		
		[Column(Storage="_BOMCompletedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> BOMCompletedDate
		{
			get
			{
				return this._BOMCompletedDate;
			}
			set
			{
				if ((this._BOMCompletedDate != value))
				{
					this.OnBOMCompletedDateChanging(value);
					this.SendPropertyChanging();
					this._BOMCompletedDate = value;
					this.SendPropertyChanged("BOMCompletedDate");
					this.OnBOMCompletedDateChanged();
				}
			}
		}
		
		[Column(Storage="_BOMStatus", DbType="NVarChar(40)")]
		public string BOMStatus
		{
			get
			{
				return this._BOMStatus;
			}
			set
			{
				if ((this._BOMStatus != value))
				{
					this.OnBOMStatusChanging(value);
					this.SendPropertyChanging();
					this._BOMStatus = value;
					this.SendPropertyChanged("BOMStatus");
					this.OnBOMStatusChanged();
				}
			}
		}
		
		[Column(Storage="_BOMAuditedBy", DbType="NVarChar(50)")]
		public string BOMAuditedBy
		{
			get
			{
				return this._BOMAuditedBy;
			}
			set
			{
				if ((this._BOMAuditedBy != value))
				{
					this.OnBOMAuditedByChanging(value);
					this.SendPropertyChanging();
					this._BOMAuditedBy = value;
					this.SendPropertyChanged("BOMAuditedBy");
					this.OnBOMAuditedByChanged();
				}
			}
		}
		
		[Column(Storage="_LogNo", DbType="VarChar(20)")]
		public string LogNo
		{
			get
			{
				return this._LogNo;
			}
			set
			{
				if ((this._LogNo != value))
				{
					this.OnLogNoChanging(value);
					this.SendPropertyChanging();
					this._LogNo = value;
					this.SendPropertyChanged("LogNo");
					this.OnLogNoChanged();
				}
			}
		}
		
		[Column(Storage="_LineSeqNo", DbType="Int")]
		public System.Nullable<int> LineSeqNo
		{
			get
			{
				return this._LineSeqNo;
			}
			set
			{
				if ((this._LineSeqNo != value))
				{
					this.OnLineSeqNoChanging(value);
					this.SendPropertyChanging();
					this._LineSeqNo = value;
					this.SendPropertyChanged("LineSeqNo");
					this.OnLineSeqNoChanged();
				}
			}
		}
		
		[Column(Storage="_TotalStyle", DbType="Int")]
		public System.Nullable<int> TotalStyle
		{
			get
			{
				return this._TotalStyle;
			}
			set
			{
				if ((this._TotalStyle != value))
				{
					this.OnTotalStyleChanging(value);
					this.SendPropertyChanging();
					this._TotalStyle = value;
					this.SendPropertyChanged("TotalStyle");
					this.OnTotalStyleChanged();
				}
			}
		}
		
		[Column(Storage="_TotalSupp", DbType="Int")]
		public System.Nullable<int> TotalSupp
		{
			get
			{
				return this._TotalSupp;
			}
			set
			{
				if ((this._TotalSupp != value))
				{
					this.OnTotalSuppChanging(value);
					this.SendPropertyChanging();
					this._TotalSupp = value;
					this.SendPropertyChanged("TotalSupp");
					this.OnTotalSuppChanged();
				}
			}
		}
		
		[Column(Storage="_TotalItem", DbType="Int")]
		public System.Nullable<int> TotalItem
		{
			get
			{
				return this._TotalItem;
			}
			set
			{
				if ((this._TotalItem != value))
				{
					this.OnTotalItemChanging(value);
					this.SendPropertyChanging();
					this._TotalItem = value;
					this.SendPropertyChanged("TotalItem");
					this.OnTotalItemChanged();
				}
			}
		}
		
		[Column(Storage="_TargetFinishDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> TargetFinishDate
		{
			get
			{
				return this._TargetFinishDate;
			}
			set
			{
				if ((this._TargetFinishDate != value))
				{
					this.OnTargetFinishDateChanging(value);
					this.SendPropertyChanging();
					this._TargetFinishDate = value;
					this.SendPropertyChanged("TargetFinishDate");
					this.OnTargetFinishDateChanged();
				}
			}
		}
		
		[Column(Storage="_LogIsFinished", DbType="Bit")]
		public System.Nullable<bool> LogIsFinished
		{
			get
			{
				return this._LogIsFinished;
			}
			set
			{
				if ((this._LogIsFinished != value))
				{
					this.OnLogIsFinishedChanging(value);
					this.SendPropertyChanging();
					this._LogIsFinished = value;
					this.SendPropertyChanged("LogIsFinished");
					this.OnLogIsFinishedChanged();
				}
			}
		}
		
		[Column(Storage="_BiColor", DbType="VarChar(20)")]
		public string BiColor
		{
			get
			{
				return this._BiColor;
			}
			set
			{
				if ((this._BiColor != value))
				{
					this.OnBiColorChanging(value);
					this.SendPropertyChanging();
					this._BiColor = value;
					this.SendPropertyChanged("BiColor");
					this.OnBiColorChanged();
				}
			}
		}
		
		[Column(Storage="_Stage", DbType="VarChar(100)")]
		public string Stage
		{
			get
			{
				return this._Stage;
			}
			set
			{
				if ((this._Stage != value))
				{
					this.OnStageChanging(value);
					this.SendPropertyChanging();
					this._Stage = value;
					this.SendPropertyChanged("Stage");
					this.OnStageChanged();
				}
			}
		}
		
		[Column(Storage="_ECRcvd", DbType="VarChar(100)")]
		public string ECRcvd
		{
			get
			{
				return this._ECRcvd;
			}
			set
			{
				if ((this._ECRcvd != value))
				{
					this.OnECRcvdChanging(value);
					this.SendPropertyChanging();
					this._ECRcvd = value;
					this.SendPropertyChanged("ECRcvd");
					this.OnECRcvdChanged();
				}
			}
		}
		
		[Column(Storage="_SORcvd", DbType="VarChar(100)")]
		public string SORcvd
		{
			get
			{
				return this._SORcvd;
			}
			set
			{
				if ((this._SORcvd != value))
				{
					this.OnSORcvdChanging(value);
					this.SendPropertyChanging();
					this._SORcvd = value;
					this.SendPropertyChanged("SORcvd");
					this.OnSORcvdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.POAdviceNote")]
	public partial class POAdviceNote : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Supplier;
		
		private string _AdviceNote;
		
		private System.Nullable<System.DateTime> _DeliveryDate;
		
		private string _ANStatus;
		
		private System.Nullable<System.DateTime> _GRNDate;
		
		private EntitySet<POAdviceNotePO> _POAdviceNotePOs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSupplierChanging(string value);
    partial void OnSupplierChanged();
    partial void OnAdviceNoteChanging(string value);
    partial void OnAdviceNoteChanged();
    partial void OnDeliveryDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeliveryDateChanged();
    partial void OnANStatusChanging(string value);
    partial void OnANStatusChanged();
    partial void OnGRNDateChanging(System.Nullable<System.DateTime> value);
    partial void OnGRNDateChanged();
    #endregion
		
		public POAdviceNote()
		{
			this._POAdviceNotePOs = new EntitySet<POAdviceNotePO>(new Action<POAdviceNotePO>(this.attach_POAdviceNotePOs), new Action<POAdviceNotePO>(this.detach_POAdviceNotePOs));
			OnCreated();
		}
		
		[Column(Storage="_Supplier", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Supplier
		{
			get
			{
				return this._Supplier;
			}
			set
			{
				if ((this._Supplier != value))
				{
					this.OnSupplierChanging(value);
					this.SendPropertyChanging();
					this._Supplier = value;
					this.SendPropertyChanged("Supplier");
					this.OnSupplierChanged();
				}
			}
		}
		
		[Column(Storage="_AdviceNote", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AdviceNote
		{
			get
			{
				return this._AdviceNote;
			}
			set
			{
				if ((this._AdviceNote != value))
				{
					this.OnAdviceNoteChanging(value);
					this.SendPropertyChanging();
					this._AdviceNote = value;
					this.SendPropertyChanged("AdviceNote");
					this.OnAdviceNoteChanged();
				}
			}
		}
		
		[Column(Storage="_DeliveryDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DeliveryDate
		{
			get
			{
				return this._DeliveryDate;
			}
			set
			{
				if ((this._DeliveryDate != value))
				{
					this.OnDeliveryDateChanging(value);
					this.SendPropertyChanging();
					this._DeliveryDate = value;
					this.SendPropertyChanged("DeliveryDate");
					this.OnDeliveryDateChanged();
				}
			}
		}
		
		[Column(Storage="_ANStatus", DbType="VarChar(2)")]
		public string ANStatus
		{
			get
			{
				return this._ANStatus;
			}
			set
			{
				if ((this._ANStatus != value))
				{
					this.OnANStatusChanging(value);
					this.SendPropertyChanging();
					this._ANStatus = value;
					this.SendPropertyChanged("ANStatus");
					this.OnANStatusChanged();
				}
			}
		}
		
		[Column(Storage="_GRNDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> GRNDate
		{
			get
			{
				return this._GRNDate;
			}
			set
			{
				if ((this._GRNDate != value))
				{
					this.OnGRNDateChanging(value);
					this.SendPropertyChanging();
					this._GRNDate = value;
					this.SendPropertyChanged("GRNDate");
					this.OnGRNDateChanged();
				}
			}
		}
		
		[Association(Name="POAdviceNote_POAdviceNotePO", Storage="_POAdviceNotePOs", ThisKey="Supplier,AdviceNote", OtherKey="Supplier,AdviceNote")]
		public EntitySet<POAdviceNotePO> POAdviceNotePOs
		{
			get
			{
				return this._POAdviceNotePOs;
			}
			set
			{
				this._POAdviceNotePOs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_POAdviceNotePOs(POAdviceNotePO entity)
		{
			this.SendPropertyChanging();
			entity.POAdviceNote = this;
		}
		
		private void detach_POAdviceNotePOs(POAdviceNotePO entity)
		{
			this.SendPropertyChanging();
			entity.POAdviceNote = null;
		}
	}
	
	[Table(Name="dbo.ActionLogCompleteReason")]
	public partial class ActionLogCompleteReason : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OID;
		
		private string _SeqNo;
		
		private string _Remark;
		
		private string _RemarkCN;
		
		private string _RemarkBD;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOIDChanging(int value);
    partial void OnOIDChanged();
    partial void OnSeqNoChanging(string value);
    partial void OnSeqNoChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnRemarkCNChanging(string value);
    partial void OnRemarkCNChanged();
    partial void OnRemarkBDChanging(string value);
    partial void OnRemarkBDChanged();
    #endregion
		
		public ActionLogCompleteReason()
		{
			OnCreated();
		}
		
		[Column(Storage="_OID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int OID
		{
			get
			{
				return this._OID;
			}
			set
			{
				if ((this._OID != value))
				{
					this.OnOIDChanging(value);
					this.SendPropertyChanging();
					this._OID = value;
					this.SendPropertyChanged("OID");
					this.OnOIDChanged();
				}
			}
		}
		
		[Column(Storage="_SeqNo", DbType="VarChar(20)")]
		public string SeqNo
		{
			get
			{
				return this._SeqNo;
			}
			set
			{
				if ((this._SeqNo != value))
				{
					this.OnSeqNoChanging(value);
					this.SendPropertyChanging();
					this._SeqNo = value;
					this.SendPropertyChanged("SeqNo");
					this.OnSeqNoChanged();
				}
			}
		}
		
		[Column(Storage="_Remark", DbType="VarChar(1000)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[Column(Storage="_RemarkCN", DbType="NVarChar(1000)")]
		public string RemarkCN
		{
			get
			{
				return this._RemarkCN;
			}
			set
			{
				if ((this._RemarkCN != value))
				{
					this.OnRemarkCNChanging(value);
					this.SendPropertyChanging();
					this._RemarkCN = value;
					this.SendPropertyChanged("RemarkCN");
					this.OnRemarkCNChanged();
				}
			}
		}
		
		[Column(Storage="_RemarkBD", DbType="NVarChar(1000)")]
		public string RemarkBD
		{
			get
			{
				return this._RemarkBD;
			}
			set
			{
				if ((this._RemarkBD != value))
				{
					this.OnRemarkBDChanging(value);
					this.SendPropertyChanging();
					this._RemarkBD = value;
					this.SendPropertyChanged("RemarkBD");
					this.OnRemarkBDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.MaterialTypeDropDeadDate")]
	public partial class MaterialTypeDropDeadDate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _OID;
		
		private string _MaterilaGroup;
		
		private string _MaterilaType;
		
		private System.Nullable<int> _BulkDDDDay;
		
		private System.Nullable<int> _OverseaAddDay;
		
		private string _Factory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOIDChanging(long value);
    partial void OnOIDChanged();
    partial void OnMaterilaGroupChanging(string value);
    partial void OnMaterilaGroupChanged();
    partial void OnMaterilaTypeChanging(string value);
    partial void OnMaterilaTypeChanged();
    partial void OnBulkDDDDayChanging(System.Nullable<int> value);
    partial void OnBulkDDDDayChanged();
    partial void OnOverseaAddDayChanging(System.Nullable<int> value);
    partial void OnOverseaAddDayChanged();
    partial void OnFactoryChanging(string value);
    partial void OnFactoryChanged();
    #endregion
		
		public MaterialTypeDropDeadDate()
		{
			OnCreated();
		}
		
		[Column(Storage="_OID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long OID
		{
			get
			{
				return this._OID;
			}
			set
			{
				if ((this._OID != value))
				{
					this.OnOIDChanging(value);
					this.SendPropertyChanging();
					this._OID = value;
					this.SendPropertyChanged("OID");
					this.OnOIDChanged();
				}
			}
		}
		
		[Column(Storage="_MaterilaGroup", DbType="VarChar(10)")]
		public string MaterilaGroup
		{
			get
			{
				return this._MaterilaGroup;
			}
			set
			{
				if ((this._MaterilaGroup != value))
				{
					this.OnMaterilaGroupChanging(value);
					this.SendPropertyChanging();
					this._MaterilaGroup = value;
					this.SendPropertyChanged("MaterilaGroup");
					this.OnMaterilaGroupChanged();
				}
			}
		}
		
		[Column(Storage="_MaterilaType", DbType="VarChar(10)")]
		public string MaterilaType
		{
			get
			{
				return this._MaterilaType;
			}
			set
			{
				if ((this._MaterilaType != value))
				{
					this.OnMaterilaTypeChanging(value);
					this.SendPropertyChanging();
					this._MaterilaType = value;
					this.SendPropertyChanged("MaterilaType");
					this.OnMaterilaTypeChanged();
				}
			}
		}
		
		[Column(Storage="_BulkDDDDay", DbType="Int")]
		public System.Nullable<int> BulkDDDDay
		{
			get
			{
				return this._BulkDDDDay;
			}
			set
			{
				if ((this._BulkDDDDay != value))
				{
					this.OnBulkDDDDayChanging(value);
					this.SendPropertyChanging();
					this._BulkDDDDay = value;
					this.SendPropertyChanged("BulkDDDDay");
					this.OnBulkDDDDayChanged();
				}
			}
		}
		
		[Column(Storage="_OverseaAddDay", DbType="Int")]
		public System.Nullable<int> OverseaAddDay
		{
			get
			{
				return this._OverseaAddDay;
			}
			set
			{
				if ((this._OverseaAddDay != value))
				{
					this.OnOverseaAddDayChanging(value);
					this.SendPropertyChanging();
					this._OverseaAddDay = value;
					this.SendPropertyChanged("OverseaAddDay");
					this.OnOverseaAddDayChanged();
				}
			}
		}
		
		[Column(Storage="_Factory", DbType="VarChar(10)")]
		public string Factory
		{
			get
			{
				return this._Factory;
			}
			set
			{
				if ((this._Factory != value))
				{
					this.OnFactoryChanging(value);
					this.SendPropertyChanging();
					this._Factory = value;
					this.SendPropertyChanged("Factory");
					this.OnFactoryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.POAdviceNotePO")]
	public partial class POAdviceNotePO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Supplier;
		
		private string _AdviceNote;
		
		private string _PONO;
		
		private string _ANStatus;
		
		private System.Nullable<System.DateTime> _POIssueDate;
		
		private string _PaymentDone;
		
		private System.Nullable<System.DateTime> _PaymentDoneDate;
		
		private string _LogNo;
		
		private System.Nullable<int> _Suffix;
		
		private string _Status;
		
		private string _Transferred;
		
		private EntityRef<POAdviceNote> _POAdviceNote;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSupplierChanging(string value);
    partial void OnSupplierChanged();
    partial void OnAdviceNoteChanging(string value);
    partial void OnAdviceNoteChanged();
    partial void OnPONOChanging(string value);
    partial void OnPONOChanged();
    partial void OnANStatusChanging(string value);
    partial void OnANStatusChanged();
    partial void OnPOIssueDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPOIssueDateChanged();
    partial void OnPaymentDoneChanging(string value);
    partial void OnPaymentDoneChanged();
    partial void OnPaymentDoneDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPaymentDoneDateChanged();
    partial void OnLogNoChanging(string value);
    partial void OnLogNoChanged();
    partial void OnSuffixChanging(System.Nullable<int> value);
    partial void OnSuffixChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnTransferredChanging(string value);
    partial void OnTransferredChanged();
    #endregion
		
		public POAdviceNotePO()
		{
			this._POAdviceNote = default(EntityRef<POAdviceNote>);
			OnCreated();
		}
		
		[Column(Storage="_Supplier", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Supplier
		{
			get
			{
				return this._Supplier;
			}
			set
			{
				if ((this._Supplier != value))
				{
					if (this._POAdviceNote.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupplierChanging(value);
					this.SendPropertyChanging();
					this._Supplier = value;
					this.SendPropertyChanged("Supplier");
					this.OnSupplierChanged();
				}
			}
		}
		
		[Column(Storage="_AdviceNote", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AdviceNote
		{
			get
			{
				return this._AdviceNote;
			}
			set
			{
				if ((this._AdviceNote != value))
				{
					if (this._POAdviceNote.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdviceNoteChanging(value);
					this.SendPropertyChanging();
					this._AdviceNote = value;
					this.SendPropertyChanged("AdviceNote");
					this.OnAdviceNoteChanged();
				}
			}
		}
		
		[Column(Storage="_PONO", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PONO
		{
			get
			{
				return this._PONO;
			}
			set
			{
				if ((this._PONO != value))
				{
					this.OnPONOChanging(value);
					this.SendPropertyChanging();
					this._PONO = value;
					this.SendPropertyChanged("PONO");
					this.OnPONOChanged();
				}
			}
		}
		
		[Column(Storage="_ANStatus", DbType="VarChar(2)")]
		public string ANStatus
		{
			get
			{
				return this._ANStatus;
			}
			set
			{
				if ((this._ANStatus != value))
				{
					this.OnANStatusChanging(value);
					this.SendPropertyChanging();
					this._ANStatus = value;
					this.SendPropertyChanged("ANStatus");
					this.OnANStatusChanged();
				}
			}
		}
		
		[Column(Storage="_POIssueDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> POIssueDate
		{
			get
			{
				return this._POIssueDate;
			}
			set
			{
				if ((this._POIssueDate != value))
				{
					this.OnPOIssueDateChanging(value);
					this.SendPropertyChanging();
					this._POIssueDate = value;
					this.SendPropertyChanged("POIssueDate");
					this.OnPOIssueDateChanged();
				}
			}
		}
		
		[Column(Storage="_PaymentDone", DbType="VarChar(10)")]
		public string PaymentDone
		{
			get
			{
				return this._PaymentDone;
			}
			set
			{
				if ((this._PaymentDone != value))
				{
					this.OnPaymentDoneChanging(value);
					this.SendPropertyChanging();
					this._PaymentDone = value;
					this.SendPropertyChanged("PaymentDone");
					this.OnPaymentDoneChanged();
				}
			}
		}
		
		[Column(Storage="_PaymentDoneDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PaymentDoneDate
		{
			get
			{
				return this._PaymentDoneDate;
			}
			set
			{
				if ((this._PaymentDoneDate != value))
				{
					this.OnPaymentDoneDateChanging(value);
					this.SendPropertyChanging();
					this._PaymentDoneDate = value;
					this.SendPropertyChanged("PaymentDoneDate");
					this.OnPaymentDoneDateChanged();
				}
			}
		}
		
		[Column(Storage="_LogNo", DbType="VarChar(20)")]
		public string LogNo
		{
			get
			{
				return this._LogNo;
			}
			set
			{
				if ((this._LogNo != value))
				{
					this.OnLogNoChanging(value);
					this.SendPropertyChanging();
					this._LogNo = value;
					this.SendPropertyChanged("LogNo");
					this.OnLogNoChanged();
				}
			}
		}
		
		[Column(Storage="_Suffix", DbType="Int")]
		public System.Nullable<int> Suffix
		{
			get
			{
				return this._Suffix;
			}
			set
			{
				if ((this._Suffix != value))
				{
					this.OnSuffixChanging(value);
					this.SendPropertyChanging();
					this._Suffix = value;
					this.SendPropertyChanged("Suffix");
					this.OnSuffixChanged();
				}
			}
		}
		
		[Column(Storage="_Status", DbType="VarChar(20)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[Column(Storage="_Transferred", DbType="VarChar(20)")]
		public string Transferred
		{
			get
			{
				return this._Transferred;
			}
			set
			{
				if ((this._Transferred != value))
				{
					this.OnTransferredChanging(value);
					this.SendPropertyChanging();
					this._Transferred = value;
					this.SendPropertyChanged("Transferred");
					this.OnTransferredChanged();
				}
			}
		}
		
		[Association(Name="POAdviceNote_POAdviceNotePO", Storage="_POAdviceNote", ThisKey="Supplier,AdviceNote", OtherKey="Supplier,AdviceNote", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public POAdviceNote POAdviceNote
		{
			get
			{
				return this._POAdviceNote.Entity;
			}
			set
			{
				POAdviceNote previousValue = this._POAdviceNote.Entity;
				if (((previousValue != value) 
							|| (this._POAdviceNote.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._POAdviceNote.Entity = null;
						previousValue.POAdviceNotePOs.Remove(this);
					}
					this._POAdviceNote.Entity = value;
					if ((value != null))
					{
						value.POAdviceNotePOs.Add(this);
						this._Supplier = value.Supplier;
						this._AdviceNote = value.AdviceNote;
					}
					else
					{
						this._Supplier = default(string);
						this._AdviceNote = default(string);
					}
					this.SendPropertyChanged("POAdviceNote");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.POInvoiceMatching")]
	public partial class POInvoiceMatching : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _OID;
		
		private string _PONO;
		
		private System.Nullable<int> _OrderLine;
		
		private string _AdviceNote;
		
		private System.Nullable<System.DateTime> _GRNDate;
		
		private System.Nullable<System.DateTime> _HDODate;
		
		private System.Nullable<System.DateTime> _StockInDate;
		
		private System.Nullable<int> _LogNo;
		
		private System.Nullable<int> _Suffix;
		
		private string _PaymentDone;
		
		private System.Nullable<System.DateTime> _PaymentDoneDate;
		
		private string _Status;
		
		private string _Transferred;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOIDChanging(long value);
    partial void OnOIDChanged();
    partial void OnPONOChanging(string value);
    partial void OnPONOChanged();
    partial void OnOrderLineChanging(System.Nullable<int> value);
    partial void OnOrderLineChanged();
    partial void OnAdviceNoteChanging(string value);
    partial void OnAdviceNoteChanged();
    partial void OnGRNDateChanging(System.Nullable<System.DateTime> value);
    partial void OnGRNDateChanged();
    partial void OnHDODateChanging(System.Nullable<System.DateTime> value);
    partial void OnHDODateChanged();
    partial void OnStockInDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStockInDateChanged();
    partial void OnLogNoChanging(System.Nullable<int> value);
    partial void OnLogNoChanged();
    partial void OnSuffixChanging(System.Nullable<int> value);
    partial void OnSuffixChanged();
    partial void OnPaymentDoneChanging(string value);
    partial void OnPaymentDoneChanged();
    partial void OnPaymentDoneDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPaymentDoneDateChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnTransferredChanging(string value);
    partial void OnTransferredChanged();
    #endregion
		
		public POInvoiceMatching()
		{
			OnCreated();
		}
		
		[Column(Storage="_OID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long OID
		{
			get
			{
				return this._OID;
			}
			set
			{
				if ((this._OID != value))
				{
					this.OnOIDChanging(value);
					this.SendPropertyChanging();
					this._OID = value;
					this.SendPropertyChanged("OID");
					this.OnOIDChanged();
				}
			}
		}
		
		[Column(Storage="_PONO", DbType="VarChar(20)")]
		public string PONO
		{
			get
			{
				return this._PONO;
			}
			set
			{
				if ((this._PONO != value))
				{
					this.OnPONOChanging(value);
					this.SendPropertyChanging();
					this._PONO = value;
					this.SendPropertyChanged("PONO");
					this.OnPONOChanged();
				}
			}
		}
		
		[Column(Storage="_OrderLine", DbType="Int")]
		public System.Nullable<int> OrderLine
		{
			get
			{
				return this._OrderLine;
			}
			set
			{
				if ((this._OrderLine != value))
				{
					this.OnOrderLineChanging(value);
					this.SendPropertyChanging();
					this._OrderLine = value;
					this.SendPropertyChanged("OrderLine");
					this.OnOrderLineChanged();
				}
			}
		}
		
		[Column(Storage="_AdviceNote", DbType="VarChar(20)")]
		public string AdviceNote
		{
			get
			{
				return this._AdviceNote;
			}
			set
			{
				if ((this._AdviceNote != value))
				{
					this.OnAdviceNoteChanging(value);
					this.SendPropertyChanging();
					this._AdviceNote = value;
					this.SendPropertyChanged("AdviceNote");
					this.OnAdviceNoteChanged();
				}
			}
		}
		
		[Column(Storage="_GRNDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> GRNDate
		{
			get
			{
				return this._GRNDate;
			}
			set
			{
				if ((this._GRNDate != value))
				{
					this.OnGRNDateChanging(value);
					this.SendPropertyChanging();
					this._GRNDate = value;
					this.SendPropertyChanged("GRNDate");
					this.OnGRNDateChanged();
				}
			}
		}
		
		[Column(Storage="_HDODate", DbType="DateTime")]
		public System.Nullable<System.DateTime> HDODate
		{
			get
			{
				return this._HDODate;
			}
			set
			{
				if ((this._HDODate != value))
				{
					this.OnHDODateChanging(value);
					this.SendPropertyChanging();
					this._HDODate = value;
					this.SendPropertyChanged("HDODate");
					this.OnHDODateChanged();
				}
			}
		}
		
		[Column(Storage="_StockInDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StockInDate
		{
			get
			{
				return this._StockInDate;
			}
			set
			{
				if ((this._StockInDate != value))
				{
					this.OnStockInDateChanging(value);
					this.SendPropertyChanging();
					this._StockInDate = value;
					this.SendPropertyChanged("StockInDate");
					this.OnStockInDateChanged();
				}
			}
		}
		
		[Column(Storage="_LogNo", DbType="Int")]
		public System.Nullable<int> LogNo
		{
			get
			{
				return this._LogNo;
			}
			set
			{
				if ((this._LogNo != value))
				{
					this.OnLogNoChanging(value);
					this.SendPropertyChanging();
					this._LogNo = value;
					this.SendPropertyChanged("LogNo");
					this.OnLogNoChanged();
				}
			}
		}
		
		[Column(Storage="_Suffix", DbType="Int")]
		public System.Nullable<int> Suffix
		{
			get
			{
				return this._Suffix;
			}
			set
			{
				if ((this._Suffix != value))
				{
					this.OnSuffixChanging(value);
					this.SendPropertyChanging();
					this._Suffix = value;
					this.SendPropertyChanged("Suffix");
					this.OnSuffixChanged();
				}
			}
		}
		
		[Column(Storage="_PaymentDone", DbType="VarChar(10)")]
		public string PaymentDone
		{
			get
			{
				return this._PaymentDone;
			}
			set
			{
				if ((this._PaymentDone != value))
				{
					this.OnPaymentDoneChanging(value);
					this.SendPropertyChanging();
					this._PaymentDone = value;
					this.SendPropertyChanged("PaymentDone");
					this.OnPaymentDoneChanged();
				}
			}
		}
		
		[Column(Storage="_PaymentDoneDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PaymentDoneDate
		{
			get
			{
				return this._PaymentDoneDate;
			}
			set
			{
				if ((this._PaymentDoneDate != value))
				{
					this.OnPaymentDoneDateChanging(value);
					this.SendPropertyChanging();
					this._PaymentDoneDate = value;
					this.SendPropertyChanged("PaymentDoneDate");
					this.OnPaymentDoneDateChanged();
				}
			}
		}
		
		[Column(Storage="_Status", DbType="VarChar(20)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[Column(Storage="_Transferred", DbType="VarChar(20)")]
		public string Transferred
		{
			get
			{
				return this._Transferred;
			}
			set
			{
				if ((this._Transferred != value))
				{
					this.OnTransferredChanging(value);
					this.SendPropertyChanging();
					this._Transferred = value;
					this.SendPropertyChanged("Transferred");
					this.OnTransferredChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Field")]
	public partial class Field : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _OID;
		
		private string _Code;
		
		private string _Description;
		
		private string _Customer;
		
		private string _Members;
		
		private string _Presenter;
		
		private System.Nullable<int> _SortID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOIDChanging(long value);
    partial void OnOIDChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCustomerChanging(string value);
    partial void OnCustomerChanged();
    partial void OnMembersChanging(string value);
    partial void OnMembersChanged();
    partial void OnPresenterChanging(string value);
    partial void OnPresenterChanged();
    partial void OnSortIDChanging(System.Nullable<int> value);
    partial void OnSortIDChanged();
    #endregion
		
		public Field()
		{
			OnCreated();
		}
		
		[Column(Storage="_OID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long OID
		{
			get
			{
				return this._OID;
			}
			set
			{
				if ((this._OID != value))
				{
					this.OnOIDChanging(value);
					this.SendPropertyChanging();
					this._OID = value;
					this.SendPropertyChanged("OID");
					this.OnOIDChanged();
				}
			}
		}
		
		[Column(Storage="_Code", DbType="VarChar(30)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Description", DbType="VarChar(200)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_Customer", DbType="VarChar(1000)")]
		public string Customer
		{
			get
			{
				return this._Customer;
			}
			set
			{
				if ((this._Customer != value))
				{
					this.OnCustomerChanging(value);
					this.SendPropertyChanging();
					this._Customer = value;
					this.SendPropertyChanged("Customer");
					this.OnCustomerChanged();
				}
			}
		}
		
		[Column(Storage="_Members", DbType="VarChar(1000)")]
		public string Members
		{
			get
			{
				return this._Members;
			}
			set
			{
				if ((this._Members != value))
				{
					this.OnMembersChanging(value);
					this.SendPropertyChanging();
					this._Members = value;
					this.SendPropertyChanged("Members");
					this.OnMembersChanged();
				}
			}
		}
		
		[Column(Storage="_Presenter", DbType="VarChar(1000)")]
		public string Presenter
		{
			get
			{
				return this._Presenter;
			}
			set
			{
				if ((this._Presenter != value))
				{
					this.OnPresenterChanging(value);
					this.SendPropertyChanging();
					this._Presenter = value;
					this.SendPropertyChanged("Presenter");
					this.OnPresenterChanged();
				}
			}
		}
		
		[Column(Storage="_SortID", DbType="Int")]
		public System.Nullable<int> SortID
		{
			get
			{
				return this._SortID;
			}
			set
			{
				if ((this._SortID != value))
				{
					this.OnSortIDChanging(value);
					this.SendPropertyChanging();
					this._SortID = value;
					this.SendPropertyChanged("SortID");
					this.OnSortIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.ActionLogDetail")]
	public partial class ActionLogDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _OID;
		
		private long _AlertLogHeaderOID;
		
		private string _ActionLogID;
		
		private string _ActionLogSeqNo;
		
		private System.Nullable<System.DateTime> _StartFollowDate;
		
		private System.Nullable<int> _FollowCount;
		
		private string _Sender;
		
		private string _FollowSummary;
		
		private System.Data.Linq.Binary _Attachment;
		
		private string _AttFileName;
		
		private string _EmailTo;
		
		private string _EmailCc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOIDChanging(long value);
    partial void OnOIDChanged();
    partial void OnAlertLogHeaderOIDChanging(long value);
    partial void OnAlertLogHeaderOIDChanged();
    partial void OnActionLogIDChanging(string value);
    partial void OnActionLogIDChanged();
    partial void OnActionLogSeqNoChanging(string value);
    partial void OnActionLogSeqNoChanged();
    partial void OnStartFollowDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartFollowDateChanged();
    partial void OnFollowCountChanging(System.Nullable<int> value);
    partial void OnFollowCountChanged();
    partial void OnSenderChanging(string value);
    partial void OnSenderChanged();
    partial void OnFollowSummaryChanging(string value);
    partial void OnFollowSummaryChanged();
    partial void OnAttachmentChanging(System.Data.Linq.Binary value);
    partial void OnAttachmentChanged();
    partial void OnAttFileNameChanging(string value);
    partial void OnAttFileNameChanged();
    partial void OnEmailToChanging(string value);
    partial void OnEmailToChanged();
    partial void OnEmailCcChanging(string value);
    partial void OnEmailCcChanged();
    #endregion
		
		public ActionLogDetail()
		{
			OnCreated();
		}
		
		[Column(Storage="_OID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long OID
		{
			get
			{
				return this._OID;
			}
			set
			{
				if ((this._OID != value))
				{
					this.OnOIDChanging(value);
					this.SendPropertyChanging();
					this._OID = value;
					this.SendPropertyChanged("OID");
					this.OnOIDChanged();
				}
			}
		}
		
		[Column(Storage="_AlertLogHeaderOID", DbType="BigInt NOT NULL")]
		public long AlertLogHeaderOID
		{
			get
			{
				return this._AlertLogHeaderOID;
			}
			set
			{
				if ((this._AlertLogHeaderOID != value))
				{
					this.OnAlertLogHeaderOIDChanging(value);
					this.SendPropertyChanging();
					this._AlertLogHeaderOID = value;
					this.SendPropertyChanged("AlertLogHeaderOID");
					this.OnAlertLogHeaderOIDChanged();
				}
			}
		}
		
		[Column(Storage="_ActionLogID", DbType="VarChar(100)")]
		public string ActionLogID
		{
			get
			{
				return this._ActionLogID;
			}
			set
			{
				if ((this._ActionLogID != value))
				{
					this.OnActionLogIDChanging(value);
					this.SendPropertyChanging();
					this._ActionLogID = value;
					this.SendPropertyChanged("ActionLogID");
					this.OnActionLogIDChanged();
				}
			}
		}
		
		[Column(Storage="_ActionLogSeqNo", DbType="VarChar(100)")]
		public string ActionLogSeqNo
		{
			get
			{
				return this._ActionLogSeqNo;
			}
			set
			{
				if ((this._ActionLogSeqNo != value))
				{
					this.OnActionLogSeqNoChanging(value);
					this.SendPropertyChanging();
					this._ActionLogSeqNo = value;
					this.SendPropertyChanged("ActionLogSeqNo");
					this.OnActionLogSeqNoChanged();
				}
			}
		}
		
		[Column(Storage="_StartFollowDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartFollowDate
		{
			get
			{
				return this._StartFollowDate;
			}
			set
			{
				if ((this._StartFollowDate != value))
				{
					this.OnStartFollowDateChanging(value);
					this.SendPropertyChanging();
					this._StartFollowDate = value;
					this.SendPropertyChanged("StartFollowDate");
					this.OnStartFollowDateChanged();
				}
			}
		}
		
		[Column(Storage="_FollowCount", DbType="Int")]
		public System.Nullable<int> FollowCount
		{
			get
			{
				return this._FollowCount;
			}
			set
			{
				if ((this._FollowCount != value))
				{
					this.OnFollowCountChanging(value);
					this.SendPropertyChanging();
					this._FollowCount = value;
					this.SendPropertyChanged("FollowCount");
					this.OnFollowCountChanged();
				}
			}
		}
		
		[Column(Storage="_Sender", DbType="NVarChar(100)")]
		public string Sender
		{
			get
			{
				return this._Sender;
			}
			set
			{
				if ((this._Sender != value))
				{
					this.OnSenderChanging(value);
					this.SendPropertyChanging();
					this._Sender = value;
					this.SendPropertyChanged("Sender");
					this.OnSenderChanged();
				}
			}
		}
		
		[Column(Storage="_FollowSummary", DbType="NVarChar(MAX)")]
		public string FollowSummary
		{
			get
			{
				return this._FollowSummary;
			}
			set
			{
				if ((this._FollowSummary != value))
				{
					this.OnFollowSummaryChanging(value);
					this.SendPropertyChanging();
					this._FollowSummary = value;
					this.SendPropertyChanged("FollowSummary");
					this.OnFollowSummaryChanged();
				}
			}
		}
		
		[Column(Storage="_Attachment", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Attachment
		{
			get
			{
				return this._Attachment;
			}
			set
			{
				if ((this._Attachment != value))
				{
					this.OnAttachmentChanging(value);
					this.SendPropertyChanging();
					this._Attachment = value;
					this.SendPropertyChanged("Attachment");
					this.OnAttachmentChanged();
				}
			}
		}
		
		[Column(Storage="_AttFileName", DbType="NVarChar(200)")]
		public string AttFileName
		{
			get
			{
				return this._AttFileName;
			}
			set
			{
				if ((this._AttFileName != value))
				{
					this.OnAttFileNameChanging(value);
					this.SendPropertyChanging();
					this._AttFileName = value;
					this.SendPropertyChanged("AttFileName");
					this.OnAttFileNameChanged();
				}
			}
		}
		
		[Column(Storage="_EmailTo", DbType="VarChar(2000)")]
		public string EmailTo
		{
			get
			{
				return this._EmailTo;
			}
			set
			{
				if ((this._EmailTo != value))
				{
					this.OnEmailToChanging(value);
					this.SendPropertyChanging();
					this._EmailTo = value;
					this.SendPropertyChanged("EmailTo");
					this.OnEmailToChanged();
				}
			}
		}
		
		[Column(Storage="_EmailCc", DbType="VarChar(2000)")]
		public string EmailCc
		{
			get
			{
				return this._EmailCc;
			}
			set
			{
				if ((this._EmailCc != value))
				{
					this.OnEmailCcChanging(value);
					this.SendPropertyChanging();
					this._EmailCc = value;
					this.SendPropertyChanged("EmailCc");
					this.OnEmailCcChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.ActionLogIMQE")]
	public partial class ActionLogIMQE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _OID;
		
		private string _ActionLogID;
		
		private string _IMQEActionLogSeqNo;
		
		private string _IMQEAuditNo;
		
		private string _IMQECategoryNo;
		
		private string _IMQECreator;
		
		private System.Nullable<System.DateTime> _DataCrossTransferredDate;
		
		private string _DataCrossTransferredFlag;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOIDChanging(long value);
    partial void OnOIDChanged();
    partial void OnActionLogIDChanging(string value);
    partial void OnActionLogIDChanged();
    partial void OnIMQEActionLogSeqNoChanging(string value);
    partial void OnIMQEActionLogSeqNoChanged();
    partial void OnIMQEAuditNoChanging(string value);
    partial void OnIMQEAuditNoChanged();
    partial void OnIMQECategoryNoChanging(string value);
    partial void OnIMQECategoryNoChanged();
    partial void OnIMQECreatorChanging(string value);
    partial void OnIMQECreatorChanged();
    partial void OnDataCrossTransferredDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDataCrossTransferredDateChanged();
    partial void OnDataCrossTransferredFlagChanging(string value);
    partial void OnDataCrossTransferredFlagChanged();
    #endregion
		
		public ActionLogIMQE()
		{
			OnCreated();
		}
		
		[Column(Storage="_OID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long OID
		{
			get
			{
				return this._OID;
			}
			set
			{
				if ((this._OID != value))
				{
					this.OnOIDChanging(value);
					this.SendPropertyChanging();
					this._OID = value;
					this.SendPropertyChanged("OID");
					this.OnOIDChanged();
				}
			}
		}
		
		[Column(Storage="_ActionLogID", DbType="VarChar(100)")]
		public string ActionLogID
		{
			get
			{
				return this._ActionLogID;
			}
			set
			{
				if ((this._ActionLogID != value))
				{
					this.OnActionLogIDChanging(value);
					this.SendPropertyChanging();
					this._ActionLogID = value;
					this.SendPropertyChanged("ActionLogID");
					this.OnActionLogIDChanged();
				}
			}
		}
		
		[Column(Storage="_IMQEActionLogSeqNo", DbType="VarChar(20)")]
		public string IMQEActionLogSeqNo
		{
			get
			{
				return this._IMQEActionLogSeqNo;
			}
			set
			{
				if ((this._IMQEActionLogSeqNo != value))
				{
					this.OnIMQEActionLogSeqNoChanging(value);
					this.SendPropertyChanging();
					this._IMQEActionLogSeqNo = value;
					this.SendPropertyChanged("IMQEActionLogSeqNo");
					this.OnIMQEActionLogSeqNoChanged();
				}
			}
		}
		
		[Column(Storage="_IMQEAuditNo", DbType="VarChar(120)")]
		public string IMQEAuditNo
		{
			get
			{
				return this._IMQEAuditNo;
			}
			set
			{
				if ((this._IMQEAuditNo != value))
				{
					this.OnIMQEAuditNoChanging(value);
					this.SendPropertyChanging();
					this._IMQEAuditNo = value;
					this.SendPropertyChanged("IMQEAuditNo");
					this.OnIMQEAuditNoChanged();
				}
			}
		}
		
		[Column(Storage="_IMQECategoryNo", DbType="VarChar(20)")]
		public string IMQECategoryNo
		{
			get
			{
				return this._IMQECategoryNo;
			}
			set
			{
				if ((this._IMQECategoryNo != value))
				{
					this.OnIMQECategoryNoChanging(value);
					this.SendPropertyChanging();
					this._IMQECategoryNo = value;
					this.SendPropertyChanged("IMQECategoryNo");
					this.OnIMQECategoryNoChanged();
				}
			}
		}
		
		[Column(Storage="_IMQECreator", DbType="VarChar(100)")]
		public string IMQECreator
		{
			get
			{
				return this._IMQECreator;
			}
			set
			{
				if ((this._IMQECreator != value))
				{
					this.OnIMQECreatorChanging(value);
					this.SendPropertyChanging();
					this._IMQECreator = value;
					this.SendPropertyChanged("IMQECreator");
					this.OnIMQECreatorChanged();
				}
			}
		}
		
		[Column(Storage="_DataCrossTransferredDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DataCrossTransferredDate
		{
			get
			{
				return this._DataCrossTransferredDate;
			}
			set
			{
				if ((this._DataCrossTransferredDate != value))
				{
					this.OnDataCrossTransferredDateChanging(value);
					this.SendPropertyChanging();
					this._DataCrossTransferredDate = value;
					this.SendPropertyChanged("DataCrossTransferredDate");
					this.OnDataCrossTransferredDateChanged();
				}
			}
		}
		
		[Column(Storage="_DataCrossTransferredFlag", DbType="VarChar(10)")]
		public string DataCrossTransferredFlag
		{
			get
			{
				return this._DataCrossTransferredFlag;
			}
			set
			{
				if ((this._DataCrossTransferredFlag != value))
				{
					this.OnDataCrossTransferredFlagChanging(value);
					this.SendPropertyChanging();
					this._DataCrossTransferredFlag = value;
					this.SendPropertyChanged("DataCrossTransferredFlag");
					this.OnDataCrossTransferredFlagChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.POChangesMonitor")]
	public partial class POChangesMonitor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Company;
		
		private string _PONO;
		
		private int _Version;
		
		private int _AmendmentNo;
		
		private int _OrderLine;
		
		private string _SKU;
		
		private int _SplitNo;
		
		private System.Nullable<bool> _VersionFlag;
		
		private System.Nullable<System.DateTime> _RevisedDeliveryDate;
		
		private System.Nullable<double> _SplitQty;
		
		private string _TransitModeChanged;
		
		private System.Nullable<int> _ChangedTimeFrame1;
		
		private System.Nullable<System.DateTime> _GRNDate;
		
		private System.Nullable<double> _GRNQty;
		
		private System.Nullable<double> _ReceivedQty;
		
		private System.Nullable<System.DateTime> _IssueDate;
		
		private string _RCNo;
		
		private System.Nullable<double> _RCQty;
		
		private System.Nullable<double> _StockInQty;
		
		private System.Nullable<System.DateTime> _StockInDate;
		
		private string _Remark;
		
		private System.Nullable<decimal> _InvoiceQty;
		
		private string _InvoiceNo;
		
		private System.Nullable<System.DateTime> _InvoiceDate;
		
		private string _InvoiceNotMatching;
		
		private System.Nullable<bool> _InvoiceNoFlag;
		
		private System.Nullable<bool> _InvoiceDateFlag;
		
		private System.Nullable<bool> _GRNQtyFlag;
		
		private System.Nullable<bool> _InvoiceAmountFlag;
		
		private string _AdviceNote;
		
		private string _ActionPlan;
		
		private System.Nullable<bool> _ActionStatus;
		
		private System.Nullable<System.DateTime> _ActualETA;
		
		private System.Nullable<System.DateTime> _ActualETD;
		
		private string _TransitMode1Change;
		
		private string _TransitMode2Change;
		
		private System.Nullable<int> _TimeFrame1Change;
		
		private System.Nullable<int> _TimeFrame2Change;
		
		private string _PORevFigure;
		
		private System.Nullable<int> _WOSeqNo;
		
		private System.Nullable<System.DateTime> _InvoiceMatchingDate;
		
		private System.Nullable<System.DateTime> _FillUpDate;
		
		private System.Nullable<double> _AffectPercent;
		
		private System.Nullable<decimal> _InvoicePrice;
		
		private System.Nullable<decimal> _AddQty;
		
		private System.Nullable<decimal> _AddQtyFOC;
		
		private string _RCCode;
		
		private System.Nullable<long> _ActionLogOID;
		
		private string _ActionLogID;
		
		private string _ActionLogSeqNo;
		
		private string _ActionLogTaking;
		
		private string _ActionLogCategory;
		
		private string _ActionLogGroup;
		
		private System.Nullable<System.DateTime> _ActionLogTargetDate;
		
		private System.Nullable<System.DateTime> _ActionLogRevisedDate;
		
		private System.Nullable<System.DateTime> _ActionLogCmplDate;
		
		private System.Nullable<double> _RelatedShptPercent;
		
		private string _ActionLogCmpl;
		
		private System.Nullable<double> _DRQty;
		
		private string _DRQPOSuffix;
		
		private string _NonPONO;
		
		private string _NonProjectNo;
		
		private System.Nullable<int> _LogNo;
		
		private System.Nullable<int> _Suffix;
		
		private string _PaymentDone;
		
		private System.Nullable<System.DateTime> _PaymentDoneDate;
		
		private string _Status;
		
		private string _Transferred;
		
		private System.Nullable<System.DateTime> _POActualTransitDate;
		
		private System.Nullable<System.DateTime> _HDOReleasedDate;
		
		private EntitySet<POGRN> _POGRNs;
		
		private EntityRef<POColorSizeDetail> _POColorSizeDetail;
		
		private EntityRef<ActionLogHeader> _ActionLogHeader;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnPONOChanging(string value);
    partial void OnPONOChanged();
    partial void OnVersionChanging(int value);
    partial void OnVersionChanged();
    partial void OnAmendmentNoChanging(int value);
    partial void OnAmendmentNoChanged();
    partial void OnOrderLineChanging(int value);
    partial void OnOrderLineChanged();
    partial void OnSKUChanging(string value);
    partial void OnSKUChanged();
    partial void OnSplitNoChanging(int value);
    partial void OnSplitNoChanged();
    partial void OnVersionFlagChanging(System.Nullable<bool> value);
    partial void OnVersionFlagChanged();
    partial void OnRevisedDeliveryDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRevisedDeliveryDateChanged();
    partial void OnSplitQtyChanging(System.Nullable<double> value);
    partial void OnSplitQtyChanged();
    partial void OnTransitModeChangedChanging(string value);
    partial void OnTransitModeChangedChanged();
    partial void OnChangedTimeFrame1Changing(System.Nullable<int> value);
    partial void OnChangedTimeFrame1Changed();
    partial void OnGRNDateChanging(System.Nullable<System.DateTime> value);
    partial void OnGRNDateChanged();
    partial void OnGRNQtyChanging(System.Nullable<double> value);
    partial void OnGRNQtyChanged();
    partial void OnReceivedQtyChanging(System.Nullable<double> value);
    partial void OnReceivedQtyChanged();
    partial void OnIssueDateChanging(System.Nullable<System.DateTime> value);
    partial void OnIssueDateChanged();
    partial void OnRCNoChanging(string value);
    partial void OnRCNoChanged();
    partial void OnRCQtyChanging(System.Nullable<double> value);
    partial void OnRCQtyChanged();
    partial void OnStockInQtyChanging(System.Nullable<double> value);
    partial void OnStockInQtyChanged();
    partial void OnStockInDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStockInDateChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnInvoiceQtyChanging(System.Nullable<decimal> value);
    partial void OnInvoiceQtyChanged();
    partial void OnInvoiceNoChanging(string value);
    partial void OnInvoiceNoChanged();
    partial void OnInvoiceDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInvoiceDateChanged();
    partial void OnInvoiceNotMatchingChanging(string value);
    partial void OnInvoiceNotMatchingChanged();
    partial void OnInvoiceNoFlagChanging(System.Nullable<bool> value);
    partial void OnInvoiceNoFlagChanged();
    partial void OnInvoiceDateFlagChanging(System.Nullable<bool> value);
    partial void OnInvoiceDateFlagChanged();
    partial void OnGRNQtyFlagChanging(System.Nullable<bool> value);
    partial void OnGRNQtyFlagChanged();
    partial void OnInvoiceAmountFlagChanging(System.Nullable<bool> value);
    partial void OnInvoiceAmountFlagChanged();
    partial void OnAdviceNoteChanging(string value);
    partial void OnAdviceNoteChanged();
    partial void OnActionPlanChanging(string value);
    partial void OnActionPlanChanged();
    partial void OnActionStatusChanging(System.Nullable<bool> value);
    partial void OnActionStatusChanged();
    partial void OnActualETAChanging(System.Nullable<System.DateTime> value);
    partial void OnActualETAChanged();
    partial void OnActualETDChanging(System.Nullable<System.DateTime> value);
    partial void OnActualETDChanged();
    partial void OnTransitMode1ChangeChanging(string value);
    partial void OnTransitMode1ChangeChanged();
    partial void OnTransitMode2ChangeChanging(string value);
    partial void OnTransitMode2ChangeChanged();
    partial void OnTimeFrame1ChangeChanging(System.Nullable<int> value);
    partial void OnTimeFrame1ChangeChanged();
    partial void OnTimeFrame2ChangeChanging(System.Nullable<int> value);
    partial void OnTimeFrame2ChangeChanged();
    partial void OnPORevFigureChanging(string value);
    partial void OnPORevFigureChanged();
    partial void OnWOSeqNoChanging(System.Nullable<int> value);
    partial void OnWOSeqNoChanged();
    partial void OnInvoiceMatchingDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInvoiceMatchingDateChanged();
    partial void OnFillUpDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFillUpDateChanged();
    partial void OnAffectPercentChanging(System.Nullable<double> value);
    partial void OnAffectPercentChanged();
    partial void OnInvoicePriceChanging(System.Nullable<decimal> value);
    partial void OnInvoicePriceChanged();
    partial void OnAddQtyChanging(System.Nullable<decimal> value);
    partial void OnAddQtyChanged();
    partial void OnAddQtyFOCChanging(System.Nullable<decimal> value);
    partial void OnAddQtyFOCChanged();
    partial void OnRCCodeChanging(string value);
    partial void OnRCCodeChanged();
    partial void OnActionLogOIDChanging(System.Nullable<long> value);
    partial void OnActionLogOIDChanged();
    partial void OnActionLogIDChanging(string value);
    partial void OnActionLogIDChanged();
    partial void OnActionLogSeqNoChanging(string value);
    partial void OnActionLogSeqNoChanged();
    partial void OnActionLogTakingChanging(string value);
    partial void OnActionLogTakingChanged();
    partial void OnActionLogCategoryChanging(string value);
    partial void OnActionLogCategoryChanged();
    partial void OnActionLogGroupChanging(string value);
    partial void OnActionLogGroupChanged();
    partial void OnActionLogTargetDateChanging(System.Nullable<System.DateTime> value);
    partial void OnActionLogTargetDateChanged();
    partial void OnActionLogRevisedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnActionLogRevisedDateChanged();
    partial void OnActionLogCmplDateChanging(System.Nullable<System.DateTime> value);
    partial void OnActionLogCmplDateChanged();
    partial void OnRelatedShptPercentChanging(System.Nullable<double> value);
    partial void OnRelatedShptPercentChanged();
    partial void OnActionLogCmplChanging(string value);
    partial void OnActionLogCmplChanged();
    partial void OnDRQtyChanging(System.Nullable<double> value);
    partial void OnDRQtyChanged();
    partial void OnDRQPOSuffixChanging(string value);
    partial void OnDRQPOSuffixChanged();
    partial void OnNonPONOChanging(string value);
    partial void OnNonPONOChanged();
    partial void OnNonProjectNoChanging(string value);
    partial void OnNonProjectNoChanged();
    partial void OnLogNoChanging(System.Nullable<int> value);
    partial void OnLogNoChanged();
    partial void OnSuffixChanging(System.Nullable<int> value);
    partial void OnSuffixChanged();
    partial void OnPaymentDoneChanging(string value);
    partial void OnPaymentDoneChanged();
    partial void OnPaymentDoneDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPaymentDoneDateChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnTransferredChanging(string value);
    partial void OnTransferredChanged();
    partial void OnPOActualTransitDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPOActualTransitDateChanged();
    partial void OnHDOReleasedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnHDOReleasedDateChanged();
    #endregion
		
		public POChangesMonitor()
		{
			this._POGRNs = new EntitySet<POGRN>(new Action<POGRN>(this.attach_POGRNs), new Action<POGRN>(this.detach_POGRNs));
			this._POColorSizeDetail = default(EntityRef<POColorSizeDetail>);
			this._ActionLogHeader = default(EntityRef<ActionLogHeader>);
			OnCreated();
		}
		
		[Column(Storage="_Company", DbType="VarChar(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					if (this._POColorSizeDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[Column(Storage="_PONO", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PONO
		{
			get
			{
				return this._PONO;
			}
			set
			{
				if ((this._PONO != value))
				{
					if (this._POColorSizeDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPONOChanging(value);
					this.SendPropertyChanging();
					this._PONO = value;
					this.SendPropertyChanged("PONO");
					this.OnPONOChanged();
				}
			}
		}
		
		[Column(Storage="_Version", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					if (this._POColorSizeDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[Column(Storage="_AmendmentNo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AmendmentNo
		{
			get
			{
				return this._AmendmentNo;
			}
			set
			{
				if ((this._AmendmentNo != value))
				{
					if (this._POColorSizeDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAmendmentNoChanging(value);
					this.SendPropertyChanging();
					this._AmendmentNo = value;
					this.SendPropertyChanged("AmendmentNo");
					this.OnAmendmentNoChanged();
				}
			}
		}
		
		[Column(Storage="_OrderLine", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int OrderLine
		{
			get
			{
				return this._OrderLine;
			}
			set
			{
				if ((this._OrderLine != value))
				{
					if (this._POColorSizeDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderLineChanging(value);
					this.SendPropertyChanging();
					this._OrderLine = value;
					this.SendPropertyChanged("OrderLine");
					this.OnOrderLineChanged();
				}
			}
		}
		
		[Column(Storage="_SKU", DbType="VarChar(32) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SKU
		{
			get
			{
				return this._SKU;
			}
			set
			{
				if ((this._SKU != value))
				{
					if (this._POColorSizeDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSKUChanging(value);
					this.SendPropertyChanging();
					this._SKU = value;
					this.SendPropertyChanged("SKU");
					this.OnSKUChanged();
				}
			}
		}
		
		[Column(Storage="_SplitNo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SplitNo
		{
			get
			{
				return this._SplitNo;
			}
			set
			{
				if ((this._SplitNo != value))
				{
					this.OnSplitNoChanging(value);
					this.SendPropertyChanging();
					this._SplitNo = value;
					this.SendPropertyChanged("SplitNo");
					this.OnSplitNoChanged();
				}
			}
		}
		
		[Column(Storage="_VersionFlag", DbType="Bit")]
		public System.Nullable<bool> VersionFlag
		{
			get
			{
				return this._VersionFlag;
			}
			set
			{
				if ((this._VersionFlag != value))
				{
					this.OnVersionFlagChanging(value);
					this.SendPropertyChanging();
					this._VersionFlag = value;
					this.SendPropertyChanged("VersionFlag");
					this.OnVersionFlagChanged();
				}
			}
		}
		
		[Column(Storage="_RevisedDeliveryDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RevisedDeliveryDate
		{
			get
			{
				return this._RevisedDeliveryDate;
			}
			set
			{
				if ((this._RevisedDeliveryDate != value))
				{
					this.OnRevisedDeliveryDateChanging(value);
					this.SendPropertyChanging();
					this._RevisedDeliveryDate = value;
					this.SendPropertyChanged("RevisedDeliveryDate");
					this.OnRevisedDeliveryDateChanged();
				}
			}
		}
		
		[Column(Storage="_SplitQty", DbType="Float")]
		public System.Nullable<double> SplitQty
		{
			get
			{
				return this._SplitQty;
			}
			set
			{
				if ((this._SplitQty != value))
				{
					this.OnSplitQtyChanging(value);
					this.SendPropertyChanging();
					this._SplitQty = value;
					this.SendPropertyChanged("SplitQty");
					this.OnSplitQtyChanged();
				}
			}
		}
		
		[Column(Storage="_TransitModeChanged", DbType="NVarChar(100)")]
		public string TransitModeChanged
		{
			get
			{
				return this._TransitModeChanged;
			}
			set
			{
				if ((this._TransitModeChanged != value))
				{
					this.OnTransitModeChangedChanging(value);
					this.SendPropertyChanging();
					this._TransitModeChanged = value;
					this.SendPropertyChanged("TransitModeChanged");
					this.OnTransitModeChangedChanged();
				}
			}
		}
		
		[Column(Storage="_ChangedTimeFrame1", DbType="Int")]
		public System.Nullable<int> ChangedTimeFrame1
		{
			get
			{
				return this._ChangedTimeFrame1;
			}
			set
			{
				if ((this._ChangedTimeFrame1 != value))
				{
					this.OnChangedTimeFrame1Changing(value);
					this.SendPropertyChanging();
					this._ChangedTimeFrame1 = value;
					this.SendPropertyChanged("ChangedTimeFrame1");
					this.OnChangedTimeFrame1Changed();
				}
			}
		}
		
		[Column(Storage="_GRNDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> GRNDate
		{
			get
			{
				return this._GRNDate;
			}
			set
			{
				if ((this._GRNDate != value))
				{
					this.OnGRNDateChanging(value);
					this.SendPropertyChanging();
					this._GRNDate = value;
					this.SendPropertyChanged("GRNDate");
					this.OnGRNDateChanged();
				}
			}
		}
		
		[Column(Storage="_GRNQty", DbType="Float")]
		public System.Nullable<double> GRNQty
		{
			get
			{
				return this._GRNQty;
			}
			set
			{
				if ((this._GRNQty != value))
				{
					this.OnGRNQtyChanging(value);
					this.SendPropertyChanging();
					this._GRNQty = value;
					this.SendPropertyChanged("GRNQty");
					this.OnGRNQtyChanged();
				}
			}
		}
		
		[Column(Storage="_ReceivedQty", DbType="Float")]
		public System.Nullable<double> ReceivedQty
		{
			get
			{
				return this._ReceivedQty;
			}
			set
			{
				if ((this._ReceivedQty != value))
				{
					this.OnReceivedQtyChanging(value);
					this.SendPropertyChanging();
					this._ReceivedQty = value;
					this.SendPropertyChanged("ReceivedQty");
					this.OnReceivedQtyChanged();
				}
			}
		}
		
		[Column(Storage="_IssueDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> IssueDate
		{
			get
			{
				return this._IssueDate;
			}
			set
			{
				if ((this._IssueDate != value))
				{
					this.OnIssueDateChanging(value);
					this.SendPropertyChanging();
					this._IssueDate = value;
					this.SendPropertyChanged("IssueDate");
					this.OnIssueDateChanged();
				}
			}
		}
		
		[Column(Storage="_RCNo", DbType="NVarChar(20)")]
		public string RCNo
		{
			get
			{
				return this._RCNo;
			}
			set
			{
				if ((this._RCNo != value))
				{
					this.OnRCNoChanging(value);
					this.SendPropertyChanging();
					this._RCNo = value;
					this.SendPropertyChanged("RCNo");
					this.OnRCNoChanged();
				}
			}
		}
		
		[Column(Storage="_RCQty", DbType="Float")]
		public System.Nullable<double> RCQty
		{
			get
			{
				return this._RCQty;
			}
			set
			{
				if ((this._RCQty != value))
				{
					this.OnRCQtyChanging(value);
					this.SendPropertyChanging();
					this._RCQty = value;
					this.SendPropertyChanged("RCQty");
					this.OnRCQtyChanged();
				}
			}
		}
		
		[Column(Storage="_StockInQty", DbType="Float")]
		public System.Nullable<double> StockInQty
		{
			get
			{
				return this._StockInQty;
			}
			set
			{
				if ((this._StockInQty != value))
				{
					this.OnStockInQtyChanging(value);
					this.SendPropertyChanging();
					this._StockInQty = value;
					this.SendPropertyChanged("StockInQty");
					this.OnStockInQtyChanged();
				}
			}
		}
		
		[Column(Storage="_StockInDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StockInDate
		{
			get
			{
				return this._StockInDate;
			}
			set
			{
				if ((this._StockInDate != value))
				{
					this.OnStockInDateChanging(value);
					this.SendPropertyChanging();
					this._StockInDate = value;
					this.SendPropertyChanged("StockInDate");
					this.OnStockInDateChanged();
				}
			}
		}
		
		[Column(Storage="_Remark", DbType="NVarChar(500)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[Column(Storage="_InvoiceQty", DbType="Decimal(10,3)")]
		public System.Nullable<decimal> InvoiceQty
		{
			get
			{
				return this._InvoiceQty;
			}
			set
			{
				if ((this._InvoiceQty != value))
				{
					this.OnInvoiceQtyChanging(value);
					this.SendPropertyChanging();
					this._InvoiceQty = value;
					this.SendPropertyChanged("InvoiceQty");
					this.OnInvoiceQtyChanged();
				}
			}
		}
		
		[Column(Storage="_InvoiceNo", DbType="VarChar(50)")]
		public string InvoiceNo
		{
			get
			{
				return this._InvoiceNo;
			}
			set
			{
				if ((this._InvoiceNo != value))
				{
					this.OnInvoiceNoChanging(value);
					this.SendPropertyChanging();
					this._InvoiceNo = value;
					this.SendPropertyChanged("InvoiceNo");
					this.OnInvoiceNoChanged();
				}
			}
		}
		
		[Column(Storage="_InvoiceDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> InvoiceDate
		{
			get
			{
				return this._InvoiceDate;
			}
			set
			{
				if ((this._InvoiceDate != value))
				{
					this.OnInvoiceDateChanging(value);
					this.SendPropertyChanging();
					this._InvoiceDate = value;
					this.SendPropertyChanged("InvoiceDate");
					this.OnInvoiceDateChanged();
				}
			}
		}
		
		[Column(Storage="_InvoiceNotMatching", DbType="VarChar(500)")]
		public string InvoiceNotMatching
		{
			get
			{
				return this._InvoiceNotMatching;
			}
			set
			{
				if ((this._InvoiceNotMatching != value))
				{
					this.OnInvoiceNotMatchingChanging(value);
					this.SendPropertyChanging();
					this._InvoiceNotMatching = value;
					this.SendPropertyChanged("InvoiceNotMatching");
					this.OnInvoiceNotMatchingChanged();
				}
			}
		}
		
		[Column(Storage="_InvoiceNoFlag", DbType="Bit")]
		public System.Nullable<bool> InvoiceNoFlag
		{
			get
			{
				return this._InvoiceNoFlag;
			}
			set
			{
				if ((this._InvoiceNoFlag != value))
				{
					this.OnInvoiceNoFlagChanging(value);
					this.SendPropertyChanging();
					this._InvoiceNoFlag = value;
					this.SendPropertyChanged("InvoiceNoFlag");
					this.OnInvoiceNoFlagChanged();
				}
			}
		}
		
		[Column(Storage="_InvoiceDateFlag", DbType="Bit")]
		public System.Nullable<bool> InvoiceDateFlag
		{
			get
			{
				return this._InvoiceDateFlag;
			}
			set
			{
				if ((this._InvoiceDateFlag != value))
				{
					this.OnInvoiceDateFlagChanging(value);
					this.SendPropertyChanging();
					this._InvoiceDateFlag = value;
					this.SendPropertyChanged("InvoiceDateFlag");
					this.OnInvoiceDateFlagChanged();
				}
			}
		}
		
		[Column(Storage="_GRNQtyFlag", DbType="Bit")]
		public System.Nullable<bool> GRNQtyFlag
		{
			get
			{
				return this._GRNQtyFlag;
			}
			set
			{
				if ((this._GRNQtyFlag != value))
				{
					this.OnGRNQtyFlagChanging(value);
					this.SendPropertyChanging();
					this._GRNQtyFlag = value;
					this.SendPropertyChanged("GRNQtyFlag");
					this.OnGRNQtyFlagChanged();
				}
			}
		}
		
		[Column(Storage="_InvoiceAmountFlag", DbType="Bit")]
		public System.Nullable<bool> InvoiceAmountFlag
		{
			get
			{
				return this._InvoiceAmountFlag;
			}
			set
			{
				if ((this._InvoiceAmountFlag != value))
				{
					this.OnInvoiceAmountFlagChanging(value);
					this.SendPropertyChanging();
					this._InvoiceAmountFlag = value;
					this.SendPropertyChanged("InvoiceAmountFlag");
					this.OnInvoiceAmountFlagChanged();
				}
			}
		}
		
		[Column(Storage="_AdviceNote", DbType="NVarChar(20)")]
		public string AdviceNote
		{
			get
			{
				return this._AdviceNote;
			}
			set
			{
				if ((this._AdviceNote != value))
				{
					this.OnAdviceNoteChanging(value);
					this.SendPropertyChanging();
					this._AdviceNote = value;
					this.SendPropertyChanged("AdviceNote");
					this.OnAdviceNoteChanged();
				}
			}
		}
		
		[Column(Storage="_ActionPlan", DbType="VarChar(10)")]
		public string ActionPlan
		{
			get
			{
				return this._ActionPlan;
			}
			set
			{
				if ((this._ActionPlan != value))
				{
					this.OnActionPlanChanging(value);
					this.SendPropertyChanging();
					this._ActionPlan = value;
					this.SendPropertyChanged("ActionPlan");
					this.OnActionPlanChanged();
				}
			}
		}
		
		[Column(Storage="_ActionStatus", DbType="Bit")]
		public System.Nullable<bool> ActionStatus
		{
			get
			{
				return this._ActionStatus;
			}
			set
			{
				if ((this._ActionStatus != value))
				{
					this.OnActionStatusChanging(value);
					this.SendPropertyChanging();
					this._ActionStatus = value;
					this.SendPropertyChanged("ActionStatus");
					this.OnActionStatusChanged();
				}
			}
		}
		
		[Column(Storage="_ActualETA", DbType="DateTime")]
		public System.Nullable<System.DateTime> ActualETA
		{
			get
			{
				return this._ActualETA;
			}
			set
			{
				if ((this._ActualETA != value))
				{
					this.OnActualETAChanging(value);
					this.SendPropertyChanging();
					this._ActualETA = value;
					this.SendPropertyChanged("ActualETA");
					this.OnActualETAChanged();
				}
			}
		}
		
		[Column(Storage="_ActualETD", DbType="DateTime")]
		public System.Nullable<System.DateTime> ActualETD
		{
			get
			{
				return this._ActualETD;
			}
			set
			{
				if ((this._ActualETD != value))
				{
					this.OnActualETDChanging(value);
					this.SendPropertyChanging();
					this._ActualETD = value;
					this.SendPropertyChanged("ActualETD");
					this.OnActualETDChanged();
				}
			}
		}
		
		[Column(Storage="_TransitMode1Change", DbType="NVarChar(100)")]
		public string TransitMode1Change
		{
			get
			{
				return this._TransitMode1Change;
			}
			set
			{
				if ((this._TransitMode1Change != value))
				{
					this.OnTransitMode1ChangeChanging(value);
					this.SendPropertyChanging();
					this._TransitMode1Change = value;
					this.SendPropertyChanged("TransitMode1Change");
					this.OnTransitMode1ChangeChanged();
				}
			}
		}
		
		[Column(Storage="_TransitMode2Change", DbType="NVarChar(100)")]
		public string TransitMode2Change
		{
			get
			{
				return this._TransitMode2Change;
			}
			set
			{
				if ((this._TransitMode2Change != value))
				{
					this.OnTransitMode2ChangeChanging(value);
					this.SendPropertyChanging();
					this._TransitMode2Change = value;
					this.SendPropertyChanged("TransitMode2Change");
					this.OnTransitMode2ChangeChanged();
				}
			}
		}
		
		[Column(Storage="_TimeFrame1Change", DbType="Int")]
		public System.Nullable<int> TimeFrame1Change
		{
			get
			{
				return this._TimeFrame1Change;
			}
			set
			{
				if ((this._TimeFrame1Change != value))
				{
					this.OnTimeFrame1ChangeChanging(value);
					this.SendPropertyChanging();
					this._TimeFrame1Change = value;
					this.SendPropertyChanged("TimeFrame1Change");
					this.OnTimeFrame1ChangeChanged();
				}
			}
		}
		
		[Column(Storage="_TimeFrame2Change", DbType="Int")]
		public System.Nullable<int> TimeFrame2Change
		{
			get
			{
				return this._TimeFrame2Change;
			}
			set
			{
				if ((this._TimeFrame2Change != value))
				{
					this.OnTimeFrame2ChangeChanging(value);
					this.SendPropertyChanging();
					this._TimeFrame2Change = value;
					this.SendPropertyChanged("TimeFrame2Change");
					this.OnTimeFrame2ChangeChanged();
				}
			}
		}
		
		[Column(Storage="_PORevFigure", DbType="VarChar(100)")]
		public string PORevFigure
		{
			get
			{
				return this._PORevFigure;
			}
			set
			{
				if ((this._PORevFigure != value))
				{
					this.OnPORevFigureChanging(value);
					this.SendPropertyChanging();
					this._PORevFigure = value;
					this.SendPropertyChanged("PORevFigure");
					this.OnPORevFigureChanged();
				}
			}
		}
		
		[Column(Storage="_WOSeqNo", DbType="Int")]
		public System.Nullable<int> WOSeqNo
		{
			get
			{
				return this._WOSeqNo;
			}
			set
			{
				if ((this._WOSeqNo != value))
				{
					this.OnWOSeqNoChanging(value);
					this.SendPropertyChanging();
					this._WOSeqNo = value;
					this.SendPropertyChanged("WOSeqNo");
					this.OnWOSeqNoChanged();
				}
			}
		}
		
		[Column(Storage="_InvoiceMatchingDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> InvoiceMatchingDate
		{
			get
			{
				return this._InvoiceMatchingDate;
			}
			set
			{
				if ((this._InvoiceMatchingDate != value))
				{
					this.OnInvoiceMatchingDateChanging(value);
					this.SendPropertyChanging();
					this._InvoiceMatchingDate = value;
					this.SendPropertyChanged("InvoiceMatchingDate");
					this.OnInvoiceMatchingDateChanged();
				}
			}
		}
		
		[Column(Storage="_FillUpDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> FillUpDate
		{
			get
			{
				return this._FillUpDate;
			}
			set
			{
				if ((this._FillUpDate != value))
				{
					this.OnFillUpDateChanging(value);
					this.SendPropertyChanging();
					this._FillUpDate = value;
					this.SendPropertyChanged("FillUpDate");
					this.OnFillUpDateChanged();
				}
			}
		}
		
		[Column(Storage="_AffectPercent", DbType="Float")]
		public System.Nullable<double> AffectPercent
		{
			get
			{
				return this._AffectPercent;
			}
			set
			{
				if ((this._AffectPercent != value))
				{
					this.OnAffectPercentChanging(value);
					this.SendPropertyChanging();
					this._AffectPercent = value;
					this.SendPropertyChanged("AffectPercent");
					this.OnAffectPercentChanged();
				}
			}
		}
		
		[Column(Storage="_InvoicePrice", DbType="Decimal(18,5)")]
		public System.Nullable<decimal> InvoicePrice
		{
			get
			{
				return this._InvoicePrice;
			}
			set
			{
				if ((this._InvoicePrice != value))
				{
					this.OnInvoicePriceChanging(value);
					this.SendPropertyChanging();
					this._InvoicePrice = value;
					this.SendPropertyChanged("InvoicePrice");
					this.OnInvoicePriceChanged();
				}
			}
		}
		
		[Column(Storage="_AddQty", DbType="Decimal(10,3)")]
		public System.Nullable<decimal> AddQty
		{
			get
			{
				return this._AddQty;
			}
			set
			{
				if ((this._AddQty != value))
				{
					this.OnAddQtyChanging(value);
					this.SendPropertyChanging();
					this._AddQty = value;
					this.SendPropertyChanged("AddQty");
					this.OnAddQtyChanged();
				}
			}
		}
		
		[Column(Storage="_AddQtyFOC", DbType="Decimal(10,3)")]
		public System.Nullable<decimal> AddQtyFOC
		{
			get
			{
				return this._AddQtyFOC;
			}
			set
			{
				if ((this._AddQtyFOC != value))
				{
					this.OnAddQtyFOCChanging(value);
					this.SendPropertyChanging();
					this._AddQtyFOC = value;
					this.SendPropertyChanged("AddQtyFOC");
					this.OnAddQtyFOCChanged();
				}
			}
		}
		
		[Column(Storage="_RCCode", DbType="VarChar(20)")]
		public string RCCode
		{
			get
			{
				return this._RCCode;
			}
			set
			{
				if ((this._RCCode != value))
				{
					this.OnRCCodeChanging(value);
					this.SendPropertyChanging();
					this._RCCode = value;
					this.SendPropertyChanged("RCCode");
					this.OnRCCodeChanged();
				}
			}
		}
		
		[Column(Storage="_ActionLogOID", DbType="BigInt")]
		public System.Nullable<long> ActionLogOID
		{
			get
			{
				return this._ActionLogOID;
			}
			set
			{
				if ((this._ActionLogOID != value))
				{
					if (this._ActionLogHeader.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnActionLogOIDChanging(value);
					this.SendPropertyChanging();
					this._ActionLogOID = value;
					this.SendPropertyChanged("ActionLogOID");
					this.OnActionLogOIDChanged();
				}
			}
		}
		
		[Column(Storage="_ActionLogID", DbType="VarChar(100)")]
		public string ActionLogID
		{
			get
			{
				return this._ActionLogID;
			}
			set
			{
				if ((this._ActionLogID != value))
				{
					this.OnActionLogIDChanging(value);
					this.SendPropertyChanging();
					this._ActionLogID = value;
					this.SendPropertyChanged("ActionLogID");
					this.OnActionLogIDChanged();
				}
			}
		}
		
		[Column(Storage="_ActionLogSeqNo", DbType="VarChar(100)")]
		public string ActionLogSeqNo
		{
			get
			{
				return this._ActionLogSeqNo;
			}
			set
			{
				if ((this._ActionLogSeqNo != value))
				{
					this.OnActionLogSeqNoChanging(value);
					this.SendPropertyChanging();
					this._ActionLogSeqNo = value;
					this.SendPropertyChanged("ActionLogSeqNo");
					this.OnActionLogSeqNoChanged();
				}
			}
		}
		
		[Column(Storage="_ActionLogTaking", DbType="VarChar(10)")]
		public string ActionLogTaking
		{
			get
			{
				return this._ActionLogTaking;
			}
			set
			{
				if ((this._ActionLogTaking != value))
				{
					this.OnActionLogTakingChanging(value);
					this.SendPropertyChanging();
					this._ActionLogTaking = value;
					this.SendPropertyChanged("ActionLogTaking");
					this.OnActionLogTakingChanged();
				}
			}
		}
		
		[Column(Storage="_ActionLogCategory", DbType="VarChar(100)")]
		public string ActionLogCategory
		{
			get
			{
				return this._ActionLogCategory;
			}
			set
			{
				if ((this._ActionLogCategory != value))
				{
					this.OnActionLogCategoryChanging(value);
					this.SendPropertyChanging();
					this._ActionLogCategory = value;
					this.SendPropertyChanged("ActionLogCategory");
					this.OnActionLogCategoryChanged();
				}
			}
		}
		
		[Column(Storage="_ActionLogGroup", DbType="VarChar(20)")]
		public string ActionLogGroup
		{
			get
			{
				return this._ActionLogGroup;
			}
			set
			{
				if ((this._ActionLogGroup != value))
				{
					this.OnActionLogGroupChanging(value);
					this.SendPropertyChanging();
					this._ActionLogGroup = value;
					this.SendPropertyChanged("ActionLogGroup");
					this.OnActionLogGroupChanged();
				}
			}
		}
		
		[Column(Storage="_ActionLogTargetDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ActionLogTargetDate
		{
			get
			{
				return this._ActionLogTargetDate;
			}
			set
			{
				if ((this._ActionLogTargetDate != value))
				{
					this.OnActionLogTargetDateChanging(value);
					this.SendPropertyChanging();
					this._ActionLogTargetDate = value;
					this.SendPropertyChanged("ActionLogTargetDate");
					this.OnActionLogTargetDateChanged();
				}
			}
		}
		
		[Column(Storage="_ActionLogRevisedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ActionLogRevisedDate
		{
			get
			{
				return this._ActionLogRevisedDate;
			}
			set
			{
				if ((this._ActionLogRevisedDate != value))
				{
					this.OnActionLogRevisedDateChanging(value);
					this.SendPropertyChanging();
					this._ActionLogRevisedDate = value;
					this.SendPropertyChanged("ActionLogRevisedDate");
					this.OnActionLogRevisedDateChanged();
				}
			}
		}
		
		[Column(Storage="_ActionLogCmplDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ActionLogCmplDate
		{
			get
			{
				return this._ActionLogCmplDate;
			}
			set
			{
				if ((this._ActionLogCmplDate != value))
				{
					this.OnActionLogCmplDateChanging(value);
					this.SendPropertyChanging();
					this._ActionLogCmplDate = value;
					this.SendPropertyChanged("ActionLogCmplDate");
					this.OnActionLogCmplDateChanged();
				}
			}
		}
		
		[Column(Storage="_RelatedShptPercent", DbType="Float")]
		public System.Nullable<double> RelatedShptPercent
		{
			get
			{
				return this._RelatedShptPercent;
			}
			set
			{
				if ((this._RelatedShptPercent != value))
				{
					this.OnRelatedShptPercentChanging(value);
					this.SendPropertyChanging();
					this._RelatedShptPercent = value;
					this.SendPropertyChanged("RelatedShptPercent");
					this.OnRelatedShptPercentChanged();
				}
			}
		}
		
		[Column(Storage="_ActionLogCmpl", DbType="VarChar(10)")]
		public string ActionLogCmpl
		{
			get
			{
				return this._ActionLogCmpl;
			}
			set
			{
				if ((this._ActionLogCmpl != value))
				{
					this.OnActionLogCmplChanging(value);
					this.SendPropertyChanging();
					this._ActionLogCmpl = value;
					this.SendPropertyChanged("ActionLogCmpl");
					this.OnActionLogCmplChanged();
				}
			}
		}
		
		[Column(Storage="_DRQty", DbType="Float")]
		public System.Nullable<double> DRQty
		{
			get
			{
				return this._DRQty;
			}
			set
			{
				if ((this._DRQty != value))
				{
					this.OnDRQtyChanging(value);
					this.SendPropertyChanging();
					this._DRQty = value;
					this.SendPropertyChanged("DRQty");
					this.OnDRQtyChanged();
				}
			}
		}
		
		[Column(Storage="_DRQPOSuffix", DbType="VarChar(20)")]
		public string DRQPOSuffix
		{
			get
			{
				return this._DRQPOSuffix;
			}
			set
			{
				if ((this._DRQPOSuffix != value))
				{
					this.OnDRQPOSuffixChanging(value);
					this.SendPropertyChanging();
					this._DRQPOSuffix = value;
					this.SendPropertyChanged("DRQPOSuffix");
					this.OnDRQPOSuffixChanged();
				}
			}
		}
		
		[Column(Storage="_NonPONO", DbType="VarChar(20)")]
		public string NonPONO
		{
			get
			{
				return this._NonPONO;
			}
			set
			{
				if ((this._NonPONO != value))
				{
					this.OnNonPONOChanging(value);
					this.SendPropertyChanging();
					this._NonPONO = value;
					this.SendPropertyChanged("NonPONO");
					this.OnNonPONOChanged();
				}
			}
		}
		
		[Column(Storage="_NonProjectNo", DbType="VarChar(20)")]
		public string NonProjectNo
		{
			get
			{
				return this._NonProjectNo;
			}
			set
			{
				if ((this._NonProjectNo != value))
				{
					this.OnNonProjectNoChanging(value);
					this.SendPropertyChanging();
					this._NonProjectNo = value;
					this.SendPropertyChanged("NonProjectNo");
					this.OnNonProjectNoChanged();
				}
			}
		}
		
		[Column(Storage="_LogNo", DbType="Int")]
		public System.Nullable<int> LogNo
		{
			get
			{
				return this._LogNo;
			}
			set
			{
				if ((this._LogNo != value))
				{
					this.OnLogNoChanging(value);
					this.SendPropertyChanging();
					this._LogNo = value;
					this.SendPropertyChanged("LogNo");
					this.OnLogNoChanged();
				}
			}
		}
		
		[Column(Storage="_Suffix", DbType="Int")]
		public System.Nullable<int> Suffix
		{
			get
			{
				return this._Suffix;
			}
			set
			{
				if ((this._Suffix != value))
				{
					this.OnSuffixChanging(value);
					this.SendPropertyChanging();
					this._Suffix = value;
					this.SendPropertyChanged("Suffix");
					this.OnSuffixChanged();
				}
			}
		}
		
		[Column(Storage="_PaymentDone", DbType="VarChar(10)")]
		public string PaymentDone
		{
			get
			{
				return this._PaymentDone;
			}
			set
			{
				if ((this._PaymentDone != value))
				{
					this.OnPaymentDoneChanging(value);
					this.SendPropertyChanging();
					this._PaymentDone = value;
					this.SendPropertyChanged("PaymentDone");
					this.OnPaymentDoneChanged();
				}
			}
		}
		
		[Column(Storage="_PaymentDoneDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PaymentDoneDate
		{
			get
			{
				return this._PaymentDoneDate;
			}
			set
			{
				if ((this._PaymentDoneDate != value))
				{
					this.OnPaymentDoneDateChanging(value);
					this.SendPropertyChanging();
					this._PaymentDoneDate = value;
					this.SendPropertyChanged("PaymentDoneDate");
					this.OnPaymentDoneDateChanged();
				}
			}
		}
		
		[Column(Storage="_Status", DbType="VarChar(20)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[Column(Storage="_Transferred", DbType="VarChar(20)")]
		public string Transferred
		{
			get
			{
				return this._Transferred;
			}
			set
			{
				if ((this._Transferred != value))
				{
					this.OnTransferredChanging(value);
					this.SendPropertyChanging();
					this._Transferred = value;
					this.SendPropertyChanged("Transferred");
					this.OnTransferredChanged();
				}
			}
		}
		
		[Column(Storage="_POActualTransitDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> POActualTransitDate
		{
			get
			{
				return this._POActualTransitDate;
			}
			set
			{
				if ((this._POActualTransitDate != value))
				{
					this.OnPOActualTransitDateChanging(value);
					this.SendPropertyChanging();
					this._POActualTransitDate = value;
					this.SendPropertyChanged("POActualTransitDate");
					this.OnPOActualTransitDateChanged();
				}
			}
		}
		
		[Column(Storage="_HDOReleasedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> HDOReleasedDate
		{
			get
			{
				return this._HDOReleasedDate;
			}
			set
			{
				if ((this._HDOReleasedDate != value))
				{
					this.OnHDOReleasedDateChanging(value);
					this.SendPropertyChanging();
					this._HDOReleasedDate = value;
					this.SendPropertyChanged("HDOReleasedDate");
					this.OnHDOReleasedDateChanged();
				}
			}
		}
		
		[Association(Name="POChangesMonitor_POGRN", Storage="_POGRNs", ThisKey="Company,PONO,Version,AmendmentNo,OrderLine,SKU,SplitNo", OtherKey="Company,PONO,Version,AmendmentNo,OrderLine,SKU,SplitNo")]
		public EntitySet<POGRN> POGRNs
		{
			get
			{
				return this._POGRNs;
			}
			set
			{
				this._POGRNs.Assign(value);
			}
		}
		
		[Association(Name="POColorSizeDetail_POChangesMonitor", Storage="_POColorSizeDetail", ThisKey="Company,PONO,Version,AmendmentNo,OrderLine,SKU", OtherKey="Company,PONO,Version,AmendmentNo,OrderLine,SKU", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public POColorSizeDetail POColorSizeDetail
		{
			get
			{
				return this._POColorSizeDetail.Entity;
			}
			set
			{
				POColorSizeDetail previousValue = this._POColorSizeDetail.Entity;
				if (((previousValue != value) 
							|| (this._POColorSizeDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._POColorSizeDetail.Entity = null;
						previousValue.POChangesMonitors.Remove(this);
					}
					this._POColorSizeDetail.Entity = value;
					if ((value != null))
					{
						value.POChangesMonitors.Add(this);
						this._Company = value.Company;
						this._PONO = value.PONO;
						this._Version = value.Version;
						this._AmendmentNo = value.AmendmentNo;
						this._OrderLine = value.OrderLine;
						this._SKU = value.SKU;
					}
					else
					{
						this._Company = default(string);
						this._PONO = default(string);
						this._Version = default(int);
						this._AmendmentNo = default(int);
						this._OrderLine = default(int);
						this._SKU = default(string);
					}
					this.SendPropertyChanged("POColorSizeDetail");
				}
			}
		}
		
		[Association(Name="ActionLogHeader_POChangesMonitor", Storage="_ActionLogHeader", ThisKey="ActionLogOID", OtherKey="OID", IsForeignKey=true)]
		public ActionLogHeader ActionLogHeader
		{
			get
			{
				return this._ActionLogHeader.Entity;
			}
			set
			{
				ActionLogHeader previousValue = this._ActionLogHeader.Entity;
				if (((previousValue != value) 
							|| (this._ActionLogHeader.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ActionLogHeader.Entity = null;
						previousValue.POChangesMonitors.Remove(this);
					}
					this._ActionLogHeader.Entity = value;
					if ((value != null))
					{
						value.POChangesMonitors.Add(this);
						this._ActionLogOID = value.OID;
					}
					else
					{
						this._ActionLogOID = default(Nullable<long>);
					}
					this.SendPropertyChanged("ActionLogHeader");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_POGRNs(POGRN entity)
		{
			this.SendPropertyChanging();
			entity.POChangesMonitor = this;
		}
		
		private void detach_POGRNs(POGRN entity)
		{
			this.SendPropertyChanging();
			entity.POChangesMonitor = null;
		}
	}
	
	[Table(Name="dbo.ActionLogHeader")]
	public partial class ActionLogHeader : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _OID;
		
		private string _PONO;
		
		private System.Nullable<int> _OrderLine;
		
		private string _ColorCode;
		
		private System.Nullable<int> _SplitNo;
		
		private System.Nullable<int> _TotalSplit;
		
		private string _ActionLogID;
		
		private string _ActionLogSeqNo;
		
		private System.Nullable<long> _RefID;
		
		private string _CreateMan;
		
		private string _LineCode;
		
		private string _AcitonID;
		
		private string _ItemNo;
		
		private string _ItemSubject;
		
		private string _ItemSubjectCN;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _PlanEndDate;
		
		private System.Nullable<System.DateTime> _RevisedDate;
		
		private System.Nullable<bool> _IsCompleted;
		
		private System.Nullable<System.DateTime> _CompletedDate;
		
		private System.Nullable<System.DateTime> _LastStageTargetCompleteDate;
		
		private System.Nullable<System.DateTime> _LastStageCompletedDate;
		
		private System.Nullable<bool> _LastStageIsCompleted;
		
		private string _EmailTo;
		
		private string _EmailCc;
		
		private System.Nullable<int> _CompleteSendEmailCount;
		
		private System.Nullable<int> _ActionLogCompleteReasonOID;
		
		private string _ActionLogCompleteReasonRemark;
		
		private System.Nullable<System.DateTime> _LastStageReviseTargetCompleteDate;
		
		private System.Nullable<int> _SeqNo1;
		
		private System.Nullable<int> _SeqNo2;
		
		private System.Nullable<int> _StageSeqNo;
		
		private string _Flag;
		
		private string _SuppCode;
		
		private string _SuppRef;
		
		private string _ActionLogType;
		
		private string _ProjectNo;
		
		private System.Nullable<int> _TotalItem;
		
		private System.Nullable<double> _RelatedShptPercent;
		
		private string _ActionLogCmpl;
		
		private string _Factory;
		
		private string _ItemCode;
		
		private System.Nullable<System.DateTime> _WOFWStartDate;
		
		private System.Nullable<int> _RWO_DaysDiff;
		
		private System.Nullable<System.DateTime> _ExtraTimeToRXDate;
		
		private string _PrdnSite;
		
		private EntitySet<POChangesMonitor> _POChangesMonitors;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOIDChanging(long value);
    partial void OnOIDChanged();
    partial void OnPONOChanging(string value);
    partial void OnPONOChanged();
    partial void OnOrderLineChanging(System.Nullable<int> value);
    partial void OnOrderLineChanged();
    partial void OnColorCodeChanging(string value);
    partial void OnColorCodeChanged();
    partial void OnSplitNoChanging(System.Nullable<int> value);
    partial void OnSplitNoChanged();
    partial void OnTotalSplitChanging(System.Nullable<int> value);
    partial void OnTotalSplitChanged();
    partial void OnActionLogIDChanging(string value);
    partial void OnActionLogIDChanged();
    partial void OnActionLogSeqNoChanging(string value);
    partial void OnActionLogSeqNoChanged();
    partial void OnRefIDChanging(System.Nullable<long> value);
    partial void OnRefIDChanged();
    partial void OnCreateManChanging(string value);
    partial void OnCreateManChanged();
    partial void OnLineCodeChanging(string value);
    partial void OnLineCodeChanged();
    partial void OnAcitonIDChanging(string value);
    partial void OnAcitonIDChanged();
    partial void OnItemNoChanging(string value);
    partial void OnItemNoChanged();
    partial void OnItemSubjectChanging(string value);
    partial void OnItemSubjectChanged();
    partial void OnItemSubjectCNChanging(string value);
    partial void OnItemSubjectCNChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnPlanEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPlanEndDateChanged();
    partial void OnRevisedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRevisedDateChanged();
    partial void OnIsCompletedChanging(System.Nullable<bool> value);
    partial void OnIsCompletedChanged();
    partial void OnCompletedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCompletedDateChanged();
    partial void OnLastStageTargetCompleteDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastStageTargetCompleteDateChanged();
    partial void OnLastStageCompletedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastStageCompletedDateChanged();
    partial void OnLastStageIsCompletedChanging(System.Nullable<bool> value);
    partial void OnLastStageIsCompletedChanged();
    partial void OnEmailToChanging(string value);
    partial void OnEmailToChanged();
    partial void OnEmailCcChanging(string value);
    partial void OnEmailCcChanged();
    partial void OnCompleteSendEmailCountChanging(System.Nullable<int> value);
    partial void OnCompleteSendEmailCountChanged();
    partial void OnActionLogCompleteReasonOIDChanging(System.Nullable<int> value);
    partial void OnActionLogCompleteReasonOIDChanged();
    partial void OnActionLogCompleteReasonRemarkChanging(string value);
    partial void OnActionLogCompleteReasonRemarkChanged();
    partial void OnLastStageReviseTargetCompleteDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastStageReviseTargetCompleteDateChanged();
    partial void OnSeqNo1Changing(System.Nullable<int> value);
    partial void OnSeqNo1Changed();
    partial void OnSeqNo2Changing(System.Nullable<int> value);
    partial void OnSeqNo2Changed();
    partial void OnStageSeqNoChanging(System.Nullable<int> value);
    partial void OnStageSeqNoChanged();
    partial void OnFlagChanging(string value);
    partial void OnFlagChanged();
    partial void OnSuppCodeChanging(string value);
    partial void OnSuppCodeChanged();
    partial void OnSuppRefChanging(string value);
    partial void OnSuppRefChanged();
    partial void OnActionLogTypeChanging(string value);
    partial void OnActionLogTypeChanged();
    partial void OnProjectNoChanging(string value);
    partial void OnProjectNoChanged();
    partial void OnTotalItemChanging(System.Nullable<int> value);
    partial void OnTotalItemChanged();
    partial void OnRelatedShptPercentChanging(System.Nullable<double> value);
    partial void OnRelatedShptPercentChanged();
    partial void OnActionLogCmplChanging(string value);
    partial void OnActionLogCmplChanged();
    partial void OnFactoryChanging(string value);
    partial void OnFactoryChanged();
    partial void OnItemCodeChanging(string value);
    partial void OnItemCodeChanged();
    partial void OnWOFWStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnWOFWStartDateChanged();
    partial void OnRWO_DaysDiffChanging(System.Nullable<int> value);
    partial void OnRWO_DaysDiffChanged();
    partial void OnExtraTimeToRXDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExtraTimeToRXDateChanged();
    partial void OnPrdnSiteChanging(string value);
    partial void OnPrdnSiteChanged();
    #endregion
		
		public ActionLogHeader()
		{
			this._POChangesMonitors = new EntitySet<POChangesMonitor>(new Action<POChangesMonitor>(this.attach_POChangesMonitors), new Action<POChangesMonitor>(this.detach_POChangesMonitors));
			OnCreated();
		}
		
		[Column(Storage="_OID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long OID
		{
			get
			{
				return this._OID;
			}
			set
			{
				if ((this._OID != value))
				{
					this.OnOIDChanging(value);
					this.SendPropertyChanging();
					this._OID = value;
					this.SendPropertyChanged("OID");
					this.OnOIDChanged();
				}
			}
		}
		
		[Column(Storage="_PONO", DbType="VarChar(20)")]
		public string PONO
		{
			get
			{
				return this._PONO;
			}
			set
			{
				if ((this._PONO != value))
				{
					this.OnPONOChanging(value);
					this.SendPropertyChanging();
					this._PONO = value;
					this.SendPropertyChanged("PONO");
					this.OnPONOChanged();
				}
			}
		}
		
		[Column(Storage="_OrderLine", DbType="Int")]
		public System.Nullable<int> OrderLine
		{
			get
			{
				return this._OrderLine;
			}
			set
			{
				if ((this._OrderLine != value))
				{
					this.OnOrderLineChanging(value);
					this.SendPropertyChanging();
					this._OrderLine = value;
					this.SendPropertyChanged("OrderLine");
					this.OnOrderLineChanged();
				}
			}
		}
		
		[Column(Storage="_ColorCode", DbType="NVarChar(40)")]
		public string ColorCode
		{
			get
			{
				return this._ColorCode;
			}
			set
			{
				if ((this._ColorCode != value))
				{
					this.OnColorCodeChanging(value);
					this.SendPropertyChanging();
					this._ColorCode = value;
					this.SendPropertyChanged("ColorCode");
					this.OnColorCodeChanged();
				}
			}
		}
		
		[Column(Storage="_SplitNo", DbType="Int")]
		public System.Nullable<int> SplitNo
		{
			get
			{
				return this._SplitNo;
			}
			set
			{
				if ((this._SplitNo != value))
				{
					this.OnSplitNoChanging(value);
					this.SendPropertyChanging();
					this._SplitNo = value;
					this.SendPropertyChanged("SplitNo");
					this.OnSplitNoChanged();
				}
			}
		}
		
		[Column(Storage="_TotalSplit", DbType="Int")]
		public System.Nullable<int> TotalSplit
		{
			get
			{
				return this._TotalSplit;
			}
			set
			{
				if ((this._TotalSplit != value))
				{
					this.OnTotalSplitChanging(value);
					this.SendPropertyChanging();
					this._TotalSplit = value;
					this.SendPropertyChanged("TotalSplit");
					this.OnTotalSplitChanged();
				}
			}
		}
		
		[Column(Storage="_ActionLogID", DbType="VarChar(100)")]
		public string ActionLogID
		{
			get
			{
				return this._ActionLogID;
			}
			set
			{
				if ((this._ActionLogID != value))
				{
					this.OnActionLogIDChanging(value);
					this.SendPropertyChanging();
					this._ActionLogID = value;
					this.SendPropertyChanged("ActionLogID");
					this.OnActionLogIDChanged();
				}
			}
		}
		
		[Column(Storage="_ActionLogSeqNo", DbType="VarChar(100)")]
		public string ActionLogSeqNo
		{
			get
			{
				return this._ActionLogSeqNo;
			}
			set
			{
				if ((this._ActionLogSeqNo != value))
				{
					this.OnActionLogSeqNoChanging(value);
					this.SendPropertyChanging();
					this._ActionLogSeqNo = value;
					this.SendPropertyChanged("ActionLogSeqNo");
					this.OnActionLogSeqNoChanged();
				}
			}
		}
		
		[Column(Storage="_RefID", DbType="BigInt")]
		public System.Nullable<long> RefID
		{
			get
			{
				return this._RefID;
			}
			set
			{
				if ((this._RefID != value))
				{
					this.OnRefIDChanging(value);
					this.SendPropertyChanging();
					this._RefID = value;
					this.SendPropertyChanged("RefID");
					this.OnRefIDChanged();
				}
			}
		}
		
		[Column(Storage="_CreateMan", DbType="VarChar(50)")]
		public string CreateMan
		{
			get
			{
				return this._CreateMan;
			}
			set
			{
				if ((this._CreateMan != value))
				{
					this.OnCreateManChanging(value);
					this.SendPropertyChanging();
					this._CreateMan = value;
					this.SendPropertyChanged("CreateMan");
					this.OnCreateManChanged();
				}
			}
		}
		
		[Column(Storage="_LineCode", DbType="VarChar(50)")]
		public string LineCode
		{
			get
			{
				return this._LineCode;
			}
			set
			{
				if ((this._LineCode != value))
				{
					this.OnLineCodeChanging(value);
					this.SendPropertyChanging();
					this._LineCode = value;
					this.SendPropertyChanged("LineCode");
					this.OnLineCodeChanged();
				}
			}
		}
		
		[Column(Storage="_AcitonID", DbType="VarChar(20)")]
		public string AcitonID
		{
			get
			{
				return this._AcitonID;
			}
			set
			{
				if ((this._AcitonID != value))
				{
					this.OnAcitonIDChanging(value);
					this.SendPropertyChanging();
					this._AcitonID = value;
					this.SendPropertyChanged("AcitonID");
					this.OnAcitonIDChanged();
				}
			}
		}
		
		[Column(Storage="_ItemNo", DbType="NVarChar(100)")]
		public string ItemNo
		{
			get
			{
				return this._ItemNo;
			}
			set
			{
				if ((this._ItemNo != value))
				{
					this.OnItemNoChanging(value);
					this.SendPropertyChanging();
					this._ItemNo = value;
					this.SendPropertyChanged("ItemNo");
					this.OnItemNoChanged();
				}
			}
		}
		
		[Column(Storage="_ItemSubject", DbType="NVarChar(MAX)")]
		public string ItemSubject
		{
			get
			{
				return this._ItemSubject;
			}
			set
			{
				if ((this._ItemSubject != value))
				{
					this.OnItemSubjectChanging(value);
					this.SendPropertyChanging();
					this._ItemSubject = value;
					this.SendPropertyChanged("ItemSubject");
					this.OnItemSubjectChanged();
				}
			}
		}
		
		[Column(Storage="_ItemSubjectCN", DbType="NVarChar(MAX)")]
		public string ItemSubjectCN
		{
			get
			{
				return this._ItemSubjectCN;
			}
			set
			{
				if ((this._ItemSubjectCN != value))
				{
					this.OnItemSubjectCNChanging(value);
					this.SendPropertyChanging();
					this._ItemSubjectCN = value;
					this.SendPropertyChanged("ItemSubjectCN");
					this.OnItemSubjectCNChanged();
				}
			}
		}
		
		[Column(Storage="_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[Column(Storage="_PlanEndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PlanEndDate
		{
			get
			{
				return this._PlanEndDate;
			}
			set
			{
				if ((this._PlanEndDate != value))
				{
					this.OnPlanEndDateChanging(value);
					this.SendPropertyChanging();
					this._PlanEndDate = value;
					this.SendPropertyChanged("PlanEndDate");
					this.OnPlanEndDateChanged();
				}
			}
		}
		
		[Column(Storage="_RevisedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RevisedDate
		{
			get
			{
				return this._RevisedDate;
			}
			set
			{
				if ((this._RevisedDate != value))
				{
					this.OnRevisedDateChanging(value);
					this.SendPropertyChanging();
					this._RevisedDate = value;
					this.SendPropertyChanged("RevisedDate");
					this.OnRevisedDateChanged();
				}
			}
		}
		
		[Column(Storage="_IsCompleted", DbType="Bit")]
		public System.Nullable<bool> IsCompleted
		{
			get
			{
				return this._IsCompleted;
			}
			set
			{
				if ((this._IsCompleted != value))
				{
					this.OnIsCompletedChanging(value);
					this.SendPropertyChanging();
					this._IsCompleted = value;
					this.SendPropertyChanged("IsCompleted");
					this.OnIsCompletedChanged();
				}
			}
		}
		
		[Column(Storage="_CompletedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompletedDate
		{
			get
			{
				return this._CompletedDate;
			}
			set
			{
				if ((this._CompletedDate != value))
				{
					this.OnCompletedDateChanging(value);
					this.SendPropertyChanging();
					this._CompletedDate = value;
					this.SendPropertyChanged("CompletedDate");
					this.OnCompletedDateChanged();
				}
			}
		}
		
		[Column(Storage="_LastStageTargetCompleteDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastStageTargetCompleteDate
		{
			get
			{
				return this._LastStageTargetCompleteDate;
			}
			set
			{
				if ((this._LastStageTargetCompleteDate != value))
				{
					this.OnLastStageTargetCompleteDateChanging(value);
					this.SendPropertyChanging();
					this._LastStageTargetCompleteDate = value;
					this.SendPropertyChanged("LastStageTargetCompleteDate");
					this.OnLastStageTargetCompleteDateChanged();
				}
			}
		}
		
		[Column(Storage="_LastStageCompletedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastStageCompletedDate
		{
			get
			{
				return this._LastStageCompletedDate;
			}
			set
			{
				if ((this._LastStageCompletedDate != value))
				{
					this.OnLastStageCompletedDateChanging(value);
					this.SendPropertyChanging();
					this._LastStageCompletedDate = value;
					this.SendPropertyChanged("LastStageCompletedDate");
					this.OnLastStageCompletedDateChanged();
				}
			}
		}
		
		[Column(Storage="_LastStageIsCompleted", DbType="Bit")]
		public System.Nullable<bool> LastStageIsCompleted
		{
			get
			{
				return this._LastStageIsCompleted;
			}
			set
			{
				if ((this._LastStageIsCompleted != value))
				{
					this.OnLastStageIsCompletedChanging(value);
					this.SendPropertyChanging();
					this._LastStageIsCompleted = value;
					this.SendPropertyChanged("LastStageIsCompleted");
					this.OnLastStageIsCompletedChanged();
				}
			}
		}
		
		[Column(Storage="_EmailTo", DbType="VarChar(2000)")]
		public string EmailTo
		{
			get
			{
				return this._EmailTo;
			}
			set
			{
				if ((this._EmailTo != value))
				{
					this.OnEmailToChanging(value);
					this.SendPropertyChanging();
					this._EmailTo = value;
					this.SendPropertyChanged("EmailTo");
					this.OnEmailToChanged();
				}
			}
		}
		
		[Column(Storage="_EmailCc", DbType="VarChar(2000)")]
		public string EmailCc
		{
			get
			{
				return this._EmailCc;
			}
			set
			{
				if ((this._EmailCc != value))
				{
					this.OnEmailCcChanging(value);
					this.SendPropertyChanging();
					this._EmailCc = value;
					this.SendPropertyChanged("EmailCc");
					this.OnEmailCcChanged();
				}
			}
		}
		
		[Column(Storage="_CompleteSendEmailCount", DbType="Int")]
		public System.Nullable<int> CompleteSendEmailCount
		{
			get
			{
				return this._CompleteSendEmailCount;
			}
			set
			{
				if ((this._CompleteSendEmailCount != value))
				{
					this.OnCompleteSendEmailCountChanging(value);
					this.SendPropertyChanging();
					this._CompleteSendEmailCount = value;
					this.SendPropertyChanged("CompleteSendEmailCount");
					this.OnCompleteSendEmailCountChanged();
				}
			}
		}
		
		[Column(Storage="_ActionLogCompleteReasonOID", DbType="Int")]
		public System.Nullable<int> ActionLogCompleteReasonOID
		{
			get
			{
				return this._ActionLogCompleteReasonOID;
			}
			set
			{
				if ((this._ActionLogCompleteReasonOID != value))
				{
					this.OnActionLogCompleteReasonOIDChanging(value);
					this.SendPropertyChanging();
					this._ActionLogCompleteReasonOID = value;
					this.SendPropertyChanged("ActionLogCompleteReasonOID");
					this.OnActionLogCompleteReasonOIDChanged();
				}
			}
		}
		
		[Column(Storage="_ActionLogCompleteReasonRemark", DbType="VarChar(1000)")]
		public string ActionLogCompleteReasonRemark
		{
			get
			{
				return this._ActionLogCompleteReasonRemark;
			}
			set
			{
				if ((this._ActionLogCompleteReasonRemark != value))
				{
					this.OnActionLogCompleteReasonRemarkChanging(value);
					this.SendPropertyChanging();
					this._ActionLogCompleteReasonRemark = value;
					this.SendPropertyChanged("ActionLogCompleteReasonRemark");
					this.OnActionLogCompleteReasonRemarkChanged();
				}
			}
		}
		
		[Column(Storage="_LastStageReviseTargetCompleteDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastStageReviseTargetCompleteDate
		{
			get
			{
				return this._LastStageReviseTargetCompleteDate;
			}
			set
			{
				if ((this._LastStageReviseTargetCompleteDate != value))
				{
					this.OnLastStageReviseTargetCompleteDateChanging(value);
					this.SendPropertyChanging();
					this._LastStageReviseTargetCompleteDate = value;
					this.SendPropertyChanged("LastStageReviseTargetCompleteDate");
					this.OnLastStageReviseTargetCompleteDateChanged();
				}
			}
		}
		
		[Column(Storage="_SeqNo1", DbType="Int")]
		public System.Nullable<int> SeqNo1
		{
			get
			{
				return this._SeqNo1;
			}
			set
			{
				if ((this._SeqNo1 != value))
				{
					this.OnSeqNo1Changing(value);
					this.SendPropertyChanging();
					this._SeqNo1 = value;
					this.SendPropertyChanged("SeqNo1");
					this.OnSeqNo1Changed();
				}
			}
		}
		
		[Column(Storage="_SeqNo2", DbType="Int")]
		public System.Nullable<int> SeqNo2
		{
			get
			{
				return this._SeqNo2;
			}
			set
			{
				if ((this._SeqNo2 != value))
				{
					this.OnSeqNo2Changing(value);
					this.SendPropertyChanging();
					this._SeqNo2 = value;
					this.SendPropertyChanged("SeqNo2");
					this.OnSeqNo2Changed();
				}
			}
		}
		
		[Column(Storage="_StageSeqNo", DbType="Int")]
		public System.Nullable<int> StageSeqNo
		{
			get
			{
				return this._StageSeqNo;
			}
			set
			{
				if ((this._StageSeqNo != value))
				{
					this.OnStageSeqNoChanging(value);
					this.SendPropertyChanging();
					this._StageSeqNo = value;
					this.SendPropertyChanged("StageSeqNo");
					this.OnStageSeqNoChanged();
				}
			}
		}
		
		[Column(Storage="_Flag", DbType="VarChar(20)")]
		public string Flag
		{
			get
			{
				return this._Flag;
			}
			set
			{
				if ((this._Flag != value))
				{
					this.OnFlagChanging(value);
					this.SendPropertyChanging();
					this._Flag = value;
					this.SendPropertyChanged("Flag");
					this.OnFlagChanged();
				}
			}
		}
		
		[Column(Storage="_SuppCode", DbType="VarChar(10)")]
		public string SuppCode
		{
			get
			{
				return this._SuppCode;
			}
			set
			{
				if ((this._SuppCode != value))
				{
					this.OnSuppCodeChanging(value);
					this.SendPropertyChanging();
					this._SuppCode = value;
					this.SendPropertyChanged("SuppCode");
					this.OnSuppCodeChanged();
				}
			}
		}
		
		[Column(Storage="_SuppRef", DbType="VarChar(100)")]
		public string SuppRef
		{
			get
			{
				return this._SuppRef;
			}
			set
			{
				if ((this._SuppRef != value))
				{
					this.OnSuppRefChanging(value);
					this.SendPropertyChanging();
					this._SuppRef = value;
					this.SendPropertyChanged("SuppRef");
					this.OnSuppRefChanged();
				}
			}
		}
		
		[Column(Storage="_ActionLogType", DbType="VarChar(20)")]
		public string ActionLogType
		{
			get
			{
				return this._ActionLogType;
			}
			set
			{
				if ((this._ActionLogType != value))
				{
					this.OnActionLogTypeChanging(value);
					this.SendPropertyChanging();
					this._ActionLogType = value;
					this.SendPropertyChanged("ActionLogType");
					this.OnActionLogTypeChanged();
				}
			}
		}
		
		[Column(Storage="_ProjectNo", DbType="VarChar(50)")]
		public string ProjectNo
		{
			get
			{
				return this._ProjectNo;
			}
			set
			{
				if ((this._ProjectNo != value))
				{
					this.OnProjectNoChanging(value);
					this.SendPropertyChanging();
					this._ProjectNo = value;
					this.SendPropertyChanged("ProjectNo");
					this.OnProjectNoChanged();
				}
			}
		}
		
		[Column(Storage="_TotalItem", DbType="Int")]
		public System.Nullable<int> TotalItem
		{
			get
			{
				return this._TotalItem;
			}
			set
			{
				if ((this._TotalItem != value))
				{
					this.OnTotalItemChanging(value);
					this.SendPropertyChanging();
					this._TotalItem = value;
					this.SendPropertyChanged("TotalItem");
					this.OnTotalItemChanged();
				}
			}
		}
		
		[Column(Storage="_RelatedShptPercent", DbType="Float")]
		public System.Nullable<double> RelatedShptPercent
		{
			get
			{
				return this._RelatedShptPercent;
			}
			set
			{
				if ((this._RelatedShptPercent != value))
				{
					this.OnRelatedShptPercentChanging(value);
					this.SendPropertyChanging();
					this._RelatedShptPercent = value;
					this.SendPropertyChanged("RelatedShptPercent");
					this.OnRelatedShptPercentChanged();
				}
			}
		}
		
		[Column(Storage="_ActionLogCmpl", DbType="VarChar(10)")]
		public string ActionLogCmpl
		{
			get
			{
				return this._ActionLogCmpl;
			}
			set
			{
				if ((this._ActionLogCmpl != value))
				{
					this.OnActionLogCmplChanging(value);
					this.SendPropertyChanging();
					this._ActionLogCmpl = value;
					this.SendPropertyChanged("ActionLogCmpl");
					this.OnActionLogCmplChanged();
				}
			}
		}
		
		[Column(Storage="_Factory", DbType="VarChar(10)")]
		public string Factory
		{
			get
			{
				return this._Factory;
			}
			set
			{
				if ((this._Factory != value))
				{
					this.OnFactoryChanging(value);
					this.SendPropertyChanging();
					this._Factory = value;
					this.SendPropertyChanged("Factory");
					this.OnFactoryChanged();
				}
			}
		}
		
		[Column(Storage="_ItemCode", DbType="VarChar(50)")]
		public string ItemCode
		{
			get
			{
				return this._ItemCode;
			}
			set
			{
				if ((this._ItemCode != value))
				{
					this.OnItemCodeChanging(value);
					this.SendPropertyChanging();
					this._ItemCode = value;
					this.SendPropertyChanged("ItemCode");
					this.OnItemCodeChanged();
				}
			}
		}
		
		[Column(Storage="_WOFWStartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> WOFWStartDate
		{
			get
			{
				return this._WOFWStartDate;
			}
			set
			{
				if ((this._WOFWStartDate != value))
				{
					this.OnWOFWStartDateChanging(value);
					this.SendPropertyChanging();
					this._WOFWStartDate = value;
					this.SendPropertyChanged("WOFWStartDate");
					this.OnWOFWStartDateChanged();
				}
			}
		}
		
		[Column(Storage="_RWO_DaysDiff", DbType="Int")]
		public System.Nullable<int> RWO_DaysDiff
		{
			get
			{
				return this._RWO_DaysDiff;
			}
			set
			{
				if ((this._RWO_DaysDiff != value))
				{
					this.OnRWO_DaysDiffChanging(value);
					this.SendPropertyChanging();
					this._RWO_DaysDiff = value;
					this.SendPropertyChanged("RWO_DaysDiff");
					this.OnRWO_DaysDiffChanged();
				}
			}
		}
		
		[Column(Storage="_ExtraTimeToRXDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ExtraTimeToRXDate
		{
			get
			{
				return this._ExtraTimeToRXDate;
			}
			set
			{
				if ((this._ExtraTimeToRXDate != value))
				{
					this.OnExtraTimeToRXDateChanging(value);
					this.SendPropertyChanging();
					this._ExtraTimeToRXDate = value;
					this.SendPropertyChanged("ExtraTimeToRXDate");
					this.OnExtraTimeToRXDateChanged();
				}
			}
		}
		
		[Column(Storage="_PrdnSite", DbType="VarChar(20)")]
		public string PrdnSite
		{
			get
			{
				return this._PrdnSite;
			}
			set
			{
				if ((this._PrdnSite != value))
				{
					this.OnPrdnSiteChanging(value);
					this.SendPropertyChanging();
					this._PrdnSite = value;
					this.SendPropertyChanged("PrdnSite");
					this.OnPrdnSiteChanged();
				}
			}
		}
		
		[Association(Name="ActionLogHeader_POChangesMonitor", Storage="_POChangesMonitors", ThisKey="OID", OtherKey="ActionLogOID")]
		public EntitySet<POChangesMonitor> POChangesMonitors
		{
			get
			{
				return this._POChangesMonitors;
			}
			set
			{
				this._POChangesMonitors.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_POChangesMonitors(POChangesMonitor entity)
		{
			this.SendPropertyChanging();
			entity.ActionLogHeader = this;
		}
		
		private void detach_POChangesMonitors(POChangesMonitor entity)
		{
			this.SendPropertyChanging();
			entity.ActionLogHeader = null;
		}
	}
	
	[Table(Name="dbo.ActionLogRemark")]
	public partial class ActionLogRemark : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OID;
		
		private string _Code;
		
		private string _Remark;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOIDChanging(int value);
    partial void OnOIDChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public ActionLogRemark()
		{
			OnCreated();
		}
		
		[Column(Storage="_OID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int OID
		{
			get
			{
				return this._OID;
			}
			set
			{
				if ((this._OID != value))
				{
					this.OnOIDChanging(value);
					this.SendPropertyChanging();
					this._OID = value;
					this.SendPropertyChanged("OID");
					this.OnOIDChanged();
				}
			}
		}
		
		[Column(Storage="_Code", DbType="VarChar(30)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Remark", DbType="NVarChar(1000)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.POSKUOperate")]
	public partial class POSKUOperate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _OID;
		
		private string _Company;
		
		private string _PONO;
		
		private int _Version;
		
		private int _AmendmentNo;
		
		private int _OrderLine;
		
		private string _SKU;
		
		private string _HandleType;
		
		private int _HandleNo;
		
		private string _Remark;
		
		private System.Nullable<System.DateTime> _OperateDate;
		
		private System.Nullable<System.DateTime> _ReceiveDate;
		
		private System.Nullable<System.DateTime> _ReceiveBulkSampleDate;
		
		private string _Status;
		
		private string _SubmitNo;
		
		private System.Nullable<double> _Qty;
		
		private System.Nullable<bool> _VersionFlag;
		
		private System.Nullable<bool> _Flag;
		
		private System.Nullable<System.DateTime> _PHToCustDate;
		
		private System.Nullable<System.DateTime> _SuppToCustDate;
		
		private System.Nullable<System.DateTime> _CustOperateDate;
		
		private string _CustStatus;
		
		private string _SwatchCard;
		
		private string _CustRemark;
		
		private System.Nullable<bool> _HaveColoristComm;
		
		private System.Nullable<bool> _HaveCustComm;
		
		private string _BOMAuditedBy;
		
		private EntityRef<POColorSizeDetail> _POColorSizeDetail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOIDChanging(long value);
    partial void OnOIDChanged();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnPONOChanging(string value);
    partial void OnPONOChanged();
    partial void OnVersionChanging(int value);
    partial void OnVersionChanged();
    partial void OnAmendmentNoChanging(int value);
    partial void OnAmendmentNoChanged();
    partial void OnOrderLineChanging(int value);
    partial void OnOrderLineChanged();
    partial void OnSKUChanging(string value);
    partial void OnSKUChanged();
    partial void OnHandleTypeChanging(string value);
    partial void OnHandleTypeChanged();
    partial void OnHandleNoChanging(int value);
    partial void OnHandleNoChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnOperateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnOperateDateChanged();
    partial void OnReceiveDateChanging(System.Nullable<System.DateTime> value);
    partial void OnReceiveDateChanged();
    partial void OnReceiveBulkSampleDateChanging(System.Nullable<System.DateTime> value);
    partial void OnReceiveBulkSampleDateChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnSubmitNoChanging(string value);
    partial void OnSubmitNoChanged();
    partial void OnQtyChanging(System.Nullable<double> value);
    partial void OnQtyChanged();
    partial void OnVersionFlagChanging(System.Nullable<bool> value);
    partial void OnVersionFlagChanged();
    partial void OnFlagChanging(System.Nullable<bool> value);
    partial void OnFlagChanged();
    partial void OnPHToCustDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPHToCustDateChanged();
    partial void OnSuppToCustDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSuppToCustDateChanged();
    partial void OnCustOperateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCustOperateDateChanged();
    partial void OnCustStatusChanging(string value);
    partial void OnCustStatusChanged();
    partial void OnSwatchCardChanging(string value);
    partial void OnSwatchCardChanged();
    partial void OnCustRemarkChanging(string value);
    partial void OnCustRemarkChanged();
    partial void OnHaveColoristCommChanging(System.Nullable<bool> value);
    partial void OnHaveColoristCommChanged();
    partial void OnHaveCustCommChanging(System.Nullable<bool> value);
    partial void OnHaveCustCommChanged();
    partial void OnBOMAuditedByChanging(string value);
    partial void OnBOMAuditedByChanged();
    #endregion
		
		public POSKUOperate()
		{
			this._POColorSizeDetail = default(EntityRef<POColorSizeDetail>);
			OnCreated();
		}
		
		[Column(Storage="_OID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long OID
		{
			get
			{
				return this._OID;
			}
			set
			{
				if ((this._OID != value))
				{
					this.OnOIDChanging(value);
					this.SendPropertyChanging();
					this._OID = value;
					this.SendPropertyChanged("OID");
					this.OnOIDChanged();
				}
			}
		}
		
		[Column(Storage="_Company", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					if (this._POColorSizeDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[Column(Storage="_PONO", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string PONO
		{
			get
			{
				return this._PONO;
			}
			set
			{
				if ((this._PONO != value))
				{
					if (this._POColorSizeDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPONOChanging(value);
					this.SendPropertyChanging();
					this._PONO = value;
					this.SendPropertyChanged("PONO");
					this.OnPONOChanged();
				}
			}
		}
		
		[Column(Storage="_Version", DbType="Int NOT NULL")]
		public int Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					if (this._POColorSizeDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[Column(Storage="_AmendmentNo", DbType="Int NOT NULL")]
		public int AmendmentNo
		{
			get
			{
				return this._AmendmentNo;
			}
			set
			{
				if ((this._AmendmentNo != value))
				{
					if (this._POColorSizeDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAmendmentNoChanging(value);
					this.SendPropertyChanging();
					this._AmendmentNo = value;
					this.SendPropertyChanged("AmendmentNo");
					this.OnAmendmentNoChanged();
				}
			}
		}
		
		[Column(Storage="_OrderLine", DbType="Int NOT NULL")]
		public int OrderLine
		{
			get
			{
				return this._OrderLine;
			}
			set
			{
				if ((this._OrderLine != value))
				{
					if (this._POColorSizeDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderLineChanging(value);
					this.SendPropertyChanging();
					this._OrderLine = value;
					this.SendPropertyChanged("OrderLine");
					this.OnOrderLineChanged();
				}
			}
		}
		
		[Column(Storage="_SKU", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
		public string SKU
		{
			get
			{
				return this._SKU;
			}
			set
			{
				if ((this._SKU != value))
				{
					if (this._POColorSizeDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSKUChanging(value);
					this.SendPropertyChanging();
					this._SKU = value;
					this.SendPropertyChanged("SKU");
					this.OnSKUChanged();
				}
			}
		}
		
		[Column(Storage="_HandleType", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string HandleType
		{
			get
			{
				return this._HandleType;
			}
			set
			{
				if ((this._HandleType != value))
				{
					this.OnHandleTypeChanging(value);
					this.SendPropertyChanging();
					this._HandleType = value;
					this.SendPropertyChanged("HandleType");
					this.OnHandleTypeChanged();
				}
			}
		}
		
		[Column(Storage="_HandleNo", DbType="Int NOT NULL")]
		public int HandleNo
		{
			get
			{
				return this._HandleNo;
			}
			set
			{
				if ((this._HandleNo != value))
				{
					this.OnHandleNoChanging(value);
					this.SendPropertyChanging();
					this._HandleNo = value;
					this.SendPropertyChanged("HandleNo");
					this.OnHandleNoChanged();
				}
			}
		}
		
		[Column(Storage="_Remark", DbType="NVarChar(500)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[Column(Storage="_OperateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> OperateDate
		{
			get
			{
				return this._OperateDate;
			}
			set
			{
				if ((this._OperateDate != value))
				{
					this.OnOperateDateChanging(value);
					this.SendPropertyChanging();
					this._OperateDate = value;
					this.SendPropertyChanged("OperateDate");
					this.OnOperateDateChanged();
				}
			}
		}
		
		[Column(Storage="_ReceiveDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ReceiveDate
		{
			get
			{
				return this._ReceiveDate;
			}
			set
			{
				if ((this._ReceiveDate != value))
				{
					this.OnReceiveDateChanging(value);
					this.SendPropertyChanging();
					this._ReceiveDate = value;
					this.SendPropertyChanged("ReceiveDate");
					this.OnReceiveDateChanged();
				}
			}
		}
		
		[Column(Storage="_ReceiveBulkSampleDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ReceiveBulkSampleDate
		{
			get
			{
				return this._ReceiveBulkSampleDate;
			}
			set
			{
				if ((this._ReceiveBulkSampleDate != value))
				{
					this.OnReceiveBulkSampleDateChanging(value);
					this.SendPropertyChanging();
					this._ReceiveBulkSampleDate = value;
					this.SendPropertyChanged("ReceiveBulkSampleDate");
					this.OnReceiveBulkSampleDateChanged();
				}
			}
		}
		
		[Column(Storage="_Status", DbType="NVarChar(40)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[Column(Storage="_SubmitNo", DbType="NVarChar(200)")]
		public string SubmitNo
		{
			get
			{
				return this._SubmitNo;
			}
			set
			{
				if ((this._SubmitNo != value))
				{
					this.OnSubmitNoChanging(value);
					this.SendPropertyChanging();
					this._SubmitNo = value;
					this.SendPropertyChanged("SubmitNo");
					this.OnSubmitNoChanged();
				}
			}
		}
		
		[Column(Storage="_Qty", DbType="Float")]
		public System.Nullable<double> Qty
		{
			get
			{
				return this._Qty;
			}
			set
			{
				if ((this._Qty != value))
				{
					this.OnQtyChanging(value);
					this.SendPropertyChanging();
					this._Qty = value;
					this.SendPropertyChanged("Qty");
					this.OnQtyChanged();
				}
			}
		}
		
		[Column(Storage="_VersionFlag", DbType="Bit")]
		public System.Nullable<bool> VersionFlag
		{
			get
			{
				return this._VersionFlag;
			}
			set
			{
				if ((this._VersionFlag != value))
				{
					this.OnVersionFlagChanging(value);
					this.SendPropertyChanging();
					this._VersionFlag = value;
					this.SendPropertyChanged("VersionFlag");
					this.OnVersionFlagChanged();
				}
			}
		}
		
		[Column(Storage="_Flag", DbType="Bit")]
		public System.Nullable<bool> Flag
		{
			get
			{
				return this._Flag;
			}
			set
			{
				if ((this._Flag != value))
				{
					this.OnFlagChanging(value);
					this.SendPropertyChanging();
					this._Flag = value;
					this.SendPropertyChanged("Flag");
					this.OnFlagChanged();
				}
			}
		}
		
		[Column(Storage="_PHToCustDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PHToCustDate
		{
			get
			{
				return this._PHToCustDate;
			}
			set
			{
				if ((this._PHToCustDate != value))
				{
					this.OnPHToCustDateChanging(value);
					this.SendPropertyChanging();
					this._PHToCustDate = value;
					this.SendPropertyChanged("PHToCustDate");
					this.OnPHToCustDateChanged();
				}
			}
		}
		
		[Column(Storage="_SuppToCustDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SuppToCustDate
		{
			get
			{
				return this._SuppToCustDate;
			}
			set
			{
				if ((this._SuppToCustDate != value))
				{
					this.OnSuppToCustDateChanging(value);
					this.SendPropertyChanging();
					this._SuppToCustDate = value;
					this.SendPropertyChanged("SuppToCustDate");
					this.OnSuppToCustDateChanged();
				}
			}
		}
		
		[Column(Storage="_CustOperateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CustOperateDate
		{
			get
			{
				return this._CustOperateDate;
			}
			set
			{
				if ((this._CustOperateDate != value))
				{
					this.OnCustOperateDateChanging(value);
					this.SendPropertyChanging();
					this._CustOperateDate = value;
					this.SendPropertyChanged("CustOperateDate");
					this.OnCustOperateDateChanged();
				}
			}
		}
		
		[Column(Storage="_CustStatus", DbType="NVarChar(50)")]
		public string CustStatus
		{
			get
			{
				return this._CustStatus;
			}
			set
			{
				if ((this._CustStatus != value))
				{
					this.OnCustStatusChanging(value);
					this.SendPropertyChanging();
					this._CustStatus = value;
					this.SendPropertyChanged("CustStatus");
					this.OnCustStatusChanged();
				}
			}
		}
		
		[Column(Storage="_SwatchCard", DbType="VarChar(20)")]
		public string SwatchCard
		{
			get
			{
				return this._SwatchCard;
			}
			set
			{
				if ((this._SwatchCard != value))
				{
					this.OnSwatchCardChanging(value);
					this.SendPropertyChanging();
					this._SwatchCard = value;
					this.SendPropertyChanged("SwatchCard");
					this.OnSwatchCardChanged();
				}
			}
		}
		
		[Column(Storage="_CustRemark", DbType="VarChar(500)")]
		public string CustRemark
		{
			get
			{
				return this._CustRemark;
			}
			set
			{
				if ((this._CustRemark != value))
				{
					this.OnCustRemarkChanging(value);
					this.SendPropertyChanging();
					this._CustRemark = value;
					this.SendPropertyChanged("CustRemark");
					this.OnCustRemarkChanged();
				}
			}
		}
		
		[Column(Storage="_HaveColoristComm", DbType="Bit")]
		public System.Nullable<bool> HaveColoristComm
		{
			get
			{
				return this._HaveColoristComm;
			}
			set
			{
				if ((this._HaveColoristComm != value))
				{
					this.OnHaveColoristCommChanging(value);
					this.SendPropertyChanging();
					this._HaveColoristComm = value;
					this.SendPropertyChanged("HaveColoristComm");
					this.OnHaveColoristCommChanged();
				}
			}
		}
		
		[Column(Storage="_HaveCustComm", DbType="Bit")]
		public System.Nullable<bool> HaveCustComm
		{
			get
			{
				return this._HaveCustComm;
			}
			set
			{
				if ((this._HaveCustComm != value))
				{
					this.OnHaveCustCommChanging(value);
					this.SendPropertyChanging();
					this._HaveCustComm = value;
					this.SendPropertyChanged("HaveCustComm");
					this.OnHaveCustCommChanged();
				}
			}
		}
		
		[Column(Storage="_BOMAuditedBy", DbType="NVarChar(50)")]
		public string BOMAuditedBy
		{
			get
			{
				return this._BOMAuditedBy;
			}
			set
			{
				if ((this._BOMAuditedBy != value))
				{
					this.OnBOMAuditedByChanging(value);
					this.SendPropertyChanging();
					this._BOMAuditedBy = value;
					this.SendPropertyChanged("BOMAuditedBy");
					this.OnBOMAuditedByChanged();
				}
			}
		}
		
		[Association(Name="POColorSizeDetail_POSKUOperate", Storage="_POColorSizeDetail", ThisKey="Company,PONO,Version,AmendmentNo,OrderLine,SKU", OtherKey="Company,PONO,Version,AmendmentNo,OrderLine,SKU", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public POColorSizeDetail POColorSizeDetail
		{
			get
			{
				return this._POColorSizeDetail.Entity;
			}
			set
			{
				POColorSizeDetail previousValue = this._POColorSizeDetail.Entity;
				if (((previousValue != value) 
							|| (this._POColorSizeDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._POColorSizeDetail.Entity = null;
						previousValue.POSKUOperates.Remove(this);
					}
					this._POColorSizeDetail.Entity = value;
					if ((value != null))
					{
						value.POSKUOperates.Add(this);
						this._Company = value.Company;
						this._PONO = value.PONO;
						this._Version = value.Version;
						this._AmendmentNo = value.AmendmentNo;
						this._OrderLine = value.OrderLine;
						this._SKU = value.SKU;
					}
					else
					{
						this._Company = default(string);
						this._PONO = default(string);
						this._Version = default(int);
						this._AmendmentNo = default(int);
						this._OrderLine = default(int);
						this._SKU = default(string);
					}
					this.SendPropertyChanged("POColorSizeDetail");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.ActionLogCategory")]
	public partial class ActionLogCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _OID;
		
		private string _Code;
		
		private string _BigCategory;
		
		private string _Category;
		
		private string _Description;
		
		private string _Description_EN;
		
		private string _Description_BD;
		
		private string _GroupCode;
		
		private string _GroupName_EN;
		
		private string _GroupName_CN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOIDChanging(long value);
    partial void OnOIDChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnBigCategoryChanging(string value);
    partial void OnBigCategoryChanged();
    partial void OnCategoryChanging(string value);
    partial void OnCategoryChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDescription_ENChanging(string value);
    partial void OnDescription_ENChanged();
    partial void OnDescription_BDChanging(string value);
    partial void OnDescription_BDChanged();
    partial void OnGroupCodeChanging(string value);
    partial void OnGroupCodeChanged();
    partial void OnGroupName_ENChanging(string value);
    partial void OnGroupName_ENChanged();
    partial void OnGroupName_CNChanging(string value);
    partial void OnGroupName_CNChanged();
    #endregion
		
		public ActionLogCategory()
		{
			OnCreated();
		}
		
		[Column(Storage="_OID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long OID
		{
			get
			{
				return this._OID;
			}
			set
			{
				if ((this._OID != value))
				{
					this.OnOIDChanging(value);
					this.SendPropertyChanging();
					this._OID = value;
					this.SendPropertyChanged("OID");
					this.OnOIDChanged();
				}
			}
		}
		
		[Column(Storage="_Code", DbType="VarChar(10)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[Column(Storage="_BigCategory", DbType="NVarChar(100)")]
		public string BigCategory
		{
			get
			{
				return this._BigCategory;
			}
			set
			{
				if ((this._BigCategory != value))
				{
					this.OnBigCategoryChanging(value);
					this.SendPropertyChanging();
					this._BigCategory = value;
					this.SendPropertyChanged("BigCategory");
					this.OnBigCategoryChanged();
				}
			}
		}
		
		[Column(Storage="_Category", DbType="NVarChar(100)")]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		[Column(Storage="_Description", DbType="NVarChar(1000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_Description_EN", DbType="NVarChar(1000)")]
		public string Description_EN
		{
			get
			{
				return this._Description_EN;
			}
			set
			{
				if ((this._Description_EN != value))
				{
					this.OnDescription_ENChanging(value);
					this.SendPropertyChanging();
					this._Description_EN = value;
					this.SendPropertyChanged("Description_EN");
					this.OnDescription_ENChanged();
				}
			}
		}
		
		[Column(Storage="_Description_BD", DbType="NVarChar(1000)")]
		public string Description_BD
		{
			get
			{
				return this._Description_BD;
			}
			set
			{
				if ((this._Description_BD != value))
				{
					this.OnDescription_BDChanging(value);
					this.SendPropertyChanging();
					this._Description_BD = value;
					this.SendPropertyChanged("Description_BD");
					this.OnDescription_BDChanged();
				}
			}
		}
		
		[Column(Storage="_GroupCode", DbType="VarChar(20)")]
		public string GroupCode
		{
			get
			{
				return this._GroupCode;
			}
			set
			{
				if ((this._GroupCode != value))
				{
					this.OnGroupCodeChanging(value);
					this.SendPropertyChanging();
					this._GroupCode = value;
					this.SendPropertyChanged("GroupCode");
					this.OnGroupCodeChanged();
				}
			}
		}
		
		[Column(Storage="_GroupName_EN", DbType="NVarChar(1000)")]
		public string GroupName_EN
		{
			get
			{
				return this._GroupName_EN;
			}
			set
			{
				if ((this._GroupName_EN != value))
				{
					this.OnGroupName_ENChanging(value);
					this.SendPropertyChanging();
					this._GroupName_EN = value;
					this.SendPropertyChanged("GroupName_EN");
					this.OnGroupName_ENChanged();
				}
			}
		}
		
		[Column(Storage="_GroupName_CN", DbType="NVarChar(1000)")]
		public string GroupName_CN
		{
			get
			{
				return this._GroupName_CN;
			}
			set
			{
				if ((this._GroupName_CN != value))
				{
					this.OnGroupName_CNChanging(value);
					this.SendPropertyChanging();
					this._GroupName_CN = value;
					this.SendPropertyChanged("GroupName_CN");
					this.OnGroupName_CNChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Z_OutstandingPO")]
	public partial class Z_OutstandingPO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _OID;
		
		private string _BuyerCode;
		
		private string _PONO;
		
		private System.Nullable<int> _OrderLine;
		
		private System.Nullable<int> _SplitNo;
		
		private string _Whse;
		
		private string _ProjectNo;
		
		private string _OurItemCode;
		
		private string _Currency;
		
		private string _Coordinator;
		
		private string _SuppCode;
		
		private string _SuppItemCode;
		
		private System.Nullable<decimal> _SupplierPOQty;
		
		private System.Nullable<decimal> _SupplierOutstandingQty;
		
		private System.Nullable<decimal> _POBalancePercent;
		
		private string _Unit;
		
		private string _Size;
		
		private string _Cup;
		
		private string _OurColorCode;
		
		private System.Nullable<System.DateTime> _PurchaseDate;
		
		private string _PurchaseInvoiceOrPackingListNo;
		
		private System.Nullable<decimal> _PurchaseQty;
		
		private System.Nullable<System.DateTime> _SLWhseDate;
		
		private System.Nullable<decimal> _SLWhseDQty;
		
		private System.Nullable<decimal> _IQAPassQty;
		
		private System.Nullable<decimal> _IQAFailQty;
		
		private System.Nullable<System.DateTime> _PPMCDate;
		
		private System.Nullable<decimal> _PPMCQty;
		
		private System.Nullable<decimal> _PPMCBalQty;
		
		private System.Nullable<System.DateTime> _CuttingDate;
		
		private System.Nullable<decimal> _CuttingConfirmQty;
		
		private string _Remark;
		
		private System.Nullable<decimal> _Price;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOIDChanging(long value);
    partial void OnOIDChanged();
    partial void OnBuyerCodeChanging(string value);
    partial void OnBuyerCodeChanged();
    partial void OnPONOChanging(string value);
    partial void OnPONOChanged();
    partial void OnOrderLineChanging(System.Nullable<int> value);
    partial void OnOrderLineChanged();
    partial void OnSplitNoChanging(System.Nullable<int> value);
    partial void OnSplitNoChanged();
    partial void OnWhseChanging(string value);
    partial void OnWhseChanged();
    partial void OnProjectNoChanging(string value);
    partial void OnProjectNoChanged();
    partial void OnOurItemCodeChanging(string value);
    partial void OnOurItemCodeChanged();
    partial void OnCurrencyChanging(string value);
    partial void OnCurrencyChanged();
    partial void OnCoordinatorChanging(string value);
    partial void OnCoordinatorChanged();
    partial void OnSuppCodeChanging(string value);
    partial void OnSuppCodeChanged();
    partial void OnSuppItemCodeChanging(string value);
    partial void OnSuppItemCodeChanged();
    partial void OnSupplierPOQtyChanging(System.Nullable<decimal> value);
    partial void OnSupplierPOQtyChanged();
    partial void OnSupplierOutstandingQtyChanging(System.Nullable<decimal> value);
    partial void OnSupplierOutstandingQtyChanged();
    partial void OnPOBalancePercentChanging(System.Nullable<decimal> value);
    partial void OnPOBalancePercentChanged();
    partial void OnUnitChanging(string value);
    partial void OnUnitChanged();
    partial void OnSizeChanging(string value);
    partial void OnSizeChanged();
    partial void OnCupChanging(string value);
    partial void OnCupChanged();
    partial void OnOurColorCodeChanging(string value);
    partial void OnOurColorCodeChanged();
    partial void OnPurchaseDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPurchaseDateChanged();
    partial void OnPurchaseInvoiceOrPackingListNoChanging(string value);
    partial void OnPurchaseInvoiceOrPackingListNoChanged();
    partial void OnPurchaseQtyChanging(System.Nullable<decimal> value);
    partial void OnPurchaseQtyChanged();
    partial void OnSLWhseDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSLWhseDateChanged();
    partial void OnSLWhseDQtyChanging(System.Nullable<decimal> value);
    partial void OnSLWhseDQtyChanged();
    partial void OnIQAPassQtyChanging(System.Nullable<decimal> value);
    partial void OnIQAPassQtyChanged();
    partial void OnIQAFailQtyChanging(System.Nullable<decimal> value);
    partial void OnIQAFailQtyChanged();
    partial void OnPPMCDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPPMCDateChanged();
    partial void OnPPMCQtyChanging(System.Nullable<decimal> value);
    partial void OnPPMCQtyChanged();
    partial void OnPPMCBalQtyChanging(System.Nullable<decimal> value);
    partial void OnPPMCBalQtyChanged();
    partial void OnCuttingDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCuttingDateChanged();
    partial void OnCuttingConfirmQtyChanging(System.Nullable<decimal> value);
    partial void OnCuttingConfirmQtyChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    #endregion
		
		public Z_OutstandingPO()
		{
			OnCreated();
		}
		
		[Column(Storage="_OID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long OID
		{
			get
			{
				return this._OID;
			}
			set
			{
				if ((this._OID != value))
				{
					this.OnOIDChanging(value);
					this.SendPropertyChanging();
					this._OID = value;
					this.SendPropertyChanged("OID");
					this.OnOIDChanged();
				}
			}
		}
		
		[Column(Storage="_BuyerCode", DbType="VarChar(10)")]
		public string BuyerCode
		{
			get
			{
				return this._BuyerCode;
			}
			set
			{
				if ((this._BuyerCode != value))
				{
					this.OnBuyerCodeChanging(value);
					this.SendPropertyChanging();
					this._BuyerCode = value;
					this.SendPropertyChanged("BuyerCode");
					this.OnBuyerCodeChanged();
				}
			}
		}
		
		[Column(Storage="_PONO", DbType="VarChar(10)")]
		public string PONO
		{
			get
			{
				return this._PONO;
			}
			set
			{
				if ((this._PONO != value))
				{
					this.OnPONOChanging(value);
					this.SendPropertyChanging();
					this._PONO = value;
					this.SendPropertyChanged("PONO");
					this.OnPONOChanged();
				}
			}
		}
		
		[Column(Storage="_OrderLine", DbType="Int")]
		public System.Nullable<int> OrderLine
		{
			get
			{
				return this._OrderLine;
			}
			set
			{
				if ((this._OrderLine != value))
				{
					this.OnOrderLineChanging(value);
					this.SendPropertyChanging();
					this._OrderLine = value;
					this.SendPropertyChanged("OrderLine");
					this.OnOrderLineChanged();
				}
			}
		}
		
		[Column(Storage="_SplitNo", DbType="Int")]
		public System.Nullable<int> SplitNo
		{
			get
			{
				return this._SplitNo;
			}
			set
			{
				if ((this._SplitNo != value))
				{
					this.OnSplitNoChanging(value);
					this.SendPropertyChanging();
					this._SplitNo = value;
					this.SendPropertyChanged("SplitNo");
					this.OnSplitNoChanged();
				}
			}
		}
		
		[Column(Storage="_Whse", DbType="VarChar(10)")]
		public string Whse
		{
			get
			{
				return this._Whse;
			}
			set
			{
				if ((this._Whse != value))
				{
					this.OnWhseChanging(value);
					this.SendPropertyChanging();
					this._Whse = value;
					this.SendPropertyChanged("Whse");
					this.OnWhseChanged();
				}
			}
		}
		
		[Column(Storage="_ProjectNo", DbType="VarChar(20)")]
		public string ProjectNo
		{
			get
			{
				return this._ProjectNo;
			}
			set
			{
				if ((this._ProjectNo != value))
				{
					this.OnProjectNoChanging(value);
					this.SendPropertyChanging();
					this._ProjectNo = value;
					this.SendPropertyChanged("ProjectNo");
					this.OnProjectNoChanged();
				}
			}
		}
		
		[Column(Storage="_OurItemCode", DbType="VarChar(100)")]
		public string OurItemCode
		{
			get
			{
				return this._OurItemCode;
			}
			set
			{
				if ((this._OurItemCode != value))
				{
					this.OnOurItemCodeChanging(value);
					this.SendPropertyChanging();
					this._OurItemCode = value;
					this.SendPropertyChanged("OurItemCode");
					this.OnOurItemCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Currency", DbType="VarChar(10)")]
		public string Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[Column(Storage="_Coordinator", DbType="VarChar(100)")]
		public string Coordinator
		{
			get
			{
				return this._Coordinator;
			}
			set
			{
				if ((this._Coordinator != value))
				{
					this.OnCoordinatorChanging(value);
					this.SendPropertyChanging();
					this._Coordinator = value;
					this.SendPropertyChanged("Coordinator");
					this.OnCoordinatorChanged();
				}
			}
		}
		
		[Column(Storage="_SuppCode", DbType="VarChar(10)")]
		public string SuppCode
		{
			get
			{
				return this._SuppCode;
			}
			set
			{
				if ((this._SuppCode != value))
				{
					this.OnSuppCodeChanging(value);
					this.SendPropertyChanging();
					this._SuppCode = value;
					this.SendPropertyChanged("SuppCode");
					this.OnSuppCodeChanged();
				}
			}
		}
		
		[Column(Storage="_SuppItemCode", DbType="VarChar(100)")]
		public string SuppItemCode
		{
			get
			{
				return this._SuppItemCode;
			}
			set
			{
				if ((this._SuppItemCode != value))
				{
					this.OnSuppItemCodeChanging(value);
					this.SendPropertyChanging();
					this._SuppItemCode = value;
					this.SendPropertyChanged("SuppItemCode");
					this.OnSuppItemCodeChanged();
				}
			}
		}
		
		[Column(Storage="_SupplierPOQty", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> SupplierPOQty
		{
			get
			{
				return this._SupplierPOQty;
			}
			set
			{
				if ((this._SupplierPOQty != value))
				{
					this.OnSupplierPOQtyChanging(value);
					this.SendPropertyChanging();
					this._SupplierPOQty = value;
					this.SendPropertyChanged("SupplierPOQty");
					this.OnSupplierPOQtyChanged();
				}
			}
		}
		
		[Column(Storage="_SupplierOutstandingQty", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> SupplierOutstandingQty
		{
			get
			{
				return this._SupplierOutstandingQty;
			}
			set
			{
				if ((this._SupplierOutstandingQty != value))
				{
					this.OnSupplierOutstandingQtyChanging(value);
					this.SendPropertyChanging();
					this._SupplierOutstandingQty = value;
					this.SendPropertyChanged("SupplierOutstandingQty");
					this.OnSupplierOutstandingQtyChanged();
				}
			}
		}
		
		[Column(Storage="_POBalancePercent", DbType="Decimal(18,5)")]
		public System.Nullable<decimal> POBalancePercent
		{
			get
			{
				return this._POBalancePercent;
			}
			set
			{
				if ((this._POBalancePercent != value))
				{
					this.OnPOBalancePercentChanging(value);
					this.SendPropertyChanging();
					this._POBalancePercent = value;
					this.SendPropertyChanged("POBalancePercent");
					this.OnPOBalancePercentChanged();
				}
			}
		}
		
		[Column(Storage="_Unit", DbType="VarChar(10)")]
		public string Unit
		{
			get
			{
				return this._Unit;
			}
			set
			{
				if ((this._Unit != value))
				{
					this.OnUnitChanging(value);
					this.SendPropertyChanging();
					this._Unit = value;
					this.SendPropertyChanged("Unit");
					this.OnUnitChanged();
				}
			}
		}
		
		[Column(Storage="_Size", DbType="VarChar(10)")]
		public string Size
		{
			get
			{
				return this._Size;
			}
			set
			{
				if ((this._Size != value))
				{
					this.OnSizeChanging(value);
					this.SendPropertyChanging();
					this._Size = value;
					this.SendPropertyChanged("Size");
					this.OnSizeChanged();
				}
			}
		}
		
		[Column(Storage="_Cup", DbType="VarChar(10)")]
		public string Cup
		{
			get
			{
				return this._Cup;
			}
			set
			{
				if ((this._Cup != value))
				{
					this.OnCupChanging(value);
					this.SendPropertyChanging();
					this._Cup = value;
					this.SendPropertyChanged("Cup");
					this.OnCupChanged();
				}
			}
		}
		
		[Column(Storage="_OurColorCode", DbType="VarChar(10)")]
		public string OurColorCode
		{
			get
			{
				return this._OurColorCode;
			}
			set
			{
				if ((this._OurColorCode != value))
				{
					this.OnOurColorCodeChanging(value);
					this.SendPropertyChanging();
					this._OurColorCode = value;
					this.SendPropertyChanged("OurColorCode");
					this.OnOurColorCodeChanged();
				}
			}
		}
		
		[Column(Storage="_PurchaseDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PurchaseDate
		{
			get
			{
				return this._PurchaseDate;
			}
			set
			{
				if ((this._PurchaseDate != value))
				{
					this.OnPurchaseDateChanging(value);
					this.SendPropertyChanging();
					this._PurchaseDate = value;
					this.SendPropertyChanged("PurchaseDate");
					this.OnPurchaseDateChanged();
				}
			}
		}
		
		[Column(Storage="_PurchaseInvoiceOrPackingListNo", DbType="VarChar(50)")]
		public string PurchaseInvoiceOrPackingListNo
		{
			get
			{
				return this._PurchaseInvoiceOrPackingListNo;
			}
			set
			{
				if ((this._PurchaseInvoiceOrPackingListNo != value))
				{
					this.OnPurchaseInvoiceOrPackingListNoChanging(value);
					this.SendPropertyChanging();
					this._PurchaseInvoiceOrPackingListNo = value;
					this.SendPropertyChanged("PurchaseInvoiceOrPackingListNo");
					this.OnPurchaseInvoiceOrPackingListNoChanged();
				}
			}
		}
		
		[Column(Storage="_PurchaseQty", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> PurchaseQty
		{
			get
			{
				return this._PurchaseQty;
			}
			set
			{
				if ((this._PurchaseQty != value))
				{
					this.OnPurchaseQtyChanging(value);
					this.SendPropertyChanging();
					this._PurchaseQty = value;
					this.SendPropertyChanged("PurchaseQty");
					this.OnPurchaseQtyChanged();
				}
			}
		}
		
		[Column(Storage="_SLWhseDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SLWhseDate
		{
			get
			{
				return this._SLWhseDate;
			}
			set
			{
				if ((this._SLWhseDate != value))
				{
					this.OnSLWhseDateChanging(value);
					this.SendPropertyChanging();
					this._SLWhseDate = value;
					this.SendPropertyChanged("SLWhseDate");
					this.OnSLWhseDateChanged();
				}
			}
		}
		
		[Column(Storage="_SLWhseDQty", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> SLWhseDQty
		{
			get
			{
				return this._SLWhseDQty;
			}
			set
			{
				if ((this._SLWhseDQty != value))
				{
					this.OnSLWhseDQtyChanging(value);
					this.SendPropertyChanging();
					this._SLWhseDQty = value;
					this.SendPropertyChanged("SLWhseDQty");
					this.OnSLWhseDQtyChanged();
				}
			}
		}
		
		[Column(Storage="_IQAPassQty", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> IQAPassQty
		{
			get
			{
				return this._IQAPassQty;
			}
			set
			{
				if ((this._IQAPassQty != value))
				{
					this.OnIQAPassQtyChanging(value);
					this.SendPropertyChanging();
					this._IQAPassQty = value;
					this.SendPropertyChanged("IQAPassQty");
					this.OnIQAPassQtyChanged();
				}
			}
		}
		
		[Column(Storage="_IQAFailQty", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> IQAFailQty
		{
			get
			{
				return this._IQAFailQty;
			}
			set
			{
				if ((this._IQAFailQty != value))
				{
					this.OnIQAFailQtyChanging(value);
					this.SendPropertyChanging();
					this._IQAFailQty = value;
					this.SendPropertyChanged("IQAFailQty");
					this.OnIQAFailQtyChanged();
				}
			}
		}
		
		[Column(Storage="_PPMCDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PPMCDate
		{
			get
			{
				return this._PPMCDate;
			}
			set
			{
				if ((this._PPMCDate != value))
				{
					this.OnPPMCDateChanging(value);
					this.SendPropertyChanging();
					this._PPMCDate = value;
					this.SendPropertyChanged("PPMCDate");
					this.OnPPMCDateChanged();
				}
			}
		}
		
		[Column(Storage="_PPMCQty", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> PPMCQty
		{
			get
			{
				return this._PPMCQty;
			}
			set
			{
				if ((this._PPMCQty != value))
				{
					this.OnPPMCQtyChanging(value);
					this.SendPropertyChanging();
					this._PPMCQty = value;
					this.SendPropertyChanged("PPMCQty");
					this.OnPPMCQtyChanged();
				}
			}
		}
		
		[Column(Storage="_PPMCBalQty", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> PPMCBalQty
		{
			get
			{
				return this._PPMCBalQty;
			}
			set
			{
				if ((this._PPMCBalQty != value))
				{
					this.OnPPMCBalQtyChanging(value);
					this.SendPropertyChanging();
					this._PPMCBalQty = value;
					this.SendPropertyChanged("PPMCBalQty");
					this.OnPPMCBalQtyChanged();
				}
			}
		}
		
		[Column(Storage="_CuttingDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CuttingDate
		{
			get
			{
				return this._CuttingDate;
			}
			set
			{
				if ((this._CuttingDate != value))
				{
					this.OnCuttingDateChanging(value);
					this.SendPropertyChanging();
					this._CuttingDate = value;
					this.SendPropertyChanged("CuttingDate");
					this.OnCuttingDateChanged();
				}
			}
		}
		
		[Column(Storage="_CuttingConfirmQty", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> CuttingConfirmQty
		{
			get
			{
				return this._CuttingConfirmQty;
			}
			set
			{
				if ((this._CuttingConfirmQty != value))
				{
					this.OnCuttingConfirmQtyChanging(value);
					this.SendPropertyChanging();
					this._CuttingConfirmQty = value;
					this.SendPropertyChanged("CuttingConfirmQty");
					this.OnCuttingConfirmQtyChanged();
				}
			}
		}
		
		[Column(Storage="_Remark", DbType="NVarChar(2000)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[Column(Storage="_Price", DbType="Decimal(18,5)")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class sp_GetOrderLineResult
	{
		
		private System.Nullable<int> _OrderLine;
		
		public sp_GetOrderLineResult()
		{
		}
		
		[Column(Storage="_OrderLine", DbType="Int")]
		public System.Nullable<int> OrderLine
		{
			get
			{
				return this._OrderLine;
			}
			set
			{
				if ((this._OrderLine != value))
				{
					this._OrderLine = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
