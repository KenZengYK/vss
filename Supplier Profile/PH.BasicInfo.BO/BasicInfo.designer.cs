#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.8806
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PH.BasicInfo.BO
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="PH.BasicInfo")]
	public partial class BasicInfoDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCurrency(Currency instance);
    partial void UpdateCurrency(Currency instance);
    partial void DeleteCurrency(Currency instance);
    partial void InsertEmployee(Employee instance);
    partial void UpdateEmployee(Employee instance);
    partial void DeleteEmployee(Employee instance);
    partial void InsertEmployeeUser(EmployeeUser instance);
    partial void UpdateEmployeeUser(EmployeeUser instance);
    partial void DeleteEmployeeUser(EmployeeUser instance);
    partial void InsertOrganization(Organization instance);
    partial void UpdateOrganization(Organization instance);
    partial void DeleteOrganization(Organization instance);
    partial void InsertOrganizationType(OrganizationType instance);
    partial void UpdateOrganizationType(OrganizationType instance);
    partial void DeleteOrganizationType(OrganizationType instance);
    partial void InsertOrgEmployee(OrgEmployee instance);
    partial void UpdateOrgEmployee(OrgEmployee instance);
    partial void DeleteOrgEmployee(OrgEmployee instance);
    partial void InsertProductRange(ProductRange instance);
    partial void UpdateProductRange(ProductRange instance);
    partial void DeleteProductRange(ProductRange instance);
    partial void InsertCustomer(Customer instance);
    partial void UpdateCustomer(Customer instance);
    partial void DeleteCustomer(Customer instance);
    partial void InsertDimension(Dimension instance);
    partial void UpdateDimension(Dimension instance);
    partial void DeleteDimension(Dimension instance);
    partial void InsertShipmentLeadtime(ShipmentLeadtime instance);
    partial void UpdateShipmentLeadtime(ShipmentLeadtime instance);
    partial void DeleteShipmentLeadtime(ShipmentLeadtime instance);
    partial void InsertSupplierProductRange(SupplierProductRange instance);
    partial void UpdateSupplierProductRange(SupplierProductRange instance);
    partial void DeleteSupplierProductRange(SupplierProductRange instance);
    partial void InsertIncoterm(Incoterm instance);
    partial void UpdateIncoterm(Incoterm instance);
    partial void DeleteIncoterm(Incoterm instance);
    partial void InsertTransitModeTransitPointChange(TransitModeTransitPointChange instance);
    partial void UpdateTransitModeTransitPointChange(TransitModeTransitPointChange instance);
    partial void DeleteTransitModeTransitPointChange(TransitModeTransitPointChange instance);
    partial void InsertSupplierCycleHistory(SupplierCycleHistory instance);
    partial void UpdateSupplierCycleHistory(SupplierCycleHistory instance);
    partial void DeleteSupplierCycleHistory(SupplierCycleHistory instance);
    partial void InsertTransportationCostElement(TransportationCostElement instance);
    partial void UpdateTransportationCostElement(TransportationCostElement instance);
    partial void DeleteTransportationCostElement(TransportationCostElement instance);
    partial void InsertPerformance(Performance instance);
    partial void UpdatePerformance(Performance instance);
    partial void DeletePerformance(Performance instance);
    partial void InsertPerformanceRanking(PerformanceRanking instance);
    partial void UpdatePerformanceRanking(PerformanceRanking instance);
    partial void DeletePerformanceRanking(PerformanceRanking instance);
    partial void InsertPerformanceItem(PerformanceItem instance);
    partial void UpdatePerformanceItem(PerformanceItem instance);
    partial void DeletePerformanceItem(PerformanceItem instance);
    partial void InsertCurrencyRecord(CurrencyRecord instance);
    partial void UpdateCurrencyRecord(CurrencyRecord instance);
    partial void DeleteCurrencyRecord(CurrencyRecord instance);
    partial void InsertEmailName(EmailName instance);
    partial void UpdateEmailName(EmailName instance);
    partial void DeleteEmailName(EmailName instance);
    partial void InsertMaterialTypeDimension(MaterialTypeDimension instance);
    partial void UpdateMaterialTypeDimension(MaterialTypeDimension instance);
    partial void DeleteMaterialTypeDimension(MaterialTypeDimension instance);
    partial void InsertTradeMethodTransform(TradeMethodTransform instance);
    partial void UpdateTradeMethodTransform(TradeMethodTransform instance);
    partial void DeleteTradeMethodTransform(TradeMethodTransform instance);
    partial void InsertTransitPointArea(TransitPointArea instance);
    partial void UpdateTransitPointArea(TransitPointArea instance);
    partial void DeleteTransitPointArea(TransitPointArea instance);
    partial void InsertIncontermsTransitForMIDc(IncontermsTransitForMIDc instance);
    partial void UpdateIncontermsTransitForMIDc(IncontermsTransitForMIDc instance);
    partial void DeleteIncontermsTransitForMIDc(IncontermsTransitForMIDc instance);
    partial void InsertForPointDeliveryofDestinationPHKey(ForPointDeliveryofDestinationPHKey instance);
    partial void UpdateForPointDeliveryofDestinationPHKey(ForPointDeliveryofDestinationPHKey instance);
    partial void DeleteForPointDeliveryofDestinationPHKey(ForPointDeliveryofDestinationPHKey instance);
    partial void InsertEndPointFactoryFrame(EndPointFactoryFrame instance);
    partial void UpdateEndPointFactoryFrame(EndPointFactoryFrame instance);
    partial void DeleteEndPointFactoryFrame(EndPointFactoryFrame instance);
    partial void InsertSupplierRegion(SupplierRegion instance);
    partial void UpdateSupplierRegion(SupplierRegion instance);
    partial void DeleteSupplierRegion(SupplierRegion instance);
    partial void InsertTimeFrameIICompany(TimeFrameIICompany instance);
    partial void UpdateTimeFrameIICompany(TimeFrameIICompany instance);
    partial void DeleteTimeFrameIICompany(TimeFrameIICompany instance);
    partial void InsertTradeMethod(TradeMethod instance);
    partial void UpdateTradeMethod(TradeMethod instance);
    partial void DeleteTradeMethod(TradeMethod instance);
    partial void InsertIncotermMasterDB(IncotermMasterDB instance);
    partial void UpdateIncotermMasterDB(IncotermMasterDB instance);
    partial void DeleteIncotermMasterDB(IncotermMasterDB instance);
    partial void InsertIncontermsTransit(IncontermsTransit instance);
    partial void UpdateIncontermsTransit(IncontermsTransit instance);
    partial void DeleteIncontermsTransit(IncontermsTransit instance);
    partial void InsertCoGroupMainDiff(CoGroupMainDiff instance);
    partial void UpdateCoGroupMainDiff(CoGroupMainDiff instance);
    partial void DeleteCoGroupMainDiff(CoGroupMainDiff instance);
    partial void InsertSupplierProfile(SupplierProfile instance);
    partial void UpdateSupplierProfile(SupplierProfile instance);
    partial void DeleteSupplierProfile(SupplierProfile instance);
    partial void InsertPOFormNo(POFormNo instance);
    partial void UpdatePOFormNo(POFormNo instance);
    partial void DeletePOFormNo(POFormNo instance);
    partial void InsertTimeFrameII(TimeFrameII instance);
    partial void UpdateTimeFrameII(TimeFrameII instance);
    partial void DeleteTimeFrameII(TimeFrameII instance);
    partial void InsertEmailNotify(EmailNotify instance);
    partial void UpdateEmailNotify(EmailNotify instance);
    partial void DeleteEmailNotify(EmailNotify instance);
    partial void InsertSupplierFactory(SupplierFactory instance);
    partial void UpdateSupplierFactory(SupplierFactory instance);
    partial void DeleteSupplierFactory(SupplierFactory instance);
    #endregion
		
		public BasicInfoDataContext() : 
				base(global::PH.BasicInfo.BO.Properties.Settings.Default.PH_BasicInfoConnectionString14, mappingSource)
		{
			OnCreated();
		}
		
		public BasicInfoDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BasicInfoDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BasicInfoDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BasicInfoDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Currency> Currencies
		{
			get
			{
				return this.GetTable<Currency>();
			}
		}
		
		public System.Data.Linq.Table<Employee> Employees
		{
			get
			{
				return this.GetTable<Employee>();
			}
		}
		
		public System.Data.Linq.Table<EmployeeUser> EmployeeUsers
		{
			get
			{
				return this.GetTable<EmployeeUser>();
			}
		}
		
		public System.Data.Linq.Table<Organization> Organizations
		{
			get
			{
				return this.GetTable<Organization>();
			}
		}
		
		public System.Data.Linq.Table<OrganizationType> OrganizationTypes
		{
			get
			{
				return this.GetTable<OrganizationType>();
			}
		}
		
		public System.Data.Linq.Table<OrgEmployee> OrgEmployees
		{
			get
			{
				return this.GetTable<OrgEmployee>();
			}
		}
		
		public System.Data.Linq.Table<PH_Unit> PH_Units
		{
			get
			{
				return this.GetTable<PH_Unit>();
			}
		}
		
		public System.Data.Linq.Table<ProductRange> ProductRanges
		{
			get
			{
				return this.GetTable<ProductRange>();
			}
		}
		
		public System.Data.Linq.Table<BI_View_CustomerTypeSize> BI_View_CustomerTypeSizes
		{
			get
			{
				return this.GetTable<BI_View_CustomerTypeSize>();
			}
		}
		
		public System.Data.Linq.Table<Customer> Customers
		{
			get
			{
				return this.GetTable<Customer>();
			}
		}
		
		public System.Data.Linq.Table<Dimension> Dimensions
		{
			get
			{
				return this.GetTable<Dimension>();
			}
		}
		
		public System.Data.Linq.Table<ShipmentLeadtime> ShipmentLeadtimes
		{
			get
			{
				return this.GetTable<ShipmentLeadtime>();
			}
		}
		
		public System.Data.Linq.Table<SupplierProductRange> SupplierProductRanges
		{
			get
			{
				return this.GetTable<SupplierProductRange>();
			}
		}
		
		public System.Data.Linq.Table<Incoterm> Incoterms
		{
			get
			{
				return this.GetTable<Incoterm>();
			}
		}
		
		public System.Data.Linq.Table<TransitModeTransitPointChange> TransitModeTransitPointChanges
		{
			get
			{
				return this.GetTable<TransitModeTransitPointChange>();
			}
		}
		
		public System.Data.Linq.Table<SupplierCycleHistory> SupplierCycleHistories
		{
			get
			{
				return this.GetTable<SupplierCycleHistory>();
			}
		}
		
		public System.Data.Linq.Table<TransportationCostElement> TransportationCostElements
		{
			get
			{
				return this.GetTable<TransportationCostElement>();
			}
		}
		
		public System.Data.Linq.Table<Performance> Performances
		{
			get
			{
				return this.GetTable<Performance>();
			}
		}
		
		public System.Data.Linq.Table<PerformanceRanking> PerformanceRankings
		{
			get
			{
				return this.GetTable<PerformanceRanking>();
			}
		}
		
		public System.Data.Linq.Table<PerformanceItem> PerformanceItems
		{
			get
			{
				return this.GetTable<PerformanceItem>();
			}
		}
		
		public System.Data.Linq.Table<CurrencyRecord> CurrencyRecords
		{
			get
			{
				return this.GetTable<CurrencyRecord>();
			}
		}
		
		public System.Data.Linq.Table<EmailName> EmailNames
		{
			get
			{
				return this.GetTable<EmailName>();
			}
		}
		
		public System.Data.Linq.Table<MaterialTypeDimension> MaterialTypeDimensions
		{
			get
			{
				return this.GetTable<MaterialTypeDimension>();
			}
		}
		
		public System.Data.Linq.Table<TradeMethodTransform> TradeMethodTransforms
		{
			get
			{
				return this.GetTable<TradeMethodTransform>();
			}
		}
		
		public System.Data.Linq.Table<V_CurrencyRate> V_CurrencyRates
		{
			get
			{
				return this.GetTable<V_CurrencyRate>();
			}
		}
		
		public System.Data.Linq.Table<TransitPointArea> TransitPointAreas
		{
			get
			{
				return this.GetTable<TransitPointArea>();
			}
		}
		
		public System.Data.Linq.Table<IncontermsTransitForMIDc> IncontermsTransitForMIDcs
		{
			get
			{
				return this.GetTable<IncontermsTransitForMIDc>();
			}
		}
		
		public System.Data.Linq.Table<ForPointDeliveryofDestinationPHKey> ForPointDeliveryofDestinationPHKeys
		{
			get
			{
				return this.GetTable<ForPointDeliveryofDestinationPHKey>();
			}
		}
		
		public System.Data.Linq.Table<EndPointFactoryFrame> EndPointFactoryFrames
		{
			get
			{
				return this.GetTable<EndPointFactoryFrame>();
			}
		}
		
		public System.Data.Linq.Table<SupplierRegion> SupplierRegions
		{
			get
			{
				return this.GetTable<SupplierRegion>();
			}
		}
		
		public System.Data.Linq.Table<TimeFrameIICompany> TimeFrameIICompanies
		{
			get
			{
				return this.GetTable<TimeFrameIICompany>();
			}
		}
		
		public System.Data.Linq.Table<TradeMethod> TradeMethods
		{
			get
			{
				return this.GetTable<TradeMethod>();
			}
		}
		
		public System.Data.Linq.Table<IncotermMasterDB> IncotermMasterDBs
		{
			get
			{
				return this.GetTable<IncotermMasterDB>();
			}
		}
		
		public System.Data.Linq.Table<IncontermsTransit> IncontermsTransits
		{
			get
			{
				return this.GetTable<IncontermsTransit>();
			}
		}
		
		public System.Data.Linq.Table<CoGroupMainDiff> CoGroupMainDiffs
		{
			get
			{
				return this.GetTable<CoGroupMainDiff>();
			}
		}
		
		public System.Data.Linq.Table<SupplierProfile> SupplierProfiles
		{
			get
			{
				return this.GetTable<SupplierProfile>();
			}
		}
		
		public System.Data.Linq.Table<POFormNo> POFormNos
		{
			get
			{
				return this.GetTable<POFormNo>();
			}
		}
		
		public System.Data.Linq.Table<TimeFrameII> TimeFrameIIs
		{
			get
			{
				return this.GetTable<TimeFrameII>();
			}
		}
		
		public System.Data.Linq.Table<EmailNotify> EmailNotifies
		{
			get
			{
				return this.GetTable<EmailNotify>();
			}
		}
		
		public System.Data.Linq.Table<SupplierFactory> SupplierFactories
		{
			get
			{
				return this.GetTable<SupplierFactory>();
			}
		}
		
		[Function(Name="dbo.GetERPSupplier")]
		public ISingleResult<GetERPSupplierResult> GetERPSupplier([Parameter(Name="ERPSupplier", DbType="VarChar(50)")] string eRPSupplier)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), eRPSupplier);
			return ((ISingleResult<GetERPSupplierResult>)(result.ReturnValue));
		}
	}
	
	[Table(Name="dbo.Currency")]
	public partial class Currency : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Currency1;
		
		private string _Description;
		
		private System.Nullable<decimal> _StdBuyRate;
		
		private System.Nullable<decimal> _CurrBuyRate;
		
		private System.Nullable<decimal> _StdSellRate;
		
		private System.Nullable<decimal> _CurrSellRate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCurrency1Changing(string value);
    partial void OnCurrency1Changed();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnStdBuyRateChanging(System.Nullable<decimal> value);
    partial void OnStdBuyRateChanged();
    partial void OnCurrBuyRateChanging(System.Nullable<decimal> value);
    partial void OnCurrBuyRateChanged();
    partial void OnStdSellRateChanging(System.Nullable<decimal> value);
    partial void OnStdSellRateChanged();
    partial void OnCurrSellRateChanging(System.Nullable<decimal> value);
    partial void OnCurrSellRateChanged();
    #endregion
		
		public Currency()
		{
			OnCreated();
		}
		
		[Column(Name="Currency", Storage="_Currency1", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Currency1
		{
			get
			{
				return this._Currency1;
			}
			set
			{
				if ((this._Currency1 != value))
				{
					this.OnCurrency1Changing(value);
					this.SendPropertyChanging();
					this._Currency1 = value;
					this.SendPropertyChanged("Currency1");
					this.OnCurrency1Changed();
				}
			}
		}
		
		[Column(Storage="_Description", DbType="VarChar(250)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_StdBuyRate", DbType="Decimal(15,4)")]
		public System.Nullable<decimal> StdBuyRate
		{
			get
			{
				return this._StdBuyRate;
			}
			set
			{
				if ((this._StdBuyRate != value))
				{
					this.OnStdBuyRateChanging(value);
					this.SendPropertyChanging();
					this._StdBuyRate = value;
					this.SendPropertyChanged("StdBuyRate");
					this.OnStdBuyRateChanged();
				}
			}
		}
		
		[Column(Storage="_CurrBuyRate", DbType="Decimal(15,4)")]
		public System.Nullable<decimal> CurrBuyRate
		{
			get
			{
				return this._CurrBuyRate;
			}
			set
			{
				if ((this._CurrBuyRate != value))
				{
					this.OnCurrBuyRateChanging(value);
					this.SendPropertyChanging();
					this._CurrBuyRate = value;
					this.SendPropertyChanged("CurrBuyRate");
					this.OnCurrBuyRateChanged();
				}
			}
		}
		
		[Column(Storage="_StdSellRate", DbType="Decimal(15,4)")]
		public System.Nullable<decimal> StdSellRate
		{
			get
			{
				return this._StdSellRate;
			}
			set
			{
				if ((this._StdSellRate != value))
				{
					this.OnStdSellRateChanging(value);
					this.SendPropertyChanging();
					this._StdSellRate = value;
					this.SendPropertyChanged("StdSellRate");
					this.OnStdSellRateChanged();
				}
			}
		}
		
		[Column(Storage="_CurrSellRate", DbType="Decimal(15,4)")]
		public System.Nullable<decimal> CurrSellRate
		{
			get
			{
				return this._CurrSellRate;
			}
			set
			{
				if ((this._CurrSellRate != value))
				{
					this.OnCurrSellRateChanging(value);
					this.SendPropertyChanging();
					this._CurrSellRate = value;
					this.SendPropertyChanged("CurrSellRate");
					this.OnCurrSellRateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Employee")]
	public partial class Employee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _EmpID;
		
		private string _EmpName;
		
		private string _EmpNum;
		
		private string _Sex;
		
		private System.Nullable<int> _Age;
		
		private System.Nullable<System.DateTime> _Birthday;
		
		private string _NativePlace;
		
		private string _Address;
		
		private string _Nation;
		
		private string _IDCode;
		
		private System.Nullable<System.DateTime> _EnterDate;
		
		private System.Nullable<System.DateTime> _ExitDate;
		
		private System.Nullable<bool> _Expired;
		
		private string _MobilePhone;
		
		private string _Phone;
		
		private EntitySet<EmployeeUser> _EmployeeUsers;
		
		private EntitySet<OrgEmployee> _OrgEmployees;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmpIDChanging(string value);
    partial void OnEmpIDChanged();
    partial void OnEmpNameChanging(string value);
    partial void OnEmpNameChanged();
    partial void OnEmpNumChanging(string value);
    partial void OnEmpNumChanged();
    partial void OnSexChanging(string value);
    partial void OnSexChanged();
    partial void OnAgeChanging(System.Nullable<int> value);
    partial void OnAgeChanged();
    partial void OnBirthdayChanging(System.Nullable<System.DateTime> value);
    partial void OnBirthdayChanged();
    partial void OnNativePlaceChanging(string value);
    partial void OnNativePlaceChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnNationChanging(string value);
    partial void OnNationChanged();
    partial void OnIDCodeChanging(string value);
    partial void OnIDCodeChanged();
    partial void OnEnterDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEnterDateChanged();
    partial void OnExitDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExitDateChanged();
    partial void OnExpiredChanging(System.Nullable<bool> value);
    partial void OnExpiredChanged();
    partial void OnMobilePhoneChanging(string value);
    partial void OnMobilePhoneChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    #endregion
		
		public Employee()
		{
			this._EmployeeUsers = new EntitySet<EmployeeUser>(new Action<EmployeeUser>(this.attach_EmployeeUsers), new Action<EmployeeUser>(this.detach_EmployeeUsers));
			this._OrgEmployees = new EntitySet<OrgEmployee>(new Action<OrgEmployee>(this.attach_OrgEmployees), new Action<OrgEmployee>(this.detach_OrgEmployees));
			OnCreated();
		}
		
		[Column(Storage="_EmpID", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string EmpID
		{
			get
			{
				return this._EmpID;
			}
			set
			{
				if ((this._EmpID != value))
				{
					this.OnEmpIDChanging(value);
					this.SendPropertyChanging();
					this._EmpID = value;
					this.SendPropertyChanged("EmpID");
					this.OnEmpIDChanged();
				}
			}
		}
		
		[Column(Storage="_EmpName", DbType="NVarChar(20)")]
		public string EmpName
		{
			get
			{
				return this._EmpName;
			}
			set
			{
				if ((this._EmpName != value))
				{
					this.OnEmpNameChanging(value);
					this.SendPropertyChanging();
					this._EmpName = value;
					this.SendPropertyChanged("EmpName");
					this.OnEmpNameChanged();
				}
			}
		}
		
		[Column(Storage="_EmpNum", DbType="NVarChar(20)")]
		public string EmpNum
		{
			get
			{
				return this._EmpNum;
			}
			set
			{
				if ((this._EmpNum != value))
				{
					this.OnEmpNumChanging(value);
					this.SendPropertyChanging();
					this._EmpNum = value;
					this.SendPropertyChanged("EmpNum");
					this.OnEmpNumChanged();
				}
			}
		}
		
		[Column(Storage="_Sex", DbType="NVarChar(10)")]
		public string Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this.OnSexChanging(value);
					this.SendPropertyChanging();
					this._Sex = value;
					this.SendPropertyChanged("Sex");
					this.OnSexChanged();
				}
			}
		}
		
		[Column(Storage="_Age", DbType="Int")]
		public System.Nullable<int> Age
		{
			get
			{
				return this._Age;
			}
			set
			{
				if ((this._Age != value))
				{
					this.OnAgeChanging(value);
					this.SendPropertyChanging();
					this._Age = value;
					this.SendPropertyChanged("Age");
					this.OnAgeChanged();
				}
			}
		}
		
		[Column(Storage="_Birthday", DbType="DateTime")]
		public System.Nullable<System.DateTime> Birthday
		{
			get
			{
				return this._Birthday;
			}
			set
			{
				if ((this._Birthday != value))
				{
					this.OnBirthdayChanging(value);
					this.SendPropertyChanging();
					this._Birthday = value;
					this.SendPropertyChanged("Birthday");
					this.OnBirthdayChanged();
				}
			}
		}
		
		[Column(Storage="_NativePlace", DbType="NVarChar(300)")]
		public string NativePlace
		{
			get
			{
				return this._NativePlace;
			}
			set
			{
				if ((this._NativePlace != value))
				{
					this.OnNativePlaceChanging(value);
					this.SendPropertyChanging();
					this._NativePlace = value;
					this.SendPropertyChanged("NativePlace");
					this.OnNativePlaceChanged();
				}
			}
		}
		
		[Column(Storage="_Address", DbType="NVarChar(300)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[Column(Storage="_Nation", DbType="NVarChar(60)")]
		public string Nation
		{
			get
			{
				return this._Nation;
			}
			set
			{
				if ((this._Nation != value))
				{
					this.OnNationChanging(value);
					this.SendPropertyChanging();
					this._Nation = value;
					this.SendPropertyChanged("Nation");
					this.OnNationChanged();
				}
			}
		}
		
		[Column(Storage="_IDCode", DbType="NVarChar(30)")]
		public string IDCode
		{
			get
			{
				return this._IDCode;
			}
			set
			{
				if ((this._IDCode != value))
				{
					this.OnIDCodeChanging(value);
					this.SendPropertyChanging();
					this._IDCode = value;
					this.SendPropertyChanged("IDCode");
					this.OnIDCodeChanged();
				}
			}
		}
		
		[Column(Storage="_EnterDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EnterDate
		{
			get
			{
				return this._EnterDate;
			}
			set
			{
				if ((this._EnterDate != value))
				{
					this.OnEnterDateChanging(value);
					this.SendPropertyChanging();
					this._EnterDate = value;
					this.SendPropertyChanged("EnterDate");
					this.OnEnterDateChanged();
				}
			}
		}
		
		[Column(Storage="_ExitDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ExitDate
		{
			get
			{
				return this._ExitDate;
			}
			set
			{
				if ((this._ExitDate != value))
				{
					this.OnExitDateChanging(value);
					this.SendPropertyChanging();
					this._ExitDate = value;
					this.SendPropertyChanged("ExitDate");
					this.OnExitDateChanged();
				}
			}
		}
		
		[Column(Storage="_Expired", DbType="Bit")]
		public System.Nullable<bool> Expired
		{
			get
			{
				return this._Expired;
			}
			set
			{
				if ((this._Expired != value))
				{
					this.OnExpiredChanging(value);
					this.SendPropertyChanging();
					this._Expired = value;
					this.SendPropertyChanged("Expired");
					this.OnExpiredChanged();
				}
			}
		}
		
		[Column(Storage="_MobilePhone", DbType="NVarChar(20)")]
		public string MobilePhone
		{
			get
			{
				return this._MobilePhone;
			}
			set
			{
				if ((this._MobilePhone != value))
				{
					this.OnMobilePhoneChanging(value);
					this.SendPropertyChanging();
					this._MobilePhone = value;
					this.SendPropertyChanged("MobilePhone");
					this.OnMobilePhoneChanged();
				}
			}
		}
		
		[Column(Storage="_Phone", DbType="NVarChar(20)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[Association(Name="Employee_EmployeeUser", Storage="_EmployeeUsers", ThisKey="EmpID", OtherKey="EmpID")]
		public EntitySet<EmployeeUser> EmployeeUsers
		{
			get
			{
				return this._EmployeeUsers;
			}
			set
			{
				this._EmployeeUsers.Assign(value);
			}
		}
		
		[Association(Name="Employee_OrgEmployee", Storage="_OrgEmployees", ThisKey="EmpID", OtherKey="EmpID")]
		public EntitySet<OrgEmployee> OrgEmployees
		{
			get
			{
				return this._OrgEmployees;
			}
			set
			{
				this._OrgEmployees.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EmployeeUsers(EmployeeUser entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_EmployeeUsers(EmployeeUser entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_OrgEmployees(OrgEmployee entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_OrgEmployees(OrgEmployee entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
	}
	
	[Table(Name="dbo.EmployeeUser")]
	public partial class EmployeeUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _EmpID;
		
		private string _UserID;
		
		private EntityRef<Employee> _Employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmpIDChanging(string value);
    partial void OnEmpIDChanged();
    partial void OnUserIDChanging(string value);
    partial void OnUserIDChanged();
    #endregion
		
		public EmployeeUser()
		{
			this._Employee = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[Column(Storage="_EmpID", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string EmpID
		{
			get
			{
				return this._EmpID;
			}
			set
			{
				if ((this._EmpID != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmpIDChanging(value);
					this.SendPropertyChanging();
					this._EmpID = value;
					this.SendPropertyChanged("EmpID");
					this.OnEmpIDChanged();
				}
			}
		}
		
		[Column(Storage="_UserID", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[Association(Name="Employee_EmployeeUser", Storage="_Employee", ThisKey="EmpID", OtherKey="EmpID", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.EmployeeUsers.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.EmployeeUsers.Add(this);
						this._EmpID = value.EmpID;
					}
					else
					{
						this._EmpID = default(string);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Organization")]
	public partial class Organization : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _OrgID;
		
		private System.Nullable<long> _PID;
		
		private string _OrgType;
		
		private string _OrgCode;
		
		private string _OrgName;
		
		private EntitySet<OrgEmployee> _OrgEmployees;
		
		private EntityRef<OrganizationType> _OrganizationType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrgIDChanging(long value);
    partial void OnOrgIDChanged();
    partial void OnPIDChanging(System.Nullable<long> value);
    partial void OnPIDChanged();
    partial void OnOrgTypeChanging(string value);
    partial void OnOrgTypeChanged();
    partial void OnOrgCodeChanging(string value);
    partial void OnOrgCodeChanged();
    partial void OnOrgNameChanging(string value);
    partial void OnOrgNameChanged();
    #endregion
		
		public Organization()
		{
			this._OrgEmployees = new EntitySet<OrgEmployee>(new Action<OrgEmployee>(this.attach_OrgEmployees), new Action<OrgEmployee>(this.detach_OrgEmployees));
			this._OrganizationType = default(EntityRef<OrganizationType>);
			OnCreated();
		}
		
		[Column(Storage="_OrgID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long OrgID
		{
			get
			{
				return this._OrgID;
			}
			set
			{
				if ((this._OrgID != value))
				{
					this.OnOrgIDChanging(value);
					this.SendPropertyChanging();
					this._OrgID = value;
					this.SendPropertyChanged("OrgID");
					this.OnOrgIDChanged();
				}
			}
		}
		
		[Column(Storage="_PID", DbType="BigInt")]
		public System.Nullable<long> PID
		{
			get
			{
				return this._PID;
			}
			set
			{
				if ((this._PID != value))
				{
					this.OnPIDChanging(value);
					this.SendPropertyChanging();
					this._PID = value;
					this.SendPropertyChanged("PID");
					this.OnPIDChanged();
				}
			}
		}
		
		[Column(Storage="_OrgType", DbType="NVarChar(20)")]
		public string OrgType
		{
			get
			{
				return this._OrgType;
			}
			set
			{
				if ((this._OrgType != value))
				{
					if (this._OrganizationType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrgTypeChanging(value);
					this.SendPropertyChanging();
					this._OrgType = value;
					this.SendPropertyChanged("OrgType");
					this.OnOrgTypeChanged();
				}
			}
		}
		
		[Column(Storage="_OrgCode", DbType="NVarChar(20)")]
		public string OrgCode
		{
			get
			{
				return this._OrgCode;
			}
			set
			{
				if ((this._OrgCode != value))
				{
					this.OnOrgCodeChanging(value);
					this.SendPropertyChanging();
					this._OrgCode = value;
					this.SendPropertyChanged("OrgCode");
					this.OnOrgCodeChanged();
				}
			}
		}
		
		[Column(Storage="_OrgName", DbType="NVarChar(200)")]
		public string OrgName
		{
			get
			{
				return this._OrgName;
			}
			set
			{
				if ((this._OrgName != value))
				{
					this.OnOrgNameChanging(value);
					this.SendPropertyChanging();
					this._OrgName = value;
					this.SendPropertyChanged("OrgName");
					this.OnOrgNameChanged();
				}
			}
		}
		
		[Association(Name="Organization_OrgEmployee", Storage="_OrgEmployees", ThisKey="OrgID", OtherKey="OrgID")]
		public EntitySet<OrgEmployee> OrgEmployees
		{
			get
			{
				return this._OrgEmployees;
			}
			set
			{
				this._OrgEmployees.Assign(value);
			}
		}
		
		[Association(Name="OrganizationType_Organization", Storage="_OrganizationType", ThisKey="OrgType", OtherKey="OrgType", IsForeignKey=true)]
		public OrganizationType OrganizationType
		{
			get
			{
				return this._OrganizationType.Entity;
			}
			set
			{
				OrganizationType previousValue = this._OrganizationType.Entity;
				if (((previousValue != value) 
							|| (this._OrganizationType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrganizationType.Entity = null;
						previousValue.Organizations.Remove(this);
					}
					this._OrganizationType.Entity = value;
					if ((value != null))
					{
						value.Organizations.Add(this);
						this._OrgType = value.OrgType;
					}
					else
					{
						this._OrgType = default(string);
					}
					this.SendPropertyChanged("OrganizationType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrgEmployees(OrgEmployee entity)
		{
			this.SendPropertyChanging();
			entity.Organization = this;
		}
		
		private void detach_OrgEmployees(OrgEmployee entity)
		{
			this.SendPropertyChanging();
			entity.Organization = null;
		}
	}
	
	[Table(Name="dbo.OrganizationType")]
	public partial class OrganizationType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _OrgType;
		
		private string _Description;
		
		private EntitySet<Organization> _Organizations;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrgTypeChanging(string value);
    partial void OnOrgTypeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public OrganizationType()
		{
			this._Organizations = new EntitySet<Organization>(new Action<Organization>(this.attach_Organizations), new Action<Organization>(this.detach_Organizations));
			OnCreated();
		}
		
		[Column(Storage="_OrgType", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string OrgType
		{
			get
			{
				return this._OrgType;
			}
			set
			{
				if ((this._OrgType != value))
				{
					this.OnOrgTypeChanging(value);
					this.SendPropertyChanging();
					this._OrgType = value;
					this.SendPropertyChanged("OrgType");
					this.OnOrgTypeChanged();
				}
			}
		}
		
		[Column(Storage="_Description", DbType="NVarChar(200)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Association(Name="OrganizationType_Organization", Storage="_Organizations", ThisKey="OrgType", OtherKey="OrgType")]
		public EntitySet<Organization> Organizations
		{
			get
			{
				return this._Organizations;
			}
			set
			{
				this._Organizations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Organizations(Organization entity)
		{
			this.SendPropertyChanging();
			entity.OrganizationType = this;
		}
		
		private void detach_Organizations(Organization entity)
		{
			this.SendPropertyChanging();
			entity.OrganizationType = null;
		}
	}
	
	[Table(Name="dbo.OrgEmployee")]
	public partial class OrgEmployee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _OrgID;
		
		private string _EmpID;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<Organization> _Organization;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrgIDChanging(long value);
    partial void OnOrgIDChanged();
    partial void OnEmpIDChanging(string value);
    partial void OnEmpIDChanged();
    #endregion
		
		public OrgEmployee()
		{
			this._Employee = default(EntityRef<Employee>);
			this._Organization = default(EntityRef<Organization>);
			OnCreated();
		}
		
		[Column(Storage="_OrgID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long OrgID
		{
			get
			{
				return this._OrgID;
			}
			set
			{
				if ((this._OrgID != value))
				{
					if (this._Organization.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrgIDChanging(value);
					this.SendPropertyChanging();
					this._OrgID = value;
					this.SendPropertyChanged("OrgID");
					this.OnOrgIDChanged();
				}
			}
		}
		
		[Column(Storage="_EmpID", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string EmpID
		{
			get
			{
				return this._EmpID;
			}
			set
			{
				if ((this._EmpID != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmpIDChanging(value);
					this.SendPropertyChanging();
					this._EmpID = value;
					this.SendPropertyChanged("EmpID");
					this.OnEmpIDChanged();
				}
			}
		}
		
		[Association(Name="Employee_OrgEmployee", Storage="_Employee", ThisKey="EmpID", OtherKey="EmpID", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.OrgEmployees.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.OrgEmployees.Add(this);
						this._EmpID = value.EmpID;
					}
					else
					{
						this._EmpID = default(string);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		[Association(Name="Organization_OrgEmployee", Storage="_Organization", ThisKey="OrgID", OtherKey="OrgID", IsForeignKey=true)]
		public Organization Organization
		{
			get
			{
				return this._Organization.Entity;
			}
			set
			{
				Organization previousValue = this._Organization.Entity;
				if (((previousValue != value) 
							|| (this._Organization.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organization.Entity = null;
						previousValue.OrgEmployees.Remove(this);
					}
					this._Organization.Entity = value;
					if ((value != null))
					{
						value.OrgEmployees.Add(this);
						this._OrgID = value.OrgID;
					}
					else
					{
						this._OrgID = default(long);
					}
					this.SendPropertyChanged("Organization");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.PH_Unit")]
	public partial class PH_Unit
	{
		
		private string _Unit_NO;
		
		private string _Unit_Name;
		
		private string _Description;
		
		public PH_Unit()
		{
		}
		
		[Column(Storage="_Unit_NO", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string Unit_NO
		{
			get
			{
				return this._Unit_NO;
			}
			set
			{
				if ((this._Unit_NO != value))
				{
					this._Unit_NO = value;
				}
			}
		}
		
		[Column(Storage="_Unit_Name", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string Unit_Name
		{
			get
			{
				return this._Unit_Name;
			}
			set
			{
				if ((this._Unit_Name != value))
				{
					this._Unit_Name = value;
				}
			}
		}
		
		[Column(Storage="_Description", DbType="NVarChar(50)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.ProductRange")]
	public partial class ProductRange : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaterialGroup;
		
		private string _ProductRangeInfo;
		
		private string _Description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaterialGroupChanging(string value);
    partial void OnMaterialGroupChanged();
    partial void OnProductRangeInfoChanging(string value);
    partial void OnProductRangeInfoChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public ProductRange()
		{
			OnCreated();
		}
		
		[Column(Storage="_MaterialGroup", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaterialGroup
		{
			get
			{
				return this._MaterialGroup;
			}
			set
			{
				if ((this._MaterialGroup != value))
				{
					this.OnMaterialGroupChanging(value);
					this.SendPropertyChanging();
					this._MaterialGroup = value;
					this.SendPropertyChanged("MaterialGroup");
					this.OnMaterialGroupChanged();
				}
			}
		}
		
		[Column(Storage="_ProductRangeInfo", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ProductRangeInfo
		{
			get
			{
				return this._ProductRangeInfo;
			}
			set
			{
				if ((this._ProductRangeInfo != value))
				{
					this.OnProductRangeInfoChanging(value);
					this.SendPropertyChanging();
					this._ProductRangeInfo = value;
					this.SendPropertyChanged("ProductRangeInfo");
					this.OnProductRangeInfoChanged();
				}
			}
		}
		
		[Column(Storage="_Description", DbType="NVarChar(50)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.BI_View_CustomerTypeSize")]
	public partial class BI_View_CustomerTypeSize
	{
		
		private string _CustomerCode;
		
		private string _CodeTypeID;
		
		private string _PHSize;
		
		private string _CustSize;
		
		private System.Nullable<int> _IndexID;
		
		private string _Remark;
		
		public BI_View_CustomerTypeSize()
		{
		}
		
		[Column(Storage="_CustomerCode", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string CustomerCode
		{
			get
			{
				return this._CustomerCode;
			}
			set
			{
				if ((this._CustomerCode != value))
				{
					this._CustomerCode = value;
				}
			}
		}
		
		[Column(Storage="_CodeTypeID", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string CodeTypeID
		{
			get
			{
				return this._CodeTypeID;
			}
			set
			{
				if ((this._CodeTypeID != value))
				{
					this._CodeTypeID = value;
				}
			}
		}
		
		[Column(Storage="_PHSize", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string PHSize
		{
			get
			{
				return this._PHSize;
			}
			set
			{
				if ((this._PHSize != value))
				{
					this._PHSize = value;
				}
			}
		}
		
		[Column(Storage="_CustSize", DbType="VarChar(10)")]
		public string CustSize
		{
			get
			{
				return this._CustSize;
			}
			set
			{
				if ((this._CustSize != value))
				{
					this._CustSize = value;
				}
			}
		}
		
		[Column(Storage="_IndexID", DbType="Int")]
		public System.Nullable<int> IndexID
		{
			get
			{
				return this._IndexID;
			}
			set
			{
				if ((this._IndexID != value))
				{
					this._IndexID = value;
				}
			}
		}
		
		[Column(Storage="_Remark", DbType="NVarChar(50)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this._Remark = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.Customer")]
	public partial class Customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CustomerCode;
		
		private string _CustomerName;
		
		private string _CustomerAddress;
		
		private string _CustomerTelePhone;
		
		private string _CustomerRepresent;
		
		private System.Nullable<int> _UnitPriceMethod;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomerCodeChanging(string value);
    partial void OnCustomerCodeChanged();
    partial void OnCustomerNameChanging(string value);
    partial void OnCustomerNameChanged();
    partial void OnCustomerAddressChanging(string value);
    partial void OnCustomerAddressChanged();
    partial void OnCustomerTelePhoneChanging(string value);
    partial void OnCustomerTelePhoneChanged();
    partial void OnCustomerRepresentChanging(string value);
    partial void OnCustomerRepresentChanged();
    partial void OnUnitPriceMethodChanging(System.Nullable<int> value);
    partial void OnUnitPriceMethodChanged();
    #endregion
		
		public Customer()
		{
			OnCreated();
		}
		
		[Column(Storage="_CustomerCode", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CustomerCode
		{
			get
			{
				return this._CustomerCode;
			}
			set
			{
				if ((this._CustomerCode != value))
				{
					this.OnCustomerCodeChanging(value);
					this.SendPropertyChanging();
					this._CustomerCode = value;
					this.SendPropertyChanged("CustomerCode");
					this.OnCustomerCodeChanged();
				}
			}
		}
		
		[Column(Storage="_CustomerName", DbType="VarChar(50)")]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this.OnCustomerNameChanging(value);
					this.SendPropertyChanging();
					this._CustomerName = value;
					this.SendPropertyChanged("CustomerName");
					this.OnCustomerNameChanged();
				}
			}
		}
		
		[Column(Storage="_CustomerAddress", DbType="VarChar(100)")]
		public string CustomerAddress
		{
			get
			{
				return this._CustomerAddress;
			}
			set
			{
				if ((this._CustomerAddress != value))
				{
					this.OnCustomerAddressChanging(value);
					this.SendPropertyChanging();
					this._CustomerAddress = value;
					this.SendPropertyChanged("CustomerAddress");
					this.OnCustomerAddressChanged();
				}
			}
		}
		
		[Column(Storage="_CustomerTelePhone", DbType="VarChar(50)")]
		public string CustomerTelePhone
		{
			get
			{
				return this._CustomerTelePhone;
			}
			set
			{
				if ((this._CustomerTelePhone != value))
				{
					this.OnCustomerTelePhoneChanging(value);
					this.SendPropertyChanging();
					this._CustomerTelePhone = value;
					this.SendPropertyChanged("CustomerTelePhone");
					this.OnCustomerTelePhoneChanged();
				}
			}
		}
		
		[Column(Storage="_CustomerRepresent", DbType="VarChar(100)")]
		public string CustomerRepresent
		{
			get
			{
				return this._CustomerRepresent;
			}
			set
			{
				if ((this._CustomerRepresent != value))
				{
					this.OnCustomerRepresentChanging(value);
					this.SendPropertyChanging();
					this._CustomerRepresent = value;
					this.SendPropertyChanged("CustomerRepresent");
					this.OnCustomerRepresentChanged();
				}
			}
		}
		
		[Column(Storage="_UnitPriceMethod", DbType="Int")]
		public System.Nullable<int> UnitPriceMethod
		{
			get
			{
				return this._UnitPriceMethod;
			}
			set
			{
				if ((this._UnitPriceMethod != value))
				{
					this.OnUnitPriceMethodChanging(value);
					this.SendPropertyChanging();
					this._UnitPriceMethod = value;
					this.SendPropertyChanged("UnitPriceMethod");
					this.OnUnitPriceMethodChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Dimension")]
	public partial class Dimension : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Seq;
		
		private string _DimensionNo;
		
		private string _ItemColor;
		
		private System.Nullable<bool> _ColorIssue;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSeqChanging(string value);
    partial void OnSeqChanged();
    partial void OnDimensionNoChanging(string value);
    partial void OnDimensionNoChanged();
    partial void OnItemColorChanging(string value);
    partial void OnItemColorChanged();
    partial void OnColorIssueChanging(System.Nullable<bool> value);
    partial void OnColorIssueChanged();
    #endregion
		
		public Dimension()
		{
			OnCreated();
		}
		
		[Column(Storage="_Seq", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Seq
		{
			get
			{
				return this._Seq;
			}
			set
			{
				if ((this._Seq != value))
				{
					this.OnSeqChanging(value);
					this.SendPropertyChanging();
					this._Seq = value;
					this.SendPropertyChanged("Seq");
					this.OnSeqChanged();
				}
			}
		}
		
		[Column(Storage="_DimensionNo", DbType="NVarChar(50)")]
		public string DimensionNo
		{
			get
			{
				return this._DimensionNo;
			}
			set
			{
				if ((this._DimensionNo != value))
				{
					this.OnDimensionNoChanging(value);
					this.SendPropertyChanging();
					this._DimensionNo = value;
					this.SendPropertyChanged("DimensionNo");
					this.OnDimensionNoChanged();
				}
			}
		}
		
		[Column(Storage="_ItemColor", DbType="NVarChar(50)")]
		public string ItemColor
		{
			get
			{
				return this._ItemColor;
			}
			set
			{
				if ((this._ItemColor != value))
				{
					this.OnItemColorChanging(value);
					this.SendPropertyChanging();
					this._ItemColor = value;
					this.SendPropertyChanged("ItemColor");
					this.OnItemColorChanged();
				}
			}
		}
		
		[Column(Storage="_ColorIssue", DbType="Bit")]
		public System.Nullable<bool> ColorIssue
		{
			get
			{
				return this._ColorIssue;
			}
			set
			{
				if ((this._ColorIssue != value))
				{
					this.OnColorIssueChanging(value);
					this.SendPropertyChanging();
					this._ColorIssue = value;
					this.SendPropertyChanged("ColorIssue");
					this.OnColorIssueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.ShipmentLeadtime")]
	public partial class ShipmentLeadtime : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ERPSupplier;
		
		private string _MaterialGroup;
		
		private string _ShipMode;
		
		private string _Factory;
		
		private System.Nullable<int> _Leadtime;
		
		private EntityRef<SupplierProfile> _SupplierProfile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnERPSupplierChanging(string value);
    partial void OnERPSupplierChanged();
    partial void OnMaterialGroupChanging(string value);
    partial void OnMaterialGroupChanged();
    partial void OnShipModeChanging(string value);
    partial void OnShipModeChanged();
    partial void OnFactoryChanging(string value);
    partial void OnFactoryChanged();
    partial void OnLeadtimeChanging(System.Nullable<int> value);
    partial void OnLeadtimeChanged();
    #endregion
		
		public ShipmentLeadtime()
		{
			this._SupplierProfile = default(EntityRef<SupplierProfile>);
			OnCreated();
		}
		
		[Column(Storage="_ERPSupplier", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ERPSupplier
		{
			get
			{
				return this._ERPSupplier;
			}
			set
			{
				if ((this._ERPSupplier != value))
				{
					if (this._SupplierProfile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnERPSupplierChanging(value);
					this.SendPropertyChanging();
					this._ERPSupplier = value;
					this.SendPropertyChanged("ERPSupplier");
					this.OnERPSupplierChanged();
				}
			}
		}
		
		[Column(Storage="_MaterialGroup", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaterialGroup
		{
			get
			{
				return this._MaterialGroup;
			}
			set
			{
				if ((this._MaterialGroup != value))
				{
					this.OnMaterialGroupChanging(value);
					this.SendPropertyChanging();
					this._MaterialGroup = value;
					this.SendPropertyChanged("MaterialGroup");
					this.OnMaterialGroupChanged();
				}
			}
		}
		
		[Column(Storage="_ShipMode", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ShipMode
		{
			get
			{
				return this._ShipMode;
			}
			set
			{
				if ((this._ShipMode != value))
				{
					this.OnShipModeChanging(value);
					this.SendPropertyChanging();
					this._ShipMode = value;
					this.SendPropertyChanged("ShipMode");
					this.OnShipModeChanged();
				}
			}
		}
		
		[Column(Storage="_Factory", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Factory
		{
			get
			{
				return this._Factory;
			}
			set
			{
				if ((this._Factory != value))
				{
					this.OnFactoryChanging(value);
					this.SendPropertyChanging();
					this._Factory = value;
					this.SendPropertyChanged("Factory");
					this.OnFactoryChanged();
				}
			}
		}
		
		[Column(Storage="_Leadtime", DbType="Int")]
		public System.Nullable<int> Leadtime
		{
			get
			{
				return this._Leadtime;
			}
			set
			{
				if ((this._Leadtime != value))
				{
					this.OnLeadtimeChanging(value);
					this.SendPropertyChanging();
					this._Leadtime = value;
					this.SendPropertyChanged("Leadtime");
					this.OnLeadtimeChanged();
				}
			}
		}
		
		[Association(Name="SupplierProfile_ShipmentLeadtime", Storage="_SupplierProfile", ThisKey="ERPSupplier", OtherKey="ERPSupplier", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public SupplierProfile SupplierProfile
		{
			get
			{
				return this._SupplierProfile.Entity;
			}
			set
			{
				SupplierProfile previousValue = this._SupplierProfile.Entity;
				if (((previousValue != value) 
							|| (this._SupplierProfile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SupplierProfile.Entity = null;
						previousValue.ShipmentLeadtimes.Remove(this);
					}
					this._SupplierProfile.Entity = value;
					if ((value != null))
					{
						value.ShipmentLeadtimes.Add(this);
						this._ERPSupplier = value.ERPSupplier;
					}
					else
					{
						this._ERPSupplier = default(string);
					}
					this.SendPropertyChanged("SupplierProfile");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.SupplierProductRange")]
	public partial class SupplierProductRange : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ERPSupplier;
		
		private string _MaterialGroup;
		
		private string _Description;
		
		private string _ProductRange;
		
		private System.Nullable<bool> _IsSelect;
		
		private EntityRef<SupplierProfile> _SupplierProfile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnERPSupplierChanging(string value);
    partial void OnERPSupplierChanged();
    partial void OnMaterialGroupChanging(string value);
    partial void OnMaterialGroupChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnProductRangeChanging(string value);
    partial void OnProductRangeChanged();
    partial void OnIsSelectChanging(System.Nullable<bool> value);
    partial void OnIsSelectChanged();
    #endregion
		
		public SupplierProductRange()
		{
			this._SupplierProfile = default(EntityRef<SupplierProfile>);
			OnCreated();
		}
		
		[Column(Storage="_ERPSupplier", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ERPSupplier
		{
			get
			{
				return this._ERPSupplier;
			}
			set
			{
				if ((this._ERPSupplier != value))
				{
					if (this._SupplierProfile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnERPSupplierChanging(value);
					this.SendPropertyChanging();
					this._ERPSupplier = value;
					this.SendPropertyChanged("ERPSupplier");
					this.OnERPSupplierChanged();
				}
			}
		}
		
		[Column(Storage="_MaterialGroup", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaterialGroup
		{
			get
			{
				return this._MaterialGroup;
			}
			set
			{
				if ((this._MaterialGroup != value))
				{
					this.OnMaterialGroupChanging(value);
					this.SendPropertyChanging();
					this._MaterialGroup = value;
					this.SendPropertyChanged("MaterialGroup");
					this.OnMaterialGroupChanged();
				}
			}
		}
		
		[Column(Storage="_Description", DbType="VarChar(250)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_ProductRange", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ProductRange
		{
			get
			{
				return this._ProductRange;
			}
			set
			{
				if ((this._ProductRange != value))
				{
					this.OnProductRangeChanging(value);
					this.SendPropertyChanging();
					this._ProductRange = value;
					this.SendPropertyChanged("ProductRange");
					this.OnProductRangeChanged();
				}
			}
		}
		
		[Column(Storage="_IsSelect", DbType="Bit")]
		public System.Nullable<bool> IsSelect
		{
			get
			{
				return this._IsSelect;
			}
			set
			{
				if ((this._IsSelect != value))
				{
					this.OnIsSelectChanging(value);
					this.SendPropertyChanging();
					this._IsSelect = value;
					this.SendPropertyChanged("IsSelect");
					this.OnIsSelectChanged();
				}
			}
		}
		
		[Association(Name="SupplierProfile_SupplierProductRange", Storage="_SupplierProfile", ThisKey="ERPSupplier", OtherKey="ERPSupplier", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public SupplierProfile SupplierProfile
		{
			get
			{
				return this._SupplierProfile.Entity;
			}
			set
			{
				SupplierProfile previousValue = this._SupplierProfile.Entity;
				if (((previousValue != value) 
							|| (this._SupplierProfile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SupplierProfile.Entity = null;
						previousValue.SupplierProductRanges.Remove(this);
					}
					this._SupplierProfile.Entity = value;
					if ((value != null))
					{
						value.SupplierProductRanges.Add(this);
						this._ERPSupplier = value.ERPSupplier;
					}
					else
					{
						this._ERPSupplier = default(string);
					}
					this.SendPropertyChanged("SupplierProfile");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Incoterms")]
	public partial class Incoterm : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<int> _No;
		
		private string _Code;
		
		private string _EngDes;
		
		private string _CHIDes;
		
		private string _ThaiDesc;
		
		private System.Nullable<bool> _PointOfOrigin;
		
		private System.Nullable<bool> _PlaceOfOrigin;
		
		private System.Nullable<bool> _PortOfOrigin;
		
		private System.Nullable<bool> _PortOfDestination;
		
		private System.Nullable<bool> _PlaceOfDestination;
		
		private System.Nullable<bool> _PointOfDestination;
		
		private System.Nullable<bool> _Ocean;
		
		private System.Nullable<bool> _Air;
		
		private System.Nullable<bool> _Land;
		
		private System.Nullable<bool> _MutliWay;
		
		private System.Nullable<bool> _ShipMode;
		
		private System.Nullable<bool> _OriginInlandFreight;
		
		private System.Nullable<bool> _OriginForwarder;
		
		private System.Nullable<bool> _OriginCustomsClearance;
		
		private System.Nullable<bool> _OriginCustomsDutiesTax;
		
		private System.Nullable<bool> _OriginTerminal;
		
		private System.Nullable<bool> _CarriageFreight;
		
		private System.Nullable<bool> _MainAirInsurance;
		
		private System.Nullable<bool> _DestinationTerminal;
		
		private System.Nullable<bool> _DestinationCustomsClearance;
		
		private System.Nullable<bool> _DestinationCustomsDutiesTax;
		
		private System.Nullable<bool> _DestinationForwarder;
		
		private System.Nullable<bool> _DestinationInlandFreight;
		
		private string _Remark;
		
		private string _Symbol;
		
		private System.Nullable<bool> _SellerOriginInlandFreight;
		
		private System.Nullable<bool> _SellerOriginForwarder;
		
		private System.Nullable<bool> _SellerOriginCustomsClearance;
		
		private System.Nullable<bool> _SellerOriginCustomsDutiesTax;
		
		private System.Nullable<bool> _SellerOriginTerminal;
		
		private System.Nullable<bool> _SellerCarriageFreight;
		
		private System.Nullable<bool> _SellerMainAirInsurance;
		
		private System.Nullable<bool> _SellerDestinationTerminal;
		
		private System.Nullable<bool> _SellerDestinationCustomsClearance;
		
		private System.Nullable<bool> _SellerDestinationCustomsDutiesTax;
		
		private System.Nullable<bool> _SellerDestinationForwarder;
		
		private System.Nullable<bool> _SellerDestinationInlandFreight;
		
		private string _TransitPointDescEN;
		
		private string _TransitPointDescCH;
		
		private string _TransitPointDescTH;
		
		private string _TransitPointDeliveryEN;
		
		private string _TransitPointDeliveryCH;
		
		private string _TransitPointDeliveryTH;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNoChanging(System.Nullable<int> value);
    partial void OnNoChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnEngDesChanging(string value);
    partial void OnEngDesChanged();
    partial void OnCHIDesChanging(string value);
    partial void OnCHIDesChanged();
    partial void OnThaiDescChanging(string value);
    partial void OnThaiDescChanged();
    partial void OnPointOfOriginChanging(System.Nullable<bool> value);
    partial void OnPointOfOriginChanged();
    partial void OnPlaceOfOriginChanging(System.Nullable<bool> value);
    partial void OnPlaceOfOriginChanged();
    partial void OnPortOfOriginChanging(System.Nullable<bool> value);
    partial void OnPortOfOriginChanged();
    partial void OnPortOfDestinationChanging(System.Nullable<bool> value);
    partial void OnPortOfDestinationChanged();
    partial void OnPlaceOfDestinationChanging(System.Nullable<bool> value);
    partial void OnPlaceOfDestinationChanged();
    partial void OnPointOfDestinationChanging(System.Nullable<bool> value);
    partial void OnPointOfDestinationChanged();
    partial void OnOceanChanging(System.Nullable<bool> value);
    partial void OnOceanChanged();
    partial void OnAirChanging(System.Nullable<bool> value);
    partial void OnAirChanged();
    partial void OnLandChanging(System.Nullable<bool> value);
    partial void OnLandChanged();
    partial void OnMutliWayChanging(System.Nullable<bool> value);
    partial void OnMutliWayChanged();
    partial void OnShipModeChanging(System.Nullable<bool> value);
    partial void OnShipModeChanged();
    partial void OnOriginInlandFreightChanging(System.Nullable<bool> value);
    partial void OnOriginInlandFreightChanged();
    partial void OnOriginForwarderChanging(System.Nullable<bool> value);
    partial void OnOriginForwarderChanged();
    partial void OnOriginCustomsClearanceChanging(System.Nullable<bool> value);
    partial void OnOriginCustomsClearanceChanged();
    partial void OnOriginCustomsDutiesTaxChanging(System.Nullable<bool> value);
    partial void OnOriginCustomsDutiesTaxChanged();
    partial void OnOriginTerminalChanging(System.Nullable<bool> value);
    partial void OnOriginTerminalChanged();
    partial void OnCarriageFreightChanging(System.Nullable<bool> value);
    partial void OnCarriageFreightChanged();
    partial void OnMainAirInsuranceChanging(System.Nullable<bool> value);
    partial void OnMainAirInsuranceChanged();
    partial void OnDestinationTerminalChanging(System.Nullable<bool> value);
    partial void OnDestinationTerminalChanged();
    partial void OnDestinationCustomsClearanceChanging(System.Nullable<bool> value);
    partial void OnDestinationCustomsClearanceChanged();
    partial void OnDestinationCustomsDutiesTaxChanging(System.Nullable<bool> value);
    partial void OnDestinationCustomsDutiesTaxChanged();
    partial void OnDestinationForwarderChanging(System.Nullable<bool> value);
    partial void OnDestinationForwarderChanged();
    partial void OnDestinationInlandFreightChanging(System.Nullable<bool> value);
    partial void OnDestinationInlandFreightChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnSymbolChanging(string value);
    partial void OnSymbolChanged();
    partial void OnSellerOriginInlandFreightChanging(System.Nullable<bool> value);
    partial void OnSellerOriginInlandFreightChanged();
    partial void OnSellerOriginForwarderChanging(System.Nullable<bool> value);
    partial void OnSellerOriginForwarderChanged();
    partial void OnSellerOriginCustomsClearanceChanging(System.Nullable<bool> value);
    partial void OnSellerOriginCustomsClearanceChanged();
    partial void OnSellerOriginCustomsDutiesTaxChanging(System.Nullable<bool> value);
    partial void OnSellerOriginCustomsDutiesTaxChanged();
    partial void OnSellerOriginTerminalChanging(System.Nullable<bool> value);
    partial void OnSellerOriginTerminalChanged();
    partial void OnSellerCarriageFreightChanging(System.Nullable<bool> value);
    partial void OnSellerCarriageFreightChanged();
    partial void OnSellerMainAirInsuranceChanging(System.Nullable<bool> value);
    partial void OnSellerMainAirInsuranceChanged();
    partial void OnSellerDestinationTerminalChanging(System.Nullable<bool> value);
    partial void OnSellerDestinationTerminalChanged();
    partial void OnSellerDestinationCustomsClearanceChanging(System.Nullable<bool> value);
    partial void OnSellerDestinationCustomsClearanceChanged();
    partial void OnSellerDestinationCustomsDutiesTaxChanging(System.Nullable<bool> value);
    partial void OnSellerDestinationCustomsDutiesTaxChanged();
    partial void OnSellerDestinationForwarderChanging(System.Nullable<bool> value);
    partial void OnSellerDestinationForwarderChanged();
    partial void OnSellerDestinationInlandFreightChanging(System.Nullable<bool> value);
    partial void OnSellerDestinationInlandFreightChanged();
    partial void OnTransitPointDescENChanging(string value);
    partial void OnTransitPointDescENChanged();
    partial void OnTransitPointDescCHChanging(string value);
    partial void OnTransitPointDescCHChanged();
    partial void OnTransitPointDescTHChanging(string value);
    partial void OnTransitPointDescTHChanged();
    partial void OnTransitPointDeliveryENChanging(string value);
    partial void OnTransitPointDeliveryENChanged();
    partial void OnTransitPointDeliveryCHChanging(string value);
    partial void OnTransitPointDeliveryCHChanged();
    partial void OnTransitPointDeliveryTHChanging(string value);
    partial void OnTransitPointDeliveryTHChanged();
    #endregion
		
		public Incoterm()
		{
			OnCreated();
		}
		
		[Column(Storage="_No", DbType="Int")]
		public System.Nullable<int> No
		{
			get
			{
				return this._No;
			}
			set
			{
				if ((this._No != value))
				{
					this.OnNoChanging(value);
					this.SendPropertyChanging();
					this._No = value;
					this.SendPropertyChanged("No");
					this.OnNoChanged();
				}
			}
		}
		
		[Column(Storage="_Code", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[Column(Storage="_EngDes", DbType="NVarChar(500)")]
		public string EngDes
		{
			get
			{
				return this._EngDes;
			}
			set
			{
				if ((this._EngDes != value))
				{
					this.OnEngDesChanging(value);
					this.SendPropertyChanging();
					this._EngDes = value;
					this.SendPropertyChanged("EngDes");
					this.OnEngDesChanged();
				}
			}
		}
		
		[Column(Storage="_CHIDes", DbType="NVarChar(500)")]
		public string CHIDes
		{
			get
			{
				return this._CHIDes;
			}
			set
			{
				if ((this._CHIDes != value))
				{
					this.OnCHIDesChanging(value);
					this.SendPropertyChanging();
					this._CHIDes = value;
					this.SendPropertyChanged("CHIDes");
					this.OnCHIDesChanged();
				}
			}
		}
		
		[Column(Storage="_ThaiDesc", DbType="NVarChar(500)")]
		public string ThaiDesc
		{
			get
			{
				return this._ThaiDesc;
			}
			set
			{
				if ((this._ThaiDesc != value))
				{
					this.OnThaiDescChanging(value);
					this.SendPropertyChanging();
					this._ThaiDesc = value;
					this.SendPropertyChanged("ThaiDesc");
					this.OnThaiDescChanged();
				}
			}
		}
		
		[Column(Storage="_PointOfOrigin", DbType="Bit")]
		public System.Nullable<bool> PointOfOrigin
		{
			get
			{
				return this._PointOfOrigin;
			}
			set
			{
				if ((this._PointOfOrigin != value))
				{
					this.OnPointOfOriginChanging(value);
					this.SendPropertyChanging();
					this._PointOfOrigin = value;
					this.SendPropertyChanged("PointOfOrigin");
					this.OnPointOfOriginChanged();
				}
			}
		}
		
		[Column(Storage="_PlaceOfOrigin", DbType="Bit")]
		public System.Nullable<bool> PlaceOfOrigin
		{
			get
			{
				return this._PlaceOfOrigin;
			}
			set
			{
				if ((this._PlaceOfOrigin != value))
				{
					this.OnPlaceOfOriginChanging(value);
					this.SendPropertyChanging();
					this._PlaceOfOrigin = value;
					this.SendPropertyChanged("PlaceOfOrigin");
					this.OnPlaceOfOriginChanged();
				}
			}
		}
		
		[Column(Storage="_PortOfOrigin", DbType="Bit")]
		public System.Nullable<bool> PortOfOrigin
		{
			get
			{
				return this._PortOfOrigin;
			}
			set
			{
				if ((this._PortOfOrigin != value))
				{
					this.OnPortOfOriginChanging(value);
					this.SendPropertyChanging();
					this._PortOfOrigin = value;
					this.SendPropertyChanged("PortOfOrigin");
					this.OnPortOfOriginChanged();
				}
			}
		}
		
		[Column(Storage="_PortOfDestination", DbType="Bit")]
		public System.Nullable<bool> PortOfDestination
		{
			get
			{
				return this._PortOfDestination;
			}
			set
			{
				if ((this._PortOfDestination != value))
				{
					this.OnPortOfDestinationChanging(value);
					this.SendPropertyChanging();
					this._PortOfDestination = value;
					this.SendPropertyChanged("PortOfDestination");
					this.OnPortOfDestinationChanged();
				}
			}
		}
		
		[Column(Storage="_PlaceOfDestination", DbType="Bit")]
		public System.Nullable<bool> PlaceOfDestination
		{
			get
			{
				return this._PlaceOfDestination;
			}
			set
			{
				if ((this._PlaceOfDestination != value))
				{
					this.OnPlaceOfDestinationChanging(value);
					this.SendPropertyChanging();
					this._PlaceOfDestination = value;
					this.SendPropertyChanged("PlaceOfDestination");
					this.OnPlaceOfDestinationChanged();
				}
			}
		}
		
		[Column(Storage="_PointOfDestination", DbType="Bit")]
		public System.Nullable<bool> PointOfDestination
		{
			get
			{
				return this._PointOfDestination;
			}
			set
			{
				if ((this._PointOfDestination != value))
				{
					this.OnPointOfDestinationChanging(value);
					this.SendPropertyChanging();
					this._PointOfDestination = value;
					this.SendPropertyChanged("PointOfDestination");
					this.OnPointOfDestinationChanged();
				}
			}
		}
		
		[Column(Storage="_Ocean", DbType="Bit")]
		public System.Nullable<bool> Ocean
		{
			get
			{
				return this._Ocean;
			}
			set
			{
				if ((this._Ocean != value))
				{
					this.OnOceanChanging(value);
					this.SendPropertyChanging();
					this._Ocean = value;
					this.SendPropertyChanged("Ocean");
					this.OnOceanChanged();
				}
			}
		}
		
		[Column(Storage="_Air", DbType="Bit")]
		public System.Nullable<bool> Air
		{
			get
			{
				return this._Air;
			}
			set
			{
				if ((this._Air != value))
				{
					this.OnAirChanging(value);
					this.SendPropertyChanging();
					this._Air = value;
					this.SendPropertyChanged("Air");
					this.OnAirChanged();
				}
			}
		}
		
		[Column(Storage="_Land", DbType="Bit")]
		public System.Nullable<bool> Land
		{
			get
			{
				return this._Land;
			}
			set
			{
				if ((this._Land != value))
				{
					this.OnLandChanging(value);
					this.SendPropertyChanging();
					this._Land = value;
					this.SendPropertyChanged("Land");
					this.OnLandChanged();
				}
			}
		}
		
		[Column(Storage="_MutliWay", DbType="Bit")]
		public System.Nullable<bool> MutliWay
		{
			get
			{
				return this._MutliWay;
			}
			set
			{
				if ((this._MutliWay != value))
				{
					this.OnMutliWayChanging(value);
					this.SendPropertyChanging();
					this._MutliWay = value;
					this.SendPropertyChanged("MutliWay");
					this.OnMutliWayChanged();
				}
			}
		}
		
		[Column(Storage="_ShipMode", DbType="Bit")]
		public System.Nullable<bool> ShipMode
		{
			get
			{
				return this._ShipMode;
			}
			set
			{
				if ((this._ShipMode != value))
				{
					this.OnShipModeChanging(value);
					this.SendPropertyChanging();
					this._ShipMode = value;
					this.SendPropertyChanged("ShipMode");
					this.OnShipModeChanged();
				}
			}
		}
		
		[Column(Storage="_OriginInlandFreight", DbType="Bit")]
		public System.Nullable<bool> OriginInlandFreight
		{
			get
			{
				return this._OriginInlandFreight;
			}
			set
			{
				if ((this._OriginInlandFreight != value))
				{
					this.OnOriginInlandFreightChanging(value);
					this.SendPropertyChanging();
					this._OriginInlandFreight = value;
					this.SendPropertyChanged("OriginInlandFreight");
					this.OnOriginInlandFreightChanged();
				}
			}
		}
		
		[Column(Storage="_OriginForwarder", DbType="Bit")]
		public System.Nullable<bool> OriginForwarder
		{
			get
			{
				return this._OriginForwarder;
			}
			set
			{
				if ((this._OriginForwarder != value))
				{
					this.OnOriginForwarderChanging(value);
					this.SendPropertyChanging();
					this._OriginForwarder = value;
					this.SendPropertyChanged("OriginForwarder");
					this.OnOriginForwarderChanged();
				}
			}
		}
		
		[Column(Storage="_OriginCustomsClearance", DbType="Bit")]
		public System.Nullable<bool> OriginCustomsClearance
		{
			get
			{
				return this._OriginCustomsClearance;
			}
			set
			{
				if ((this._OriginCustomsClearance != value))
				{
					this.OnOriginCustomsClearanceChanging(value);
					this.SendPropertyChanging();
					this._OriginCustomsClearance = value;
					this.SendPropertyChanged("OriginCustomsClearance");
					this.OnOriginCustomsClearanceChanged();
				}
			}
		}
		
		[Column(Storage="_OriginCustomsDutiesTax", DbType="Bit")]
		public System.Nullable<bool> OriginCustomsDutiesTax
		{
			get
			{
				return this._OriginCustomsDutiesTax;
			}
			set
			{
				if ((this._OriginCustomsDutiesTax != value))
				{
					this.OnOriginCustomsDutiesTaxChanging(value);
					this.SendPropertyChanging();
					this._OriginCustomsDutiesTax = value;
					this.SendPropertyChanged("OriginCustomsDutiesTax");
					this.OnOriginCustomsDutiesTaxChanged();
				}
			}
		}
		
		[Column(Storage="_OriginTerminal", DbType="Bit")]
		public System.Nullable<bool> OriginTerminal
		{
			get
			{
				return this._OriginTerminal;
			}
			set
			{
				if ((this._OriginTerminal != value))
				{
					this.OnOriginTerminalChanging(value);
					this.SendPropertyChanging();
					this._OriginTerminal = value;
					this.SendPropertyChanged("OriginTerminal");
					this.OnOriginTerminalChanged();
				}
			}
		}
		
		[Column(Storage="_CarriageFreight", DbType="Bit")]
		public System.Nullable<bool> CarriageFreight
		{
			get
			{
				return this._CarriageFreight;
			}
			set
			{
				if ((this._CarriageFreight != value))
				{
					this.OnCarriageFreightChanging(value);
					this.SendPropertyChanging();
					this._CarriageFreight = value;
					this.SendPropertyChanged("CarriageFreight");
					this.OnCarriageFreightChanged();
				}
			}
		}
		
		[Column(Storage="_MainAirInsurance", DbType="Bit")]
		public System.Nullable<bool> MainAirInsurance
		{
			get
			{
				return this._MainAirInsurance;
			}
			set
			{
				if ((this._MainAirInsurance != value))
				{
					this.OnMainAirInsuranceChanging(value);
					this.SendPropertyChanging();
					this._MainAirInsurance = value;
					this.SendPropertyChanged("MainAirInsurance");
					this.OnMainAirInsuranceChanged();
				}
			}
		}
		
		[Column(Storage="_DestinationTerminal", DbType="Bit")]
		public System.Nullable<bool> DestinationTerminal
		{
			get
			{
				return this._DestinationTerminal;
			}
			set
			{
				if ((this._DestinationTerminal != value))
				{
					this.OnDestinationTerminalChanging(value);
					this.SendPropertyChanging();
					this._DestinationTerminal = value;
					this.SendPropertyChanged("DestinationTerminal");
					this.OnDestinationTerminalChanged();
				}
			}
		}
		
		[Column(Storage="_DestinationCustomsClearance", DbType="Bit")]
		public System.Nullable<bool> DestinationCustomsClearance
		{
			get
			{
				return this._DestinationCustomsClearance;
			}
			set
			{
				if ((this._DestinationCustomsClearance != value))
				{
					this.OnDestinationCustomsClearanceChanging(value);
					this.SendPropertyChanging();
					this._DestinationCustomsClearance = value;
					this.SendPropertyChanged("DestinationCustomsClearance");
					this.OnDestinationCustomsClearanceChanged();
				}
			}
		}
		
		[Column(Storage="_DestinationCustomsDutiesTax", DbType="Bit")]
		public System.Nullable<bool> DestinationCustomsDutiesTax
		{
			get
			{
				return this._DestinationCustomsDutiesTax;
			}
			set
			{
				if ((this._DestinationCustomsDutiesTax != value))
				{
					this.OnDestinationCustomsDutiesTaxChanging(value);
					this.SendPropertyChanging();
					this._DestinationCustomsDutiesTax = value;
					this.SendPropertyChanged("DestinationCustomsDutiesTax");
					this.OnDestinationCustomsDutiesTaxChanged();
				}
			}
		}
		
		[Column(Storage="_DestinationForwarder", DbType="Bit")]
		public System.Nullable<bool> DestinationForwarder
		{
			get
			{
				return this._DestinationForwarder;
			}
			set
			{
				if ((this._DestinationForwarder != value))
				{
					this.OnDestinationForwarderChanging(value);
					this.SendPropertyChanging();
					this._DestinationForwarder = value;
					this.SendPropertyChanged("DestinationForwarder");
					this.OnDestinationForwarderChanged();
				}
			}
		}
		
		[Column(Storage="_DestinationInlandFreight", DbType="Bit")]
		public System.Nullable<bool> DestinationInlandFreight
		{
			get
			{
				return this._DestinationInlandFreight;
			}
			set
			{
				if ((this._DestinationInlandFreight != value))
				{
					this.OnDestinationInlandFreightChanging(value);
					this.SendPropertyChanging();
					this._DestinationInlandFreight = value;
					this.SendPropertyChanged("DestinationInlandFreight");
					this.OnDestinationInlandFreightChanged();
				}
			}
		}
		
		[Column(Storage="_Remark", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[Column(Storage="_Symbol", DbType="NVarChar(50)")]
		public string Symbol
		{
			get
			{
				return this._Symbol;
			}
			set
			{
				if ((this._Symbol != value))
				{
					this.OnSymbolChanging(value);
					this.SendPropertyChanging();
					this._Symbol = value;
					this.SendPropertyChanged("Symbol");
					this.OnSymbolChanged();
				}
			}
		}
		
		[Column(Storage="_SellerOriginInlandFreight", DbType="Bit")]
		public System.Nullable<bool> SellerOriginInlandFreight
		{
			get
			{
				return this._SellerOriginInlandFreight;
			}
			set
			{
				if ((this._SellerOriginInlandFreight != value))
				{
					this.OnSellerOriginInlandFreightChanging(value);
					this.SendPropertyChanging();
					this._SellerOriginInlandFreight = value;
					this.SendPropertyChanged("SellerOriginInlandFreight");
					this.OnSellerOriginInlandFreightChanged();
				}
			}
		}
		
		[Column(Storage="_SellerOriginForwarder", DbType="Bit")]
		public System.Nullable<bool> SellerOriginForwarder
		{
			get
			{
				return this._SellerOriginForwarder;
			}
			set
			{
				if ((this._SellerOriginForwarder != value))
				{
					this.OnSellerOriginForwarderChanging(value);
					this.SendPropertyChanging();
					this._SellerOriginForwarder = value;
					this.SendPropertyChanged("SellerOriginForwarder");
					this.OnSellerOriginForwarderChanged();
				}
			}
		}
		
		[Column(Storage="_SellerOriginCustomsClearance", DbType="Bit")]
		public System.Nullable<bool> SellerOriginCustomsClearance
		{
			get
			{
				return this._SellerOriginCustomsClearance;
			}
			set
			{
				if ((this._SellerOriginCustomsClearance != value))
				{
					this.OnSellerOriginCustomsClearanceChanging(value);
					this.SendPropertyChanging();
					this._SellerOriginCustomsClearance = value;
					this.SendPropertyChanged("SellerOriginCustomsClearance");
					this.OnSellerOriginCustomsClearanceChanged();
				}
			}
		}
		
		[Column(Storage="_SellerOriginCustomsDutiesTax", DbType="Bit")]
		public System.Nullable<bool> SellerOriginCustomsDutiesTax
		{
			get
			{
				return this._SellerOriginCustomsDutiesTax;
			}
			set
			{
				if ((this._SellerOriginCustomsDutiesTax != value))
				{
					this.OnSellerOriginCustomsDutiesTaxChanging(value);
					this.SendPropertyChanging();
					this._SellerOriginCustomsDutiesTax = value;
					this.SendPropertyChanged("SellerOriginCustomsDutiesTax");
					this.OnSellerOriginCustomsDutiesTaxChanged();
				}
			}
		}
		
		[Column(Storage="_SellerOriginTerminal", DbType="Bit")]
		public System.Nullable<bool> SellerOriginTerminal
		{
			get
			{
				return this._SellerOriginTerminal;
			}
			set
			{
				if ((this._SellerOriginTerminal != value))
				{
					this.OnSellerOriginTerminalChanging(value);
					this.SendPropertyChanging();
					this._SellerOriginTerminal = value;
					this.SendPropertyChanged("SellerOriginTerminal");
					this.OnSellerOriginTerminalChanged();
				}
			}
		}
		
		[Column(Storage="_SellerCarriageFreight", DbType="Bit")]
		public System.Nullable<bool> SellerCarriageFreight
		{
			get
			{
				return this._SellerCarriageFreight;
			}
			set
			{
				if ((this._SellerCarriageFreight != value))
				{
					this.OnSellerCarriageFreightChanging(value);
					this.SendPropertyChanging();
					this._SellerCarriageFreight = value;
					this.SendPropertyChanged("SellerCarriageFreight");
					this.OnSellerCarriageFreightChanged();
				}
			}
		}
		
		[Column(Storage="_SellerMainAirInsurance", DbType="Bit")]
		public System.Nullable<bool> SellerMainAirInsurance
		{
			get
			{
				return this._SellerMainAirInsurance;
			}
			set
			{
				if ((this._SellerMainAirInsurance != value))
				{
					this.OnSellerMainAirInsuranceChanging(value);
					this.SendPropertyChanging();
					this._SellerMainAirInsurance = value;
					this.SendPropertyChanged("SellerMainAirInsurance");
					this.OnSellerMainAirInsuranceChanged();
				}
			}
		}
		
		[Column(Storage="_SellerDestinationTerminal", DbType="Bit")]
		public System.Nullable<bool> SellerDestinationTerminal
		{
			get
			{
				return this._SellerDestinationTerminal;
			}
			set
			{
				if ((this._SellerDestinationTerminal != value))
				{
					this.OnSellerDestinationTerminalChanging(value);
					this.SendPropertyChanging();
					this._SellerDestinationTerminal = value;
					this.SendPropertyChanged("SellerDestinationTerminal");
					this.OnSellerDestinationTerminalChanged();
				}
			}
		}
		
		[Column(Storage="_SellerDestinationCustomsClearance", DbType="Bit")]
		public System.Nullable<bool> SellerDestinationCustomsClearance
		{
			get
			{
				return this._SellerDestinationCustomsClearance;
			}
			set
			{
				if ((this._SellerDestinationCustomsClearance != value))
				{
					this.OnSellerDestinationCustomsClearanceChanging(value);
					this.SendPropertyChanging();
					this._SellerDestinationCustomsClearance = value;
					this.SendPropertyChanged("SellerDestinationCustomsClearance");
					this.OnSellerDestinationCustomsClearanceChanged();
				}
			}
		}
		
		[Column(Storage="_SellerDestinationCustomsDutiesTax", DbType="Bit")]
		public System.Nullable<bool> SellerDestinationCustomsDutiesTax
		{
			get
			{
				return this._SellerDestinationCustomsDutiesTax;
			}
			set
			{
				if ((this._SellerDestinationCustomsDutiesTax != value))
				{
					this.OnSellerDestinationCustomsDutiesTaxChanging(value);
					this.SendPropertyChanging();
					this._SellerDestinationCustomsDutiesTax = value;
					this.SendPropertyChanged("SellerDestinationCustomsDutiesTax");
					this.OnSellerDestinationCustomsDutiesTaxChanged();
				}
			}
		}
		
		[Column(Storage="_SellerDestinationForwarder", DbType="Bit")]
		public System.Nullable<bool> SellerDestinationForwarder
		{
			get
			{
				return this._SellerDestinationForwarder;
			}
			set
			{
				if ((this._SellerDestinationForwarder != value))
				{
					this.OnSellerDestinationForwarderChanging(value);
					this.SendPropertyChanging();
					this._SellerDestinationForwarder = value;
					this.SendPropertyChanged("SellerDestinationForwarder");
					this.OnSellerDestinationForwarderChanged();
				}
			}
		}
		
		[Column(Storage="_SellerDestinationInlandFreight", DbType="Bit")]
		public System.Nullable<bool> SellerDestinationInlandFreight
		{
			get
			{
				return this._SellerDestinationInlandFreight;
			}
			set
			{
				if ((this._SellerDestinationInlandFreight != value))
				{
					this.OnSellerDestinationInlandFreightChanging(value);
					this.SendPropertyChanging();
					this._SellerDestinationInlandFreight = value;
					this.SendPropertyChanged("SellerDestinationInlandFreight");
					this.OnSellerDestinationInlandFreightChanged();
				}
			}
		}
		
		[Column(Storage="_TransitPointDescEN", DbType="NVarChar(100)")]
		public string TransitPointDescEN
		{
			get
			{
				return this._TransitPointDescEN;
			}
			set
			{
				if ((this._TransitPointDescEN != value))
				{
					this.OnTransitPointDescENChanging(value);
					this.SendPropertyChanging();
					this._TransitPointDescEN = value;
					this.SendPropertyChanged("TransitPointDescEN");
					this.OnTransitPointDescENChanged();
				}
			}
		}
		
		[Column(Storage="_TransitPointDescCH", DbType="NVarChar(100)")]
		public string TransitPointDescCH
		{
			get
			{
				return this._TransitPointDescCH;
			}
			set
			{
				if ((this._TransitPointDescCH != value))
				{
					this.OnTransitPointDescCHChanging(value);
					this.SendPropertyChanging();
					this._TransitPointDescCH = value;
					this.SendPropertyChanged("TransitPointDescCH");
					this.OnTransitPointDescCHChanged();
				}
			}
		}
		
		[Column(Storage="_TransitPointDescTH", DbType="NVarChar(100)")]
		public string TransitPointDescTH
		{
			get
			{
				return this._TransitPointDescTH;
			}
			set
			{
				if ((this._TransitPointDescTH != value))
				{
					this.OnTransitPointDescTHChanging(value);
					this.SendPropertyChanging();
					this._TransitPointDescTH = value;
					this.SendPropertyChanged("TransitPointDescTH");
					this.OnTransitPointDescTHChanged();
				}
			}
		}
		
		[Column(Storage="_TransitPointDeliveryEN", DbType="NVarChar(100)")]
		public string TransitPointDeliveryEN
		{
			get
			{
				return this._TransitPointDeliveryEN;
			}
			set
			{
				if ((this._TransitPointDeliveryEN != value))
				{
					this.OnTransitPointDeliveryENChanging(value);
					this.SendPropertyChanging();
					this._TransitPointDeliveryEN = value;
					this.SendPropertyChanged("TransitPointDeliveryEN");
					this.OnTransitPointDeliveryENChanged();
				}
			}
		}
		
		[Column(Storage="_TransitPointDeliveryCH", DbType="NVarChar(100)")]
		public string TransitPointDeliveryCH
		{
			get
			{
				return this._TransitPointDeliveryCH;
			}
			set
			{
				if ((this._TransitPointDeliveryCH != value))
				{
					this.OnTransitPointDeliveryCHChanging(value);
					this.SendPropertyChanging();
					this._TransitPointDeliveryCH = value;
					this.SendPropertyChanged("TransitPointDeliveryCH");
					this.OnTransitPointDeliveryCHChanged();
				}
			}
		}
		
		[Column(Storage="_TransitPointDeliveryTH", DbType="NVarChar(100)")]
		public string TransitPointDeliveryTH
		{
			get
			{
				return this._TransitPointDeliveryTH;
			}
			set
			{
				if ((this._TransitPointDeliveryTH != value))
				{
					this.OnTransitPointDeliveryTHChanging(value);
					this.SendPropertyChanging();
					this._TransitPointDeliveryTH = value;
					this.SendPropertyChanged("TransitPointDeliveryTH");
					this.OnTransitPointDeliveryTHChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.TransitModeTransitPointChange")]
	public partial class TransitModeTransitPointChange : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ERPSupplier;
		
		private string _PHFactories;
		
		private string _LocationofSuppFactory;
		
		private string _Incoterms;
		
		private string _IncotermsPointPort;
		
		private string _PointofDestination;
		
		private string _TransitMode;
		
		private System.Nullable<int> _TimeFrame;
		
		private System.DateTime _FromEffectivedDate;
		
		private System.Nullable<System.DateTime> _ToEffectivedDate;
		
		private string _SpecialNote;
		
		private string _ForwarderAddressEn;
		
		private string _ForwarderAddressCH;
		
		private string _ForwarderAddressTH;
		
		private EntityRef<SupplierProfile> _SupplierProfile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnERPSupplierChanging(string value);
    partial void OnERPSupplierChanged();
    partial void OnPHFactoriesChanging(string value);
    partial void OnPHFactoriesChanged();
    partial void OnLocationofSuppFactoryChanging(string value);
    partial void OnLocationofSuppFactoryChanged();
    partial void OnIncotermsChanging(string value);
    partial void OnIncotermsChanged();
    partial void OnIncotermsPointPortChanging(string value);
    partial void OnIncotermsPointPortChanged();
    partial void OnPointofDestinationChanging(string value);
    partial void OnPointofDestinationChanged();
    partial void OnTransitModeChanging(string value);
    partial void OnTransitModeChanged();
    partial void OnTimeFrameChanging(System.Nullable<int> value);
    partial void OnTimeFrameChanged();
    partial void OnFromEffectivedDateChanging(System.DateTime value);
    partial void OnFromEffectivedDateChanged();
    partial void OnToEffectivedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnToEffectivedDateChanged();
    partial void OnSpecialNoteChanging(string value);
    partial void OnSpecialNoteChanged();
    partial void OnForwarderAddressEnChanging(string value);
    partial void OnForwarderAddressEnChanged();
    partial void OnForwarderAddressCHChanging(string value);
    partial void OnForwarderAddressCHChanged();
    partial void OnForwarderAddressTHChanging(string value);
    partial void OnForwarderAddressTHChanged();
    #endregion
		
		public TransitModeTransitPointChange()
		{
			this._SupplierProfile = default(EntityRef<SupplierProfile>);
			OnCreated();
		}
		
		[Column(Storage="_ERPSupplier", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ERPSupplier
		{
			get
			{
				return this._ERPSupplier;
			}
			set
			{
				if ((this._ERPSupplier != value))
				{
					if (this._SupplierProfile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnERPSupplierChanging(value);
					this.SendPropertyChanging();
					this._ERPSupplier = value;
					this.SendPropertyChanged("ERPSupplier");
					this.OnERPSupplierChanged();
				}
			}
		}
		
		[Column(Storage="_PHFactories", DbType="VarChar(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PHFactories
		{
			get
			{
				return this._PHFactories;
			}
			set
			{
				if ((this._PHFactories != value))
				{
					this.OnPHFactoriesChanging(value);
					this.SendPropertyChanging();
					this._PHFactories = value;
					this.SendPropertyChanged("PHFactories");
					this.OnPHFactoriesChanged();
				}
			}
		}
		
		[Column(Storage="_LocationofSuppFactory", DbType="NVarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string LocationofSuppFactory
		{
			get
			{
				return this._LocationofSuppFactory;
			}
			set
			{
				if ((this._LocationofSuppFactory != value))
				{
					this.OnLocationofSuppFactoryChanging(value);
					this.SendPropertyChanging();
					this._LocationofSuppFactory = value;
					this.SendPropertyChanged("LocationofSuppFactory");
					this.OnLocationofSuppFactoryChanged();
				}
			}
		}
		
		[Column(Storage="_Incoterms", DbType="VarChar(50)")]
		public string Incoterms
		{
			get
			{
				return this._Incoterms;
			}
			set
			{
				if ((this._Incoterms != value))
				{
					this.OnIncotermsChanging(value);
					this.SendPropertyChanging();
					this._Incoterms = value;
					this.SendPropertyChanged("Incoterms");
					this.OnIncotermsChanged();
				}
			}
		}
		
		[Column(Storage="_IncotermsPointPort", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IncotermsPointPort
		{
			get
			{
				return this._IncotermsPointPort;
			}
			set
			{
				if ((this._IncotermsPointPort != value))
				{
					this.OnIncotermsPointPortChanging(value);
					this.SendPropertyChanging();
					this._IncotermsPointPort = value;
					this.SendPropertyChanged("IncotermsPointPort");
					this.OnIncotermsPointPortChanged();
				}
			}
		}
		
		[Column(Storage="_PointofDestination", DbType="VarChar(50)")]
		public string PointofDestination
		{
			get
			{
				return this._PointofDestination;
			}
			set
			{
				if ((this._PointofDestination != value))
				{
					this.OnPointofDestinationChanging(value);
					this.SendPropertyChanging();
					this._PointofDestination = value;
					this.SendPropertyChanged("PointofDestination");
					this.OnPointofDestinationChanged();
				}
			}
		}
		
		[Column(Storage="_TransitMode", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TransitMode
		{
			get
			{
				return this._TransitMode;
			}
			set
			{
				if ((this._TransitMode != value))
				{
					this.OnTransitModeChanging(value);
					this.SendPropertyChanging();
					this._TransitMode = value;
					this.SendPropertyChanged("TransitMode");
					this.OnTransitModeChanged();
				}
			}
		}
		
		[Column(Storage="_TimeFrame", DbType="Int")]
		public System.Nullable<int> TimeFrame
		{
			get
			{
				return this._TimeFrame;
			}
			set
			{
				if ((this._TimeFrame != value))
				{
					this.OnTimeFrameChanging(value);
					this.SendPropertyChanging();
					this._TimeFrame = value;
					this.SendPropertyChanged("TimeFrame");
					this.OnTimeFrameChanged();
				}
			}
		}
		
		[Column(Storage="_FromEffectivedDate", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime FromEffectivedDate
		{
			get
			{
				return this._FromEffectivedDate;
			}
			set
			{
				if ((this._FromEffectivedDate != value))
				{
					this.OnFromEffectivedDateChanging(value);
					this.SendPropertyChanging();
					this._FromEffectivedDate = value;
					this.SendPropertyChanged("FromEffectivedDate");
					this.OnFromEffectivedDateChanged();
				}
			}
		}
		
		[Column(Storage="_ToEffectivedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ToEffectivedDate
		{
			get
			{
				return this._ToEffectivedDate;
			}
			set
			{
				if ((this._ToEffectivedDate != value))
				{
					this.OnToEffectivedDateChanging(value);
					this.SendPropertyChanging();
					this._ToEffectivedDate = value;
					this.SendPropertyChanged("ToEffectivedDate");
					this.OnToEffectivedDateChanged();
				}
			}
		}
		
		[Column(Storage="_SpecialNote", DbType="NVarChar(1000)")]
		public string SpecialNote
		{
			get
			{
				return this._SpecialNote;
			}
			set
			{
				if ((this._SpecialNote != value))
				{
					this.OnSpecialNoteChanging(value);
					this.SendPropertyChanging();
					this._SpecialNote = value;
					this.SendPropertyChanged("SpecialNote");
					this.OnSpecialNoteChanged();
				}
			}
		}
		
		[Column(Storage="_ForwarderAddressEn", DbType="NVarChar(500)")]
		public string ForwarderAddressEn
		{
			get
			{
				return this._ForwarderAddressEn;
			}
			set
			{
				if ((this._ForwarderAddressEn != value))
				{
					this.OnForwarderAddressEnChanging(value);
					this.SendPropertyChanging();
					this._ForwarderAddressEn = value;
					this.SendPropertyChanged("ForwarderAddressEn");
					this.OnForwarderAddressEnChanged();
				}
			}
		}
		
		[Column(Storage="_ForwarderAddressCH", DbType="NVarChar(500)")]
		public string ForwarderAddressCH
		{
			get
			{
				return this._ForwarderAddressCH;
			}
			set
			{
				if ((this._ForwarderAddressCH != value))
				{
					this.OnForwarderAddressCHChanging(value);
					this.SendPropertyChanging();
					this._ForwarderAddressCH = value;
					this.SendPropertyChanged("ForwarderAddressCH");
					this.OnForwarderAddressCHChanged();
				}
			}
		}
		
		[Column(Storage="_ForwarderAddressTH", DbType="NVarChar(500)")]
		public string ForwarderAddressTH
		{
			get
			{
				return this._ForwarderAddressTH;
			}
			set
			{
				if ((this._ForwarderAddressTH != value))
				{
					this.OnForwarderAddressTHChanging(value);
					this.SendPropertyChanging();
					this._ForwarderAddressTH = value;
					this.SendPropertyChanged("ForwarderAddressTH");
					this.OnForwarderAddressTHChanged();
				}
			}
		}
		
		[Association(Name="SupplierProfile_TransitModeTransitPointChange", Storage="_SupplierProfile", ThisKey="ERPSupplier", OtherKey="ERPSupplier", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public SupplierProfile SupplierProfile
		{
			get
			{
				return this._SupplierProfile.Entity;
			}
			set
			{
				SupplierProfile previousValue = this._SupplierProfile.Entity;
				if (((previousValue != value) 
							|| (this._SupplierProfile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SupplierProfile.Entity = null;
						previousValue.TransitModeTransitPointChanges.Remove(this);
					}
					this._SupplierProfile.Entity = value;
					if ((value != null))
					{
						value.TransitModeTransitPointChanges.Add(this);
						this._ERPSupplier = value.ERPSupplier;
					}
					else
					{
						this._ERPSupplier = default(string);
					}
					this.SendPropertyChanged("SupplierProfile");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.SupplierCycleHistory")]
	public partial class SupplierCycleHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ActionDate;
		
		private string _ERPSupplier;
		
		private string _PreparePerson;
		
		private System.Nullable<System.DateTime> _PrepareDate;
		
		private string _ConfirmPerson;
		
		private System.Nullable<System.DateTime> _ConfirmDate;
		
		private string _ApprovalPerson;
		
		private System.Nullable<System.DateTime> _ApprovalDate;
		
		private EntityRef<SupplierProfile> _SupplierProfile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnActionDateChanging(string value);
    partial void OnActionDateChanged();
    partial void OnERPSupplierChanging(string value);
    partial void OnERPSupplierChanged();
    partial void OnPreparePersonChanging(string value);
    partial void OnPreparePersonChanged();
    partial void OnPrepareDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPrepareDateChanged();
    partial void OnConfirmPersonChanging(string value);
    partial void OnConfirmPersonChanged();
    partial void OnConfirmDateChanging(System.Nullable<System.DateTime> value);
    partial void OnConfirmDateChanged();
    partial void OnApprovalPersonChanging(string value);
    partial void OnApprovalPersonChanged();
    partial void OnApprovalDateChanging(System.Nullable<System.DateTime> value);
    partial void OnApprovalDateChanged();
    #endregion
		
		public SupplierCycleHistory()
		{
			this._SupplierProfile = default(EntityRef<SupplierProfile>);
			OnCreated();
		}
		
		[Column(Storage="_ActionDate", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ActionDate
		{
			get
			{
				return this._ActionDate;
			}
			set
			{
				if ((this._ActionDate != value))
				{
					this.OnActionDateChanging(value);
					this.SendPropertyChanging();
					this._ActionDate = value;
					this.SendPropertyChanged("ActionDate");
					this.OnActionDateChanged();
				}
			}
		}
		
		[Column(Storage="_ERPSupplier", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ERPSupplier
		{
			get
			{
				return this._ERPSupplier;
			}
			set
			{
				if ((this._ERPSupplier != value))
				{
					if (this._SupplierProfile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnERPSupplierChanging(value);
					this.SendPropertyChanging();
					this._ERPSupplier = value;
					this.SendPropertyChanged("ERPSupplier");
					this.OnERPSupplierChanged();
				}
			}
		}
		
		[Column(Storage="_PreparePerson", DbType="NVarChar(20)")]
		public string PreparePerson
		{
			get
			{
				return this._PreparePerson;
			}
			set
			{
				if ((this._PreparePerson != value))
				{
					this.OnPreparePersonChanging(value);
					this.SendPropertyChanging();
					this._PreparePerson = value;
					this.SendPropertyChanged("PreparePerson");
					this.OnPreparePersonChanged();
				}
			}
		}
		
		[Column(Storage="_PrepareDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PrepareDate
		{
			get
			{
				return this._PrepareDate;
			}
			set
			{
				if ((this._PrepareDate != value))
				{
					this.OnPrepareDateChanging(value);
					this.SendPropertyChanging();
					this._PrepareDate = value;
					this.SendPropertyChanged("PrepareDate");
					this.OnPrepareDateChanged();
				}
			}
		}
		
		[Column(Storage="_ConfirmPerson", DbType="NVarChar(20)")]
		public string ConfirmPerson
		{
			get
			{
				return this._ConfirmPerson;
			}
			set
			{
				if ((this._ConfirmPerson != value))
				{
					this.OnConfirmPersonChanging(value);
					this.SendPropertyChanging();
					this._ConfirmPerson = value;
					this.SendPropertyChanged("ConfirmPerson");
					this.OnConfirmPersonChanged();
				}
			}
		}
		
		[Column(Storage="_ConfirmDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ConfirmDate
		{
			get
			{
				return this._ConfirmDate;
			}
			set
			{
				if ((this._ConfirmDate != value))
				{
					this.OnConfirmDateChanging(value);
					this.SendPropertyChanging();
					this._ConfirmDate = value;
					this.SendPropertyChanged("ConfirmDate");
					this.OnConfirmDateChanged();
				}
			}
		}
		
		[Column(Storage="_ApprovalPerson", DbType="NVarChar(20)")]
		public string ApprovalPerson
		{
			get
			{
				return this._ApprovalPerson;
			}
			set
			{
				if ((this._ApprovalPerson != value))
				{
					this.OnApprovalPersonChanging(value);
					this.SendPropertyChanging();
					this._ApprovalPerson = value;
					this.SendPropertyChanged("ApprovalPerson");
					this.OnApprovalPersonChanged();
				}
			}
		}
		
		[Column(Storage="_ApprovalDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ApprovalDate
		{
			get
			{
				return this._ApprovalDate;
			}
			set
			{
				if ((this._ApprovalDate != value))
				{
					this.OnApprovalDateChanging(value);
					this.SendPropertyChanging();
					this._ApprovalDate = value;
					this.SendPropertyChanged("ApprovalDate");
					this.OnApprovalDateChanged();
				}
			}
		}
		
		[Association(Name="SupplierProfile_SupplierCycleHistory", Storage="_SupplierProfile", ThisKey="ERPSupplier", OtherKey="ERPSupplier", IsForeignKey=true)]
		public SupplierProfile SupplierProfile
		{
			get
			{
				return this._SupplierProfile.Entity;
			}
			set
			{
				SupplierProfile previousValue = this._SupplierProfile.Entity;
				if (((previousValue != value) 
							|| (this._SupplierProfile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SupplierProfile.Entity = null;
						previousValue.SupplierCycleHistories.Remove(this);
					}
					this._SupplierProfile.Entity = value;
					if ((value != null))
					{
						value.SupplierCycleHistories.Add(this);
						this._ERPSupplier = value.ERPSupplier;
					}
					else
					{
						this._ERPSupplier = default(string);
					}
					this.SendPropertyChanged("SupplierProfile");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.TransportationCostElement")]
	public partial class TransportationCostElement : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SequenceNum;
		
		private string _ByProductionSite;
		
		private string _Incoterm;
		
		private string _TransitMode;
		
		private System.Nullable<bool> _IsLCL;
		
		private string _TransitPoint;
		
		private string _PointOfDest;
		
		private System.Nullable<bool> _Point2PortOfOriginCost;
		
		private System.Nullable<bool> _FreightCost;
		
		private System.Nullable<bool> _Port2PointOfDestinationCost;
		
		private System.Nullable<bool> _PointOfDestination2ProductionSiteCost;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSequenceNumChanging(int value);
    partial void OnSequenceNumChanged();
    partial void OnByProductionSiteChanging(string value);
    partial void OnByProductionSiteChanged();
    partial void OnIncotermChanging(string value);
    partial void OnIncotermChanged();
    partial void OnTransitModeChanging(string value);
    partial void OnTransitModeChanged();
    partial void OnIsLCLChanging(System.Nullable<bool> value);
    partial void OnIsLCLChanged();
    partial void OnTransitPointChanging(string value);
    partial void OnTransitPointChanged();
    partial void OnPointOfDestChanging(string value);
    partial void OnPointOfDestChanged();
    partial void OnPoint2PortOfOriginCostChanging(System.Nullable<bool> value);
    partial void OnPoint2PortOfOriginCostChanged();
    partial void OnFreightCostChanging(System.Nullable<bool> value);
    partial void OnFreightCostChanged();
    partial void OnPort2PointOfDestinationCostChanging(System.Nullable<bool> value);
    partial void OnPort2PointOfDestinationCostChanged();
    partial void OnPointOfDestination2ProductionSiteCostChanging(System.Nullable<bool> value);
    partial void OnPointOfDestination2ProductionSiteCostChanged();
    #endregion
		
		public TransportationCostElement()
		{
			OnCreated();
		}
		
		[Column(Storage="_SequenceNum", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SequenceNum
		{
			get
			{
				return this._SequenceNum;
			}
			set
			{
				if ((this._SequenceNum != value))
				{
					this.OnSequenceNumChanging(value);
					this.SendPropertyChanging();
					this._SequenceNum = value;
					this.SendPropertyChanged("SequenceNum");
					this.OnSequenceNumChanged();
				}
			}
		}
		
		[Column(Storage="_ByProductionSite", DbType="NVarChar(10)")]
		public string ByProductionSite
		{
			get
			{
				return this._ByProductionSite;
			}
			set
			{
				if ((this._ByProductionSite != value))
				{
					this.OnByProductionSiteChanging(value);
					this.SendPropertyChanging();
					this._ByProductionSite = value;
					this.SendPropertyChanged("ByProductionSite");
					this.OnByProductionSiteChanged();
				}
			}
		}
		
		[Column(Storage="_Incoterm", DbType="NVarChar(10)")]
		public string Incoterm
		{
			get
			{
				return this._Incoterm;
			}
			set
			{
				if ((this._Incoterm != value))
				{
					this.OnIncotermChanging(value);
					this.SendPropertyChanging();
					this._Incoterm = value;
					this.SendPropertyChanged("Incoterm");
					this.OnIncotermChanged();
				}
			}
		}
		
		[Column(Storage="_TransitMode", DbType="NVarChar(20)")]
		public string TransitMode
		{
			get
			{
				return this._TransitMode;
			}
			set
			{
				if ((this._TransitMode != value))
				{
					this.OnTransitModeChanging(value);
					this.SendPropertyChanging();
					this._TransitMode = value;
					this.SendPropertyChanged("TransitMode");
					this.OnTransitModeChanged();
				}
			}
		}
		
		[Column(Storage="_IsLCL", DbType="Bit")]
		public System.Nullable<bool> IsLCL
		{
			get
			{
				return this._IsLCL;
			}
			set
			{
				if ((this._IsLCL != value))
				{
					this.OnIsLCLChanging(value);
					this.SendPropertyChanging();
					this._IsLCL = value;
					this.SendPropertyChanged("IsLCL");
					this.OnIsLCLChanged();
				}
			}
		}
		
		[Column(Storage="_TransitPoint", DbType="NVarChar(100)")]
		public string TransitPoint
		{
			get
			{
				return this._TransitPoint;
			}
			set
			{
				if ((this._TransitPoint != value))
				{
					this.OnTransitPointChanging(value);
					this.SendPropertyChanging();
					this._TransitPoint = value;
					this.SendPropertyChanged("TransitPoint");
					this.OnTransitPointChanged();
				}
			}
		}
		
		[Column(Storage="_PointOfDest", DbType="NVarChar(20)")]
		public string PointOfDest
		{
			get
			{
				return this._PointOfDest;
			}
			set
			{
				if ((this._PointOfDest != value))
				{
					this.OnPointOfDestChanging(value);
					this.SendPropertyChanging();
					this._PointOfDest = value;
					this.SendPropertyChanged("PointOfDest");
					this.OnPointOfDestChanged();
				}
			}
		}
		
		[Column(Storage="_Point2PortOfOriginCost", DbType="Bit")]
		public System.Nullable<bool> Point2PortOfOriginCost
		{
			get
			{
				return this._Point2PortOfOriginCost;
			}
			set
			{
				if ((this._Point2PortOfOriginCost != value))
				{
					this.OnPoint2PortOfOriginCostChanging(value);
					this.SendPropertyChanging();
					this._Point2PortOfOriginCost = value;
					this.SendPropertyChanged("Point2PortOfOriginCost");
					this.OnPoint2PortOfOriginCostChanged();
				}
			}
		}
		
		[Column(Storage="_FreightCost", DbType="Bit")]
		public System.Nullable<bool> FreightCost
		{
			get
			{
				return this._FreightCost;
			}
			set
			{
				if ((this._FreightCost != value))
				{
					this.OnFreightCostChanging(value);
					this.SendPropertyChanging();
					this._FreightCost = value;
					this.SendPropertyChanged("FreightCost");
					this.OnFreightCostChanged();
				}
			}
		}
		
		[Column(Storage="_Port2PointOfDestinationCost", DbType="Bit")]
		public System.Nullable<bool> Port2PointOfDestinationCost
		{
			get
			{
				return this._Port2PointOfDestinationCost;
			}
			set
			{
				if ((this._Port2PointOfDestinationCost != value))
				{
					this.OnPort2PointOfDestinationCostChanging(value);
					this.SendPropertyChanging();
					this._Port2PointOfDestinationCost = value;
					this.SendPropertyChanged("Port2PointOfDestinationCost");
					this.OnPort2PointOfDestinationCostChanged();
				}
			}
		}
		
		[Column(Storage="_PointOfDestination2ProductionSiteCost", DbType="Bit")]
		public System.Nullable<bool> PointOfDestination2ProductionSiteCost
		{
			get
			{
				return this._PointOfDestination2ProductionSiteCost;
			}
			set
			{
				if ((this._PointOfDestination2ProductionSiteCost != value))
				{
					this.OnPointOfDestination2ProductionSiteCostChanging(value);
					this.SendPropertyChanging();
					this._PointOfDestination2ProductionSiteCost = value;
					this.SendPropertyChanged("PointOfDestination2ProductionSiteCost");
					this.OnPointOfDestination2ProductionSiteCostChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Performance")]
	public partial class Performance : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ERPSupplier;
		
		private string _Category;
		
		private string _Dept;
		
		private string _ConfirmPerson;
		
		private System.Nullable<System.DateTime> _ConfrimDate;
		
		private EntitySet<PerformanceRanking> _PerformanceRankings;
		
		private EntityRef<SupplierProfile> _SupplierProfile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnERPSupplierChanging(string value);
    partial void OnERPSupplierChanged();
    partial void OnCategoryChanging(string value);
    partial void OnCategoryChanged();
    partial void OnDeptChanging(string value);
    partial void OnDeptChanged();
    partial void OnConfirmPersonChanging(string value);
    partial void OnConfirmPersonChanged();
    partial void OnConfrimDateChanging(System.Nullable<System.DateTime> value);
    partial void OnConfrimDateChanged();
    #endregion
		
		public Performance()
		{
			this._PerformanceRankings = new EntitySet<PerformanceRanking>(new Action<PerformanceRanking>(this.attach_PerformanceRankings), new Action<PerformanceRanking>(this.detach_PerformanceRankings));
			this._SupplierProfile = default(EntityRef<SupplierProfile>);
			OnCreated();
		}
		
		[Column(Storage="_ERPSupplier", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ERPSupplier
		{
			get
			{
				return this._ERPSupplier;
			}
			set
			{
				if ((this._ERPSupplier != value))
				{
					if (this._SupplierProfile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnERPSupplierChanging(value);
					this.SendPropertyChanging();
					this._ERPSupplier = value;
					this.SendPropertyChanged("ERPSupplier");
					this.OnERPSupplierChanged();
				}
			}
		}
		
		[Column(Storage="_Category", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		[Column(Storage="_Dept", DbType="NVarChar(50)")]
		public string Dept
		{
			get
			{
				return this._Dept;
			}
			set
			{
				if ((this._Dept != value))
				{
					this.OnDeptChanging(value);
					this.SendPropertyChanging();
					this._Dept = value;
					this.SendPropertyChanged("Dept");
					this.OnDeptChanged();
				}
			}
		}
		
		[Column(Storage="_ConfirmPerson", DbType="NVarChar(50)")]
		public string ConfirmPerson
		{
			get
			{
				return this._ConfirmPerson;
			}
			set
			{
				if ((this._ConfirmPerson != value))
				{
					this.OnConfirmPersonChanging(value);
					this.SendPropertyChanging();
					this._ConfirmPerson = value;
					this.SendPropertyChanged("ConfirmPerson");
					this.OnConfirmPersonChanged();
				}
			}
		}
		
		[Column(Storage="_ConfrimDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ConfrimDate
		{
			get
			{
				return this._ConfrimDate;
			}
			set
			{
				if ((this._ConfrimDate != value))
				{
					this.OnConfrimDateChanging(value);
					this.SendPropertyChanging();
					this._ConfrimDate = value;
					this.SendPropertyChanged("ConfrimDate");
					this.OnConfrimDateChanged();
				}
			}
		}
		
		[Association(Name="Performance_PerformanceRanking", Storage="_PerformanceRankings", ThisKey="ERPSupplier,Category", OtherKey="ERPSupplier,Category")]
		public EntitySet<PerformanceRanking> PerformanceRankings
		{
			get
			{
				return this._PerformanceRankings;
			}
			set
			{
				this._PerformanceRankings.Assign(value);
			}
		}
		
		[Association(Name="SupplierProfile_Performance", Storage="_SupplierProfile", ThisKey="ERPSupplier", OtherKey="ERPSupplier", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public SupplierProfile SupplierProfile
		{
			get
			{
				return this._SupplierProfile.Entity;
			}
			set
			{
				SupplierProfile previousValue = this._SupplierProfile.Entity;
				if (((previousValue != value) 
							|| (this._SupplierProfile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SupplierProfile.Entity = null;
						previousValue.Performances.Remove(this);
					}
					this._SupplierProfile.Entity = value;
					if ((value != null))
					{
						value.Performances.Add(this);
						this._ERPSupplier = value.ERPSupplier;
					}
					else
					{
						this._ERPSupplier = default(string);
					}
					this.SendPropertyChanged("SupplierProfile");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PerformanceRankings(PerformanceRanking entity)
		{
			this.SendPropertyChanging();
			entity.Performance = this;
		}
		
		private void detach_PerformanceRankings(PerformanceRanking entity)
		{
			this.SendPropertyChanging();
			entity.Performance = null;
		}
	}
	
	[Table(Name="dbo.PerformanceRanking")]
	public partial class PerformanceRanking : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ERPSupplier;
		
		private string _Category;
		
		private string _ItemCode;
		
		private System.Nullable<double> _Weight;
		
		private System.Nullable<int> _Seq;
		
		private EntityRef<Performance> _Performance;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnERPSupplierChanging(string value);
    partial void OnERPSupplierChanged();
    partial void OnCategoryChanging(string value);
    partial void OnCategoryChanged();
    partial void OnItemCodeChanging(string value);
    partial void OnItemCodeChanged();
    partial void OnWeightChanging(System.Nullable<double> value);
    partial void OnWeightChanged();
    partial void OnSeqChanging(System.Nullable<int> value);
    partial void OnSeqChanged();
    #endregion
		
		public PerformanceRanking()
		{
			this._Performance = default(EntityRef<Performance>);
			OnCreated();
		}
		
		[Column(Storage="_ERPSupplier", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ERPSupplier
		{
			get
			{
				return this._ERPSupplier;
			}
			set
			{
				if ((this._ERPSupplier != value))
				{
					if (this._Performance.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnERPSupplierChanging(value);
					this.SendPropertyChanging();
					this._ERPSupplier = value;
					this.SendPropertyChanged("ERPSupplier");
					this.OnERPSupplierChanged();
				}
			}
		}
		
		[Column(Storage="_Category", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					if (this._Performance.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		[Column(Storage="_ItemCode", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ItemCode
		{
			get
			{
				return this._ItemCode;
			}
			set
			{
				if ((this._ItemCode != value))
				{
					this.OnItemCodeChanging(value);
					this.SendPropertyChanging();
					this._ItemCode = value;
					this.SendPropertyChanged("ItemCode");
					this.OnItemCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Weight", DbType="Float")]
		public System.Nullable<double> Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[Column(Storage="_Seq", DbType="Int")]
		public System.Nullable<int> Seq
		{
			get
			{
				return this._Seq;
			}
			set
			{
				if ((this._Seq != value))
				{
					this.OnSeqChanging(value);
					this.SendPropertyChanging();
					this._Seq = value;
					this.SendPropertyChanged("Seq");
					this.OnSeqChanged();
				}
			}
		}
		
		[Association(Name="Performance_PerformanceRanking", Storage="_Performance", ThisKey="ERPSupplier,Category", OtherKey="ERPSupplier,Category", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Performance Performance
		{
			get
			{
				return this._Performance.Entity;
			}
			set
			{
				Performance previousValue = this._Performance.Entity;
				if (((previousValue != value) 
							|| (this._Performance.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Performance.Entity = null;
						previousValue.PerformanceRankings.Remove(this);
					}
					this._Performance.Entity = value;
					if ((value != null))
					{
						value.PerformanceRankings.Add(this);
						this._ERPSupplier = value.ERPSupplier;
						this._Category = value.Category;
					}
					else
					{
						this._ERPSupplier = default(string);
						this._Category = default(string);
					}
					this.SendPropertyChanged("Performance");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.PerformanceItem")]
	public partial class PerformanceItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Category;
		
		private string _ItemCode;
		
		private string _Description;
		
		private string _Specific;
		
		private System.Nullable<double> _MaxWeight;
		
		private string _Dept;
		
		private System.Nullable<int> _Seq;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCategoryChanging(string value);
    partial void OnCategoryChanged();
    partial void OnItemCodeChanging(string value);
    partial void OnItemCodeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnSpecificChanging(string value);
    partial void OnSpecificChanged();
    partial void OnMaxWeightChanging(System.Nullable<double> value);
    partial void OnMaxWeightChanged();
    partial void OnDeptChanging(string value);
    partial void OnDeptChanged();
    partial void OnSeqChanging(System.Nullable<int> value);
    partial void OnSeqChanged();
    #endregion
		
		public PerformanceItem()
		{
			OnCreated();
		}
		
		[Column(Storage="_Category", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		[Column(Storage="_ItemCode", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ItemCode
		{
			get
			{
				return this._ItemCode;
			}
			set
			{
				if ((this._ItemCode != value))
				{
					this.OnItemCodeChanging(value);
					this.SendPropertyChanging();
					this._ItemCode = value;
					this.SendPropertyChanged("ItemCode");
					this.OnItemCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_Specific", DbType="NVarChar(2000)")]
		public string Specific
		{
			get
			{
				return this._Specific;
			}
			set
			{
				if ((this._Specific != value))
				{
					this.OnSpecificChanging(value);
					this.SendPropertyChanging();
					this._Specific = value;
					this.SendPropertyChanged("Specific");
					this.OnSpecificChanged();
				}
			}
		}
		
		[Column(Storage="_MaxWeight", DbType="Float")]
		public System.Nullable<double> MaxWeight
		{
			get
			{
				return this._MaxWeight;
			}
			set
			{
				if ((this._MaxWeight != value))
				{
					this.OnMaxWeightChanging(value);
					this.SendPropertyChanging();
					this._MaxWeight = value;
					this.SendPropertyChanged("MaxWeight");
					this.OnMaxWeightChanged();
				}
			}
		}
		
		[Column(Storage="_Dept", DbType="NVarChar(20)")]
		public string Dept
		{
			get
			{
				return this._Dept;
			}
			set
			{
				if ((this._Dept != value))
				{
					this.OnDeptChanging(value);
					this.SendPropertyChanging();
					this._Dept = value;
					this.SendPropertyChanged("Dept");
					this.OnDeptChanged();
				}
			}
		}
		
		[Column(Storage="_Seq", DbType="Int")]
		public System.Nullable<int> Seq
		{
			get
			{
				return this._Seq;
			}
			set
			{
				if ((this._Seq != value))
				{
					this.OnSeqChanging(value);
					this.SendPropertyChanging();
					this._Seq = value;
					this.SendPropertyChanged("Seq");
					this.OnSeqChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.CurrencyRecord")]
	public partial class CurrencyRecord : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<System.DateTime> _ChangeTime;
		
		private string _Currency;
		
		private string _Changetype;
		
		private System.Nullable<decimal> _OldValue;
		
		private System.Nullable<decimal> _NewValue;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnChangeTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnChangeTimeChanged();
    partial void OnCurrencyChanging(string value);
    partial void OnCurrencyChanged();
    partial void OnChangetypeChanging(string value);
    partial void OnChangetypeChanged();
    partial void OnOldValueChanging(System.Nullable<decimal> value);
    partial void OnOldValueChanged();
    partial void OnNewValueChanging(System.Nullable<decimal> value);
    partial void OnNewValueChanged();
    #endregion
		
		public CurrencyRecord()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_ChangeTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ChangeTime
		{
			get
			{
				return this._ChangeTime;
			}
			set
			{
				if ((this._ChangeTime != value))
				{
					this.OnChangeTimeChanging(value);
					this.SendPropertyChanging();
					this._ChangeTime = value;
					this.SendPropertyChanged("ChangeTime");
					this.OnChangeTimeChanged();
				}
			}
		}
		
		[Column(Storage="_Currency", DbType="VarChar(50)")]
		public string Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[Column(Storage="_Changetype", DbType="VarChar(50)")]
		public string Changetype
		{
			get
			{
				return this._Changetype;
			}
			set
			{
				if ((this._Changetype != value))
				{
					this.OnChangetypeChanging(value);
					this.SendPropertyChanging();
					this._Changetype = value;
					this.SendPropertyChanged("Changetype");
					this.OnChangetypeChanged();
				}
			}
		}
		
		[Column(Storage="_OldValue", DbType="Decimal(15,4)")]
		public System.Nullable<decimal> OldValue
		{
			get
			{
				return this._OldValue;
			}
			set
			{
				if ((this._OldValue != value))
				{
					this.OnOldValueChanging(value);
					this.SendPropertyChanging();
					this._OldValue = value;
					this.SendPropertyChanged("OldValue");
					this.OnOldValueChanged();
				}
			}
		}
		
		[Column(Storage="_NewValue", DbType="Decimal(15,4)")]
		public System.Nullable<decimal> NewValue
		{
			get
			{
				return this._NewValue;
			}
			set
			{
				if ((this._NewValue != value))
				{
					this.OnNewValueChanging(value);
					this.SendPropertyChanging();
					this._NewValue = value;
					this.SendPropertyChanged("NewValue");
					this.OnNewValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.EmailName")]
	public partial class EmailName : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _EmailName1;
		
		private string _TOORCC;
		
		private string _Dept;
		
		private System.Nullable<bool> _Available;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnEmailName1Changing(string value);
    partial void OnEmailName1Changed();
    partial void OnTOORCCChanging(string value);
    partial void OnTOORCCChanged();
    partial void OnDeptChanging(string value);
    partial void OnDeptChanged();
    partial void OnAvailableChanging(System.Nullable<bool> value);
    partial void OnAvailableChanged();
    #endregion
		
		public EmailName()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Name="EmailName", Storage="_EmailName1", DbType="VarChar(50)")]
		public string EmailName1
		{
			get
			{
				return this._EmailName1;
			}
			set
			{
				if ((this._EmailName1 != value))
				{
					this.OnEmailName1Changing(value);
					this.SendPropertyChanging();
					this._EmailName1 = value;
					this.SendPropertyChanged("EmailName1");
					this.OnEmailName1Changed();
				}
			}
		}
		
		[Column(Storage="_TOORCC", DbType="VarChar(10)")]
		public string TOORCC
		{
			get
			{
				return this._TOORCC;
			}
			set
			{
				if ((this._TOORCC != value))
				{
					this.OnTOORCCChanging(value);
					this.SendPropertyChanging();
					this._TOORCC = value;
					this.SendPropertyChanged("TOORCC");
					this.OnTOORCCChanged();
				}
			}
		}
		
		[Column(Storage="_Dept", DbType="VarChar(20)")]
		public string Dept
		{
			get
			{
				return this._Dept;
			}
			set
			{
				if ((this._Dept != value))
				{
					this.OnDeptChanging(value);
					this.SendPropertyChanging();
					this._Dept = value;
					this.SendPropertyChanged("Dept");
					this.OnDeptChanged();
				}
			}
		}
		
		[Column(Storage="_Available", DbType="Bit")]
		public System.Nullable<bool> Available
		{
			get
			{
				return this._Available;
			}
			set
			{
				if ((this._Available != value))
				{
					this.OnAvailableChanging(value);
					this.SendPropertyChanging();
					this._Available = value;
					this.SendPropertyChanged("Available");
					this.OnAvailableChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.MaterialTypeDimension")]
	public partial class MaterialTypeDimension : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ERPSupplier;
		
		private string _MaterialType;
		
		private string _EndCustomer;
		
		private string _Dimension;
		
		private System.Nullable<bool> _HaveSupplementSheet;
		
		private string _Remark;
		
		private string _POUM;
		
		private System.Nullable<double> _ShipmentTolerant;
		
		private string _WidthSpec;
		
		private System.Nullable<bool> _HaveVAT;
		
		private System.Nullable<decimal> _VAT;
		
		private EntityRef<SupplierProfile> _SupplierProfile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnERPSupplierChanging(string value);
    partial void OnERPSupplierChanged();
    partial void OnMaterialTypeChanging(string value);
    partial void OnMaterialTypeChanged();
    partial void OnEndCustomerChanging(string value);
    partial void OnEndCustomerChanged();
    partial void OnDimensionChanging(string value);
    partial void OnDimensionChanged();
    partial void OnHaveSupplementSheetChanging(System.Nullable<bool> value);
    partial void OnHaveSupplementSheetChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnPOUMChanging(string value);
    partial void OnPOUMChanged();
    partial void OnShipmentTolerantChanging(System.Nullable<double> value);
    partial void OnShipmentTolerantChanged();
    partial void OnWidthSpecChanging(string value);
    partial void OnWidthSpecChanged();
    partial void OnHaveVATChanging(System.Nullable<bool> value);
    partial void OnHaveVATChanged();
    partial void OnVATChanging(System.Nullable<decimal> value);
    partial void OnVATChanged();
    #endregion
		
		public MaterialTypeDimension()
		{
			this._SupplierProfile = default(EntityRef<SupplierProfile>);
			OnCreated();
		}
		
		[Column(Storage="_ERPSupplier", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ERPSupplier
		{
			get
			{
				return this._ERPSupplier;
			}
			set
			{
				if ((this._ERPSupplier != value))
				{
					if (this._SupplierProfile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnERPSupplierChanging(value);
					this.SendPropertyChanging();
					this._ERPSupplier = value;
					this.SendPropertyChanged("ERPSupplier");
					this.OnERPSupplierChanged();
				}
			}
		}
		
		[Column(Storage="_MaterialType", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaterialType
		{
			get
			{
				return this._MaterialType;
			}
			set
			{
				if ((this._MaterialType != value))
				{
					this.OnMaterialTypeChanging(value);
					this.SendPropertyChanging();
					this._MaterialType = value;
					this.SendPropertyChanged("MaterialType");
					this.OnMaterialTypeChanged();
				}
			}
		}
		
		[Column(Storage="_EndCustomer", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string EndCustomer
		{
			get
			{
				return this._EndCustomer;
			}
			set
			{
				if ((this._EndCustomer != value))
				{
					this.OnEndCustomerChanging(value);
					this.SendPropertyChanging();
					this._EndCustomer = value;
					this.SendPropertyChanged("EndCustomer");
					this.OnEndCustomerChanged();
				}
			}
		}
		
		[Column(Storage="_Dimension", DbType="VarChar(50)")]
		public string Dimension
		{
			get
			{
				return this._Dimension;
			}
			set
			{
				if ((this._Dimension != value))
				{
					this.OnDimensionChanging(value);
					this.SendPropertyChanging();
					this._Dimension = value;
					this.SendPropertyChanged("Dimension");
					this.OnDimensionChanged();
				}
			}
		}
		
		[Column(Storage="_HaveSupplementSheet", DbType="Bit")]
		public System.Nullable<bool> HaveSupplementSheet
		{
			get
			{
				return this._HaveSupplementSheet;
			}
			set
			{
				if ((this._HaveSupplementSheet != value))
				{
					this.OnHaveSupplementSheetChanging(value);
					this.SendPropertyChanging();
					this._HaveSupplementSheet = value;
					this.SendPropertyChanged("HaveSupplementSheet");
					this.OnHaveSupplementSheetChanged();
				}
			}
		}
		
		[Column(Storage="_Remark", DbType="NVarChar(200)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[Column(Storage="_POUM", DbType="NVarChar(10)")]
		public string POUM
		{
			get
			{
				return this._POUM;
			}
			set
			{
				if ((this._POUM != value))
				{
					this.OnPOUMChanging(value);
					this.SendPropertyChanging();
					this._POUM = value;
					this.SendPropertyChanged("POUM");
					this.OnPOUMChanged();
				}
			}
		}
		
		[Column(Storage="_ShipmentTolerant", DbType="Float")]
		public System.Nullable<double> ShipmentTolerant
		{
			get
			{
				return this._ShipmentTolerant;
			}
			set
			{
				if ((this._ShipmentTolerant != value))
				{
					this.OnShipmentTolerantChanging(value);
					this.SendPropertyChanging();
					this._ShipmentTolerant = value;
					this.SendPropertyChanged("ShipmentTolerant");
					this.OnShipmentTolerantChanged();
				}
			}
		}
		
		[Column(Storage="_WidthSpec", DbType="NVarChar(10)")]
		public string WidthSpec
		{
			get
			{
				return this._WidthSpec;
			}
			set
			{
				if ((this._WidthSpec != value))
				{
					this.OnWidthSpecChanging(value);
					this.SendPropertyChanging();
					this._WidthSpec = value;
					this.SendPropertyChanged("WidthSpec");
					this.OnWidthSpecChanged();
				}
			}
		}
		
		[Column(Storage="_HaveVAT", DbType="Bit")]
		public System.Nullable<bool> HaveVAT
		{
			get
			{
				return this._HaveVAT;
			}
			set
			{
				if ((this._HaveVAT != value))
				{
					this.OnHaveVATChanging(value);
					this.SendPropertyChanging();
					this._HaveVAT = value;
					this.SendPropertyChanged("HaveVAT");
					this.OnHaveVATChanged();
				}
			}
		}
		
		[Column(Storage="_VAT", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> VAT
		{
			get
			{
				return this._VAT;
			}
			set
			{
				if ((this._VAT != value))
				{
					this.OnVATChanging(value);
					this.SendPropertyChanging();
					this._VAT = value;
					this.SendPropertyChanged("VAT");
					this.OnVATChanged();
				}
			}
		}
		
		[Association(Name="SupplierProfile_MaterialTypeDimension", Storage="_SupplierProfile", ThisKey="ERPSupplier", OtherKey="ERPSupplier", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public SupplierProfile SupplierProfile
		{
			get
			{
				return this._SupplierProfile.Entity;
			}
			set
			{
				SupplierProfile previousValue = this._SupplierProfile.Entity;
				if (((previousValue != value) 
							|| (this._SupplierProfile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SupplierProfile.Entity = null;
						previousValue.MaterialTypeDimensions.Remove(this);
					}
					this._SupplierProfile.Entity = value;
					if ((value != null))
					{
						value.MaterialTypeDimensions.Add(this);
						this._ERPSupplier = value.ERPSupplier;
					}
					else
					{
						this._ERPSupplier = default(string);
					}
					this.SendPropertyChanged("SupplierProfile");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.TradeMethodTransform")]
	public partial class TradeMethodTransform : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CustomerCode;
		
		private string _TradeMethodFrom;
		
		private string _TradeMethodTO;
		
		private System.Nullable<bool> _IsEnable;
		
		private string _CreatUser;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _AlterUser;
		
		private System.Nullable<System.DateTime> _AlterDate;
		
		private string _Remark;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomerCodeChanging(string value);
    partial void OnCustomerCodeChanged();
    partial void OnTradeMethodFromChanging(string value);
    partial void OnTradeMethodFromChanged();
    partial void OnTradeMethodTOChanging(string value);
    partial void OnTradeMethodTOChanged();
    partial void OnIsEnableChanging(System.Nullable<bool> value);
    partial void OnIsEnableChanged();
    partial void OnCreatUserChanging(string value);
    partial void OnCreatUserChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnAlterUserChanging(string value);
    partial void OnAlterUserChanged();
    partial void OnAlterDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAlterDateChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public TradeMethodTransform()
		{
			OnCreated();
		}
		
		[Column(Storage="_CustomerCode", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CustomerCode
		{
			get
			{
				return this._CustomerCode;
			}
			set
			{
				if ((this._CustomerCode != value))
				{
					this.OnCustomerCodeChanging(value);
					this.SendPropertyChanging();
					this._CustomerCode = value;
					this.SendPropertyChanged("CustomerCode");
					this.OnCustomerCodeChanged();
				}
			}
		}
		
		[Column(Storage="_TradeMethodFrom", DbType="NVarChar(4) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TradeMethodFrom
		{
			get
			{
				return this._TradeMethodFrom;
			}
			set
			{
				if ((this._TradeMethodFrom != value))
				{
					this.OnTradeMethodFromChanging(value);
					this.SendPropertyChanging();
					this._TradeMethodFrom = value;
					this.SendPropertyChanged("TradeMethodFrom");
					this.OnTradeMethodFromChanged();
				}
			}
		}
		
		[Column(Storage="_TradeMethodTO", DbType="NVarChar(4)")]
		public string TradeMethodTO
		{
			get
			{
				return this._TradeMethodTO;
			}
			set
			{
				if ((this._TradeMethodTO != value))
				{
					this.OnTradeMethodTOChanging(value);
					this.SendPropertyChanging();
					this._TradeMethodTO = value;
					this.SendPropertyChanged("TradeMethodTO");
					this.OnTradeMethodTOChanged();
				}
			}
		}
		
		[Column(Storage="_IsEnable", DbType="Bit")]
		public System.Nullable<bool> IsEnable
		{
			get
			{
				return this._IsEnable;
			}
			set
			{
				if ((this._IsEnable != value))
				{
					this.OnIsEnableChanging(value);
					this.SendPropertyChanging();
					this._IsEnable = value;
					this.SendPropertyChanged("IsEnable");
					this.OnIsEnableChanged();
				}
			}
		}
		
		[Column(Storage="_CreatUser", DbType="NVarChar(50)")]
		public string CreatUser
		{
			get
			{
				return this._CreatUser;
			}
			set
			{
				if ((this._CreatUser != value))
				{
					this.OnCreatUserChanging(value);
					this.SendPropertyChanging();
					this._CreatUser = value;
					this.SendPropertyChanged("CreatUser");
					this.OnCreatUserChanged();
				}
			}
		}
		
		[Column(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[Column(Storage="_AlterUser", DbType="NVarChar(50)")]
		public string AlterUser
		{
			get
			{
				return this._AlterUser;
			}
			set
			{
				if ((this._AlterUser != value))
				{
					this.OnAlterUserChanging(value);
					this.SendPropertyChanging();
					this._AlterUser = value;
					this.SendPropertyChanged("AlterUser");
					this.OnAlterUserChanged();
				}
			}
		}
		
		[Column(Storage="_AlterDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AlterDate
		{
			get
			{
				return this._AlterDate;
			}
			set
			{
				if ((this._AlterDate != value))
				{
					this.OnAlterDateChanging(value);
					this.SendPropertyChanging();
					this._AlterDate = value;
					this.SendPropertyChanged("AlterDate");
					this.OnAlterDateChanged();
				}
			}
		}
		
		[Column(Storage="_Remark", DbType="NVarChar(50)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.V_CurrencyRate")]
	public partial class V_CurrencyRate
	{
		
		private string _SRCR81;
		
		private System.Nullable<decimal> _BUY;
		
		private System.Nullable<decimal> _SPBU;
		
		private System.Nullable<decimal> _SELL;
		
		private System.Nullable<decimal> _SPSE;
		
		public V_CurrencyRate()
		{
		}
		
		[Column(Storage="_SRCR81", DbType="Char(3) NOT NULL", CanBeNull=false)]
		public string SRCR81
		{
			get
			{
				return this._SRCR81;
			}
			set
			{
				if ((this._SRCR81 != value))
				{
					this._SRCR81 = value;
				}
			}
		}
		
		[Column(Storage="_BUY", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> BUY
		{
			get
			{
				return this._BUY;
			}
			set
			{
				if ((this._BUY != value))
				{
					this._BUY = value;
				}
			}
		}
		
		[Column(Storage="_SPBU", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> SPBU
		{
			get
			{
				return this._SPBU;
			}
			set
			{
				if ((this._SPBU != value))
				{
					this._SPBU = value;
				}
			}
		}
		
		[Column(Storage="_SELL", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> SELL
		{
			get
			{
				return this._SELL;
			}
			set
			{
				if ((this._SELL != value))
				{
					this._SELL = value;
				}
			}
		}
		
		[Column(Storage="_SPSE", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> SPSE
		{
			get
			{
				return this._SPSE;
			}
			set
			{
				if ((this._SPSE != value))
				{
					this._SPSE = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.TransitPointArea")]
	public partial class TransitPointArea : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _OID;
		
		private string _SeqNo;
		
		private string _TransitPoint_Area;
		
		private string _AreaNo;
		
		private string _CargoReceiving;
		
		private string _TransitMode;
		
		private int _TimeFrame;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOIDChanging(long value);
    partial void OnOIDChanged();
    partial void OnSeqNoChanging(string value);
    partial void OnSeqNoChanged();
    partial void OnTransitPoint_AreaChanging(string value);
    partial void OnTransitPoint_AreaChanged();
    partial void OnAreaNoChanging(string value);
    partial void OnAreaNoChanged();
    partial void OnCargoReceivingChanging(string value);
    partial void OnCargoReceivingChanged();
    partial void OnTransitModeChanging(string value);
    partial void OnTransitModeChanged();
    partial void OnTimeFrameChanging(int value);
    partial void OnTimeFrameChanged();
    #endregion
		
		public TransitPointArea()
		{
			OnCreated();
		}
		
		[Column(Storage="_OID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long OID
		{
			get
			{
				return this._OID;
			}
			set
			{
				if ((this._OID != value))
				{
					this.OnOIDChanging(value);
					this.SendPropertyChanging();
					this._OID = value;
					this.SendPropertyChanged("OID");
					this.OnOIDChanged();
				}
			}
		}
		
		[Column(Storage="_SeqNo", DbType="VarChar(20)")]
		public string SeqNo
		{
			get
			{
				return this._SeqNo;
			}
			set
			{
				if ((this._SeqNo != value))
				{
					this.OnSeqNoChanging(value);
					this.SendPropertyChanging();
					this._SeqNo = value;
					this.SendPropertyChanged("SeqNo");
					this.OnSeqNoChanged();
				}
			}
		}
		
		[Column(Storage="_TransitPoint_Area", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string TransitPoint_Area
		{
			get
			{
				return this._TransitPoint_Area;
			}
			set
			{
				if ((this._TransitPoint_Area != value))
				{
					this.OnTransitPoint_AreaChanging(value);
					this.SendPropertyChanging();
					this._TransitPoint_Area = value;
					this.SendPropertyChanged("TransitPoint_Area");
					this.OnTransitPoint_AreaChanged();
				}
			}
		}
		
		[Column(Storage="_AreaNo", DbType="VarChar(100)")]
		public string AreaNo
		{
			get
			{
				return this._AreaNo;
			}
			set
			{
				if ((this._AreaNo != value))
				{
					this.OnAreaNoChanging(value);
					this.SendPropertyChanging();
					this._AreaNo = value;
					this.SendPropertyChanged("AreaNo");
					this.OnAreaNoChanged();
				}
			}
		}
		
		[Column(Storage="_CargoReceiving", DbType="VarChar(100)")]
		public string CargoReceiving
		{
			get
			{
				return this._CargoReceiving;
			}
			set
			{
				if ((this._CargoReceiving != value))
				{
					this.OnCargoReceivingChanging(value);
					this.SendPropertyChanging();
					this._CargoReceiving = value;
					this.SendPropertyChanged("CargoReceiving");
					this.OnCargoReceivingChanged();
				}
			}
		}
		
		[Column(Storage="_TransitMode", DbType="VarChar(100)")]
		public string TransitMode
		{
			get
			{
				return this._TransitMode;
			}
			set
			{
				if ((this._TransitMode != value))
				{
					this.OnTransitModeChanging(value);
					this.SendPropertyChanging();
					this._TransitMode = value;
					this.SendPropertyChanged("TransitMode");
					this.OnTransitModeChanged();
				}
			}
		}
		
		[Column(Storage="_TimeFrame", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int TimeFrame
		{
			get
			{
				return this._TimeFrame;
			}
			set
			{
				if ((this._TimeFrame != value))
				{
					this.OnTimeFrameChanging(value);
					this.SendPropertyChanging();
					this._TimeFrame = value;
					this.SendPropertyChanged("TimeFrame");
					this.OnTimeFrameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.IncontermsTransitForMIDc")]
	public partial class IncontermsTransitForMIDc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _OID;
		
		private int _SeqNo;
		
		private string _ERPSupplier;
		
		private string _PHFactories;
		
		private string _LocationofSuppFactory;
		
		private System.DateTime _FromEffectivedDate;
		
		private bool _IsLCL;
		
		private string _TransitMode;
		
		private string _Incoterms;
		
		private string _IncotermsPointPort;
		
		private string _PointofDestination;
		
		private string _PointOfOrigin;
		
		private string _PointOfOriginAddress;
		
		private string _PlaceOfOrigin;
		
		private string _PortBorderOfOrigin;
		
		private string _PortBorderOfDestination;
		
		private string _PlaceOfDestination;
		
		private string _PointOfDestination6P;
		
		private string _PointOfDestinationAddress;
		
		private System.Nullable<System.DateTime> _ToEffectivedDate;
		
		private string _ForwarderAddressEn;
		
		private string _ForwarderAddressCH;
		
		private string _ForwarderAddressTH;
		
		private System.Nullable<int> _TimeFrame;
		
		private string _SpecialNote;
		
		private System.Nullable<bool> _FCLAgreedRequest;
		
		private System.Nullable<bool> _FCLTransitPointChangeNecessity;
		
		private string _FCLIncotermsPointPort;
		
		private string _FCLPointofDestination;
		
		private System.Nullable<int> _FCLTimeFrame;
		
		private string _FCLPortBorderOfDestination;
		
		private string _FCLPlaceOfDestination;
		
		private string _FCLPointOfDestination6P;
		
		private string _FCLPointOfDestinationAddress;
		
		private string _FCLForwarderAddressEn;
		
		private string _FCLForwarderAddressCH;
		
		private string _FCLForwarderAddressTH;
		
		private System.Nullable<decimal> _Point2PortOfOriginCost;
		
		private System.Nullable<decimal> _FreightCost;
		
		private System.Nullable<decimal> _Port2PointOfDestinationCost;
		
		private System.Nullable<decimal> _PointOfDestination2ProductionSiteCost;
		
		private string _DeliveryRouting;
		
		private EntityRef<SupplierProfile> _SupplierProfile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOIDChanging(long value);
    partial void OnOIDChanged();
    partial void OnSeqNoChanging(int value);
    partial void OnSeqNoChanged();
    partial void OnERPSupplierChanging(string value);
    partial void OnERPSupplierChanged();
    partial void OnPHFactoriesChanging(string value);
    partial void OnPHFactoriesChanged();
    partial void OnLocationofSuppFactoryChanging(string value);
    partial void OnLocationofSuppFactoryChanged();
    partial void OnFromEffectivedDateChanging(System.DateTime value);
    partial void OnFromEffectivedDateChanged();
    partial void OnIsLCLChanging(bool value);
    partial void OnIsLCLChanged();
    partial void OnTransitModeChanging(string value);
    partial void OnTransitModeChanged();
    partial void OnIncotermsChanging(string value);
    partial void OnIncotermsChanged();
    partial void OnIncotermsPointPortChanging(string value);
    partial void OnIncotermsPointPortChanged();
    partial void OnPointofDestinationChanging(string value);
    partial void OnPointofDestinationChanged();
    partial void OnPointOfOriginChanging(string value);
    partial void OnPointOfOriginChanged();
    partial void OnPointOfOriginAddressChanging(string value);
    partial void OnPointOfOriginAddressChanged();
    partial void OnPlaceOfOriginChanging(string value);
    partial void OnPlaceOfOriginChanged();
    partial void OnPortBorderOfOriginChanging(string value);
    partial void OnPortBorderOfOriginChanged();
    partial void OnPortBorderOfDestinationChanging(string value);
    partial void OnPortBorderOfDestinationChanged();
    partial void OnPlaceOfDestinationChanging(string value);
    partial void OnPlaceOfDestinationChanged();
    partial void OnPointOfDestination6PChanging(string value);
    partial void OnPointOfDestination6PChanged();
    partial void OnPointOfDestinationAddressChanging(string value);
    partial void OnPointOfDestinationAddressChanged();
    partial void OnToEffectivedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnToEffectivedDateChanged();
    partial void OnForwarderAddressEnChanging(string value);
    partial void OnForwarderAddressEnChanged();
    partial void OnForwarderAddressCHChanging(string value);
    partial void OnForwarderAddressCHChanged();
    partial void OnForwarderAddressTHChanging(string value);
    partial void OnForwarderAddressTHChanged();
    partial void OnTimeFrameChanging(System.Nullable<int> value);
    partial void OnTimeFrameChanged();
    partial void OnSpecialNoteChanging(string value);
    partial void OnSpecialNoteChanged();
    partial void OnFCLAgreedRequestChanging(System.Nullable<bool> value);
    partial void OnFCLAgreedRequestChanged();
    partial void OnFCLTransitPointChangeNecessityChanging(System.Nullable<bool> value);
    partial void OnFCLTransitPointChangeNecessityChanged();
    partial void OnFCLIncotermsPointPortChanging(string value);
    partial void OnFCLIncotermsPointPortChanged();
    partial void OnFCLPointofDestinationChanging(string value);
    partial void OnFCLPointofDestinationChanged();
    partial void OnFCLTimeFrameChanging(System.Nullable<int> value);
    partial void OnFCLTimeFrameChanged();
    partial void OnFCLPortBorderOfDestinationChanging(string value);
    partial void OnFCLPortBorderOfDestinationChanged();
    partial void OnFCLPlaceOfDestinationChanging(string value);
    partial void OnFCLPlaceOfDestinationChanged();
    partial void OnFCLPointOfDestination6PChanging(string value);
    partial void OnFCLPointOfDestination6PChanged();
    partial void OnFCLPointOfDestinationAddressChanging(string value);
    partial void OnFCLPointOfDestinationAddressChanged();
    partial void OnFCLForwarderAddressEnChanging(string value);
    partial void OnFCLForwarderAddressEnChanged();
    partial void OnFCLForwarderAddressCHChanging(string value);
    partial void OnFCLForwarderAddressCHChanged();
    partial void OnFCLForwarderAddressTHChanging(string value);
    partial void OnFCLForwarderAddressTHChanged();
    partial void OnPoint2PortOfOriginCostChanging(System.Nullable<decimal> value);
    partial void OnPoint2PortOfOriginCostChanged();
    partial void OnFreightCostChanging(System.Nullable<decimal> value);
    partial void OnFreightCostChanged();
    partial void OnPort2PointOfDestinationCostChanging(System.Nullable<decimal> value);
    partial void OnPort2PointOfDestinationCostChanged();
    partial void OnPointOfDestination2ProductionSiteCostChanging(System.Nullable<decimal> value);
    partial void OnPointOfDestination2ProductionSiteCostChanged();
    partial void OnDeliveryRoutingChanging(string value);
    partial void OnDeliveryRoutingChanged();
    #endregion
		
		public IncontermsTransitForMIDc()
		{
			this._SupplierProfile = default(EntityRef<SupplierProfile>);
			OnCreated();
		}
		
		[Column(Storage="_OID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long OID
		{
			get
			{
				return this._OID;
			}
			set
			{
				if ((this._OID != value))
				{
					this.OnOIDChanging(value);
					this.SendPropertyChanging();
					this._OID = value;
					this.SendPropertyChanged("OID");
					this.OnOIDChanged();
				}
			}
		}
		
		[Column(Storage="_SeqNo", DbType="Int NOT NULL")]
		public int SeqNo
		{
			get
			{
				return this._SeqNo;
			}
			set
			{
				if ((this._SeqNo != value))
				{
					this.OnSeqNoChanging(value);
					this.SendPropertyChanging();
					this._SeqNo = value;
					this.SendPropertyChanged("SeqNo");
					this.OnSeqNoChanged();
				}
			}
		}
		
		[Column(Storage="_ERPSupplier", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ERPSupplier
		{
			get
			{
				return this._ERPSupplier;
			}
			set
			{
				if ((this._ERPSupplier != value))
				{
					if (this._SupplierProfile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnERPSupplierChanging(value);
					this.SendPropertyChanging();
					this._ERPSupplier = value;
					this.SendPropertyChanged("ERPSupplier");
					this.OnERPSupplierChanged();
				}
			}
		}
		
		[Column(Storage="_PHFactories", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		public string PHFactories
		{
			get
			{
				return this._PHFactories;
			}
			set
			{
				if ((this._PHFactories != value))
				{
					this.OnPHFactoriesChanging(value);
					this.SendPropertyChanging();
					this._PHFactories = value;
					this.SendPropertyChanged("PHFactories");
					this.OnPHFactoriesChanged();
				}
			}
		}
		
		[Column(Storage="_LocationofSuppFactory", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string LocationofSuppFactory
		{
			get
			{
				return this._LocationofSuppFactory;
			}
			set
			{
				if ((this._LocationofSuppFactory != value))
				{
					this.OnLocationofSuppFactoryChanging(value);
					this.SendPropertyChanging();
					this._LocationofSuppFactory = value;
					this.SendPropertyChanged("LocationofSuppFactory");
					this.OnLocationofSuppFactoryChanged();
				}
			}
		}
		
		[Column(Storage="_FromEffectivedDate", DbType="DateTime NOT NULL")]
		public System.DateTime FromEffectivedDate
		{
			get
			{
				return this._FromEffectivedDate;
			}
			set
			{
				if ((this._FromEffectivedDate != value))
				{
					this.OnFromEffectivedDateChanging(value);
					this.SendPropertyChanging();
					this._FromEffectivedDate = value;
					this.SendPropertyChanged("FromEffectivedDate");
					this.OnFromEffectivedDateChanged();
				}
			}
		}
		
		[Column(Storage="_IsLCL", DbType="Bit NOT NULL")]
		public bool IsLCL
		{
			get
			{
				return this._IsLCL;
			}
			set
			{
				if ((this._IsLCL != value))
				{
					this.OnIsLCLChanging(value);
					this.SendPropertyChanging();
					this._IsLCL = value;
					this.SendPropertyChanged("IsLCL");
					this.OnIsLCLChanged();
				}
			}
		}
		
		[Column(Storage="_TransitMode", DbType="NVarChar(50)")]
		public string TransitMode
		{
			get
			{
				return this._TransitMode;
			}
			set
			{
				if ((this._TransitMode != value))
				{
					this.OnTransitModeChanging(value);
					this.SendPropertyChanging();
					this._TransitMode = value;
					this.SendPropertyChanged("TransitMode");
					this.OnTransitModeChanged();
				}
			}
		}
		
		[Column(Storage="_Incoterms", DbType="VarChar(50)")]
		public string Incoterms
		{
			get
			{
				return this._Incoterms;
			}
			set
			{
				if ((this._Incoterms != value))
				{
					this.OnIncotermsChanging(value);
					this.SendPropertyChanging();
					this._Incoterms = value;
					this.SendPropertyChanged("Incoterms");
					this.OnIncotermsChanged();
				}
			}
		}
		
		[Column(Storage="_IncotermsPointPort", DbType="NVarChar(50)")]
		public string IncotermsPointPort
		{
			get
			{
				return this._IncotermsPointPort;
			}
			set
			{
				if ((this._IncotermsPointPort != value))
				{
					this.OnIncotermsPointPortChanging(value);
					this.SendPropertyChanging();
					this._IncotermsPointPort = value;
					this.SendPropertyChanged("IncotermsPointPort");
					this.OnIncotermsPointPortChanged();
				}
			}
		}
		
		[Column(Storage="_PointofDestination", DbType="VarChar(50)")]
		public string PointofDestination
		{
			get
			{
				return this._PointofDestination;
			}
			set
			{
				if ((this._PointofDestination != value))
				{
					this.OnPointofDestinationChanging(value);
					this.SendPropertyChanging();
					this._PointofDestination = value;
					this.SendPropertyChanged("PointofDestination");
					this.OnPointofDestinationChanged();
				}
			}
		}
		
		[Column(Storage="_PointOfOrigin", DbType="NVarChar(100)")]
		public string PointOfOrigin
		{
			get
			{
				return this._PointOfOrigin;
			}
			set
			{
				if ((this._PointOfOrigin != value))
				{
					this.OnPointOfOriginChanging(value);
					this.SendPropertyChanging();
					this._PointOfOrigin = value;
					this.SendPropertyChanged("PointOfOrigin");
					this.OnPointOfOriginChanged();
				}
			}
		}
		
		[Column(Storage="_PointOfOriginAddress", DbType="NVarChar(500)")]
		public string PointOfOriginAddress
		{
			get
			{
				return this._PointOfOriginAddress;
			}
			set
			{
				if ((this._PointOfOriginAddress != value))
				{
					this.OnPointOfOriginAddressChanging(value);
					this.SendPropertyChanging();
					this._PointOfOriginAddress = value;
					this.SendPropertyChanged("PointOfOriginAddress");
					this.OnPointOfOriginAddressChanged();
				}
			}
		}
		
		[Column(Storage="_PlaceOfOrigin", DbType="NVarChar(100)")]
		public string PlaceOfOrigin
		{
			get
			{
				return this._PlaceOfOrigin;
			}
			set
			{
				if ((this._PlaceOfOrigin != value))
				{
					this.OnPlaceOfOriginChanging(value);
					this.SendPropertyChanging();
					this._PlaceOfOrigin = value;
					this.SendPropertyChanged("PlaceOfOrigin");
					this.OnPlaceOfOriginChanged();
				}
			}
		}
		
		[Column(Storage="_PortBorderOfOrigin", DbType="NVarChar(100)")]
		public string PortBorderOfOrigin
		{
			get
			{
				return this._PortBorderOfOrigin;
			}
			set
			{
				if ((this._PortBorderOfOrigin != value))
				{
					this.OnPortBorderOfOriginChanging(value);
					this.SendPropertyChanging();
					this._PortBorderOfOrigin = value;
					this.SendPropertyChanged("PortBorderOfOrigin");
					this.OnPortBorderOfOriginChanged();
				}
			}
		}
		
		[Column(Storage="_PortBorderOfDestination", DbType="NVarChar(100)")]
		public string PortBorderOfDestination
		{
			get
			{
				return this._PortBorderOfDestination;
			}
			set
			{
				if ((this._PortBorderOfDestination != value))
				{
					this.OnPortBorderOfDestinationChanging(value);
					this.SendPropertyChanging();
					this._PortBorderOfDestination = value;
					this.SendPropertyChanged("PortBorderOfDestination");
					this.OnPortBorderOfDestinationChanged();
				}
			}
		}
		
		[Column(Storage="_PlaceOfDestination", DbType="NVarChar(100)")]
		public string PlaceOfDestination
		{
			get
			{
				return this._PlaceOfDestination;
			}
			set
			{
				if ((this._PlaceOfDestination != value))
				{
					this.OnPlaceOfDestinationChanging(value);
					this.SendPropertyChanging();
					this._PlaceOfDestination = value;
					this.SendPropertyChanged("PlaceOfDestination");
					this.OnPlaceOfDestinationChanged();
				}
			}
		}
		
		[Column(Storage="_PointOfDestination6P", DbType="NVarChar(100)")]
		public string PointOfDestination6P
		{
			get
			{
				return this._PointOfDestination6P;
			}
			set
			{
				if ((this._PointOfDestination6P != value))
				{
					this.OnPointOfDestination6PChanging(value);
					this.SendPropertyChanging();
					this._PointOfDestination6P = value;
					this.SendPropertyChanged("PointOfDestination6P");
					this.OnPointOfDestination6PChanged();
				}
			}
		}
		
		[Column(Storage="_PointOfDestinationAddress", DbType="NVarChar(500)")]
		public string PointOfDestinationAddress
		{
			get
			{
				return this._PointOfDestinationAddress;
			}
			set
			{
				if ((this._PointOfDestinationAddress != value))
				{
					this.OnPointOfDestinationAddressChanging(value);
					this.SendPropertyChanging();
					this._PointOfDestinationAddress = value;
					this.SendPropertyChanged("PointOfDestinationAddress");
					this.OnPointOfDestinationAddressChanged();
				}
			}
		}
		
		[Column(Storage="_ToEffectivedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ToEffectivedDate
		{
			get
			{
				return this._ToEffectivedDate;
			}
			set
			{
				if ((this._ToEffectivedDate != value))
				{
					this.OnToEffectivedDateChanging(value);
					this.SendPropertyChanging();
					this._ToEffectivedDate = value;
					this.SendPropertyChanged("ToEffectivedDate");
					this.OnToEffectivedDateChanged();
				}
			}
		}
		
		[Column(Storage="_ForwarderAddressEn", DbType="NVarChar(500)")]
		public string ForwarderAddressEn
		{
			get
			{
				return this._ForwarderAddressEn;
			}
			set
			{
				if ((this._ForwarderAddressEn != value))
				{
					this.OnForwarderAddressEnChanging(value);
					this.SendPropertyChanging();
					this._ForwarderAddressEn = value;
					this.SendPropertyChanged("ForwarderAddressEn");
					this.OnForwarderAddressEnChanged();
				}
			}
		}
		
		[Column(Storage="_ForwarderAddressCH", DbType="NVarChar(500)")]
		public string ForwarderAddressCH
		{
			get
			{
				return this._ForwarderAddressCH;
			}
			set
			{
				if ((this._ForwarderAddressCH != value))
				{
					this.OnForwarderAddressCHChanging(value);
					this.SendPropertyChanging();
					this._ForwarderAddressCH = value;
					this.SendPropertyChanged("ForwarderAddressCH");
					this.OnForwarderAddressCHChanged();
				}
			}
		}
		
		[Column(Storage="_ForwarderAddressTH", DbType="NVarChar(500)")]
		public string ForwarderAddressTH
		{
			get
			{
				return this._ForwarderAddressTH;
			}
			set
			{
				if ((this._ForwarderAddressTH != value))
				{
					this.OnForwarderAddressTHChanging(value);
					this.SendPropertyChanging();
					this._ForwarderAddressTH = value;
					this.SendPropertyChanged("ForwarderAddressTH");
					this.OnForwarderAddressTHChanged();
				}
			}
		}
		
		[Column(Storage="_TimeFrame", DbType="Int")]
		public System.Nullable<int> TimeFrame
		{
			get
			{
				return this._TimeFrame;
			}
			set
			{
				if ((this._TimeFrame != value))
				{
					this.OnTimeFrameChanging(value);
					this.SendPropertyChanging();
					this._TimeFrame = value;
					this.SendPropertyChanged("TimeFrame");
					this.OnTimeFrameChanged();
				}
			}
		}
		
		[Column(Storage="_SpecialNote", DbType="NVarChar(1000)")]
		public string SpecialNote
		{
			get
			{
				return this._SpecialNote;
			}
			set
			{
				if ((this._SpecialNote != value))
				{
					this.OnSpecialNoteChanging(value);
					this.SendPropertyChanging();
					this._SpecialNote = value;
					this.SendPropertyChanged("SpecialNote");
					this.OnSpecialNoteChanged();
				}
			}
		}
		
		[Column(Storage="_FCLAgreedRequest", DbType="Bit")]
		public System.Nullable<bool> FCLAgreedRequest
		{
			get
			{
				return this._FCLAgreedRequest;
			}
			set
			{
				if ((this._FCLAgreedRequest != value))
				{
					this.OnFCLAgreedRequestChanging(value);
					this.SendPropertyChanging();
					this._FCLAgreedRequest = value;
					this.SendPropertyChanged("FCLAgreedRequest");
					this.OnFCLAgreedRequestChanged();
				}
			}
		}
		
		[Column(Storage="_FCLTransitPointChangeNecessity", DbType="Bit")]
		public System.Nullable<bool> FCLTransitPointChangeNecessity
		{
			get
			{
				return this._FCLTransitPointChangeNecessity;
			}
			set
			{
				if ((this._FCLTransitPointChangeNecessity != value))
				{
					this.OnFCLTransitPointChangeNecessityChanging(value);
					this.SendPropertyChanging();
					this._FCLTransitPointChangeNecessity = value;
					this.SendPropertyChanged("FCLTransitPointChangeNecessity");
					this.OnFCLTransitPointChangeNecessityChanged();
				}
			}
		}
		
		[Column(Storage="_FCLIncotermsPointPort", DbType="NVarChar(50)")]
		public string FCLIncotermsPointPort
		{
			get
			{
				return this._FCLIncotermsPointPort;
			}
			set
			{
				if ((this._FCLIncotermsPointPort != value))
				{
					this.OnFCLIncotermsPointPortChanging(value);
					this.SendPropertyChanging();
					this._FCLIncotermsPointPort = value;
					this.SendPropertyChanged("FCLIncotermsPointPort");
					this.OnFCLIncotermsPointPortChanged();
				}
			}
		}
		
		[Column(Storage="_FCLPointofDestination", DbType="VarChar(50)")]
		public string FCLPointofDestination
		{
			get
			{
				return this._FCLPointofDestination;
			}
			set
			{
				if ((this._FCLPointofDestination != value))
				{
					this.OnFCLPointofDestinationChanging(value);
					this.SendPropertyChanging();
					this._FCLPointofDestination = value;
					this.SendPropertyChanged("FCLPointofDestination");
					this.OnFCLPointofDestinationChanged();
				}
			}
		}
		
		[Column(Storage="_FCLTimeFrame", DbType="Int")]
		public System.Nullable<int> FCLTimeFrame
		{
			get
			{
				return this._FCLTimeFrame;
			}
			set
			{
				if ((this._FCLTimeFrame != value))
				{
					this.OnFCLTimeFrameChanging(value);
					this.SendPropertyChanging();
					this._FCLTimeFrame = value;
					this.SendPropertyChanged("FCLTimeFrame");
					this.OnFCLTimeFrameChanged();
				}
			}
		}
		
		[Column(Storage="_FCLPortBorderOfDestination", DbType="NVarChar(100)")]
		public string FCLPortBorderOfDestination
		{
			get
			{
				return this._FCLPortBorderOfDestination;
			}
			set
			{
				if ((this._FCLPortBorderOfDestination != value))
				{
					this.OnFCLPortBorderOfDestinationChanging(value);
					this.SendPropertyChanging();
					this._FCLPortBorderOfDestination = value;
					this.SendPropertyChanged("FCLPortBorderOfDestination");
					this.OnFCLPortBorderOfDestinationChanged();
				}
			}
		}
		
		[Column(Storage="_FCLPlaceOfDestination", DbType="NVarChar(100)")]
		public string FCLPlaceOfDestination
		{
			get
			{
				return this._FCLPlaceOfDestination;
			}
			set
			{
				if ((this._FCLPlaceOfDestination != value))
				{
					this.OnFCLPlaceOfDestinationChanging(value);
					this.SendPropertyChanging();
					this._FCLPlaceOfDestination = value;
					this.SendPropertyChanged("FCLPlaceOfDestination");
					this.OnFCLPlaceOfDestinationChanged();
				}
			}
		}
		
		[Column(Storage="_FCLPointOfDestination6P", DbType="NVarChar(100)")]
		public string FCLPointOfDestination6P
		{
			get
			{
				return this._FCLPointOfDestination6P;
			}
			set
			{
				if ((this._FCLPointOfDestination6P != value))
				{
					this.OnFCLPointOfDestination6PChanging(value);
					this.SendPropertyChanging();
					this._FCLPointOfDestination6P = value;
					this.SendPropertyChanged("FCLPointOfDestination6P");
					this.OnFCLPointOfDestination6PChanged();
				}
			}
		}
		
		[Column(Storage="_FCLPointOfDestinationAddress", DbType="NVarChar(500)")]
		public string FCLPointOfDestinationAddress
		{
			get
			{
				return this._FCLPointOfDestinationAddress;
			}
			set
			{
				if ((this._FCLPointOfDestinationAddress != value))
				{
					this.OnFCLPointOfDestinationAddressChanging(value);
					this.SendPropertyChanging();
					this._FCLPointOfDestinationAddress = value;
					this.SendPropertyChanged("FCLPointOfDestinationAddress");
					this.OnFCLPointOfDestinationAddressChanged();
				}
			}
		}
		
		[Column(Storage="_FCLForwarderAddressEn", DbType="NVarChar(500)")]
		public string FCLForwarderAddressEn
		{
			get
			{
				return this._FCLForwarderAddressEn;
			}
			set
			{
				if ((this._FCLForwarderAddressEn != value))
				{
					this.OnFCLForwarderAddressEnChanging(value);
					this.SendPropertyChanging();
					this._FCLForwarderAddressEn = value;
					this.SendPropertyChanged("FCLForwarderAddressEn");
					this.OnFCLForwarderAddressEnChanged();
				}
			}
		}
		
		[Column(Storage="_FCLForwarderAddressCH", DbType="NVarChar(500)")]
		public string FCLForwarderAddressCH
		{
			get
			{
				return this._FCLForwarderAddressCH;
			}
			set
			{
				if ((this._FCLForwarderAddressCH != value))
				{
					this.OnFCLForwarderAddressCHChanging(value);
					this.SendPropertyChanging();
					this._FCLForwarderAddressCH = value;
					this.SendPropertyChanged("FCLForwarderAddressCH");
					this.OnFCLForwarderAddressCHChanged();
				}
			}
		}
		
		[Column(Storage="_FCLForwarderAddressTH", DbType="NVarChar(500)")]
		public string FCLForwarderAddressTH
		{
			get
			{
				return this._FCLForwarderAddressTH;
			}
			set
			{
				if ((this._FCLForwarderAddressTH != value))
				{
					this.OnFCLForwarderAddressTHChanging(value);
					this.SendPropertyChanging();
					this._FCLForwarderAddressTH = value;
					this.SendPropertyChanged("FCLForwarderAddressTH");
					this.OnFCLForwarderAddressTHChanged();
				}
			}
		}
		
		[Column(Storage="_Point2PortOfOriginCost", DbType="Decimal(15,4)")]
		public System.Nullable<decimal> Point2PortOfOriginCost
		{
			get
			{
				return this._Point2PortOfOriginCost;
			}
			set
			{
				if ((this._Point2PortOfOriginCost != value))
				{
					this.OnPoint2PortOfOriginCostChanging(value);
					this.SendPropertyChanging();
					this._Point2PortOfOriginCost = value;
					this.SendPropertyChanged("Point2PortOfOriginCost");
					this.OnPoint2PortOfOriginCostChanged();
				}
			}
		}
		
		[Column(Storage="_FreightCost", DbType="Decimal(15,4)")]
		public System.Nullable<decimal> FreightCost
		{
			get
			{
				return this._FreightCost;
			}
			set
			{
				if ((this._FreightCost != value))
				{
					this.OnFreightCostChanging(value);
					this.SendPropertyChanging();
					this._FreightCost = value;
					this.SendPropertyChanged("FreightCost");
					this.OnFreightCostChanged();
				}
			}
		}
		
		[Column(Storage="_Port2PointOfDestinationCost", DbType="Decimal(15,4)")]
		public System.Nullable<decimal> Port2PointOfDestinationCost
		{
			get
			{
				return this._Port2PointOfDestinationCost;
			}
			set
			{
				if ((this._Port2PointOfDestinationCost != value))
				{
					this.OnPort2PointOfDestinationCostChanging(value);
					this.SendPropertyChanging();
					this._Port2PointOfDestinationCost = value;
					this.SendPropertyChanged("Port2PointOfDestinationCost");
					this.OnPort2PointOfDestinationCostChanged();
				}
			}
		}
		
		[Column(Storage="_PointOfDestination2ProductionSiteCost", DbType="Decimal(15,4)")]
		public System.Nullable<decimal> PointOfDestination2ProductionSiteCost
		{
			get
			{
				return this._PointOfDestination2ProductionSiteCost;
			}
			set
			{
				if ((this._PointOfDestination2ProductionSiteCost != value))
				{
					this.OnPointOfDestination2ProductionSiteCostChanging(value);
					this.SendPropertyChanging();
					this._PointOfDestination2ProductionSiteCost = value;
					this.SendPropertyChanged("PointOfDestination2ProductionSiteCost");
					this.OnPointOfDestination2ProductionSiteCostChanged();
				}
			}
		}
		
		[Column(Storage="_DeliveryRouting", DbType="VarChar(20)")]
		public string DeliveryRouting
		{
			get
			{
				return this._DeliveryRouting;
			}
			set
			{
				if ((this._DeliveryRouting != value))
				{
					this.OnDeliveryRoutingChanging(value);
					this.SendPropertyChanging();
					this._DeliveryRouting = value;
					this.SendPropertyChanged("DeliveryRouting");
					this.OnDeliveryRoutingChanged();
				}
			}
		}
		
		[Association(Name="SupplierProfile_IncontermsTransitForMIDc", Storage="_SupplierProfile", ThisKey="ERPSupplier", OtherKey="ERPSupplier", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public SupplierProfile SupplierProfile
		{
			get
			{
				return this._SupplierProfile.Entity;
			}
			set
			{
				SupplierProfile previousValue = this._SupplierProfile.Entity;
				if (((previousValue != value) 
							|| (this._SupplierProfile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SupplierProfile.Entity = null;
						previousValue.IncontermsTransitForMIDcs.Remove(this);
					}
					this._SupplierProfile.Entity = value;
					if ((value != null))
					{
						value.IncontermsTransitForMIDcs.Add(this);
						this._ERPSupplier = value.ERPSupplier;
					}
					else
					{
						this._ERPSupplier = default(string);
					}
					this.SendPropertyChanged("SupplierProfile");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.ForPointDeliveryofDestinationPHKey")]
	public partial class ForPointDeliveryofDestinationPHKey : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _EngDes;
		
		private string _CHIDes;
		
		private string _ENGAddress;
		
		private string _CHIAddress;
		
		private string _Tel;
		
		private string _ThaiDes;
		
		private string _ThaiAddress;
		
		private string _StartPointCode;
		
		private string _StartPointNameEN;
		
		private EntitySet<EndPointFactoryFrame> _EndPointFactoryFrames;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnEngDesChanging(string value);
    partial void OnEngDesChanged();
    partial void OnCHIDesChanging(string value);
    partial void OnCHIDesChanged();
    partial void OnENGAddressChanging(string value);
    partial void OnENGAddressChanged();
    partial void OnCHIAddressChanging(string value);
    partial void OnCHIAddressChanged();
    partial void OnTelChanging(string value);
    partial void OnTelChanged();
    partial void OnThaiDesChanging(string value);
    partial void OnThaiDesChanged();
    partial void OnThaiAddressChanging(string value);
    partial void OnThaiAddressChanged();
    partial void OnStartPointCodeChanging(string value);
    partial void OnStartPointCodeChanged();
    partial void OnStartPointNameENChanging(string value);
    partial void OnStartPointNameENChanged();
    #endregion
		
		public ForPointDeliveryofDestinationPHKey()
		{
			this._EndPointFactoryFrames = new EntitySet<EndPointFactoryFrame>(new Action<EndPointFactoryFrame>(this.attach_EndPointFactoryFrames), new Action<EndPointFactoryFrame>(this.detach_EndPointFactoryFrames));
			OnCreated();
		}
		
		[Column(Storage="_Code", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[Column(Storage="_EngDes", DbType="NVarChar(500)")]
		public string EngDes
		{
			get
			{
				return this._EngDes;
			}
			set
			{
				if ((this._EngDes != value))
				{
					this.OnEngDesChanging(value);
					this.SendPropertyChanging();
					this._EngDes = value;
					this.SendPropertyChanged("EngDes");
					this.OnEngDesChanged();
				}
			}
		}
		
		[Column(Storage="_CHIDes", DbType="NVarChar(500)")]
		public string CHIDes
		{
			get
			{
				return this._CHIDes;
			}
			set
			{
				if ((this._CHIDes != value))
				{
					this.OnCHIDesChanging(value);
					this.SendPropertyChanging();
					this._CHIDes = value;
					this.SendPropertyChanged("CHIDes");
					this.OnCHIDesChanged();
				}
			}
		}
		
		[Column(Storage="_ENGAddress", DbType="NVarChar(500)")]
		public string ENGAddress
		{
			get
			{
				return this._ENGAddress;
			}
			set
			{
				if ((this._ENGAddress != value))
				{
					this.OnENGAddressChanging(value);
					this.SendPropertyChanging();
					this._ENGAddress = value;
					this.SendPropertyChanged("ENGAddress");
					this.OnENGAddressChanged();
				}
			}
		}
		
		[Column(Storage="_CHIAddress", DbType="NVarChar(500)")]
		public string CHIAddress
		{
			get
			{
				return this._CHIAddress;
			}
			set
			{
				if ((this._CHIAddress != value))
				{
					this.OnCHIAddressChanging(value);
					this.SendPropertyChanging();
					this._CHIAddress = value;
					this.SendPropertyChanged("CHIAddress");
					this.OnCHIAddressChanged();
				}
			}
		}
		
		[Column(Storage="_Tel", DbType="NVarChar(100)")]
		public string Tel
		{
			get
			{
				return this._Tel;
			}
			set
			{
				if ((this._Tel != value))
				{
					this.OnTelChanging(value);
					this.SendPropertyChanging();
					this._Tel = value;
					this.SendPropertyChanged("Tel");
					this.OnTelChanged();
				}
			}
		}
		
		[Column(Storage="_ThaiDes", DbType="NVarChar(500)")]
		public string ThaiDes
		{
			get
			{
				return this._ThaiDes;
			}
			set
			{
				if ((this._ThaiDes != value))
				{
					this.OnThaiDesChanging(value);
					this.SendPropertyChanging();
					this._ThaiDes = value;
					this.SendPropertyChanged("ThaiDes");
					this.OnThaiDesChanged();
				}
			}
		}
		
		[Column(Storage="_ThaiAddress", DbType="NVarChar(500)")]
		public string ThaiAddress
		{
			get
			{
				return this._ThaiAddress;
			}
			set
			{
				if ((this._ThaiAddress != value))
				{
					this.OnThaiAddressChanging(value);
					this.SendPropertyChanging();
					this._ThaiAddress = value;
					this.SendPropertyChanged("ThaiAddress");
					this.OnThaiAddressChanged();
				}
			}
		}
		
		[Column(Storage="_StartPointCode", DbType="VarChar(20)")]
		public string StartPointCode
		{
			get
			{
				return this._StartPointCode;
			}
			set
			{
				if ((this._StartPointCode != value))
				{
					this.OnStartPointCodeChanging(value);
					this.SendPropertyChanging();
					this._StartPointCode = value;
					this.SendPropertyChanged("StartPointCode");
					this.OnStartPointCodeChanged();
				}
			}
		}
		
		[Column(Storage="_StartPointNameEN", DbType="VarChar(200)")]
		public string StartPointNameEN
		{
			get
			{
				return this._StartPointNameEN;
			}
			set
			{
				if ((this._StartPointNameEN != value))
				{
					this.OnStartPointNameENChanging(value);
					this.SendPropertyChanging();
					this._StartPointNameEN = value;
					this.SendPropertyChanged("StartPointNameEN");
					this.OnStartPointNameENChanged();
				}
			}
		}
		
		[Association(Name="ForPointDeliveryofDestinationPHKey_EndPointFactoryFrame", Storage="_EndPointFactoryFrames", ThisKey="Code", OtherKey="EndPointCode")]
		public EntitySet<EndPointFactoryFrame> EndPointFactoryFrames
		{
			get
			{
				return this._EndPointFactoryFrames;
			}
			set
			{
				this._EndPointFactoryFrames.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EndPointFactoryFrames(EndPointFactoryFrame entity)
		{
			this.SendPropertyChanging();
			entity.ForPointDeliveryofDestinationPHKey = this;
		}
		
		private void detach_EndPointFactoryFrames(EndPointFactoryFrame entity)
		{
			this.SendPropertyChanging();
			entity.ForPointDeliveryofDestinationPHKey = null;
		}
	}
	
	[Table(Name="dbo.EndPointFactoryFrame")]
	public partial class EndPointFactoryFrame : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OID;
		
		private string _EndPointCode;
		
		private string _PHFactory;
		
		private string _TransitMode;
		
		private System.Nullable<int> _TimeFrame;
		
		private string _Remark;
		
		private string _EndPoint;
		
		private EntityRef<ForPointDeliveryofDestinationPHKey> _ForPointDeliveryofDestinationPHKey;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOIDChanging(int value);
    partial void OnOIDChanged();
    partial void OnEndPointCodeChanging(string value);
    partial void OnEndPointCodeChanged();
    partial void OnPHFactoryChanging(string value);
    partial void OnPHFactoryChanged();
    partial void OnTransitModeChanging(string value);
    partial void OnTransitModeChanged();
    partial void OnTimeFrameChanging(System.Nullable<int> value);
    partial void OnTimeFrameChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnEndPointChanging(string value);
    partial void OnEndPointChanged();
    #endregion
		
		public EndPointFactoryFrame()
		{
			this._ForPointDeliveryofDestinationPHKey = default(EntityRef<ForPointDeliveryofDestinationPHKey>);
			OnCreated();
		}
		
		[Column(Storage="_OID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int OID
		{
			get
			{
				return this._OID;
			}
			set
			{
				if ((this._OID != value))
				{
					this.OnOIDChanging(value);
					this.SendPropertyChanging();
					this._OID = value;
					this.SendPropertyChanged("OID");
					this.OnOIDChanged();
				}
			}
		}
		
		[Column(Storage="_EndPointCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string EndPointCode
		{
			get
			{
				return this._EndPointCode;
			}
			set
			{
				if ((this._EndPointCode != value))
				{
					if (this._ForPointDeliveryofDestinationPHKey.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEndPointCodeChanging(value);
					this.SendPropertyChanging();
					this._EndPointCode = value;
					this.SendPropertyChanged("EndPointCode");
					this.OnEndPointCodeChanged();
				}
			}
		}
		
		[Column(Storage="_PHFactory", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		public string PHFactory
		{
			get
			{
				return this._PHFactory;
			}
			set
			{
				if ((this._PHFactory != value))
				{
					this.OnPHFactoryChanging(value);
					this.SendPropertyChanging();
					this._PHFactory = value;
					this.SendPropertyChanged("PHFactory");
					this.OnPHFactoryChanged();
				}
			}
		}
		
		[Column(Storage="_TransitMode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string TransitMode
		{
			get
			{
				return this._TransitMode;
			}
			set
			{
				if ((this._TransitMode != value))
				{
					this.OnTransitModeChanging(value);
					this.SendPropertyChanging();
					this._TransitMode = value;
					this.SendPropertyChanged("TransitMode");
					this.OnTransitModeChanged();
				}
			}
		}
		
		[Column(Storage="_TimeFrame", DbType="Int")]
		public System.Nullable<int> TimeFrame
		{
			get
			{
				return this._TimeFrame;
			}
			set
			{
				if ((this._TimeFrame != value))
				{
					this.OnTimeFrameChanging(value);
					this.SendPropertyChanging();
					this._TimeFrame = value;
					this.SendPropertyChanged("TimeFrame");
					this.OnTimeFrameChanged();
				}
			}
		}
		
		[Column(Storage="_Remark", DbType="NVarChar(100)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[Column(Storage="_EndPoint", DbType="VarChar(20)")]
		public string EndPoint
		{
			get
			{
				return this._EndPoint;
			}
			set
			{
				if ((this._EndPoint != value))
				{
					this.OnEndPointChanging(value);
					this.SendPropertyChanging();
					this._EndPoint = value;
					this.SendPropertyChanged("EndPoint");
					this.OnEndPointChanged();
				}
			}
		}
		
		[Association(Name="ForPointDeliveryofDestinationPHKey_EndPointFactoryFrame", Storage="_ForPointDeliveryofDestinationPHKey", ThisKey="EndPointCode", OtherKey="Code", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public ForPointDeliveryofDestinationPHKey ForPointDeliveryofDestinationPHKey
		{
			get
			{
				return this._ForPointDeliveryofDestinationPHKey.Entity;
			}
			set
			{
				ForPointDeliveryofDestinationPHKey previousValue = this._ForPointDeliveryofDestinationPHKey.Entity;
				if (((previousValue != value) 
							|| (this._ForPointDeliveryofDestinationPHKey.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ForPointDeliveryofDestinationPHKey.Entity = null;
						previousValue.EndPointFactoryFrames.Remove(this);
					}
					this._ForPointDeliveryofDestinationPHKey.Entity = value;
					if ((value != null))
					{
						value.EndPointFactoryFrames.Add(this);
						this._EndPointCode = value.Code;
					}
					else
					{
						this._EndPointCode = default(string);
					}
					this.SendPropertyChanged("ForPointDeliveryofDestinationPHKey");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.SupplierRegion")]
	public partial class SupplierRegion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _OID;
		
		private string _SeqNo;
		
		private string _CountryCode;
		
		private string _RegionCode;
		
		private string _RegionNameEN;
		
		private string _RegionNameCN;
		
		private string _TransitMode;
		
		private string _IncotermsCode;
		
		private System.Nullable<int> _TimeFrame_PHDG_D;
		
		private System.Nullable<int> _TimeFrame_PYBD_D;
		
		private System.Nullable<int> _TimeFrame_PHHK_C;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOIDChanging(long value);
    partial void OnOIDChanged();
    partial void OnSeqNoChanging(string value);
    partial void OnSeqNoChanged();
    partial void OnCountryCodeChanging(string value);
    partial void OnCountryCodeChanged();
    partial void OnRegionCodeChanging(string value);
    partial void OnRegionCodeChanged();
    partial void OnRegionNameENChanging(string value);
    partial void OnRegionNameENChanged();
    partial void OnRegionNameCNChanging(string value);
    partial void OnRegionNameCNChanged();
    partial void OnTransitModeChanging(string value);
    partial void OnTransitModeChanged();
    partial void OnIncotermsCodeChanging(string value);
    partial void OnIncotermsCodeChanged();
    partial void OnTimeFrame_PHDG_DChanging(System.Nullable<int> value);
    partial void OnTimeFrame_PHDG_DChanged();
    partial void OnTimeFrame_PYBD_DChanging(System.Nullable<int> value);
    partial void OnTimeFrame_PYBD_DChanged();
    partial void OnTimeFrame_PHHK_CChanging(System.Nullable<int> value);
    partial void OnTimeFrame_PHHK_CChanged();
    #endregion
		
		public SupplierRegion()
		{
			OnCreated();
		}
		
		[Column(Storage="_OID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long OID
		{
			get
			{
				return this._OID;
			}
			set
			{
				if ((this._OID != value))
				{
					this.OnOIDChanging(value);
					this.SendPropertyChanging();
					this._OID = value;
					this.SendPropertyChanged("OID");
					this.OnOIDChanged();
				}
			}
		}
		
		[Column(Storage="_SeqNo", DbType="VarChar(20)")]
		public string SeqNo
		{
			get
			{
				return this._SeqNo;
			}
			set
			{
				if ((this._SeqNo != value))
				{
					this.OnSeqNoChanging(value);
					this.SendPropertyChanging();
					this._SeqNo = value;
					this.SendPropertyChanged("SeqNo");
					this.OnSeqNoChanged();
				}
			}
		}
		
		[Column(Storage="_CountryCode", DbType="VarChar(30)")]
		public string CountryCode
		{
			get
			{
				return this._CountryCode;
			}
			set
			{
				if ((this._CountryCode != value))
				{
					this.OnCountryCodeChanging(value);
					this.SendPropertyChanging();
					this._CountryCode = value;
					this.SendPropertyChanged("CountryCode");
					this.OnCountryCodeChanged();
				}
			}
		}
		
		[Column(Storage="_RegionCode", DbType="VarChar(30)")]
		public string RegionCode
		{
			get
			{
				return this._RegionCode;
			}
			set
			{
				if ((this._RegionCode != value))
				{
					this.OnRegionCodeChanging(value);
					this.SendPropertyChanging();
					this._RegionCode = value;
					this.SendPropertyChanged("RegionCode");
					this.OnRegionCodeChanged();
				}
			}
		}
		
		[Column(Storage="_RegionNameEN", DbType="VarChar(300)")]
		public string RegionNameEN
		{
			get
			{
				return this._RegionNameEN;
			}
			set
			{
				if ((this._RegionNameEN != value))
				{
					this.OnRegionNameENChanging(value);
					this.SendPropertyChanging();
					this._RegionNameEN = value;
					this.SendPropertyChanged("RegionNameEN");
					this.OnRegionNameENChanged();
				}
			}
		}
		
		[Column(Storage="_RegionNameCN", DbType="NVarChar(300)")]
		public string RegionNameCN
		{
			get
			{
				return this._RegionNameCN;
			}
			set
			{
				if ((this._RegionNameCN != value))
				{
					this.OnRegionNameCNChanging(value);
					this.SendPropertyChanging();
					this._RegionNameCN = value;
					this.SendPropertyChanged("RegionNameCN");
					this.OnRegionNameCNChanged();
				}
			}
		}
		
		[Column(Storage="_TransitMode", DbType="VarChar(100)")]
		public string TransitMode
		{
			get
			{
				return this._TransitMode;
			}
			set
			{
				if ((this._TransitMode != value))
				{
					this.OnTransitModeChanging(value);
					this.SendPropertyChanging();
					this._TransitMode = value;
					this.SendPropertyChanged("TransitMode");
					this.OnTransitModeChanged();
				}
			}
		}
		
		[Column(Storage="_IncotermsCode", DbType="VarChar(50)")]
		public string IncotermsCode
		{
			get
			{
				return this._IncotermsCode;
			}
			set
			{
				if ((this._IncotermsCode != value))
				{
					this.OnIncotermsCodeChanging(value);
					this.SendPropertyChanging();
					this._IncotermsCode = value;
					this.SendPropertyChanged("IncotermsCode");
					this.OnIncotermsCodeChanged();
				}
			}
		}
		
		[Column(Storage="_TimeFrame_PHDG_D", DbType="Int")]
		public System.Nullable<int> TimeFrame_PHDG_D
		{
			get
			{
				return this._TimeFrame_PHDG_D;
			}
			set
			{
				if ((this._TimeFrame_PHDG_D != value))
				{
					this.OnTimeFrame_PHDG_DChanging(value);
					this.SendPropertyChanging();
					this._TimeFrame_PHDG_D = value;
					this.SendPropertyChanged("TimeFrame_PHDG_D");
					this.OnTimeFrame_PHDG_DChanged();
				}
			}
		}
		
		[Column(Storage="_TimeFrame_PYBD_D", DbType="Int")]
		public System.Nullable<int> TimeFrame_PYBD_D
		{
			get
			{
				return this._TimeFrame_PYBD_D;
			}
			set
			{
				if ((this._TimeFrame_PYBD_D != value))
				{
					this.OnTimeFrame_PYBD_DChanging(value);
					this.SendPropertyChanging();
					this._TimeFrame_PYBD_D = value;
					this.SendPropertyChanged("TimeFrame_PYBD_D");
					this.OnTimeFrame_PYBD_DChanged();
				}
			}
		}
		
		[Column(Storage="_TimeFrame_PHHK_C", DbType="Int")]
		public System.Nullable<int> TimeFrame_PHHK_C
		{
			get
			{
				return this._TimeFrame_PHHK_C;
			}
			set
			{
				if ((this._TimeFrame_PHHK_C != value))
				{
					this.OnTimeFrame_PHHK_CChanging(value);
					this.SendPropertyChanging();
					this._TimeFrame_PHHK_C = value;
					this.SendPropertyChanged("TimeFrame_PHHK_C");
					this.OnTimeFrame_PHHK_CChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.TimeFrameIICompany")]
	public partial class TimeFrameIICompany : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _OID;
		
		private string _CompanyCode;
		
		private string _Company;
		
		private string _Address;
		
		private string _Description;
		
		private string _Tel;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOIDChanging(long value);
    partial void OnOIDChanged();
    partial void OnCompanyCodeChanging(string value);
    partial void OnCompanyCodeChanged();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnTelChanging(string value);
    partial void OnTelChanged();
    #endregion
		
		public TimeFrameIICompany()
		{
			OnCreated();
		}
		
		[Column(Storage="_OID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long OID
		{
			get
			{
				return this._OID;
			}
			set
			{
				if ((this._OID != value))
				{
					this.OnOIDChanging(value);
					this.SendPropertyChanging();
					this._OID = value;
					this.SendPropertyChanged("OID");
					this.OnOIDChanged();
				}
			}
		}
		
		[Column(Storage="_CompanyCode", DbType="VarChar(30)")]
		public string CompanyCode
		{
			get
			{
				return this._CompanyCode;
			}
			set
			{
				if ((this._CompanyCode != value))
				{
					this.OnCompanyCodeChanging(value);
					this.SendPropertyChanging();
					this._CompanyCode = value;
					this.SendPropertyChanged("CompanyCode");
					this.OnCompanyCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Company", DbType="NVarChar(200)")]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[Column(Storage="_Address", DbType="NVarChar(500)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[Column(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_Tel", DbType="VarChar(50)")]
		public string Tel
		{
			get
			{
				return this._Tel;
			}
			set
			{
				if ((this._Tel != value))
				{
					this.OnTelChanging(value);
					this.SendPropertyChanging();
					this._Tel = value;
					this.SendPropertyChanged("Tel");
					this.OnTelChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.TradeMethod")]
	public partial class TradeMethod : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _OID;
		
		private string _SeqNo;
		
		private string _TradeCode;
		
		private string _TradeMethodEN;
		
		private string _TradeMethodCN;
		
		private string _PurchaseMethodEN;
		
		private string _PurchaseMethodCN;
		
		private string _PaymentMethodEN;
		
		private string _PaymentMethodCN;
		
		private string _PrdnSite;
		
		private string _FtyBusinessModel;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOIDChanging(long value);
    partial void OnOIDChanged();
    partial void OnSeqNoChanging(string value);
    partial void OnSeqNoChanged();
    partial void OnTradeCodeChanging(string value);
    partial void OnTradeCodeChanged();
    partial void OnTradeMethodENChanging(string value);
    partial void OnTradeMethodENChanged();
    partial void OnTradeMethodCNChanging(string value);
    partial void OnTradeMethodCNChanged();
    partial void OnPurchaseMethodENChanging(string value);
    partial void OnPurchaseMethodENChanged();
    partial void OnPurchaseMethodCNChanging(string value);
    partial void OnPurchaseMethodCNChanged();
    partial void OnPaymentMethodENChanging(string value);
    partial void OnPaymentMethodENChanged();
    partial void OnPaymentMethodCNChanging(string value);
    partial void OnPaymentMethodCNChanged();
    partial void OnPrdnSiteChanging(string value);
    partial void OnPrdnSiteChanged();
    partial void OnFtyBusinessModelChanging(string value);
    partial void OnFtyBusinessModelChanged();
    #endregion
		
		public TradeMethod()
		{
			OnCreated();
		}
		
		[Column(Storage="_OID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long OID
		{
			get
			{
				return this._OID;
			}
			set
			{
				if ((this._OID != value))
				{
					this.OnOIDChanging(value);
					this.SendPropertyChanging();
					this._OID = value;
					this.SendPropertyChanged("OID");
					this.OnOIDChanged();
				}
			}
		}
		
		[Column(Storage="_SeqNo", DbType="VarChar(20)")]
		public string SeqNo
		{
			get
			{
				return this._SeqNo;
			}
			set
			{
				if ((this._SeqNo != value))
				{
					this.OnSeqNoChanging(value);
					this.SendPropertyChanging();
					this._SeqNo = value;
					this.SendPropertyChanged("SeqNo");
					this.OnSeqNoChanged();
				}
			}
		}
		
		[Column(Storage="_TradeCode", DbType="VarChar(20)")]
		public string TradeCode
		{
			get
			{
				return this._TradeCode;
			}
			set
			{
				if ((this._TradeCode != value))
				{
					this.OnTradeCodeChanging(value);
					this.SendPropertyChanging();
					this._TradeCode = value;
					this.SendPropertyChanged("TradeCode");
					this.OnTradeCodeChanged();
				}
			}
		}
		
		[Column(Storage="_TradeMethodEN", DbType="VarChar(200)")]
		public string TradeMethodEN
		{
			get
			{
				return this._TradeMethodEN;
			}
			set
			{
				if ((this._TradeMethodEN != value))
				{
					this.OnTradeMethodENChanging(value);
					this.SendPropertyChanging();
					this._TradeMethodEN = value;
					this.SendPropertyChanged("TradeMethodEN");
					this.OnTradeMethodENChanged();
				}
			}
		}
		
		[Column(Storage="_TradeMethodCN", DbType="NVarChar(200)")]
		public string TradeMethodCN
		{
			get
			{
				return this._TradeMethodCN;
			}
			set
			{
				if ((this._TradeMethodCN != value))
				{
					this.OnTradeMethodCNChanging(value);
					this.SendPropertyChanging();
					this._TradeMethodCN = value;
					this.SendPropertyChanged("TradeMethodCN");
					this.OnTradeMethodCNChanged();
				}
			}
		}
		
		[Column(Storage="_PurchaseMethodEN", DbType="VarChar(500)")]
		public string PurchaseMethodEN
		{
			get
			{
				return this._PurchaseMethodEN;
			}
			set
			{
				if ((this._PurchaseMethodEN != value))
				{
					this.OnPurchaseMethodENChanging(value);
					this.SendPropertyChanging();
					this._PurchaseMethodEN = value;
					this.SendPropertyChanged("PurchaseMethodEN");
					this.OnPurchaseMethodENChanged();
				}
			}
		}
		
		[Column(Storage="_PurchaseMethodCN", DbType="NVarChar(500)")]
		public string PurchaseMethodCN
		{
			get
			{
				return this._PurchaseMethodCN;
			}
			set
			{
				if ((this._PurchaseMethodCN != value))
				{
					this.OnPurchaseMethodCNChanging(value);
					this.SendPropertyChanging();
					this._PurchaseMethodCN = value;
					this.SendPropertyChanged("PurchaseMethodCN");
					this.OnPurchaseMethodCNChanged();
				}
			}
		}
		
		[Column(Storage="_PaymentMethodEN", DbType="VarChar(100)")]
		public string PaymentMethodEN
		{
			get
			{
				return this._PaymentMethodEN;
			}
			set
			{
				if ((this._PaymentMethodEN != value))
				{
					this.OnPaymentMethodENChanging(value);
					this.SendPropertyChanging();
					this._PaymentMethodEN = value;
					this.SendPropertyChanged("PaymentMethodEN");
					this.OnPaymentMethodENChanged();
				}
			}
		}
		
		[Column(Storage="_PaymentMethodCN", DbType="NVarChar(100)")]
		public string PaymentMethodCN
		{
			get
			{
				return this._PaymentMethodCN;
			}
			set
			{
				if ((this._PaymentMethodCN != value))
				{
					this.OnPaymentMethodCNChanging(value);
					this.SendPropertyChanging();
					this._PaymentMethodCN = value;
					this.SendPropertyChanged("PaymentMethodCN");
					this.OnPaymentMethodCNChanged();
				}
			}
		}
		
		[Column(Storage="_PrdnSite", DbType="VarChar(20)")]
		public string PrdnSite
		{
			get
			{
				return this._PrdnSite;
			}
			set
			{
				if ((this._PrdnSite != value))
				{
					this.OnPrdnSiteChanging(value);
					this.SendPropertyChanging();
					this._PrdnSite = value;
					this.SendPropertyChanged("PrdnSite");
					this.OnPrdnSiteChanged();
				}
			}
		}
		
		[Column(Storage="_FtyBusinessModel", DbType="VarChar(100)")]
		public string FtyBusinessModel
		{
			get
			{
				return this._FtyBusinessModel;
			}
			set
			{
				if ((this._FtyBusinessModel != value))
				{
					this.OnFtyBusinessModelChanging(value);
					this.SendPropertyChanging();
					this._FtyBusinessModel = value;
					this.SendPropertyChanged("FtyBusinessModel");
					this.OnFtyBusinessModelChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.IncotermMasterDB")]
	public partial class IncotermMasterDB : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _OID;
		
		private string _Code;
		
		private string _TransitPointCode;
		
		private string _TransitPointSeq;
		
		private string _TransitPointDescEN;
		
		private string _TransitMode;
		
		private string _PHHKToPHDG_CRS;
		
		private string _PHHKToPYBD_CRS;
		
		private string _PHHKToPHHK_CCS;
		
		private string _PHDGToPHDG_CRS;
		
		private string _PHDGToPHHK_CCS;
		
		private string _PYHKToPHBD_CRS;
		
		private string _PYHKToPHHK_CCS;
		
		private string _BasicRulesTimeFrame1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOIDChanging(long value);
    partial void OnOIDChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnTransitPointCodeChanging(string value);
    partial void OnTransitPointCodeChanged();
    partial void OnTransitPointSeqChanging(string value);
    partial void OnTransitPointSeqChanged();
    partial void OnTransitPointDescENChanging(string value);
    partial void OnTransitPointDescENChanged();
    partial void OnTransitModeChanging(string value);
    partial void OnTransitModeChanged();
    partial void OnPHHKToPHDG_CRSChanging(string value);
    partial void OnPHHKToPHDG_CRSChanged();
    partial void OnPHHKToPYBD_CRSChanging(string value);
    partial void OnPHHKToPYBD_CRSChanged();
    partial void OnPHHKToPHHK_CCSChanging(string value);
    partial void OnPHHKToPHHK_CCSChanged();
    partial void OnPHDGToPHDG_CRSChanging(string value);
    partial void OnPHDGToPHDG_CRSChanged();
    partial void OnPHDGToPHHK_CCSChanging(string value);
    partial void OnPHDGToPHHK_CCSChanged();
    partial void OnPYHKToPHBD_CRSChanging(string value);
    partial void OnPYHKToPHBD_CRSChanged();
    partial void OnPYHKToPHHK_CCSChanging(string value);
    partial void OnPYHKToPHHK_CCSChanged();
    partial void OnBasicRulesTimeFrame1Changing(string value);
    partial void OnBasicRulesTimeFrame1Changed();
    #endregion
		
		public IncotermMasterDB()
		{
			OnCreated();
		}
		
		[Column(Storage="_OID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long OID
		{
			get
			{
				return this._OID;
			}
			set
			{
				if ((this._OID != value))
				{
					this.OnOIDChanging(value);
					this.SendPropertyChanging();
					this._OID = value;
					this.SendPropertyChanged("OID");
					this.OnOIDChanged();
				}
			}
		}
		
		[Column(Storage="_Code", DbType="VarChar(50)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[Column(Storage="_TransitPointCode", DbType="VarChar(20)")]
		public string TransitPointCode
		{
			get
			{
				return this._TransitPointCode;
			}
			set
			{
				if ((this._TransitPointCode != value))
				{
					this.OnTransitPointCodeChanging(value);
					this.SendPropertyChanging();
					this._TransitPointCode = value;
					this.SendPropertyChanged("TransitPointCode");
					this.OnTransitPointCodeChanged();
				}
			}
		}
		
		[Column(Storage="_TransitPointSeq", DbType="VarChar(20)")]
		public string TransitPointSeq
		{
			get
			{
				return this._TransitPointSeq;
			}
			set
			{
				if ((this._TransitPointSeq != value))
				{
					this.OnTransitPointSeqChanging(value);
					this.SendPropertyChanging();
					this._TransitPointSeq = value;
					this.SendPropertyChanged("TransitPointSeq");
					this.OnTransitPointSeqChanged();
				}
			}
		}
		
		[Column(Storage="_TransitPointDescEN", DbType="VarChar(200)")]
		public string TransitPointDescEN
		{
			get
			{
				return this._TransitPointDescEN;
			}
			set
			{
				if ((this._TransitPointDescEN != value))
				{
					this.OnTransitPointDescENChanging(value);
					this.SendPropertyChanging();
					this._TransitPointDescEN = value;
					this.SendPropertyChanged("TransitPointDescEN");
					this.OnTransitPointDescENChanged();
				}
			}
		}
		
		[Column(Storage="_TransitMode", DbType="VarChar(100)")]
		public string TransitMode
		{
			get
			{
				return this._TransitMode;
			}
			set
			{
				if ((this._TransitMode != value))
				{
					this.OnTransitModeChanging(value);
					this.SendPropertyChanging();
					this._TransitMode = value;
					this.SendPropertyChanged("TransitMode");
					this.OnTransitModeChanged();
				}
			}
		}
		
		[Column(Storage="_PHHKToPHDG_CRS", DbType="VarChar(200)")]
		public string PHHKToPHDG_CRS
		{
			get
			{
				return this._PHHKToPHDG_CRS;
			}
			set
			{
				if ((this._PHHKToPHDG_CRS != value))
				{
					this.OnPHHKToPHDG_CRSChanging(value);
					this.SendPropertyChanging();
					this._PHHKToPHDG_CRS = value;
					this.SendPropertyChanged("PHHKToPHDG_CRS");
					this.OnPHHKToPHDG_CRSChanged();
				}
			}
		}
		
		[Column(Storage="_PHHKToPYBD_CRS", DbType="VarChar(200)")]
		public string PHHKToPYBD_CRS
		{
			get
			{
				return this._PHHKToPYBD_CRS;
			}
			set
			{
				if ((this._PHHKToPYBD_CRS != value))
				{
					this.OnPHHKToPYBD_CRSChanging(value);
					this.SendPropertyChanging();
					this._PHHKToPYBD_CRS = value;
					this.SendPropertyChanged("PHHKToPYBD_CRS");
					this.OnPHHKToPYBD_CRSChanged();
				}
			}
		}
		
		[Column(Storage="_PHHKToPHHK_CCS", DbType="VarChar(200)")]
		public string PHHKToPHHK_CCS
		{
			get
			{
				return this._PHHKToPHHK_CCS;
			}
			set
			{
				if ((this._PHHKToPHHK_CCS != value))
				{
					this.OnPHHKToPHHK_CCSChanging(value);
					this.SendPropertyChanging();
					this._PHHKToPHHK_CCS = value;
					this.SendPropertyChanged("PHHKToPHHK_CCS");
					this.OnPHHKToPHHK_CCSChanged();
				}
			}
		}
		
		[Column(Storage="_PHDGToPHDG_CRS", DbType="VarChar(200)")]
		public string PHDGToPHDG_CRS
		{
			get
			{
				return this._PHDGToPHDG_CRS;
			}
			set
			{
				if ((this._PHDGToPHDG_CRS != value))
				{
					this.OnPHDGToPHDG_CRSChanging(value);
					this.SendPropertyChanging();
					this._PHDGToPHDG_CRS = value;
					this.SendPropertyChanged("PHDGToPHDG_CRS");
					this.OnPHDGToPHDG_CRSChanged();
				}
			}
		}
		
		[Column(Storage="_PHDGToPHHK_CCS", DbType="VarChar(200)")]
		public string PHDGToPHHK_CCS
		{
			get
			{
				return this._PHDGToPHHK_CCS;
			}
			set
			{
				if ((this._PHDGToPHHK_CCS != value))
				{
					this.OnPHDGToPHHK_CCSChanging(value);
					this.SendPropertyChanging();
					this._PHDGToPHHK_CCS = value;
					this.SendPropertyChanged("PHDGToPHHK_CCS");
					this.OnPHDGToPHHK_CCSChanged();
				}
			}
		}
		
		[Column(Storage="_PYHKToPHBD_CRS", DbType="VarChar(200)")]
		public string PYHKToPHBD_CRS
		{
			get
			{
				return this._PYHKToPHBD_CRS;
			}
			set
			{
				if ((this._PYHKToPHBD_CRS != value))
				{
					this.OnPYHKToPHBD_CRSChanging(value);
					this.SendPropertyChanging();
					this._PYHKToPHBD_CRS = value;
					this.SendPropertyChanged("PYHKToPHBD_CRS");
					this.OnPYHKToPHBD_CRSChanged();
				}
			}
		}
		
		[Column(Storage="_PYHKToPHHK_CCS", DbType="VarChar(200)")]
		public string PYHKToPHHK_CCS
		{
			get
			{
				return this._PYHKToPHHK_CCS;
			}
			set
			{
				if ((this._PYHKToPHHK_CCS != value))
				{
					this.OnPYHKToPHHK_CCSChanging(value);
					this.SendPropertyChanging();
					this._PYHKToPHHK_CCS = value;
					this.SendPropertyChanged("PYHKToPHHK_CCS");
					this.OnPYHKToPHHK_CCSChanged();
				}
			}
		}
		
		[Column(Storage="_BasicRulesTimeFrame1", DbType="VarChar(500)")]
		public string BasicRulesTimeFrame1
		{
			get
			{
				return this._BasicRulesTimeFrame1;
			}
			set
			{
				if ((this._BasicRulesTimeFrame1 != value))
				{
					this.OnBasicRulesTimeFrame1Changing(value);
					this.SendPropertyChanging();
					this._BasicRulesTimeFrame1 = value;
					this.SendPropertyChanged("BasicRulesTimeFrame1");
					this.OnBasicRulesTimeFrame1Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.IncontermsTransit")]
	public partial class IncontermsTransit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _OID;
		
		private string _SeqNo;
		
		private string _ERPSupplier;
		
		private string _PHFactories;
		
		private string _LocationofSuppFactory;
		
		private System.DateTime _FromEffectivedDate;
		
		private bool _IsLCL;
		
		private string _TransitMode;
		
		private string _Incoterms;
		
		private string _IncotermsPointPort;
		
		private string _PointofDestination;
		
		private string _PointOfOrigin;
		
		private string _PointOfOriginAddress;
		
		private string _PlaceOfOrigin;
		
		private string _PortBorderOfOrigin;
		
		private string _PortBorderOfDestination;
		
		private string _PlaceOfDestination;
		
		private string _PointOfDestination6P;
		
		private string _PointOfDestinationAddress;
		
		private System.Nullable<System.DateTime> _ToEffectivedDate;
		
		private string _ForwarderAddressEn;
		
		private string _ForwarderAddressCH;
		
		private string _ForwarderAddressTH;
		
		private System.Nullable<int> _TimeFrame;
		
		private System.Nullable<int> _TimeFrame1Wet;
		
		private string _SpecialNote;
		
		private System.Nullable<bool> _FCLAgreedRequest;
		
		private System.Nullable<bool> _FCLTransitPointChangeNecessity;
		
		private string _FCLIncotermsPointPort;
		
		private string _FCLPointofDestination;
		
		private System.Nullable<int> _FCLTimeFrame;
		
		private string _FCLPortBorderOfDestination;
		
		private string _FCLPlaceOfDestination;
		
		private string _FCLPointOfDestination6P;
		
		private string _FCLPointOfDestinationAddress;
		
		private string _FCLForwarderAddressEn;
		
		private string _FCLForwarderAddressCH;
		
		private string _FCLForwarderAddressTH;
		
		private System.Nullable<decimal> _Point2PortOfOriginCost;
		
		private System.Nullable<decimal> _FreightCost;
		
		private System.Nullable<decimal> _Port2PointOfDestinationCost;
		
		private System.Nullable<decimal> _PointOfDestination2ProductionSiteCost;
		
		private string _DeliveryRouting;
		
		private string _TransitPointRegionCode;
		
		private System.Nullable<bool> _Standard;
		
		private System.Nullable<bool> _NonStandard;
		
		private string _Standard1;
		
		private string _NonStandard1;
		
		private EntityRef<SupplierProfile> _SupplierProfile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOIDChanging(long value);
    partial void OnOIDChanged();
    partial void OnSeqNoChanging(string value);
    partial void OnSeqNoChanged();
    partial void OnERPSupplierChanging(string value);
    partial void OnERPSupplierChanged();
    partial void OnPHFactoriesChanging(string value);
    partial void OnPHFactoriesChanged();
    partial void OnLocationofSuppFactoryChanging(string value);
    partial void OnLocationofSuppFactoryChanged();
    partial void OnFromEffectivedDateChanging(System.DateTime value);
    partial void OnFromEffectivedDateChanged();
    partial void OnIsLCLChanging(bool value);
    partial void OnIsLCLChanged();
    partial void OnTransitModeChanging(string value);
    partial void OnTransitModeChanged();
    partial void OnIncotermsChanging(string value);
    partial void OnIncotermsChanged();
    partial void OnIncotermsPointPortChanging(string value);
    partial void OnIncotermsPointPortChanged();
    partial void OnPointofDestinationChanging(string value);
    partial void OnPointofDestinationChanged();
    partial void OnPointOfOriginChanging(string value);
    partial void OnPointOfOriginChanged();
    partial void OnPointOfOriginAddressChanging(string value);
    partial void OnPointOfOriginAddressChanged();
    partial void OnPlaceOfOriginChanging(string value);
    partial void OnPlaceOfOriginChanged();
    partial void OnPortBorderOfOriginChanging(string value);
    partial void OnPortBorderOfOriginChanged();
    partial void OnPortBorderOfDestinationChanging(string value);
    partial void OnPortBorderOfDestinationChanged();
    partial void OnPlaceOfDestinationChanging(string value);
    partial void OnPlaceOfDestinationChanged();
    partial void OnPointOfDestination6PChanging(string value);
    partial void OnPointOfDestination6PChanged();
    partial void OnPointOfDestinationAddressChanging(string value);
    partial void OnPointOfDestinationAddressChanged();
    partial void OnToEffectivedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnToEffectivedDateChanged();
    partial void OnForwarderAddressEnChanging(string value);
    partial void OnForwarderAddressEnChanged();
    partial void OnForwarderAddressCHChanging(string value);
    partial void OnForwarderAddressCHChanged();
    partial void OnForwarderAddressTHChanging(string value);
    partial void OnForwarderAddressTHChanged();
    partial void OnTimeFrameChanging(System.Nullable<int> value);
    partial void OnTimeFrameChanged();
    partial void OnTimeFrame1WetChanging(System.Nullable<int> value);
    partial void OnTimeFrame1WetChanged();
    partial void OnSpecialNoteChanging(string value);
    partial void OnSpecialNoteChanged();
    partial void OnFCLAgreedRequestChanging(System.Nullable<bool> value);
    partial void OnFCLAgreedRequestChanged();
    partial void OnFCLTransitPointChangeNecessityChanging(System.Nullable<bool> value);
    partial void OnFCLTransitPointChangeNecessityChanged();
    partial void OnFCLIncotermsPointPortChanging(string value);
    partial void OnFCLIncotermsPointPortChanged();
    partial void OnFCLPointofDestinationChanging(string value);
    partial void OnFCLPointofDestinationChanged();
    partial void OnFCLTimeFrameChanging(System.Nullable<int> value);
    partial void OnFCLTimeFrameChanged();
    partial void OnFCLPortBorderOfDestinationChanging(string value);
    partial void OnFCLPortBorderOfDestinationChanged();
    partial void OnFCLPlaceOfDestinationChanging(string value);
    partial void OnFCLPlaceOfDestinationChanged();
    partial void OnFCLPointOfDestination6PChanging(string value);
    partial void OnFCLPointOfDestination6PChanged();
    partial void OnFCLPointOfDestinationAddressChanging(string value);
    partial void OnFCLPointOfDestinationAddressChanged();
    partial void OnFCLForwarderAddressEnChanging(string value);
    partial void OnFCLForwarderAddressEnChanged();
    partial void OnFCLForwarderAddressCHChanging(string value);
    partial void OnFCLForwarderAddressCHChanged();
    partial void OnFCLForwarderAddressTHChanging(string value);
    partial void OnFCLForwarderAddressTHChanged();
    partial void OnPoint2PortOfOriginCostChanging(System.Nullable<decimal> value);
    partial void OnPoint2PortOfOriginCostChanged();
    partial void OnFreightCostChanging(System.Nullable<decimal> value);
    partial void OnFreightCostChanged();
    partial void OnPort2PointOfDestinationCostChanging(System.Nullable<decimal> value);
    partial void OnPort2PointOfDestinationCostChanged();
    partial void OnPointOfDestination2ProductionSiteCostChanging(System.Nullable<decimal> value);
    partial void OnPointOfDestination2ProductionSiteCostChanged();
    partial void OnDeliveryRoutingChanging(string value);
    partial void OnDeliveryRoutingChanged();
    partial void OnTransitPointRegionCodeChanging(string value);
    partial void OnTransitPointRegionCodeChanged();
    partial void OnStandardChanging(System.Nullable<bool> value);
    partial void OnStandardChanged();
    partial void OnNonStandardChanging(System.Nullable<bool> value);
    partial void OnNonStandardChanged();
    partial void OnStandard1Changing(string value);
    partial void OnStandard1Changed();
    partial void OnNonStandard1Changing(string value);
    partial void OnNonStandard1Changed();
    #endregion
		
		public IncontermsTransit()
		{
			this._SupplierProfile = default(EntityRef<SupplierProfile>);
			OnCreated();
		}
		
		[Column(Storage="_OID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long OID
		{
			get
			{
				return this._OID;
			}
			set
			{
				if ((this._OID != value))
				{
					this.OnOIDChanging(value);
					this.SendPropertyChanging();
					this._OID = value;
					this.SendPropertyChanged("OID");
					this.OnOIDChanged();
				}
			}
		}
		
		[Column(Storage="_SeqNo", DbType="VarChar(10)")]
		public string SeqNo
		{
			get
			{
				return this._SeqNo;
			}
			set
			{
				if ((this._SeqNo != value))
				{
					this.OnSeqNoChanging(value);
					this.SendPropertyChanging();
					this._SeqNo = value;
					this.SendPropertyChanged("SeqNo");
					this.OnSeqNoChanged();
				}
			}
		}
		
		[Column(Storage="_ERPSupplier", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ERPSupplier
		{
			get
			{
				return this._ERPSupplier;
			}
			set
			{
				if ((this._ERPSupplier != value))
				{
					if (this._SupplierProfile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnERPSupplierChanging(value);
					this.SendPropertyChanging();
					this._ERPSupplier = value;
					this.SendPropertyChanged("ERPSupplier");
					this.OnERPSupplierChanged();
				}
			}
		}
		
		[Column(Storage="_PHFactories", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		public string PHFactories
		{
			get
			{
				return this._PHFactories;
			}
			set
			{
				if ((this._PHFactories != value))
				{
					this.OnPHFactoriesChanging(value);
					this.SendPropertyChanging();
					this._PHFactories = value;
					this.SendPropertyChanged("PHFactories");
					this.OnPHFactoriesChanged();
				}
			}
		}
		
		[Column(Storage="_LocationofSuppFactory", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string LocationofSuppFactory
		{
			get
			{
				return this._LocationofSuppFactory;
			}
			set
			{
				if ((this._LocationofSuppFactory != value))
				{
					this.OnLocationofSuppFactoryChanging(value);
					this.SendPropertyChanging();
					this._LocationofSuppFactory = value;
					this.SendPropertyChanged("LocationofSuppFactory");
					this.OnLocationofSuppFactoryChanged();
				}
			}
		}
		
		[Column(Storage="_FromEffectivedDate", DbType="DateTime NOT NULL")]
		public System.DateTime FromEffectivedDate
		{
			get
			{
				return this._FromEffectivedDate;
			}
			set
			{
				if ((this._FromEffectivedDate != value))
				{
					this.OnFromEffectivedDateChanging(value);
					this.SendPropertyChanging();
					this._FromEffectivedDate = value;
					this.SendPropertyChanged("FromEffectivedDate");
					this.OnFromEffectivedDateChanged();
				}
			}
		}
		
		[Column(Storage="_IsLCL", DbType="Bit NOT NULL")]
		public bool IsLCL
		{
			get
			{
				return this._IsLCL;
			}
			set
			{
				if ((this._IsLCL != value))
				{
					this.OnIsLCLChanging(value);
					this.SendPropertyChanging();
					this._IsLCL = value;
					this.SendPropertyChanged("IsLCL");
					this.OnIsLCLChanged();
				}
			}
		}
		
		[Column(Storage="_TransitMode", DbType="NVarChar(50)")]
		public string TransitMode
		{
			get
			{
				return this._TransitMode;
			}
			set
			{
				if ((this._TransitMode != value))
				{
					this.OnTransitModeChanging(value);
					this.SendPropertyChanging();
					this._TransitMode = value;
					this.SendPropertyChanged("TransitMode");
					this.OnTransitModeChanged();
				}
			}
		}
		
		[Column(Storage="_Incoterms", DbType="VarChar(50)")]
		public string Incoterms
		{
			get
			{
				return this._Incoterms;
			}
			set
			{
				if ((this._Incoterms != value))
				{
					this.OnIncotermsChanging(value);
					this.SendPropertyChanging();
					this._Incoterms = value;
					this.SendPropertyChanged("Incoterms");
					this.OnIncotermsChanged();
				}
			}
		}
		
		[Column(Storage="_IncotermsPointPort", DbType="NVarChar(50)")]
		public string IncotermsPointPort
		{
			get
			{
				return this._IncotermsPointPort;
			}
			set
			{
				if ((this._IncotermsPointPort != value))
				{
					this.OnIncotermsPointPortChanging(value);
					this.SendPropertyChanging();
					this._IncotermsPointPort = value;
					this.SendPropertyChanged("IncotermsPointPort");
					this.OnIncotermsPointPortChanged();
				}
			}
		}
		
		[Column(Storage="_PointofDestination", DbType="VarChar(50)")]
		public string PointofDestination
		{
			get
			{
				return this._PointofDestination;
			}
			set
			{
				if ((this._PointofDestination != value))
				{
					this.OnPointofDestinationChanging(value);
					this.SendPropertyChanging();
					this._PointofDestination = value;
					this.SendPropertyChanged("PointofDestination");
					this.OnPointofDestinationChanged();
				}
			}
		}
		
		[Column(Storage="_PointOfOrigin", DbType="NVarChar(100)")]
		public string PointOfOrigin
		{
			get
			{
				return this._PointOfOrigin;
			}
			set
			{
				if ((this._PointOfOrigin != value))
				{
					this.OnPointOfOriginChanging(value);
					this.SendPropertyChanging();
					this._PointOfOrigin = value;
					this.SendPropertyChanged("PointOfOrigin");
					this.OnPointOfOriginChanged();
				}
			}
		}
		
		[Column(Storage="_PointOfOriginAddress", DbType="NVarChar(500)")]
		public string PointOfOriginAddress
		{
			get
			{
				return this._PointOfOriginAddress;
			}
			set
			{
				if ((this._PointOfOriginAddress != value))
				{
					this.OnPointOfOriginAddressChanging(value);
					this.SendPropertyChanging();
					this._PointOfOriginAddress = value;
					this.SendPropertyChanged("PointOfOriginAddress");
					this.OnPointOfOriginAddressChanged();
				}
			}
		}
		
		[Column(Storage="_PlaceOfOrigin", DbType="NVarChar(100)")]
		public string PlaceOfOrigin
		{
			get
			{
				return this._PlaceOfOrigin;
			}
			set
			{
				if ((this._PlaceOfOrigin != value))
				{
					this.OnPlaceOfOriginChanging(value);
					this.SendPropertyChanging();
					this._PlaceOfOrigin = value;
					this.SendPropertyChanged("PlaceOfOrigin");
					this.OnPlaceOfOriginChanged();
				}
			}
		}
		
		[Column(Storage="_PortBorderOfOrigin", DbType="NVarChar(100)")]
		public string PortBorderOfOrigin
		{
			get
			{
				return this._PortBorderOfOrigin;
			}
			set
			{
				if ((this._PortBorderOfOrigin != value))
				{
					this.OnPortBorderOfOriginChanging(value);
					this.SendPropertyChanging();
					this._PortBorderOfOrigin = value;
					this.SendPropertyChanged("PortBorderOfOrigin");
					this.OnPortBorderOfOriginChanged();
				}
			}
		}
		
		[Column(Storage="_PortBorderOfDestination", DbType="NVarChar(100)")]
		public string PortBorderOfDestination
		{
			get
			{
				return this._PortBorderOfDestination;
			}
			set
			{
				if ((this._PortBorderOfDestination != value))
				{
					this.OnPortBorderOfDestinationChanging(value);
					this.SendPropertyChanging();
					this._PortBorderOfDestination = value;
					this.SendPropertyChanged("PortBorderOfDestination");
					this.OnPortBorderOfDestinationChanged();
				}
			}
		}
		
		[Column(Storage="_PlaceOfDestination", DbType="NVarChar(100)")]
		public string PlaceOfDestination
		{
			get
			{
				return this._PlaceOfDestination;
			}
			set
			{
				if ((this._PlaceOfDestination != value))
				{
					this.OnPlaceOfDestinationChanging(value);
					this.SendPropertyChanging();
					this._PlaceOfDestination = value;
					this.SendPropertyChanged("PlaceOfDestination");
					this.OnPlaceOfDestinationChanged();
				}
			}
		}
		
		[Column(Storage="_PointOfDestination6P", DbType="NVarChar(100)")]
		public string PointOfDestination6P
		{
			get
			{
				return this._PointOfDestination6P;
			}
			set
			{
				if ((this._PointOfDestination6P != value))
				{
					this.OnPointOfDestination6PChanging(value);
					this.SendPropertyChanging();
					this._PointOfDestination6P = value;
					this.SendPropertyChanged("PointOfDestination6P");
					this.OnPointOfDestination6PChanged();
				}
			}
		}
		
		[Column(Storage="_PointOfDestinationAddress", DbType="NVarChar(500)")]
		public string PointOfDestinationAddress
		{
			get
			{
				return this._PointOfDestinationAddress;
			}
			set
			{
				if ((this._PointOfDestinationAddress != value))
				{
					this.OnPointOfDestinationAddressChanging(value);
					this.SendPropertyChanging();
					this._PointOfDestinationAddress = value;
					this.SendPropertyChanged("PointOfDestinationAddress");
					this.OnPointOfDestinationAddressChanged();
				}
			}
		}
		
		[Column(Storage="_ToEffectivedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ToEffectivedDate
		{
			get
			{
				return this._ToEffectivedDate;
			}
			set
			{
				if ((this._ToEffectivedDate != value))
				{
					this.OnToEffectivedDateChanging(value);
					this.SendPropertyChanging();
					this._ToEffectivedDate = value;
					this.SendPropertyChanged("ToEffectivedDate");
					this.OnToEffectivedDateChanged();
				}
			}
		}
		
		[Column(Storage="_ForwarderAddressEn", DbType="NVarChar(500)")]
		public string ForwarderAddressEn
		{
			get
			{
				return this._ForwarderAddressEn;
			}
			set
			{
				if ((this._ForwarderAddressEn != value))
				{
					this.OnForwarderAddressEnChanging(value);
					this.SendPropertyChanging();
					this._ForwarderAddressEn = value;
					this.SendPropertyChanged("ForwarderAddressEn");
					this.OnForwarderAddressEnChanged();
				}
			}
		}
		
		[Column(Storage="_ForwarderAddressCH", DbType="NVarChar(500)")]
		public string ForwarderAddressCH
		{
			get
			{
				return this._ForwarderAddressCH;
			}
			set
			{
				if ((this._ForwarderAddressCH != value))
				{
					this.OnForwarderAddressCHChanging(value);
					this.SendPropertyChanging();
					this._ForwarderAddressCH = value;
					this.SendPropertyChanged("ForwarderAddressCH");
					this.OnForwarderAddressCHChanged();
				}
			}
		}
		
		[Column(Storage="_ForwarderAddressTH", DbType="NVarChar(500)")]
		public string ForwarderAddressTH
		{
			get
			{
				return this._ForwarderAddressTH;
			}
			set
			{
				if ((this._ForwarderAddressTH != value))
				{
					this.OnForwarderAddressTHChanging(value);
					this.SendPropertyChanging();
					this._ForwarderAddressTH = value;
					this.SendPropertyChanged("ForwarderAddressTH");
					this.OnForwarderAddressTHChanged();
				}
			}
		}
		
		[Column(Storage="_TimeFrame", DbType="Int")]
		public System.Nullable<int> TimeFrame
		{
			get
			{
				return this._TimeFrame;
			}
			set
			{
				if ((this._TimeFrame != value))
				{
					this.OnTimeFrameChanging(value);
					this.SendPropertyChanging();
					this._TimeFrame = value;
					this.SendPropertyChanged("TimeFrame");
					this.OnTimeFrameChanged();
				}
			}
		}
		
		[Column(Storage="_TimeFrame1Wet", DbType="Int")]
		public System.Nullable<int> TimeFrame1Wet
		{
			get
			{
				return this._TimeFrame1Wet;
			}
			set
			{
				if ((this._TimeFrame1Wet != value))
				{
					this.OnTimeFrame1WetChanging(value);
					this.SendPropertyChanging();
					this._TimeFrame1Wet = value;
					this.SendPropertyChanged("TimeFrame1Wet");
					this.OnTimeFrame1WetChanged();
				}
			}
		}
		
		[Column(Storage="_SpecialNote", DbType="NVarChar(1000)")]
		public string SpecialNote
		{
			get
			{
				return this._SpecialNote;
			}
			set
			{
				if ((this._SpecialNote != value))
				{
					this.OnSpecialNoteChanging(value);
					this.SendPropertyChanging();
					this._SpecialNote = value;
					this.SendPropertyChanged("SpecialNote");
					this.OnSpecialNoteChanged();
				}
			}
		}
		
		[Column(Storage="_FCLAgreedRequest", DbType="Bit")]
		public System.Nullable<bool> FCLAgreedRequest
		{
			get
			{
				return this._FCLAgreedRequest;
			}
			set
			{
				if ((this._FCLAgreedRequest != value))
				{
					this.OnFCLAgreedRequestChanging(value);
					this.SendPropertyChanging();
					this._FCLAgreedRequest = value;
					this.SendPropertyChanged("FCLAgreedRequest");
					this.OnFCLAgreedRequestChanged();
				}
			}
		}
		
		[Column(Storage="_FCLTransitPointChangeNecessity", DbType="Bit")]
		public System.Nullable<bool> FCLTransitPointChangeNecessity
		{
			get
			{
				return this._FCLTransitPointChangeNecessity;
			}
			set
			{
				if ((this._FCLTransitPointChangeNecessity != value))
				{
					this.OnFCLTransitPointChangeNecessityChanging(value);
					this.SendPropertyChanging();
					this._FCLTransitPointChangeNecessity = value;
					this.SendPropertyChanged("FCLTransitPointChangeNecessity");
					this.OnFCLTransitPointChangeNecessityChanged();
				}
			}
		}
		
		[Column(Storage="_FCLIncotermsPointPort", DbType="NVarChar(50)")]
		public string FCLIncotermsPointPort
		{
			get
			{
				return this._FCLIncotermsPointPort;
			}
			set
			{
				if ((this._FCLIncotermsPointPort != value))
				{
					this.OnFCLIncotermsPointPortChanging(value);
					this.SendPropertyChanging();
					this._FCLIncotermsPointPort = value;
					this.SendPropertyChanged("FCLIncotermsPointPort");
					this.OnFCLIncotermsPointPortChanged();
				}
			}
		}
		
		[Column(Storage="_FCLPointofDestination", DbType="VarChar(50)")]
		public string FCLPointofDestination
		{
			get
			{
				return this._FCLPointofDestination;
			}
			set
			{
				if ((this._FCLPointofDestination != value))
				{
					this.OnFCLPointofDestinationChanging(value);
					this.SendPropertyChanging();
					this._FCLPointofDestination = value;
					this.SendPropertyChanged("FCLPointofDestination");
					this.OnFCLPointofDestinationChanged();
				}
			}
		}
		
		[Column(Storage="_FCLTimeFrame", DbType="Int")]
		public System.Nullable<int> FCLTimeFrame
		{
			get
			{
				return this._FCLTimeFrame;
			}
			set
			{
				if ((this._FCLTimeFrame != value))
				{
					this.OnFCLTimeFrameChanging(value);
					this.SendPropertyChanging();
					this._FCLTimeFrame = value;
					this.SendPropertyChanged("FCLTimeFrame");
					this.OnFCLTimeFrameChanged();
				}
			}
		}
		
		[Column(Storage="_FCLPortBorderOfDestination", DbType="NVarChar(100)")]
		public string FCLPortBorderOfDestination
		{
			get
			{
				return this._FCLPortBorderOfDestination;
			}
			set
			{
				if ((this._FCLPortBorderOfDestination != value))
				{
					this.OnFCLPortBorderOfDestinationChanging(value);
					this.SendPropertyChanging();
					this._FCLPortBorderOfDestination = value;
					this.SendPropertyChanged("FCLPortBorderOfDestination");
					this.OnFCLPortBorderOfDestinationChanged();
				}
			}
		}
		
		[Column(Storage="_FCLPlaceOfDestination", DbType="NVarChar(100)")]
		public string FCLPlaceOfDestination
		{
			get
			{
				return this._FCLPlaceOfDestination;
			}
			set
			{
				if ((this._FCLPlaceOfDestination != value))
				{
					this.OnFCLPlaceOfDestinationChanging(value);
					this.SendPropertyChanging();
					this._FCLPlaceOfDestination = value;
					this.SendPropertyChanged("FCLPlaceOfDestination");
					this.OnFCLPlaceOfDestinationChanged();
				}
			}
		}
		
		[Column(Storage="_FCLPointOfDestination6P", DbType="NVarChar(100)")]
		public string FCLPointOfDestination6P
		{
			get
			{
				return this._FCLPointOfDestination6P;
			}
			set
			{
				if ((this._FCLPointOfDestination6P != value))
				{
					this.OnFCLPointOfDestination6PChanging(value);
					this.SendPropertyChanging();
					this._FCLPointOfDestination6P = value;
					this.SendPropertyChanged("FCLPointOfDestination6P");
					this.OnFCLPointOfDestination6PChanged();
				}
			}
		}
		
		[Column(Storage="_FCLPointOfDestinationAddress", DbType="NVarChar(500)")]
		public string FCLPointOfDestinationAddress
		{
			get
			{
				return this._FCLPointOfDestinationAddress;
			}
			set
			{
				if ((this._FCLPointOfDestinationAddress != value))
				{
					this.OnFCLPointOfDestinationAddressChanging(value);
					this.SendPropertyChanging();
					this._FCLPointOfDestinationAddress = value;
					this.SendPropertyChanged("FCLPointOfDestinationAddress");
					this.OnFCLPointOfDestinationAddressChanged();
				}
			}
		}
		
		[Column(Storage="_FCLForwarderAddressEn", DbType="NVarChar(500)")]
		public string FCLForwarderAddressEn
		{
			get
			{
				return this._FCLForwarderAddressEn;
			}
			set
			{
				if ((this._FCLForwarderAddressEn != value))
				{
					this.OnFCLForwarderAddressEnChanging(value);
					this.SendPropertyChanging();
					this._FCLForwarderAddressEn = value;
					this.SendPropertyChanged("FCLForwarderAddressEn");
					this.OnFCLForwarderAddressEnChanged();
				}
			}
		}
		
		[Column(Storage="_FCLForwarderAddressCH", DbType="NVarChar(500)")]
		public string FCLForwarderAddressCH
		{
			get
			{
				return this._FCLForwarderAddressCH;
			}
			set
			{
				if ((this._FCLForwarderAddressCH != value))
				{
					this.OnFCLForwarderAddressCHChanging(value);
					this.SendPropertyChanging();
					this._FCLForwarderAddressCH = value;
					this.SendPropertyChanged("FCLForwarderAddressCH");
					this.OnFCLForwarderAddressCHChanged();
				}
			}
		}
		
		[Column(Storage="_FCLForwarderAddressTH", DbType="NVarChar(500)")]
		public string FCLForwarderAddressTH
		{
			get
			{
				return this._FCLForwarderAddressTH;
			}
			set
			{
				if ((this._FCLForwarderAddressTH != value))
				{
					this.OnFCLForwarderAddressTHChanging(value);
					this.SendPropertyChanging();
					this._FCLForwarderAddressTH = value;
					this.SendPropertyChanged("FCLForwarderAddressTH");
					this.OnFCLForwarderAddressTHChanged();
				}
			}
		}
		
		[Column(Storage="_Point2PortOfOriginCost", DbType="Decimal(15,4)")]
		public System.Nullable<decimal> Point2PortOfOriginCost
		{
			get
			{
				return this._Point2PortOfOriginCost;
			}
			set
			{
				if ((this._Point2PortOfOriginCost != value))
				{
					this.OnPoint2PortOfOriginCostChanging(value);
					this.SendPropertyChanging();
					this._Point2PortOfOriginCost = value;
					this.SendPropertyChanged("Point2PortOfOriginCost");
					this.OnPoint2PortOfOriginCostChanged();
				}
			}
		}
		
		[Column(Storage="_FreightCost", DbType="Decimal(15,4)")]
		public System.Nullable<decimal> FreightCost
		{
			get
			{
				return this._FreightCost;
			}
			set
			{
				if ((this._FreightCost != value))
				{
					this.OnFreightCostChanging(value);
					this.SendPropertyChanging();
					this._FreightCost = value;
					this.SendPropertyChanged("FreightCost");
					this.OnFreightCostChanged();
				}
			}
		}
		
		[Column(Storage="_Port2PointOfDestinationCost", DbType="Decimal(15,4)")]
		public System.Nullable<decimal> Port2PointOfDestinationCost
		{
			get
			{
				return this._Port2PointOfDestinationCost;
			}
			set
			{
				if ((this._Port2PointOfDestinationCost != value))
				{
					this.OnPort2PointOfDestinationCostChanging(value);
					this.SendPropertyChanging();
					this._Port2PointOfDestinationCost = value;
					this.SendPropertyChanged("Port2PointOfDestinationCost");
					this.OnPort2PointOfDestinationCostChanged();
				}
			}
		}
		
		[Column(Storage="_PointOfDestination2ProductionSiteCost", DbType="Decimal(15,4)")]
		public System.Nullable<decimal> PointOfDestination2ProductionSiteCost
		{
			get
			{
				return this._PointOfDestination2ProductionSiteCost;
			}
			set
			{
				if ((this._PointOfDestination2ProductionSiteCost != value))
				{
					this.OnPointOfDestination2ProductionSiteCostChanging(value);
					this.SendPropertyChanging();
					this._PointOfDestination2ProductionSiteCost = value;
					this.SendPropertyChanged("PointOfDestination2ProductionSiteCost");
					this.OnPointOfDestination2ProductionSiteCostChanged();
				}
			}
		}
		
		[Column(Storage="_DeliveryRouting", DbType="VarChar(20)")]
		public string DeliveryRouting
		{
			get
			{
				return this._DeliveryRouting;
			}
			set
			{
				if ((this._DeliveryRouting != value))
				{
					this.OnDeliveryRoutingChanging(value);
					this.SendPropertyChanging();
					this._DeliveryRouting = value;
					this.SendPropertyChanged("DeliveryRouting");
					this.OnDeliveryRoutingChanged();
				}
			}
		}
		
		[Column(Storage="_TransitPointRegionCode", DbType="VarChar(50)")]
		public string TransitPointRegionCode
		{
			get
			{
				return this._TransitPointRegionCode;
			}
			set
			{
				if ((this._TransitPointRegionCode != value))
				{
					this.OnTransitPointRegionCodeChanging(value);
					this.SendPropertyChanging();
					this._TransitPointRegionCode = value;
					this.SendPropertyChanged("TransitPointRegionCode");
					this.OnTransitPointRegionCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Standard", DbType="Bit")]
		public System.Nullable<bool> Standard
		{
			get
			{
				return this._Standard;
			}
			set
			{
				if ((this._Standard != value))
				{
					this.OnStandardChanging(value);
					this.SendPropertyChanging();
					this._Standard = value;
					this.SendPropertyChanged("Standard");
					this.OnStandardChanged();
				}
			}
		}
		
		[Column(Storage="_NonStandard", DbType="Bit")]
		public System.Nullable<bool> NonStandard
		{
			get
			{
				return this._NonStandard;
			}
			set
			{
				if ((this._NonStandard != value))
				{
					this.OnNonStandardChanging(value);
					this.SendPropertyChanging();
					this._NonStandard = value;
					this.SendPropertyChanged("NonStandard");
					this.OnNonStandardChanged();
				}
			}
		}
		
		[Column(Storage="_Standard1", DbType="VarChar(10)")]
		public string Standard1
		{
			get
			{
				return this._Standard1;
			}
			set
			{
				if ((this._Standard1 != value))
				{
					this.OnStandard1Changing(value);
					this.SendPropertyChanging();
					this._Standard1 = value;
					this.SendPropertyChanged("Standard1");
					this.OnStandard1Changed();
				}
			}
		}
		
		[Column(Storage="_NonStandard1", DbType="VarChar(10)")]
		public string NonStandard1
		{
			get
			{
				return this._NonStandard1;
			}
			set
			{
				if ((this._NonStandard1 != value))
				{
					this.OnNonStandard1Changing(value);
					this.SendPropertyChanging();
					this._NonStandard1 = value;
					this.SendPropertyChanged("NonStandard1");
					this.OnNonStandard1Changed();
				}
			}
		}
		
		[Association(Name="SupplierProfile_IncontermsTransit", Storage="_SupplierProfile", ThisKey="ERPSupplier", OtherKey="ERPSupplier", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public SupplierProfile SupplierProfile
		{
			get
			{
				return this._SupplierProfile.Entity;
			}
			set
			{
				SupplierProfile previousValue = this._SupplierProfile.Entity;
				if (((previousValue != value) 
							|| (this._SupplierProfile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SupplierProfile.Entity = null;
						previousValue.IncontermsTransits.Remove(this);
					}
					this._SupplierProfile.Entity = value;
					if ((value != null))
					{
						value.IncontermsTransits.Add(this);
						this._ERPSupplier = value.ERPSupplier;
					}
					else
					{
						this._ERPSupplier = default(string);
					}
					this.SendPropertyChanged("SupplierProfile");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.CoGroupMainDiff")]
	public partial class CoGroupMainDiff : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _OID;
		
		private string _SeqNo;
		
		private string _Description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOIDChanging(long value);
    partial void OnOIDChanged();
    partial void OnSeqNoChanging(string value);
    partial void OnSeqNoChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public CoGroupMainDiff()
		{
			OnCreated();
		}
		
		[Column(Storage="_OID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long OID
		{
			get
			{
				return this._OID;
			}
			set
			{
				if ((this._OID != value))
				{
					this.OnOIDChanging(value);
					this.SendPropertyChanging();
					this._OID = value;
					this.SendPropertyChanged("OID");
					this.OnOIDChanged();
				}
			}
		}
		
		[Column(Storage="_SeqNo", DbType="VarChar(20)")]
		public string SeqNo
		{
			get
			{
				return this._SeqNo;
			}
			set
			{
				if ((this._SeqNo != value))
				{
					this.OnSeqNoChanging(value);
					this.SendPropertyChanging();
					this._SeqNo = value;
					this.SendPropertyChanged("SeqNo");
					this.OnSeqNoChanged();
				}
			}
		}
		
		[Column(Storage="_Description", DbType="VarChar(200)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.SupplierProfile")]
	public partial class SupplierProfile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ERPSupplier;
		
		private string _Supplier;
		
		private string _SupplierName;
		
		private string _Address;
		
		private string _AddressCN;
		
		private string _RegionCode;
		
		private string _TEL;
		
		private string _Fax;
		
		private string _MobilePhone;
		
		private string _EMail;
		
		private string _Country;
		
		private string _Beneficiary;
		
		private string _Agent;
		
		private string _Active;
		
		private string _AttnPerson;
		
		private string _Remarks;
		
		private string _Currency;
		
		private System.Nullable<decimal> _StandardDev;
		
		private System.Nullable<decimal> _TradingDis;
		
		private System.Nullable<decimal> _FurtherDis;
		
		private string _CreditDays;
		
		private System.Nullable<decimal> _EstInterest;
		
		private System.Nullable<decimal> _BankCharge;
		
		private System.Nullable<decimal> _StockInterest;
		
		private System.Nullable<decimal> _Transportation;
		
		private System.Nullable<decimal> _InlandForwarderHandling;
		
		private System.Nullable<decimal> _InlandTransportation;
		
		private System.Nullable<decimal> _TransitLoadingTransportation;
		
		private System.Nullable<decimal> _Frieght;
		
		private System.Nullable<decimal> _Frieght_Air;
		
		private System.Nullable<decimal> _Frieght_Boat;
		
		private System.Nullable<decimal> _AdditionalFrieght;
		
		private System.Nullable<decimal> _SubCharge;
		
		private string _DeliveryTerms;
		
		private string _SupplierUOM;
		
		private string _ShipMode;
		
		private string _DischargePort;
		
		private string _DeliveryMode;
		
		private System.Nullable<decimal> _TransitTimeTruck;
		
		private System.Nullable<decimal> _TransitTimeAir;
		
		private System.Nullable<decimal> _TransitTimeBoat;
		
		private string _MaterialGroup;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private System.Nullable<double> _DevelopmentCapability;
		
		private System.Nullable<double> _ProductionLeadtime;
		
		private System.Nullable<double> _Quality;
		
		private System.Nullable<double> _Shipment;
		
		private System.Nullable<double> _OverallService;
		
		private System.Nullable<double> _Color;
		
		private string _PaymentMethod;
		
		private string _PostCode;
		
		private string _AlphaSequenceField;
		
		private string _PortofDischarge;
		
		private string _FirstStation;
		
		private string _ForwarderShippingLine;
		
		private string _SuppDelWording;
		
		private string _WeekOnThisDay;
		
		private string _SupplierGrp;
		
		private string _BusinessNature;
		
		private string _PaymentTerms;
		
		private string _Multiplepxpolicy;
		
		private string _Dimension;
		
		private System.Nullable<System.DateTime> _IncotermsEffectivedDate;
		
		private string _PHUOM;
		
		private System.Nullable<double> _ShipmentTolerant;
		
		private string _WidthSpec;
		
		private System.Nullable<double> _UOMConvert;
		
		private string _ForwarderShippingCoName;
		
		private string _ForwarderShippingContact;
		
		private string _ForwarderShippingTel;
		
		private System.Nullable<bool> _AssignedBy;
		
		private System.Nullable<bool> _DeleteFlag;
		
		private System.Nullable<bool> _GoodsPack;
		
		private string _PDD;
		
		private System.Nullable<System.DateTime> _PDDDate;
		
		private string _IQC;
		
		private System.Nullable<System.DateTime> _IQCDate;
		
		private string _FabricTec;
		
		private System.Nullable<System.DateTime> _FabricTecDate;
		
		private string _PUR;
		
		private System.Nullable<System.DateTime> _PURDate;
		
		private System.Nullable<bool> _HaveSupplementSheet;
		
		private string _SupplierGroup;
		
		private System.Nullable<bool> _AssociatePartner;
		
		private string _CustDependent;
		
		private string _PreparePerson;
		
		private System.Nullable<System.DateTime> _PrepareDate;
		
		private string _ConfirmPerson;
		
		private System.Nullable<System.DateTime> _ConfirmDate;
		
		private string _ApprovalPerson;
		
		private System.Nullable<System.DateTime> _ApprovalDate;
		
		private string _DeletedBy;
		
		private System.Nullable<decimal> _VAT;
		
		private System.Nullable<decimal> _MarkerWidthBuffer;
		
		private string _TradeMethod;
		
		private string _ShortName;
		
		private System.Nullable<bool> _IsConverter;
		
		private string _BuyerCode;
		
		private string _UnofficiaPaymentTerms;
		
		private System.Nullable<int> _InvoiceMatchingDDDAddDays;
		
		private System.Nullable<int> _PaymentDDDAddDays;
		
		private string _DeliveryRouting;
		
		private string _LastPreparePerson;
		
		private System.Nullable<System.DateTime> _LastPrepareDate;
		
		private string _LastConfirmPerson;
		
		private System.Nullable<System.DateTime> _LastConfirmDate;
		
		private string _LastApprovalPerson;
		
		private System.Nullable<System.DateTime> _LastApprovalDate;
		
		private string _DeliveryRoutingRemark;
		
		private string _CheckFlag;
		
		private string _AttnPerson2;
		
		private string _TEL2;
		
		private string _MobilePhone2;
		
		private string _EMail2;
		
		private string _AgentLoc;
		
		private System.Nullable<double> _ShipmentTolerant1;
		
		private System.Nullable<int> _Rank;
		
		private string _SupplierGroupMainDiff;
		
		private string _POFormType;
		
		private EntitySet<ShipmentLeadtime> _ShipmentLeadtimes;
		
		private EntitySet<SupplierProductRange> _SupplierProductRanges;
		
		private EntitySet<TransitModeTransitPointChange> _TransitModeTransitPointChanges;
		
		private EntitySet<SupplierCycleHistory> _SupplierCycleHistories;
		
		private EntitySet<Performance> _Performances;
		
		private EntitySet<MaterialTypeDimension> _MaterialTypeDimensions;
		
		private EntitySet<IncontermsTransitForMIDc> _IncontermsTransitForMIDcs;
		
		private EntitySet<IncontermsTransit> _IncontermsTransits;
		
		private EntitySet<SupplierFactory> _SupplierFactories;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnERPSupplierChanging(string value);
    partial void OnERPSupplierChanged();
    partial void OnSupplierChanging(string value);
    partial void OnSupplierChanged();
    partial void OnSupplierNameChanging(string value);
    partial void OnSupplierNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnAddressCNChanging(string value);
    partial void OnAddressCNChanged();
    partial void OnRegionCodeChanging(string value);
    partial void OnRegionCodeChanged();
    partial void OnTELChanging(string value);
    partial void OnTELChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnMobilePhoneChanging(string value);
    partial void OnMobilePhoneChanged();
    partial void OnEMailChanging(string value);
    partial void OnEMailChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnBeneficiaryChanging(string value);
    partial void OnBeneficiaryChanged();
    partial void OnAgentChanging(string value);
    partial void OnAgentChanged();
    partial void OnActiveChanging(string value);
    partial void OnActiveChanged();
    partial void OnAttnPersonChanging(string value);
    partial void OnAttnPersonChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnCurrencyChanging(string value);
    partial void OnCurrencyChanged();
    partial void OnStandardDevChanging(System.Nullable<decimal> value);
    partial void OnStandardDevChanged();
    partial void OnTradingDisChanging(System.Nullable<decimal> value);
    partial void OnTradingDisChanged();
    partial void OnFurtherDisChanging(System.Nullable<decimal> value);
    partial void OnFurtherDisChanged();
    partial void OnCreditDaysChanging(string value);
    partial void OnCreditDaysChanged();
    partial void OnEstInterestChanging(System.Nullable<decimal> value);
    partial void OnEstInterestChanged();
    partial void OnBankChargeChanging(System.Nullable<decimal> value);
    partial void OnBankChargeChanged();
    partial void OnStockInterestChanging(System.Nullable<decimal> value);
    partial void OnStockInterestChanged();
    partial void OnTransportationChanging(System.Nullable<decimal> value);
    partial void OnTransportationChanged();
    partial void OnInlandForwarderHandlingChanging(System.Nullable<decimal> value);
    partial void OnInlandForwarderHandlingChanged();
    partial void OnInlandTransportationChanging(System.Nullable<decimal> value);
    partial void OnInlandTransportationChanged();
    partial void OnTransitLoadingTransportationChanging(System.Nullable<decimal> value);
    partial void OnTransitLoadingTransportationChanged();
    partial void OnFrieghtChanging(System.Nullable<decimal> value);
    partial void OnFrieghtChanged();
    partial void OnFrieght_AirChanging(System.Nullable<decimal> value);
    partial void OnFrieght_AirChanged();
    partial void OnFrieght_BoatChanging(System.Nullable<decimal> value);
    partial void OnFrieght_BoatChanged();
    partial void OnAdditionalFrieghtChanging(System.Nullable<decimal> value);
    partial void OnAdditionalFrieghtChanged();
    partial void OnSubChargeChanging(System.Nullable<decimal> value);
    partial void OnSubChargeChanged();
    partial void OnDeliveryTermsChanging(string value);
    partial void OnDeliveryTermsChanged();
    partial void OnSupplierUOMChanging(string value);
    partial void OnSupplierUOMChanged();
    partial void OnShipModeChanging(string value);
    partial void OnShipModeChanged();
    partial void OnDischargePortChanging(string value);
    partial void OnDischargePortChanged();
    partial void OnDeliveryModeChanging(string value);
    partial void OnDeliveryModeChanged();
    partial void OnTransitTimeTruckChanging(System.Nullable<decimal> value);
    partial void OnTransitTimeTruckChanged();
    partial void OnTransitTimeAirChanging(System.Nullable<decimal> value);
    partial void OnTransitTimeAirChanged();
    partial void OnTransitTimeBoatChanging(System.Nullable<decimal> value);
    partial void OnTransitTimeBoatChanged();
    partial void OnMaterialGroupChanging(string value);
    partial void OnMaterialGroupChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnDevelopmentCapabilityChanging(System.Nullable<double> value);
    partial void OnDevelopmentCapabilityChanged();
    partial void OnProductionLeadtimeChanging(System.Nullable<double> value);
    partial void OnProductionLeadtimeChanged();
    partial void OnQualityChanging(System.Nullable<double> value);
    partial void OnQualityChanged();
    partial void OnShipmentChanging(System.Nullable<double> value);
    partial void OnShipmentChanged();
    partial void OnOverallServiceChanging(System.Nullable<double> value);
    partial void OnOverallServiceChanged();
    partial void OnColorChanging(System.Nullable<double> value);
    partial void OnColorChanged();
    partial void OnPaymentMethodChanging(string value);
    partial void OnPaymentMethodChanged();
    partial void OnPostCodeChanging(string value);
    partial void OnPostCodeChanged();
    partial void OnAlphaSequenceFieldChanging(string value);
    partial void OnAlphaSequenceFieldChanged();
    partial void OnPortofDischargeChanging(string value);
    partial void OnPortofDischargeChanged();
    partial void OnFirstStationChanging(string value);
    partial void OnFirstStationChanged();
    partial void OnForwarderShippingLineChanging(string value);
    partial void OnForwarderShippingLineChanged();
    partial void OnSuppDelWordingChanging(string value);
    partial void OnSuppDelWordingChanged();
    partial void OnWeekOnThisDayChanging(string value);
    partial void OnWeekOnThisDayChanged();
    partial void OnSupplierGrpChanging(string value);
    partial void OnSupplierGrpChanged();
    partial void OnBusinessNatureChanging(string value);
    partial void OnBusinessNatureChanged();
    partial void OnPaymentTermsChanging(string value);
    partial void OnPaymentTermsChanged();
    partial void OnMultiplepxpolicyChanging(string value);
    partial void OnMultiplepxpolicyChanged();
    partial void OnDimensionChanging(string value);
    partial void OnDimensionChanged();
    partial void OnIncotermsEffectivedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnIncotermsEffectivedDateChanged();
    partial void OnPHUOMChanging(string value);
    partial void OnPHUOMChanged();
    partial void OnShipmentTolerantChanging(System.Nullable<double> value);
    partial void OnShipmentTolerantChanged();
    partial void OnWidthSpecChanging(string value);
    partial void OnWidthSpecChanged();
    partial void OnUOMConvertChanging(System.Nullable<double> value);
    partial void OnUOMConvertChanged();
    partial void OnForwarderShippingCoNameChanging(string value);
    partial void OnForwarderShippingCoNameChanged();
    partial void OnForwarderShippingContactChanging(string value);
    partial void OnForwarderShippingContactChanged();
    partial void OnForwarderShippingTelChanging(string value);
    partial void OnForwarderShippingTelChanged();
    partial void OnAssignedByChanging(System.Nullable<bool> value);
    partial void OnAssignedByChanged();
    partial void OnDeleteFlagChanging(System.Nullable<bool> value);
    partial void OnDeleteFlagChanged();
    partial void OnGoodsPackChanging(System.Nullable<bool> value);
    partial void OnGoodsPackChanged();
    partial void OnPDDChanging(string value);
    partial void OnPDDChanged();
    partial void OnPDDDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPDDDateChanged();
    partial void OnIQCChanging(string value);
    partial void OnIQCChanged();
    partial void OnIQCDateChanging(System.Nullable<System.DateTime> value);
    partial void OnIQCDateChanged();
    partial void OnFabricTecChanging(string value);
    partial void OnFabricTecChanged();
    partial void OnFabricTecDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFabricTecDateChanged();
    partial void OnPURChanging(string value);
    partial void OnPURChanged();
    partial void OnPURDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPURDateChanged();
    partial void OnHaveSupplementSheetChanging(System.Nullable<bool> value);
    partial void OnHaveSupplementSheetChanged();
    partial void OnSupplierGroupChanging(string value);
    partial void OnSupplierGroupChanged();
    partial void OnAssociatePartnerChanging(System.Nullable<bool> value);
    partial void OnAssociatePartnerChanged();
    partial void OnCustDependentChanging(string value);
    partial void OnCustDependentChanged();
    partial void OnPreparePersonChanging(string value);
    partial void OnPreparePersonChanged();
    partial void OnPrepareDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPrepareDateChanged();
    partial void OnConfirmPersonChanging(string value);
    partial void OnConfirmPersonChanged();
    partial void OnConfirmDateChanging(System.Nullable<System.DateTime> value);
    partial void OnConfirmDateChanged();
    partial void OnApprovalPersonChanging(string value);
    partial void OnApprovalPersonChanged();
    partial void OnApprovalDateChanging(System.Nullable<System.DateTime> value);
    partial void OnApprovalDateChanged();
    partial void OnDeletedByChanging(string value);
    partial void OnDeletedByChanged();
    partial void OnVATChanging(System.Nullable<decimal> value);
    partial void OnVATChanged();
    partial void OnMarkerWidthBufferChanging(System.Nullable<decimal> value);
    partial void OnMarkerWidthBufferChanged();
    partial void OnTradeMethodChanging(string value);
    partial void OnTradeMethodChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnIsConverterChanging(System.Nullable<bool> value);
    partial void OnIsConverterChanged();
    partial void OnBuyerCodeChanging(string value);
    partial void OnBuyerCodeChanged();
    partial void OnUnofficiaPaymentTermsChanging(string value);
    partial void OnUnofficiaPaymentTermsChanged();
    partial void OnInvoiceMatchingDDDAddDaysChanging(System.Nullable<int> value);
    partial void OnInvoiceMatchingDDDAddDaysChanged();
    partial void OnPaymentDDDAddDaysChanging(System.Nullable<int> value);
    partial void OnPaymentDDDAddDaysChanged();
    partial void OnDeliveryRoutingChanging(string value);
    partial void OnDeliveryRoutingChanged();
    partial void OnLastPreparePersonChanging(string value);
    partial void OnLastPreparePersonChanged();
    partial void OnLastPrepareDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastPrepareDateChanged();
    partial void OnLastConfirmPersonChanging(string value);
    partial void OnLastConfirmPersonChanged();
    partial void OnLastConfirmDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastConfirmDateChanged();
    partial void OnLastApprovalPersonChanging(string value);
    partial void OnLastApprovalPersonChanged();
    partial void OnLastApprovalDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastApprovalDateChanged();
    partial void OnDeliveryRoutingRemarkChanging(string value);
    partial void OnDeliveryRoutingRemarkChanged();
    partial void OnCheckFlagChanging(string value);
    partial void OnCheckFlagChanged();
    partial void OnAttnPerson2Changing(string value);
    partial void OnAttnPerson2Changed();
    partial void OnTEL2Changing(string value);
    partial void OnTEL2Changed();
    partial void OnMobilePhone2Changing(string value);
    partial void OnMobilePhone2Changed();
    partial void OnEMail2Changing(string value);
    partial void OnEMail2Changed();
    partial void OnAgentLocChanging(string value);
    partial void OnAgentLocChanged();
    partial void OnShipmentTolerant1Changing(System.Nullable<double> value);
    partial void OnShipmentTolerant1Changed();
    partial void OnRankChanging(System.Nullable<int> value);
    partial void OnRankChanged();
    partial void OnSupplierGroupMainDiffChanging(string value);
    partial void OnSupplierGroupMainDiffChanged();
    partial void OnPOFormTypeChanging(string value);
    partial void OnPOFormTypeChanged();
    #endregion
		
		public SupplierProfile()
		{
			this._ShipmentLeadtimes = new EntitySet<ShipmentLeadtime>(new Action<ShipmentLeadtime>(this.attach_ShipmentLeadtimes), new Action<ShipmentLeadtime>(this.detach_ShipmentLeadtimes));
			this._SupplierProductRanges = new EntitySet<SupplierProductRange>(new Action<SupplierProductRange>(this.attach_SupplierProductRanges), new Action<SupplierProductRange>(this.detach_SupplierProductRanges));
			this._TransitModeTransitPointChanges = new EntitySet<TransitModeTransitPointChange>(new Action<TransitModeTransitPointChange>(this.attach_TransitModeTransitPointChanges), new Action<TransitModeTransitPointChange>(this.detach_TransitModeTransitPointChanges));
			this._SupplierCycleHistories = new EntitySet<SupplierCycleHistory>(new Action<SupplierCycleHistory>(this.attach_SupplierCycleHistories), new Action<SupplierCycleHistory>(this.detach_SupplierCycleHistories));
			this._Performances = new EntitySet<Performance>(new Action<Performance>(this.attach_Performances), new Action<Performance>(this.detach_Performances));
			this._MaterialTypeDimensions = new EntitySet<MaterialTypeDimension>(new Action<MaterialTypeDimension>(this.attach_MaterialTypeDimensions), new Action<MaterialTypeDimension>(this.detach_MaterialTypeDimensions));
			this._IncontermsTransitForMIDcs = new EntitySet<IncontermsTransitForMIDc>(new Action<IncontermsTransitForMIDc>(this.attach_IncontermsTransitForMIDcs), new Action<IncontermsTransitForMIDc>(this.detach_IncontermsTransitForMIDcs));
			this._IncontermsTransits = new EntitySet<IncontermsTransit>(new Action<IncontermsTransit>(this.attach_IncontermsTransits), new Action<IncontermsTransit>(this.detach_IncontermsTransits));
			this._SupplierFactories = new EntitySet<SupplierFactory>(new Action<SupplierFactory>(this.attach_SupplierFactories), new Action<SupplierFactory>(this.detach_SupplierFactories));
			OnCreated();
		}
		
		[Column(Storage="_ERPSupplier", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ERPSupplier
		{
			get
			{
				return this._ERPSupplier;
			}
			set
			{
				if ((this._ERPSupplier != value))
				{
					this.OnERPSupplierChanging(value);
					this.SendPropertyChanging();
					this._ERPSupplier = value;
					this.SendPropertyChanged("ERPSupplier");
					this.OnERPSupplierChanged();
				}
			}
		}
		
		[Column(Storage="_Supplier", DbType="VarChar(50)")]
		public string Supplier
		{
			get
			{
				return this._Supplier;
			}
			set
			{
				if ((this._Supplier != value))
				{
					this.OnSupplierChanging(value);
					this.SendPropertyChanging();
					this._Supplier = value;
					this.SendPropertyChanged("Supplier");
					this.OnSupplierChanged();
				}
			}
		}
		
		[Column(Storage="_SupplierName", DbType="NVarChar(100)")]
		public string SupplierName
		{
			get
			{
				return this._SupplierName;
			}
			set
			{
				if ((this._SupplierName != value))
				{
					this.OnSupplierNameChanging(value);
					this.SendPropertyChanging();
					this._SupplierName = value;
					this.SendPropertyChanged("SupplierName");
					this.OnSupplierNameChanged();
				}
			}
		}
		
		[Column(Storage="_Address", DbType="NVarChar(500)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[Column(Storage="_AddressCN", DbType="NVarChar(500)")]
		public string AddressCN
		{
			get
			{
				return this._AddressCN;
			}
			set
			{
				if ((this._AddressCN != value))
				{
					this.OnAddressCNChanging(value);
					this.SendPropertyChanging();
					this._AddressCN = value;
					this.SendPropertyChanged("AddressCN");
					this.OnAddressCNChanged();
				}
			}
		}
		
		[Column(Storage="_RegionCode", DbType="VarChar(30)")]
		public string RegionCode
		{
			get
			{
				return this._RegionCode;
			}
			set
			{
				if ((this._RegionCode != value))
				{
					this.OnRegionCodeChanging(value);
					this.SendPropertyChanging();
					this._RegionCode = value;
					this.SendPropertyChanged("RegionCode");
					this.OnRegionCodeChanged();
				}
			}
		}
		
		[Column(Storage="_TEL", DbType="NVarChar(50)")]
		public string TEL
		{
			get
			{
				return this._TEL;
			}
			set
			{
				if ((this._TEL != value))
				{
					this.OnTELChanging(value);
					this.SendPropertyChanging();
					this._TEL = value;
					this.SendPropertyChanged("TEL");
					this.OnTELChanged();
				}
			}
		}
		
		[Column(Storage="_Fax", DbType="NVarChar(50)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[Column(Storage="_MobilePhone", DbType="NVarChar(50)")]
		public string MobilePhone
		{
			get
			{
				return this._MobilePhone;
			}
			set
			{
				if ((this._MobilePhone != value))
				{
					this.OnMobilePhoneChanging(value);
					this.SendPropertyChanging();
					this._MobilePhone = value;
					this.SendPropertyChanged("MobilePhone");
					this.OnMobilePhoneChanged();
				}
			}
		}
		
		[Column(Storage="_EMail", DbType="NVarChar(150)")]
		public string EMail
		{
			get
			{
				return this._EMail;
			}
			set
			{
				if ((this._EMail != value))
				{
					this.OnEMailChanging(value);
					this.SendPropertyChanging();
					this._EMail = value;
					this.SendPropertyChanged("EMail");
					this.OnEMailChanged();
				}
			}
		}
		
		[Column(Storage="_Country", DbType="NVarChar(50)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[Column(Storage="_Beneficiary", DbType="NVarChar(50)")]
		public string Beneficiary
		{
			get
			{
				return this._Beneficiary;
			}
			set
			{
				if ((this._Beneficiary != value))
				{
					this.OnBeneficiaryChanging(value);
					this.SendPropertyChanging();
					this._Beneficiary = value;
					this.SendPropertyChanged("Beneficiary");
					this.OnBeneficiaryChanged();
				}
			}
		}
		
		[Column(Storage="_Agent", DbType="NVarChar(50)")]
		public string Agent
		{
			get
			{
				return this._Agent;
			}
			set
			{
				if ((this._Agent != value))
				{
					this.OnAgentChanging(value);
					this.SendPropertyChanging();
					this._Agent = value;
					this.SendPropertyChanged("Agent");
					this.OnAgentChanged();
				}
			}
		}
		
		[Column(Storage="_Active", DbType="NVarChar(50)")]
		public string Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[Column(Storage="_AttnPerson", DbType="NVarChar(50)")]
		public string AttnPerson
		{
			get
			{
				return this._AttnPerson;
			}
			set
			{
				if ((this._AttnPerson != value))
				{
					this.OnAttnPersonChanging(value);
					this.SendPropertyChanging();
					this._AttnPerson = value;
					this.SendPropertyChanged("AttnPerson");
					this.OnAttnPersonChanged();
				}
			}
		}
		
		[Column(Storage="_Remarks", DbType="NVarChar(2000)")]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[Column(Storage="_Currency", DbType="NVarChar(5)")]
		public string Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[Column(Storage="_StandardDev", DbType="Decimal(15,4)")]
		public System.Nullable<decimal> StandardDev
		{
			get
			{
				return this._StandardDev;
			}
			set
			{
				if ((this._StandardDev != value))
				{
					this.OnStandardDevChanging(value);
					this.SendPropertyChanging();
					this._StandardDev = value;
					this.SendPropertyChanged("StandardDev");
					this.OnStandardDevChanged();
				}
			}
		}
		
		[Column(Storage="_TradingDis", DbType="Decimal(15,4)")]
		public System.Nullable<decimal> TradingDis
		{
			get
			{
				return this._TradingDis;
			}
			set
			{
				if ((this._TradingDis != value))
				{
					this.OnTradingDisChanging(value);
					this.SendPropertyChanging();
					this._TradingDis = value;
					this.SendPropertyChanged("TradingDis");
					this.OnTradingDisChanged();
				}
			}
		}
		
		[Column(Storage="_FurtherDis", DbType="Decimal(15,4)")]
		public System.Nullable<decimal> FurtherDis
		{
			get
			{
				return this._FurtherDis;
			}
			set
			{
				if ((this._FurtherDis != value))
				{
					this.OnFurtherDisChanging(value);
					this.SendPropertyChanging();
					this._FurtherDis = value;
					this.SendPropertyChanged("FurtherDis");
					this.OnFurtherDisChanged();
				}
			}
		}
		
		[Column(Storage="_CreditDays", DbType="NVarChar(20)")]
		public string CreditDays
		{
			get
			{
				return this._CreditDays;
			}
			set
			{
				if ((this._CreditDays != value))
				{
					this.OnCreditDaysChanging(value);
					this.SendPropertyChanging();
					this._CreditDays = value;
					this.SendPropertyChanged("CreditDays");
					this.OnCreditDaysChanged();
				}
			}
		}
		
		[Column(Storage="_EstInterest", DbType="Decimal(15,4)")]
		public System.Nullable<decimal> EstInterest
		{
			get
			{
				return this._EstInterest;
			}
			set
			{
				if ((this._EstInterest != value))
				{
					this.OnEstInterestChanging(value);
					this.SendPropertyChanging();
					this._EstInterest = value;
					this.SendPropertyChanged("EstInterest");
					this.OnEstInterestChanged();
				}
			}
		}
		
		[Column(Storage="_BankCharge", DbType="Decimal(15,4)")]
		public System.Nullable<decimal> BankCharge
		{
			get
			{
				return this._BankCharge;
			}
			set
			{
				if ((this._BankCharge != value))
				{
					this.OnBankChargeChanging(value);
					this.SendPropertyChanging();
					this._BankCharge = value;
					this.SendPropertyChanged("BankCharge");
					this.OnBankChargeChanged();
				}
			}
		}
		
		[Column(Storage="_StockInterest", DbType="Decimal(15,4)")]
		public System.Nullable<decimal> StockInterest
		{
			get
			{
				return this._StockInterest;
			}
			set
			{
				if ((this._StockInterest != value))
				{
					this.OnStockInterestChanging(value);
					this.SendPropertyChanging();
					this._StockInterest = value;
					this.SendPropertyChanged("StockInterest");
					this.OnStockInterestChanged();
				}
			}
		}
		
		[Column(Storage="_Transportation", DbType="Decimal(15,4)")]
		public System.Nullable<decimal> Transportation
		{
			get
			{
				return this._Transportation;
			}
			set
			{
				if ((this._Transportation != value))
				{
					this.OnTransportationChanging(value);
					this.SendPropertyChanging();
					this._Transportation = value;
					this.SendPropertyChanged("Transportation");
					this.OnTransportationChanged();
				}
			}
		}
		
		[Column(Storage="_InlandForwarderHandling", DbType="Decimal(15,4)")]
		public System.Nullable<decimal> InlandForwarderHandling
		{
			get
			{
				return this._InlandForwarderHandling;
			}
			set
			{
				if ((this._InlandForwarderHandling != value))
				{
					this.OnInlandForwarderHandlingChanging(value);
					this.SendPropertyChanging();
					this._InlandForwarderHandling = value;
					this.SendPropertyChanged("InlandForwarderHandling");
					this.OnInlandForwarderHandlingChanged();
				}
			}
		}
		
		[Column(Storage="_InlandTransportation", DbType="Decimal(15,4)")]
		public System.Nullable<decimal> InlandTransportation
		{
			get
			{
				return this._InlandTransportation;
			}
			set
			{
				if ((this._InlandTransportation != value))
				{
					this.OnInlandTransportationChanging(value);
					this.SendPropertyChanging();
					this._InlandTransportation = value;
					this.SendPropertyChanged("InlandTransportation");
					this.OnInlandTransportationChanged();
				}
			}
		}
		
		[Column(Storage="_TransitLoadingTransportation", DbType="Decimal(15,4)")]
		public System.Nullable<decimal> TransitLoadingTransportation
		{
			get
			{
				return this._TransitLoadingTransportation;
			}
			set
			{
				if ((this._TransitLoadingTransportation != value))
				{
					this.OnTransitLoadingTransportationChanging(value);
					this.SendPropertyChanging();
					this._TransitLoadingTransportation = value;
					this.SendPropertyChanged("TransitLoadingTransportation");
					this.OnTransitLoadingTransportationChanged();
				}
			}
		}
		
		[Column(Storage="_Frieght", DbType="Decimal(15,4)")]
		public System.Nullable<decimal> Frieght
		{
			get
			{
				return this._Frieght;
			}
			set
			{
				if ((this._Frieght != value))
				{
					this.OnFrieghtChanging(value);
					this.SendPropertyChanging();
					this._Frieght = value;
					this.SendPropertyChanged("Frieght");
					this.OnFrieghtChanged();
				}
			}
		}
		
		[Column(Storage="_Frieght_Air", DbType="Decimal(15,4)")]
		public System.Nullable<decimal> Frieght_Air
		{
			get
			{
				return this._Frieght_Air;
			}
			set
			{
				if ((this._Frieght_Air != value))
				{
					this.OnFrieght_AirChanging(value);
					this.SendPropertyChanging();
					this._Frieght_Air = value;
					this.SendPropertyChanged("Frieght_Air");
					this.OnFrieght_AirChanged();
				}
			}
		}
		
		[Column(Storage="_Frieght_Boat", DbType="Decimal(15,4)")]
		public System.Nullable<decimal> Frieght_Boat
		{
			get
			{
				return this._Frieght_Boat;
			}
			set
			{
				if ((this._Frieght_Boat != value))
				{
					this.OnFrieght_BoatChanging(value);
					this.SendPropertyChanging();
					this._Frieght_Boat = value;
					this.SendPropertyChanged("Frieght_Boat");
					this.OnFrieght_BoatChanged();
				}
			}
		}
		
		[Column(Storage="_AdditionalFrieght", DbType="Decimal(15,4)")]
		public System.Nullable<decimal> AdditionalFrieght
		{
			get
			{
				return this._AdditionalFrieght;
			}
			set
			{
				if ((this._AdditionalFrieght != value))
				{
					this.OnAdditionalFrieghtChanging(value);
					this.SendPropertyChanging();
					this._AdditionalFrieght = value;
					this.SendPropertyChanged("AdditionalFrieght");
					this.OnAdditionalFrieghtChanged();
				}
			}
		}
		
		[Column(Storage="_SubCharge", DbType="Decimal(15,4)")]
		public System.Nullable<decimal> SubCharge
		{
			get
			{
				return this._SubCharge;
			}
			set
			{
				if ((this._SubCharge != value))
				{
					this.OnSubChargeChanging(value);
					this.SendPropertyChanging();
					this._SubCharge = value;
					this.SendPropertyChanged("SubCharge");
					this.OnSubChargeChanged();
				}
			}
		}
		
		[Column(Storage="_DeliveryTerms", DbType="NVarChar(50)")]
		public string DeliveryTerms
		{
			get
			{
				return this._DeliveryTerms;
			}
			set
			{
				if ((this._DeliveryTerms != value))
				{
					this.OnDeliveryTermsChanging(value);
					this.SendPropertyChanging();
					this._DeliveryTerms = value;
					this.SendPropertyChanged("DeliveryTerms");
					this.OnDeliveryTermsChanged();
				}
			}
		}
		
		[Column(Storage="_SupplierUOM", DbType="NVarChar(50)")]
		public string SupplierUOM
		{
			get
			{
				return this._SupplierUOM;
			}
			set
			{
				if ((this._SupplierUOM != value))
				{
					this.OnSupplierUOMChanging(value);
					this.SendPropertyChanging();
					this._SupplierUOM = value;
					this.SendPropertyChanged("SupplierUOM");
					this.OnSupplierUOMChanged();
				}
			}
		}
		
		[Column(Storage="_ShipMode", DbType="NVarChar(50)")]
		public string ShipMode
		{
			get
			{
				return this._ShipMode;
			}
			set
			{
				if ((this._ShipMode != value))
				{
					this.OnShipModeChanging(value);
					this.SendPropertyChanging();
					this._ShipMode = value;
					this.SendPropertyChanged("ShipMode");
					this.OnShipModeChanged();
				}
			}
		}
		
		[Column(Storage="_DischargePort", DbType="NVarChar(50)")]
		public string DischargePort
		{
			get
			{
				return this._DischargePort;
			}
			set
			{
				if ((this._DischargePort != value))
				{
					this.OnDischargePortChanging(value);
					this.SendPropertyChanging();
					this._DischargePort = value;
					this.SendPropertyChanged("DischargePort");
					this.OnDischargePortChanged();
				}
			}
		}
		
		[Column(Storage="_DeliveryMode", DbType="NVarChar(50)")]
		public string DeliveryMode
		{
			get
			{
				return this._DeliveryMode;
			}
			set
			{
				if ((this._DeliveryMode != value))
				{
					this.OnDeliveryModeChanging(value);
					this.SendPropertyChanging();
					this._DeliveryMode = value;
					this.SendPropertyChanged("DeliveryMode");
					this.OnDeliveryModeChanged();
				}
			}
		}
		
		[Column(Storage="_TransitTimeTruck", DbType="Decimal(15,4)")]
		public System.Nullable<decimal> TransitTimeTruck
		{
			get
			{
				return this._TransitTimeTruck;
			}
			set
			{
				if ((this._TransitTimeTruck != value))
				{
					this.OnTransitTimeTruckChanging(value);
					this.SendPropertyChanging();
					this._TransitTimeTruck = value;
					this.SendPropertyChanged("TransitTimeTruck");
					this.OnTransitTimeTruckChanged();
				}
			}
		}
		
		[Column(Storage="_TransitTimeAir", DbType="Decimal(15,4)")]
		public System.Nullable<decimal> TransitTimeAir
		{
			get
			{
				return this._TransitTimeAir;
			}
			set
			{
				if ((this._TransitTimeAir != value))
				{
					this.OnTransitTimeAirChanging(value);
					this.SendPropertyChanging();
					this._TransitTimeAir = value;
					this.SendPropertyChanged("TransitTimeAir");
					this.OnTransitTimeAirChanged();
				}
			}
		}
		
		[Column(Storage="_TransitTimeBoat", DbType="Decimal(15,4)")]
		public System.Nullable<decimal> TransitTimeBoat
		{
			get
			{
				return this._TransitTimeBoat;
			}
			set
			{
				if ((this._TransitTimeBoat != value))
				{
					this.OnTransitTimeBoatChanging(value);
					this.SendPropertyChanging();
					this._TransitTimeBoat = value;
					this.SendPropertyChanged("TransitTimeBoat");
					this.OnTransitTimeBoatChanged();
				}
			}
		}
		
		[Column(Storage="_MaterialGroup", DbType="NVarChar(50)")]
		public string MaterialGroup
		{
			get
			{
				return this._MaterialGroup;
			}
			set
			{
				if ((this._MaterialGroup != value))
				{
					this.OnMaterialGroupChanging(value);
					this.SendPropertyChanging();
					this._MaterialGroup = value;
					this.SendPropertyChanged("MaterialGroup");
					this.OnMaterialGroupChanged();
				}
			}
		}
		
		[Column(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[Column(Storage="_DevelopmentCapability", DbType="Float")]
		public System.Nullable<double> DevelopmentCapability
		{
			get
			{
				return this._DevelopmentCapability;
			}
			set
			{
				if ((this._DevelopmentCapability != value))
				{
					this.OnDevelopmentCapabilityChanging(value);
					this.SendPropertyChanging();
					this._DevelopmentCapability = value;
					this.SendPropertyChanged("DevelopmentCapability");
					this.OnDevelopmentCapabilityChanged();
				}
			}
		}
		
		[Column(Storage="_ProductionLeadtime", DbType="Float")]
		public System.Nullable<double> ProductionLeadtime
		{
			get
			{
				return this._ProductionLeadtime;
			}
			set
			{
				if ((this._ProductionLeadtime != value))
				{
					this.OnProductionLeadtimeChanging(value);
					this.SendPropertyChanging();
					this._ProductionLeadtime = value;
					this.SendPropertyChanged("ProductionLeadtime");
					this.OnProductionLeadtimeChanged();
				}
			}
		}
		
		[Column(Storage="_Quality", DbType="Float")]
		public System.Nullable<double> Quality
		{
			get
			{
				return this._Quality;
			}
			set
			{
				if ((this._Quality != value))
				{
					this.OnQualityChanging(value);
					this.SendPropertyChanging();
					this._Quality = value;
					this.SendPropertyChanged("Quality");
					this.OnQualityChanged();
				}
			}
		}
		
		[Column(Storage="_Shipment", DbType="Float")]
		public System.Nullable<double> Shipment
		{
			get
			{
				return this._Shipment;
			}
			set
			{
				if ((this._Shipment != value))
				{
					this.OnShipmentChanging(value);
					this.SendPropertyChanging();
					this._Shipment = value;
					this.SendPropertyChanged("Shipment");
					this.OnShipmentChanged();
				}
			}
		}
		
		[Column(Storage="_OverallService", DbType="Float")]
		public System.Nullable<double> OverallService
		{
			get
			{
				return this._OverallService;
			}
			set
			{
				if ((this._OverallService != value))
				{
					this.OnOverallServiceChanging(value);
					this.SendPropertyChanging();
					this._OverallService = value;
					this.SendPropertyChanged("OverallService");
					this.OnOverallServiceChanged();
				}
			}
		}
		
		[Column(Storage="_Color", DbType="Float")]
		public System.Nullable<double> Color
		{
			get
			{
				return this._Color;
			}
			set
			{
				if ((this._Color != value))
				{
					this.OnColorChanging(value);
					this.SendPropertyChanging();
					this._Color = value;
					this.SendPropertyChanged("Color");
					this.OnColorChanged();
				}
			}
		}
		
		[Column(Storage="_PaymentMethod", DbType="NVarChar(30)")]
		public string PaymentMethod
		{
			get
			{
				return this._PaymentMethod;
			}
			set
			{
				if ((this._PaymentMethod != value))
				{
					this.OnPaymentMethodChanging(value);
					this.SendPropertyChanging();
					this._PaymentMethod = value;
					this.SendPropertyChanged("PaymentMethod");
					this.OnPaymentMethodChanged();
				}
			}
		}
		
		[Column(Storage="_PostCode", DbType="NVarChar(10)")]
		public string PostCode
		{
			get
			{
				return this._PostCode;
			}
			set
			{
				if ((this._PostCode != value))
				{
					this.OnPostCodeChanging(value);
					this.SendPropertyChanging();
					this._PostCode = value;
					this.SendPropertyChanged("PostCode");
					this.OnPostCodeChanged();
				}
			}
		}
		
		[Column(Storage="_AlphaSequenceField", DbType="NVarChar(10)")]
		public string AlphaSequenceField
		{
			get
			{
				return this._AlphaSequenceField;
			}
			set
			{
				if ((this._AlphaSequenceField != value))
				{
					this.OnAlphaSequenceFieldChanging(value);
					this.SendPropertyChanging();
					this._AlphaSequenceField = value;
					this.SendPropertyChanged("AlphaSequenceField");
					this.OnAlphaSequenceFieldChanged();
				}
			}
		}
		
		[Column(Storage="_PortofDischarge", DbType="NVarChar(20)")]
		public string PortofDischarge
		{
			get
			{
				return this._PortofDischarge;
			}
			set
			{
				if ((this._PortofDischarge != value))
				{
					this.OnPortofDischargeChanging(value);
					this.SendPropertyChanging();
					this._PortofDischarge = value;
					this.SendPropertyChanged("PortofDischarge");
					this.OnPortofDischargeChanged();
				}
			}
		}
		
		[Column(Storage="_FirstStation", DbType="NVarChar(20)")]
		public string FirstStation
		{
			get
			{
				return this._FirstStation;
			}
			set
			{
				if ((this._FirstStation != value))
				{
					this.OnFirstStationChanging(value);
					this.SendPropertyChanging();
					this._FirstStation = value;
					this.SendPropertyChanged("FirstStation");
					this.OnFirstStationChanged();
				}
			}
		}
		
		[Column(Storage="_ForwarderShippingLine", DbType="NVarChar(20)")]
		public string ForwarderShippingLine
		{
			get
			{
				return this._ForwarderShippingLine;
			}
			set
			{
				if ((this._ForwarderShippingLine != value))
				{
					this.OnForwarderShippingLineChanging(value);
					this.SendPropertyChanging();
					this._ForwarderShippingLine = value;
					this.SendPropertyChanged("ForwarderShippingLine");
					this.OnForwarderShippingLineChanged();
				}
			}
		}
		
		[Column(Storage="_SuppDelWording", DbType="NVarChar(15)")]
		public string SuppDelWording
		{
			get
			{
				return this._SuppDelWording;
			}
			set
			{
				if ((this._SuppDelWording != value))
				{
					this.OnSuppDelWordingChanging(value);
					this.SendPropertyChanging();
					this._SuppDelWording = value;
					this.SendPropertyChanged("SuppDelWording");
					this.OnSuppDelWordingChanged();
				}
			}
		}
		
		[Column(Storage="_WeekOnThisDay", DbType="NVarChar(15)")]
		public string WeekOnThisDay
		{
			get
			{
				return this._WeekOnThisDay;
			}
			set
			{
				if ((this._WeekOnThisDay != value))
				{
					this.OnWeekOnThisDayChanging(value);
					this.SendPropertyChanging();
					this._WeekOnThisDay = value;
					this.SendPropertyChanged("WeekOnThisDay");
					this.OnWeekOnThisDayChanged();
				}
			}
		}
		
		[Column(Storage="_SupplierGrp", DbType="NVarChar(100)")]
		public string SupplierGrp
		{
			get
			{
				return this._SupplierGrp;
			}
			set
			{
				if ((this._SupplierGrp != value))
				{
					this.OnSupplierGrpChanging(value);
					this.SendPropertyChanging();
					this._SupplierGrp = value;
					this.SendPropertyChanged("SupplierGrp");
					this.OnSupplierGrpChanged();
				}
			}
		}
		
		[Column(Storage="_BusinessNature", DbType="NVarChar(50)")]
		public string BusinessNature
		{
			get
			{
				return this._BusinessNature;
			}
			set
			{
				if ((this._BusinessNature != value))
				{
					this.OnBusinessNatureChanging(value);
					this.SendPropertyChanging();
					this._BusinessNature = value;
					this.SendPropertyChanged("BusinessNature");
					this.OnBusinessNatureChanged();
				}
			}
		}
		
		[Column(Storage="_PaymentTerms", DbType="NVarChar(50)")]
		public string PaymentTerms
		{
			get
			{
				return this._PaymentTerms;
			}
			set
			{
				if ((this._PaymentTerms != value))
				{
					this.OnPaymentTermsChanging(value);
					this.SendPropertyChanging();
					this._PaymentTerms = value;
					this.SendPropertyChanged("PaymentTerms");
					this.OnPaymentTermsChanged();
				}
			}
		}
		
		[Column(Storage="_Multiplepxpolicy", DbType="NVarChar(50)")]
		public string Multiplepxpolicy
		{
			get
			{
				return this._Multiplepxpolicy;
			}
			set
			{
				if ((this._Multiplepxpolicy != value))
				{
					this.OnMultiplepxpolicyChanging(value);
					this.SendPropertyChanging();
					this._Multiplepxpolicy = value;
					this.SendPropertyChanged("Multiplepxpolicy");
					this.OnMultiplepxpolicyChanged();
				}
			}
		}
		
		[Column(Storage="_Dimension", DbType="VarChar(10)")]
		public string Dimension
		{
			get
			{
				return this._Dimension;
			}
			set
			{
				if ((this._Dimension != value))
				{
					this.OnDimensionChanging(value);
					this.SendPropertyChanging();
					this._Dimension = value;
					this.SendPropertyChanged("Dimension");
					this.OnDimensionChanged();
				}
			}
		}
		
		[Column(Storage="_IncotermsEffectivedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> IncotermsEffectivedDate
		{
			get
			{
				return this._IncotermsEffectivedDate;
			}
			set
			{
				if ((this._IncotermsEffectivedDate != value))
				{
					this.OnIncotermsEffectivedDateChanging(value);
					this.SendPropertyChanging();
					this._IncotermsEffectivedDate = value;
					this.SendPropertyChanged("IncotermsEffectivedDate");
					this.OnIncotermsEffectivedDateChanged();
				}
			}
		}
		
		[Column(Storage="_PHUOM", DbType="NVarChar(10)")]
		public string PHUOM
		{
			get
			{
				return this._PHUOM;
			}
			set
			{
				if ((this._PHUOM != value))
				{
					this.OnPHUOMChanging(value);
					this.SendPropertyChanging();
					this._PHUOM = value;
					this.SendPropertyChanged("PHUOM");
					this.OnPHUOMChanged();
				}
			}
		}
		
		[Column(Storage="_ShipmentTolerant", DbType="Float")]
		public System.Nullable<double> ShipmentTolerant
		{
			get
			{
				return this._ShipmentTolerant;
			}
			set
			{
				if ((this._ShipmentTolerant != value))
				{
					this.OnShipmentTolerantChanging(value);
					this.SendPropertyChanging();
					this._ShipmentTolerant = value;
					this.SendPropertyChanged("ShipmentTolerant");
					this.OnShipmentTolerantChanged();
				}
			}
		}
		
		[Column(Storage="_WidthSpec", DbType="NVarChar(10)")]
		public string WidthSpec
		{
			get
			{
				return this._WidthSpec;
			}
			set
			{
				if ((this._WidthSpec != value))
				{
					this.OnWidthSpecChanging(value);
					this.SendPropertyChanging();
					this._WidthSpec = value;
					this.SendPropertyChanged("WidthSpec");
					this.OnWidthSpecChanged();
				}
			}
		}
		
		[Column(Storage="_UOMConvert", DbType="Float")]
		public System.Nullable<double> UOMConvert
		{
			get
			{
				return this._UOMConvert;
			}
			set
			{
				if ((this._UOMConvert != value))
				{
					this.OnUOMConvertChanging(value);
					this.SendPropertyChanging();
					this._UOMConvert = value;
					this.SendPropertyChanged("UOMConvert");
					this.OnUOMConvertChanged();
				}
			}
		}
		
		[Column(Storage="_ForwarderShippingCoName", DbType="NVarChar(100)")]
		public string ForwarderShippingCoName
		{
			get
			{
				return this._ForwarderShippingCoName;
			}
			set
			{
				if ((this._ForwarderShippingCoName != value))
				{
					this.OnForwarderShippingCoNameChanging(value);
					this.SendPropertyChanging();
					this._ForwarderShippingCoName = value;
					this.SendPropertyChanged("ForwarderShippingCoName");
					this.OnForwarderShippingCoNameChanged();
				}
			}
		}
		
		[Column(Storage="_ForwarderShippingContact", DbType="NVarChar(50)")]
		public string ForwarderShippingContact
		{
			get
			{
				return this._ForwarderShippingContact;
			}
			set
			{
				if ((this._ForwarderShippingContact != value))
				{
					this.OnForwarderShippingContactChanging(value);
					this.SendPropertyChanging();
					this._ForwarderShippingContact = value;
					this.SendPropertyChanged("ForwarderShippingContact");
					this.OnForwarderShippingContactChanged();
				}
			}
		}
		
		[Column(Storage="_ForwarderShippingTel", DbType="NVarChar(50)")]
		public string ForwarderShippingTel
		{
			get
			{
				return this._ForwarderShippingTel;
			}
			set
			{
				if ((this._ForwarderShippingTel != value))
				{
					this.OnForwarderShippingTelChanging(value);
					this.SendPropertyChanging();
					this._ForwarderShippingTel = value;
					this.SendPropertyChanged("ForwarderShippingTel");
					this.OnForwarderShippingTelChanged();
				}
			}
		}
		
		[Column(Storage="_AssignedBy", DbType="Bit")]
		public System.Nullable<bool> AssignedBy
		{
			get
			{
				return this._AssignedBy;
			}
			set
			{
				if ((this._AssignedBy != value))
				{
					this.OnAssignedByChanging(value);
					this.SendPropertyChanging();
					this._AssignedBy = value;
					this.SendPropertyChanged("AssignedBy");
					this.OnAssignedByChanged();
				}
			}
		}
		
		[Column(Storage="_DeleteFlag", DbType="Bit")]
		public System.Nullable<bool> DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[Column(Storage="_GoodsPack", DbType="Bit")]
		public System.Nullable<bool> GoodsPack
		{
			get
			{
				return this._GoodsPack;
			}
			set
			{
				if ((this._GoodsPack != value))
				{
					this.OnGoodsPackChanging(value);
					this.SendPropertyChanging();
					this._GoodsPack = value;
					this.SendPropertyChanged("GoodsPack");
					this.OnGoodsPackChanged();
				}
			}
		}
		
		[Column(Storage="_PDD", DbType="NVarChar(20)")]
		public string PDD
		{
			get
			{
				return this._PDD;
			}
			set
			{
				if ((this._PDD != value))
				{
					this.OnPDDChanging(value);
					this.SendPropertyChanging();
					this._PDD = value;
					this.SendPropertyChanged("PDD");
					this.OnPDDChanged();
				}
			}
		}
		
		[Column(Storage="_PDDDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PDDDate
		{
			get
			{
				return this._PDDDate;
			}
			set
			{
				if ((this._PDDDate != value))
				{
					this.OnPDDDateChanging(value);
					this.SendPropertyChanging();
					this._PDDDate = value;
					this.SendPropertyChanged("PDDDate");
					this.OnPDDDateChanged();
				}
			}
		}
		
		[Column(Storage="_IQC", DbType="NVarChar(20)")]
		public string IQC
		{
			get
			{
				return this._IQC;
			}
			set
			{
				if ((this._IQC != value))
				{
					this.OnIQCChanging(value);
					this.SendPropertyChanging();
					this._IQC = value;
					this.SendPropertyChanged("IQC");
					this.OnIQCChanged();
				}
			}
		}
		
		[Column(Storage="_IQCDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> IQCDate
		{
			get
			{
				return this._IQCDate;
			}
			set
			{
				if ((this._IQCDate != value))
				{
					this.OnIQCDateChanging(value);
					this.SendPropertyChanging();
					this._IQCDate = value;
					this.SendPropertyChanged("IQCDate");
					this.OnIQCDateChanged();
				}
			}
		}
		
		[Column(Storage="_FabricTec", DbType="NVarChar(20)")]
		public string FabricTec
		{
			get
			{
				return this._FabricTec;
			}
			set
			{
				if ((this._FabricTec != value))
				{
					this.OnFabricTecChanging(value);
					this.SendPropertyChanging();
					this._FabricTec = value;
					this.SendPropertyChanged("FabricTec");
					this.OnFabricTecChanged();
				}
			}
		}
		
		[Column(Storage="_FabricTecDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> FabricTecDate
		{
			get
			{
				return this._FabricTecDate;
			}
			set
			{
				if ((this._FabricTecDate != value))
				{
					this.OnFabricTecDateChanging(value);
					this.SendPropertyChanging();
					this._FabricTecDate = value;
					this.SendPropertyChanged("FabricTecDate");
					this.OnFabricTecDateChanged();
				}
			}
		}
		
		[Column(Storage="_PUR", DbType="NVarChar(20)")]
		public string PUR
		{
			get
			{
				return this._PUR;
			}
			set
			{
				if ((this._PUR != value))
				{
					this.OnPURChanging(value);
					this.SendPropertyChanging();
					this._PUR = value;
					this.SendPropertyChanged("PUR");
					this.OnPURChanged();
				}
			}
		}
		
		[Column(Storage="_PURDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PURDate
		{
			get
			{
				return this._PURDate;
			}
			set
			{
				if ((this._PURDate != value))
				{
					this.OnPURDateChanging(value);
					this.SendPropertyChanging();
					this._PURDate = value;
					this.SendPropertyChanged("PURDate");
					this.OnPURDateChanged();
				}
			}
		}
		
		[Column(Storage="_HaveSupplementSheet", DbType="Bit")]
		public System.Nullable<bool> HaveSupplementSheet
		{
			get
			{
				return this._HaveSupplementSheet;
			}
			set
			{
				if ((this._HaveSupplementSheet != value))
				{
					this.OnHaveSupplementSheetChanging(value);
					this.SendPropertyChanging();
					this._HaveSupplementSheet = value;
					this.SendPropertyChanged("HaveSupplementSheet");
					this.OnHaveSupplementSheetChanged();
				}
			}
		}
		
		[Column(Storage="_SupplierGroup", DbType="NVarChar(200)")]
		public string SupplierGroup
		{
			get
			{
				return this._SupplierGroup;
			}
			set
			{
				if ((this._SupplierGroup != value))
				{
					this.OnSupplierGroupChanging(value);
					this.SendPropertyChanging();
					this._SupplierGroup = value;
					this.SendPropertyChanged("SupplierGroup");
					this.OnSupplierGroupChanged();
				}
			}
		}
		
		[Column(Storage="_AssociatePartner", DbType="Bit")]
		public System.Nullable<bool> AssociatePartner
		{
			get
			{
				return this._AssociatePartner;
			}
			set
			{
				if ((this._AssociatePartner != value))
				{
					this.OnAssociatePartnerChanging(value);
					this.SendPropertyChanging();
					this._AssociatePartner = value;
					this.SendPropertyChanged("AssociatePartner");
					this.OnAssociatePartnerChanged();
				}
			}
		}
		
		[Column(Storage="_CustDependent", DbType="NVarChar(200)")]
		public string CustDependent
		{
			get
			{
				return this._CustDependent;
			}
			set
			{
				if ((this._CustDependent != value))
				{
					this.OnCustDependentChanging(value);
					this.SendPropertyChanging();
					this._CustDependent = value;
					this.SendPropertyChanged("CustDependent");
					this.OnCustDependentChanged();
				}
			}
		}
		
		[Column(Storage="_PreparePerson", DbType="NVarChar(50)")]
		public string PreparePerson
		{
			get
			{
				return this._PreparePerson;
			}
			set
			{
				if ((this._PreparePerson != value))
				{
					this.OnPreparePersonChanging(value);
					this.SendPropertyChanging();
					this._PreparePerson = value;
					this.SendPropertyChanged("PreparePerson");
					this.OnPreparePersonChanged();
				}
			}
		}
		
		[Column(Storage="_PrepareDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PrepareDate
		{
			get
			{
				return this._PrepareDate;
			}
			set
			{
				if ((this._PrepareDate != value))
				{
					this.OnPrepareDateChanging(value);
					this.SendPropertyChanging();
					this._PrepareDate = value;
					this.SendPropertyChanged("PrepareDate");
					this.OnPrepareDateChanged();
				}
			}
		}
		
		[Column(Storage="_ConfirmPerson", DbType="NVarChar(50)")]
		public string ConfirmPerson
		{
			get
			{
				return this._ConfirmPerson;
			}
			set
			{
				if ((this._ConfirmPerson != value))
				{
					this.OnConfirmPersonChanging(value);
					this.SendPropertyChanging();
					this._ConfirmPerson = value;
					this.SendPropertyChanged("ConfirmPerson");
					this.OnConfirmPersonChanged();
				}
			}
		}
		
		[Column(Storage="_ConfirmDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ConfirmDate
		{
			get
			{
				return this._ConfirmDate;
			}
			set
			{
				if ((this._ConfirmDate != value))
				{
					this.OnConfirmDateChanging(value);
					this.SendPropertyChanging();
					this._ConfirmDate = value;
					this.SendPropertyChanged("ConfirmDate");
					this.OnConfirmDateChanged();
				}
			}
		}
		
		[Column(Storage="_ApprovalPerson", DbType="NVarChar(50)")]
		public string ApprovalPerson
		{
			get
			{
				return this._ApprovalPerson;
			}
			set
			{
				if ((this._ApprovalPerson != value))
				{
					this.OnApprovalPersonChanging(value);
					this.SendPropertyChanging();
					this._ApprovalPerson = value;
					this.SendPropertyChanged("ApprovalPerson");
					this.OnApprovalPersonChanged();
				}
			}
		}
		
		[Column(Storage="_ApprovalDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ApprovalDate
		{
			get
			{
				return this._ApprovalDate;
			}
			set
			{
				if ((this._ApprovalDate != value))
				{
					this.OnApprovalDateChanging(value);
					this.SendPropertyChanging();
					this._ApprovalDate = value;
					this.SendPropertyChanged("ApprovalDate");
					this.OnApprovalDateChanged();
				}
			}
		}
		
		[Column(Storage="_DeletedBy", DbType="NVarChar(20)")]
		public string DeletedBy
		{
			get
			{
				return this._DeletedBy;
			}
			set
			{
				if ((this._DeletedBy != value))
				{
					this.OnDeletedByChanging(value);
					this.SendPropertyChanging();
					this._DeletedBy = value;
					this.SendPropertyChanged("DeletedBy");
					this.OnDeletedByChanged();
				}
			}
		}
		
		[Column(Storage="_VAT", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> VAT
		{
			get
			{
				return this._VAT;
			}
			set
			{
				if ((this._VAT != value))
				{
					this.OnVATChanging(value);
					this.SendPropertyChanging();
					this._VAT = value;
					this.SendPropertyChanged("VAT");
					this.OnVATChanged();
				}
			}
		}
		
		[Column(Storage="_MarkerWidthBuffer", DbType="Decimal(15,4)")]
		public System.Nullable<decimal> MarkerWidthBuffer
		{
			get
			{
				return this._MarkerWidthBuffer;
			}
			set
			{
				if ((this._MarkerWidthBuffer != value))
				{
					this.OnMarkerWidthBufferChanging(value);
					this.SendPropertyChanging();
					this._MarkerWidthBuffer = value;
					this.SendPropertyChanged("MarkerWidthBuffer");
					this.OnMarkerWidthBufferChanged();
				}
			}
		}
		
		[Column(Storage="_TradeMethod", DbType="NVarChar(50)")]
		public string TradeMethod
		{
			get
			{
				return this._TradeMethod;
			}
			set
			{
				if ((this._TradeMethod != value))
				{
					this.OnTradeMethodChanging(value);
					this.SendPropertyChanging();
					this._TradeMethod = value;
					this.SendPropertyChanged("TradeMethod");
					this.OnTradeMethodChanged();
				}
			}
		}
		
		[Column(Storage="_ShortName", DbType="NVarChar(100)")]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[Column(Storage="_IsConverter", DbType="Bit")]
		public System.Nullable<bool> IsConverter
		{
			get
			{
				return this._IsConverter;
			}
			set
			{
				if ((this._IsConverter != value))
				{
					this.OnIsConverterChanging(value);
					this.SendPropertyChanging();
					this._IsConverter = value;
					this.SendPropertyChanged("IsConverter");
					this.OnIsConverterChanged();
				}
			}
		}
		
		[Column(Storage="_BuyerCode", DbType="VarChar(20)")]
		public string BuyerCode
		{
			get
			{
				return this._BuyerCode;
			}
			set
			{
				if ((this._BuyerCode != value))
				{
					this.OnBuyerCodeChanging(value);
					this.SendPropertyChanging();
					this._BuyerCode = value;
					this.SendPropertyChanged("BuyerCode");
					this.OnBuyerCodeChanged();
				}
			}
		}
		
		[Column(Storage="_UnofficiaPaymentTerms", DbType="NVarChar(50)")]
		public string UnofficiaPaymentTerms
		{
			get
			{
				return this._UnofficiaPaymentTerms;
			}
			set
			{
				if ((this._UnofficiaPaymentTerms != value))
				{
					this.OnUnofficiaPaymentTermsChanging(value);
					this.SendPropertyChanging();
					this._UnofficiaPaymentTerms = value;
					this.SendPropertyChanged("UnofficiaPaymentTerms");
					this.OnUnofficiaPaymentTermsChanged();
				}
			}
		}
		
		[Column(Storage="_InvoiceMatchingDDDAddDays", DbType="Int")]
		public System.Nullable<int> InvoiceMatchingDDDAddDays
		{
			get
			{
				return this._InvoiceMatchingDDDAddDays;
			}
			set
			{
				if ((this._InvoiceMatchingDDDAddDays != value))
				{
					this.OnInvoiceMatchingDDDAddDaysChanging(value);
					this.SendPropertyChanging();
					this._InvoiceMatchingDDDAddDays = value;
					this.SendPropertyChanged("InvoiceMatchingDDDAddDays");
					this.OnInvoiceMatchingDDDAddDaysChanged();
				}
			}
		}
		
		[Column(Storage="_PaymentDDDAddDays", DbType="Int")]
		public System.Nullable<int> PaymentDDDAddDays
		{
			get
			{
				return this._PaymentDDDAddDays;
			}
			set
			{
				if ((this._PaymentDDDAddDays != value))
				{
					this.OnPaymentDDDAddDaysChanging(value);
					this.SendPropertyChanging();
					this._PaymentDDDAddDays = value;
					this.SendPropertyChanged("PaymentDDDAddDays");
					this.OnPaymentDDDAddDaysChanged();
				}
			}
		}
		
		[Column(Storage="_DeliveryRouting", DbType="VarChar(20)")]
		public string DeliveryRouting
		{
			get
			{
				return this._DeliveryRouting;
			}
			set
			{
				if ((this._DeliveryRouting != value))
				{
					this.OnDeliveryRoutingChanging(value);
					this.SendPropertyChanging();
					this._DeliveryRouting = value;
					this.SendPropertyChanged("DeliveryRouting");
					this.OnDeliveryRoutingChanged();
				}
			}
		}
		
		[Column(Storage="_LastPreparePerson", DbType="NVarChar(50)")]
		public string LastPreparePerson
		{
			get
			{
				return this._LastPreparePerson;
			}
			set
			{
				if ((this._LastPreparePerson != value))
				{
					this.OnLastPreparePersonChanging(value);
					this.SendPropertyChanging();
					this._LastPreparePerson = value;
					this.SendPropertyChanged("LastPreparePerson");
					this.OnLastPreparePersonChanged();
				}
			}
		}
		
		[Column(Storage="_LastPrepareDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastPrepareDate
		{
			get
			{
				return this._LastPrepareDate;
			}
			set
			{
				if ((this._LastPrepareDate != value))
				{
					this.OnLastPrepareDateChanging(value);
					this.SendPropertyChanging();
					this._LastPrepareDate = value;
					this.SendPropertyChanged("LastPrepareDate");
					this.OnLastPrepareDateChanged();
				}
			}
		}
		
		[Column(Storage="_LastConfirmPerson", DbType="NVarChar(50)")]
		public string LastConfirmPerson
		{
			get
			{
				return this._LastConfirmPerson;
			}
			set
			{
				if ((this._LastConfirmPerson != value))
				{
					this.OnLastConfirmPersonChanging(value);
					this.SendPropertyChanging();
					this._LastConfirmPerson = value;
					this.SendPropertyChanged("LastConfirmPerson");
					this.OnLastConfirmPersonChanged();
				}
			}
		}
		
		[Column(Storage="_LastConfirmDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastConfirmDate
		{
			get
			{
				return this._LastConfirmDate;
			}
			set
			{
				if ((this._LastConfirmDate != value))
				{
					this.OnLastConfirmDateChanging(value);
					this.SendPropertyChanging();
					this._LastConfirmDate = value;
					this.SendPropertyChanged("LastConfirmDate");
					this.OnLastConfirmDateChanged();
				}
			}
		}
		
		[Column(Storage="_LastApprovalPerson", DbType="NVarChar(50)")]
		public string LastApprovalPerson
		{
			get
			{
				return this._LastApprovalPerson;
			}
			set
			{
				if ((this._LastApprovalPerson != value))
				{
					this.OnLastApprovalPersonChanging(value);
					this.SendPropertyChanging();
					this._LastApprovalPerson = value;
					this.SendPropertyChanged("LastApprovalPerson");
					this.OnLastApprovalPersonChanged();
				}
			}
		}
		
		[Column(Storage="_LastApprovalDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastApprovalDate
		{
			get
			{
				return this._LastApprovalDate;
			}
			set
			{
				if ((this._LastApprovalDate != value))
				{
					this.OnLastApprovalDateChanging(value);
					this.SendPropertyChanging();
					this._LastApprovalDate = value;
					this.SendPropertyChanged("LastApprovalDate");
					this.OnLastApprovalDateChanged();
				}
			}
		}
		
		[Column(Storage="_DeliveryRoutingRemark", DbType="VarChar(1000)")]
		public string DeliveryRoutingRemark
		{
			get
			{
				return this._DeliveryRoutingRemark;
			}
			set
			{
				if ((this._DeliveryRoutingRemark != value))
				{
					this.OnDeliveryRoutingRemarkChanging(value);
					this.SendPropertyChanging();
					this._DeliveryRoutingRemark = value;
					this.SendPropertyChanged("DeliveryRoutingRemark");
					this.OnDeliveryRoutingRemarkChanged();
				}
			}
		}
		
		[Column(Storage="_CheckFlag", DbType="VarChar(100)")]
		public string CheckFlag
		{
			get
			{
				return this._CheckFlag;
			}
			set
			{
				if ((this._CheckFlag != value))
				{
					this.OnCheckFlagChanging(value);
					this.SendPropertyChanging();
					this._CheckFlag = value;
					this.SendPropertyChanged("CheckFlag");
					this.OnCheckFlagChanged();
				}
			}
		}
		
		[Column(Storage="_AttnPerson2", DbType="NVarChar(50)")]
		public string AttnPerson2
		{
			get
			{
				return this._AttnPerson2;
			}
			set
			{
				if ((this._AttnPerson2 != value))
				{
					this.OnAttnPerson2Changing(value);
					this.SendPropertyChanging();
					this._AttnPerson2 = value;
					this.SendPropertyChanged("AttnPerson2");
					this.OnAttnPerson2Changed();
				}
			}
		}
		
		[Column(Storage="_TEL2", DbType="NVarChar(50)")]
		public string TEL2
		{
			get
			{
				return this._TEL2;
			}
			set
			{
				if ((this._TEL2 != value))
				{
					this.OnTEL2Changing(value);
					this.SendPropertyChanging();
					this._TEL2 = value;
					this.SendPropertyChanged("TEL2");
					this.OnTEL2Changed();
				}
			}
		}
		
		[Column(Storage="_MobilePhone2", DbType="NVarChar(50)")]
		public string MobilePhone2
		{
			get
			{
				return this._MobilePhone2;
			}
			set
			{
				if ((this._MobilePhone2 != value))
				{
					this.OnMobilePhone2Changing(value);
					this.SendPropertyChanging();
					this._MobilePhone2 = value;
					this.SendPropertyChanged("MobilePhone2");
					this.OnMobilePhone2Changed();
				}
			}
		}
		
		[Column(Storage="_EMail2", DbType="NVarChar(50)")]
		public string EMail2
		{
			get
			{
				return this._EMail2;
			}
			set
			{
				if ((this._EMail2 != value))
				{
					this.OnEMail2Changing(value);
					this.SendPropertyChanging();
					this._EMail2 = value;
					this.SendPropertyChanged("EMail2");
					this.OnEMail2Changed();
				}
			}
		}
		
		[Column(Storage="_AgentLoc", DbType="NVarChar(200)")]
		public string AgentLoc
		{
			get
			{
				return this._AgentLoc;
			}
			set
			{
				if ((this._AgentLoc != value))
				{
					this.OnAgentLocChanging(value);
					this.SendPropertyChanging();
					this._AgentLoc = value;
					this.SendPropertyChanged("AgentLoc");
					this.OnAgentLocChanged();
				}
			}
		}
		
		[Column(Storage="_ShipmentTolerant1", DbType="Float")]
		public System.Nullable<double> ShipmentTolerant1
		{
			get
			{
				return this._ShipmentTolerant1;
			}
			set
			{
				if ((this._ShipmentTolerant1 != value))
				{
					this.OnShipmentTolerant1Changing(value);
					this.SendPropertyChanging();
					this._ShipmentTolerant1 = value;
					this.SendPropertyChanged("ShipmentTolerant1");
					this.OnShipmentTolerant1Changed();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int")]
		public System.Nullable<int> Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_SupplierGroupMainDiff", DbType="VarChar(100)")]
		public string SupplierGroupMainDiff
		{
			get
			{
				return this._SupplierGroupMainDiff;
			}
			set
			{
				if ((this._SupplierGroupMainDiff != value))
				{
					this.OnSupplierGroupMainDiffChanging(value);
					this.SendPropertyChanging();
					this._SupplierGroupMainDiff = value;
					this.SendPropertyChanged("SupplierGroupMainDiff");
					this.OnSupplierGroupMainDiffChanged();
				}
			}
		}
		
		[Column(Storage="_POFormType", DbType="VarChar(20)")]
		public string POFormType
		{
			get
			{
				return this._POFormType;
			}
			set
			{
				if ((this._POFormType != value))
				{
					this.OnPOFormTypeChanging(value);
					this.SendPropertyChanging();
					this._POFormType = value;
					this.SendPropertyChanged("POFormType");
					this.OnPOFormTypeChanged();
				}
			}
		}
		
		[Association(Name="SupplierProfile_ShipmentLeadtime", Storage="_ShipmentLeadtimes", ThisKey="ERPSupplier", OtherKey="ERPSupplier")]
		public EntitySet<ShipmentLeadtime> ShipmentLeadtimes
		{
			get
			{
				return this._ShipmentLeadtimes;
			}
			set
			{
				this._ShipmentLeadtimes.Assign(value);
			}
		}
		
		[Association(Name="SupplierProfile_SupplierProductRange", Storage="_SupplierProductRanges", ThisKey="ERPSupplier", OtherKey="ERPSupplier")]
		public EntitySet<SupplierProductRange> SupplierProductRanges
		{
			get
			{
				return this._SupplierProductRanges;
			}
			set
			{
				this._SupplierProductRanges.Assign(value);
			}
		}
		
		[Association(Name="SupplierProfile_TransitModeTransitPointChange", Storage="_TransitModeTransitPointChanges", ThisKey="ERPSupplier", OtherKey="ERPSupplier")]
		public EntitySet<TransitModeTransitPointChange> TransitModeTransitPointChanges
		{
			get
			{
				return this._TransitModeTransitPointChanges;
			}
			set
			{
				this._TransitModeTransitPointChanges.Assign(value);
			}
		}
		
		[Association(Name="SupplierProfile_SupplierCycleHistory", Storage="_SupplierCycleHistories", ThisKey="ERPSupplier", OtherKey="ERPSupplier")]
		public EntitySet<SupplierCycleHistory> SupplierCycleHistories
		{
			get
			{
				return this._SupplierCycleHistories;
			}
			set
			{
				this._SupplierCycleHistories.Assign(value);
			}
		}
		
		[Association(Name="SupplierProfile_Performance", Storage="_Performances", ThisKey="ERPSupplier", OtherKey="ERPSupplier")]
		public EntitySet<Performance> Performances
		{
			get
			{
				return this._Performances;
			}
			set
			{
				this._Performances.Assign(value);
			}
		}
		
		[Association(Name="SupplierProfile_MaterialTypeDimension", Storage="_MaterialTypeDimensions", ThisKey="ERPSupplier", OtherKey="ERPSupplier")]
		public EntitySet<MaterialTypeDimension> MaterialTypeDimensions
		{
			get
			{
				return this._MaterialTypeDimensions;
			}
			set
			{
				this._MaterialTypeDimensions.Assign(value);
			}
		}
		
		[Association(Name="SupplierProfile_IncontermsTransitForMIDc", Storage="_IncontermsTransitForMIDcs", ThisKey="ERPSupplier", OtherKey="ERPSupplier")]
		public EntitySet<IncontermsTransitForMIDc> IncontermsTransitForMIDcs
		{
			get
			{
				return this._IncontermsTransitForMIDcs;
			}
			set
			{
				this._IncontermsTransitForMIDcs.Assign(value);
			}
		}
		
		[Association(Name="SupplierProfile_IncontermsTransit", Storage="_IncontermsTransits", ThisKey="ERPSupplier", OtherKey="ERPSupplier")]
		public EntitySet<IncontermsTransit> IncontermsTransits
		{
			get
			{
				return this._IncontermsTransits;
			}
			set
			{
				this._IncontermsTransits.Assign(value);
			}
		}
		
		[Association(Name="SupplierProfile_SupplierFactory", Storage="_SupplierFactories", ThisKey="ERPSupplier", OtherKey="ERPSupplier")]
		public EntitySet<SupplierFactory> SupplierFactories
		{
			get
			{
				return this._SupplierFactories;
			}
			set
			{
				this._SupplierFactories.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ShipmentLeadtimes(ShipmentLeadtime entity)
		{
			this.SendPropertyChanging();
			entity.SupplierProfile = this;
		}
		
		private void detach_ShipmentLeadtimes(ShipmentLeadtime entity)
		{
			this.SendPropertyChanging();
			entity.SupplierProfile = null;
		}
		
		private void attach_SupplierProductRanges(SupplierProductRange entity)
		{
			this.SendPropertyChanging();
			entity.SupplierProfile = this;
		}
		
		private void detach_SupplierProductRanges(SupplierProductRange entity)
		{
			this.SendPropertyChanging();
			entity.SupplierProfile = null;
		}
		
		private void attach_TransitModeTransitPointChanges(TransitModeTransitPointChange entity)
		{
			this.SendPropertyChanging();
			entity.SupplierProfile = this;
		}
		
		private void detach_TransitModeTransitPointChanges(TransitModeTransitPointChange entity)
		{
			this.SendPropertyChanging();
			entity.SupplierProfile = null;
		}
		
		private void attach_SupplierCycleHistories(SupplierCycleHistory entity)
		{
			this.SendPropertyChanging();
			entity.SupplierProfile = this;
		}
		
		private void detach_SupplierCycleHistories(SupplierCycleHistory entity)
		{
			this.SendPropertyChanging();
			entity.SupplierProfile = null;
		}
		
		private void attach_Performances(Performance entity)
		{
			this.SendPropertyChanging();
			entity.SupplierProfile = this;
		}
		
		private void detach_Performances(Performance entity)
		{
			this.SendPropertyChanging();
			entity.SupplierProfile = null;
		}
		
		private void attach_MaterialTypeDimensions(MaterialTypeDimension entity)
		{
			this.SendPropertyChanging();
			entity.SupplierProfile = this;
		}
		
		private void detach_MaterialTypeDimensions(MaterialTypeDimension entity)
		{
			this.SendPropertyChanging();
			entity.SupplierProfile = null;
		}
		
		private void attach_IncontermsTransitForMIDcs(IncontermsTransitForMIDc entity)
		{
			this.SendPropertyChanging();
			entity.SupplierProfile = this;
		}
		
		private void detach_IncontermsTransitForMIDcs(IncontermsTransitForMIDc entity)
		{
			this.SendPropertyChanging();
			entity.SupplierProfile = null;
		}
		
		private void attach_IncontermsTransits(IncontermsTransit entity)
		{
			this.SendPropertyChanging();
			entity.SupplierProfile = this;
		}
		
		private void detach_IncontermsTransits(IncontermsTransit entity)
		{
			this.SendPropertyChanging();
			entity.SupplierProfile = null;
		}
		
		private void attach_SupplierFactories(SupplierFactory entity)
		{
			this.SendPropertyChanging();
			entity.SupplierProfile = this;
		}
		
		private void detach_SupplierFactories(SupplierFactory entity)
		{
			this.SendPropertyChanging();
			entity.SupplierProfile = null;
		}
	}
	
	[Table(Name="dbo.POFormNo")]
	public partial class POFormNo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _OID;
		
		private string _SeqNo;
		
		private string _Code;
		
		private string _Name;
		
		private string _WidthEN;
		
		private string _WidthCN;
		
		private string _SizeEN;
		
		private string _SizeCN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOIDChanging(long value);
    partial void OnOIDChanged();
    partial void OnSeqNoChanging(string value);
    partial void OnSeqNoChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnWidthENChanging(string value);
    partial void OnWidthENChanged();
    partial void OnWidthCNChanging(string value);
    partial void OnWidthCNChanged();
    partial void OnSizeENChanging(string value);
    partial void OnSizeENChanged();
    partial void OnSizeCNChanging(string value);
    partial void OnSizeCNChanged();
    #endregion
		
		public POFormNo()
		{
			OnCreated();
		}
		
		[Column(Storage="_OID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long OID
		{
			get
			{
				return this._OID;
			}
			set
			{
				if ((this._OID != value))
				{
					this.OnOIDChanging(value);
					this.SendPropertyChanging();
					this._OID = value;
					this.SendPropertyChanged("OID");
					this.OnOIDChanged();
				}
			}
		}
		
		[Column(Storage="_SeqNo", DbType="VarChar(20)")]
		public string SeqNo
		{
			get
			{
				return this._SeqNo;
			}
			set
			{
				if ((this._SeqNo != value))
				{
					this.OnSeqNoChanging(value);
					this.SendPropertyChanging();
					this._SeqNo = value;
					this.SendPropertyChanged("SeqNo");
					this.OnSeqNoChanged();
				}
			}
		}
		
		[Column(Storage="_Code", DbType="VarChar(20)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Name", DbType="VarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[Column(Storage="_WidthEN", DbType="VarChar(100)")]
		public string WidthEN
		{
			get
			{
				return this._WidthEN;
			}
			set
			{
				if ((this._WidthEN != value))
				{
					this.OnWidthENChanging(value);
					this.SendPropertyChanging();
					this._WidthEN = value;
					this.SendPropertyChanged("WidthEN");
					this.OnWidthENChanged();
				}
			}
		}
		
		[Column(Storage="_WidthCN", DbType="VarChar(100)")]
		public string WidthCN
		{
			get
			{
				return this._WidthCN;
			}
			set
			{
				if ((this._WidthCN != value))
				{
					this.OnWidthCNChanging(value);
					this.SendPropertyChanging();
					this._WidthCN = value;
					this.SendPropertyChanged("WidthCN");
					this.OnWidthCNChanged();
				}
			}
		}
		
		[Column(Storage="_SizeEN", DbType="VarChar(100)")]
		public string SizeEN
		{
			get
			{
				return this._SizeEN;
			}
			set
			{
				if ((this._SizeEN != value))
				{
					this.OnSizeENChanging(value);
					this.SendPropertyChanging();
					this._SizeEN = value;
					this.SendPropertyChanged("SizeEN");
					this.OnSizeENChanged();
				}
			}
		}
		
		[Column(Storage="_SizeCN", DbType="VarChar(100)")]
		public string SizeCN
		{
			get
			{
				return this._SizeCN;
			}
			set
			{
				if ((this._SizeCN != value))
				{
					this.OnSizeCNChanging(value);
					this.SendPropertyChanging();
					this._SizeCN = value;
					this.SendPropertyChanged("SizeCN");
					this.OnSizeCNChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.TimeFrameII")]
	public partial class TimeFrameII : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _OID;
		
		private string _SeqNo;
		
		private string _StartPoint;
		
		private string _EndPoint;
		
		private string _Buyer;
		
		private string _TradeMethod;
		
		private string _TransitMode;
		
		private string _LogisticSeason;
		
		private System.Nullable<int> _HandlingHKCCS;
		
		private System.Nullable<int> _HandingForwarder;
		
		private System.Nullable<int> _Freight;
		
		private System.Nullable<int> _InlandHandling;
		
		private System.Nullable<int> _TransShipment;
		
		private System.Nullable<int> _LeadTimeDay;
		
		private string _ReceivingEndPoint;
		
		private System.Nullable<bool> _IsDefault;
		
		private string _TradeMethodCde;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOIDChanging(long value);
    partial void OnOIDChanged();
    partial void OnSeqNoChanging(string value);
    partial void OnSeqNoChanged();
    partial void OnStartPointChanging(string value);
    partial void OnStartPointChanged();
    partial void OnEndPointChanging(string value);
    partial void OnEndPointChanged();
    partial void OnBuyerChanging(string value);
    partial void OnBuyerChanged();
    partial void OnTradeMethodChanging(string value);
    partial void OnTradeMethodChanged();
    partial void OnTransitModeChanging(string value);
    partial void OnTransitModeChanged();
    partial void OnLogisticSeasonChanging(string value);
    partial void OnLogisticSeasonChanged();
    partial void OnHandlingHKCCSChanging(System.Nullable<int> value);
    partial void OnHandlingHKCCSChanged();
    partial void OnHandingForwarderChanging(System.Nullable<int> value);
    partial void OnHandingForwarderChanged();
    partial void OnFreightChanging(System.Nullable<int> value);
    partial void OnFreightChanged();
    partial void OnInlandHandlingChanging(System.Nullable<int> value);
    partial void OnInlandHandlingChanged();
    partial void OnTransShipmentChanging(System.Nullable<int> value);
    partial void OnTransShipmentChanged();
    partial void OnLeadTimeDayChanging(System.Nullable<int> value);
    partial void OnLeadTimeDayChanged();
    partial void OnReceivingEndPointChanging(string value);
    partial void OnReceivingEndPointChanged();
    partial void OnIsDefaultChanging(System.Nullable<bool> value);
    partial void OnIsDefaultChanged();
    partial void OnTradeMethodCdeChanging(string value);
    partial void OnTradeMethodCdeChanged();
    #endregion
		
		public TimeFrameII()
		{
			OnCreated();
		}
		
		[Column(Storage="_OID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long OID
		{
			get
			{
				return this._OID;
			}
			set
			{
				if ((this._OID != value))
				{
					this.OnOIDChanging(value);
					this.SendPropertyChanging();
					this._OID = value;
					this.SendPropertyChanged("OID");
					this.OnOIDChanged();
				}
			}
		}
		
		[Column(Storage="_SeqNo", DbType="VarChar(20)")]
		public string SeqNo
		{
			get
			{
				return this._SeqNo;
			}
			set
			{
				if ((this._SeqNo != value))
				{
					this.OnSeqNoChanging(value);
					this.SendPropertyChanging();
					this._SeqNo = value;
					this.SendPropertyChanged("SeqNo");
					this.OnSeqNoChanged();
				}
			}
		}
		
		[Column(Storage="_StartPoint", DbType="VarChar(30)")]
		public string StartPoint
		{
			get
			{
				return this._StartPoint;
			}
			set
			{
				if ((this._StartPoint != value))
				{
					this.OnStartPointChanging(value);
					this.SendPropertyChanging();
					this._StartPoint = value;
					this.SendPropertyChanged("StartPoint");
					this.OnStartPointChanged();
				}
			}
		}
		
		[Column(Storage="_EndPoint", DbType="VarChar(30)")]
		public string EndPoint
		{
			get
			{
				return this._EndPoint;
			}
			set
			{
				if ((this._EndPoint != value))
				{
					this.OnEndPointChanging(value);
					this.SendPropertyChanging();
					this._EndPoint = value;
					this.SendPropertyChanged("EndPoint");
					this.OnEndPointChanged();
				}
			}
		}
		
		[Column(Storage="_Buyer", DbType="VarChar(30)")]
		public string Buyer
		{
			get
			{
				return this._Buyer;
			}
			set
			{
				if ((this._Buyer != value))
				{
					this.OnBuyerChanging(value);
					this.SendPropertyChanging();
					this._Buyer = value;
					this.SendPropertyChanged("Buyer");
					this.OnBuyerChanged();
				}
			}
		}
		
		[Column(Storage="_TradeMethod", DbType="VarChar(50)")]
		public string TradeMethod
		{
			get
			{
				return this._TradeMethod;
			}
			set
			{
				if ((this._TradeMethod != value))
				{
					this.OnTradeMethodChanging(value);
					this.SendPropertyChanging();
					this._TradeMethod = value;
					this.SendPropertyChanged("TradeMethod");
					this.OnTradeMethodChanged();
				}
			}
		}
		
		[Column(Storage="_TransitMode", DbType="VarChar(30)")]
		public string TransitMode
		{
			get
			{
				return this._TransitMode;
			}
			set
			{
				if ((this._TransitMode != value))
				{
					this.OnTransitModeChanging(value);
					this.SendPropertyChanging();
					this._TransitMode = value;
					this.SendPropertyChanged("TransitMode");
					this.OnTransitModeChanged();
				}
			}
		}
		
		[Column(Storage="_LogisticSeason", DbType="VarChar(10)")]
		public string LogisticSeason
		{
			get
			{
				return this._LogisticSeason;
			}
			set
			{
				if ((this._LogisticSeason != value))
				{
					this.OnLogisticSeasonChanging(value);
					this.SendPropertyChanging();
					this._LogisticSeason = value;
					this.SendPropertyChanged("LogisticSeason");
					this.OnLogisticSeasonChanged();
				}
			}
		}
		
		[Column(Storage="_HandlingHKCCS", DbType="Int")]
		public System.Nullable<int> HandlingHKCCS
		{
			get
			{
				return this._HandlingHKCCS;
			}
			set
			{
				if ((this._HandlingHKCCS != value))
				{
					this.OnHandlingHKCCSChanging(value);
					this.SendPropertyChanging();
					this._HandlingHKCCS = value;
					this.SendPropertyChanged("HandlingHKCCS");
					this.OnHandlingHKCCSChanged();
				}
			}
		}
		
		[Column(Storage="_HandingForwarder", DbType="Int")]
		public System.Nullable<int> HandingForwarder
		{
			get
			{
				return this._HandingForwarder;
			}
			set
			{
				if ((this._HandingForwarder != value))
				{
					this.OnHandingForwarderChanging(value);
					this.SendPropertyChanging();
					this._HandingForwarder = value;
					this.SendPropertyChanged("HandingForwarder");
					this.OnHandingForwarderChanged();
				}
			}
		}
		
		[Column(Storage="_Freight", DbType="Int")]
		public System.Nullable<int> Freight
		{
			get
			{
				return this._Freight;
			}
			set
			{
				if ((this._Freight != value))
				{
					this.OnFreightChanging(value);
					this.SendPropertyChanging();
					this._Freight = value;
					this.SendPropertyChanged("Freight");
					this.OnFreightChanged();
				}
			}
		}
		
		[Column(Storage="_InlandHandling", DbType="Int")]
		public System.Nullable<int> InlandHandling
		{
			get
			{
				return this._InlandHandling;
			}
			set
			{
				if ((this._InlandHandling != value))
				{
					this.OnInlandHandlingChanging(value);
					this.SendPropertyChanging();
					this._InlandHandling = value;
					this.SendPropertyChanged("InlandHandling");
					this.OnInlandHandlingChanged();
				}
			}
		}
		
		[Column(Storage="_TransShipment", DbType="Int")]
		public System.Nullable<int> TransShipment
		{
			get
			{
				return this._TransShipment;
			}
			set
			{
				if ((this._TransShipment != value))
				{
					this.OnTransShipmentChanging(value);
					this.SendPropertyChanging();
					this._TransShipment = value;
					this.SendPropertyChanged("TransShipment");
					this.OnTransShipmentChanged();
				}
			}
		}
		
		[Column(Storage="_LeadTimeDay", DbType="Int")]
		public System.Nullable<int> LeadTimeDay
		{
			get
			{
				return this._LeadTimeDay;
			}
			set
			{
				if ((this._LeadTimeDay != value))
				{
					this.OnLeadTimeDayChanging(value);
					this.SendPropertyChanging();
					this._LeadTimeDay = value;
					this.SendPropertyChanged("LeadTimeDay");
					this.OnLeadTimeDayChanged();
				}
			}
		}
		
		[Column(Storage="_ReceivingEndPoint", DbType="VarChar(100)")]
		public string ReceivingEndPoint
		{
			get
			{
				return this._ReceivingEndPoint;
			}
			set
			{
				if ((this._ReceivingEndPoint != value))
				{
					this.OnReceivingEndPointChanging(value);
					this.SendPropertyChanging();
					this._ReceivingEndPoint = value;
					this.SendPropertyChanged("ReceivingEndPoint");
					this.OnReceivingEndPointChanged();
				}
			}
		}
		
		[Column(Storage="_IsDefault", DbType="Bit")]
		public System.Nullable<bool> IsDefault
		{
			get
			{
				return this._IsDefault;
			}
			set
			{
				if ((this._IsDefault != value))
				{
					this.OnIsDefaultChanging(value);
					this.SendPropertyChanging();
					this._IsDefault = value;
					this.SendPropertyChanged("IsDefault");
					this.OnIsDefaultChanged();
				}
			}
		}
		
		[Column(Storage="_TradeMethodCde", DbType="VarChar(50)")]
		public string TradeMethodCde
		{
			get
			{
				return this._TradeMethodCde;
			}
			set
			{
				if ((this._TradeMethodCde != value))
				{
					this.OnTradeMethodCdeChanging(value);
					this.SendPropertyChanging();
					this._TradeMethodCde = value;
					this.SendPropertyChanged("TradeMethodCde");
					this.OnTradeMethodCdeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.EmailNotify")]
	public partial class EmailNotify : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OID;
		
		private string _NotifyType;
		
		private string _ToUser;
		
		private string _CcUser;
		
		private string _BccUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOIDChanging(int value);
    partial void OnOIDChanged();
    partial void OnNotifyTypeChanging(string value);
    partial void OnNotifyTypeChanged();
    partial void OnToUserChanging(string value);
    partial void OnToUserChanged();
    partial void OnCcUserChanging(string value);
    partial void OnCcUserChanged();
    partial void OnBccUserChanging(string value);
    partial void OnBccUserChanged();
    #endregion
		
		public EmailNotify()
		{
			OnCreated();
		}
		
		[Column(Storage="_OID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int OID
		{
			get
			{
				return this._OID;
			}
			set
			{
				if ((this._OID != value))
				{
					this.OnOIDChanging(value);
					this.SendPropertyChanging();
					this._OID = value;
					this.SendPropertyChanged("OID");
					this.OnOIDChanged();
				}
			}
		}
		
		[Column(Storage="_NotifyType", DbType="NVarChar(100)")]
		public string NotifyType
		{
			get
			{
				return this._NotifyType;
			}
			set
			{
				if ((this._NotifyType != value))
				{
					this.OnNotifyTypeChanging(value);
					this.SendPropertyChanging();
					this._NotifyType = value;
					this.SendPropertyChanged("NotifyType");
					this.OnNotifyTypeChanged();
				}
			}
		}
		
		[Column(Storage="_ToUser", DbType="NVarChar(500)")]
		public string ToUser
		{
			get
			{
				return this._ToUser;
			}
			set
			{
				if ((this._ToUser != value))
				{
					this.OnToUserChanging(value);
					this.SendPropertyChanging();
					this._ToUser = value;
					this.SendPropertyChanged("ToUser");
					this.OnToUserChanged();
				}
			}
		}
		
		[Column(Storage="_CcUser", DbType="NVarChar(500)")]
		public string CcUser
		{
			get
			{
				return this._CcUser;
			}
			set
			{
				if ((this._CcUser != value))
				{
					this.OnCcUserChanging(value);
					this.SendPropertyChanging();
					this._CcUser = value;
					this.SendPropertyChanged("CcUser");
					this.OnCcUserChanged();
				}
			}
		}
		
		[Column(Storage="_BccUser", DbType="NVarChar(500)")]
		public string BccUser
		{
			get
			{
				return this._BccUser;
			}
			set
			{
				if ((this._BccUser != value))
				{
					this.OnBccUserChanging(value);
					this.SendPropertyChanging();
					this._BccUser = value;
					this.SendPropertyChanged("BccUser");
					this.OnBccUserChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.SupplierFactory")]
	public partial class SupplierFactory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _OID;
		
		private string _ERPSupplier;
		
		private string _SupplierFactoryCode;
		
		private string _Description;
		
		private string _DescriptionCN;
		
		private string _RegionCode;
		
		private string _CountryCode;
		
		private EntityRef<SupplierProfile> _SupplierProfile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOIDChanging(long value);
    partial void OnOIDChanged();
    partial void OnERPSupplierChanging(string value);
    partial void OnERPSupplierChanged();
    partial void OnSupplierFactoryCodeChanging(string value);
    partial void OnSupplierFactoryCodeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDescriptionCNChanging(string value);
    partial void OnDescriptionCNChanged();
    partial void OnRegionCodeChanging(string value);
    partial void OnRegionCodeChanged();
    partial void OnCountryCodeChanging(string value);
    partial void OnCountryCodeChanged();
    #endregion
		
		public SupplierFactory()
		{
			this._SupplierProfile = default(EntityRef<SupplierProfile>);
			OnCreated();
		}
		
		[Column(Storage="_OID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long OID
		{
			get
			{
				return this._OID;
			}
			set
			{
				if ((this._OID != value))
				{
					this.OnOIDChanging(value);
					this.SendPropertyChanging();
					this._OID = value;
					this.SendPropertyChanged("OID");
					this.OnOIDChanged();
				}
			}
		}
		
		[Column(Storage="_ERPSupplier", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ERPSupplier
		{
			get
			{
				return this._ERPSupplier;
			}
			set
			{
				if ((this._ERPSupplier != value))
				{
					if (this._SupplierProfile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnERPSupplierChanging(value);
					this.SendPropertyChanging();
					this._ERPSupplier = value;
					this.SendPropertyChanged("ERPSupplier");
					this.OnERPSupplierChanged();
				}
			}
		}
		
		[Column(Storage="_SupplierFactoryCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SupplierFactoryCode
		{
			get
			{
				return this._SupplierFactoryCode;
			}
			set
			{
				if ((this._SupplierFactoryCode != value))
				{
					this.OnSupplierFactoryCodeChanging(value);
					this.SendPropertyChanging();
					this._SupplierFactoryCode = value;
					this.SendPropertyChanged("SupplierFactoryCode");
					this.OnSupplierFactoryCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Description", DbType="NVarChar(100)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_DescriptionCN", DbType="NVarChar(300)")]
		public string DescriptionCN
		{
			get
			{
				return this._DescriptionCN;
			}
			set
			{
				if ((this._DescriptionCN != value))
				{
					this.OnDescriptionCNChanging(value);
					this.SendPropertyChanging();
					this._DescriptionCN = value;
					this.SendPropertyChanged("DescriptionCN");
					this.OnDescriptionCNChanged();
				}
			}
		}
		
		[Column(Storage="_RegionCode", DbType="VarChar(30)")]
		public string RegionCode
		{
			get
			{
				return this._RegionCode;
			}
			set
			{
				if ((this._RegionCode != value))
				{
					this.OnRegionCodeChanging(value);
					this.SendPropertyChanging();
					this._RegionCode = value;
					this.SendPropertyChanged("RegionCode");
					this.OnRegionCodeChanged();
				}
			}
		}
		
		[Column(Storage="_CountryCode", DbType="VarChar(30)")]
		public string CountryCode
		{
			get
			{
				return this._CountryCode;
			}
			set
			{
				if ((this._CountryCode != value))
				{
					this.OnCountryCodeChanging(value);
					this.SendPropertyChanging();
					this._CountryCode = value;
					this.SendPropertyChanged("CountryCode");
					this.OnCountryCodeChanged();
				}
			}
		}
		
		[Association(Name="SupplierProfile_SupplierFactory", Storage="_SupplierProfile", ThisKey="ERPSupplier", OtherKey="ERPSupplier", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public SupplierProfile SupplierProfile
		{
			get
			{
				return this._SupplierProfile.Entity;
			}
			set
			{
				SupplierProfile previousValue = this._SupplierProfile.Entity;
				if (((previousValue != value) 
							|| (this._SupplierProfile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SupplierProfile.Entity = null;
						previousValue.SupplierFactories.Remove(this);
					}
					this._SupplierProfile.Entity = value;
					if ((value != null))
					{
						value.SupplierFactories.Add(this);
						this._ERPSupplier = value.ERPSupplier;
					}
					else
					{
						this._ERPSupplier = default(string);
					}
					this.SendPropertyChanged("SupplierProfile");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class GetERPSupplierResult
	{
		
		private string _ERPSupplier;
		
		private string _DeliveryAddressCode;
		
		private string _ERPSupplierName;
		
		private string _Address1;
		
		private string _Address2;
		
		private string _Address3;
		
		private string _Address4;
		
		private string _Address5;
		
		private string _PostCode1;
		
		private string _PostCode2;
		
		private string _TEL;
		
		private string _Currency;
		
		private string _PaymentMethod;
		
		private string _AlphaSequenceField;
		
		private char _PaymentTermsType;
		
		private decimal _PaymentTermsDays;
		
		private decimal _PaymentTermsPeriodicRange;
		
		private string _FAX;
		
		private string _CountryCode;
		
		public GetERPSupplierResult()
		{
		}
		
		[Column(Storage="_ERPSupplier", DbType="Char(8) NOT NULL", CanBeNull=false)]
		public string ERPSupplier
		{
			get
			{
				return this._ERPSupplier;
			}
			set
			{
				if ((this._ERPSupplier != value))
				{
					this._ERPSupplier = value;
				}
			}
		}
		
		[Column(Storage="_DeliveryAddressCode", DbType="Char(3) NOT NULL", CanBeNull=false)]
		public string DeliveryAddressCode
		{
			get
			{
				return this._DeliveryAddressCode;
			}
			set
			{
				if ((this._DeliveryAddressCode != value))
				{
					this._DeliveryAddressCode = value;
				}
			}
		}
		
		[Column(Storage="_ERPSupplierName", DbType="Char(35) NOT NULL", CanBeNull=false)]
		public string ERPSupplierName
		{
			get
			{
				return this._ERPSupplierName;
			}
			set
			{
				if ((this._ERPSupplierName != value))
				{
					this._ERPSupplierName = value;
				}
			}
		}
		
		[Column(Storage="_Address1", DbType="Char(35) NOT NULL", CanBeNull=false)]
		public string Address1
		{
			get
			{
				return this._Address1;
			}
			set
			{
				if ((this._Address1 != value))
				{
					this._Address1 = value;
				}
			}
		}
		
		[Column(Storage="_Address2", DbType="Char(35) NOT NULL", CanBeNull=false)]
		public string Address2
		{
			get
			{
				return this._Address2;
			}
			set
			{
				if ((this._Address2 != value))
				{
					this._Address2 = value;
				}
			}
		}
		
		[Column(Storage="_Address3", DbType="Char(35) NOT NULL", CanBeNull=false)]
		public string Address3
		{
			get
			{
				return this._Address3;
			}
			set
			{
				if ((this._Address3 != value))
				{
					this._Address3 = value;
				}
			}
		}
		
		[Column(Storage="_Address4", DbType="Char(25) NOT NULL", CanBeNull=false)]
		public string Address4
		{
			get
			{
				return this._Address4;
			}
			set
			{
				if ((this._Address4 != value))
				{
					this._Address4 = value;
				}
			}
		}
		
		[Column(Storage="_Address5", DbType="Char(25) NOT NULL", CanBeNull=false)]
		public string Address5
		{
			get
			{
				return this._Address5;
			}
			set
			{
				if ((this._Address5 != value))
				{
					this._Address5 = value;
				}
			}
		}
		
		[Column(Storage="_PostCode1", DbType="Char(5) NOT NULL", CanBeNull=false)]
		public string PostCode1
		{
			get
			{
				return this._PostCode1;
			}
			set
			{
				if ((this._PostCode1 != value))
				{
					this._PostCode1 = value;
				}
			}
		}
		
		[Column(Storage="_PostCode2", DbType="Char(5) NOT NULL", CanBeNull=false)]
		public string PostCode2
		{
			get
			{
				return this._PostCode2;
			}
			set
			{
				if ((this._PostCode2 != value))
				{
					this._PostCode2 = value;
				}
			}
		}
		
		[Column(Storage="_TEL", DbType="Char(20) NOT NULL", CanBeNull=false)]
		public string TEL
		{
			get
			{
				return this._TEL;
			}
			set
			{
				if ((this._TEL != value))
				{
					this._TEL = value;
				}
			}
		}
		
		[Column(Storage="_Currency", DbType="Char(3) NOT NULL", CanBeNull=false)]
		public string Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this._Currency = value;
				}
			}
		}
		
		[Column(Storage="_PaymentMethod", DbType="Char(3) NOT NULL", CanBeNull=false)]
		public string PaymentMethod
		{
			get
			{
				return this._PaymentMethod;
			}
			set
			{
				if ((this._PaymentMethod != value))
				{
					this._PaymentMethod = value;
				}
			}
		}
		
		[Column(Storage="_AlphaSequenceField", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string AlphaSequenceField
		{
			get
			{
				return this._AlphaSequenceField;
			}
			set
			{
				if ((this._AlphaSequenceField != value))
				{
					this._AlphaSequenceField = value;
				}
			}
		}
		
		[Column(Storage="_PaymentTermsType", DbType="Char(1) NOT NULL")]
		public char PaymentTermsType
		{
			get
			{
				return this._PaymentTermsType;
			}
			set
			{
				if ((this._PaymentTermsType != value))
				{
					this._PaymentTermsType = value;
				}
			}
		}
		
		[Column(Storage="_PaymentTermsDays", DbType="Decimal(0,0) NOT NULL")]
		public decimal PaymentTermsDays
		{
			get
			{
				return this._PaymentTermsDays;
			}
			set
			{
				if ((this._PaymentTermsDays != value))
				{
					this._PaymentTermsDays = value;
				}
			}
		}
		
		[Column(Storage="_PaymentTermsPeriodicRange", DbType="Decimal(0,0) NOT NULL")]
		public decimal PaymentTermsPeriodicRange
		{
			get
			{
				return this._PaymentTermsPeriodicRange;
			}
			set
			{
				if ((this._PaymentTermsPeriodicRange != value))
				{
					this._PaymentTermsPeriodicRange = value;
				}
			}
		}
		
		[Column(Storage="_FAX", DbType="Char(20) NOT NULL", CanBeNull=false)]
		public string FAX
		{
			get
			{
				return this._FAX;
			}
			set
			{
				if ((this._FAX != value))
				{
					this._FAX = value;
				}
			}
		}
		
		[Column(Storage="_CountryCode", DbType="Char(3) NOT NULL", CanBeNull=false)]
		public string CountryCode
		{
			get
			{
				return this._CountryCode;
			}
			set
			{
				if ((this._CountryCode != value))
				{
					this._CountryCode = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
